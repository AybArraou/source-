cscope 15 $HOME/Minix -q 0000009514 0001840999
	@FP_bias.h

14 
	#SGL_BIAS
 127

	)

15 
	#DBL_BIAS
 1023

	)

16 
	#EXT_BIAS
 0

	)

23 
	#SGL_MAX
 254

	)

24 
	#SGL_MIN
 1

	)

25 
	#DBL_MAX
 2046

	)

26 
	#DBL_MIN
 1

	)

27 
	#EXT_MAX
 16383

	)

28 
	#EXT_MIN
 -16382

	)

	@FP_shift.h

12 
	#CARRYBIT
 0x80000000L

	)

13 
	#NORMBIT
 0x80000000L

	)

14 
	#EXP_STORE
 16

	)

18 
	#SGL_EXPSHIFT
 7

	)

19 
	#SGL_M1LEFT
 8

	)

20 
	#SGL_ZERO
 0xffffff80L

	)

21 
	#SGL_EXACT
 0xff

	)

22 
	#SGL_RUNPACK
 
SGL_M1LEFT


	)

24 
	#SGL_ROUNDUP
 0x80

	)

25 
	#SGL_CARRYOUT
 0x01000000L

	)

26 
	#SGL_MASK
 0x007fffffL

	)

31 
	#DBL_EXPSHIFT
 4

	)

33 
	#DBL_M1LEFT
 11

	)

35 
	#DBL_RPACK
 (32-
DBL_M1LEFT
)

	)

36 
	#DBL_LPACK
 
DBL_M1LEFT


	)

40 
	#DBL_ZERO
 0xfffffd00L

	)

42 
	#DBL_EXACT
 0x7ff

	)

44 
	#DBL_RUNPACK
 
DBL_M1LEFT


	)

45 
	#DBL_LUNPACK
 (32-
DBL_RUNPACK
)

	)

47 
	#DBL_ROUNDUP
 0x400

	)

48 
	#DBL_CARRYOUT
 0x00200000L

	)

49 
	#DBL_MASK
 0x000fffffL

	)

	@FP_trap.h

14 
	#EIOVFL
 3

	)

15 
	#EFOVFL
 4

	)

16 
	#EFUNFL
 5

	)

17 
	#EIDIVZ
 6

	)

18 
	#EFDIVZ
 7

	)

19 
	#EIUND
 8

	)

20 
	#EFUND
 9

	)

21 
	#ECONV
 10

	)

22 
	#å≠
(
x
Ë
	`_Âåp
(x)

	)

	@FP_types.h

25 #i‚de‡
__FPTYPES


26 
	#__FPTYPES


	)

29 
	mh_32
;

30 
	ml_32
;

31 } 
	tB64
;

33 
	tSINGLE
;

36 
	md
[2];

37 } 
	tDOUBLE
;

40 
	msign
;

41 
	mexp
;

42 
B64
 
	mm™tisß
;

43 
	#m1
 
m™tisß
.
h_32


	)

44 
	#m2
 
m™tisß
.
l_32


	)

45 } 
	tEXTEND
;

47 
	s„f4_ªtu∫s
 {

48 
	me
;

49 
SINGLE
 
	mf
;

52 
	s„f8_ªtu∫s
 {

53 
	me
;

54 
DOUBLE
 
	mf
;

57 
	sfif4_ªtu∫s
 {

58 
SINGLE
 
	mù¨t
;

59 
SINGLE
 
	mÂ¨t
;

62 
	sfif8_ªtu∫s
 {

63 
DOUBLE
 
	mù¨t
;

64 
DOUBLE
 
	mÂ¨t
;

67 #i‡
__STDC__


68 
	#_PROTOTYPE
(
fun˘i⁄
, 
∑øms
Ëfun˘i⁄ 
	)
params

70 
	#_PROTOTYPE
(
fun˘i⁄
, 
∑øms
Ë
	`fun˘i⁄
()

	)

72 
_PROTOTYPE
–
add_ext
, (
EXTEND
 *
e1
, EXTEND *
e2
));

73 
_PROTOTYPE
–
mul_ext
, (
EXTEND
 *
e1
, EXTEND *
e2
));

74 
_PROTOTYPE
–
div_ext
, (
EXTEND
 *
e1
, EXTEND *
e2
));

75 
_PROTOTYPE
–
sub_ext
, (
EXTEND
 *
e1
, EXTEND *
e2
));

76 
_PROTOTYPE
–
s·_ext
, (
EXTEND
 *
e1
, EXTEND *
e2
));

77 
_PROTOTYPE
–
ƒm_ext
, (
EXTEND
 *
e1
));

78 
_PROTOTYPE
–
zrf_ext
, (
EXTEND
 *
e1
));

79 
_PROTOTYPE
–
exãnd
, (*
‰om
, 
EXTEND
 *
to
, 
size
));

80 
_PROTOTYPE
–
com∑˘
, (
EXTEND
 *
‰om
, *
to
, 
size
));

81 
_PROTOTYPE
–
_Âåp
, ());

82 
_PROTOTYPE
–
adf4
, (
SINGLE
 
s2
, SINGLE 
s1
));

83 
_PROTOTYPE
–
adf8
, (
DOUBLE
 
s2
, DOUBLE 
s1
));

84 
_PROTOTYPE
–
sbf4
, (
SINGLE
 
s2
, SINGLE 
s1
));

85 
_PROTOTYPE
–
sbf8
, (
DOUBLE
 
s2
, DOUBLE 
s1
));

86 
_PROTOTYPE
–
dvf4
, (
SINGLE
 
s2
, SINGLE 
s1
));

87 
_PROTOTYPE
–
dvf8
, (
DOUBLE
 
s2
, DOUBLE 
s1
));

88 
_PROTOTYPE
–
mlf4
, (
SINGLE
 
s2
, SINGLE 
s1
));

89 
_PROTOTYPE
–
mlf8
, (
DOUBLE
 
s2
, DOUBLE 
s1
));

90 
_PROTOTYPE
–
ngf4
, (
SINGLE
 
f
));

91 
_PROTOTYPE
–
ngf8
, (
DOUBLE
 
f
));

92 
_PROTOTYPE
–
zrf4
, (
SINGLE
 *
l
));

93 
_PROTOTYPE
–
zrf8
, (
DOUBLE
 *
z
));

94 
_PROTOTYPE
–
cff4
, (
DOUBLE
 
§c
));

95 
_PROTOTYPE
–
cff8
, (
SINGLE
 
§c
));

96 
_PROTOTYPE
–
cif4
, (
ss
, 
§c
));

97 
_PROTOTYPE
–
cif8
, (
ss
, 
§c
));

98 
_PROTOTYPE
–
cuf4
, (
ss
, 
§c
));

99 
_PROTOTYPE
–
cuf8
, (
ss
, 
§c
));

100 
_PROTOTYPE
–
cfu
, (
ds
, 
ss
, 
DOUBLE
 
§c
));

101 
_PROTOTYPE
–
cfi
, (
ds
, 
ss
, 
DOUBLE
 
§c
));

102 
_PROTOTYPE
–
cmf4
, (
SINGLE
 
s2
, SINGLE 
s1
));

103 
_PROTOTYPE
–
cmf8
, (
DOUBLE
 
d1
, DOUBLE 
d2
));

104 
_PROTOTYPE
–
„f4
, (
„f4_ªtu∫s
 *
r
, 
SINGLE
 
s1
));

105 
_PROTOTYPE
–
„f8
, (
„f8_ªtu∫s
 *
r
, 
DOUBLE
 
s1
));

106 
_PROTOTYPE
–
fif4
, (
fif4_ªtu∫s
 *
p
, 
SINGLE
 
x
, SINGLE 
y
));

107 
_PROTOTYPE
–
fif8
, (
fif8_ªtu∫s
 *
p
, 
DOUBLE
 
x
, DOUBLE 
y
));

109 
_PROTOTYPE
–
b64_s·
, (
B64
 *, ));

110 
_PROTOTYPE
–
b64_ls·
, (
B64
 *));

111 
_PROTOTYPE
–
b64_rs·
, (
B64
 *));

112 
_PROTOTYPE
–
b64_add
, (
B64
 *, B64 *));

	@__exit.c

1 
	#_exô
 
__exô


	)

2 
	~<lib.h
>

3 
	~<uni°d.h
>

5 
PUBLIC
 
	$_exô
(
°©us
)

6 
°©us
;

8 
mesßge
 
m
;

10 
m
.
m1_i1
 = 
°©us
;

11 
	`_sysˇŒ
(
MM
, 
EXIT
, &
m
);

12 
	}
}

	@_access.c

1 
	~<lib.h
>

2 
	#ac˚ss
 
_ac˚ss


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
	$ac˚ss
(
«me
, 
mode
)

6 
_CONST
 *
«me
;

7 
mode
;

9 
mesßge
 
m
;

11 
m
.
m3_i2
 = 
mode
;

12 
	`_lﬂd«me
(
«me
, &
m
);

13 (
	`_sysˇŒ
(
FS
, 
ACCESS
, &
m
));

14 
	}
}

	@_alarm.c

1 
	~<lib.h
>

2 
	#Æ¨m
 
_Æ¨m


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
	$Æ¨m
(
£c
)

6 
£c
;

8 
mesßge
 
m
;

10 
m
.
m1_i1
 = (Ë
£c
;

11 –(Ë
	`_sysˇŒ
(
MM
, 
ALARM
, &
m
));

12 
	}
}

	@_brk.c

1 
	~<lib.h
>

2 
	#brk
 
_brk


	)

3 
	#sbrk
 
_sbrk


	)

4 
	~<uni°d.h
>

6 *
_brksize
;

17 
PUBLIC
 
	$brk
(
addr
)

18 *
addr
;

20 
mesßge
 
m
;

22 
m
.
m1_p1
 = 
addr
;

23 i‡(
	`_sysˇŒ
(
MM
, 
BRK
, &
m
) < 0) (-1);

24 
_brksize
 = 
m
.
m2_p1
;

26 
	}
}

29 
PUBLIC
 *
	$sbrk
(
ö¸
)

30 
ö¸
;

32 *
√wsize
, *
ﬁdsize
;

34 
ﬁdsize
 = 
_brksize
;

35 
√wsize
 = 
_brksize
 + 
ö¸
;

36 i‡(
ö¸
 > 0 && 
√wsize
 < 
ﬁdsize
 || incr < 0 &&Çewsize > oldsize)

38 i‡(
	`brk
(
√wsize
) == 0)

39 (
ﬁdsize
);

42 
	}
}

	@_cfgetispeed.c

7 
	~<ãrmios.h
>

9 
•ìd_t
 
	$_cfgëi•ìd
(c⁄° 
ãrmios
 *
ãrmios_p
)

11  
ãrmios_p
->
c_i•ìd
;

12 
	}
}

	@_cfgetospeed.c

7 
	~<ãrmios.h
>

9 
•ìd_t
 
	$_cfgëo•ìd
(c⁄° 
ãrmios
 *
ãrmios_p
)

11  
ãrmios_p
->
c_o•ìd
;

12 
	}
}

	@_cfsetispeed.c

7 
	~<ãrmios.h
>

9 
	$_cf£ti•ìd
(
ãrmios
 *
ãrmios_p
, 
•ìd_t
 
•ìd
)

11 
ãrmios_p
->
c_i•ìd

•ìd
;

13 
	}
}

	@_cfsetospeed.c

7 
	~<ãrmios.h
>

9 
	$_cf£to•ìd
(
ãrmios
 *
ãrmios_p
, 
•ìd_t
 
•ìd
)

11 
ãrmios_p
->
c_o•ìd

•ìd
;

13 
	}
}

	@_chdir.c

1 
	~<lib.h
>

2 
	#chdú
 
_chdú


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
	$chdú
(
«me
)

6 
_CONST
 *
«me
;

8 
mesßge
 
m
;

10 
	`_lﬂd«me
(
«me
, &
m
);

11 (
	`_sysˇŒ
(
FS
, 
CHDIR
, &
m
));

12 
	}
}

	@_chmod.c

1 
	~<lib.h
>

2 
	#chmod
 
_chmod


	)

3 
	~<sys/°©.h
>

5 
PUBLIC
 
	$chmod
(
«me
, 
mode
)

6 
_CONST
 *
«me
;

7 
Mode_t
 
mode
;

9 
mesßge
 
m
;

11 
m
.
m3_i2
 = 
mode
;

12 
	`_lﬂd«me
(
«me
, &
m
);

13 (
	`_sysˇŒ
(
FS
, 
CHMOD
, &
m
));

14 
	}
}

	@_chown.c

1 
	~<lib.h
>

2 
	#chown
 
_chown


	)

3 
	~<°rög.h
>

4 
	~<uni°d.h
>

6 
PUBLIC
 
	$chown
(
«me
, 
ow√r
, 
gΩ
)

7 
_CONST
 *
«me
;

8 
Uid_t
 
ow√r
;

9 
Gid_t
 
gΩ
;

11 
mesßge
 
m
;

13 
m
.
m1_i1
 = 
	`°æí
(
«me
) + 1;

14 
m
.
m1_i2
 = 
ow√r
;

15 
m
.
m1_i3
 = 
gΩ
;

16 
m
.
m1_p1
 = (*Ë
«me
;

17 (
	`_sysˇŒ
(
FS
, 
CHOWN
, &
m
));

18 
	}
}

	@_chroot.c

1 
	~<lib.h
>

2 
	#chroŸ
 
_chroŸ


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
	$chroŸ
(
«me
)

6 
_CONST
 *
«me
;

8 
mesßge
 
m
;

10 
	`_lﬂd«me
(
«me
, &
m
);

11 (
	`_sysˇŒ
(
FS
, 
CHROOT
, &
m
));

12 
	}
}

	@_close.c

1 
	~<lib.h
>

2 
	#˛o£
 
_˛o£


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
	$˛o£
(
fd
)

6 
fd
;

8 
mesßge
 
m
;

10 
m
.
m1_i1
 = 
fd
;

11 (
	`_sysˇŒ
(
FS
, 
CLOSE
, &
m
));

12 
	}
}

	@_closedir.c

4 
	#nû
 0

	)

5 
	~<lib.h
>

6 
	#˛o£
 
_˛o£


	)

7 
	#˛o£dú
 
_˛o£dú


	)

8 
	~<sys/ty≥s.h
>

9 
	~<dúít.h
>

10 
	~<uni°d.h
>

11 
	~<°dlib.h
>

12 
	~<î∫o.h
>

14 
	$˛o£dú
(
DIR
 *
dp
)

17 
d
;

19 i‡(
dp
 =
nû
Ë{ 
î∫o

EBADF
;  -1; }

21 
d

dp
->
_fd
;

22 
	`‰ì
((*Ë
dp
);

23  
	`˛o£
(
d
);

24 
	}
}

	@_creat.c

1 
	~<lib.h
>

2 
	#¸ót
 
_¸ót


	)

3 
	~<f˙é.h
>

5 
PUBLIC
 
	$¸ót
(
«me
, 
mode
)

6 
_CONST
 *
«me
;

7 
Mode_t
 
mode
;

9 
mesßge
 
m
;

11 
m
.
m3_i2
 = 
mode
;

12 
	`_lﬂd«me
(
«me
, &
m
);

13 (
	`_sysˇŒ
(
FS
, 
CREAT
, &
m
));

14 
	}
}

	@_dup.c

1 
	~<lib.h
>

2 
	#dup
 
_dup


	)

3 
	#f˙é
 
_f˙é


	)

4 
	~<f˙é.h
>

5 
	~<uni°d.h
>

7 
PUBLIC
 
	$dup
(
fd
)

8 
fd
;

10 (
	`f˙é
(
fd
, 
F_DUPFD
, 0));

11 
	}
}

	@_dup2.c

1 
	~<lib.h
>

2 
	#˛o£
 
_˛o£


	)

3 
	#dup2
 
_dup2


	)

4 
	#f˙é
 
_f˙é


	)

5 
	~<f˙é.h
>

6 
	~<uni°d.h
>

8 
PUBLIC
 
	$dup2
(
fd
, 
fd2
)

9 
fd
, 
fd2
;

15 i‡(
fd2
 < 0 || fd2 > 
OPEN_MAX
) {

16 
î∫o
 = 
EBADF
;

21 i‡(
	`f˙é
(
fd
, 
F_GETFL
) < 0) {

26 i‡(
fd
 =
fd2
) (fd2);

27 
	`˛o£
(
fd2
);

28 (
	`f˙é
(
fd
, 
F_DUPFD
, 
fd2
));

30 
	}
}

	@_exec.c

1 
	~<lib.h
>

2 
	#exe˛
 
_exe˛


	)

3 
	#exe˛e
 
_exe˛e


	)

4 
	#execv
 
_execv


	)

5 
	#execve
 
_execve


	)

6 
	#sbrk
 
_sbrk


	)

7 
	~<möix/mölib.h
>

8 
	~<°d¨g.h
>

9 
	~<°rög.h
>

10 
	~<uni°d.h
>

12 **
ívú⁄
;

14 
	#PTRSIZE
 ((*))

	)

16 #ifde‡
_ANSI


17 
PUBLIC
 
	$exe˛
(c⁄° *
«me
, c⁄° *
¨g
, ...)

19 
PUBLIC
 
	$exe˛
(
«me
)

20 *
«me
;

23 
va_li°
 
¨gp
;

24 
ªsu…
;

26 
	`va_°¨t
(
¨gp
, 
«me
);

31 
ªsu…
 = 
	`execve
(
«me
, (**Ë
¨gp
, 
ívú⁄
);

32 
	`va_íd
(
¨gp
);

33 (
ªsu…
);

34 
	}
}

37 #ifde‡
_ANSI


38 
PUBLIC
 
	$exe˛e
(c⁄° *
«me
, c⁄° *
¨g
, ...)

40 
PUBLIC
 
	$exe˛e
(
«me
)

41 *
«me
;

44 
va_li°
 
¨gp
;

45 **
p
;

46 
ªsu…
;

48 
	`va_°¨t
(
¨gp
, 
«me
);

51 
p
 = (**Ë
¨gp
;

52 *
p
++ !
NIL_PTR
)

54 
ªsu…
 = 
	`execve
(
«me
, (**Ë
¨gp
, (**Ë*
p
);

55 
	`va_íd
(
¨gp
);

56 (
ªsu…
);

57 
	}
}

60 
PUBLIC
 
	$execv
(
«me
, 
¨gv
)

61 
_CONST
 *
«me
;

62 * 
_CONST
 
¨gv
[];

64 (
	`execve
(
«me
, 
¨gv
, 
ívú⁄
));

65 
	}
}

68 
PUBLIC
 
	$execve
(
∑th
, 
¨gv
, 
ívp
)

69 
_CONST
 *
∑th
;

70 * 
_CONST
 
¨gv
[];

71 * 
_CONST
 
ívp
[];

73 
i
, 
j
;

76 
i
 = 0;

77 i‡(
¨gv
 !
NULL
)

79 
¨gv
[
i
] !
NULL
) i++;

81 
j
 = 0;

82 i‡(
ívp
 !
NULL
)

84 
ívp
[
j
] !
NULL
) j++;

87 (
	`__execve
(
∑th
, 
¨gv
, 
ívp
, 
i
, 
j
));

88 
	}
}

91 
PUBLIC
 
	$__execve
(
∑th
, 
¨gv
, 
ívp
, 
«rgs
, 
√nvps
)

92 
_CONST
 *
∑th
;

93 * 
_CONST
 
¨gv
[];

94 * 
_CONST
 
ívp
[];

95 
«rgs
;

96 
√nvps
;

102 *
hp
, **
≠
, *
p
;

103 
i
, 
°ackbyãs
, 
≈oöãrs
, 
ovîÊow
, 
ãmp
;

104 *
°ack
;

105 
mesßge
 
m
;

108 
ovîÊow
 = 
FALSE
;

109 
≈oöãrs
 = 1 + 
«rgs
 + 1 + 
√nvps
 + 1;

110 
°ackbyãs
 = 
«rgs
 + 
√nvps
;

111 i‡(
«rgs
 < 0 || 
√nvps
 < 0 || 
°ackbyãs
 <Ç¨g†|| 
≈oöãrs
 < stackbytes)

112 
ovîÊow
 = 
TRUE
;

113 
i
 = 
PTRSIZE
; i != 0; i--) {

114 
ãmp
 = 
°ackbyãs
 + 
≈oöãrs
;

115 i‡(
ãmp
 < 
°ackbyãs
Ë
ovîÊow
 = 
TRUE
;

116 
°ackbyãs
 = 
ãmp
;

118 
≠
 = (**Ë
¨gv
;

119 
i
 = 0; i < 
«rgs
; i++) {

120 
ãmp
 = 
°ackbyãs
 + 
	`°æí
(*
≠
++);

121 i‡(
ãmp
 < 
°ackbyãs
Ë
ovîÊow
 = 
TRUE
;

122 
°ackbyãs
 = 
ãmp
;

124 
≠
 = (**Ë
ívp
;

125 
i
 = 0; i < 
√nvps
; i++) {

126 
ãmp
 = 
°ackbyãs
 + 
	`°æí
(*
≠
++);

127 i‡(
ãmp
 < 
°ackbyãs
Ë
ovîÊow
 = 
TRUE
;

128 
°ackbyãs
 = 
ãmp
;

130 
ãmp
 = 
°ackbyãs
 + 
PTRSIZE
 - 1;

131 i‡(
ãmp
 < 
°ackbyãs
Ë
ovîÊow
 = 
TRUE
;

132 
°ackbyãs
 = (
ãmp
 / 
PTRSIZE
) * PTRSIZE;

135 i‡(
ovîÊow
) {

136 
î∫o
 = 
E2BIG
;

141 
°ack
 = 
	`sbrk
(
°ackbyãs
);

142 i‡(
°ack
 == (*) -1) {

143 
î∫o
 = 
E2BIG
;

148 
≠
 = (**Ë
°ack
;

149 
hp
 = &
°ack
[
≈oöãrs
 * 
PTRSIZE
];

150 *
≠
++ = (*Ë
«rgs
;

153 
i
 = 0; i < 
«rgs
; i++) {

154 *
≠
++ = (*Ë(
hp
 - 
°ack
);

155 
p
 = *
¨gv
++;

156  (*
hp
++ = *
p
++) != 0)

159 *
≠
++ = (*Ë
NULL
;

162 
i
 = 0; i < 
√nvps
; i++) {

163 *
≠
++ = (*Ë(
hp
 - 
°ack
);

164 
p
 = *
ívp
++;

165  (*
hp
++ = *
p
++) != 0)

168 *
≠
++ = (*Ë
NULL
;

171 
m
.
m1_i1
 = 
	`°æí
(
∑th
) + 1;

172 
m
.
m1_i2
 = 
°ackbyãs
;

173 
m
.
m1_p1
 = (*Ë
∑th
;

174 
m
.
m1_p2
 = 
°ack
;

175 (Ë
	`_sysˇŒ
(
MM
, 
EXEC
, &
m
);

178 
	`sbrk
(-
°ackbyãs
);

179 (
m
.
m_ty≥
);

180 
	}
}

	@_execn.c

1 
	~<lib.h
>

2 
	~<°rög.h
>

4 
	#PTRSIZE
 (*)

	)

5 
_PROTOTYPE
–
_exe˙
, (* 
«me
));

7 
PUBLIC
 
	$_exe˙
(
«me
)

8 *
«me
;

14 
PRIVATE
 
°ack
[3 * 
PTRSIZE
];

15 
mesßge
 
m
;

17 
m
.
m1_i1
 = 
	`°æí
(
«me
) + 1;

18 
m
.
m1_i2
 = (
°ack
);

19 
m
.
m1_p1
 = 
«me
;

20 
m
.
m1_p2
 = 
°ack
;

21 (Ë
	`_sysˇŒ
(
MM
, 
EXEC
, &
m
);

22 
	}
}

	@_fcntl.c

1 
	~<lib.h
>

2 
	#f˙é
 
_f˙é


	)

3 
	~<f˙é.h
>

4 
	~<°d¨g.h
>

6 #i‡
_ANSI


7 
PUBLIC
 
	$f˙é
(
fd
, 
cmd
, ...)

9 
PUBLIC
 
	$f˙é
(
fd
, 
cmd
)

10 
fd
;

11 
cmd
;

14 
va_li°
 
¨gp
;

15 
mesßge
 
m
;

17 
	`va_°¨t
(
¨gp
, 
cmd
);

22 
m
.
m1_i3
 = 0;

23 
m
.
m1_p1
 = 
NIL_PTR
;

26 
cmd
) {

27 
F_DUPFD
:

28 
F_SETFD
:

29 
F_SETFL
:

30 
m
.
m1_i3
 = 
	`va_¨g
(
¨gp
, );

32 
F_GETLK
:

33 
F_SETLK
:

34 
F_SETLKW
:

35 
m
.
m1_p1
 = (*Ë
	`va_¨g
(
¨gp
, 
Êock
 *);

40 
	`va_íd
(
¨gp
);

41 
m
.
m1_i1
 = 
fd
;

42 
m
.
m1_i2
 = 
cmd
;

43 (
	`_sysˇŒ
(
FS
, 
FCNTL
, &
m
));

44 
	}
}

	@_fork.c

1 
	~<lib.h
>

2 
	#f‹k
 
_f‹k


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
pid_t
 
	$f‹k
()

7 
mesßge
 
m
;

9 (
	`_sysˇŒ
(
MM
, 
FORK
, &
m
));

10 
	}
}

	@_fpathconf.c

3 
	~<lib.h
>

4 
	#f°©
 
_f°©


	)

5 
	#Â©hc⁄f
 
_Â©hc⁄f


	)

6 
	~<sys/°©.h
>

7 
	~<î∫o.h
>

8 
	~<limôs.h
>

9 
	~<uni°d.h
>

10 
	~<ãrmios.h
>

12 
PUBLIC
 
	$Â©hc⁄f
(
fd
, 
«me
)

13 
fd
;

14 
«me
;

22 
°©
 
°buf
;

24 
«me
) {

25 
_PC_LINK_MAX
:

27 i‡(
	`f°©
(
fd
, &
°buf
) != 0) (-1);

28 i‡(
	`S_ISDIR
(
°buf
.
°_mode
))

31 –(Ë
LINK_MAX
);

33 
_PC_MAX_CANON
:

34 –(Ë
MAX_CANON
);

36 
_PC_MAX_INPUT
:

37 –(Ë
MAX_INPUT
);

39 
_PC_NAME_MAX
:

40 –(Ë
NAME_MAX
);

42 
_PC_PATH_MAX
:

43 –(Ë
PATH_MAX
);

45 
_PC_PIPE_BUF
:

46 –(Ë
PIPE_BUF
);

48 
_PC_CHOWN_RESTRICTED
:

49 –(Ë
_POSIX_CHOWN_RESTRICTED
);

51 
_PC_NO_TRUNC
:

52 –(Ë
_POSIX_NO_TRUNC
);

54 
_PC_VDISABLE
:

55 –(Ë
_POSIX_VDISABLE
);

58 
î∫o
 = 
EINVAL
;

61 
	}
}

	@_fstat.c

1 
	~<lib.h
>

2 
	#f°©
 
_f°©


	)

3 
	~<sys/°©.h
>

5 
PUBLIC
 
	$f°©
(
fd
, 
buf„r
)

6 
fd
;

7 
°©
 *
buf„r
;

9 
mesßge
 
m
;

11 
m
.
m1_i1
 = 
fd
;

12 
m
.
m1_p1
 = (*Ë
buf„r
;

13 (
	`_sysˇŒ
(
FS
, 
FSTAT
, &
m
));

14 
	}
}

	@_getcwd.c

5 
	#nû
 0

	)

6 
	#chdú
 
_chdú


	)

7 
	#˛o£dú
 
_˛o£dú


	)

8 
	#gëcwd
 
_gëcwd


	)

9 
	#›ídú
 
_›ídú


	)

10 
	#ªaddú
 
_ªaddú


	)

11 
	#ªwöddú
 
_ªwöddú


	)

12 
	#°©
 
_°©


	)

13 
	~<sys/ty≥s.h
>

14 
	~<sys/°©.h
>

15 
	~<î∫o.h
>

16 
	~<uni°d.h
>

17 
	~<dúít.h
>

18 
	~<limôs.h
>

19 
	~<°rög.h
>

21 
	$add∑th
(c⁄° *
∑th
, **
≠
, c⁄° *
íåy
)

26 c⁄° *
e

íåy
;

27 *
p
*
≠
;

29 *
e
 != 0)É++;

31 
e
 > 
íåy
 && 
p
 > 
∑th
) *--p = *--e;

33 i‡(
p
 =
∑th
)  -1;

34 *--
p
 = '/';

35 *
≠

p
;

37 
	}
}

39 
	$ªcovî
(*
p
)

44 
e

î∫o
, 
¶ash
;

45 *
p0
;

47 *
p
 != 0) {

48 
p0
++
p
;

50 dÿ
p
++; *p != 0 && *p != '/');

51 
¶ash
*
p
; *p= 0;

53 i‡(
	`chdú
(
p0
) < 0)  -1;

54 *
p

¶ash
;

56 
î∫o

e
;

58 
	}
}

60 *
	$gëcwd
(*
∑th
, 
size_t
 
size
)

62 
°©
 
above
, 
cuºít
, 
tmp
;

63 
dúít
 *
íåy
;

64 
DIR
 *
d
;

65 *
p
, *
up
, *
dŸdŸ
;

66 
cy˛e
;

68 i‡(
∑th
 =
nû
 || 
size
 <2Ë{ 
î∫o

EINVAL
; Çil; }

70 
p

∑th
 + 
size
;

71 *--
p
 = 0;

73 i‡(
	`°©
(".", &
cuºít
Ë< 0Ë 
nû
;

76 
dŸdŸ
= "..";

77 i‡(
	`°©
(
dŸdŸ
, &
above
Ë< 0Ë{ 
	`ªcovî
(
p
);  
nû
; }

79 i‡(
above
.
°_dev
 =
cuºít
.st_dev

80 && 
above
.
°_öo
 =
cuºít
.st_ino)

83 i‡((
d

	`›ídú
(
dŸdŸ
)Ë=
nû
Ë{ 
	`ªcovî
(
p
); Çil; }

88 
cy˛e

above
.
°_dev
 =
cuºít
.st_dev ? 0 : 1;

91 
«me
[3 + 
NAME_MAX
 + 1];

93 
tmp
.
°_öo
= 0;

94 i‡((
íåy

	`ªaddú
(
d
)Ë=
nû
) {

95 ++
cy˛e
) {

97 
	`ªwöddú
(
d
);

100 
	`˛o£dú
(
d
);

101 
î∫o

ENOENT
;

102 
	`ªcovî
(
p
);

103  
nû
;

106 i‡(
	`°rcmp
(
íåy
->
d_«me
, ".") == 0) ;

107 i‡(
	`°rcmp
(
íåy
->
d_«me
, "..") == 0) ;

109 
cy˛e
) {

112 i‡(
íåy
->
d_öo
 !
cuºít
.
°_öo
) ;

117 
	`°r˝y
(
«me
, "../");

118 
	`°r˝y
(
«me
+3, 
íåy
->
d_«me
);

119 i‡(
	`°©
(
«me
, &
tmp
) < 0) ;

122 } 
tmp
.
°_öo
 !
cuºít
.st_ino

123 || 
tmp
.
°_dev
 !
cuºít
.st_dev);

125 
up

p
;

126 i‡(
	`add∑th
(
∑th
, &
up
, 
íåy
->
d_«me
) < 0) {

127 
	`˛o£dú
(
d
);

128 
î∫o
 = 
ERANGE
;

129 
	`ªcovî
(
p
);

130  
nû
;

132 
	`˛o£dú
(
d
);

134 i‡(
	`chdú
(
dŸdŸ
Ë< 0Ë{ 
	`ªcovî
(
p
);  
nû
; }

135 
p

up
;

137 
cuºít

above
;

139 i‡(
	`ªcovî
(
p
Ë< 0Ë 
nû
;

140 i‡(*
p
 == 0) *--p = '/';

141 i‡(
p
 > 
∑th
Ë
	`°r˝y
(path,Ö);

142  
∑th
;

143 
	}
}

	@_getegid.c

1 
	~<lib.h
>

2 
	#gëegid
 
_gëegid


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
gid_t
 
	$gëegid
()

7 
mesßge
 
m
;

14 i‡(
	`_sysˇŒ
(
MM
, 
GETGID
, &
m
Ë< 0Ë ( (
gid_t
) -1);

15 –(
gid_t
Ë
m
.
m2_i1
);

16 
	}
}

	@_geteuid.c

1 
	~<lib.h
>

2 
	#gëeuid
 
_gëeuid


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
uid_t
 
	$gëeuid
()

7 
mesßge
 
m
;

14 i‡(
	`_sysˇŒ
(
MM
, 
GETUID
, &
m
Ë< 0Ë ( (
uid_t
) -1);

15 –(
uid_t
Ë
m
.
m2_i1
);

16 
	}
}

	@_getgid.c

1 
	~<lib.h
>

2 
	#gëgid
 
_gëgid


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
gid_t
 
	$gëgid
()

7 
mesßge
 
m
;

9 –(
gid_t
Ë
	`_sysˇŒ
(
MM
, 
GETGID
, &
m
));

10 
	}
}

	@_getgroups.c

8 
	~<lib.h
>

9 
	#gëgroups
 
_gëgroups


	)

10 
	~<uni°d.h
>

11 
	~<time.h
>

13 
PUBLIC
 
	$gëgroups
(
gid£tsize
, 
grou∂i°
)

14 
gid£tsize
;

15 
gid_t
 
grou∂i°
[];

18 
	}
}

	@_getpgrp.c

1 
	~<lib.h
>

2 
	#gëpgΩ
 
_gëpgΩ


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
pid_t
 
	$gëpgΩ
()

7 
mesßge
 
m
;

9 (
	`_sysˇŒ
(
MM
, 
GETPGRP
, &
m
));

10 
	}
}

	@_getpid.c

1 
	~<lib.h
>

2 
	#gëpid
 
_gëpid


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
pid_t
 
	$gëpid
()

7 
mesßge
 
m
;

9 (
	`_sysˇŒ
(
MM
, 
GETPID
, &
m
));

10 
	}
}

	@_getppid.c

1 
	~<lib.h
>

2 
	#gëµid
 
_gëµid


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
pid_t
 
	$gëµid
()

7 
mesßge
 
m
;

14 i‡(
	`_sysˇŒ
(
MM
, 
GETPID
, &
m
Ë< 0Ë ( (
pid_t
) -1);

15 –(
pid_t
Ë
m
.
m2_i1
);

16 
	}
}

	@_getuid.c

1 
	~<lib.h
>

2 
	#gëuid
 
_gëuid


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
uid_t
 
	$gëuid
()

7 
mesßge
 
m
;

9 –(
uid_t
Ë
	`_sysˇŒ
(
MM
, 
GETUID
, &
m
));

10 
	}
}

	@_ioctl.c

1 
	~<lib.h
>

2 
	#io˘l
 
_io˘l


	)

3 
	~<möix/com.h
>

4 
	~<sys/io˘l.h
>

6 
PUBLIC
 
	$io˘l
(
fd
, 
ªque°
, 
d©a
)

7 
fd
;

8 
ªque°
;

9 *
d©a
;

11 
mesßge
 
m
;

13 
m
.
TTY_LINE
 = 
fd
;

14 
m
.
TTY_REQUEST
 = 
ªque°
;

15 
m
.
ADDRESS
 = (*Ë
d©a
;

16 (
	`_sysˇŒ
(
FS
, 
IOCTL
, &
m
));

17 
	}
}

	@_isatty.c

1 
	~<lib.h
>

2 
	#ißây
 
_ißây


	)

3 
	#tcgë©å
 
_tcgë©å


	)

4 
	~<ãrmios.h
>

5 
	~<uni°d.h
>

7 
PUBLIC
 
	$ißây
(
fd
)

8 
fd
;

10 
ãrmios
 
dummy
;

12 (
	`tcgë©å
(
fd
, &
dummy
) == 0);

13 
	}
}

	@_kill.c

1 
	~<lib.h
>

2 
	#kûl
 
_kûl


	)

3 
	~<sig«l.h
>

5 
PUBLIC
 
	$kûl
(
¥oc
, 
sig
)

6 
¥oc
;

7 
sig
;

9 
mesßge
 
m
;

11 
m
.
m1_i1
 = 
¥oc
;

12 
m
.
m1_i2
 = 
sig
;

13 (
	`_sysˇŒ
(
MM
, 
KILL
, &
m
));

14 
	}
}

	@_link.c

1 
	~<lib.h
>

2 
	#lök
 
_lök


	)

3 
	~<°rög.h
>

4 
	~<uni°d.h
>

6 
PUBLIC
 
	$lök
(
«me
, 
«me2
)

7 
_CONST
 *
«me
, *
«me2
;

9 
mesßge
 
m
;

11 
m
.
m1_i1
 = 
	`°æí
(
«me
) + 1;

12 
m
.
m1_i2
 = 
	`°æí
(
«me2
) + 1;

13 
m
.
m1_p1
 = (*Ë
«me
;

14 
m
.
m1_p2
 = (*Ë
«me2
;

15 (
	`_sysˇŒ
(
FS
, 
LINK
, &
m
));

16 
	}
}

	@_longjerr.c

1 
	~<lib.h
>

2 
	#l⁄gjîr
 
_l⁄gjîr


	)

3 
	#wrôe
 
_wrôe


	)

4 
	~<möix/mölib.h
>

5 
	~<°dlib.h
>

6 
	~<°rög.h
>

7 
	~<uni°d.h
>

10 
_PROTOTYPE
–
l⁄gjîr
, ());

12 
PUBLIC
 
	$l⁄gjîr
()

14 
îrmsg
[] = "longjÉrror\n";

16 
	`wrôe
(2, 
îrmsg
, 
	`°æí
(errmsg));

17 1Ë
	`ab‹t
();

18 
	}
}

	@_lseek.c

1 
	~<lib.h
>

2 
	#l£ek
 
_l£ek


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
off_t
 
	$l£ek
(
fd
, 
off£t
, 
whí˚
)

6 
fd
;

7 
off_t
 
off£t
;

8 
whí˚
;

10 
mesßge
 
m
;

12 
m
.
m2_i1
 = 
fd
;

13 
m
.
m2_l1
 = 
off£t
;

14 
m
.
m2_i2
 = 
whí˚
;

15 i‡(
	`_sysˇŒ
(
FS
, 
LSEEK
, &
m
Ë< 0Ë–(
off_t
) -1);

16 –(
off_t
Ë
m
.
m2_l1
);

17 
	}
}

	@_mkdir.c

1 
	~<lib.h
>

2 
	#mkdú
 
_mkdú


	)

3 
	~<sys/°©.h
>

4 
	~<°rög.h
>

6 
PUBLIC
 
	$mkdú
(
«me
, 
mode
)

7 
_CONST
 *
«me
;

8 
Mode_t
 
mode
;

10 
mesßge
 
m
;

12 
m
.
m1_i1
 = 
	`°æí
(
«me
) + 1;

13 
m
.
m1_i2
 = 
mode
;

14 
m
.
m1_p1
 = (*Ë
«me
;

15 (
	`_sysˇŒ
(
FS
, 
MKDIR
, &
m
));

16 
	}
}

	@_mkfifo.c

1 
	~<lib.h
>

2 
	#mkfifo
 
_mkfifo


	)

3 
	#mknod
 
_mknod


	)

4 
	~<sys/°©.h
>

5 
	~<uni°d.h
>

7 
PUBLIC
 
	$mkfifo
(
«me
, 
mode
)

8 
_CONST
 *
«me
;

9 
Mode_t
 
mode
;

11  
	`mknod
(
«me
, 
mode
 | 
S_IFIFO
, (
Dev_t
) 0);

12 
	}
}

	@_mknod.c

1 
	~<lib.h
>

2 
	#mknod
 
_mknod


	)

3 
	~<°rög.h
>

4 
	~<°dlib.h
>

5 
	~<uni°d.h
>

7 
PUBLIC
 
	$mknod
(
«me
, 
mode
, 
dev
)

8 
_CONST
 *
«me
;

9 
Mode_t
 
mode
;

10 
Dev_t
 
dev
;

12 
mesßge
 
m
;

14 
m
.
m1_i1
 = 
	`°æí
(
«me
) + 1;

15 
m
.
m1_i2
 = 
mode
;

16 
m
.
m1_i3
 = 
dev
;

17 
m
.
m1_p1
 = (*Ë
«me
;

18 
m
.
m1_p2
 = (*) (() 0);

19 (
	`_sysˇŒ
(
FS
, 
MKNOD
, &
m
));

20 
	}
}

	@_mktemp.c

3 
	~<lib.h
>

4 
	#ac˚ss
 
_ac˚ss


	)

5 
	#gëpid
 
_gëpid


	)

6 
	#mkãmp
 
_mkãmp


	)

7 
	~<uni°d.h
>

9 
PUBLIC
 *
	$mkãmp
(
ãm∂©e
)

10 *
ãm∂©e
;

12 
k
;

13 *
p
;

14 
pid_t
 
pid
;

16 
pid
 = 
	`gëpid
();

17 
p
 = 
ãm∂©e
;

18 *
p
 != 0)Ö++;

23 *--
p
 == 'X') {

24 *
p
 = '0' + (
pid
 % 10);

25 
pid
 /= 10;

27 i‡(*++
p
 != 0) {

28 
k
 = 'a'; k <= 'z'; k++) {

29 *
p
 = 
k
;

30 i‡(
	`ac˚ss
(
ãm∂©e
, 
F_OK
) < 0) (template);

34 
	}
}

	@_mount.c

1 
	~<lib.h
>

2 
	#mou¡
 
_mou¡


	)

3 
	~<°rög.h
>

4 
	~<uni°d.h
>

6 
PUBLIC
 
	$mou¡
(
•ecül
, 
«me
, 
rwÊag
)

7 *
«me
, *
•ecül
;

8 
rwÊag
;

10 
mesßge
 
m
;

12 
m
.
m1_i1
 = 
	`°æí
(
•ecül
) + 1;

13 
m
.
m1_i2
 = 
	`°æí
(
«me
) + 1;

14 
m
.
m1_i3
 = 
rwÊag
;

15 
m
.
m1_p1
 = 
•ecül
;

16 
m
.
m1_p2
 = 
«me
;

17 (
	`_sysˇŒ
(
FS
, 
MOUNT
, &
m
));

18 
	}
}

	@_open.c

1 
	~<lib.h
>

2 
	#›í
 
_›í


	)

3 
	~<f˙é.h
>

4 
	~<°d¨g.h
>

5 
	~<°rög.h
>

7 #i‡
_ANSI


8 
PUBLIC
 
	$›í
(c⁄° *
«me
, 
Êags
, ...)

10 
PUBLIC
 
	$›í
(
«me
, 
Êags
)

11 
_CONST
 *
«me
;

12 
Êags
;

15 
va_li°
 
¨gp
;

16 
mesßge
 
m
;

18 
	`va_°¨t
(
¨gp
, 
Êags
);

19 i‡(
Êags
 & 
O_CREAT
) {

20 
m
.
m1_i1
 = 
	`°æí
(
«me
) + 1;

21 
m
.
m1_i2
 = 
Êags
;

22 
m
.
m1_i3
 = 
	`va_¨g
(
¨gp
, 
Mode_t
);

23 
m
.
m1_p1
 = (*Ë
«me
;

25 
	`_lﬂd«me
(
«me
, &
m
);

26 
m
.
m3_i2
 = 
Êags
;

28 
	`va_íd
(
¨gp
);

29  (
	`_sysˇŒ
(
FS
, 
OPEN
, &
m
));

30 
	}
}

	@_opendir.c

4 
	#nû
 0

	)

5 
	~<lib.h
>

6 
	#˛o£
 
_˛o£


	)

7 
	#f˙é
 
_f˙é


	)

8 
	#f°©
 
_f°©


	)

9 
	#›í
 
_›í


	)

10 
	#›ídú
 
_›ídú


	)

11 
	#°©
 
_°©


	)

12 
	~<sys/ty≥s.h
>

13 
	~<sys/°©.h
>

14 
	~<dúít.h
>

15 
	~<uni°d.h
>

16 
	~<°dlib.h
>

17 
	~<f˙é.h
>

18 
	~<î∫o.h
>

20 
DIR
 *
	$›ídú
(c⁄° *
«me
)

23 
d
, 
f
;

24 
DIR
 *
dp
;

25 
°©
 
°
;

28 i‡(
	`°©
(
«me
, &
°
Ë< 0Ë 
nû
;

29 i‡(!
	`S_ISDIR
(
°
.
°_mode
)Ë{ 
î∫o

ENOTDIR
;  
nû
; }

31 i‡((
d

	`›í
(
«me
, 
O_RDONLY
 | 
O_NONBLOCK
)Ë< 0Ë 
nû
;

34 i‡(
	`f°©
(
d
, &
°
) < 0

35 || (
î∫o

ENOTDIR
, !
	`S_ISDIR
(
°
.
°_mode
))

36 || (
f

	`f˙é
(
d
, 
F_GETFD
)) < 0

37 || 
	`f˙é
(
d
, 
F_SETFD
, 
f
 | 
FD_CLOEXEC
) < 0

38 || (
dp
(
DIR
 *Ë
	`mÆloc
((*dp))Ë=
nû


40 
îr

î∫o
;

41 (Ë
	`˛o£
(
d
);

42 
î∫o

îr
;

43  
nû
;

46 
dp
->
_fd

d
;

47 
dp
->
_v7
= -1;

48 
dp
->
_cou¡
= 0;

49 
dp
->
_pos
= 0;

51  
dp
;

52 
	}
}

	@_pathconf.c

3 
	~<lib.h
>

4 
	#˛o£
 
_˛o£


	)

5 
	#›í
 
_›í


	)

6 
	#∑thc⁄f
 
_∑thc⁄f


	)

7 
	~<f˙é.h
>

8 
	~<î∫o.h
>

9 
	~<uni°d.h
>

11 
PUBLIC
 
	$∑thc⁄f
(
∑th
, 
«me
)

12 
_CONST
 *
∑th
;

13 
«me
;

21 
fd
;

22 
vÆ
;

24 i‡–(
fd
 = 
	`›í
(
∑th
, 
O_RDONLY
)) < 0) (-1L);

25 
vÆ
 = 
	`Â©hc⁄f
(
fd
, 
«me
);

26 
	`˛o£
(
fd
);

27 (
vÆ
);

28 
	}
}

	@_pause.c

1 
	~<lib.h
>

2 
	#∑u£
 
_∑u£


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
	$∑u£
()

7 
mesßge
 
m
;

9 (
	`_sysˇŒ
(
MM
, 
PAUSE
, &
m
));

10 
	}
}

	@_pipe.c

1 
	~<lib.h
>

2 
	#pùe
 
_pùe


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
	$pùe
(
fûd
)

6 
fûd
[2];

8 
mesßge
 
m
;

10 i‡(
	`_sysˇŒ
(
FS
, 
PIPE
, &
m
) < 0) (-1);

11 
fûd
[0] = 
m
.
m1_i1
;

12 
fûd
[1] = 
m
.
m1_i2
;

14 
	}
}

	@_ptrace.c

1 
	~<lib.h
>

2 
	#±ø˚
 
_±ø˚


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
	$±ø˚
(
ªq
, 
pid
, 
addr
, 
d©a
)

6 
ªq
;

7 
pid_t
 
pid
;

8 
addr
;

9 
d©a
;

11 
mesßge
 
m
;

13 
m
.
m2_i1
 = 
pid
;

14 
m
.
m2_i2
 = 
ªq
;

15 
m
.
m2_l1
 = 
addr
;

16 
m
.
m2_l2
 = 
d©a
;

17 i‡(
	`_sysˇŒ
(
MM
, 
PTRACE
, &
m
) < 0) (-1);

23 i‡(
m
.
m2_l2
 =-1Ë
î∫o
 = 0;

24 (
m
.
m2_l2
);

25 
	}
}

	@_read.c

1 
	~<lib.h
>

2 
	#ªad
 
_ªad


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
ssize_t
 
	$ªad
(
fd
, 
buf„r
, 
nbyãs
)

6 
fd
;

7 *
buf„r
;

8 
size_t
 
nbyãs
;

10 
mesßge
 
m
;

12 
m
.
m1_i1
 = 
fd
;

13 
m
.
m1_i2
 = 
nbyãs
;

14 
m
.
m1_p1
 = (*Ë
buf„r
;

15 (
	`_sysˇŒ
(
FS
, 
READ
, &
m
));

16 
	}
}

	@_readdir.c

4 
	#nû
 0

	)

5 
	~<lib.h
>

6 
	#ªad
 
_ªad


	)

7 
	#ªaddú
 
_ªaddú


	)

8 
	~<sys/ty≥s.h
>

9 
	~<sys/°©.h
>

10 
	~<dúít.h
>

11 
	~<uni°d.h
>

12 
	~<°dlib.h
>

13 
	~<f˙é.h
>

14 
	~<limôs.h
>

15 
	~<î∫o.h
>

16 
	~<°rög.h
>

18 
	#v7ít
(
p
Ë((
_v7_dúe˘
 *Ë’))

	)

20 
dúít
 *
	$ªaddú
(
DIR
 *
dp
)

23 
dúít
 *
e
;

25 i‡(
dp
 =
nû
Ë{ 
î∫o

EBADF
; Çil; }

28 i‡(
dp
->
_cou¡
 <= 0) {

30 
dp
->
_cou¡

	`ªad
(dp->
_fd
, dp->
_buf
, (dp->_buf));

31 i‡(
dp
->
_cou¡
 <0Ë 
nû
;

33 
dp
->
_cou¡
/(dp->
_buf
[0]);

34 
dp
->
_±r
dp->
_buf
;

37 i‡(
dp
->
_v7
 =()-1Ëdp->_v7dp->
_buf
[0].
d_exã¡
;

40 i‡(!
dp
->
_v7
) {

42 
e
(
dúít
 *Ë
dp
->
_±r
;

45 
e
(
dúít
 *Ë
dp
->
_v7f
;

46 
e
->
d_öo

	`v7ít
(
dp
->
_±r
)->d_ino;

47 
e
->
d_exã¡
= 1;

48 
	`mem˝y
(
e
->
d_«me
, 
	`v7ít
(
dp
->
_±r
)->d_name, 14);

49 
e
->
d_«me
[14]= 0;

52 
dp
->
_±r
+1 + 
e
->
d_exã¡
;

53 
dp
->
_cou¡
-1 + 
e
->
d_exã¡
;

54 
dp
->
_pos
+(1 + 
e
->
d_exã¡
Ë* (*dp->
_±r
);

56 } 
e
->
d_öo
 == 0);

57  
e
;

58 
	}
}

	@_reboot.c

6 
	~<lib.h
>

7 
	#ªboŸ
 
_ªboŸ


	)

8 
	~<uni°d.h
>

9 
	~<°d¨g.h
>

11 
	$ªboŸ
(
how
, ...)

13 
mesßge
 
m
;

14 
va_li°
 
≠
;

16 
	`va_°¨t
(
≠
, 
how
);

17 i‡((
m
.
m1_i1
 = 
how
Ë=
RBT_MONITOR
) {

18 
m
.
m1_p1
 = 
	`va_¨g
(
≠
, *);

19 
m
.
m1_i2
 = 
	`va_¨g
(
≠
, 
size_t
);

21 
	`va_íd
(
≠
);

23  
	`_sysˇŒ
(
MM
, 
REBOOT
, &
m
);

24 
	}
}

	@_rename.c

1 
	~<lib.h
>

2 
	#ª«me
 
_ª«me


	)

3 
	~<°rög.h
>

4 
	~<°dio.h
>

6 
PUBLIC
 
	$ª«me
(
«me
, 
«me2
)

7 
_CONST
 *
«me
, *
«me2
;

9 
mesßge
 
m
;

11 
m
.
m1_i1
 = 
	`°æí
(
«me
) + 1;

12 
m
.
m1_i2
 = 
	`°æí
(
«me2
) + 1;

13 
m
.
m1_p1
 = (*Ë
«me
;

14 
m
.
m1_p2
 = (*Ë
«me2
;

15 (
	`_sysˇŒ
(
FS
, 
RENAME
, &
m
));

16 
	}
}

	@_rewinddir.c

4 
	#nû
 0

	)

5 
	~<lib.h
>

6 
	#ªwöddú
 
_ªwöddú


	)

7 
	#£ekdú
 
_£ekdú


	)

8 
	~<sys/ty≥s.h
>

9 
	~<dúít.h
>

11 
	$ªwöddú
(
DIR
 *
dp
)

13 (Ë
	`£ekdú
(
dp
, 0);

14 
	}
}

	@_rmdir.c

1 
	~<lib.h
>

2 
	#rmdú
 
_rmdú


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
	$rmdú
(
«me
)

6 
_CONST
 *
«me
;

8 
mesßge
 
m
;

10 
	`_lﬂd«me
(
«me
, &
m
);

11 (
	`_sysˇŒ
(
FS
, 
RMDIR
, &
m
));

12 
	}
}

	@_seekdir.c

4 
	#nû
 0

	)

5 
	~<lib.h
>

6 
	#l£ek
 
_l£ek


	)

7 
	#ªaddú
 
_ªaddú


	)

8 
	#£ekdú
 
_£ekdú


	)

9 
	~<sys/ty≥s.h
>

10 
	~<dúít.h
>

11 
	~<uni°d.h
>

12 
	~<î∫o.h
>

14 
	$£ekdú
(
DIR
 *
dp
, 
off_t
 
pos
)

17 
off
;

19 i‡(
dp
 =
nû
Ë{ 
î∫o

EBADF
;  -1; }

21 
dp
->
_cou¡
= 0;

22 
dp
->
_±r
dp->
_buf
;

24 
off

pos
 & ((
dp
->
_buf
) - 1);

25 
dp
->
_pos

pos
 - 
off
;

27 i‡(
	`l£ek
(
dp
->
_fd
, dp->
_pos
, 
SEEK_SET
) == -1)  -1;

29 
dp
->
_pos
 < 
pos
 && 
	`ªaddú
(dpË!
nû
) {}

32 
	}
}

	@_setgid.c

1 
	~<lib.h
>

2 
	#£tgid
 
_£tgid


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
	$£tgid
(
gΩ
)

6 
gid_t
 
gΩ
;

8 
mesßge
 
m
;

10 
m
.
m1_i1
 = (Ë
gΩ
;

11 (
	`_sysˇŒ
(
MM
, 
SETGID
, &
m
));

12 
	}
}

	@_setsid.c

1 
	~<lib.h
>

2 
	#£tsid
 
_£tsid


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
pid_t
 
	$£tsid
()

7 
mesßge
 
m
;

9 (
	`_sysˇŒ
(
MM
, 
SETSID
, &
m
));

10 
	}
}

	@_setuid.c

1 
	~<lib.h
>

2 
	#£tuid
 
_£tuid


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
	$£tuid
(
u§
)

6 
Uid_t
 
u§
;

8 
mesßge
 
m
;

10 
m
.
m1_i1
 = 
u§
;

11 (
	`_sysˇŒ
(
MM
, 
SETUID
, &
m
));

12 
	}
}

	@_sigaction.c

1 
	~<lib.h
>

2 
	#siga˘i⁄
 
_siga˘i⁄


	)

3 
	~<sys/sigc⁄ãxt.h
>

4 
	~<sig«l.h
>

6 
_PROTOTYPE
(
__sigªtu∫
, ());

8 
PUBLIC
 
	$siga˘i⁄
(
sig
, 
a˘
, 
ﬂ˘
)

9 
sig
;

10 
_CONST
 
siga˘i⁄
 *
a˘
;

11 
siga˘i⁄
 *
ﬂ˘
;

13 
mesßge
 
m
;

15 
m
.
m1_i2
 = 
sig
;

18 
m
.
m1_p1
 = (*Ë
a˘
;

19 
m
.
m1_p2
 = (*Ë
ﬂ˘
;

20 
m
.
m1_p3
 = (*Ë
__sigªtu∫
;

22 (
	`_sysˇŒ
(
MM
, 
SIGACTION
, &
m
));

23 
	}
}

	@_sigpending.c

1 
	~<lib.h
>

2 
	#sig≥ndög
 
_sig≥ndög


	)

3 
	~<sig«l.h
>

5 
PUBLIC
 
	$sig≥ndög
(
£t
)

6 
sig£t_t
 *
£t
;

8 
mesßge
 
m
;

10 i‡(
	`_sysˇŒ
(
MM
, 
SIGPENDING
, &
m
) < 0) (-1);

11 *
£t
 = (
sig£t_t
Ë
m
.
m2_l1
;

12 (
m
.
m_ty≥
);

13 
	}
}

	@_sigprocmask.c

1 
	~<lib.h
>

2 
	#sig¥ocmask
 
_sig¥ocmask


	)

3 
	~<sig«l.h
>

5 
PUBLIC
 
	$sig¥ocmask
(
how
, 
£t
, 
o£t
)

6 
how
;

7 
_CONST
 
sig£t_t
 *
£t
;

8 
sig£t_t
 *
o£t
;

10 
mesßge
 
m
;

12 i‡(
£t
 =(
sig£t_t
 *Ë
NULL
) {

13 
m
.
m2_i1
 = 
SIG_INQUIRE
;

14 
m
.
m2_l1
 = 0;

16 
m
.
m2_i1
 = 
how
;

17 
m
.
m2_l1
 = (Ë*
£t
;

19 i‡(
	`_sysˇŒ
(
MM
, 
SIGPROCMASK
, &
m
) < 0) (-1);

20 i‡(
o£t
 !(
sig£t_t
 *Ë
NULL
Ë*o£à(sig£t_tË(
m
.
m2_l1
);

21 (
m
.
m_ty≥
);

22 
	}
}

	@_sigreturn.c

1 
	~<lib.h
>

2 
	#sigfûl£t
 
_sigfûl£t


	)

3 
	#sigjmp
 
_sigjmp


	)

4 
	#sig¥ocmask
 
_sig¥ocmask


	)

5 
	#sigªtu∫
 
_sigªtu∫


	)

6 
	~<sys/sigc⁄ãxt.h
>

7 
	~<£tjmp.h
>

8 
	~<sig«l.h
>

10 
_PROTOTYPE
–
sigjmp
, (
jmp_buf
 
jb
, 
ªtvÆ
));

12 #i‡(
_SETJMP_SAVES_REGS
 == 0)

14 
PUBLIC
 
	$sigjmp
(
jb
, 
ªtvÆ
)

15 
jmp_buf
 
jb
;

16 
ªtvÆ
;

18 
sigc⁄ãxt
 
sc
;

20 
sc
.
sc_Êags
 = 
jb
[0].
__Êags
;

21 
sc
.
sc_mask
 = 
jb
[0].
__mask
;

23 #i‡(
CHIP
 =
INTEL
)

24 
sc
.
sc_pc
 = (Ë
jb
[0].
__pc
;

25 
sc
.
sc_•
 = (Ë
jb
[0].
__•
;

26 
sc
.
sc_Â
 = (Ë
jb
[0].
__lb
;

29 #i‡(
CHIP
 =
M68000
)

30 
sc
.
sc_pc
 = (Ë
jb
[0].
__pc
;

31 
sc
.
sc_•
 = (Ë
jb
[0].
__•
;

32 
sc
.
sc_Â
 = (Ë
jb
[0].
__lb
;

35 
sc
.
sc_ªåeg
 = 
ªtvÆ
;

36  
	`sigªtu∫
(&
sc
);

37 
	}
}

40 
PUBLIC
 
	$sigªtu∫
(
s˝
)

41 
sigc⁄ãxt
 *
s˝
;

43 
sig£t_t
 
£t
;

50 
mesßge
 
m
;

53 
	`sigfûl£t
(&
£t
);

54 
	`sig¥ocmask
(
SIG_SETMASK
, &
£t
, (
sig£t_t
 *Ë
NULL
);

56 
m
.
m2_l1
 = 
s˝
->
sc_mask
;

57 
m
.
m2_i2
 = 
s˝
->
sc_Êags
;

58 
m
.
m2_p1
 = (*Ë
s˝
;

59 (
	`_sysˇŒ
(
MM
, 
SIGRETURN
, &
m
));

60 
	}
}

	@_sigset.c

1 
	~<lib.h
>

11 
	#sigadd£t
 
_sigadd£t


	)

12 
	#sigdñ£t
 
_sigdñ£t


	)

13 
	#sigem±y£t
 
_sigem±y£t


	)

14 
	#sigfûl£t
 
_sigfûl£t


	)

15 
	#sigismembî
 
_sigismembî


	)

16 
	~<sig«l.h
>

19 
	#SIGBIT_0
 ((
sig£t_t
Ë1)

	)

22 
	#SIGMASK
 ((
SIGBIT_0
 << (
_NSIG
 + 1)Ë- 1)

	)

24 
	#sigisvÆid
(
signo
Ë((Ë(signoË<
_NSIG
)

	)

26 
PUBLIC
 
	$sigadd£t
(
£t
, 
signo
)

27 
sig£t_t
 *
£t
;

28 
signo
;

30 i‡(!
	`sigisvÆid
(
signo
)) {

31 
î∫o
 = 
EINVAL
;

34 *
£t
 |
SIGBIT_0
 << 
signo
;

36 
	}
}

38 
PUBLIC
 
	$sigdñ£t
(
£t
, 
signo
)

39 
sig£t_t
 *
£t
;

40 
signo
;

42 i‡(!
	`sigisvÆid
(
signo
)) {

43 
î∫o
 = 
EINVAL
;

46 *
£t
 &~(
SIGBIT_0
 << 
signo
);

48 
	}
}

50 
PUBLIC
 
	$sigem±y£t
(
£t
)

51 
sig£t_t
 *
£t
;

53 *
£t
 = 0;

55 
	}
}

57 
PUBLIC
 
	$sigfûl£t
(
£t
)

58 
sig£t_t
 *
£t
;

60 *
£t
 = 
SIGMASK
;

62 
	}
}

64 
PUBLIC
 
	$sigismembî
(
£t
, 
signo
)

65 
sig£t_t
 *
£t
;

66 
signo
;

68 i‡(!
	`sigisvÆid
(
signo
)) {

69 
î∫o
 = 
EINVAL
;

72 i‡(*
£t
 & (
SIGBIT_0
 << 
signo
))

75 
	}
}

	@_sigsetjmp.c

1 
	~<lib.h
>

2 
	~<sys/sigc⁄ãxt.h
>

3 
	~<£tjmp.h
>

5 
PUBLIC
 
	$sigl⁄gjmp
(
ív
, 
vÆ
)

6 
sigjmp_buf
 
ív
;

7 
vÆ
;

9 i‡(
ív
[0].
__Êags
 & 
SC_SIGCONTEXT
)

10 
	`l⁄gjmp
(
ív
, 
vÆ
);

12 
	`_l⁄gjmp
(
ív
, 
vÆ
);

13 
	}
}

	@_sigsuspend.c

1 
	~<lib.h
>

2 
	#sigsu•íd
 
_sigsu•íd


	)

3 
	~<sig«l.h
>

5 
PUBLIC
 
	$sigsu•íd
(
£t
)

6 
_CONST
 
sig£t_t
 *
£t
;

8 
mesßge
 
m
;

10 
m
.
m2_l1
 = (Ë*
£t
;

11 (
	`_sysˇŒ
(
MM
, 
SIGSUSPEND
, &
m
));

12 
	}
}

	@_sleep.c

8 
	~<lib.h
>

9 
	#¶ìp
 
_¶ìp


	)

10 
	~<sig«l.h
>

11 
	~<uni°d.h
>

13 
FORWARD
 
_PROTOTYPE
–
_Æfun
, (
signo
) );

15 
PRIVATE
 
	$_Æfun
(
signo
)

16 
signo
;

19 
	}
}

21 
PUBLIC
 
	$¶ìp
(
£cs
)

22 
£cs
;

24 
cuºít_£cs
;

25 
ªmaöög_£cs
;

26 
siga˘i⁄
 
a˘
, 
ﬂ˘
;

27 
sig£t_t
 
ss
;

29 i‡(
£cs
 == 0) (0);

31 
cuºít_£cs
 = 
	`Æ¨m
(0);

33 i‡(
cuºít_£cs
 =0 || cuºít_£c†> 
£cs
) {

34 
a˘
.
ß_Êags
 = 0;

35 
a˘
.
ß_mask
 = 0;

36 
a˘
.
ß_h™dÀr
 = 
_Æfun
;

37 
	`siga˘i⁄
(
SIGALRM
, &
a˘
, &
ﬂ˘
);

39 
	`Æ¨m
(
£cs
);

40 
	`sigem±y£t
(&
ss
);

41 
	`sigsu•íd
(&
ss
);

42 
ªmaöög_£cs
 = 
	`Æ¨m
(0);

44 
	`siga˘i⁄
(
SIGALRM
, &
ﬂ˘
, (
siga˘i⁄
 *Ë
NULL
);

46 i‡(
cuºít_£cs
 > 
£cs
)

47 
	`Æ¨m
(
cuºít_£cs
 - (
£cs
 - 
ªmaöög_£cs
));

49 (
ªmaöög_£cs
);

54 
	`Æ¨m
(
cuºít_£cs
);

55 
	`∑u£
();

56 
ªmaöög_£cs
 = 
	`Æ¨m
(0);

58 
	`Æ¨m
(
ªmaöög_£cs
);

60 (
£cs
 - (
cuºít_£cs
 - 
ªmaöög_£cs
));

61 
	}
}

	@_stat.c

1 
	~<lib.h
>

2 
	#°©
 
_°©


	)

3 
	~<sys/°©.h
>

4 
	~<°rög.h
>

6 
PUBLIC
 
	$°©
(
«me
, 
buf„r
)

7 
_CONST
 *
«me
;

8 
°©
 *
buf„r
;

10 
mesßge
 
m
;

12 
m
.
m1_i1
 = 
	`°æí
(
«me
) + 1;

13 
m
.
m1_p1
 = (*Ë
«me
;

14 
m
.
m1_p2
 = (*Ë
buf„r
;

15 (
	`_sysˇŒ
(
FS
, 
STAT
, &
m
));

16 
	}
}

	@_stime.c

1 
	~<lib.h
>

2 
	#°ime
 
_°ime


	)

3 
	~<möix/mölib.h
>

4 
	~<time.h
>

6 
PUBLIC
 
	$°ime
(
t›
)

7 *
t›
;

9 
mesßge
 
m
;

11 
m
.
m2_l1
 = *
t›
;

12 (
	`_sysˇŒ
(
FS
, 
STIME
, &
m
));

13 
	}
}

	@_sync.c

1 
	~<lib.h
>

2 
	#sync
 
_sync


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
	$sync
()

7 
mesßge
 
m
;

9 (
	`_sysˇŒ
(
FS
, 
SYNC
, &
m
));

10 
	}
}

	@_tcdrain.c

7 
	#tcdøö
 
_tcdøö


	)

8 
	#io˘l
 
_io˘l


	)

9 
	~<ãrmios.h
>

10 
	~<sys/io˘l.h
>

12 
	$tcdøö
(
fd
)

13 
fd
;

15 (
	`io˘l
(
fd
, 
TCDRAIN
, (*)0));

16 
	}
}

	@_tcflow.c

7 
	#tcÊow
 
_tcÊow


	)

8 
	#io˘l
 
_io˘l


	)

9 
	~<ãrmios.h
>

10 
	~<sys/io˘l.h
>

12 
	$tcÊow
(
fd
, 
a˘i⁄
)

13 
fd
;

14 
a˘i⁄
;

16 (
	`io˘l
(
fd
, 
TCFLOW
, &
a˘i⁄
));

17 
	}
}

	@_tcflush.c

4 
	#tcÊush
 
_tcÊush


	)

5 
	#io˘l
 
_io˘l


	)

6 
	~<ãrmios.h
>

7 
	~<sys/io˘l.h
>

9 
	$tcÊush
(
fd
, 
queue_£À˘‹
)

11 (
	`io˘l
(
fd
, 
TCFLSH
, &
queue_£À˘‹
));

12 
	}
}

	@_tcgetattr.c

1 
	#tcgë©å
 
_tcgë©å


	)

2 
	#io˘l
 
_io˘l


	)

3 
	~<sys/io˘l.h
>

4 
	~<î∫o.h
>

5 
	~<ãrmios.h
>

7 
	$tcgë©å
(
fd
, 
ãrmios_p
)

8 
fd
;

9 
ãrmios
 *
ãrmios_p
;

11 (
	`io˘l
(
fd
, 
TCGETS
, 
ãrmios_p
));

12 
	}
}

	@_tcsendbreak.c

4 
	#tc£ndbªak
 
_tc£ndbªak


	)

5 
	#io˘l
 
_io˘l


	)

6 
	~<ãrmios.h
>

7 
	~<sys/io˘l.h
>

9 
	$tc£ndbªak
(
fd
, 
duøti⁄
)

11 (
	`io˘l
(
fd
, 
TCSBRK
, &
duøti⁄
));

12 
	}
}

	@_tcsetattr.c

7 
	#tc£èâr
 
_tc£èâr


	)

8 
	#io˘l
 
_io˘l


	)

9 
	~<î∫o.h
>

10 
	~<ãrmios.h
>

11 
	~<sys/io˘l.h
>

12 
	~<sys/ty≥s.h
>

14 
	$tc£èâr
(
fd
, 
›t_a˘i⁄s
, 
ãrmios_p
)

15 
fd
;

16 
›t_a˘i⁄s
;

17 
_CONST
 
ãrmios
 *
ãrmios_p
;

19 
ªque°
;

21 
›t_a˘i⁄s
)

23 
TCSANOW
: 
ªque°
 = 
TCSETS
; ;

24 
TCSADRAIN
: 
ªque°
 = 
TCSETSW
; ;

25 
TCSAFLUSH
: 
ªque°
 = 
TCSETSF
; ;

26 : 
î∫o
 = 
EINVAL
; (-1);

28 (
	`io˘l
(
fd
, 
ªque°
, (*Ë
ãrmios_p
));

29 
	}
}

	@_time.c

1 
	~<lib.h
>

2 
	#time
 
_time


	)

3 
	~<time.h
>

5 
PUBLIC
 
time_t
 
	$time
(
ç
)

6 
time_t
 *
ç
;

8 
mesßge
 
m
;

10 i‡(
	`_sysˇŒ
(
FS
, 
TIME
, &
m
Ë< 0Ë–(
time_t
) -1);

11 i‡(
ç
 !(
time_t
 *Ë0Ë*ç = 
m
.
m2_l1
;

12 (
m
.
m2_l1
);

13 
	}
}

	@_times.c

1 
	~<lib.h
>

2 
	#times
 
_times


	)

3 
	~<sys/times.h
>

4 
	~<time.h
>

6 
PUBLIC
 
˛ock_t
 
	$times
(
buf
)

7 
tms
 *
buf
;

9 
mesßge
 
m
;

11 
m
.
m4_l5
 = 0;

12 i‡(
	`_sysˇŒ
(
FS
, 
TIMES
, &
m
Ë< 0Ë–(
˛ock_t
) -1);

13 
buf
->
tms_utime
 = 
m
.
m4_l1
;

14 
buf
->
tms_°ime
 = 
m
.
m4_l2
;

15 
buf
->
tms_cutime
 = 
m
.
m4_l3
;

16 
buf
->
tms_c°ime
 = 
m
.
m4_l4
;

17 (
m
.
m4_l5
);

18 
	}
}

	@_umask.c

1 
	~<lib.h
>

2 
	#umask
 
_umask


	)

3 
	~<sys/°©.h
>

5 
PUBLIC
 
mode_t
 
	$umask
(
com∂mode
)

6 
Mode_t
 
com∂mode
;

8 
mesßge
 
m
;

10 
m
.
m1_i1
 = 
com∂mode
;

11 –(
mode_t
Ë
	`_sysˇŒ
(
FS
, 
UMASK
, &
m
));

12 
	}
}

	@_umount.c

1 
	~<lib.h
>

2 
	#umou¡
 
_umou¡


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
	$umou¡
(
«me
)

6 
_CONST
 *
«me
;

8 
mesßge
 
m
;

10 
	`_lﬂd«me
(
«me
, &
m
);

11 (
	`_sysˇŒ
(
FS
, 
UMOUNT
, &
m
));

12 
	}
}

	@_uname.c

8 
	#u«me
 
_u«me


	)

9 
	#›í
 
_›í


	)

10 
	#ªad
 
_ªad


	)

11 
	#˛o£
 
_˛o£


	)

12 
	~<sys/ty≥s.h
>

13 
	~<sys/ut¢ame.h
>

14 
	~<uni°d.h
>

15 
	~<f˙é.h
>

16 
	~<°rög.h
>

17 
	~<î∫o.h
>

18 
	~<möix/c⁄fig.h
>

19 
	~<möix/mölib.h
>

21 
	$u«me
(
«me
Ë
ut¢ame
 *name;

23 
hf
, 
n
, 
îr
;

24 *
∆
;

27 i‡((
hf
 = 
	`›í
("/ëc/ho°«me.fûe", 
O_RDONLY
)) < 0) {

28 i‡(
î∫o
 !
ENOENT
) (-1);

29 
	`°r˝y
(
«me
->
nodíame
, "noname");

31 
n
 = 
	`ªad
(
hf
, 
«me
->
nodíame
, (name->nodename) - 1);

32 
îr
 = 
î∫o
;

33 
	`˛o£
(
hf
);

34 
î∫o
 = 
îr
;

35 i‡(
n
 < 0) (-1);

36 
«me
->
nodíame
[
n
] = 0;

37 i‡((
∆
 = 
	`°rchr
(
«me
->
nodíame
, '\n')Ë!
NULL
) {

38 
	`mem£t
(
∆
, 0, (
«me
->
nodíame
 + (name->nodename)) -Çl);

42 
	`°r˝y
(
«me
->
sy¢ame
, "Minix");

43 
	`°r˝y
(
«me
->
ªÀa£
, 
OS_RELEASE
);

44 
	`°r˝y
(
«me
->
vîsi⁄
, 
OS_VERSION
);

45 #i‡(
CHIP
 =
INTEL
)

46 
«me
->
machöe
[0] = 'i';

47 
	`°r˝y
(
«me
->
machöe
 + 1, 
	`ôﬂ
(
	`gë¥o˚ss‹
()));

48 #i‡
_WORD_SIZE
 == 4

49 
	`°r˝y
(
«me
->
¨ch
, "i386");

51 
	`°r˝y
(
«me
->
¨ch
, "i86");

55 
	}
}

	@_unlink.c

1 
	~<lib.h
>

2 
	#u∆ök
 
_u∆ök


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
	$u∆ök
(
«me
)

6 
_CONST
 *
«me
;

8 
mesßge
 
m
;

10 
	`_lﬂd«me
(
«me
, &
m
);

11 (
	`_sysˇŒ
(
FS
, 
UNLINK
, &
m
));

12 
	}
}

	@_utime.c

3 
	~<lib.h
>

4 
	#utime
 
_utime


	)

5 
	~<°rög.h
>

6 
	~<utime.h
>

8 
PUBLIC
 
	$utime
(
«me
, 
timp
)

9 
_CONST
 *
«me
;

10 
_CONST
 
utimbuf
 *
timp
;

12 
mesßge
 
m
;

14 i‡(
timp
 =
NULL
) {

15 
m
.
m2_i1
 = 0;

16 
m
.
m2_i2
 = 
	`°æí
(
«me
) + 1;

18 
m
.
m2_l1
 = 
timp
->
a˘ime
;

19 
m
.
m2_l2
 = 
timp
->
modtime
;

20 
m
.
m2_i1
 = 
	`°æí
(
«me
) + 1;

22 
m
.
m2_p1
 = (*Ë
«me
;

23 (
	`_sysˇŒ
(
FS
, 
UTIME
, &
m
));

24 
	}
}

	@_wait.c

1 
	~<lib.h
>

2 
	#waô
 
_waô


	)

3 
	~<sys/waô.h
>

5 
PUBLIC
 
pid_t
 
	$waô
(
°©us
)

6 *
°©us
;

8 
mesßge
 
m
;

10 i‡(
	`_sysˇŒ
(
MM
, 
WAIT
, &
m
) < 0) (-1);

11 i‡(
°©us
 !0Ë*°©u†
m
.
m2_i1
;

12 (
m
.
m_ty≥
);

13 
	}
}

	@_waitpid.c

1 
	~<lib.h
>

2 
	#waôpid
 
_waôpid


	)

3 
	~<sys/waô.h
>

5 
PUBLIC
 
pid_t
 
	$waôpid
(
pid
, 
°©us
, 
›ti⁄s
)

6 
pid_t
 
pid
;

7 *
°©us
;

8 
›ti⁄s
;

10 
mesßge
 
m
;

12 
m
.
m1_i1
 = 
pid
;

13 
m
.
m1_i2
 = 
›ti⁄s
;

14 i‡(
	`_sysˇŒ
(
MM
, 
WAITPID
, &
m
) < 0) (-1);

15 i‡(
°©us
 !0Ë*°©u†
m
.
m2_i1
;

16  
m
.
m_ty≥
;

17 
	}
}

	@_write.c

1 
	~<lib.h
>

2 
	#wrôe
 
_wrôe


	)

3 
	~<uni°d.h
>

5 
PUBLIC
 
ssize_t
 
	$wrôe
(
fd
, 
buf„r
, 
nbyãs
)

6 
fd
;

7 
_CONST
 *
buf„r
;

8 
size_t
 
nbyãs
;

10 
mesßge
 
m
;

12 
m
.
m1_i1
 = 
fd
;

13 
m
.
m1_i2
 = 
nbyãs
;

14 
m
.
m1_p1
 = (*Ë
buf„r
;

15 (
	`_sysˇŒ
(
FS
, 
WRITE
, &
m
));

16 
	}
}

	@abort.c

7 #if 
deföed
(
_POSIX_SOURCE
)

8 
	~<sys/ty≥s.h
>

10 
	~<sig«l.h
>

11 
	~<°dlib.h
>

13 (*
_˛ón
)();

16 
	$ab‹t
()

18 i‡(
_˛ón
Ë
	`_˛ón
();

19 
	`øi£
(
SIGABRT
);

20 
	}
}

	@abs.c

7 
	~<°dlib.h
>

10 
	$abs
(
i
)

12  
i
 >= 0 ? i : -i;

13 
	}
}

	@add_ext.c

12 
	~"FP_ty≥s.h
"

15 
	$add_ext
(
e1
,
e2
)

16 
EXTEND
 *
e1
,*
e2
;

18 i‡((
e2
->
m1
 |É2->
m2
) == 0L) {

21 i‡((
e1
->
m1
 |É1->
m2
) == 0L) {

22 *
e1
 = *
e2
;

25 
	`s·_ext
(
e1
, 
e2
);

26 i‡(
e1
->
sign
 !
e2
->sign) {

28 i‡(
e2
->
m1
 > 
e1
->m1 ||

29 (
e2
->
m1
 =
e1
->m1 &&É2->
m2
 >É1->m2)) {

31 
EXTEND
 
x
;

33 
x
 = *
e1
;

34 *
e1
 = *
e2
;

35 i‡(
x
.
m2
 > 
e1
->m2) {

36 
e1
->
m1
 -= 1;

38 
e1
->
m1
 -
x
.m1;

39 
e1
->
m2
 -
x
.m2;

42 i‡(
e2
->
m2
 > 
e1
->m2)

43 
e1
->
m1
 -= 1;

44 
e1
->
m1
 -
e2
->m1;

45 
e1
->
m2
 -
e2
->m2;

49 i‡(
	`b64_add
(&
e1
->
m™tisß
,&
e2
->mantissa)) {

50 
	`b64_rs·
(&
e1
->
m™tisß
);

51 
e1
->
m1
 |= 0x80000000L;

52 
e1
->
exp
++;

55 
	`ƒm_ext
(
e1
);

56 
	}
}

	@adder.c

12 #ifdef 
EXT_DEBUG


13 
	~<°dio.h
>

16 
	~"FP_ty≥s.h
"

17 
	#UNKNOWN
 -1

	)

18 
	#TRUE
 1

	)

19 
	#FALSE
 0

	)

20 
	#MAXBIT
 0x80000000L

	)

26 
	$b64_add
(
e1
,
e2
)

30 
B64
 *
e1
,*
e2
;

32 
ovîÊow
;

33 
ˇºy
;

36 
ovîÊow
 = ((Ë0xFFFFFFFF - 
e1
->
h_32
 < 
e2
->h_32);

37 
e1
->
h_32
 +
e2
->h_32;

40 
ˇºy
 = ((Ë0xFFFFFFFF - 
e1
->
l_32
 < 
e2
->l_32);

41 
e1
->
l_32
 +
e2
->l_32;

42 #ifdef 
EXT_DEBUG


43 
	`¥ötf
("\t\t\t\t\tb64_add: overflow (%d); internal carry(%d)\n",

44 
ovîÊow
,
ˇºy
);

45 
	`fÊush
(
°dout
);

47 i‡((
ˇºy
Ë&& (++
e1
->
h_32
 == 0))

48 (
TRUE
);

49 (
ovîÊow
);

50 
	}
}

	@adder.h

12 
	sB64
 {

13 
	mh_32
;

14 
	ml_32
;

15 } 
	tB64
;

	@adf4.c

12 
	~"FP_ty≥s.h
"

15 
	$adf4
(
s2
,
s1
)

16 
SINGLE
 
s1
,
s2
;

18 
EXTEND
 
e1
,
e2
;

19 
sw≠
 = 0;

21 i‡(
s1
 =(
SINGLE
) 0) {

22 
s1
 = 
s2
;

25 i‡(
s2
 =(
SINGLE
) 0) {

28 
	`exãnd
(&
s1
,&
e1
,(
SINGLE
));

29 
	`exãnd
(&
s2
,&
e2
,(
SINGLE
));

30 
	`add_ext
(&
e1
,&
e2
);

31 
	`com∑˘
(&
e1
,&
s1
,(
SINGLE
));

32 
	}
}

	@adf8.c

12 
	~"FP_ty≥s.h
"

15 
	$adf8
(
s2
,
s1
)

16 
DOUBLE
 
s1
,
s2
;

18 
EXTEND
 
e1
,
e2
;

20 i‡(
s1
.
d
[0] == 0 && s1.d[1] == 0) {

21 
s1
 = 
s2
;

24 i‡(
s2
.
d
[0] == 0 && s2.d[1] == 0) {

28 
	`exãnd
(&
s1
.
d
[0],&
e1
,(
DOUBLE
));

29 
	`exãnd
(&
s2
.
d
[0],&
e2
,(
DOUBLE
));

30 
	`add_ext
(&
e1
,&
e2
);

31 
	`com∑˘
(&
e1
,&
s1
.
d
[0],(
DOUBLE
));

32 
	}
}

	@aha_scsi.c

58 
	~"kî√l.h
"

59 
	~"drivî.h
"

60 
	~"drvlib.h
"

61 #i‡
ENABLE_ADAPTEC_SCSI


62 
	~<f˙é.h
>

63 
	~<sys/io˘l.h
>

64 
	~<sys/mtio.h
>

65 
	~"as£π.h
"

66 
	gINIT_ASSERT


69 #i‚de‡
AHA_DEBUG


70 
	#AHA_DEBUG
 0

	)

76 
	#AHA_BASEREG
 0x330

	)

77 
	#AHA_CNTLREG
 
aha_ba£ªg
+0

	)

78 
	#AHA_STATREG
 
aha_ba£ªg
+0

	)

79 
	#AHA_DATAREG
 
aha_ba£ªg
+1

	)

80 
	#AHA_INTRREG
 
aha_ba£ªg
+2

	)

83 
	#AHA_HRST
 0x80

	)

84 
	#AHA_SRST
 0x40

	)

85 
	#AHA_IRST
 0x20

	)

86 
	#AHA_SCRST
 0x10

	)

93 
	#AHA_STST
 0x80

	)

94 
	#AHA_DIAGF
 0x40

	)

95 
	#AHA_INIT
 0x20

	)

96 
	#AHA_IDLE
 0x10

	)

97 
	#AHA_CDF
 0x08

	)

98 
	#AHA_DF
 0x04

	)

100 
	#AHA_INVDCMD
 0x01

	)

103 
	#AHA_ANYINT
 0x80

	)

107 
	#AHA_SCRD
 0x08

	)

108 
	#AHA_HACC
 0x04

	)

109 
	#AHA_MBOE
 0x02

	)

110 
	#AHA_MBIF
 0x01

	)

113 
	#AHA1540
 0x30

	)

114 
	#AHA1540A
 0x41

	)

115 
	#AHA1640
 0x42

	)

116 
	#AHA1740
 0x43

	)

117 
	#AHA1540C
 0x44

	)

118 
	#AHA1540CF
 0x45

	)

119 
	#BT545
 0x20

	)

122 
	#AHACOM_INITBOX
 0x01

	)

123 
	#AHACOM_STARTSCSI
 0x02

	)

124 
	#AHACOM_HAINQUIRY
 0x04

	)

125 
	#AHACOM_SETIMEOUT
 0x06

	)

126 
	#AHACOM_BUSON
 0x07

	)

127 
	#AHACOM_BUSOFF
 0x08

	)

128 
	#AHACOM_SPEED
 0x09

	)

129 
	#AHACOM_INSTALLED
 0x0A

	)

130 
	#AHACOM_GETCONFIG
 0x0B

	)

131 
	#AHACOM_GETSETUP
 0x0D

	)

132 
	#AHACOM_EXTBIOS
 0x28

	)

133 
	#AHACOM_MBOX_ENABLE
 0x29

	)

136 
	#AHA_MBOXFREE
 0x00

	)

137 
	#AHA_MBOXSTART
 0x01

	)

138 
	#AHA_MBOXABORT
 0x02

	)

140 
	#AHA_MBOXOK
 0x01

	)

141 
	#AHA_MBOXERR
 0x04

	)

145 
	tbyã
;

146 
byã
 
	tbig16
[2];

147 
byã
 
	tbig24
[3];

148 
byã
 
	tbig32
[4];

152 
byã
 
	m°©us
;

153 
big24
 
	mccb±r
;

154 } 
	tmaûbox_t
;

159 
byã
 
	md_scsi_›
;

160 
	#SCSI_UNITRDY
 0x00

	)

161 
	#SCSI_REWIND
 0x01

	)

162 
	#SCSI_REQSENSE
 0x03

	)

163 
	#SCSI_RDLIMITS
 0x05

	)

164 
	#SCSI_READ
 0x08

	)

165 
	#SCSI_WRITE
 0x0A

	)

166 
	#SCSI_WREOF
 0x10

	)

167 
	#SCSI_SPACE
 0x11

	)

168 
	#SCSI_INQUIRY
 0x12

	)

169 
	#SCSI_MDSELECT
 0x15

	)

170 
	#SCSI_ERASE
 0x19

	)

171 
	#SCSI_MDSENSE
 0x1A

	)

172 
	#SCSI_STRTSTP
 0x1B

	)

173 
	#SCSI_LOADUNLD
 0x1B

	)

174 
big24
 
	md_lba
;

175 
byã
 
	md_nblocks
;

176 
byã
 
	md_c⁄åﬁ
;

177 } 
	md
;

179 
byã
 
	mt_scsi_›
;

180 
byã
 
	mt_fixed
;

181 
big24
 
	mt_åÀngth
;

182 
byã
 
	mt_c⁄åﬁ
;

183 } 
	mt
;

184 } 
	tcdb0_t
;

185 
	#scsi_›
 
d
.
d_scsi_›


	)

186 
	#lba
 
d
.
d_lba


	)

187 
	#nblocks
 
d
.
d_nblocks


	)

188 
	#fixed
 
t
.
t_fixed


	)

189 
	#åÀngth
 
t
.
t_åÀngth


	)

190 
	#c⁄åﬁ
 
d
.
d_c⁄åﬁ


	)

195 
byã
 
	md_scsi_›
;

196 
	#SCSI_CAPACITY
 0x25

	)

197 
	#SCSI_READ1
 0x28

	)

198 
	#SCSI_WRITE1
 0x2A

	)

199 
byã
 
	md_luƒa
;

200 
big32
 
	md_lba
;

201 
byã
 
	mª£rved
;

202 
big16
 
	md_nblocks
;

203 
byã
 
	md_c⁄åﬁ
;

204 } 
	md
;

205 } 
	tcdb1_t
;

206 
	#luƒa
 
d
.
d_luƒa


	)

210 
byã
 
	mîrc
;

211 
byã
 
	m£gnum
;

212 
byã
 
	mkey
;

213 
	#£n£_key
(
key
Ë(key & 0x0FË

	)

214 
	#£n£_ûi
(
key
Ë(key & 0x20Ë

	)

215 
	#£n£_eom
(
key
Ë(key & 0x40Ë

	)

216 
	#£n£_eof
(
key
Ë(key & 0x80Ë

	)

217 
big32
 
	möfo
;

218 
byã
 
	mÀn
;

219 
big32
 
	mcom•ec
;

220 
byã
 
	madd_code
;

221 
byã
 
	madd_quÆ
;

222 } 
	t£n£_t
;

225 
	#SENSE_NO_SENSE
 0x00

	)

226 
	#SENSE_RECOVERED
 0x01

	)

227 
	#SENSE_NOT_READY
 0x02

	)

228 
	#SENSE_HARDWARE
 0x04

	)

229 
	#SENSE_UNIT_ATT
 0x06

	)

230 
	#SENSE_BLANK_CHECK
 0x08

	)

231 
	#SENSE_VENDOR
 0x09

	)

232 
	#SENSE_ABORTED_CMD
 0x0B

	)

236 
byã
 
	mdevty≥
;

237 
	#SCSI_DEVDISK
 0

	)

238 
	#SCSI_DEVTAPE
 1

	)

239 
	#SCSI_DEVPRN
 2

	)

240 
	#SCSI_DEVCPU
 3

	)

241 
	#SCSI_DEVWORM
 4

	)

242 
	#SCSI_DEVCDROM
 5

	)

243 
	#SCSI_DEVSCANNER
 6

	)

244 
	#SCSI_DEVOPTICAL
 7

	)

245 
	#SCSI_DEVJUKEBOX
 8

	)

246 
	#SCSI_DEVCOMM
 9

	)

247 
	#SCSI_DEVMAX
 9

	)

248 
	#SCSI_DEVUNKNOWN
 10

	)

249 
byã
 
	mdevquÆ
;

250 
	#scsi_rmb
(
d
Ë(((dË& 0x80Ë!0Ë

	)

251 
byã
 
	m°dvî
;

252 
	#scsi_isovî
(
v
Ë(((vË& 0xC0Ë>> 6Ë

	)

253 
	#scsi_ecmavî
(
v
Ë(((vË& 0x38Ë>> 3Ë

	)

254 
	#scsi_™sivî
(
v
Ë((vË& 0x07Ë

	)

255 
byã
 
	mf‹m©
;

256 
byã
 
	mÀn
;

257 
byã
 
	mª£rved
[2];

258 
byã
 
	mÊags
;

259 
	#scsi_sync
(
f
Ë(((fË& 0x10Ë!0Ë

	)

260 
	mvíd‹
[8];

261 
	m¥odu˘
[16];

262 
	mªvisi⁄
[4];

263 
	mexåa
[20];

264 } 
	töquúy_t
;

268 
byã
 
	m›code
;

269 
	#CCB_INIT
 0x00

	)

270 
	#CCB_TARGET
 0x01

	)

271 
	#CCB_SCATTER
 0x02

	)

272 
byã
 
	maddr˙é
;

273 
	#ccb_scid
(
id
Ë(((id)<<5)&0xE0Ë

	)

274 
	#CCB_OUTCHECK
 0x10

	)

275 
	#CCB_INCHECK
 0x08

	)

276 
	#CCB_NOCHECK
 0x00

	)

277 
	#ccb_lun
(
lun
Ë(÷un)&0x07Ë

	)

278 
byã
 
	mcmdÀn
;

279 
byã
 
	m£n£Àn
;

280 
	#CCB_SENSEREQ
 0x0E

	)

281 
	#CCB_SENSEOFF
 0x01

	)

282 
big24
 
	md©Æí
;

283 
big24
 
	md©≠å
;

284 
big24
 
	mlök±r
;

285 
byã
 
	mlökid
;

286 
byã
 
	mha°©
;

287 
	#HST_TIMEOUT
 0x11

	)

288 
byã
 
	mèr°©
;

289 
	#TST_CHECK
 0x02

	)

290 
	#TST_LUNBUSY
 0x08

	)

291 
byã
 
	mª£rved
[2];

292 
byã
 
	mcmd
[(
cdb1_t
)];

293 
byã
 
	m£n£
[(
£n£_t
)];

294 } 
	tccb_t
;

298 
	#DMA_CHECK
(
íd
, 
°¨t
Ë((((Ë”ndË^ (Ë(°¨t)Ë& 1Ë=0)

	)

302 
big24
 
	md©Æí
;

303 
big24
 
	md©≠å
;

304 } 
	tdma_t
;

308 
	#SCSI_TIMEOUT
 250

	)

309 
	#AHA_TIMEOUT
 500

	)

311 
	#MAX_DEVICES
 8

	)

312 
	#NR_DISKDEVS
 (
MAX_DEVICES
 * 
DEV_PER_DRIVE
)

	)

313 
	#NR_TAPEDEVS
 (
MAX_DEVICES
 * 2)

	)

314 
	#NR_GENDEVS
 (
MAX_DEVICES
)

	)

315 
	#SUB_PER_DRIVE
 (
NR_PARTITIONS
 * NR_PARTITIONS)

	)

316 
	#NR_SUBDEVS
 (
MAX_DEVICES
 * 
SUB_PER_DRIVE
)

	)

317 
	#MINOR_°0
 64

	)

319 
	#TYPE_SD
 0

	)

320 
	#TYPE_NRST
 1

	)

321 
	#TYPE_RST
 2

	)

325 
PRIVATE
 
	sscsi
 {

326 
	mèrg
;

327 
	mlun
;

328 
	m°©e
;

329 
	#S_PRESENT
 0x01

	)

330 
	#S_READY
 0x02

	)

331 
	#S_RDONLY
 0x04

	)

332 
	mdevty≥
;

333 
	mblock_size
;

334 
	mcou¡_max
;

335 
	m›í_˘
;

338 
	m›í_mode
;

339 
	m©_eof
;

340 
	m√ed_eof
;

341 
	mtfixed
;

342 
mtgë
 
	mt°©
;

343 
devi˚
 
	mdummy∑π
;

344 } 
	mè≥
;

346 
devi˚
 
	m∑π
[
DEV_PER_DRIVE
];

347 
devi˚
 
	msub∑π
[
SUB_PER_DRIVE
];

348 } 
	mdisk
;

349 } 
	mu
;

350 } 
	gscsi
[
MAX_DEVICES
];

352 
	#›í_mode
 
u
.
è≥
.
›í_mode


	)

353 
	#©_eof
 
u
.
è≥
.
©_eof


	)

354 
	#√ed_eof
 
u
.
è≥
.
√ed_eof


	)

355 
	#tfixed
 
u
.
è≥
.
tfixed


	)

356 
	#t°©
 
u
.
è≥
.
t°©


	)

357 
	#dummy∑π
 
u
.
è≥
.
dummy∑π


	)

358 
	#∑π
 
u
.
disk
.
∑π


	)

359 
	#sub∑π
 
u
.
disk
.
sub∑π


	)

362 
	#DS_OK
 0

	)

363 
	#DS_ERR
 1

	)

364 
	#DS_EOF
 2

	)

367 
PRIVATE
 *
	gscsi_dev°r
[
SCSI_DEVMAX
+1] = {

373 
PRIVATE
 *
	g°r_scsi_£n£
[] = {

381 #i‡
AHA_DEBUG
 & 1

382 
	#£n£_£rious
(
key
Ë((keyË!0)

	)

384 
	#£n£_£rious
(
key
Ë((0xFE1C & (1 << (key))Ë!0)

	)

388 
	sªque°
 {

389 
	mcou¡
;

390 
	mªåy
;

391 
	mpos
;

392 
ccb_t
 
	mccb
;

393 
dma_t
 
	mdmÆi°
[
NR_IOREQS
];

394 
dma_t
 *
	mdm≠å
;

395 
dma_t
 *
	mdmÆimô
;

396 
i‹eque°_s
 *
	miov
[
NR_IOREQS
];

397 } 
	tªque°_t
;

399 
PRIVATE
 
ªque°_t
 
	gªque°
;

400 
	#rq
 (&
ªque°
Ë

	)

402 
	#ccb_cmd0
(
rq
Ë(* (
cdb0_t
 *Ë‘q)->
ccb
.
cmd
)

	)

403 
	#ccb_cmd1
(
rq
Ë(* (
cdb1_t
 *Ë‘q)->
ccb
.
cmd
)

	)

404 
	#ccb_£n£
(
rq
Ë(* (
£n£_t
 *Ë(‘q)->
ccb
.
cmd
 + (rq)->ccb.
cmdÀn
))

	)

406 
PRIVATE
 
	gaha_ba£ªg
;

407 
PRIVATE
 
	gaha_modñ
;

408 
PRIVATE
 
scsi
 *
	gs_•
;

409 
PRIVATE
 
devi˚
 *
	gs_dv
;

410 
PRIVATE
 
	gs_ty≥
;

411 
PRIVATE
 
	gs_√xços
;

412 
PRIVATE
 
	gs_buf_blk
;

413 
PRIVATE
 
	gs_›code
;

414 
PRIVATE
 
	gs_mu°
;

415 
PRIVATE
 
	gaha_úq
;

416 
PRIVATE
 
maûbox_t
 
	gmaûbox
[2];

417 
PRIVATE
 
öquúy_t
 
	göqd©a
;

422 
FORWARD
 
_PROTOTYPE
–
devi˚
 *
s_¥ï¨e
, (device) );

423 
FORWARD
 
_PROTOTYPE
–*
s_«me
, () );

424 
FORWARD
 
_PROTOTYPE
–
s_do_›í
, (
drivî
 *
dp
, 
mesßge
 *
m_±r
) );

425 
FORWARD
 
_PROTOTYPE
–
scsi_¥obe
, () );

426 
FORWARD
 
_PROTOTYPE
–
scsi_£n£
, () );

427 
FORWARD
 
_PROTOTYPE
–
scsi_öquúy
, () );

428 
FORWARD
 
_PROTOTYPE
–
scsi_ndisk
, () );

429 
FORWARD
 
_PROTOTYPE
–
scsi_¡≠e
, () );

430 
FORWARD
 
_PROTOTYPE
–
s_scheduÀ
, (
¥oc_ƒ
, 
i‹eque°_s
 *
i›
) );

431 
FORWARD
 
_PROTOTYPE
–
s_föish
, () );

432 
FORWARD
 
_PROTOTYPE
–
s_rdcdrom
, (
¥oc_ƒ
, 
i‹eque°_s
 *
i›
,

433 
pos
, 
nbyãs
, 
phys_byãs
 
u£r_phys
) );

434 
FORWARD
 
_PROTOTYPE
–
s_do_˛o£
, (
drivî
 *
dp
, 
mesßge
 *
m_±r
) );

435 
FORWARD
 
_PROTOTYPE
–
s_do_io˘l
, (
drivî
 *
dp
, 
mesßge
 *
m_±r
) );

436 
FORWARD
 
_PROTOTYPE
–
scsi_sim∂e
, (
›code
, 
cou¡
) );

437 
FORWARD
 
_PROTOTYPE
–
group0
, () );

438 
FORWARD
 
_PROTOTYPE
–
group1
, () );

439 
FORWARD
 
_PROTOTYPE
–
scsi_comm™d
, (
phys_byãs
 
d©a
, 
vú_byãs
 
Àn
) );

440 
FORWARD
 
_PROTOTYPE
–
aha_comm™d
, (
ouéí
, 
byã
 *
ouçå
,

441 
öÀn
, 
byã
 *
ö±r
) );

442 
FORWARD
 
_PROTOTYPE
–
aha_ª£t
, () );

443 
FORWARD
 
_PROTOTYPE
–
s_h™dÀr
, (
úq
) );

445 
FORWARD
 
_PROTOTYPE
–
h2b16
, (
big16
 
b
, 
U16_t
 
l
) );

446 
FORWARD
 
_PROTOTYPE
–
h2b24
, (
big24
 
b
, 
u32_t
 
l
) );

447 
FORWARD
 
_PROTOTYPE
–
h2b32
, (
big32
 
b
, 
u32_t
 
l
) );

448 
FORWARD
 
_PROTOTYPE
–
u16_t
 
b2h16
, (
big16
 
b
) );

449 
FORWARD
 
_PROTOTYPE
–
u32_t
 
b2h24
, (
big24
 
b
) );

450 
FORWARD
 
_PROTOTYPE
–
u32_t
 
b2h32
, (
big32
 
b
) );

453 #i‡
AHA_DEBUG
 & 2

454 
FORWARD
 
_PROTOTYPE
–
îr‹dump
, () );

456 
	#îr‹dump
()

	)

459 #i‡
AHA_DEBUG
 & 4

460 
FORWARD
 
_PROTOTYPE
–
show_ªq
, () );

462 
	#show_ªq
()

	)

465 #i‡
AHA_DEBUG
 & 8

466 
FORWARD
 
_PROTOTYPE
–
dump_scsi_cmd
, () );

468 
	#dump_scsi_cmd
()

	)

471 
FORWARD
 
_PROTOTYPE
–
s_geomëry
, (
∑πôi⁄
 *
íåy
));

475 
PRIVATE
 
drivî
 
	gs_dèb
 = {

476 
s_«me
,

477 
s_do_›í
,

478 
s_do_˛o£
,

479 
s_do_io˘l
,

480 
s_¥ï¨e
,

481 
s_scheduÀ
,

482 
s_föish
,

483 
n›_˛ónup
,

484 
s_geomëry


491 
PUBLIC
 
	$aha_scsi_èsk
()

494 
i
;

495 
scsi
 *
•
;

496 
v
;

497 *
«me
;

498 
fmt
[] = "d,d";

500 
i
 = 0; i < 
MAX_DEVICES
; i++) {

501 (Ë
	`s_¥ï¨e
(
i
 * 
DEV_PER_DRIVE
);

502 
•
 = 
s_•
;

505 
«me
 = 
	`s_«me
();

507 
v
 = 
i
;

508 (Ë
	`ív_∑r£
(
«me
, 
fmt
, 0, &
v
, 0L, 7L);

509 
•
->
èrg
 = 
v
;

511 
v
 = 0;

512 (Ë
	`ív_∑r£
(
«me
, 
fmt
, 1, &
v
, 0L, 7L);

513 
•
->
lun
 = 
v
;

515 
	`drivî_èsk
(&
s_dèb
);

516 
	}
}

522 
PRIVATE
 
devi˚
 *
	$s_¥ï¨e
(
devi˚
)

523 
devi˚
;

527 
rq
->
cou¡
 = 0;

528 
s_mu°
 = 
TRUE
;

529 
s_buf_blk
 = -1;

531 i‡(
devi˚
 < 
NR_DISKDEVS
) {

532 
s_ty≥
 = 
TYPE_SD
;

533 
s_•
 = &
scsi
[
devi˚
 / 
DEV_PER_DRIVE
];

534 
s_dv
 = &
s_•
->
∑π
[
devi˚
 % 
DEV_PER_DRIVE
];

536 i‡((Ë(
devi˚
 - 
MINOR_hd1a
Ë< 
NR_SUBDEVS
) {

537 
devi˚
 -
MINOR_hd1a
;

538 
s_ty≥
 = 
TYPE_SD
;

539 
s_•
 = &
scsi
[
devi˚
 / 
SUB_PER_DRIVE
];

540 
s_dv
 = &
s_•
->
sub∑π
[
devi˚
 % 
SUB_PER_DRIVE
];

542 i‡((Ë(
devi˚
 - 
MINOR_°0
Ë< 
NR_TAPEDEVS
) {

543 
devi˚
 -
MINOR_°0
;

544 
s_ty≥
 = 
devi˚
 & 1 ? 
TYPE_RST
 : 
TYPE_NRST
;

545 
s_•
 = &
scsi
[
devi˚
 >> 1];

546 
s_dv
 = &
s_•
->
dummy∑π
;

548 (
NIL_DEV
);

551 (
s_dv
);

552 
	}
}

558 
PRIVATE
 *
	$s_«me
()

561 
«me
[] = "sd35";

562 
n
 = (
s_•
 - 
scsi
);

564 
s_ty≥
) {

565 
TYPE_SD
:

566 
«me
[1] = 'd';

567 
n
 *
DEV_PER_DRIVE
;

569 
TYPE_RST
:

570 
TYPE_NRST
:

571 
«me
[1] = 't';

574 i‡(
n
 < 10) {

575 
«me
[2] = '0' + 
n
;

576 
«me
[3] = 0;

578 
«me
[2] = '0' + 
n
 / 10;

579 
«me
[3] = '0' + 
n
 % 10;

581  
«me
;

582 
	}
}

588 
PRIVATE
 
	$s_do_›í
(
dp
, 
m_±r
)

589 
drivî
 *
dp
;

590 
mesßge
 *
m_±r
;

592 
scsi
 *
•
;

593 
r
;

595 i‡(
aha_úq
 =0 && !
	`aha_ª£t
()Ë(
EIO
);

597 i‡(
	`s_¥ï¨e
(
m_±r
->
DEVICE
Ë=
NIL_DEV
Ë(
ENXIO
);

598 
•
 = 
s_•
;

600 i‡((
r
 = 
	`scsi_¥obe
()Ë!
OK
) (r);

602 i‡(
•
->
°©e
 & 
S_RDONLY
 && 
m_±r
->
COUNT
 & 
W_BIT
Ë(
EACCES
);

604 
•
->
devty≥
) {

605 
SCSI_DEVDISK
:

606 
SCSI_DEVWORM
:

607 
SCSI_DEVCDROM
:

608 
SCSI_DEVOPTICAL
:

610 i‡(
•
->
›í_˘
 == 0) {

611 
	`∑πôi⁄
(&
s_dèb
, (Ë(
•
-
scsi
Ë* 
DEV_PER_DRIVE
, 
P_PRIMARY
);

614 
SCSI_DEVTAPE
:

616 i‡(
•
->
›í_˘
 > 0Ë(
EBUSY
);

618 
•
->
›í_mode
 = 
m_±r
->
COUNT
;

622 
•
->
√ed_eof
 = ((•->
›í_mode
 & (
R_BIT
|
W_BIT
)) == W_BIT);

625 
•
->
›í_˘
++;

626 (
OK
);

627 
	}
}

633 
PRIVATE
 
	$scsi_¥obe
()

636 
scsi
 *
•
 = 
s_•
;

637 
£n£_t
 *
£n£
;

638 
r
, 
key
;

641 i‡((
r
 = 
	`scsi_£n£
()Ë!
OK
) {

642 i‡(
•
->
°©e
 & 
S_PRESENT
) {

643 
	`¥ötf
("%s: ofÊöe\n", 
	`s_«me
());

644 
•
->
°©e
 = 0;

646 (
r
);

649 i‡(!(
•
->
°©e
 & 
S_PRESENT
)) {

652 i‡((
r
 = 
	`scsi_öquúy
()Ë!
OK
) (r);

654 
•
->
devty≥
 = 
öqd©a
.devtype;

657 i‡(!(
•
->
°©e
 & 
S_READY
)) {

659 (Ë
	`scsi_sim∂e
(
SCSI_STRTSTP
, 1);

665 (
key
 = 
	`scsi_sim∂e
(
SCSI_UNITRDY
, 0)Ë!
SENSE_NO_SENSE
) {

668 
•
->
°©e
 &~
S_READY
;

670 
key
) {

671 
SENSE_UNIT_ATT
:

674 
SENSE_NOT_READY
:

678 
£n£
 = &
	`ccb_£n£
(
rq
);

679 (
£n£
->
add_code
 << 8Ë| sí£->
add_quÆ
) {

682 
	`mûli_dñay
(1000);

688 i‡(
	`scsi_sim∂e
(
SCSI_STRTSTP
, 1Ë!
SENSE_NO_SENSE
)

689 (
EIO
);

695 
	`¥ötf
("%s:ÇÿmedüÜﬂded\n", 
	`s_«me
());

696 (
EIO
);

699 
	`¥ötf
("%s:ÇŸÑódy\n", 
	`s_«me
());

700 (
EIO
);

705 i‡(
key
 !
SENSE_NOT_READY
) {

706 
	`¥ötf
("%s: h¨dw¨êîr‹\n", 
	`s_«me
());

707 (
EIO
);

712 i‡(!(
•
->
°©e
 & 
S_PRESENT
)) {

714 i‡(
	`scsi_öquúy
(Ë!
OK
Ë(
EIO
);

718 
	`¥ötf
("%s: %-7s %.48s\n",

719 
	`s_«me
(),

720 
öqd©a
.
devty≥
 > 
SCSI_DEVMAX
 ? "UNKNOWN"

721 : 
scsi_dev°r
[
öqd©a
.
devty≥
],

722 
öqd©a
.
víd‹
 );

725 i‡(!(
•
->
°©e
 & 
S_READY
)) {

728 
•
->
devty≥
) {

729 
SCSI_DEVDISK
:

730 
SCSI_DEVWORM
:

731 
SCSI_DEVCDROM
:

732 
SCSI_DEVOPTICAL
:

733 i‡(
	`scsi_ndisk
(Ë!
OK
Ë(
EIO
);

735 
SCSI_DEVTAPE
:

736 i‡(
	`scsi_¡≠e
(Ë!
OK
Ë(
EIO
);

739 
	`¥ötf
("%s: unsuµ‹ãd\n", 
	`s_«me
());

740 (
EIO
);

743 (
OK
);

744 
	}
}

750 
PRIVATE
 
	$scsi_£n£
()

752 
key
;

753 
£n£_t
 *
£n£
 = (£n£_à*Ë
tmp_buf
;

758 
key
 = 
	`scsi_sim∂e
(
SCSI_REQSENSE
, (
£n£_t
));

760 i‡(
rq
->
ccb
.
ha°©
 =
HST_TIMEOUT
Ë(
ENXIO
);

761 i‡(
rq
->
ccb
.
ha°©
 !0Ë(
EIO
);

764 i‡(
key
 =
SENSE_UNIT_ATT
 || 
	`£n£_key
(
£n£
->key) == SENSE_UNIT_ATT) {

766 
s_•
->
°©e
 &~
S_READY
;

768 (
OK
);

769 
	}
}

775 
PRIVATE
 
	$scsi_öquúy
()

778 
	`mem£t
(
tmp_buf
, '\0', (
öquúy_t
));

781 i‡(
	`scsi_sim∂e
(
SCSI_INQUIRY
, (
öquúy_t
)Ë!
SENSE_NO_SENSE
)

782 (
EIO
);

783 
öqd©a
 = * (
öquúy_t
 *Ë
tmp_buf
;

785 i‡(
öqd©a
.
Àn
 == 0) {

787 
	`°r˝y
(
öqd©a
.
víd‹
, "(unknown)");

791 i‡((
öqd©a
.
devty≥
 & 0xE0Ë!0Ë(
ENXIO
);

793 (
OK
);

794 
	}
}

800 
PRIVATE
 
	$scsi_ndisk
()

804 
scsi
 *
•
 = 
s_•
;

805 
ˇ∑côy
 = -1, 
block_size
 = 
SECTOR_SIZE
;

806 
byã
 *
buf
 = 
tmp_buf
;

809 i‡(
s_ty≥
 !
TYPE_SD
Ë(
EIO
);

811 i‡(
•
->
devty≥
 =
SCSI_DEVCDROM
) {

813 
•
->
°©e
 |
S_RDONLY
;

816 i‡(
	`scsi_sim∂e
(
SCSI_MDSENSE
, 255Ë!
SENSE_NO_SENSE
Ë(
EIO
);

819 
•
->
°©e
 &~
S_RDONLY
;

820 i‡(
buf
[2] & 0x80Ë
•
->
°©e
 |
S_RDONLY
;

823 i‡(
•
->
devty≥
 =
SCSI_DEVWORM
Ë•->
°©e
 |
S_RDONLY
;

827 
	`group1
();

828 
rq
->
ccb
.
›code
 = 
CCB_INIT
;

829 
	`ccb_cmd1
(
rq
).
scsi_›
 = 
SCSI_CAPACITY
;

831 i‡(
	`scsi_comm™d
(
tmp_phys
, 8Ë=
SENSE_NO_SENSE
) {

832 
ˇ∑côy
 = 
	`b2h32
(
buf
 + 0) + 1;

833 
block_size
 = 
	`b2h32
(
buf
 + 4);

834 
	`¥ötf
("%s: capacity %lu x %lu bytes\n",

835 
	`s_«me
(), 
ˇ∑côy
, 
block_size
);

837 
	`¥ötf
("%s: unknow¿ˇ∑côy\n", 
	`s_«me
());

841 i‡(
block_size
 > 4096) {

842 
	`¥ötf
("%s: c™'àh™dÀ %lu byã blocks\n", 
	`s_«me
(), 
block_size
);

843 (
EIO
);

846 
•
->
block_size
 = block_size;

847 #i‡
_WORD_SIZE
 > 2

849 
•
->
cou¡_max
 = 0x100 * 
block_size
;

851 
•
->
cou¡_max
 = 
block_size
 > 
UINT_MAX
/0x100 ? UINT_MAX : 0x100 * block_size;

855 i‡(
ˇ∑côy
 > ((Ë-1Ë/ 
block_size
)

856 
•
->
∑π
[0].
dv_size
 = -1;

858 
•
->
∑π
[0].
dv_size
 = 
ˇ∑côy
 * 
block_size
;

861 
•
->
°©e
 |
S_PRESENT
|
S_READY
;

863 (
OK
);

864 
	}
}

870 
PRIVATE
 
	$scsi_¡≠e
()

873 
scsi
 *
•
 = 
s_•
;

874 
möblk
;

875 
maxblk
;

876 
byã
 *
buf
 = 
tmp_buf
;

879 i‡(
s_ty≥
 !
TYPE_RST
 && s_ty≥ !
TYPE_NRST
Ë(
EIO
);

882 i‡(
	`scsi_sim∂e
(
SCSI_RDLIMITS
, 6Ë!
SENSE_NO_SENSE
Ë(
EIO
);

883 
möblk
 = 
	`b2h16
(
buf
 + 4);

884 
maxblk
 = 
	`b2h24
(
buf
 + 1);

886 
	`¥ötf
("%s:Üimits: min blockÜen %u, max blockÜen %lu\n",

887 
	`s_«me
(), 
möblk
, 
maxblk
);

889 i‡(
•
->
°©e
 & 
S_PRESENT
) {

891 i‡(
•
->
tfixed
Ë
möblk

maxblk
•->
block_size
;

894 
•
->
t°©
.
mt_d§eg
 = 
DS_OK
;

895 
•
->
t°©
.
mt_îªg
 = 0;

896 
•
->
t°©
.
mt_fûío
 = 0;

897 
•
->
t°©
.
mt_blkno
 = 0;

898 
•
->
t°©
.
mt_ªsid
 = 0;

900 i‡(
möblk
 =
maxblk
) {

902 
•
->
tfixed
 = 
TRUE
;

903 
•
->
block_size
 = 
möblk
;

904 
•
->
t°©
.
mt_blksize
 = 
möblk
;

905 
•
->
cou¡_max
 = 
UINT_MAX
;

908 
•
->
tfixed
 = 
FALSE
;

909 
•
->
block_size
 = 1;

910 
•
->
t°©
.
mt_blksize
 = 0;

911 
•
->
cou¡_max
 = 
maxblk
 =0 ? 
UINT_MAX
 : maxblk;

915 i‡(
	`scsi_sim∂e
(
SCSI_MDSENSE
, 255Ë!
SENSE_NO_SENSE
Ë(
EIO
);

918 
•
->
°©e
 &~
S_RDONLY
;

919 i‡(
buf
[2] & 0x80Ë
•
->
°©e
 |
S_RDONLY
;

922 i‡(
buf
[3] >= 8) {

923 
	`¥ötf
("%s: density 0x%02x,Çblocks %lu, blockÜen ",

924 
	`s_«me
(),

925 
buf
[4],

926 
	`b2h24
(
buf
 + 4 + 1));

927 
	`¥ötf
(
•
->
tfixed
 ? "%lu\n" : "v¨übÀ\n", 
	`b2h24
(
buf
 + 4 + 5));

930 
•
->
°©e
 |
S_PRESENT
|
S_READY
;

931 (
OK
);

932 
	}
}

938 
PRIVATE
 
	$s_scheduÀ
(
¥oc_ƒ
, 
i›
)

939 
¥oc_ƒ
;

940 
i‹eque°_s
 *
i›
;

945 
scsi
 *
•
 = 
s_•
;

946 
r
, 
›code
, 
•™nög
;

947 
nbyãs
, 
cou¡
;

948 
pos
;

949 
phys_byãs
 
u£r_phys
, 
dma_phys
;

950 
dma_cou¡
;

951 
i‹eque°_s
 **
i›p
;

952 
phys_byãs
 
dma_œ°
;

955 
nbyãs
 = 
i›
->
io_nbyãs
;

958 
pos
 = 
i›
->
io_posôi⁄
;

961 
u£r_phys
 = 
	`num≠
(
¥oc_ƒ
, (
vú_byãs
Ë
i›
->
io_buf
, 
nbyãs
);

962 i‡(
u£r_phys
 =0Ë(
i›
->
io_nbyãs
 = 
EINVAL
);

965 
›code
 = 
i›
->
io_ªque°
 & ~
OPTIONAL_IO
;

967 
•
->
devty≥
) {

968 
SCSI_DEVCDROM
:

969 
SCSI_DEVWORM
:

970 
SCSI_DEVDISK
:

971 
SCSI_DEVOPTICAL
:

973 i‡(
pos
 >
s_dv
->
dv_size
Ë(
OK
);

974 i‡(
pos
 + 
nbyãs
 > 
s_dv
->
dv_size
)Çbytes = s_dv->dv_size -Öos;

975 
pos
 +
s_dv
->
dv_ba£
;

977 i‡((
nbyãs
 % 
•
->
block_size
Ë!0 || (
pos
 % sp->block_size) != 0) {

979 (
	`s_rdcdrom
(
¥oc_ƒ
, 
i›
, 
pos
, 
nbyãs
, 
u£r_phys
));

983 
SCSI_DEVTAPE
:

984 i‡((
nbyãs
 % 
•
->
block_size
) != 0)

985 (
i›
->
io_nbyãs
 = 
EINVAL
);

988 i‡(
•
->
t°©
.
mt_d§eg
 =
DS_ERR
Ë(
i›
->
io_nbyãs
 = 
EIO
);

990 i‡(
›code
 =
DEV_READ
 && 
•
->
©_eof
Ë(
OK
);

992 
s_√xços
 = 
pos
 = 0;

996 (
i›
->
io_nbyãs
 = 
EIO
);

1000 i‡(!(
•
->
°©e
 & 
S_READY
Ë&& 
	`scsi_¥obe
(Ë!
OK
Ë(
EIO
);

1002 i‡(
rq
->
cou¡
 > 0 && 
pos
 !
s_√xços
) {

1004 i‡((
r
 = 
	`s_föish
()Ë!
OK
) (r);

1008 
s_√xços
 = 
pos
 + 
nbyãs
;

1010 
•™nög
 = 
FALSE
;

1014 
dma_phys
 = 
u£r_phys
;

1016 i‡(
rq
->
cou¡
 > 0 && (

1017 
rq
->
cou¡
 =
•
->
cou¡_max


1018 || 
rq
->
dm≠å
 =rq->
dmÆimô


1019 || !
	`DMA_CHECK
(
dma_œ°
, 
dma_phys
)

1022 i‡((
r
 = 
	`s_föish
()Ë!
OK
) (r);

1023 
s_mu°
 = 
•™nög
;

1028 i‡(
rq
->
cou¡
 == 0) {

1030 
rq
->
pos
 =Öos;

1031 
s_›code
 = 
›code
;

1032 
i›p
 = 
rq
->
iov
;

1033 
rq
->
dm≠å
 =Ñq->
dmÆi°
;

1034 
rq
->
ªåy
 = 2;

1037 
cou¡
 = 
nbyãs
;

1040 i‡(
rq
->
cou¡
 + cou¡ > 
•
->
cou¡_max
)

1041 
cou¡
 = 
•
->
cou¡_max
 - 
rq
->count;

1044 
	`h2b24
(
rq
->
dm≠å
->
d©≠å
, 
dma_phys
);

1045 
	`h2b24
(
rq
->
dm≠å
->
d©Æí
, (
u32_t
Ë(
dma_cou¡
 = 
cou¡
));

1046 
rq
->
dm≠å
++;

1047 
dma_œ°
 = 
dma_phys
 + 
cou¡
;

1050 *
i›p
++ = 
i›
;

1053 
rq
->
cou¡
 += count;

1054 
pos
 +
cou¡
;

1055 
u£r_phys
 +
cou¡
;

1056 
nbyãs
 -
cou¡
;

1057 i‡(!(
i›
->
io_ªque°
 & 
OPTIONAL_IO
)Ë
s_mu°
 = 
TRUE
;

1059 
•™nög
 = 
TRUE
;

1060 } 
nbyãs
 > 0);

1062 (
OK
);

1063 
	}
}

1069 
PRIVATE
 
	$s_föish
()

1073 
scsi
 *
•
 = 
s_•
;

1074 
block
;

1075 
i‹eque°_s
 **
i›p
, *
i›
;

1076 
key
;

1078 i‡(
rq
->
cou¡
 =0Ë(
OK
);

1080 
	`show_ªq
();

1083 i‡(!
s_mu°
 && 
rq
->
cou¡
 < 0x2000) {

1084 
rq
->
cou¡
 = 0;

1085 (
OK
);

1088 
i›p
 = 
rq
->
iov
;

1089 
i›
 = *
i›p
++;

1091 
ªåy
:

1092 
•
->
devty≥
) {

1093 
SCSI_DEVCDROM
:

1094 
SCSI_DEVWORM
:

1095 
SCSI_DEVDISK
:

1096 
SCSI_DEVOPTICAL
:

1098 
block
 = 
rq
->
pos
 / 
•
->
block_size
;

1100 i‡(
block
 < (1L << 21)) {

1102 
	`group0
();

1103 
rq
->
ccb
.
›code
 = 
CCB_SCATTER
;

1104 
	`ccb_cmd0
(
rq
).
scsi_›
 =

1105 
s_›code
 =
DEV_WRITE
 ? 
SCSI_WRITE
 : 
SCSI_READ
;

1106 
	`h2b24
(
	`ccb_cmd0
(
rq
).
lba
, 
block
);

1107 
	`ccb_cmd0
(
rq
).
nblocks
 =Ñq->
cou¡
 / 
•
->
block_size
;

1110 
	`group1
();

1111 
rq
->
ccb
.
›code
 = 
CCB_SCATTER
;

1112 
	`ccb_cmd1
(
rq
).
scsi_›
 =

1113 
s_›code
 =
DEV_WRITE
 ? 
SCSI_WRITE1
 : 
SCSI_READ1
;

1114 
	`h2b32
(
	`ccb_cmd1
(
rq
).
lba
, 
block
);

1115 
	`h2b16
(
	`ccb_cmd1
(
rq
).
nblocks
,Ñq->
cou¡
 / 
•
->
block_size
);

1118 
key
 = 
	`scsi_comm™d
(0L, 0);

1120 i‡(
key
 =
SENSE_NO_SENSE
) {

1123 i‡(
key
 =
SENSE_UNIT_ATT
 || key =
SENSE_ABORTED_CMD
) {

1126 i‡(--
rq
->
ªåy
 > 0) retry;

1127 (
i›
->
io_nbyãs
 = 
EIO
);

1129 i‡(
key
 =
SENSE_RECOVERED
) {

1131 
	`¥ötf
("%s: softÑeadÉrrorát block %lu (recovered)\n",

1132 
	`s_«me
(), 
	`b2h32
(
	`ccb_£n£
(
rq
).
öfo
));

1133 
key
 = 
SENSE_NO_SENSE
;

1137 (
i›
->
io_nbyãs
 = 
EIO
);

1141 
SCSI_DEVTAPE
:

1143 
	`group0
();

1144 
rq
->
ccb
.
›code
 = 
CCB_SCATTER
;

1145 
	`ccb_cmd0
(
rq
).
scsi_›
 = 
s_›code
 =
DEV_WRITE
 ? 
SCSI_WRITE
 : 
SCSI_READ
;

1146 
	`ccb_cmd0
(
rq
).
fixed
 = 
•
->
tfixed
;

1147 
	`h2b24
(
	`ccb_cmd0
(
rq
).
åÀngth
,Ñq->
cou¡
 / 
•
->
block_size
);

1149 
key
 = 
	`scsi_comm™d
(0L, 0);

1151 i‡(
key
 !
SENSE_NO_SENSE
) {

1154 i‡(
	`£n£_eof
(
key
Ë|| 
	`£n£_eom
(key)) {

1156 
•
->
©_eof
 = 
TRUE
;

1157 
•
->
t°©
.
mt_d§eg
 = 
DS_EOF
;

1160 
rq
->
cou¡
 -
•
->
t°©
.
mt_ªsid
 * sp->
block_size
;

1162 i‡(
	`£n£_eof
(
key
)) {

1164 
•
->
t°©
.
mt_blkno
 = !•->
tfixed
 ? -1 :

1165 - (Ë(
rq
->
cou¡
 / 
•
->
block_size
);

1166 
•
->
t°©
.
mt_fûío
++;

1169 i‡(
	`£n£_ûi
(
key
)) {

1172 i‡(
•
->
t°©
.
mt_ªsid
 <= 0) {

1174 (
i›
->
io_nbyãs
 = 
EIO
);

1177 
rq
->
cou¡
 -
•
->
t°©
.
mt_ªsid
;

1178 
•
->
t°©
.
mt_d§eg
 = 
DS_OK
;

1180 i‡(
key
 =
SENSE_RECOVERED
) {

1182 
	`¥ötf
("%s: soft %sÉrror (recovered)\n",

1183 
	`s_«me
(),

1184 
s_›code
 =
DEV_READ
 ? "read" : "write");

1185 
key
 = 
SENSE_NO_SENSE
;

1186 
•
->
t°©
.
mt_d§eg
 = 
DS_OK
;

1188 i‡(
•
->
t°©
.
mt_d§eg
 =
DS_ERR
) {

1190 (
i›
->
io_nbyãs
 = 
EIO
);

1193 
•
->
t°©
.
mt_d§eg
 = 
DS_OK
;

1195 i‡(!
•
->
tfixed
) {

1197 
•
->
t°©
.
mt_blkno
++;

1200 
•
->
t°©
.
mt_blkno
 +
rq
->
cou¡
 / sp->
block_size
;

1202 
•
->
√ed_eof
 = (
s_›code
 =
DEV_WRITE
);

1206 
	`as£π
(0);

1211 i‡(
rq
->
cou¡
 > 
i›
->
io_nbyãs
) {

1212 
rq
->
cou¡
 -
i›
->
io_nbyãs
;

1213 
i›
->
io_nbyãs
 = 0;

1215 
i›
->
io_nbyãs
 -
rq
->
cou¡
;

1216 
rq
->
cou¡
 = 0;

1219 
i›
 = *
i›p
++;

1221 (
key
 =
SENSE_NO_SENSE
 ? 
OK
 : 
EIO
);

1222 
	}
}

1228 
PRIVATE
 
	$s_rdcdrom
(
¥oc_ƒ
, 
i›
, 
pos
, 
nbyãs
, 
u£r_phys
)

1229 
¥oc_ƒ
;

1230 
i‹eque°_s
 *
i›
;

1231 
pos
;

1232 
nbyãs
;

1233 
phys_byãs
 
u£r_phys
;

1238 
scsi
 *
•
 = 
s_•
;

1239 
r
, 
key
;

1240 
off£t
, 
cou¡
;

1241 
block
;

1244 i‡((
i›
->
io_ªque°
 & ~
OPTIONAL_IO
Ë!
DEV_READ
)

1245 (
i›
->
io_nbyãs
 = 
EINVAL
);

1248 i‡((
r
 = 
	`s_föish
()Ë!
OK
) (r);

1252 i‡(!(
•
->
°©e
 & 
S_READY
Ë&& 
	`scsi_¥obe
(Ë!
OK
Ë(
EIO
);

1254 
block
 = 
pos
 / 
•
->
block_size
;

1255 i‡(
block
 =
s_buf_blk
) {

1257 
off£t
 = 
pos
 % 
•
->
block_size
;

1258 
cou¡
 = 
•
->
block_size
 - 
off£t
;

1259 i‡(
cou¡
 > 
nbyãs
) count =Çbytes;

1260 
	`phys_c›y
(
tmp_phys
 + 
off£t
, 
u£r_phys
, (
phys_byãs
Ë
cou¡
);

1261 
pos
 +
cou¡
;

1262 
u£r_phys
 +
cou¡
;

1263 
nbyãs
 -
cou¡
;

1264 
i›
->
io_nbyãs
 -
cou¡
;

1267 
rq
->
ªåy
 = 2;

1269 
	`group1
();

1270 
rq
->
ccb
.
›code
 = 
CCB_INIT
;

1271 
	`ccb_cmd1
(
rq
).
scsi_›
 = 
SCSI_READ1
;

1272 
	`h2b32
(
	`ccb_cmd1
(
rq
).
lba
, 
block
);

1273 
	`h2b16
(
	`ccb_cmd1
(
rq
).
nblocks
, 1);

1274 
key
 = 
	`scsi_comm™d
(
tmp_phys
, 
•
->
block_size
);

1275 } 
key
 =
SENSE_UNIT_ATT
 && --
rq
->
ªåy
 > 0);

1277 i‡(
key
 !
SENSE_NO_SENSE
Ë(
i›
->
io_nbyãs
 = 
EIO
);

1279 
s_buf_blk
 = 
block
;

1281 } 
nbyãs
 > 0);

1282 (
OK
);

1283 
	}
}

1289 
PRIVATE
 
	$s_do_˛o£
(
dp
, 
m_±r
)

1290 
drivî
 *
dp
;

1291 
mesßge
 *
m_±r
;

1293 
scsi
 *
•
;

1295 i‡(
	`s_¥ï¨e
(
m_±r
->
DEVICE
Ë=
NIL_DEV
Ë(
ENXIO
);

1296 
•
 = 
s_•
;

1298 
•
->
›í_˘
--;

1301 i‡(
•
->
devty≥
 !
SCSI_DEVTAPE
Ë(
OK
);

1303 
•
->
©_eof
 = 
FALSE
;

1306 i‡(
•
->
√ed_eof
 && sp->
t°©
.
mt_d§eg
 !
DS_ERR
) {

1307 i‡(
	`scsi_sim∂e
(
SCSI_WREOF
, 1Ë!
SENSE_NO_SENSE
) {

1308 
	`¥ötf
("%s: faûedÅÿadd fûem¨k\n", 
	`s_«me
());

1310 
•
->
t°©
.
mt_d§eg
 = 
DS_OK
;

1311 
•
->
t°©
.
mt_blkno
 = 0;

1312 
•
->
t°©
.
mt_fûío
++;

1317 i‡(
s_ty≥
 =
TYPE_RST
) {

1318 i‡(
	`scsi_sim∂e
(
SCSI_REWIND
, 1Ë!
SENSE_NO_SENSE
) {

1319 
	`¥ötf
("%s: faûedÅÿªwöd\n", 
	`s_«me
());

1321 
•
->
t°©
.
mt_d§eg
 = 
DS_OK
;

1322 
•
->
t°©
.
mt_blkno
 = 0;

1323 
•
->
t°©
.
mt_fûío
 = 0;

1326 (
OK
);

1327 
	}
}

1333 
PRIVATE
 
	$s_do_io˘l
(
dp
, 
m_±r
)

1334 
drivî
 *
dp
;

1335 
mesßge
 *
m_±r
;

1337 
scsi
 *
•
;

1339 i‡(
	`s_¥ï¨e
(
m_±r
->
DEVICE
Ë=
NIL_DEV
Ë(
ENXIO
);

1340 
•
 = 
s_•
;

1343 
•
->
devty≥
) {

1344 
SCSI_DEVDISK
:

1345 
SCSI_DEVWORM
:

1346 
SCSI_DEVCDROM
:

1347 
SCSI_DEVOPTICAL
:

1348 i‡(
m_±r
->
REQUEST
 =
DIOCEJECT
) {

1350 i‡(
•
->
›í_˘
 > 1Ë(
EBUSY
);

1353 i‡(
	`scsi_sim∂e
(
SCSI_STRTSTP
, 2Ë!
SENSE_NO_SENSE
)

1354 (
EIO
);

1355 (
OK
);

1358 (
	`do_dio˙é
(
dp
, 
m_±r
));

1361 (
ENOTTY
);

1363 
SCSI_DEVTAPE
:

1368 i‡(
m_±r
->
REQUEST
 =
MTIOCTOP
) {

1369 
mt›
 
›
;

1370 
phys_byãs
 
›_phys
;

1371 
dñè
;

1372 
key
;

1373 
byã
 *
buf
 = 
tmp_buf
;

1376 
›_phys
 = 
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
Ëm_±r->
ADDRESS
, (
›
));

1377 i‡(
›_phys
 =0Ë(
EINVAL
);

1378 
	`phys_c›y
(
›_phys
, 
	`vú2phys
(&
›
), (
phys_byãs
) (op));

1380 
›
.
mt_›
) {

1381 
MTREW
:

1382 
MTOFFL
:

1383 
MTRETEN
:

1384 
MTFSF
:

1385 
MTFSR
:

1386 
MTBSF
:

1387 
MTBSR
:

1388 
MTEOM
:

1390 i‡(
•
->
√ed_eof
 && sp->
t°©
.
mt_d§eg
 !
DS_ERR
) {

1391 i‡(
	`scsi_sim∂e
(
SCSI_WREOF
, 1Ë!
SENSE_NO_SENSE
)

1392 (
EIO
);

1393 
•
->
t°©
.
mt_blkno
 = 0;

1394 
•
->
t°©
.
mt_fûío
++;

1395 
•
->
√ed_eof
 = 
FALSE
;

1397 
•
->
©_eof
 = 
FALSE
;

1400 
›
.
mt_›
) {

1401 
MTREW
:

1402 
MTOFFL
:

1403 
MTRETEN
:

1404 
MTERASE
:

1406 
›
.
mt_›
) {

1407 
MTOFFL
:

1408 i‡(
	`scsi_sim∂e
(
SCSI_LOADUNLD
, 0Ë!
SENSE_NO_SENSE
)

1409 (
EIO
);

1410 
•
->
°©e
 &~
S_READY
;

1412 
MTRETEN
:

1413 i‡(
	`scsi_sim∂e
(
SCSI_LOADUNLD
, 3Ë!
SENSE_NO_SENSE
)

1414 (
EIO
);

1416 
MTERASE
:

1417 i‡(
	`scsi_sim∂e
(
SCSI_REWIND
, 0Ë!
SENSE_NO_SENSE
)

1418 (
EIO
);

1419 i‡(
	`scsi_sim∂e
(
SCSI_ERASE
, 1Ë!
SENSE_NO_SENSE
)

1420 (
EIO
);

1423 
MTREW
:

1424 i‡(
	`scsi_sim∂e
(
SCSI_REWIND
, 0Ë!
SENSE_NO_SENSE
)

1425 (
EIO
);

1427 
•
->
t°©
.
mt_d§eg
 = 
DS_OK
;

1428 
•
->
t°©
.
mt_blkno
 = 0;

1429 
•
->
t°©
.
mt_fûío
 = 0;

1431 
MTFSF
:

1432 
MTFSR
:

1433 
MTBSF
:

1434 
MTBSR
:

1435 i‡(
•
->
t°©
.
mt_d§eg
 =
DS_ERR
Ë(
EIO
);

1436 
	`group0
();

1437 
rq
->
ccb
.
›code
 = 
CCB_INIT
;

1438 
	`ccb_cmd0
(
rq
).
scsi_›
 = 
SCSI_SPACE
;

1439 
dñè
 = 
›
.
mt_cou¡
;

1440 i‡(
›
.
mt_›
 =
MTBSR
Ë
dñè
 = -delta;

1441 i‡(
›
.
mt_›
 =
MTBSF
Ë
dñè
 = -delta - 1;

1442 
	`h2b24
(
	`ccb_cmd0
(
rq
).
åÀngth
, 
dñè
);

1443 
	`ccb_cmd0
(
rq
).
fixed
 =

1444 
›
.
mt_›
 =
MTFSR
 || op.mt_› =
MTBSR
 ? 0 : 1;

1445 i‡((
key
 = 
	`scsi_comm™d
(0L, 0)Ë!
SENSE_NO_SENSE
) {

1446 i‡(
	`£n£_key
(
key
Ë!
SENSE_NO_SENSE
Ë(
EIO
);

1448 i‡(
	`£n£_eom
(
key
)) {

1450 i‡(
›
.
mt_›
 =
MTBSF
 || op.mt_› =
MTBSR
) {

1452 
•
->
t°©
.
mt_d§eg
 = 
DS_EOF
;

1453 
•
->
t°©
.
mt_blkno
 = 0;

1454 
•
->
t°©
.
mt_fûío
 = 0;

1457 (
EIO
);

1460 i‡(
	`£n£_eof
(
key
)) {

1462 
•
->
t°©
.
mt_d§eg
 = 
DS_EOF
;

1463 
•
->
©_eof
 = 
TRUE
;

1464 i‡(
›
.
mt_›
 =
MTFSR
) {

1466 
•
->
t°©
.
mt_blkno
 = 0;

1467 
•
->
t°©
.
mt_fûío
++;

1470 
•
->
t°©
.
mt_blkno
 = -1;

1471 
•
->
t°©
.
mt_fûío
--;

1475 i‡(
›
.
mt_›
 =
MTFSR
 || op.mt_› =
MTBSR
) {

1476 
•
->
t°©
.
mt_blkno
 +
dñè
;

1478 
•
->
t°©
.
mt_blkno
 = 0;

1479 
•
->
t°©
.
mt_fûío
 +
dñè
;

1481 i‡(
›
.
mt_›
 =
MTBSF
) {

1483 
	`group0
();

1484 
rq
->
ccb
.
›code
 = 
CCB_INIT
;

1485 
	`ccb_cmd0
(
rq
).
scsi_›
 = 
SCSI_SPACE
;

1486 
	`h2b24
(
	`ccb_cmd0
(
rq
).
åÀngth
, 1L);

1487 
	`ccb_cmd0
(
rq
).
fixed
 = 1;

1488 i‡(
	`scsi_comm™d
(0L, 0Ë!
SENSE_NO_SENSE
)

1489 (
EIO
);

1490 
•
->
t°©
.
mt_fûío
++;

1492 
•
->
t°©
.
mt_d§eg
 = 
DS_OK
;

1495 
MTWEOF
:

1497 i‡(
•
->
t°©
.
mt_d§eg
 =
DS_ERR
Ë(
EIO
);

1498 i‡(
›
.
mt_cou¡
 < 0Ë(
EIO
);

1499 i‡(
›
.
mt_cou¡
 =0Ë(
OK
);

1500 
	`group0
();

1501 
rq
->
ccb
.
›code
 = 
CCB_INIT
;

1502 
	`ccb_cmd0
(
rq
).
scsi_›
 = 
SCSI_WREOF
;

1503 
	`h2b24
(
	`ccb_cmd0
(
rq
).
åÀngth
, 
›
.
mt_cou¡
);

1504 i‡(
	`scsi_comm™d
(0L, 0Ë!
SENSE_NO_SENSE
Ë(
EIO
);

1505 
•
->
t°©
.
mt_d§eg
 = 
DS_OK
;

1506 
•
->
t°©
.
mt_blkno
 = 0;

1507 
•
->
t°©
.
mt_fûío
 +
›
.
mt_cou¡
;

1508 
•
->
√ed_eof
 = 
FALSE
;

1510 
MTEOM
:

1512 i‡(
•
->
t°©
.
mt_d§eg
 =
DS_ERR
Ë(
EIO
);

1514 
	`group0
();

1515 
rq
->
ccb
.
›code
 = 
CCB_INIT
;

1516 
	`ccb_cmd0
(
rq
).
scsi_›
 = 
SCSI_SPACE
;

1517 
	`h2b24
(
	`ccb_cmd0
(
rq
).
åÀngth
, 0x7FFFFF);

1518 
	`ccb_cmd0
(
rq
).
fixed
 = 1;

1519 
key
 = 
	`scsi_comm™d
(0L, 0);

1520 
•
->
t°©
.
mt_blkno
 = 0;

1521 
•
->
t°©
.
mt_fûío
 += 0x7FFFFF;

1522 i‡(
key
 !
SENSE_NO_SENSE
) {

1523 i‡(
key
 !
SENSE_BLANK_CHECK
Ë(
EIO
);

1524 
•
->
t°©
.
mt_fûío
 -•->t°©.
mt_ªsid
;

1526 } 
key
 =
SENSE_NO_SENSE
);

1527 
•
->
t°©
.
mt_d§eg
 = 
DS_OK
;

1529 
MTBLKZ
:

1530 
MTMODE
:

1534 i‡(
	`scsi_sim∂e
(
SCSI_REWIND
, 0Ë!
SENSE_NO_SENSE
)

1535 (
EIO
);

1537 
•
->
t°©
.
mt_d§eg
 = 
DS_OK
;

1538 
•
->
t°©
.
mt_blkno
 = 0;

1539 
•
->
t°©
.
mt_fûío
 = 0;

1541 i‡(
›
.
mt_›
 =
MTBLKZ
 && op.
mt_cou¡
 == 0) {

1543 
•
->
tfixed
 = 
FALSE
;

1544 
•
->
block_size
 = 1;

1547 i‡(
	`scsi_sim∂e
(
SCSI_MDSENSE
, 255Ë!
SENSE_NO_SENSE
)

1548 (
EIO
);

1551 i‡(
buf
[3] < 8Ë(
EIO
);

1552 
buf
[0] = 0;

1553 
buf
[1] = 0;

1555 
buf
[3] = 8;

1556 i‡(
›
.
mt_›
 =
MTMODE
)

1557 
buf
[4 + 0] = 
›
.
mt_cou¡
;

1559 
buf
[4 + 4] = 0;

1560 i‡(
›
.
mt_›
 =
MTBLKZ
)

1561 
	`h2b24
(
buf
 + 4 + 5, (Ë
›
.
mt_cou¡
);

1564 i‡(
	`scsi_sim∂e
(
SCSI_MDSELECT
, 4+8Ë!
SENSE_NO_SENSE
)

1565 (
EIO
);

1566 i‡(
›
.
mt_›
 =
MTBLKZ
) {

1567 
•
->
tfixed
 = 
TRUE
;

1568 
•
->
block_size

›
.
mt_cou¡
;

1571 
•
->
°©e
 &~
S_READY
;

1572 i‡(
	`scsi_¥obe
(Ë!
OK
Ë(
EIO
);

1576 (
ENOTTY
);

1579 i‡(
m_±r
->
REQUEST
 =
MTIOCGET
) {

1581 
phys_byãs
 
gë_phys
;

1583 
gë_phys
 = 
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
Ëm_±r->
ADDRESS
,

1584 (
•
->
t°©
));

1585 i‡(
gë_phys
 =0Ë(
EINVAL
);

1587 i‡(
•
->
t°©
.
mt_d§eg
 =
DS_OK
) {

1589 
•
->
t°©
.
mt_îªg
 = 0;

1590 
•
->
t°©
.
mt_ªsid
 = 0;

1592 
	`phys_c›y
(
	`vú2phys
(&
•
->
t°©
), 
gë_phys
,

1593 (
phys_byãs
Ë(
•
->
t°©
));

1596 (
ENOTTY
);

1598 (
OK
);

1599 
	}
}

1605 
PRIVATE
 
	$scsi_sim∂e
(
›code
, 
cou¡
)

1606 
›code
;

1607 
cou¡
;

1611 
vú_byãs
 
Àn
 = 0;

1613 
	`group0
();

1614 
rq
->
ccb
.
›code
 = 
CCB_INIT
;

1615 
	`ccb_cmd0
(
rq
).
scsi_›
 = 
›code
;

1618 
›code
) {

1619 
SCSI_REQSENSE
:

1620 
SCSI_INQUIRY
:

1621 
SCSI_MDSENSE
:

1622 
SCSI_MDSELECT
:

1623 
	`ccb_cmd0
(
rq
).
nblocks
 = 
cou¡
;

1624 
Àn
 = 
cou¡
;

1627 
SCSI_STRTSTP
:

1629 
	`ccb_cmd0
(
rq
).
nblocks
 = 
cou¡
;

1632 
SCSI_RDLIMITS
:

1633 
Àn
 = 
cou¡
;

1636 
SCSI_WREOF
:

1637 
	`h2b24
(
	`ccb_cmd0
(
rq
).
åÀngth
, (Ë
cou¡
);

1640 
SCSI_REWIND
:

1641 
SCSI_ERASE
:

1642 
	`ccb_cmd0
(
rq
).
fixed
 = 
cou¡
;

1645 (
	`scsi_comm™d
(
tmp_phys
, 
Àn
));

1646 
	}
}

1652 
PRIVATE
 
	$group0
()

1656 
rq
->
ccb
.
cmdÀn
 = (
cdb0_t
);

1659 * (
u32_t
 *Ë(
rq
->
ccb
.
cmd
 + 0) = 0;

1660 * (
u16_t
 *Ë(
rq
->
ccb
.
cmd
 + 4) = 0;

1661 
	}
}

1667 
PRIVATE
 
	$group1
()

1669 
rq
->
ccb
.
cmdÀn
 = (
cdb1_t
);

1670 * (
u32_t
 *Ë(
rq
->
ccb
.
cmd
 + 0) = 0;

1671 * (
u32_t
 *Ë(
rq
->
ccb
.
cmd
 + 4) = 0;

1672 * (
u16_t
 *Ë(
rq
->
ccb
.
cmd
 + 8) = 0;

1673 
	}
}

1679 
PRIVATE
 
	$scsi_comm™d
(
d©a
, 
Àn
)

1680 
phys_byãs
 
d©a
;

1681 
vú_byãs
 
Àn
;

1686 
scsi
 *
•
 = 
s_•
;

1687 
key
;

1688 
mesßge
 
öå_mess
;

1690 
rq
->
ccb
.
addr˙é
 = 
	`ccb_scid
(
s_•
->
èrg
Ë| 
	`ccb_lun
(s_•->
lun
);

1692 i‡(
rq
->
ccb
.
›code
 =
CCB_SCATTER
) {

1694 
rq
->
ccb
.
addr˙é
 |
s_›code
 =
DEV_READ
 ? 
CCB_INCHECK
 : 
CCB_OUTCHECK
;

1695 
d©a
 = 
	`vú2phys
(
rq
->
dmÆi°
);

1696 
Àn
 = (
byã
 *Ë
rq
->
dm≠å
 - (byã *Ërq->
dmÆi°
;

1697 i‡(
aha_modñ
 =
AHA1540
) {

1699 
rq
->
ccb
.
›code
 = 
CCB_INIT
;

1700 
d©a
 = 
	`b2h24
(
rq
->
dmÆi°
[0].
d©≠å
);

1701 
Àn
 = 
	`b2h24
(
rq
->
dmÆi°
[0].
d©Æí
);

1704 
	`h2b24
(
rq
->
ccb
.
d©Æí
, (
u32_t
Ë
Àn
);

1705 
	`h2b24
(
rq
->
ccb
.
d©≠å
, 
d©a
);

1706 
	`dump_scsi_cmd
();

1708 
maûbox
[0].
°©us
 = 
AHA_MBOXSTART
;

1710 
	`out_byã
(
AHA_DATAREG
, 
AHACOM_STARTSCSI
);

1713 
maûbox
[1].
°©us
 =
AHA_MBOXFREE
) {

1715 
	`ª˚ive
(
HARDWARE
, &
öå_mess
);

1717 
maûbox
[1].
°©us
 = 
AHA_MBOXFREE
;

1720 i‡(
rq
->
ccb
.
ha°©
 != 0) {

1722 
	`¥ötf
("%s: ho°ád≠ã∏îr‹ 0x%02x%s\n", 
	`s_«me
(), 
rq
->
ccb
.
ha°©
,

1723 
rq
->
ccb
.
ha°©
 =
HST_TIMEOUT
 ? " (SelectionÅimeout)" : "");

1724 
	`îr‹dump
();

1725 i‡(
•
->
devty≥
 =
SCSI_DEVTAPE
Ë•->
t°©
.
mt_d§eg
 = 
DS_ERR
;

1726 
	`mem£t
((*Ë&
	`ccb_£n£
(
rq
), 0, (
£n£_t
));

1727 (
SENSE_HARDWARE
);

1730 i‡(
rq
->
ccb
.
èr°©
 != 0) {

1732 
£n£_t
 *
£n£
 = &
	`ccb_£n£
(
rq
);

1734 i‡(
£n£
->
Àn
 < 2) {

1736 
£n£
->
add_code
 = sí£->
add_quÆ
 = 0;

1740 i‡(
rq
->
ccb
.
èr°©
 =
TST_CHECK
) {

1741 i‡((
£n£
->
îrc
 & 0x7E) == 0x70) {

1743 
key
 = 
£n£
->key;

1746 
key
 = 
SENSE_VENDOR
;

1749 i‡(
rq
->
ccb
.
èr°©
 =
TST_LUNBUSY
) {

1751 
key
 = 
SENSE_NOT_READY
;

1754 
key
 = 
SENSE_HARDWARE
;

1756 
	`mem£t
((*Ë
£n£
, 0, (
£n£_t
));

1759 i‡(
	`£n£_£rious
(
	`£n£_key
(
key
))) {

1761 
	`¥ötf
("%s:Éº‹ o¿comm™d 0x%02x, ", 
	`s_«me
(),

1762 
rq
->
ccb
.
cmd
[0]);

1763 i‡(
rq
->
ccb
.
èr°©
 !
TST_CHECK
) {

1764 
	`¥ötf
("èrgë sètu†0x%02x\n", 
rq
->
ccb
.
èr°©
);

1766 
	`¥ötf
("sense key 0x%02x (%s),ádditional 0x%02x%02x\n",

1767 
£n£
->
key
,

1768 
°r_scsi_£n£
[
	`£n£_key
(
key
)],

1769 
£n£
->
add_code
, sí£->
add_quÆ
);

1771 
	`îr‹dump
();

1774 i‡(
•
->
devty≥
 =
SCSI_DEVTAPE
) {

1776 
•
->
t°©
.
mt_d§eg
 = 
DS_ERR
;

1777 
•
->
t°©
.
mt_îªg
 = 
key
;

1778 
•
->
t°©
.
mt_ªsid
 = 
	`b2h32
(
£n£
->
öfo
);

1782 i‡(
	`£n£_key
(
key
Ë!
SENSE_NO_SENSE
) key = sense_key(key);

1784 (
key
);

1786 (
SENSE_NO_SENSE
);

1787 
	}
}

1793 
PRIVATE
 
	$aha_comm™d
(
ouéí
, 
ouçå
, 
öÀn
, 
ö±r
)

1794 
ouéí
, 
öÀn
;

1795 
byã
 *
ouçå
, *
ö±r
;

1798 
i
;

1801 
i
 = 0; i < 
ouéí
; i++) {

1802 
	`ö_byã
(
AHA_STATREG
Ë& 
AHA_CDF
) {}

1803 
	`out_byã
(
AHA_DATAREG
, *
ouçå
++);

1807 
i
 = 0; i < 
öÀn
; i++) {

1808 !(
	`ö_byã
(
AHA_STATREG
Ë& 
AHA_DF
)

1809 && !(
	`ö_byã
(
AHA_INTRREG
Ë& 
AHA_HACC
)) {}

1810 *
ö±r
++ = 
	`ö_byã
(
AHA_DATAREG
);

1814 !(
	`ö_byã
(
AHA_INTRREG
Ë& 
AHA_HACC
)) {}

1815 
	`out_byã
(
AHA_CNTLREG
, 
AHA_IRST
);

1816 i‡(
aha_úq
 !0Ë
	`íabÀ_úq
(aha_irq);

1819 
	}
}

1825 
PRIVATE
 
	$aha_ª£t
()

1827 
°©
;

1828 
úq
, 
bus_⁄
, 
bus_off
, 
å_•ìd
;

1829 
sg_max
;

1830 
v
;

1831 
aha0_ív
[] = "AHA0", 
aha_fmt
[] = "x:d:d:x";

1832 
byã
 
cmd
[5], 
haid©a
[4], 
gëcd©a
[3], 
extbios
[2];

1833 
mûli_°©e
 
ms
;

1836 
v
 = 
AHA_BASEREG
;

1837 i‡(
	`ív_∑r£
(
aha0_ív
, 
aha_fmt
, 0, &
v
, 0x000L, 0x3FFLË=
EP_OFF
)  0;

1838 
aha_ba£ªg
 = 
v
;

1840 
v
 = 15;

1841 (Ë
	`ív_∑r£
(
aha0_ív
, 
aha_fmt
, 1, &
v
, 2L, 15L);

1842 
bus_⁄
 = 
v
;

1844 
v
 = 1;

1845 (Ë
	`ív_∑r£
(
aha0_ív
, 
aha_fmt
, 2, &
v
, 1L, 64L);

1846 
bus_off
 = 
v
;

1848 
v
 = 0x00;

1849 (Ë
	`ív_∑r£
(
aha0_ív
, 
aha_fmt
, 3, &
v
, 0x00L, 0xFFL);

1850 
å_•ìd
 = 
v
;

1853 
	`out_byã
(
AHA_CNTLREG
, 
AHA_HRST
);

1854 
	`mûli_°¨t
(&
ms
);

1855 (
°©
 = 
	`ö_byã
(
AHA_STATREG
)Ë& 
AHA_STST
) {

1856 i‡(
	`mûli_ñ≠£d
(&
ms
Ë>
AHA_TIMEOUT
) {

1857 
	`¥ötf
("aha0: AHA154x controllerÇotÑesponding\n");

1863 i‡((
°©
 & (
AHA_DIAGF
 | 
AHA_INIT
 | 
AHA_IDLE
 | 
AHA_CDF
 | 
AHA_DF
))

1864 !(
AHA_INIT
 | 
AHA_IDLE
)) {

1865 
	`¥ötf
("aha0: AHA154x controller failed self-test\n");

1872 
cmd
[0] = 
AHACOM_HAINQUIRY
;

1873 
	`aha_comm™d
(1, 
cmd
, 4, 
haid©a
);

1875 
cmd
[0] = 
AHACOM_GETCONFIG
;

1876 
	`aha_comm™d
(1, 
cmd
, 3, 
gëcd©a
);

1879 
aha_modñ
 = 
haid©a
[0];

1884 i‡(
aha_modñ
 >
AHA1540C
) {

1885 
cmd
[0] = 
AHACOM_EXTBIOS
;

1886 
	`aha_comm™d
(1, 
cmd
, 2, 
extbios
);

1887 i‡(
extbios
[1] != 0) {

1889 
cmd
[0] = 
AHACOM_MBOX_ENABLE
;

1890 
cmd
[1] = 0;

1891 
cmd
[2] = 
extbios
[1];

1892 
	`aha_comm™d
(3, 
cmd
, 0, 0);

1897 
sg_max
 = 16;

1898 i‡(
aha_modñ
 =
AHA1540
Ë
sg_max
 = 1;

1899 i‡(
aha_modñ
 >
AHA1540C
Ë
sg_max
 = 255;

1902 
gëcd©a
[0]) {

1904 
	`out_byã
(0xD6, 0xC3);

1905 
	`out_byã
(0xD4, 0x03);

1908 
	`out_byã
(0xD6, 0xC2);

1909 
	`out_byã
(0xD4, 0x02);

1912 
	`out_byã
(0xD6, 0xC1);

1913 
	`out_byã
(0xD4, 0x01);

1916 
	`out_byã
(0x0B, 0x0C);

1917 
	`out_byã
(0x0A, 0x00);

1920 
	`¥ötf
("aha0: AHA154x: strange DMA channel\n");

1925 
gëcd©a
[1]) {

1926 0x40: 
úq
 = 15; ;

1927 0x20: 
úq
 = 14; ;

1928 0x08: 
úq
 = 12; ;

1929 0x04: 
úq
 = 11; ;

1930 0x02: 
úq
 = 10; ;

1931 0x01: 
úq
 = 9; ;

1933 
	`¥ötf
("aha0: strange IRQ setting\n");

1938 
	`put_úq_h™dÀr
(
úq
, 
s_h™dÀr
);

1939 
aha_úq
 = 
úq
;

1940 
	`íabÀ_úq
(
úq
);

1948 
rq
->
ccb
.
£n£Àn
 = 
CCB_SENSEREQ
;

1949 
	`h2b24
(
rq
->
ccb
.
lök±r
, 0L);

1950 
rq
->
ccb
.
lökid
 = 0;

1951 
rq
->
ccb
.
ª£rved
[0] = 0;

1952 
rq
->
ccb
.
ª£rved
[1] = 0;

1955 
rq
->
dmÆimô
 =Ñq->
dmÆi°
 + (
sg_max
 < 
NR_IOREQS
 ? sg_max : NR_IOREQS);

1958 
maûbox
[0].
°©us
 = 
AHA_MBOXFREE
;

1959 
	`h2b24
(
maûbox
[0].
ccb±r
, 
	`vú2phys
(&
rq
->
ccb
));

1962 
maûbox
[1].
°©us
 = 
AHA_MBOXFREE
;

1966 
cmd
[0] = 
AHACOM_INITBOX
;

1967 
cmd
[1] = 1;

1968 
	`h2b24
(
cmd
 + 2, 
	`vú2phys
(
maûbox
));

1969 
	`aha_comm™d
(5, 
cmd
, 0, 0);

1974 
cmd
[0] = 
AHACOM_BUSON
;

1975 
cmd
[1] = 
bus_⁄
;

1976 
	`aha_comm™d
(2, 
cmd
, 0, 0);

1978 
cmd
[0] = 
AHACOM_BUSOFF
;

1979 
cmd
[1] = 
bus_off
;

1980 
	`aha_comm™d
(2, 
cmd
, 0, 0);

1982 
cmd
[0] = 
AHACOM_SPEED
;

1983 
cmd
[1] = 
å_•ìd
;

1984 
	`aha_comm™d
(2, 
cmd
, 0, 0);

1987 
cmd
[0] = 
AHACOM_SETIMEOUT
;

1988 
cmd
[1] = 
SCSI_TIMEOUT
 != 0;

1989 
cmd
[2] = 0;

1990 
cmd
[3] = 
SCSI_TIMEOUT
 / 256;

1991 
cmd
[4] = 
SCSI_TIMEOUT
 % 256;

1992 
	`aha_comm™d
(5, 
cmd
, 0, 0);

1995 
	}
}

2001 
PRIVATE
 
	$s_h™dÀr
(
úq
)

2002 
úq
;

2006 i‡(
	`ö_byã
(
AHA_INTRREG
Ë& 
AHA_HACC
) {

2010 
	`out_byã
(
AHA_CNTLREG
, 
AHA_IRST
);

2011 
	`öãºu±
(
SCSI
);

2014 
	}
}

2020 
PRIVATE
 
	$h2b16
(
b
, 
h
)

2021 
big16
 
b
;

2022 
U16_t
 
h
;

2025 
b
[0] = 
h
 >> 8;

2026 
b
[1] = 
h
 >> 0;

2027 
	}
}

2033 
PRIVATE
 
	$h2b24
(
b
, 
h
)

2034 
big24
 
b
;

2035 
u32_t
 
h
;

2037 
b
[0] = 
h
 >> 16;

2038 
b
[1] = 
h
 >> 8;

2039 
b
[2] = 
h
 >> 0;

2040 
	}
}

2046 
PRIVATE
 
	$h2b32
(
b
, 
h
)

2047 
big32
 
b
;

2048 
u32_t
 
h
;

2050 
b
[0] = 
h
 >> 24;

2051 
b
[1] = 
h
 >> 16;

2052 
b
[2] = 
h
 >> 8;

2053 
b
[3] = 
h
 >> 0;

2054 
	}
}

2060 
PRIVATE
 
u16_t
 
	$b2h16
(
b
)

2061 
big16
 
b
;

2063  ((
u16_t
Ë
b
[0] << 8)

2064 | ((
u16_t
Ë
b
[1] << 0);

2065 
	}
}

2071 
PRIVATE
 
u32_t
 
	$b2h24
(
b
)

2072 
big24
 
b
;

2074  ((
u32_t
Ë
b
[0] << 16)

2075 | ((
u32_t
Ë
b
[1] << 8)

2076 | ((
u32_t
Ë
b
[2] << 0);

2077 
	}
}

2083 
PRIVATE
 
u32_t
 
	$b2h32
(
b
)

2084 
big32
 
b
;

2086  ((
u32_t
Ë
b
[0] << 24)

2087 | ((
u32_t
Ë
b
[1] << 16)

2088 | ((
u32_t
Ë
b
[2] << 8)

2089 | ((
u32_t
Ë
b
[3] << 0);

2090 
	}
}

2093 #i‡
AHA_DEBUG
 & 2

2097 
PRIVATE
 
	$îr‹dump
()

2099 
i
;

2101 
	`¥ötf
("aha ccb dump:");

2102 
i
 = 0; i < (
rq
->
ccb
); i++) {

2103 i‡(
i
 % 26 =0Ë
	`¥ötf
("\n");

2104 
	`¥ötf
(" %02x", ((
byã
 *Ë&
rq
->
ccb
)[
i
]);

2106 
	`¥ötf
("\n");

2107 
	}
}

2111 #i‡
AHA_DEBUG
 & 4

2115 
PRIVATE
 
	$show_ªq
()

2117 
i‹eque°_s
 **
i›p
;

2118 
dma_t
 *
dm≠
;

2119 
cou¡
, 
nbyãs
, 
Àn
;

2121 
i›p
 = 
rq
->
iov
;

2122 
dm≠
 = 
rq
->
dmÆi°
;

2123 
cou¡
 = 
rq
->count;

2124 
nbyãs
 = 0;

2126 
	`¥ötf
("%lu:%u", 
rq
->
pos
, 
cou¡
);

2128 
cou¡
 > 0) {

2129 i‡(
i›p
 =
rq
->
iov
 || *iopp != iopp[-1])

2130 
nbyãs
 = (*
i›p
)->
io_nbyãs
;

2132 
	`¥ötf
(" (%u,%lx,%u)", 
nbyãs
, 
	`b2h24
(
dm≠
->
d©≠å
),

2133 
Àn
 = 
	`b2h24
(
dm≠
->
d©Æí
));

2134 
dm≠
++;

2135 
i›p
++;

2136 
cou¡
 -
Àn
;

2137 
nbyãs
 -
Àn
;

2139 i‡(
nbyãs
 > 0Ë
	`¥ötf
(" ...(%u)",Çbytes);

2140 
	`¥ötf
("\n");

2141 
	}
}

2145 #i‡
AHA_DEBUG
 & 8

2149 
PRIVATE
 
	$dump_scsi_cmd
()

2151 
i
;

2153 
	`¥ötf
("scsi cmd:");

2154 
i
 = 0; i < 
rq
->
ccb
.
cmdÀn
; i++Ë
	`¥ötf
(" %02x",Ñq->ccb.
cmd
[i]);

2155 
	`¥ötf
("\n");

2156 
	}
}

2163 
PRIVATE
 
	$s_geomëry
(
íåy
)

2164 
∑πôi⁄
 *
íåy
;

2174 
size
 = 
s_•
->
∑π
[0].
dv_size
;

2175 
hóds
, 
£˘‹s
;

2177 i‡(
size
 < 1024L * 64 * 32 * 512) {

2179 
hóds
 = 64;

2180 
£˘‹s
 = 32;

2183 
hóds
 = 255;

2184 
£˘‹s
 = 63;

2186 
íåy
->
cylödîs
 = (
size
 >> 
SECTOR_SHIFT
Ë/ (
hóds
 * 
£˘‹s
);

2187 
íåy
->
hóds
 = heads;

2188 
íåy
->
£˘‹s
 = sectors;

2189 
	}
}

	@alloc.c

18 
	~"mm.h
"

19 
	~<möix/com.h
>

21 
	#NR_HOLES
 128

	)

22 
	#NIL_HOLE
 (
hﬁe
 *Ë0

	)

24 
PRIVATE
 
	shﬁe
 {

25 
phys_˛icks
 
	mh_ba£
;

26 
phys_˛icks
 
	mh_Àn
;

27 
hﬁe
 *
	mh_√xt
;

28 } 
	ghﬁe
[
NR_HOLES
];

31 
PRIVATE
 
hﬁe
 *
	ghﬁe_hód
;

32 
PRIVATE
 
hﬁe
 *
	g‰ì_¶Ÿs
;

34 
FORWARD
 
_PROTOTYPE
–
dñ_¶Ÿ
, (
hﬁe
 *
¥ev_±r
, hﬁê*
hp
) );

35 
FORWARD
 
_PROTOTYPE
–
mîge
, (
hﬁe
 *
hp
) );

41 
PUBLIC
 
phys_˛icks
 
	$Æloc_mem
(
˛icks
)

42 
phys_˛icks
 
˛icks
;

51 
hﬁe
 *
hp
, *
¥ev_±r
;

52 
phys_˛icks
 
ﬁd_ba£
;

54 
hp
 = 
hﬁe_hód
;

55 
hp
 !
NIL_HOLE
) {

56 i‡(
hp
->
h_Àn
 >
˛icks
) {

58 
ﬁd_ba£
 = 
hp
->
h_ba£
;

59 
hp
->
h_ba£
 +
˛icks
;

60 
hp
->
h_Àn
 -
˛icks
;

63 i‡(
hp
->
h_Àn
 !0Ë(
ﬁd_ba£
);

66 
	`dñ_¶Ÿ
(
¥ev_±r
, 
hp
);

67 (
ﬁd_ba£
);

70 
¥ev_±r
 = 
hp
;

71 
hp
 = hp->
h_√xt
;

73 (
NO_MEM
);

74 
	}
}

80 
PUBLIC
 
	$‰ì_mem
(
ba£
, 
˛icks
)

81 
phys_˛icks
 
ba£
;

82 
phys_˛icks
 
˛icks
;

90 
hﬁe
 *
hp
, *
√w_±r
, *
¥ev_±r
;

92 i‡(
˛icks
 == 0) ;

93 i‡–(
√w_±r
 = 
‰ì_¶Ÿs
Ë=
NIL_HOLE
Ë
	`∑nic
("HﬁêèbÀ fuŒ", 
NO_NUM
);

94 
√w_±r
->
h_ba£
 = 
ba£
;

95 
√w_±r
->
h_Àn
 = 
˛icks
;

96 
‰ì_¶Ÿs
 = 
√w_±r
->
h_√xt
;

97 
hp
 = 
hﬁe_hód
;

103 i‡(
hp
 =
NIL_HOLE
 || 
ba£
 <hp->
h_ba£
) {

105 
√w_±r
->
h_√xt
 = 
hp
;

106 
hﬁe_hód
 = 
√w_±r
;

107 
	`mîge
(
√w_±r
);

112 
hp
 !
NIL_HOLE
 && 
ba£
 > hp->
h_ba£
) {

113 
¥ev_±r
 = 
hp
;

114 
hp
 = hp->
h_√xt
;

118 
√w_±r
->
h_√xt
 = 
¥ev_±r
->h_next;

119 
¥ev_±r
->
h_√xt
 = 
√w_±r
;

120 
	`mîge
(
¥ev_±r
);

121 
	}
}

127 
PRIVATE
 
	$dñ_¶Ÿ
(
¥ev_±r
, 
hp
)

128 
hﬁe
 *
¥ev_±r
;

129 
hﬁe
 *
hp
;

137 i‡(
hp
 =
hﬁe_hód
)

138 
hﬁe_hód
 = 
hp
->
h_√xt
;

140 
¥ev_±r
->
h_√xt
 = 
hp
->h_next;

142 
hp
->
h_√xt
 = 
‰ì_¶Ÿs
;

143 
‰ì_¶Ÿs
 = 
hp
;

144 
	}
}

150 
PRIVATE
 
	$mîge
(
hp
)

151 
hﬁe
 *
hp
;

159 
hﬁe
 *
√xt_±r
;

164 i‡–(
√xt_±r
 = 
hp
->
h_√xt
Ë=
NIL_HOLE
) ;

165 i‡(
hp
->
h_ba£
 + hp->
h_Àn
 =
√xt_±r
->h_base) {

166 
hp
->
h_Àn
 +
√xt_±r
->h_len;

167 
	`dñ_¶Ÿ
(
hp
, 
√xt_±r
);

169 
hp
 = 
√xt_±r
;

175 i‡–(
√xt_±r
 = 
hp
->
h_√xt
Ë=
NIL_HOLE
) ;

176 i‡(
hp
->
h_ba£
 + hp->
h_Àn
 =
√xt_±r
->h_base) {

177 
hp
->
h_Àn
 +
√xt_±r
->h_len;

178 
	`dñ_¶Ÿ
(
hp
, 
√xt_±r
);

180 
	}
}

186 
PUBLIC
 
phys_˛icks
 
	$max_hﬁe
()

190 
hﬁe
 *
hp
;

191 
phys_˛icks
 
max
;

193 
hp
 = 
hﬁe_hód
;

194 
max
 = 0;

195 
hp
 !
NIL_HOLE
) {

196 i‡(
hp
->
h_Àn
 > 
max
) max = hp->h_len;

197 
hp
 = hp->
h_√xt
;

199 (
max
);

200 
	}
}

206 
PUBLIC
 
	$mem_öô
(
tŸÆ
, 
‰ì
)

207 
phys_˛icks
 *
tŸÆ
, *
‰ì
;

219 
hﬁe
 *
hp
;

220 
phys_˛icks
 
ba£
;

221 
phys_˛icks
 
size
;

222 
mesßge
 
mess
;

225 
hp
 = &
hﬁe
[0]; h∞< &hﬁe[
NR_HOLES
]; hp++Ëhp->
h_√xt
 = hp + 1;

226 
hﬁe
[
NR_HOLES
-1].
h_√xt
 = 
NIL_HOLE
;

227 
hﬁe_hód
 = 
NIL_HOLE
;

228 
‰ì_¶Ÿs
 = &
hﬁe
[0];

234 *
‰ì
 = 0;

236 
mess
.
m_ty≥
 = 
SYS_MEM
;

237 i‡(
	`£ndªc
(
SYSTASK
, &
mess
Ë!
OK
Ë
	`∑nic
("bad SYS_MEM?", 
NO_NUM
);

238 
ba£
 = 
mess
.
m1_i1
;

239 
size
 = 
mess
.
m1_i2
;

240 i‡(
size
 == 0) ;

242 
	`‰ì_mem
(
ba£
, 
size
);

243 *
tŸÆ
 = 
mess
.
m1_i3
;

244 *
‰ì
 +
size
;

246 
	}
}

	@arp.c

5 
	~"öë.h
"

7 
	~"¨p.h
"

8 
	~"as£π.h
"

9 
	~"buf.h
"

10 
	~"˛ock.h
"

11 
	~"ëh.h
"

12 
	~"io.h
"

13 
	~"§.h
"

14 
	~"ty≥.h
"

16 
INIT_PANIC
();

18 
	#ARP_PORT_NR
 1

	)

19 
	#ARP_CACHE1_NR
 8

	)

20 
	#ARP_CACHE2_NR
 8

	)

21 
	#ARP_CACHE3_NR
 16

	)

22 
	#ARP_CACHE_NR
 (
ARP_CACHE1_NR
+
ARP_CACHE2_NR
+
ARP_CACHE3_NR
)

	)

23 
	#ARP_TYPE1
 1

	)

24 
	#ARP_TYPE2
 2

	)

25 
	#ARP_TYPE3
 3

	)

27 
	#MAX_RARP_RETRIES
 5

	)

28 
	#MAX_ARP_RETRIES
 5

	)

29 
	#RARP_TIMEOUT
 (1*
HZ
)

	)

30 
	#ARP_TIMEOUT
 (
HZ
/2+1Ë

	)

31 
	#ARP_EXP_TIME
 (20L*60L*
HZ
Ë

	)

32 
	#ARP_NOTRCH_EXP_TIME
 (2L*60L*
HZ
Ë

	)

33 
	#ARP_INUSE_OFFSET
 (60*
HZ
Ë

	)

36 
	s¨p46


38 
ëhî_addr_t
 
	ma46_d°addr
;

39 
ëhî_addr_t
 
	ma46_§ˇddr
;

40 
ëhî_ty≥_t
 
	ma46_ëhty≥
;

45 
u16_t
 
	ma_hdr
, 
	ma_¥o
;

46 
u8_t
 
	ma_h 
, 
	ma_∂n
;

47 
u16_t
 
	ma_›
;

48 
ëhî_addr_t
 
	ma_sha
;

49 
u8_t
 
	ma_•a
[4];

50 
ëhî_addr_t
 
	ma_tha
;

51 
u8_t
 
	ma_ça
[4];

52 } 
	ma46_d©a
;

53 
	ma46_dummy
[
ETH_MIN_PACK_SIZE
-
ETH_HDR_SIZE
];

54 } 
	ma46_d©a
;

55 } 
	t¨p46_t
, 
	tøΩ46_t
;

57 
	#a46_hdr
 
a46_d©a
.a46_d©a.
a_hdr


	)

58 
	#a46_¥o
 
a46_d©a
.a46_d©a.
a_¥o


	)

59 
	#a46_h 
 
a46_d©a
.a46_d©a.
a_h 


	)

60 
	#a46_∂n
 
a46_d©a
.a46_d©a.
a_∂n


	)

61 
	#a46_›
 
a46_d©a
.a46_d©a.
a_›


	)

62 
	#a46_sha
 
a46_d©a
.a46_d©a.
a_sha


	)

63 
	#a46_•a
 
a46_d©a
.a46_d©a.
a_•a


	)

64 
	#a46_tha
 
a46_d©a
.a46_d©a.
a_tha


	)

65 
	#a46_ça
 
a46_d©a
.a46_d©a.
a_ça


	)

67 
	s¨p_ˇche


69 
	mac_Êags
;

70 
	mac_ty≥
;

71 
ëhî_addr_t
 
	mac_ëhaddr
;

72 
ùaddr_t
 
	mac_ùaddr
;

73 
	mac_ëh_p‹t
;

74 
time_t
 
	mac_expúe
;

75 
time_t
 
	mac_œ°u£
;

76 } 
	t¨p_ˇche_t
;

78 
	#ACF_EMPTY
 0

	)

79 
	#ACF_NETREQ
 1

	)

80 
	#ACF_NOTRCH
 2

	)

82 
	s¨p_p‹t


84 
	m≠_Êags
;

85 
	m≠_°©e
;

86 
	m≠_ëh_p‹t
;

87 
	m≠_ëh_fd
;

88 
	m≠_øΩ_ªåõs
;

89 
ëhî_addr_t
 
	m≠_ëhaddr
;

90 
ùaddr_t
 
	m≠_ùaddr
;

91 
timî_t
 
	m≠_timî
;

92 
ëhî_addr_t
 
	m≠_wrôe_ëhaddr
;

93 
ùaddr_t
 
	m≠_wrôe_ùaddr
;

94 
	m≠_wrôe_code
;

95 
ùaddr_t
 
	m≠_ªq_ùaddr
;

96 
¨p_ªq_func_t
 
	m≠_ªq_func
;

97 
	m≠_ªq_ªf
;

98 
	m≠_ªq_cou¡
;

99 
øΩ_func_t
 
	m≠_øΩ_func
;

100 
	m≠_øΩ_ªf
;

101 } 
	t¨p_p‹t_t
;

103 
	#APF_EMPTY
 0

	)

104 
	#APF_RARP_RD_IP
 0x1

	)

105 
	#APF_RARP_RD_SP
 0x2

	)

106 
	#APF_ARP_RD_IP
 0x4

	)

107 
	#APF_ARP_RD_SP
 0x8

	)

108 
	#APF_ARP_WR_IP
 0x10

	)

109 
	#APF_ARP_WR_SP
 0x20

	)

110 
	#APF_INADDR_SET
 0x100

	)

111 
	#APF_MORE2WRITE
 0x200

	)

112 
	#APF_CLIENTREQ
 0x400

	)

113 
	#APF_RARPREQ
 0x800

	)

114 
	#APF_CLIENTWRITE
 0x1000

	)

116 
	#APS_EMPTY
 0

	)

117 
	#APS_STATMASK
 0xff

	)

118 
	#APS_GETADDR
 0x1

	)

119 
	#APS_RARPPROTO
 0x2

	)

120 
	#APS_RARPWRITE
 0x4

	)

121 
	#APS_RARPWAIT
 0x8

	)

122 
	#APS_ARPSTART
 0x10

	)

123 
	#APS_ARPPROTO
 0x20

	)

124 
	#APS_ARPMAIN
 0x40

	)

125 
	#APS_ERROR
 0x80

	)

126 
	#APS_SUSPEND
 0x400

	)

128 
FORWARD
 
acc_t
 *
¨p_gëd©a
 
ARGS
(–
fd
, 
size_t
 
off£t
,

129 
size_t
 
cou¡
, 
f‹_io˘l
 ));

130 
FORWARD
 
¨p_putd©a
 
ARGS
(–
fd
, 
size_t
 
off£t
,

131 
acc_t
 *
d©a
, 
f‹_io˘l
 ));

132 
FORWARD
 
¨p_maö
 
ARGS
(–
¨p_p‹t_t
 *
p‹t
 ));

133 
FORWARD
 
¨p_timeout
 
ARGS
(–
fd
, 
timî_t
 *
timî
 ));

134 
FORWARD
 
øΩ_timeout
 
ARGS
(–
fd
, 
timî_t
 *
timî
 ));

135 
FORWARD
 
ùaddr_£t
 
ARGS
(–
¨p_p‹t_t
 *
p‹t
 ));

136 
FORWARD
 
£tup_wrôe
 
ARGS
(–
¨p_p‹t_t
 *
p‹t
 ));

137 
FORWARD
 
£tup_ªad
 
ARGS
(–
¨p_p‹t_t
 *
p‹t
 ));

138 
FORWARD
 
¥o˚ss_¨p_ªq
 
ARGS
(–
¨p_p‹t_t
 *
p‹t
, 
acc_t
 *
d©a
 ));

139 
FORWARD
 
˛õ¡_ª∂y
 
ARGS
(–
¨p_p‹t_t
 *
p‹t
,

140 
ëhî_addr_t
 *
ëhaddr
 ));

141 
FORWARD
 
¨p_ˇche_t
 *
föd_ˇche_ít
 
ARGS
(–
ëh_p‹t
, 
ùaddr_t
 
ùaddr
,

142 
Àvñ
, 
¨p_ˇche_t
 **
√w_ít
 ));

143 
FORWARD
 
øΩ_ªad_£tup
 
ARGS
(–
¨p_p‹t_t
 *
p‹t
 ));

144 
FORWARD
 
¥öt_¨p_ˇche
 
ARGS
(( ));

146 
PRIVATE
 
¨p_p‹t_t
 
	g¨p_p‹t_èbÀ
[
ARP_PORT_NR
];

147 
PRIVATE
 
¨p_p‹t_t
 *
	g¨p_p‹t
;

148 
PRIVATE
 
¨p_ˇche_t
 
	g¨p_ˇche
[
ARP_CACHE_NR
];

150 
PUBLIC
 
	$¨p_öô
()

152 
i
;

154 
	`as£π
 (
BUF_S
 >(
nwio_ëh°©
));

155 
	`as£π
 (
BUF_S
 >(
nwio_ëh›t
));

156 
	`as£π
 (
BUF_S
 >(
øΩ46_t
));

157 
	`as£π
 (
BUF_S
 >(
¨p46_t
));

158 
¨p_p‹t_èbÀ
[0].
≠_ëh_p‹t

ETH0
;

160 
i
=0, 
¨p_p‹t

¨p_p‹t_èbÀ
; i<
ARP_PORT_NR
; i++,árp_port++)

162 
¨p_p‹t
->
≠_°©e

APS_EMPTY
;

163 
¨p_p‹t
->
≠_Êags

APF_EMPTY
;

164 
	`¨p_maö
(
¨p_p‹t
);

166 
	}
}

168 
PRIVATE
 
	$¨p_maö
(
p‹t
)

169 
¨p_p‹t_t
 *
p‹t
;

171 
ªsu…
;

173 #i‡
DEBUG
 & 256

174 { 
	`whîe
(); 
	`¥ötf
("öáΩ_maö wôh sètus: %d\n", 
p‹t
->
≠_°©e
 &

175 
APS_STATMASK
); }

177 
p‹t
->
≠_°©e
 & 
APS_STATMASK
)

179 
APS_EMPTY
:

180 
p‹t
->
≠_øΩ_ªåõs
= 0;

181 
p‹t
->
≠_ëh_fd

	`ëh_›í
’‹t->
≠_ëh_p‹t
,

182 
p‹t
-
¨p_p‹t_èbÀ
, 
¨p_gëd©a
, 
¨p_putd©a
);

184 i‡(
p‹t
->
≠_ëh_fd
<0)

186 
	`¥ötf
("arp.c: unableÅo openÉthernet\n");

190 
p‹t
->
≠_°©e
= (port->ap_state &

191 ~(
APS_STATMASK
|
APS_SUSPEND
)Ë| 
APS_GETADDR
;

193 
ªsu…

	`ëh_io˘l
 (
p‹t
->
≠_ëh_fd
, 
NWIOGETHSTAT
);

195 i‡(
ªsu…
==
NW_SUSPEND
)

196 
p‹t
->
≠_°©e
 |
APS_SUSPEND
;

198 i‡(
ªsu…
<0)

200 #i‡
DEBUG


201 i‡(
ªsu…
 !
NW_SUSPEND
)

202 { 
	`whîe
(); 
	`¥ötf
("¨p.c:Éth_io˘l(..,NWIOGETHSTAT)=%d\n", 
ªsu…
); }

206 i‡((
p‹t
->
≠_°©e
 & 
APS_STATMASK
Ë!
APS_GETADDR
)

209 
APS_GETADDR
:

210 #i‡
DEBUG
 & 256

211 { 
	`whîe
(); 
	`¥ötf
("öáΩ_maö wôh sètus: %d\n", 
p‹t
->
≠_°©e
 & 
APS_STATMASK
); }

213 
p‹t
->
≠_°©e
= (port->ap_state &

214 ~(
APS_STATMASK
|
APS_SUSPEND
)Ë| 
APS_RARPPROTO
;

216 
ªsu…

	`ëh_io˘l
 (
p‹t
->
≠_ëh_fd
, 
NWIOSETHOPT
);

218 i‡(
ªsu…
==
NW_SUSPEND
)

219 
p‹t
->
≠_°©e
 |
APS_SUSPEND
;

221 i‡(
ªsu…
<0)

223 #i‡
DEBUG


224 i‡(
ªsu…
 !
NW_SUSPEND
)

225 { 
	`¥ötf
("¨p.c:Éth_io˘l(..,NWIOSETHOPT)=%d\n", 
ªsu…
); }

229 i‡((
p‹t
->
≠_°©e
 & 
APS_STATMASK
Ë!
APS_RARPPROTO
)

232 
APS_RARPWAIT
:

233 #i‡
DEBUG
 & 256

234 { 
	`whîe
(); 
	`¥ötf
("inárp_main with status: %d\n",

235 
p‹t
->
≠_°©e
 & 
APS_STATMASK
); }

237 i‡(
p‹t
->
≠_Êags
 & 
APF_INADDR_SET
)

239 
p‹t
->
≠_°©e
= (port->ap_state &

240 ~(
APS_STATMASK
|
APS_SUSPEND
)Ë| 
APS_ARPSTART
;

241 
	`¨p_maö
(
p‹t
);

245 
APS_RARPPROTO
:

246 #i‡
DEBUG
 & 256

247 { 
	`whîe
(); 
	`¥ötf
("inárp_main with status: %d\n",

248 
p‹t
->
≠_°©e
 & 
APS_STATMASK
); }

250 
	`øΩ_ªad_£tup
(
p‹t
);

251 
p‹t
->
≠_°©e
= (port->ap_state &

252 ~(
APS_STATMASK
|
APS_SUSPEND
)Ë| 
APS_RARPWRITE
;

253 #i‡
DEBUG
 & 256

254 { 
	`whîe
(); 
	`¥ötf
("doingÉth_write\n"); }

256 
ªsu…

	`ëh_wrôe
 (
p‹t
->
≠_ëh_fd
, (
øΩ46_t
));

257 i‡(
ªsu…
 =
NW_SUSPEND
)

258 
p‹t
->
≠_°©e
 |
APS_SUSPEND
;

259 i‡(
ªsu…
<0)

261 #i‡
DEBUG
 & 256

262 i‡(
ªsu…
 !
NW_SUSPEND
)

263 { 
	`whîe
(); 
	`¥ötf
("¨p.c:Éth_wrôe(..,%d)=%d\n", (
øΩ46_t
), 
ªsu…
); }

267 i‡((
p‹t
->
≠_°©e
 & 
APS_STATMASK
Ë!
APS_RARPWRITE
)

270 
APS_RARPWRITE
:

271 #i‡
DEBUG
 & 256

272 { 
	`whîe
(); 
	`¥ötf
("inárp_main with status: %d\n",

273 
p‹t
->
≠_°©e
 & 
APS_STATMASK
); }

275 
p‹t
->
≠_°©e
= (port->ap_state &

276 ~(
APS_STATMASK
|
APS_SUSPEND
)Ë| 
APS_RARPWAIT
;

277 i‡(
p‹t
->
≠_øΩ_ªåõs
>=
MAX_RARP_RETRIES
)

279 #i‡
DEBUG
 & 256

280 { 
	`whîe
(); 
	`¥ötf
("port->ap_rarp_retries= %d\n",

281 
p‹t
->
≠_øΩ_ªåõs
); }

283 
p‹t
->
≠_øΩ_ªåõs
++;

284 
	`˛ck_timî
(&
p‹t
->
≠_timî
, 
	`gë_time
(Ë+ 
RARP_TIMEOUT
,

285 
øΩ_timeout
, 
p‹t
-
¨p_p‹t_èbÀ
);

287 
APS_ARPSTART
:

288 #i‡
DEBUG
 & 256

289 { 
	`whîe
(); 
	`¥ötf
("inárp_main with status: %d\n",

290 
p‹t
->
≠_°©e
 & 
APS_STATMASK
); }

292 i‡(
p‹t
->
≠_Êags
 & 
APF_RARP_RD_IP
)

294 
	`ëh_ˇn˚l
(
p‹t
->
≠_ëh_fd
, 
SR_CANCEL_READ
);

295 
p‹t
->
≠_Êags
 &~(
APF_RARP_RD_IP
|
APF_RARP_RD_SP
);

297 
p‹t
->
≠_°©e
= (port->ap_state &

298 ~(
APS_STATMASK
|
APS_SUSPEND
)Ë| 
APS_ARPPROTO
;

301 
¨p_ˇche_t
 *
ˇche
;

302 
i
;

304 
ˇche

¨p_ˇche
;

305 
i
=0; i<
ARP_CACHE_NR
; i++, 
ˇche
++)

307 
ˇche
->
ac_Êags

ACF_EMPTY
;

308 
ˇche
->
ac_expúe
= 0;

309 
ˇche
->
ac_œ°u£
= 0;

312 
ˇche

¨p_ˇche
;

313 
i
=0; i<
ARP_CACHE1_NR
; i++, 
ˇche
++)

314 
ˇche
->
ac_ty≥
= 1;

315 
i
=0; i<
ARP_CACHE2_NR
; i++, 
ˇche
++)

316 
ˇche
->
ac_ty≥
= 2;

317 
i
=0; i<
ARP_CACHE3_NR
; i++, 
ˇche
++)

318 
ˇche
->
ac_ty≥
= 3;

320 
ªsu…

	`ëh_io˘l
 (
p‹t
->
≠_ëh_fd
, 
NWIOSETHOPT
);

322 i‡(
ªsu…
==
NW_SUSPEND
)

323 
p‹t
->
≠_°©e
 |
APS_SUSPEND
;

325 i‡(
ªsu…
<0)

327 #i‡
DEBUG


328 { 
	`whîe
(); 
	`¥ötf
("arp.c: /*árp */Éth_ioctl(..,NWIOSETHOPT)=%d\n",

329 
ªsu…
); }

333 i‡((
p‹t
->
≠_°©e
 & 
APS_STATMASK
Ë!
APS_ARPPROTO
)

336 
APS_ARPPROTO
:

337 #i‡
DEBUG
 & 256

338 { 
	`whîe
(); 
	`¥ötf
("inárp_main with status: %d\n",

339 
p‹t
->
≠_°©e
 & 
APS_STATMASK
); }

341 
p‹t
->
≠_°©e
= (port->ap_state &

342 ~(
APS_STATMASK
|
APS_SUSPEND
)Ë| 
APS_ARPMAIN
;

343 i‡(
p‹t
->
≠_Êags
 & 
APF_MORE2WRITE
)

344 
	`£tup_wrôe
(
p‹t
);

345 
	`£tup_ªad
(
p‹t
);

348 
	`ù_∑nic
((

350 
p‹t
-
¨p_p‹t_èbÀ
,Ö‹t->
≠_°©e
 ));

352 
	}
}

354 
PRIVATE
 
acc_t
 *
	$¨p_gëd©a
 (
fd
, 
off£t
, 
cou¡
, 
f‹_io˘l
)

355 
fd
;

356 
size_t
 
off£t
;

357 
size_t
 
cou¡
;

358 
f‹_io˘l
;

360 
¨p_p‹t_t
 *
p‹t
;

361 
øΩ46_t
 *
øΩ
;

362 
¨p46_t
 *
¨p
;

363 
acc_t
 *
d©a
;

364 
ªsu…
;

366 #i‡
DEBUG
 & 256

367 { 
	`whîe
(); 
	`¥ötf
("¨p_gëd©®(fd%d, off£t%d, cou¡%d)\n", 
fd
,

368 
off£t
, 
cou¡
); }

370 
p‹t
&
¨p_p‹t_èbÀ
[
fd
];

372 
p‹t
->
≠_°©e
 & 
APS_STATMASK
)

374 
APS_RARPPROTO
:

375 i‡(!
cou¡
)

377 
ªsu…
()
off£t
;

378 i‡(
ªsu…
<0)

380 
p‹t
->
≠_°©e
= (port->ap_state &

381 ~(
APS_STATMASK
|
APS_SUSPEND
))|

382 
APS_ERROR
;

385 i‡(
p‹t
->
≠_°©e
 & 
APS_SUSPEND
)

386 
	`¨p_maö
(
p‹t
);

387  
NW_OK
;

389 
	`as£π
 ((!
off£t
Ë&& (
cou¡
 =(
nwio_ëh›t
)));

391 
nwio_ëh›t
 *
ëh›t
;

392 
acc_t
 *
acc
;

394 
acc

	`bf_memªq
((*
ëh›t
));

395 
ëh›t
(
nwio_ëh›t
 *)
	`±r2acc_d©a
(
acc
);

396 
ëh›t
->
nweo_Êags

NWEO_COPY
|
NWEO_TYPESPEC
;

397 
ëh›t
->
nweo_ty≥

	`ht⁄s
(
ETH_RARP_PROTO
);

398  
acc
;

400 
APS_RARPWRITE
:

401 i‡(!
cou¡
)

403 
ªsu…
()
off£t
;

404 i‡(
ªsu…
<0)

406 #i‡
DEBUG


407 i‡(
ªsu…
 !
NW_SUSPEND
)

408 { 
	`whîe
(); 
	`¥ötf
("¨p.c: wrôêîr‹ o¿p‹à%d:Éº‹ %d\n", 
fd
, 
ªsu…
); }

410 
p‹t
->
≠_°©e
= (port->ap_state &

411 ~(
APS_STATMASK
|
APS_SUSPEND
))|

412 
APS_ERROR
;

415 i‡(
p‹t
->
≠_°©e
 & 
APS_SUSPEND
)

416 
	`¨p_maö
(
p‹t
);

417  
NW_OK
;

419 
	`as£π
 (
off£t
+
cou¡
 <(
øΩ46_t
));

420 
d©a

	`bf_memªq
((
øΩ46_t
));

421 
øΩ
(
øΩ46_t
 *)
	`±r2acc_d©a
(
d©a
);

422 
d©a
->
acc_off£t
 +
off£t
;

423 
d©a
->
acc_Àngth

cou¡
;

424 
øΩ
->
a46_d°addr
.
ó_addr
[0]= 0xff;

425 
øΩ
->
a46_d°addr
.
ó_addr
[1]= 0xff;

426 
øΩ
->
a46_d°addr
.
ó_addr
[2]= 0xff;

427 
øΩ
->
a46_d°addr
.
ó_addr
[3]= 0xff;

428 
øΩ
->
a46_d°addr
.
ó_addr
[4]= 0xff;

429 
øΩ
->
a46_d°addr
.
ó_addr
[5]= 0xff;

430 
øΩ
->
a46_hdr

	`ht⁄s
(
ARP_ETHERNET
);

431 
øΩ
->
a46_¥o

	`ht⁄s
(
ETH_IP_PROTO
);

432 
øΩ
->
a46_h 
= 6;

433 
øΩ
->
a46_∂n
= 4;

434 
øΩ
->
a46_›

	`ht⁄s
(
RARP_REQUEST
);

435 
øΩ
->
a46_sha

p‹t
->
≠_ëhaddr
;

436 
øΩ
->
a46_tha

p‹t
->
≠_ëhaddr
;

437  
d©a
;

438 
APS_ARPPROTO
:

439 i‡(!
cou¡
)

441 
ªsu…
()
off£t
;

442 i‡(
ªsu…
<0)

444 
p‹t
->
≠_°©e
= (port->ap_state &

445 ~(
APS_STATMASK
|
APS_SUSPEND
))|

446 
APS_ERROR
;

449 i‡(
p‹t
->
≠_°©e
 & 
APS_SUSPEND
)

450 
	`¨p_maö
(
p‹t
);

451  
NW_OK
;

453 
	`as£π
 ((!
off£t
Ë&& (
cou¡
 =(
nwio_ëh›t
)));

455 
nwio_ëh›t
 *
ëh›t
;

456 
acc_t
 *
acc
;

458 
acc

	`bf_memªq
((*
ëh›t
));

459 
ëh›t
(
nwio_ëh›t
 *)
	`±r2acc_d©a
(
acc
);

460 
ëh›t
->
nweo_Êags

NWEO_COPY
|
NWEO_EN_BROAD
|

461 
NWEO_TYPESPEC
;

462 
ëh›t
->
nweo_ty≥

	`ht⁄s
(
ETH_ARP_PROTO
);

463  
acc
;

465 
APS_ARPMAIN
:

466 
	`as£π
 (
p‹t
->
≠_Êags
 & 
APF_ARP_WR_IP
);

467 i‡(!
cou¡
)

469 
ªsu…
()
off£t
;

470 i‡(
ªsu…
<0)

472 #i‡
DEBUG


473 i‡(
ªsu…
 !
NW_SUSPEND
)

474 { 
	`whîe
(); 
	`¥ötf
("¨p.c: wrôêîr‹ o¿p‹à%d:Éº‹ %d\n", 
fd
, 
ªsu…
); }

476 
p‹t
->
≠_°©e
= (port->ap_state &

477 ~(
APS_STATMASK
|
APS_SUSPEND
))|

478 
APS_ERROR
;

481 
p‹t
->
≠_Êags
 &~
APF_ARP_WR_IP
;

482 i‡(
p‹t
->
≠_Êags
 & 
APF_ARP_WR_SP
)

483 
	`£tup_wrôe
(
p‹t
);

484  
NW_OK
;

486 
	`as£π
 (
off£t
+
cou¡
 <(
¨p46_t
));

487 
d©a

	`bf_memªq
((
¨p46_t
));

488 
¨p
(
¨p46_t
 *)
	`±r2acc_d©a
(
d©a
);

489 
d©a
->
acc_off£t
 +
off£t
;

490 
d©a
->
acc_Àngth

cou¡
;

491 i‡(
p‹t
->
≠_wrôe_code
 =
ARP_REPLY
)

492 
¨p
->
a46_d°addr

p‹t
->
≠_wrôe_ëhaddr
;

495 
¨p
->
a46_d°addr
.
ó_addr
[0]= 0xff;

496 
¨p
->
a46_d°addr
.
ó_addr
[1]= 0xff;

497 
¨p
->
a46_d°addr
.
ó_addr
[2]= 0xff;

498 
¨p
->
a46_d°addr
.
ó_addr
[3]= 0xff;

499 
¨p
->
a46_d°addr
.
ó_addr
[4]= 0xff;

500 
¨p
->
a46_d°addr
.
ó_addr
[5]= 0xff;

502 
¨p
->
a46_hdr

	`ht⁄s
(
ARP_ETHERNET
);

503 
¨p
->
a46_¥o

	`ht⁄s
(
ETH_IP_PROTO
);

504 
¨p
->
a46_h 
= 6;

505 
¨p
->
a46_∂n
= 4;

506 
¨p
->
a46_›

	`ht⁄s
(
p‹t
->
≠_wrôe_code
);

507 
¨p
->
a46_sha

p‹t
->
≠_ëhaddr
;

508 
	`mem˝y
 (
¨p
->
a46_•a
, &
p‹t
->
≠_ùaddr
, (
ùaddr_t
));

509 
¨p
->
a46_tha

p‹t
->
≠_wrôe_ëhaddr
;

510 
	`mem˝y
 (
¨p
->
a46_ça
, &
p‹t
->
≠_wrôe_ùaddr
, (
ùaddr_t
));

511  
d©a
;

513 
	`¥ötf
("arp_getdata(%d, 0x%d, 0x%d) called butáp_state=0x%x\n",

514 
fd
, 
off£t
, 
cou¡
, 
p‹t
->
≠_°©e
);

518 
	}
}

520 
PRIVATE
 
	$¨p_putd©a
 (
fd
, 
off£t
, 
d©a
, 
f‹_io˘l
)

521 
fd
;

522 
size_t
 
off£t
;

523 
acc_t
 *
d©a
;

524 
f‹_io˘l
;

526 
¨p_p‹t_t
 *
p‹t
;

527 
ªsu…
;

528 
nwio_ëh°©
 *
ëh°©
;

529 
øΩ46_t
 *
øΩ
;

531 #i‡
DEBUG
 & 256

532 { 
	`whîe
(); 
	`¥ötf
("arp_putdata (fd= %d, offset= %d, data= 0x%x)\n",

533 
fd
, 
off£t
, 
d©a
); }

535 
p‹t
&
¨p_p‹t_èbÀ
[
fd
];

537 i‡(
p‹t
->
≠_Êags
 & 
APF_ARP_RD_IP
)

539 i‡(!
d©a
)

541 
ªsu…
()
off£t
;

542 i‡(
ªsu…
<0)

544 #i‡
DEBUG


545 i‡(
ªsu…
 !
NW_SUSPEND
)

546 { 
	`whîe
(); 
	`¥ötf
("¨p.c:ÑódÉº‹ o¿p‹à%d:Éº‹ %d\n", 
fd
, 
ªsu…
); }

548  
NW_OK
;

550 i‡(
p‹t
->
≠_Êags
 & 
APF_ARP_RD_SP
)

552 
p‹t
->
≠_Êags
 &~(
APF_ARP_RD_IP
|

553 
APF_ARP_RD_SP
);

554 
	`£tup_ªad
(
p‹t
);

557 
p‹t
->
≠_Êags
 &~(
APF_ARP_RD_IP
|

558 
APF_ARP_RD_SP
);

559  
NW_OK
;

561 
	`as£π
 (!
off£t
);

566 
d©a

	`bf_∑ckIffLess
(d©a, (
¨p46_t
));

567 i‡(
d©a
->
acc_Àngth
 >(
¨p46_t
))

568 
	`¥o˚ss_¨p_ªq
(
p‹t
,
d©a
);

569 
	`bf_a‰ì
(
d©a
);

570  
NW_OK
;

572 i‡(
p‹t
->
≠_Êags
 & 
APF_RARP_RD_IP
)

574 i‡(!
d©a
)

576 
ªsu…
()
off£t
;

577 i‡(
ªsu…
<0)

579 i‡(
ªsu…
 !
EINTR
)

580 
	`ù_w¨nög
((

582 
fd
, 
ªsu…
 ));

583  
NW_OK
;

585 
p‹t
->
≠_Êags
 &~
APF_RARP_RD_IP
;

586 i‡(
p‹t
->
≠_Êags
 & 
APF_INADDR_SET
)

587 
	`ùaddr_£t
(
p‹t
);

588 i‡(
p‹t
->
≠_Êags
 & 
APF_RARP_RD_SP
)

589 
	`øΩ_ªad_£tup
(
p‹t
);

590  
NW_OK
;

592 
	`as£π
 (!
off£t
);

597 
d©a

	`bf_∑ckIffLess
(d©a, (
øΩ46_t
));

598 
øΩ
(
øΩ46_t
 *)
	`±r2acc_d©a
(
d©a
);

599 i‡((
d©a
->
acc_Àngth
 >(
øΩ46_t
)) &&

600 (
øΩ
->
a46_hdr
 =
	`ht⁄s
(
ARP_ETHERNET
)) &&

601 (
øΩ
->
a46_¥o
 =
	`ht⁄s
(
ETH_IP_PROTO
)) &&

602 (
øΩ
->
a46_h 
 == 6) &&

603 (
øΩ
->
a46_∂n
 == 4) &&

604 (
øΩ
->
a46_›
 =
	`ht⁄s
(
RARP_REPLY
)) &&

605 (
øΩ
->
a46_tha
.
ó_addr
[5] ==

606 
p‹t
->
≠_ëhaddr
.
ó_addr
[5]) &&

607 (
øΩ
->
a46_tha
.
ó_addr
[4] ==

608 
p‹t
->
≠_ëhaddr
.
ó_addr
[4]) &&

609 (
øΩ
->
a46_tha
.
ó_addr
[3] ==

610 
p‹t
->
≠_ëhaddr
.
ó_addr
[3]) &&

611 (
øΩ
->
a46_tha
.
ó_addr
[2] ==

612 
p‹t
->
≠_ëhaddr
.
ó_addr
[2]) &&

613 (
øΩ
->
a46_tha
.
ó_addr
[1] ==

614 
p‹t
->
≠_ëhaddr
.
ó_addr
[1]) &&

615 (
øΩ
->
a46_tha
.
ó_addr
[0] ==

616 
p‹t
->
≠_ëhaddr
.
ó_addr
[0]) &&

617 !(
p‹t
->
≠_Êags
 & 
APF_INADDR_SET
))

619 
	`mem˝y
 (&
p‹t
->
≠_ùaddr
, 
øΩ
->
a46_ça
,

620 (
ùaddr_t
));

621 
p‹t
->
≠_Êags
 |
APF_INADDR_SET
;

622 #i‡
DEBUG
 & 256

623 { *
a
; 
	`whîe
();á=(*)&
p‹t
->
≠_ùaddr
;

624 
	`¥ötf
("arp.c: got ipáddress: %d.%d.%d.%d\n",

625 
a
[0],á[1],á[2],á[3]); }

628 
	`bf_a‰ì
(
d©a
);

629  
NW_OK
;

631 
p‹t
->
≠_°©e
 & 
APS_STATMASK
)

633 
APS_GETADDR
:

634 i‡(!
d©a
)

636 
ªsu…
()
off£t
;

637 i‡(
ªsu…
<0)

639 
p‹t
->
≠_°©e
= (port->ap_state &

640 ~(
APS_STATMASK
|
APS_SUSPEND
))|

641 
APS_ERROR
;

644 i‡(
p‹t
->
≠_°©e
 & 
APS_SUSPEND
)

645 
	`¨p_maö
(
p‹t
);

646  
NW_OK
;

648 
	`com∑ª
 (
	`bf_bufsize
(
d©a
), ==, (*
ëh°©
));

649 
d©a

	`bf_∑ckIffLess
(d©a, (*
ëh°©
));

650 
	`com∑ª
 (
d©a
->
acc_Àngth
, ==, (*
ëh°©
));

651 
ëh°©
(
nwio_ëh°©
 *)
	`±r2acc_d©a
(
d©a
);

652 
p‹t
->
≠_ëhaddr

ëh°©
->
nwes_addr
;

653 
	`bf_a‰ì
(
d©a
);

654  
NW_OK
;

656 
	`¥ötf
("arp_putdata(%d, 0x%d, 0x%lx) called butáp_state=0x%x\n",

657 
fd
, 
off£t
, ()
d©a
, 
p‹t
->
≠_°©e
);

660  
EGENERIC
;

661 
	}
}

663 
PRIVATE
 
	$øΩ_timeout
 (
fd
, 
timî
)

664 
fd
;

665 
timî_t
 *
timî
;

667 
¨p_p‹t_t
 *
p‹t
;

669 #i‡
DEBUG
 & 256

670 { 
	`whîe
(); 
	`¥ötf
("inÑarp_timeout()\n"); }

672 
p‹t
&
¨p_p‹t_èbÀ
[
fd
];

674 
	`as£π
 (
timî
 =&
p‹t
->
≠_timî
);

676 
	`¨p_maö
(
p‹t
);

677 
	}
}

679 
PRIVATE
 
	$ùaddr_£t
 (
p‹t
)

680 
¨p_p‹t_t
 *
p‹t
;

682 i‡(
p‹t
->
≠_Êags
 & 
APF_RARPREQ
)

684 
p‹t
->
≠_Êags
 &~
APF_RARPREQ
;

685 (*
p‹t
->
≠_øΩ_func
)’‹t->
≠_øΩ_ªf
,Ö‹t->
≠_ùaddr
);

687 i‡(
p‹t
->
≠_°©e
 & 
APS_RARPWAIT
)

689 
	`˛ck_u¡imî
(&
p‹t
->
≠_timî
);

690 
p‹t
->
≠_°©e
= (port->ap_state &

691 ~(
APS_STATMASK
|
APS_SUSPEND
)Ë| 
APS_ARPSTART
;

692 
	`¨p_maö
(
p‹t
);

694 
	}
}

696 
PRIVATE
 
	$£tup_ªad
(
p‹t
)

697 
¨p_p‹t_t
 *
p‹t
;

699 
ªsu…
;

701 !(
p‹t
->
≠_Êags
 & 
APF_ARP_RD_IP
))

703 
p‹t
->
≠_Êags
 |
APF_ARP_RD_IP
;

704 
ªsu…

	`ëh_ªad
 (
p‹t
->
≠_ëh_fd
, 
ETH_MAX_PACK_SIZE
);

705 i‡(
ªsu…
 =
NW_SUSPEND
)

706 
p‹t
->
≠_Êags
 |
APF_ARP_RD_SP
;

707 i‡(
ªsu…
<0)

709 #i‡
DEBUG


710 i‡(
ªsu…
 !
NW_SUSPEND
)

711 { 
	`whîe
(); 
	`¥ötf
("¨p.c:Éth_ªad(..,%d)=%d\n", 
ETH_MAX_PACK_SIZE
, 
ªsu…
); }

716 
	}
}

718 
PRIVATE
 
	$£tup_wrôe
(
p‹t
)

719 
¨p_p‹t_t
 *
p‹t
;

721 
i
, 
ªsu…
;

723 
p‹t
->
≠_Êags
 & 
APF_MORE2WRITE
)

725 i‡(
p‹t
->
≠_Êags
 & 
APF_CLIENTWRITE
)

727 
p‹t
->
≠_Êags
 &~
APF_CLIENTWRITE
;

728 
p‹t
->
≠_wrôe_ùaddr
p‹t->
≠_ªq_ùaddr
;

729 
p‹t
->
≠_wrôe_code

ARP_REQUEST
;

730 
	`˛ck_timî
(&
p‹t
->
≠_timî
, 
	`gë_time
(Ë+ 
ARP_TIMEOUT
,

731 
¨p_timeout
, 
p‹t
-
¨p_p‹t_èbÀ
);

735 
¨p_ˇche_t
 *
ˇche
;

737 
ˇche

¨p_ˇche
;

738 
i
=0; i<
ARP_CACHE_NR
; i++, 
ˇche
++)

739 i‡((
ˇche
->
ac_Êags
 & 
ACF_NETREQ
) &&

740 
ˇche
->
ac_ëh_p‹t
 ==

741 
p‹t
->
≠_ëh_p‹t
)

743 
ˇche
->
ac_Êags
 &~
ACF_NETREQ
;

744 
p‹t
->
≠_wrôe_ëhaddr

ˇche
->

745 
ac_ëhaddr
;

746 
p‹t
->
≠_wrôe_ùaddr

ˇche
->

747 
ac_ùaddr
;

748 
p‹t
->
≠_wrôe_code

ARP_REPLY
;

751 i‡(
i
>=
ARP_CACHE_NR
)

753 
p‹t
->
≠_Êags
 &~
APF_MORE2WRITE
;

757 
p‹t
->
≠_Êags
’‹t->≠_Êag†& ~
APF_ARP_WR_SP
) |

758 
APF_ARP_WR_IP
;

759 #i‡
DEBUG
 & 256

760 { 
	`whîe
(); 
	`¥ötf
("doingÉth_write\n"); }

762 
ªsu…

	`ëh_wrôe
(
p‹t
->
≠_ëh_fd
, (
¨p46_t
));

763 i‡(
ªsu…
 =
NW_SUSPEND
)

764 
p‹t
->
≠_Êags
 |
APF_ARP_WR_SP
;

765 i‡(
ªsu…
<0)

767 #i‡
DEBUG


768 i‡(
ªsu…
 !
NW_SUSPEND
)

769 { 
	`whîe
(); 
	`¥ötf
("¨p.c:Éth_wrôe(..,%d)=%d\n", (
øΩ46_t
), 
ªsu…
); }

774 
	}
}

776 
PRIVATE
 
	$¥o˚ss_¨p_ªq
 (
p‹t
, 
d©a
)

777 
¨p_p‹t_t
 *
p‹t
;

778 
acc_t
 *
d©a
;

780 
¨p46_t
 *
¨p
;

781 
¨p_ˇche_t
 *
¥im
, *
£c
;

782 
Àvñ
;

783 
time_t
 
cuº_tim
;

784 
ùaddr_t
 
•a
, 
ça
;

786 #i‡
DEBUG
 & 256

787 { 
	`whîe
(); 
	`¥ötf
("process_arp_req(...)\n"); }

789 #i‡
DEBUG
 & 256

790 { 
	`whîe
(); 
	`¥öt_¨p_ˇche
(); }

792 
¨p
(
¨p46_t
 *)
	`±r2acc_d©a
(
d©a
);

793 
	`mem˝y
(&
•a
, 
¨p
->
a46_•a
, (
ùaddr_t
));

794 
	`mem˝y
(&
ça
, 
¨p
->
a46_ça
, (
ùaddr_t
));

796 #i‡
DEBUG
 & 256

798 i‡(
¨p
->
a46_hdr
 =
	`ht⁄s
(
ARP_ETHERNET
))

799 { 
	`whîe
(); 
	`¥ötf
("arp.c:á46_hdr OK\n"); }

800 i‡(
¨p
->
a46_h 
 == 6)

801 { 
	`whîe
(); 
	`¥ötf
("arp.c:á46_hln OK\n"); }

802 i‡(
¨p
->
a46_¥o
 =
	`ht⁄s
(
ETH_IP_PROTO
))

803 { 
	`whîe
(); 
	`¥ötf
("arp.c:á46_pro OK\n"); }

804 i‡(
¨p
->
a46_∂n
 == 4)

805 { 
	`whîe
(); 
	`¥ötf
("arp.c:á46_pln OK\n"); }

808 i‡(
¨p
->
a46_hdr
 !
	`ht⁄s
(
ARP_ETHERNET
) ||

809 
¨p
->
a46_h 
 != 6 ||

810 
¨p
->
a46_¥o
 !
	`ht⁄s
(
ETH_IP_PROTO
) ||

811 
¨p
->
a46_∂n
 != 4)

813 #i‡
DEBUG
 & 256

814 { 
	`whîe
(); 
	`¥ötf
("arp.c:á46_tpa= 0x%lx,áp_ipaddr= 0x%lx\n",

815 
¨p
->
a46_ça
, 
p‹t
->
≠_ùaddr
); }

817 i‡((
p‹t
->
≠_Êags
 & 
APF_CLIENTREQ
Ë&& (
•a
 =p‹t->
≠_ªq_ùaddr
))

818 
Àvñ

ARP_TYPE3
;

819 i‡(
¨p
->
a46_›
 =
	`ht⁄s
(
ARP_REQUEST
Ë&& (
ça
 ==

820 
p‹t
->
≠_ùaddr
))

821 
Àvñ

ARP_TYPE2
;

823 
Àvñ

ARP_TYPE1
;

825 #i‡
DEBUG
 & 256

826 { 
	`whîe
(); 
	`¥ötf
("¨p.c:Üevñ%d\n", 
Àvñ
); }

828 
¥im

	`föd_ˇche_ít
(
p‹t
->
≠_ëh_p‹t
, 
•a
, 
Àvñ
, &
£c
);

829 i‡(!
¥im
)

831 
¥im

£c
;

832 
¥im
->
ac_Êags

ACF_EMPTY
;

833 
¥im
->
ac_ùaddr

•a
;

834 
¥im
->
ac_ëh_p‹t

p‹t
->
≠_ëh_p‹t
;

836 i‡(
¥im
->
ac_ty≥
 < 
Àvñ
)

838 
£c
->
ac_ty≥

¥im
->ac_type;

839 
¥im
->
ac_ty≥

Àvñ
;

841 
¥im
->
ac_ëhaddr

¨p
->
a46_sha
;

842 
cuº_tim

	`gë_time
();

843 
¥im
->
ac_expúe

cuº_tim
+ 
ARP_EXP_TIME
;

844 i‡(
cuº_tim
 > 
¥im
->
ac_œ°u£
)

845 
¥im
->
ac_œ°u£

cuº_tim
;

846 
¥im
->
ac_Êags
 &~
ACF_NOTRCH
;

847 i‡(
Àvñ
=
ARP_TYPE2
)

849 
¥im
->
ac_Êags
 |
ACF_NETREQ
;

850 
p‹t
->
≠_Êags
 |
APF_MORE2WRITE
;

851 i‡(!(
p‹t
->
≠_Êags
 & 
APF_ARP_WR_IP
))

852 
	`£tup_wrôe
(
p‹t
);

853 } i‡(
Àvñ
=
ARP_TYPE3
)

855 
¥im
->
ac_œ°u£

cuº_tim
 + 
ARP_INUSE_OFFSET
;

856 
	`˛õ¡_ª∂y
(
p‹t
, &
¨p
->
a46_sha
);

858 #i‡
DEBUG
 & 256

859 { 
	`whîe
(); 
	`¥öt_¨p_ˇche
(); }

861 
	}
}

863 
PRIVATE
 
	$˛õ¡_ª∂y
 (
p‹t
, 
ëhaddr
)

864 
¨p_p‹t_t
 *
p‹t
;

865 
ëhî_addr_t
 *
ëhaddr
;

867 
p‹t
->
≠_Êags
 &~(
APF_CLIENTREQ
|
APF_CLIENTWRITE
);

868 
	`˛ck_u¡imî
(&
p‹t
->
≠_timî
);

869 (*
p‹t
->
≠_ªq_func
)’‹t->
≠_ªq_ªf
, 
ëhaddr
);

870 
	}
}

872 
PRIVATE
 
¨p_ˇche_t
 *
	$föd_ˇche_ít
 (
ëh_p‹t
, 
ùaddr
, 
Àvñ
, 
√w_ít
)

873 
ëh_p‹t
;

874 
ùaddr_t
 
ùaddr
;

875 
Àvñ
;

876 
¨p_ˇche_t
 **
√w_ít
;

878 
¨p_ˇche_t
 *
ˇche
, *
¥im
, *
£c
;

879 
i
;

881 
ˇche

¨p_ˇche
;

882 
¥im
= 0;

883 
£c
= 0;

884 
i
=0; i<
ARP_CACHE_NR
; i++, 
ˇche
++)

886 i‡(
ˇche
->
ac_ëh_p‹t
 =
ëh_p‹t
 &&

887 
ˇche
->
ac_ùaddr
 =
ùaddr
)

888 
¥im

ˇche
;

889 i‡(
ˇche
->
ac_ty≥
 =
Àvñ
 && (!
£c
 || cache->
ac_œ°u£
 <

890 
£c
->
ac_œ°u£
))

891 
£c

ˇche
;

893 
	`as£π
(
£c
);

894 *
√w_ít

£c
;

895  
¥im
;

896 
	}
}

898 
PRIVATE
 
	$øΩ_ªad_£tup
 (
p‹t
)

899 
¨p_p‹t_t
 *
p‹t
;

901 
ªsu…
;

903 !(
p‹t
->
≠_Êags
 & (
APF_RARP_RD_IP
|
APF_INADDR_SET
)))

905 
p‹t
->
≠_Êags
’‹t->≠_Êag†& ~ 
APF_RARP_RD_SP
) |

906 
APF_RARP_RD_IP
;

907 
ªsu…

	`ëh_ªad
 (
p‹t
->
≠_ëh_fd
, 
ETH_MAX_PACK_SIZE
);

908 i‡(
ªsu…
 =
NW_SUSPEND
)

909 
p‹t
->
≠_Êags
 |
APF_RARP_RD_SP
;

910 i‡(
ªsu…
<0)

912 #i‡
DEBUG


913 i‡(
ªsu…
 !
NW_SUSPEND
)

914 { 
	`whîe
(); 
	`¥ötf
("¨p.c:Éth_ªad(..,%d)=%d\n", 
ETH_MAX_PACK_SIZE
, 
ªsu…
); }

918 i‡((
p‹t
->
≠_°©e
 & 
APS_STATMASK
Ë!
APS_RARPPROTO
)

921 
	}
}

923 
PUBLIC
 
	$øΩ_ªq
(
ëh_p‹t
, 
ªf
, 
func
)

924 
ëh_p‹t
;

925 
ªf
;

926 
øΩ_func_t
 
func
;

928 
¨p_p‹t_t
 *
p‹t
;

929 
i
;

931 
p‹t

¨p_p‹t_èbÀ
;

932 
i
=0; i<
ARP_PORT_NR
; i++, 
p‹t
++)

933 i‡(
p‹t
->
≠_ëh_p‹t
 =
ëh_p‹t
)

935 i‡(
i
>=
ARP_PORT_NR
)

936  
EGENERIC
;

937 i‡(
p‹t
->
≠_Êags
 & 
APF_INADDR_SET
)

939 (*
func
)(
ªf
, 
p‹t
->
≠_ùaddr
);

940  
NW_OK
;

942 
p‹t
->
≠_Êags
 |
APF_RARPREQ
;

943 
p‹t
->
≠_øΩ_ªf

ªf
;

944 
p‹t
->
≠_øΩ_func

func
;

945  
NW_SUSPEND
;

946 
	}
}

948 
PUBLIC
 
	$£t_ùaddr
 (
ëh_p‹t
, 
ùaddr
)

949 
ëh_p‹t
;

950 
ùaddr_t
 
ùaddr
;

952 
¨p_p‹t_t
 *
p‹t
;

953 
i
;

955 
p‹t

¨p_p‹t_èbÀ
;

956 
i
=0; i<
ARP_PORT_NR
; i++, 
p‹t
++)

957 i‡(
p‹t
->
≠_ëh_p‹t
 =
ëh_p‹t
)

959 
	`as£π
 (
i
 < 
ARP_PORT_NR
);

960 
p‹t
->
≠_ùaddr

ùaddr
;

961 
p‹t
->
≠_Êags
 |
APF_INADDR_SET
;

962 
	`ùaddr_£t
(
p‹t
);

963 
	}
}

965 
PUBLIC
 
	$¨p_ù_ëh
 (
ëh_p‹t
, 
ªf
, 
ùaddr
, 
func
)

966 
ëh_p‹t
;

967 
ªf
;

968 
ùaddr_t
 
ùaddr
;

969 
¨p_ªq_func_t
 
func
;

971 
¨p_p‹t_t
 *
p‹t
;

972 
i
;

973 
¨p_ˇche_t
 *
¥im
, *
£c
;

975 #i‡
DEBUG
 & 256

976 { 
	`whîe
(); 
	`¥ötf
("£ndögáΩ_ªq f‹: "); 
	`wrôeIpAddr
(
ùaddr
);

977 
	`¥ötf
("\n"); }

979 
p‹t

¨p_p‹t_èbÀ
;

980 
i
=0; i<
ARP_PORT_NR
; i++, 
p‹t
++)

981 i‡(
p‹t
->
≠_ëh_p‹t
 =
ëh_p‹t
)

983 i‡(
i
>=
ARP_PORT_NR
)

984  
EGENERIC
;

985 i‡((
p‹t
->
≠_°©e
 & 
APS_STATMASK
Ë!
APS_ARPMAIN
)

987 
p‹t
->
≠_Êags
 |
APF_CLIENTREQ
|
APF_MORE2WRITE
 |

988 
APF_CLIENTWRITE
;

989 
p‹t
->
≠_ªq_func

func
;

990 
p‹t
->
≠_ªq_ªf

ªf
;

991 
p‹t
->
≠_ªq_ùaddr

ùaddr
;

992 
p‹t
->
≠_ªq_cou¡
= 0;

993  
NW_SUSPEND
;

996 
¥im

	`föd_ˇche_ít
 (
ëh_p‹t
, 
ùaddr
, 
ARP_TYPE3
, &
£c
);

997 i‡(
¥im
)

999 i‡(
¥im
->
ac_ty≥
 < 
ARP_TYPE3
)

1001 
£c
->
ac_ty≥

¥im
->ac_type;

1002 
¥im
->
ac_ty≥

ARP_TYPE3
;

1004 i‡(
¥im
->
ac_expúe
 < 
	`gë_time
())

1005 
¥im
= 0;

1007 i‡(!
¥im
)

1009 
p‹t
->
≠_Êags
 |
APF_CLIENTREQ
|
APF_MORE2WRITE
|
APF_CLIENTWRITE
;

1010 
p‹t
->
≠_ªq_func

func
;

1011 
p‹t
->
≠_ªq_ªf

ªf
;

1012 
p‹t
->
≠_ªq_ùaddr

ùaddr
;

1013 
p‹t
->
≠_ªq_cou¡
= 0;

1014 i‡(!(
p‹t
->
≠_Êags
 & 
APF_ARP_WR_IP
))

1015 
	`£tup_wrôe
(
p‹t
);

1016  
NW_SUSPEND
;

1018 
¥im
->
ac_œ°u£

	`gë_time
();

1019 i‡(
¥im
->
ac_Êags
 & 
ACF_NOTRCH
)

1020  
EDSTNOTRCH
;

1023 
	`˛õ¡_ª∂y
 (
p‹t
, &
¥im
->
ac_ëhaddr
);

1024  
NW_OK
;

1026 
	}
}

1028 
PUBLIC
 
	$¨p_ù_ëh_n⁄bl
 (
ëh_p‹t
, 
ùaddr
, 
ëhaddr
)

1029 
ëh_p‹t
;

1030 
ùaddr_t
 
ùaddr
;

1031 
ëhî_addr_t
 *
ëhaddr
;

1033 
¨p_p‹t_t
 *
p‹t
;

1034 
i
;

1035 
¨p_ˇche_t
 *
¥im
, *
£c
;

1037 #i‡
DEBUG
 & 256

1038 { 
	`whîe
(); 
	`¥ötf
("gŸááΩ_ù_ëh_n⁄bl(%d, ", 
ëh_p‹t
);

1039 
	`wrôeIpAddr
(
ùaddr
); 
	`¥ötf
(", ...)\n"); }

1041 
p‹t

¨p_p‹t_èbÀ
;

1042 
i
=0; i<
ARP_PORT_NR
; i++, 
p‹t
++)

1043 i‡(
p‹t
->
≠_ëh_p‹t
 =
ëh_p‹t
)

1045 i‡(
i
>=
ARP_PORT_NR
)

1046  
EGENERIC
;

1047 i‡((
p‹t
->
≠_°©e
 & 
APS_STATMASK
Ë!
APS_ARPMAIN
)

1049 #i‡
DEBUG


1050 { 
	`whîe
(); 
	`¥ötf
("replying NW_SUSPEND\n"); }

1052  
NW_SUSPEND
;

1055 
¥im

	`föd_ˇche_ít
 (
ëh_p‹t
, 
ùaddr
, 
ARP_TYPE3
, &
£c
);

1056 i‡(
¥im
)

1058 i‡(
¥im
->
ac_ty≥
 < 
ARP_TYPE3
)

1060 
£c
->
ac_ty≥

¥im
->ac_type;

1061 
¥im
->
ac_ty≥

ARP_TYPE3
;

1063 i‡(
¥im
->
ac_expúe
 < 
	`gë_time
())

1064 
¥im
= 0;

1066 i‡(!
¥im
)

1068 #i‡
DEBUG
 & 256

1069 { 
	`whîe
(); 
	`¥ötf
("replying NW_SUSPEND\n"); }

1071  
NW_SUSPEND
;

1074 i‡(
¥im
->
ac_Êags
 & 
ACF_NOTRCH
)

1076 #i‡
DEBUG


1077 { 
	`whîe
(); 
	`¥ötf
("replying EDSTNOTRCH\n"); }

1079  
EDSTNOTRCH
;

1083 
¥im
->
ac_œ°u£

	`gë_time
();

1084 i‡(
ëhaddr
)

1085 *
ëhaddr

¥im
->
ac_ëhaddr
;

1086 #i‡
DEBUG
 & 256

1087 { 
	`whîe
(); 
	`¥ötf
("ª∂yög NW_OK (\n"); 
	`wrôeEthîAddr
(&
¥im
->
ac_ëhaddr
);

1088 
	`¥ötf
(")\n"); }

1090  
NW_OK
;

1092 
	}
}

1094 
PRIVATE
 
	$¨p_timeout
 (
fd
, 
timî
)

1095 
fd
;

1096 
timî_t
 *
timî
;

1098 
¨p_p‹t_t
 *
p‹t
;

1099 
¨p_ˇche_t
 *
¥im
, *
£c
;

1100 
Àvñ
;

1101 
time_t
 
cuº_tim
;

1103 
p‹t
&
¨p_p‹t_èbÀ
[
fd
];

1105 
	`as£π
 (
timî
 =&
p‹t
->
≠_timî
);

1107 i‡(++
p‹t
->
≠_ªq_cou¡
 < 
MAX_ARP_RETRIES
)

1109 
p‹t
->
≠_Êags
 |
APF_CLIENTWRITE
|
APF_MORE2WRITE
;

1110 i‡(!(
p‹t
->
≠_Êags
 & 
APF_ARP_WR_IP
))

1111 
	`£tup_wrôe
(
p‹t
);

1115 
Àvñ

ARP_TYPE3
;

1116 
¥im

	`föd_ˇche_ít
(
p‹t
->
≠_ëh_p‹t
,Ö‹t->
≠_ªq_ùaddr
,

1117 
Àvñ
, &
£c
);

1118 i‡(!
¥im
)

1120 
¥im

£c
;

1121 
¥im
->
ac_Êags

ACF_EMPTY
;

1122 
¥im
->
ac_ùaddr

p‹t
->
≠_ªq_ùaddr
;

1124 i‡(
¥im
->
ac_ty≥
 < 
Àvñ
)

1126 
£c
->
ac_ty≥

¥im
->ac_type;

1127 
¥im
->
ac_ty≥

Àvñ
;

1129 
cuº_tim

	`gë_time
();

1130 
¥im
->
ac_expúe

cuº_tim
+ 
ARP_NOTRCH_EXP_TIME
;

1131 
¥im
->
ac_œ°u£

cuº_tim
 + 
ARP_INUSE_OFFSET
;

1132 
¥im
->
ac_Êags
 |
ACF_NOTRCH
;

1134 (*
p‹t
->
≠_ªq_func
)’‹t->
≠_ªq_ªf
,

1135 (
ëhî_addr_t
 *)0);

1137 
	}
}

1139 
PRIVATE
 
	$¥öt_¨p_ˇche
()

1141 
i
;

1142 
¨p_ˇche_t
 *
ci
;

1144 
i
=0, 
ci

¨p_ˇche
; i< 
ARP_CACHE_NR
; i++, ci++)

1146 i‡(!
ci
->
ac_expúe
)

1148 
	`¥ötf
("%d %d ", 
ci
->
ac_Êags
, ci->
ac_ty≥
);

1149 
	`wrôeEthîAddr
(&
ci
->
ac_ëhaddr
);

1150 
	`¥ötf
(" ");

1151 
	`wrôeIpAddr
(
ci
->
ac_ùaddr
);

1152 
	`¥ötf
(" %d %ld %ld\n", 
ci
->
ac_ëh_p‹t
, ci->
ac_expúe
,

1153 
ci
->
ac_œ°u£
);

1155 
	}
}

	@arp.h

5 #i‚de‡
ARP_H


6 
	#ARP_H


	)

8 
	#ARP_ETHERNET
 1

	)

10 
	#ARP_REQUEST
 1

	)

11 
	#ARP_REPLY
 2

	)

12 
	#RARP_REQUEST
 3

	)

13 
	#RARP_REPLY
 4

	)

17 
¨p_öô
 
ARGS
(( ));

18 
øΩ_ªq
 
ARGS
(–
ëh_p‹t
, 
ªf
,

19 (*
func
)(
fd
, 
ùaddr_t
 
ùaddr
) ));

20 
¨p_ù_ëh_n⁄bl
 
	`ARGS
(–
ëh_p‹t
, 
ùaddr_t
 
ùaddr
,

21 
ëhî_addr_t
 *
ëhaddr
 ));

22 
¨p_ù_ëh
 
	`ARGS
(–
ëh_p‹t
, 
ªf
, 
ùaddr_t
,

23 (*
func
)(
fd
, 
ëhî_addr_t
*
ëhadd
) ));

24 
£t_ùaddr
 
	`ARGS
(–
ëh_p‹t
, 
ùaddr_t
 
ùaddr
 ));

	@asctime.c

6 
	~<°rög.h
>

7 
	~<time.h
>

8 
	~"loc_time.h
"

10 
	#DATE_STR
 "??? ??? ?? ??:??:?? ????\n"

	)

13 
	$two_digôs
(*
pb
, 
i
, 
no•a˚
)

15 *
pb
 = (
i
 / 10) % 10 + '0';

16 i‡(!
no•a˚
 && *
pb
 == '0') *pb = ' ';

17 
pb
++;

18 *
pb
++ = (
i
 % 10) + '0';

19  ++
pb
;

20 
	}
}

23 
	$four_digôs
(*
pb
, 
i
)

25 
i
 %= 10000;

26 *
pb
++ = (
i
 / 1000) + '0';

27 
i
 %= 1000;

28 *
pb
++ = (
i
 / 100) + '0';

29 
i
 %= 100;

30 *
pb
++ = (
i
 / 10) + '0';

31 *
pb
++ = (
i
 % 10) + '0';

32  ++
pb
;

33 
	}
}

35 *
	$as˘ime
(c⁄° 
tm
 *
timïå
)

37 
buf
[26];

38 *
pb
 = 
buf
;

39 c⁄° *
ps
;

40 
n
;

42 
	`°r˝y
(
pb
, 
DATE_STR
);

43 
ps
 = 
_days
[
timïå
->
tm_wday
];

44 
n
 = 
ABB_LEN
;

45 --
n
 >0Ë*
pb
++ = *
ps
++;

46 
pb
++;

47 
ps
 = 
_m⁄ths
[
timïå
->
tm_m⁄
];

48 
n
 = 
ABB_LEN
;

49 --
n
 >0Ë*
pb
++ = *
ps
++;

50 
pb
++;

51 
pb
 = 
	`two_digôs
(

52 
	`two_digôs
(

53 
	`two_digôs
—wo_digôs(
pb
, 
timïå
->
tm_mday
, 0)

54 , 
timïå
->
tm_hour
, 1)

55 , 
timïå
->
tm_mö
, 1)

56 , 
timïå
->
tm_£c
, 1);

58 
	`four_digôs
(
pb
, 
timïå
->
tm_yór
 + 1900);

59  
buf
;

60 
	}
}

	@asin.c

9 
	~<m©h.h
>

10 
	~<î∫o.h
>

11 
	~"loˇlm©h.h
"

14 
	$asö_acos
(
x
, 
cosÊ
)

16 
√g©ive
 = 
x
 < 0;

17 
i
;

18 
g
;

19 
p
[] = {

26 
q
[] = {

35 i‡(
	`__IsN™
(
x
)) {

36 
î∫o
 = 
EDOM
;

37  
x
;

40 i‡(
√g©ive
) {

41 
x
 = -x;

43 i‡(
x
 > 0.5) {

44 
i
 = 1;

45 i‡(
x
 > 1) {

46 
î∫o
 = 
EDOM
;

49 
g
 = 0.5 - 0.5 * 
x
;

50 
x
 = - 
	`sqπ
(
g
);

51 
x
 += x;

55 
i
 = 0;

56 
g
 = 
x
 * x;

58 
x
 +x * 
g
 * 
	`POLYNOM4
(g, 
p
Ë/ 
	`POLYNOM5
(g, 
q
);

59 i‡(
cosÊ
) {

60 i‡(! 
√g©ive
Ë
x
 = -x;

62 i‡((
cosÊ
 =0Ë=(
i
 == 1)) {

63 
x
 = (x + 
M_PI_4
) + M_PI_4;

65 i‡(
cosÊ
 && 
√g©ive
 && 
i
 == 1) {

66 
x
 = (x + 
M_PI_2
) + M_PI_2;

68 i‡(! 
cosÊ
 && 
√g©ive
Ë
x
 = -x;

69  
x
;

70 
	}
}

73 
	$asö
(
x
)

75  
	`asö_acos
(
x
, 0);

76 
	}
}

79 
	$acos
(
x
)

81  
	`asö_acos
(
x
, 1);

82 
	}
}

	@assert.c

6 
	~<as£π.h
>

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

10 
	$__bad_as£πi⁄
(c⁄° *
mess
) {

12 
	`Âuts
(
mess
, 
°dîr
);

13 
	`ab‹t
();

14 
	}
}

	@assert.h

4 #i‚de‡
ASSERT_H


5 
	#ASSERT_H


	)

7 #i‡
DEBUG


9 
	#INIT_ASSERT
 *
as£π_fûe

__FILE__
;

	)

11 
bad_as£πi⁄
(*
fûe
, 
löe
, *
wh©
);

12 
bad_com∑ª
(*
fûe
, 
löe
, 
lhs
, *
wh©
, 
rhs
);

14 
	#as£π
(
x
Ë(!(xË? 
	`bad_as£πi⁄
(
as£π_fûe
, 
__LINE__
, #xË\

	)

16 
	#com∑ª
(
a
,
t
,
b
Ë(!(◊Ë
	`t
 (b)Ë? 
	`bad_com∑ª
(
as£π_fûe
, 
__LINE__
, \

	)

17 (
	ga
), #®" " #à" " #b, (
	gb
)) : () 0)

20 
	#INIT_ASSERT


	)

22 
	#as£π
(
x
Ë()0

	)

23 
	#com∑ª
(
a
,
t
,
b
Ë()0

	)

	@asynchio.c

8 
	#nû
 0

	)

9 
	#Æ¨m
 
_Æ¨m


	)

10 
	#io˘l
 
_io˘l


	)

11 
	#ªad
 
_ªad


	)

12 
	#siga˘i⁄
 
_siga˘i⁄


	)

13 
	#sigfûl£t
 
_sigfûl£t


	)

14 
	#time
 
_time


	)

15 
	#wrôe
 
_wrôe


	)

16 
	~<lib.h
>

17 
	~<sys/io˘l.h
>

18 
	~<sys/asynchio.h
>

19 
	~<°dlib.h
>

20 
	~<uni°d.h
>

21 
	~<°rög.h
>

22 
	~<time.h
>

23 
	~<sig«l.h
>

25 
	#IDLE
 0

	)

26 
	#INPROGRESS
 1

	)

27 
	#RESULT
 2

	)

29 
	#OP_READ
 0

	)

30 
	#OP_WRITE
 1

	)

31 
	#OP_IOCTL
 2

	)

33 *
	gasyn_cuºít
;

34 
	gasyn_›
;

35 
	gasyn_fd
;

36 
	gasyn_ªq
;

37 *
	gasyn_d©a
;

38 
ssize_t
 
	gasyn_cou¡
;

39 
	gasyn_î∫o
;

41 
	$asyn_öô
(
asynchio_t
 *
asyn
)

43 *
asyn

IDLE
;

44 
	}
}

46 
ssize_t
 
	$›î©i⁄
(
›
, 
asynchio_t
 *
asyn
, 
fd
, 
ªq
,

47 *
d©a
, 
ssize_t
 
cou¡
)

49 *
asyn
) {

50 
INPROGRESS
:

51 i‡(
asyn_cuºít
 !
asyn
 && 
asyn_›
 !
›
Ë
	`ab‹t
();

53 
IDLE
:

54 
asyn_cuºít

asyn
;

55 
asyn_›

›
;

56 
asyn_fd

fd
;

57 
asyn_ªq

ªq
;

58 
asyn_d©a

d©a
;

59 
asyn_cou¡

cou¡
;

60 *
asyn

INPROGRESS
;

61 
î∫o

EINPROGRESS
;

63 
RESULT
:

64 i‡(
asyn_cuºít
 !
asyn
 && 
asyn_›
 !
›
Ë
	`ab‹t
();

65 *
asyn

IDLE
;

66 
î∫o

asyn_î∫o
;

67  
asyn_cou¡
;

69 
	}
}

71 
ssize_t
 
	$asyn_ªad
(
asynchio_t
 *
asyn
, 
fd
, *
buf
, 
size_t
 
Àn
)

73  
	`›î©i⁄
(
OP_READ
, 
asyn
, 
fd
, 0, 
buf
, 
Àn
);

74 
	}
}

76 
ssize_t
 
	$asyn_wrôe
(
asynchio_t
 *
asyn
, 
fd
, c⁄° *
buf
, 
size_t
 
Àn
)

78  
	`›î©i⁄
(
OP_WRITE
, 
asyn
, 
fd
, 0, (*Ë
buf
, 
Àn
);

79 
	}
}

81 
	$asyn_io˘l
(
asynchio_t
 *
asyn
, 
fd
, 
ªque°
, *
d©a
)

83  
	`›î©i⁄
(
OP_IOCTL
, 
asyn
, 
fd
, 
ªque°
, 
d©a
, 0);

84 
	}
}

86 
	$time_out
(
sig
)

88 
	`Æ¨m
(1);

89 
	}
}

91 
	$asyn_waô
(
asynchio_t
 *
asyn
, 
Êags
, 
timevÆ
 *
to
)

93 
time_t
 
now
;

94 
ﬁd_timî
, 
√w_timî
;

95 
siga˘i⁄
 
ﬁd_ß
, 
√w_ß
;

97 i‡(*
asyn
 =
IDLE
)  0;

98 i‡(
asyn_cuºít
 !
asyn
 || *asy¿!
INPROGRESS
Ë
	`ab‹t
();

99 i‡(
Êags
 & 
ASYN_NONBLOCK
Ë
	`ab‹t
();

101 i‡(
to
 !
nû
) {

102 
now

	`time
(
nû
);

103 i‡(
to
->
tv_£c
 <
now
Ë{ 
î∫o

EINTR
;  -1; }

104 
ﬁd_timî

	`Æ¨m
(0);

105 
√w_ß
.
ß_h™dÀr

time_out
;

106 
	`sigfûl£t
(&
√w_ß
.
ß_mask
);

107 
√w_ß
.
ß_Êags
= 0;

108 
	`siga˘i⁄
(
SIGALRM
, &
√w_ß
, &
ﬁd_ß
);

109 
√w_timî

to
->
tv_£c
 - 
now
;

110 i‡(
√w_timî
 < 
ﬁd_timî
) {

111 
√w_timî

ﬁd_timî
;

113 
	`Æ¨m
(
√w_timî
);

115 
asyn_›
) {

116 
OP_READ
:

117 
asyn_cou¡

	`ªad
(
asyn_fd
, 
asyn_d©a
,ásyn_count);

118 
asyn_î∫o

î∫o
;

120 
OP_WRITE
:

121 
asyn_cou¡

	`wrôe
(
asyn_fd
, 
asyn_d©a
,ásyn_count);

122 
asyn_î∫o

î∫o
;

124 
OP_IOCTL
:

125 
asyn_cou¡

	`io˘l
(
asyn_fd
, 
asyn_ªq
, 
asyn_d©a
);

126 
asyn_î∫o

î∫o
;

129 i‡(
to
 !
nû
) {

130 
	`Æ¨m
(0);

131 
	`siga˘i⁄
(
SIGALRM
, &
ﬁd_ß
, (
siga˘i⁄
 *)0);

132 
	`Æ¨m
(
ﬁd_timî
);

135 i‡(
asyn_cou¡
 =-1 && 
asyn_î∫o
 =
EINTR
) {

136 
î∫o

EINTR
;

139 *
asyn

RESULT
;

142 
	}
}

144 
	$asyn_synch
(
asynchio_t
 *
asyn
, 
fd
)

146 
	}
}

148 
	$asyn_˛o£
(
asynchio_t
 *
asyn
, 
fd
)

150 *
asyn

IDLE
;

151 
	}
}

	@at_wini.c

14 
	~"kî√l.h
"

15 
	~"drivî.h
"

16 
	~"drvlib.h
"

18 #i‡
ENABLE_AT_WINI


23 
	#REG_BASE0
 0x1F0

	)

24 
	#REG_BASE1
 0x170

	)

25 
	#REG_DATA
 0

	)

26 
	#REG_PRECOMP
 1

	)

27 
	#REG_COUNT
 2

	)

28 
	#REG_SECTOR
 3

	)

29 
	#REG_CYL_LO
 4

	)

30 
	#REG_CYL_HI
 5

	)

31 
	#REG_LDH
 6

	)

32 
	#LDH_DEFAULT
 0xA0

	)

33 
	#LDH_LBA
 0x40

	)

34 
	#ldh_öô
(
drive
Ë(
LDH_DEFAULT
 | ((driveË<< 4))

	)

37 
	#REG_STATUS
 7

	)

38 
	#STATUS_BSY
 0x80

	)

39 
	#STATUS_RDY
 0x40

	)

40 
	#STATUS_WF
 0x20

	)

41 
	#STATUS_SC
 0x10

	)

42 
	#STATUS_DRQ
 0x08

	)

43 
	#STATUS_CRD
 0x04

	)

44 
	#STATUS_IDX
 0x02

	)

45 
	#STATUS_ERR
 0x01

	)

46 
	#REG_ERROR
 1

	)

47 
	#ERROR_BB
 0x80

	)

48 
	#ERROR_ECC
 0x40

	)

49 
	#ERROR_ID
 0x10

	)

50 
	#ERROR_AC
 0x04

	)

51 
	#ERROR_TK
 0x02

	)

52 
	#ERROR_DM
 0x01

	)

55 
	#REG_COMMAND
 7

	)

56 
	#CMD_IDLE
 0x00

	)

57 
	#CMD_RECALIBRATE
 0x10

	)

58 
	#CMD_READ
 0x20

	)

59 
	#CMD_WRITE
 0x30

	)

60 
	#CMD_READVERIFY
 0x40

	)

61 
	#CMD_FORMAT
 0x50

	)

62 
	#CMD_SEEK
 0x70

	)

63 
	#CMD_DIAG
 0x90

	)

64 
	#CMD_SPECIFY
 0x91

	)

65 
	#ATA_IDENTIFY
 0xEC

	)

66 
	#REG_CTL
 0x206

	)

67 
	#CTL_NORETRY
 0x80

	)

68 
	#CTL_NOECC
 0x40

	)

69 
	#CTL_EIGHTHEADS
 0x08

	)

70 
	#CTL_RESET
 0x04

	)

71 
	#CTL_INTDISABLE
 0x02

	)

74 
	#AT_IRQ0
 14

	)

75 
	#AT_IRQ1
 15

	)

78 
	scomm™d
 {

79 
u8_t
 
	m¥ecomp
;

80 
u8_t
 
	mcou¡
;

81 
u8_t
 
	m£˘‹
;

82 
u8_t
 
	mcyl_lo
;

83 
u8_t
 
	mcyl_hi
;

84 
u8_t
 
	mldh
;

85 
u8_t
 
	mcomm™d
;

90 
	#ERR
 (-1Ë

	)

91 
	#ERR_BAD_SECTOR
 (-2Ë

	)

94 
	#WAKEUP
 (32*
HZ
Ë

	)

97 
	#MAX_DRIVES
 4

	)

98 #i‡
_WORD_SIZE
 > 2

99 
	#MAX_SECS
 256

	)

101 
	#MAX_SECS
 127

	)

103 
	#MAX_ERRORS
 4

	)

104 
	#NR_DEVICES
 (
MAX_DRIVES
 * 
DEV_PER_DRIVE
)

	)

105 
	#SUB_PER_DRIVE
 (
NR_PARTITIONS
 * NR_PARTITIONS)

	)

106 
	#NR_SUBDEVS
 (
MAX_DRIVES
 * 
SUB_PER_DRIVE
)

	)

107 
	#TIMEOUT
 32000

	)

108 
	#RECOVERYTIME
 500

	)

109 
	#INITIALIZED
 0x01

	)

110 
	#DEAF
 0x02

	)

111 
	#SMART
 0x04

	)

115 
PRIVATE
 
	swöi
 {

116 
	m°©e
;

117 
	mba£
;

118 
	múq
;

119 
	mlcylödîs
;

120 
	mlhóds
;

121 
	ml£˘‹s
;

122 
	mpcylödîs
;

123 
	mphóds
;

124 
	mp£˘‹s
;

125 
	mldh¥ef
;

126 
	m¥ecomp
;

127 
	mmax_cou¡
;

128 
	m›í_˘
;

129 
devi˚
 
	m∑π
[
DEV_PER_DRIVE
];

130 
devi˚
 
	msub∑π
[
SUB_PER_DRIVE
];

131 } 
	gwöi
[
MAX_DRIVES
], *
	gw_wn
;

133 
PRIVATE
 
	så™s
 {

134 
i‹eque°_s
 *
	mi›
;

135 
	mblock
;

136 
	mcou¡
;

137 
phys_byãs
 
	mphys
;

138 } 
	gwå™s
[
NR_IOREQS
];

140 
PRIVATE
 
å™s
 *
	gw_ç
;

141 
PRIVATE
 
	gw_cou¡
;

142 
PRIVATE
 
	gw_√xtblock
;

143 
PRIVATE
 
	gw_›code
;

144 
PRIVATE
 
	gw_comm™d
;

145 
PRIVATE
 
	gw_°©us
;

146 
PRIVATE
 
	gw_drive
;

147 
PRIVATE
 
devi˚
 *
	gw_dv
;

149 
FORWARD
 
_PROTOTYPE
–
öô_∑øms
, () );

150 
FORWARD
 
_PROTOTYPE
–
w_do_›í
, (
drivî
 *
dp
, 
mesßge
 *
m_±r
) );

151 
FORWARD
 
_PROTOTYPE
–
devi˚
 *
w_¥ï¨e
, (device) );

152 
FORWARD
 
_PROTOTYPE
–
w_idítify
, () );

153 
FORWARD
 
_PROTOTYPE
–*
w_«me
, () );

154 
FORWARD
 
_PROTOTYPE
–
w_•ecify
, () );

155 
FORWARD
 
_PROTOTYPE
–
w_scheduÀ
, (
¥oc_ƒ
, 
i‹eque°_s
 *
i›
) );

156 
FORWARD
 
_PROTOTYPE
–
w_föish
, () );

157 
FORWARD
 
_PROTOTYPE
–
com_out
, (
comm™d
 *
cmd
) );

158 
FORWARD
 
_PROTOTYPE
–
w_√ed_ª£t
, () );

159 
FORWARD
 
_PROTOTYPE
–
w_do_˛o£
, (
drivî
 *
dp
, 
mesßge
 *
m_±r
) );

160 
FORWARD
 
_PROTOTYPE
–
com_sim∂e
, (
comm™d
 *
cmd
) );

161 
FORWARD
 
_PROTOTYPE
–
w_timeout
, () );

162 
FORWARD
 
_PROTOTYPE
–
w_ª£t
, () );

163 
FORWARD
 
_PROTOTYPE
–
w_öå_waô
, () );

164 
FORWARD
 
_PROTOTYPE
–
w_waôf‹
, (
mask
, 
vÆue
) );

165 
FORWARD
 
_PROTOTYPE
–
w_h™dÀr
, (
úq
) );

166 
FORWARD
 
_PROTOTYPE
–
w_geomëry
, (
∑πôi⁄
 *
íåy
) );

169 
	#waôf‹
(
mask
, 
vÆue
Ë\

	)

170 ((
ö_byã
(
w_wn
->
ba£
 + 
REG_STATUS
Ë& 
	gmask
Ë=
vÆue
 \

171 || 
	$w_waôf‹
(
mask
, 
vÆue
))

175 
PRIVATE
 
drivî
 
w_dèb
 = {

176 
w_«me
,

177 
w_do_›í
,

178 
w_do_˛o£
,

179 
do_dio˙é
,

180 
w_¥ï¨e
,

181 
w_scheduÀ
,

182 
w_föish
,

183 
n›_˛ónup
,

184 
w_geomëry
,

185 
	}
};

187 #i‡
ENABLE_ATAPI


188 
	~"©≠i.c
"

195 
PUBLIC
 
	$©_wöche°î_èsk
()

199 
	`öô_∑øms
();

201 
	`drivî_èsk
(&
w_dèb
);

202 
	}
}

208 
PRIVATE
 
	$öô_∑øms
()

212 
u16_t
 
∑rv
[2];

213 
ve˘‹
;

214 
drive
, 
ƒ_drives
, 
i
;

215 
wöi
 *
wn
;

216 
u8_t
 
∑øms
[16];

217 
phys_byãs
 
∑øm_phys
 = 
	`vú2phys
(
∑øms
);

220 
	`phys_c›y
(0x475L, 
∑øm_phys
, 1L);

221 i‡((
ƒ_drives
 = 
∑øms
[0]) > 2)Çr_drives = 2;

223 
drive
 = 0, 
wn
 = 
wöi
; drivê< 
MAX_DRIVES
; drive++, wn++) {

224 i‡(
drive
 < 
ƒ_drives
) {

226 
ve˘‹
 = 
drive
 =0 ? 
WINI_0_PARM_VEC
 : 
WINI_1_PARM_VEC
;

227 
	`phys_c›y
(
ve˘‹
 * 4L, 
	`vú2phys
(
∑rv
), 4L);

230 
	`phys_c›y
(
	`h˛ick_to_physb
(
∑rv
[1]Ë+Ö¨v[0], 
∑øm_phys
, 16L);

233 
wn
->
lcylödîs
 = 
	`bp_cylödîs
(
∑øms
);

234 
wn
->
lhóds
 = 
	`bp_hóds
(
∑øms
);

235 
wn
->
l£˘‹s
 = 
	`bp_£˘‹s
(
∑øms
);

236 
wn
->
¥ecomp
 = 
	`bp_¥ecomp
(
∑øms
) >> 2;

238 
wn
->
ldh¥ef
 = 
	`ldh_öô
(
drive
);

239 
wn
->
max_cou¡
 = 
MAX_SECS
 << 
SECTOR_SHIFT
;

240 i‡(
drive
 < 2) {

242 
wn
->
ba£
 = 
REG_BASE0
;

243 
wn
->
úq
 = 
AT_IRQ0
;

246 
wn
->
ba£
 = 
REG_BASE1
;

247 
wn
->
úq
 = 
AT_IRQ1
;

250 
	}
}

256 
PRIVATE
 
	$w_do_›í
(
dp
, 
m_±r
)

257 
drivî
 *
dp
;

258 
mesßge
 *
m_±r
;

262 
r
;

263 
wöi
 *
wn
;

264 
comm™d
 
cmd
;

266 i‡(
	`w_¥ï¨e
(
m_±r
->
DEVICE
Ë=
NIL_DEV
Ë(
ENXIO
);

267 
wn
 = 
w_wn
;

269 i‡(
wn
->
°©e
 == 0) {

271 i‡(
	`w_idítify
(Ë!
OK
) {

272 
	`¥ötf
("%s:ÖrobêÁûed\n", 
	`w_«me
());

273 i‡(
wn
->
°©e
 & 
DEAF
Ë
	`w_ª£t
();

274 
wn
->
°©e
 = 0;

275 (
ENXIO
);

278 i‡(
wn
->
›í_˘
++ == 0) {

280 
	`∑πôi⁄
(&
w_dèb
, 
w_drive
 * 
DEV_PER_DRIVE
, 
P_PRIMARY
);

282 (
OK
);

283 
	}
}

289 
PRIVATE
 
devi˚
 *
	$w_¥ï¨e
(
devi˚
)

290 
devi˚
;

295 
w_cou¡
 = 0;

297 i‡(
devi˚
 < 
NR_DEVICES
) {

298 
w_drive
 = 
devi˚
 / 
DEV_PER_DRIVE
;

299 
w_wn
 = &
wöi
[
w_drive
];

300 
w_dv
 = &
w_wn
->
∑π
[
devi˚
 % 
DEV_PER_DRIVE
];

302 i‡((Ë(
devi˚
 -
MINOR_hd1a
Ë< 
NR_SUBDEVS
) {

303 
w_drive
 = 
devi˚
 / 
SUB_PER_DRIVE
;

304 
w_wn
 = &
wöi
[
w_drive
];

305 
w_dv
 = &
w_wn
->
sub∑π
[
devi˚
 % 
SUB_PER_DRIVE
];

307 (
NIL_DEV
);

309 (
w_dv
);

310 
	}
}

316 
PRIVATE
 
	$w_idítify
()

322 
wöi
 *
wn
 = 
w_wn
;

323 
comm™d
 
cmd
;

324 
id_°rög
[40];

325 
i
, 
r
;

326 
size
;

327 
	#id_byã
(
n
Ë(&
tmp_buf
[2 * (n)])

	)

328 
	#id_w‹d
(
n
Ë(((
u16_t
Ë
	`id_byã
“)[0] << 0Ë\

	)

329 |((
u16_t
Ë
	`id_byã
(
n
)[1] << 8))

330 
	#id_l⁄gw‹d
(
n
Ë(((
u32_t
Ë
	`id_byã
“)[0] << 0Ë\

	)

331 |((
u32_t
Ë
	`id_byã
(
n
)[1] << 8) \

332 |((
u32_t
Ë
	`id_byã
(
n
)[2] << 16) \

333 |((
u32_t
Ë
	`id_byã
(
n
)[3] << 24))

336 
r
 = 
	`ö_byã
(
wn
->
ba£
 + 
REG_CYL_LO
);

337 
	`out_byã
(
wn
->
ba£
 + 
REG_CYL_LO
, ~
r
);

338 i‡(
	`ö_byã
(
wn
->
ba£
 + 
REG_CYL_LO
Ë=
r
Ë(
ERR
);

341 
	`put_úq_h™dÀr
(
wn
->
úq
, 
w_h™dÀr
);

342 
	`íabÀ_úq
(
wn
->
úq
);

344 
cmd
.
ldh
 = 
wn
->
ldh¥ef
;

345 
cmd
.
comm™d
 = 
ATA_IDENTIFY
;

346 i‡(
	`com_sim∂e
(&
cmd
Ë=
OK
) {

348 
wn
->
°©e
 |
SMART
;

351 
	`p‹t_ªad
(
wn
->
ba£
 + 
REG_DATA
, 
tmp_phys
, 
SECTOR_SIZE
);

354 
i
 = 0; i < 40; i++Ë
id_°rög
[i] = 
	`id_byã
(27)[i^1];

357 
wn
->
pcylödîs
 = 
	`id_w‹d
(1);

358 
wn
->
phóds
 = 
	`id_w‹d
(3);

359 
wn
->
p£˘‹s
 = 
	`id_w‹d
(6);

360 
size
 = (
u32_t
Ë
wn
->
pcylödîs
 * wn->
phóds
 * wn->
p£˘‹s
;

362 i‡((
	`id_byã
(49)[1] & 0x02Ë&& 
size
 > 512L*1024*2) {

366 
wn
->
ldh¥ef
 |
LDH_LBA
;

367 
size
 = 
	`id_l⁄gw‹d
(60);

370 i‡(
wn
->
lcylödîs
 == 0) {

372 
wn
->
lcylödîs
 = wn->
pcylödîs
;

373 
wn
->
lhóds
 = wn->
phóds
;

374 
wn
->
l£˘‹s
 = wn->
p£˘‹s
;

375 
wn
->
lcylödîs
 > 1024) {

376 
wn
->
lhóds
 *= 2;

377 
wn
->
lcylödîs
 /= 2;

384 i‡(
wn
->
lcylödîs
 =0Ë(
ERR
);

385 
wn
->
pcylödîs
 = wn->
lcylödîs
;

386 
wn
->
phóds
 = wn->
lhóds
;

387 
wn
->
p£˘‹s
 = wn->
l£˘‹s
;

388 
size
 = (
u32_t
Ë
wn
->
pcylödîs
 * wn->
phóds
 * wn->
p£˘‹s
;

391 i‡(
size
 > ((
u32_t
Ë-1Ë/ 
SECTOR_SIZE
) size = ((u32_t) -1) / SECTOR_SIZE;

394 
wn
->
∑π
[0].
dv_ba£
 = 0;

395 
wn
->
∑π
[0].
dv_size
 = 
size
 << 
SECTOR_SHIFT
;

397 i‡(
	`w_•ecify
(Ë!
OK
 && w_•ecify(Ë!OKË(
ERR
);

399 
	`¥ötf
("%s: ", 
	`w_«me
());

400 i‡(
wn
->
°©e
 & 
SMART
) {

401 
	`¥ötf
("%.40s\n", 
id_°rög
);

403 
	`¥ötf
("%ux%ux%u\n", 
wn
->
pcylödîs
, wn->
phóds
, wn->
p£˘‹s
);

405 (
OK
);

406 
	}
}

412 
PRIVATE
 *
	$w_«me
()

415 
«me
[] = "at-hd15";

416 
devi˚
 = 
w_drive
 * 
DEV_PER_DRIVE
;

418 i‡(
devi˚
 < 10) {

419 
«me
[5] = '0' + 
devi˚
;

420 
«me
[6] = 0;

422 
«me
[5] = '0' + 
devi˚
 / 10;

423 
«me
[6] = '0' + 
devi˚
 % 10;

425  
«me
;

426 
	}
}

432 
PRIVATE
 
	$w_•ecify
()

436 
wöi
 *
wn
 = 
w_wn
;

437 
comm™d
 
cmd
;

439 i‡((
wn
->
°©e
 & 
DEAF
Ë&& 
	`w_ª£t
(Ë!
OK
Ë(
ERR
);

442 
cmd
.
¥ecomp
 = 
wn
->precomp;

443 
cmd
.
cou¡
 = 
wn
->
p£˘‹s
;

444 
cmd
.
ldh
 = 
w_wn
->
ldh¥ef
 | (
wn
->
phóds
 - 1);

445 
cmd
.
comm™d
 = 
CMD_SPECIFY
;

447 i‡(
	`com_sim∂e
(&
cmd
Ë!
OK
Ë(
ERR
);

449 i‡(!(
wn
->
°©e
 & 
SMART
)) {

451 
cmd
.
£˘‹
 = 0;

452 
cmd
.
cyl_lo
 = 0;

453 
cmd
.
cyl_hi
 = 0;

454 
cmd
.
ldh
 = 
w_wn
->
ldh¥ef
;

455 
cmd
.
comm™d
 = 
CMD_RECALIBRATE
;

457 i‡(
	`com_sim∂e
(&
cmd
Ë!
OK
Ë(
ERR
);

460 
wn
->
°©e
 |
INITIALIZED
;

461 (
OK
);

462 
	}
}

468 
PRIVATE
 
	$w_scheduÀ
(
¥oc_ƒ
, 
i›
)

469 
¥oc_ƒ
;

470 
i‹eque°_s
 *
i›
;

476 
wöi
 *
wn
 = 
w_wn
;

477 
r
, 
›code
;

478 
pos
;

479 
nbyãs
, 
cou¡
;

480 
block
;

481 
phys_byãs
 
u£r_phys
;

484 
nbyãs
 = 
i›
->
io_nbyãs
;

485 i‡((
nbyãs
 & 
SECTOR_MASK
Ë!0Ë(
i›
->
io_nbyãs
 = 
EINVAL
);

488 
pos
 = 
i›
->
io_posôi⁄
;

489 i‡((
pos
 & 
SECTOR_MASK
Ë!0Ë(
i›
->
io_nbyãs
 = 
EINVAL
);

492 
u£r_phys
 = 
	`num≠
(
¥oc_ƒ
, (
vú_byãs
Ë
i›
->
io_buf
, 
nbyãs
);

493 i‡(
u£r_phys
 =0Ë(
i›
->
io_nbyãs
 = 
EINVAL
);

496 
›code
 = 
i›
->
io_ªque°
 & ~
OPTIONAL_IO
;

499 i‡(
pos
 >
w_dv
->
dv_size
Ë(
OK
);

500 i‡(
pos
 + 
nbyãs
 > 
w_dv
->
dv_size
)Çbytes = w_dv->dv_size -Öos;

501 
block
 = (
w_dv
->
dv_ba£
 + 
pos
Ë>> 
SECTOR_SHIFT
;

503 i‡(
w_cou¡
 > 0 && 
block
 !
w_√xtblock
) {

505 i‡((
r
 = 
	`w_föish
()Ë!
OK
) (r);

509 
w_√xtblock
 = 
block
 + (
nbyãs
 >> 
SECTOR_SHIFT
);

513 
cou¡
 = 
nbyãs
;

515 i‡(
w_cou¡
 =
wn
->
max_cou¡
) {

517 i‡((
r
 = 
	`w_föish
()Ë!
OK
) (r);

520 i‡(
w_cou¡
 + 
cou¡
 > 
wn
->
max_cou¡
)

521 
cou¡
 = 
wn
->
max_cou¡
 - 
w_cou¡
;

523 i‡(
w_cou¡
 == 0) {

525 
w_›code
 = 
›code
;

526 
w_ç
 = 
wå™s
;

530 
w_ç
->
i›
 = iop;

531 
w_ç
->
block
 = block;

532 
w_ç
->
cou¡
 = count;

533 
w_ç
->
phys
 = 
u£r_phys
;

536 
w_ç
++;

537 
w_cou¡
 +
cou¡
;

538 
block
 +
cou¡
 >> 
SECTOR_SHIFT
;

539 
u£r_phys
 +
cou¡
;

540 
nbyãs
 -
cou¡
;

541 } 
nbyãs
 > 0);

543 (
OK
);

544 
	}
}

550 
PRIVATE
 
	$w_föish
()

554 
å™s
 *
ç
 = 
wå™s
;

555 
wöi
 *
wn
 = 
w_wn
;

556 
r
, 
îr‹s
;

557 
comm™d
 
cmd
;

558 
cylödî
, 
hód
, 
£˘‹
, 
£c•cyl
;

560 i‡(
w_cou¡
 =0Ë(
OK
);

562 
r
 = 
ERR
;

563 
îr‹s
 = 0;

566 i‡(
r
 !
OK
) {

570 i‡(!(
wn
->
°©e
 & 
INITIALIZED
Ë&& 
	`w_•ecify
(Ë!
OK
)

571 (
ç
->
i›
->
io_nbyãs
 = 
EIO
);

574 
cmd
.
¥ecomp
 = 
wn
->precomp;

575 
cmd
.
cou¡
 = (
w_cou¡
 >> 
SECTOR_SHIFT
Ë& 
BYTE
;

576 i‡(
wn
->
ldh¥ef
 & 
LDH_LBA
) {

577 
cmd
.
£˘‹
 = (
ç
->
block
 >> 0) & 0xFF;

578 
cmd
.
cyl_lo
 = (
ç
->
block
 >> 8) & 0xFF;

579 
cmd
.
cyl_hi
 = (
ç
->
block
 >> 16) & 0xFF;

580 
cmd
.
ldh
 = 
wn
->
ldh¥ef
 | ((
ç
->
block
 >> 24) & 0xF);

582 
£c•cyl
 = 
wn
->
phóds
 * wn->
p£˘‹s
;

583 
cylödî
 = 
ç
->
block
 / 
£c•cyl
;

584 
hód
 = (
ç
->
block
 % 
£c•cyl
Ë/ 
wn
->
p£˘‹s
;

585 
£˘‹
 = 
ç
->
block
 % 
wn
->
p£˘‹s
;

586 
cmd
.
£˘‹
 = sector + 1;

587 
cmd
.
cyl_lo
 = 
cylödî
 & 
BYTE
;

588 
cmd
.
cyl_hi
 = (
cylödî
 >> 8Ë& 
BYTE
;

589 
cmd
.
ldh
 = 
wn
->
ldh¥ef
 | 
hód
;

591 
cmd
.
comm™d
 = 
w_›code
 =
DEV_WRITE
 ? 
CMD_WRITE
 : 
CMD_READ
;

593 i‡((
r
 = 
	`com_out
(&
cmd
)Ë!
OK
) {

594 i‡(++
îr‹s
 =
MAX_ERRORS
) {

595 
w_comm™d
 = 
CMD_IDLE
;

596 (
ç
->
i›
->
io_nbyãs
 = 
EIO
);

606 i‡(
w_›code
 =
DEV_READ
) {

607 i‡((
r
 = 
	`w_öå_waô
()Ë=
OK
) {

610 
	`p‹t_ªad
(
wn
->
ba£
 + 
REG_DATA
, 
ç
->
phys
, 
SECTOR_SIZE
);

612 
ç
->
phys
 +
SECTOR_SIZE
;

613 
ç
->
i›
->
io_nbyãs
 -
SECTOR_SIZE
;

614 
w_cou¡
 -
SECTOR_SIZE
;

615 i‡((
ç
->
cou¡
 -
SECTOR_SIZE
) == 0)Åp++;

618 i‡(
w_°©us
 & 
STATUS_DRQ
) {

619 
	`p‹t_ªad
(
wn
->
ba£
 + 
REG_DATA
, 
tmp_phys
,

620 
SECTOR_SIZE
);

625 i‡(!
	`waôf‹
(
STATUS_DRQ
, STATUS_DRQ)) {

626 
r
 = 
ERR
;

630 
	`p‹t_wrôe
(
wn
->
ba£
 + 
REG_DATA
, 
ç
->
phys
, 
SECTOR_SIZE
);

631 
r
 = 
	`w_öå_waô
();

634 i‡(
r
 =
OK
) {

637 
ç
->
phys
 +
SECTOR_SIZE
;

638 
ç
->
i›
->
io_nbyãs
 -
SECTOR_SIZE
;

639 
w_cou¡
 -
SECTOR_SIZE
;

640 i‡((
ç
->
cou¡
 -
SECTOR_SIZE
) == 0)Åp++;

644 i‡(
r
 !
OK
) {

646 i‡(
r
 =
ERR_BAD_SECTOR
 || ++
îr‹s
 =
MAX_ERRORS
) {

647 
w_comm™d
 = 
CMD_IDLE
;

648 (
ç
->
i›
->
io_nbyãs
 = 
EIO
);

652 i‡(
îr‹s
 =
MAX_ERRORS
 / 2) {

653 
	`w_√ed_ª£t
();

654 i‡(
ç
->
i›
->
io_ªque°
 & 
OPTIONAL_IO
) {

655 
w_comm™d
 = 
CMD_IDLE
;

656 (
ç
->
i›
->
io_nbyãs
 = 
EIO
);

661 
îr‹s
 = 0;

662 } 
w_cou¡
 > 0);

664 
w_comm™d
 = 
CMD_IDLE
;

665 (
OK
);

666 
	}
}

672 
PRIVATE
 
	$com_out
(
cmd
)

673 
comm™d
 *
cmd
;

677 
wöi
 *
wn
 = 
w_wn
;

678 
ba£
 = 
wn
->base;

680 i‡(!
	`waôf‹
(
STATUS_BSY
, 0)) {

681 
	`¥ötf
("%s: c⁄åﬁÀ∏nŸÑódy\n", 
	`w_«me
());

682 (
ERR
);

686 
	`out_byã
(
ba£
 + 
REG_LDH
, 
cmd
->
ldh
);

688 i‡(!
	`waôf‹
(
STATUS_BSY
, 0)) {

689 
	`¥ötf
("%s: drivênŸÑódy\n", 
	`w_«me
());

690 (
ERR
);

694 
	`˛ock_mess
(
WAKEUP
, 
w_timeout
);

696 
	`out_byã
(
ba£
 + 
REG_CTL
, 
wn
->
phóds
 >8 ? 
CTL_EIGHTHEADS
 : 0);

697 
	`out_byã
(
ba£
 + 
REG_PRECOMP
, 
cmd
->
¥ecomp
);

698 
	`out_byã
(
ba£
 + 
REG_COUNT
, 
cmd
->
cou¡
);

699 
	`out_byã
(
ba£
 + 
REG_SECTOR
, 
cmd
->
£˘‹
);

700 
	`out_byã
(
ba£
 + 
REG_CYL_LO
, 
cmd
->
cyl_lo
);

701 
	`out_byã
(
ba£
 + 
REG_CYL_HI
, 
cmd
->
cyl_hi
);

702 
	`lock
();

703 
	`out_byã
(
ba£
 + 
REG_COMMAND
, 
cmd
->
comm™d
);

704 
w_comm™d
 = 
cmd
->
comm™d
;

705 
w_°©us
 = 
STATUS_BSY
;

706 
	`u∆ock
();

707 (
OK
);

708 
	}
}

714 
PRIVATE
 
	$w_√ed_ª£t
()

717 
wöi
 *
wn
;

719 
wn
 = 
wöi
; w¿< &wöi[
MAX_DRIVES
]; wn++) {

720 
wn
->
°©e
 |
DEAF
;

721 
wn
->
°©e
 &~
INITIALIZED
;

723 
	}
}

729 
PRIVATE
 
	$w_do_˛o£
(
dp
, 
m_±r
)

730 
drivî
 *
dp
;

731 
mesßge
 *
m_±r
;

735 i‡(
	`w_¥ï¨e
(
m_±r
->
DEVICE
Ë=
NIL_DEV
Ë(
ENXIO
);

736 
w_wn
->
›í_˘
--;

737 (
OK
);

738 
	}
}

744 
PRIVATE
 
	$com_sim∂e
(
cmd
)

745 
comm™d
 *
cmd
;

748 
r
;

750 i‡((
r
 = 
	`com_out
(
cmd
)Ë=
OK
Ë∏
	`w_öå_waô
();

751 
w_comm™d
 = 
CMD_IDLE
;

752 (
r
);

753 
	}
}

759 
PRIVATE
 
	$w_timeout
()

761 
wöi
 *
wn
 = 
w_wn
;

763 
w_comm™d
) {

764 
CMD_IDLE
:

766 
CMD_READ
:

767 
CMD_WRITE
:

771 i‡(
wn
->
max_cou¡
 > 8 * 
SECTOR_SIZE
) {

772 
wn
->
max_cou¡
 = 8 * 
SECTOR_SIZE
;

774 
wn
->
max_cou¡
 = 
SECTOR_SIZE
;

779 
	`¥ötf
("%s:Åimeouà⁄ comm™d %02x\n", 
	`w_«me
(), 
w_comm™d
);

780 
	`w_√ed_ª£t
();

781 
w_°©us
 = 0;

782 
	`öãºu±
(
WINCHESTER
);

784 
	}
}

790 
PRIVATE
 
	$w_ª£t
()

796 
wöi
 *
wn
;

797 
îr
;

800 
	`mûli_dñay
(
RECOVERYTIME
);

803 
	`out_byã
(
w_wn
->
ba£
 + 
REG_CTL
, 
CTL_RESET
);

804 
	`mûli_dñay
(1);

805 
	`out_byã
(
w_wn
->
ba£
 + 
REG_CTL
, 0);

806 
	`mûli_dñay
(1);

809 i‡(!
	`w_waôf‹
(
STATUS_BSY
 | 
STATUS_RDY
, STATUS_RDY)) {

810 
	`¥ötf
("%s:Ñe£àÁûed, drivêbusy\n", 
	`w_«me
());

811 (
ERR
);

816 
wn
 = 
wöi
; w¿< &wöi[
MAX_DRIVES
]; wn++) {

817 i‡(
wn
->
ba£
 =
w_wn
->ba£Ëwn->
°©e
 &~
DEAF
;

819 (
OK
);

820 
	}
}

826 
PRIVATE
 
	$w_öå_waô
()

830 
mesßge
 
mess
;

831 
r
;

834 
w_°©us
 & 
STATUS_BSY
Ë
	`ª˚ive
(
HARDWARE
, &
mess
);

837 
	`lock
();

838 i‡((
w_°©us
 & (
STATUS_BSY
 | 
STATUS_RDY
 | 
STATUS_WF
 | 
STATUS_ERR
))

839 =
STATUS_RDY
) {

840 
r
 = 
OK
;

841 
w_°©us
 |
STATUS_BSY
;

843 i‡((
w_°©us
 & 
STATUS_ERR
Ë&& (
	`ö_byã
(
w_wn
->
ba£
 + 
REG_ERROR
Ë& 
ERROR_BB
)) {

844 
r
 = 
ERR_BAD_SECTOR
;

846 
r
 = 
ERR
;

848 
	`u∆ock
();

849 (
r
);

850 
	}
}

856 
PRIVATE
 
	$w_waôf‹
(
mask
, 
vÆue
)

857 
mask
;

858 
vÆue
;

862 
mûli_°©e
 
ms
;

864 
	`mûli_°¨t
(&
ms
);

866 i‡((
	`ö_byã
(
w_wn
->
ba£
 + 
REG_STATUS
Ë& 
mask
Ë=
vÆue
)  1;

867 } 
	`mûli_ñ≠£d
(&
ms
Ë< 
TIMEOUT
);

869 
	`w_√ed_ª£t
();

871 
	}
}

877 
PRIVATE
 
	$w_h™dÀr
(
úq
)

878 
úq
;

882 
w_°©us
 = 
	`ö_byã
(
w_wn
->
ba£
 + 
REG_STATUS
);

883 
	`öãºu±
(
WINCHESTER
);

885 
	}
}

891 
PRIVATE
 
	$w_geomëry
(
íåy
)

892 
∑πôi⁄
 *
íåy
;

894 
íåy
->
cylödîs
 = 
w_wn
->
lcylödîs
;

895 
íåy
->
hóds
 = 
w_wn
->
lhóds
;

896 
íåy
->
£˘‹s
 = 
w_wn
->
l£˘‹s
;

897 
	}
}

	@atan.c

9 
	~<Êﬂt.h
>

10 
	~<m©h.h
>

11 
	~<î∫o.h
>

12 
	~"loˇlm©h.h
"

15 
	$©™
(
x
)

22 
p
[] = {

28 
q
[] = {

35 
a
[] = {

38 
M_PI_2
,

42 
√g
 = 
x
 < 0;

43 
n
;

44 
g
;

46 i‡(
	`__IsN™
(
x
)) {

47 
î∫o
 = 
EDOM
;

48  
x
;

50 i‡(
√g
) {

51 
x
 = -x;

53 i‡(
x
 > 1.0) {

54 
x
 = 1.0/x;

55 
n
 = 2;

57 
n
 = 0;

59 i‡(
x
 > 0.26794919243112270647) {

60 
n
 =Ç + 1;

61 
x
 = (((0.73205080756887729353*x-0.5)-0.5)+x)/

62 (1.73205080756887729353+
x
);

67 
g
 = 
x
 * x;

68 
x
 +x * 
g
 * 
	`POLYNOM3
(g, 
p
Ë/ 
	`POLYNOM4
(g, 
q
);

69 i‡(
n
 > 1Ë
x
 = -x;

70 
x
 +
a
[
n
];

71  
√g
 ? -
x
 : x;

72 
	}
}

	@atan2.c

9 
	~<m©h.h
>

10 
	~<î∫o.h
>

11 
	~"loˇlm©h.h
"

14 
	$©™2
(
y
, 
x
)

16 
absx
, 
absy
, 
vÆ
;

18 i‡(
x
 =0 && 
y
 == 0) {

19 
î∫o
 = 
EDOM
;

22 
absy
 = 
y
 < 0 ? -y : y;

23 
absx
 = 
x
 < 0 ? -x : x;

24 i‡(
absy
 - 
absx
 ==ábsy) {

26  
y
 < 0 ? -
M_PI_2
 : M_PI_2;

28 i‡(
absx
 - 
absy
 ==ábsx) {

30 
vÆ
 = 0.0;

32 
vÆ
 = 
	`©™
(
y
/
x
);

33 i‡(
x
 > 0) {

35  
vÆ
;

37 i‡(
y
 < 0) {

39  
vÆ
 - 
M_PI
;

41  
vÆ
 + 
M_PI
;

42 
	}
}

	@atexit.c

3 
	~<°dlib.h
>

5 
	#NEXITS
 32

	)

7 (*
__fun˘ab
[
NEXITS
])();

8 
__func˙t
;

11 
	`©exô
((*
func
)())

13 i‡(
__func˙t
 >
NEXITS
)

15 
__fun˘ab
[
__func˙t
++] = 
func
;

17 
	}
}

	@atof.c

7 
	~<°dlib.h
>

8 
	~<î∫o.h
>

11 
	$©of
(c⁄° *
≈å
)

13 
d
;

14 
e
 = 
î∫o
;

16 
d
 = 
	`°πod
(
≈å
, (**Ë
NULL
);

17 
î∫o
 = 
e
;

18  
d
;

19 
	}
}

	@atoi.c

7 
	~<˘y≥.h
>

8 
	~<°dlib.h
>

14 
	$©oi
(c⁄° *
≈å
)

16 
tŸÆ
 = 0;

17 
möus
 = 0;

19 
	`is•a˚
(*
≈å
))Çptr++;

20 i‡(*
≈å
 == '+')Çptr++;

21 i‡(*
≈å
 == '-') {

22 
möus
 = 1;

23 
≈å
++;

25 
	`isdigô
(*
≈å
)) {

26 
tŸÆ
 *= 10;

27 
tŸÆ
 +(*
≈å
++ - '0');

29  
möus
 ? -
tŸÆ
 :Åotal;

30 
	}
}

	@atol.c

7 
	~<˘y≥.h
>

8 
	~<°dlib.h
>

14 
	$©ﬁ
(c⁄° *
≈å
)

16 
tŸÆ
 = 0;

17 
möus
 = 0;

19 
	`is•a˚
(*
≈å
))Çptr++;

20 i‡(*
≈å
 == '+')Çptr++;

21 i‡(*
≈å
 == '-') {

22 
möus
 = 1;

23 
≈å
++;

25 
	`isdigô
(*
≈å
)) {

26 
tŸÆ
 *= 10;

27 
tŸÆ
 +(*
≈å
++ - '0');

29  
möus
 ? -
tŸÆ
 :Åotal;

30 
	}
}

	@bcmp.c

1 
	~<lib.h
>

4 
	~<°rög.h
>

6 
	$bcmp
(
s1
, 
s2
, 
Àngth
)

7 
_CONST
 *
s1
;

8 
_CONST
 *
s2
;

9 
size_t
 
Àngth
;

11 (
	`memcmp
(
s1
, 
s2
, 
Àngth
));

12 
	}
}

	@bcopy.c

1 
	~<lib.h
>

4 
	~<°rög.h
>

6 
	$bc›y
(
§c
, 
d°
, 
Àngth
)

7 
_CONST
 *
§c
;

8 *
d°
;

9 
size_t
 
Àngth
;

11 (Ë
	`mem˝y
(
d°
, 
§c
, 
Àngth
);

12 
	}
}

	@beep.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

3 
	~<ãrmˇp.h
>

5 *
bl
, *
vb
;

8 
	$bìp
()

10 i‡(
bl
)

11 
	`çuts
(
bl
, 1, 
outc
);

12 i‡(
vb
)

13 
	`çuts
(
vb
, 1, 
outc
);

14 
	}
}

	@bios_wini.c

22 
	~"kî√l.h
"

23 
	~"drivî.h
"

24 
	~"drvlib.h
"

26 #i‡
ENABLE_BIOS_WINI


29 
	#USE_BUF
 (
DMA_BUF_SIZE
 > 
BLOCK_SIZE
)

	)

32 
	#ERR
 (-1Ë

	)

35 
	#MAX_DRIVES
 4

	)

36 
	#MAX_SECS
 255

	)

37 
	#NR_DEVICES
 (
MAX_DRIVES
 * 
DEV_PER_DRIVE
)

	)

38 
	#SUB_PER_DRIVE
 (
NR_PARTITIONS
 * NR_PARTITIONS)

	)

39 
	#NR_SUBDEVS
 (
MAX_DRIVES
 * 
SUB_PER_DRIVE
)

	)

42 
	#BIOS_ASK
 0x08

	)

43 
	#BIOS_RESET
 0x00

	)

44 
	#BIOS_READ
 0x02

	)

45 
	#BIOS_WRITE
 0x03

	)

46 
	#HD_CODE
 0x80

	)

49 
PRIVATE
 
	swöi
 {

50 
	mcylödîs
;

51 
	mhóds
;

52 
	m£˘‹s
;

53 
	m›í_˘
;

54 
devi˚
 
	m∑π
[
DEV_PER_DRIVE
];

55 
devi˚
 
	msub∑π
[
SUB_PER_DRIVE
];

56 } 
	gwöi
[
MAX_DRIVES
], *
	gw_wn
;

58 
PRIVATE
 
	så™s
 {

59 
i‹eque°_s
 *
	mi›
;

60 
	mblock
;

61 
	mcou¡
;

62 
phys_byãs
 
	mphys
;

63 
phys_byãs
 
	mdma
;

64 } 
	gwå™s
[
NR_IOREQS
];

66 
PRIVATE
 
	gƒ_drives
 = 
MAX_DRIVES
;

67 
PRIVATE
 
å™s
 *
	gw_ç
;

68 
PRIVATE
 
	gw_cou¡
;

69 
PRIVATE
 
	gw_√xtblock
;

70 
PRIVATE
 
	gw_›code
;

71 
PRIVATE
 
	gw_drive
;

72 
PRIVATE
 
devi˚
 *
	gw_dv
;

73 
Ax
, 
Bx
, 
Cx
, 
Dx
, 
Es
;

75 
FORWARD
 
_PROTOTYPE
–
devi˚
 *
w_¥ï¨e
, (device) );

76 
FORWARD
 
_PROTOTYPE
–*
w_«me
, () );

77 
FORWARD
 
_PROTOTYPE
–
w_scheduÀ
, (
¥oc_ƒ
, 
i‹eque°_s
 *
i›
) );

78 
FORWARD
 
_PROTOTYPE
–
w_föish
, () );

79 
FORWARD
 
_PROTOTYPE
–
w_do_›í
, (
drivî
 *
dp
, 
mesßge
 *
m_±r
) );

80 
FORWARD
 
_PROTOTYPE
–
w_do_˛o£
, (
drivî
 *
dp
, 
mesßge
 *
m_±r
) );

81 
FORWARD
 
_PROTOTYPE
–
w_öô
, () );

82 
FORWARD
 
_PROTOTYPE
–
íabÀ_ve˘‹s
, () );

83 
FORWARD
 
_PROTOTYPE
–
w_geomëry
, (
∑πôi⁄
 *
íåy
));

87 
PRIVATE
 
drivî
 
	gw_dèb
 = {

88 
w_«me
,

89 
w_do_›í
,

90 
w_do_˛o£
,

91 
do_dio˙é
,

92 
w_¥ï¨e
,

93 
w_scheduÀ
,

94 
w_föish
,

95 
n›_˛ónup
,

96 
w_geomëry


103 
PUBLIC
 
	$bios_wöche°î_èsk
()

105 
	`drivî_èsk
(&
w_dèb
);

106 
	}
}

112 
PRIVATE
 
devi˚
 *
	$w_¥ï¨e
(
devi˚
)

113 
devi˚
;

118 
w_cou¡
 = 0;

120 i‡(
devi˚
 < 
NR_DEVICES
) {

121 
w_drive
 = 
devi˚
 / 
DEV_PER_DRIVE
;

122 
w_wn
 = &
wöi
[
w_drive
];

123 
w_dv
 = &
w_wn
->
∑π
[
devi˚
 % 
DEV_PER_DRIVE
];

125 i‡((Ë(
devi˚
 -
MINOR_hd1a
Ë< 
NR_SUBDEVS
) {

126 
w_drive
 = 
devi˚
 / 
SUB_PER_DRIVE
;

127 
w_wn
 = &
wöi
[
w_drive
];

128 
w_dv
 = &
w_wn
->
sub∑π
[
devi˚
 % 
SUB_PER_DRIVE
];

130 (
NIL_DEV
);

132 (
w_drive
 < 
ƒ_drives
 ? 
w_dv
 : 
NIL_DEV
);

133 
	}
}

139 
PRIVATE
 *
	$w_«me
()

142 
«me
[] = "bios-hd5";

144 
«me
[7] = '0' + 
w_drive
 * 
DEV_PER_DRIVE
;

145  
«me
;

146 
	}
}

152 
PRIVATE
 
	$w_scheduÀ
(
¥oc_ƒ
, 
i›
)

153 
¥oc_ƒ
;

154 
i‹eque°_s
 *
i›
;

160 
r
, 
›code
;

161 
pos
;

162 
nbyãs
, 
cou¡
, 
dma_cou¡
;

163 
block
;

164 
phys_byãs
 
u£r_phys
, 
dma_phys
;

167 
nbyãs
 = 
i›
->
io_nbyãs
;

168 i‡((
nbyãs
 & 
SECTOR_MASK
Ë!0Ë(
i›
->
io_nbyãs
 = 
EINVAL
);

171 
pos
 = 
i›
->
io_posôi⁄
;

172 i‡((
pos
 & 
SECTOR_MASK
Ë!0Ë(
i›
->
io_nbyãs
 = 
EINVAL
);

175 
u£r_phys
 = 
	`num≠
(
¥oc_ƒ
, (
vú_byãs
Ë
i›
->
io_buf
, 
nbyãs
);

176 i‡(
u£r_phys
 =0Ë(
i›
->
io_nbyãs
 = 
EINVAL
);

179 
›code
 = 
i›
->
io_ªque°
 & ~
OPTIONAL_IO
;

182 i‡(
pos
 >
w_dv
->
dv_size
Ë(
OK
);

183 i‡(
pos
 + 
nbyãs
 > 
w_dv
->
dv_size
)Çbytes = w_dv->dv_size -Öos;

184 
block
 = (
w_dv
->
dv_ba£
 + 
pos
Ë>> 
SECTOR_SHIFT
;

186 i‡(
USE_BUF
 && 
w_cou¡
 > 0 && 
block
 !
w_√xtblock
) {

188 i‡((
r
 = 
	`w_föish
()Ë!
OK
) (r);

192 i‡(
USE_BUF
Ë
w_√xtblock
 = 
block
 + (
nbyãs
 >> 
SECTOR_SHIFT
);

196 
cou¡
 = 
nbyãs
;

198 i‡(
USE_BUF
) {

199 i‡(
w_cou¡
 =
DMA_BUF_SIZE
) {

201 i‡((
r
 = 
	`w_föish
()Ë!
OK
) (r);

204 i‡(
w_cou¡
 + 
cou¡
 > 
DMA_BUF_SIZE
)

205 
cou¡
 = 
DMA_BUF_SIZE
 - 
w_cou¡
;

207 i‡(
w_ç
 =
wå™s
 + 
NR_IOREQS
) {

209 i‡((
r
 = 
	`w_föish
()Ë!
OK
) (r);

213 i‡(
w_cou¡
 == 0) {

215 
w_›code
 = 
›code
;

216 
w_ç
 = 
wå™s
;

219 i‡(
USE_BUF
) {

220 
dma_phys
 = 
tmp_phys
 + 
w_cou¡
;

223 
dma_phys
 = 
u£r_phys
;

224 
dma_cou¡
 = 
	`dma_byãs_À·
(
dma_phys
);

226 i‡(
dma_phys
 >= (1L << 20)) {

228 
cou¡
 = 
SECTOR_SIZE
;

229 
dma_phys
 = 
tmp_phys
;

231 i‡(
dma_cou¡
 < 
cou¡
) {

233 i‡(
dma_cou¡
 >
SECTOR_SIZE
) {

237 
cou¡
 = 
dma_cou¡
 & ~
SECTOR_MASK
;

240 
cou¡
 = 
SECTOR_SIZE
;

241 
dma_phys
 = 
tmp_phys
;

247 
w_ç
->
i›
 = iop;

248 
w_ç
->
block
 = block;

249 
w_ç
->
cou¡
 = count;

250 
w_ç
->
phys
 = 
u£r_phys
;

251 
w_ç
->
dma
 = 
dma_phys
;

254 
w_ç
++;

255 
w_cou¡
 +
cou¡
;

256 
block
 +
cou¡
 >> 
SECTOR_SHIFT
;

257 
u£r_phys
 +
cou¡
;

258 
nbyãs
 -
cou¡
;

259 } 
nbyãs
 > 0);

261 (
OK
);

262 
	}
}

268 
PRIVATE
 
	$w_föish
()

272 
å™s
 *
ç
 = 
wå™s
, *
ç2
;

273 
cou¡
, 
cylödî
, 
£˘‹
, 
hód
, 
hicyl
, 
locyl
;

274 
£c•cyl
 = 
w_wn
->
hóds
 * w_wn->
£˘‹s
;

275 
m™y
 = 
USE_BUF
;

277 i‡(
w_cou¡
 =0Ë(
OK
);

280 i‡(
w_›code
 =
DEV_WRITE
) {

281 
ç2
 = 
ç
;

282 
cou¡
 = 0;

284 i‡(
USE_BUF
 || 
ç2
->
dma
 =
tmp_phys
) {

285 
	`phys_c›y
(
ç2
->
phys
,Åp2->
dma
,

286 (
phys_byãs
Ë
ç2
->
cou¡
);

288 
cou¡
 +
ç2
->count;

289 
ç2
++;

290 } 
m™y
 && 
cou¡
 < 
w_cou¡
);

292 
cou¡
 = 
m™y
 ? 
w_cou¡
 : 
ç
->count;

296 
cylödî
 = 
ç
->
block
 / 
£c•cyl
;

297 
£˘‹
 = (
ç
->
block
 % 
w_wn
->
£˘‹s
) + 1;

298 
hód
 = (
ç
->
block
 % 
£c•cyl
Ë/ 
w_wn
->
£˘‹s
;

300 
Ax
 = 
w_›code
 =
DEV_WRITE
 ? 
BIOS_WRITE
 : 
BIOS_READ
;

301 
Ax
 = (Ax << 8Ë| (
cou¡
 >> 
SECTOR_SHIFT
);

302 
Bx
 = (Ë
ç
->
dma
 % 
HCLICK_SIZE
;

303 
Es
 = 
	`physb_to_h˛ick
(
ç
->
dma
);

304 
hicyl
 = (
cylödî
 & 0x300) >> 8;

305 
locyl
 = (
cylödî
 & 0xFF);

306 
Cx
 = 
£˘‹
 | (
hicyl
 << 6Ë| (
locyl
 << 8);

307 
Dx
 = (
HD_CODE
 + 
w_drive
Ë| (
hód
 << 8);

308 
	`Àvñ0
(
bios13
);

309 i‡((
Ax
 & 0xFF00) != 0) {

311 i‡(!
m™y
Ë(
ç
->
i›
->
io_nbyãs
 = 
EIO
);

312 
m™y
 = 0;

316 
w_cou¡
 -
cou¡
;

319 i‡(
w_›code
 =
DEV_READ
) {

320 i‡(
USE_BUF
 || 
ç
->
dma
 =
tmp_phys
) {

321 
	`phys_c›y
(
ç
->
dma
,Åp->
phys
,

322 (
phys_byãs
Ë
ç
->
cou¡
);

325 
ç
->
i›
->
io_nbyãs
 -ç->
cou¡
;

326 
cou¡
 -
ç
->count;

327 
ç
++;

328 } 
cou¡
 > 0);

329 } 
w_cou¡
 > 0);

331 (
OK
);

332 
	}
}

338 
PRIVATE
 
	$w_do_›í
(
dp
, 
m_±r
)

339 
drivî
 *
dp
;

340 
mesßge
 *
m_±r
;

344 
öô_d⁄e
 = 
FALSE
;

346 i‡(!
öô_d⁄e
Ë{ 
	`w_öô
(); inô_d⁄ê
TRUE
; }

348 i‡(
	`w_¥ï¨e
(
m_±r
->
DEVICE
Ë=
NIL_DEV
Ë(
ENXIO
);

350 i‡(
w_wn
->
›í_˘
++ == 0) {

352 
	`∑πôi⁄
(&
w_dèb
, 
w_drive
 * 
DEV_PER_DRIVE
, 
P_PRIMARY
);

354 (
OK
);

355 
	}
}

361 
PRIVATE
 
	$w_do_˛o£
(
dp
, 
m_±r
)

362 
drivî
 *
dp
;

363 
mesßge
 *
m_±r
;

367 i‡(
	`w_¥ï¨e
(
m_±r
->
DEVICE
Ë=
NIL_DEV
Ë(
ENXIO
);

368 
w_wn
->
›í_˘
--;

369 (
OK
);

370 
	}
}

376 
PRIVATE
 
	$w_öô
()

380 
drive
;

381 
wöi
 *
wn
;

384 
	`íabÀ_ve˘‹s
();

387 
drive
 = 0; drivê< 
ƒ_drives
; drive++) {

388 (Ë
	`w_¥ï¨e
(
drive
 * 
DEV_PER_DRIVE
);

389 
wn
 = 
w_wn
;

390 
Dx
 = 
drive
 + 
HD_CODE
;

391 
Ax
 = (
BIOS_ASK
 << 8);

392 
	`Àvñ0
(
bios13
);

393 
ƒ_drives
 = (
Ax
 & 0xFF00Ë=0 ? (
Dx
 & 0xFFË: 
drive
;

394 i‡(
ƒ_drives
 > 
MAX_DRIVES
)Çr_drives = MAX_DRIVES;

395 i‡(
drive
 >
ƒ_drives
) ;

397 
wn
->
hóds
 = (
Dx
 >> 8) + 1;

398 
wn
->
£˘‹s
 = (
Cx
 & 0x3F);

399 
wn
->
cylödîs
 = ((
Cx
 << 2) & 0x0300) + ((Cx >> 8) & 0x00FF) + 1;

401 
wn
->
∑π
[0].
dv_size
 = ((Ëwn->
cylödîs


402 * 
wn
->
hóds
 * wn->
£˘‹s
Ë<< 
SECTOR_SHIFT
;

404 
	`¥ötf
("%s: %d cylinders, %d heads, %d sectorsÖerÅrack\n",

405 
	`w_«me
(), 
wn
->
cylödîs
, wn->
hóds
, wn->
£˘‹s
);

407 
	}
}

413 
PRIVATE
 
	$íabÀ_ve˘‹s
()

424 
vec
, 
úq
;

425 
u8_t
 
˛ock_h™dÀr
[] = {

432 
u16_t
 
ve˘‹
[2];

434 i‡(!
¥Ÿe˘ed_mode
) ;

436 
úq
 = 0; irq < 
NR_IRQ_VECTORS
; irq++) {

437 
	`phys_c›y
(
	`BIOS_VECTOR
(
úq
)*4L, 
	`VECTOR
(irq)*4L, 4L);

446 
ve˘‹
[0] = 
	`vú2phys
(
˛ock_h™dÀr
Ë% 
HCLICK_SIZE
;

447 
ve˘‹
[1] = 
	`vú2phys
(
˛ock_h™dÀr
Ë/ 
HCLICK_SIZE
;

448 
	`phys_c›y
(
	`vú2phys
(
ve˘‹
), 
	`VECTOR
(
CLOCK_IRQ
)*4L, 4L);

451 
ve˘‹
[0] = 
	`vú2phys
(&
lo°_ticks
Ë% 
HCLICK_SIZE
;

452 
ve˘‹
[1] = 
	`vú2phys
(&
lo°_ticks
Ë/ 
HCLICK_SIZE
;

453 
	`mem˝y
(
˛ock_h™dÀr
 + 0x1D, 
ve˘‹
, 4);

455 i‡(
ps_mˇ
Ë
˛ock_h™dÀr
[6]= 0;

456 
	}
}

462 
PRIVATE
 
	$w_geomëry
(
íåy
)

463 
∑πôi⁄
 *
íåy
;

465 
íåy
->
cylödîs
 = 
w_wn
->cylinders;

466 
íåy
->
hóds
 = 
w_wn
->heads;

467 
íåy
->
£˘‹s
 = 
w_wn
->sectors;

468 
	}
}

	@boot.c

11 
	gvîsi⁄
[]= "2.5";

13 
	#nû
 0

	)

14 
	#_POSIX_SOURCE
 1

	)

15 
	#_MINIX
 1

	)

16 
	~<°ddef.h
>

17 
	~<sys/ty≥s.h
>

18 
	~<sys/°©.h
>

19 
	~<°dlib.h
>

20 
	~<limôs.h
>

21 
	~<°rög.h
>

22 
	~<î∫o.h
>

23 
	~<a.out.h
>

24 
	~<möix/c⁄fig.h
>

25 
	~<möix/c⁄°.h
>

26 
	~<möix/ty≥.h
>

27 
	~<möix/mölib.h
>

28 
	~<kî√l/c⁄°.h
>

29 
	~<kî√l/ty≥.h
>

30 
	~<ibm/∑πôi⁄.h
>

31 
	~"øwfs.h
"

32 #unde‡
EXTERN


33 
	#EXTERN


	)

34 
	~"boŸ.h
"

36 
	#¨øysize
(
a
Ë(◊Ë/ (◊)[0]))

	)

37 
	#¨øylimô
(
a
Ë(◊Ë+ 
	`¨øysize
◊))

	)

38 
	#bëwìn
(
a
, 
c
, 
z
Ë((Ë((cË- (a)Ë<((zË- (a)))

	)

40 
¥ötk
(*
fmt
, ...);

41 
	#¥ötf
 
¥ötk


	)

43 *
	$bios_îr
(
îr
)

49 
	sîæi°
 {

50 
îr
;

51 *
wh©
;

52 } 
îæi°
[] = {

53 #i‡!
DOS


91 
îæi°
 *
îΩ
;

93 
îΩ

îæi°
;Éº∞< 
	`¨øylimô
(errlist);Érrp++) {

94 i‡(
îΩ
->
îr
 =îrËÉºp->
wh©
;

97 
	}
}

99 *
	$unix_îr
(
îr
)

102 
îr
) {

103 
ENOENT
:  "No such file or directory";

104 
ENOTDIR
:  "Notá directory";

107 
	}
}

109 
	$rwîr
(*
rw
, 
off_t
 
£c
, 
îr
)

111 
	`¥ötf
("\n%sÉrror 0x%02x (%s)át sector %ldábsolute\n",

112 
rw
, 
îr
, 
	`bios_îr
”º), 
£c
);

113 
	}
}

115 
	$ªadîr
(
off_t
 
£c
, 
îr
Ë{ 
	`rwîr
("Ród", sec,Éº); 
	}
}

116 
	$wrôîr
(
off_t
 
£c
, 
îr
Ë{ 
	`rwîr
("Wrôe", sec,Éº); 
	}
}

120 
	#CACHE_SIZE
 32

	)

122 
	sˇche_íåy
 {

123 
u32_t
 
	mblock
;

124 
u32_t
 
	maddr
;

125 } 
	gˇche
[
CACHE_SIZE
];

127 #i‡!
DOS


128 
	gˇche_live
= 0;

130 
	$öô_ˇche
()

133 
ˇche_íåy
 *
pc
;

134 
u32_t
 
addr

FREEPOS
;

136 
pc

ˇche
;Ö¯< 
	`¨øylimô
(cache);Öc++) {

137 
pc
->
block
= -1;

138 
pc
->
addr
=áddr;

139 
addr
+
BLOCK_SIZE
;

142 
ˇche_live
= 1;

143 
	}
}

145 
	$övÆid©e_ˇche
()

148 
ˇche_live
= 0;

149 
	}
}

153 
	#ˇche_live
 0

	)

154 
	$öô_ˇche
(Ë{
	}
}

155 
	$övÆid©e_ˇche
(Ë{
	}
}

158 
	$ªadblock
(
off_t
 
blk
, *
buf
)

161 
r
= 0;

162 
u32_t
 
£c

low£c
 + 
blk
 * 
RATIO
;

164 i‡(!
ˇche_live
) {

166 
r

	`ªad£˘‹s
(
	`m⁄2abs
(
buf
), 
£c
, 1 * 
RATIO
);

171 
ˇche_íåy
 *
pc
, 
lifo
, 
tmp
;

173 
pc

ˇche
;Ö¯< 
	`¨øylimô
(cache);Öc++) {

174 
tmp
*
pc
;

175 *
pc

lifo
;

176 
lifo

tmp
;

177 i‡(
lifo
.
block
 =
blk
) ;

179 
ˇche
[0]
lifo
;

181 i‡(
ˇche
[0].
block
 !
blk
) {

182 
r

	`ªad£˘‹s
(
ˇche
[0].
addr
, 
£c
, 1 * 
RATIO
);

183 
ˇche
[0].
block

blk
;

185 
	`øw_c›y
(
	`m⁄2abs
(
buf
), 
ˇche
[0].
addr
, 
BLOCK_SIZE
);

187 i‡(
r
 !0Ë{ 
	`ªadîr
(
£c
,Ñ); 
	`exô
(1); }

188 
	}
}

190 *
	$ªadlöe
()

193 *
löe
;

194 
size_t
 
i
, 
z
;

195 
c
;

197 
i
= 0;

198 
z
= 20;

199 
löe

	`mÆloc
(
z
 * ());

202 
c

	`gëch¨
();

204 i‡(
	`°rchr
("\b\177\25\30", 
c
Ë!
nû
) {

207 i‡(
i
 == 0) ;

208 
	`¥ötf
("\b \b");

209 
i
--;

210 } 
c
 == '\25' || c == '\30');

212 i‡(
c
 < ' ' && c != '\n') {

213 
	`putch¨
('\7');

215 
	`putch¨
(
c
);

216 
löe
[
i
++]
c
;

217 i‡(
i
 =
z
) {

218 
z
*= 2;

219 
löe

	`ªÆloc
÷öe, 
z
 * ());

222 } 
c
 != '\n');

223 
löe
[
i
]= 0;

224  
löe
;

225 
	}
}

227 
	$sug¨
(*
tok
)

230  
	`°rchr
("=(){};\n", 
tok
[0]Ë!
nû
;

231 
	}
}

233 *
	$⁄ëokí
(**
Æöe
, 
¨g
)

238 *
löe
*
Æöe
;

239 
size_t
 
n
;

240 *
tok
;

243 *
löe
 == ' ' || (*line == '\n' &&Üine[1] == '\n'))Üine++;

245 *
Æöe

löe
;

248 i‡((Ë*
löe
 < ' ' && *löê!'\n'Ë 
nû
;

250 i‡(
¨g
) {

252 
dïth
= 0;

254 (Ë*
löe
 >= ' ') {

255 i‡(*
löe
 ='('Ë
dïth
++;

256 i‡(*
löe
 =')' && --
dïth
 < 0) ;

257 
löe
++;

259 
löe
 > *
Æöe
 &&Üine[-1] == ' ')Üine--;

261 i‡(
	`sug¨
(
löe
)) {

263 
löe
++;

266 dÿ
löe
++; (Ë*löê> ' ' && !
	`sug¨
(line));

268 
n

löe
 - *
Æöe
;

269 
tok

	`mÆloc
((
n
 + 1) * ());

270 
	`mem˝y
(
tok
, *
Æöe
, 
n
);

271 
tok
[
n
]= 0;

272 i‡(
tok
[0] == '\n')Åok[0]= ';';

274 *
Æöe

löe
;

275  
tok
;

276 
	}
}

280 
	stokí
 {

281 
tokí
 *
	m√xt
;

282 *
	mtokí
;

283 } 
	ttokí
;

285 
tokí
 **
	$tokíize
(
tokí
 **
acmds
, *
löe
, *
fundef
)

294 
fd
*
fundef
;

295 *
tok
;

296 
tokí
 *
√wcmd
;

297 
funsug¨
[]= { '(', 0, ')', '{', '}' };

299 (
tok

	`⁄ëokí
(&
löe
, 
fd
 =1)Ë!
nû
) {

300 i‡(
fd
 == 1) {

301 
fd
++;

303 i‡(
funsug¨
[
fd
] =
tok
[0]) {

305 
fd

tok
[0] == '}' ? 0 : fd + 1;

307 i‡(
fd
 != 0) {

308 i‡(
tok
[0] =';' && 
fd
 == 3) {

310 
	`‰ì
(
tok
);

314 i‡(
fd
 != 4) fd= 0;

316 
√wcmd

	`mÆloc
((*newcmd));

317 
√wcmd
->
tokí

tok
;

318 
√wcmd
->
√xt
*
acmds
;

319 *
acmds

√wcmd
;

320 
acmds
&
√wcmd
->
√xt
;

322 *
fundef

fd
;

323  
acmds
;

324 
	}
}

326 
tokí
 *
	gcmds
;

327 
	gîr
;

329 *
	$p›tokí
()

332 
tokí
 *
cmd

cmds
;

333 *
tok

cmd
->
tokí
;

335 
cmds

cmd
->
√xt
;

336 
	`‰ì
(
cmd
);

338  
tok
;

339 
	}
}

341 
	$voidtokí
()

344 
	`‰ì
(
	`p›tokí
());

345 
	}
}

347 
	$öãºu±
()

350 
	`¥ötf
("[ESC]\n");

351 
	`≥ekch¨
(Ë=
ESC
Ë(Ë
	`gëch¨
();

352 
îr
= 1;

353 
	}
}

355 
	ga˘iv©e
;

357 
	sbiosdev
 {

358 
	m«me
[6];

359 
	mdevi˚
, 
	m¥im¨y
, 
	m£c⁄d¨y
;

360 } 
	gboŸdev
, 
	gtmpdev
;

362 
∑π_íåy
 
	gboŸ_∑π
;

363 
	gdsk∑rs
[
DSKPARSIZE
]=

366 
	$migøã
()

371 
u32_t
 
ﬁdaddr

ˇddr
;

372 
u32_t
 
memsize

	`gë_memsize
() * 1024L;

373 
u32_t
 
√waddr

memsize
 - 
runsize
;

374 #i‡!
DOS


375 
u32_t
 
dma64k
(
memsize
 - 1) & ~0xFFFFL;

376 
ve˘‹
 
dskba£
;

379 i‡(
√waddr
 + (
daddr
 - 
ˇddr
Ë< 
dma64k
Ë√waddrdma64k - 
runsize
;

382 i‡(
devi˚
 < 0x80) {

384 
	`øw_c›y
(
	`m⁄2abs
(&
dskba£
), 
DSKBASE
 * (
ve˘‹
),

385 (
ve˘‹
));

386 
	`øw_c›y
(
	`m⁄2abs
(
dsk∑rs
), 
	`vec2abs
(&
dskba£
),

387 
DSKPARSIZE
);

390 
	`øw_c›y
(
	`m⁄2abs
(&
boŸ_∑π
), 
	`vec2abs
(&
ªm_∑π
),

391 (
boŸ_∑π
));

396 
ˇddr

√waddr
;

399 
	`øw_c›y
(
√waddr
, 
ﬁdaddr
, 
runsize
);

401 
	`ªloˇã
();

403 #i‡!
DOS


407 (Ë
	`dev_geomëry
();

409 
	}
}

411 
	$gë_ma°î
(*
ma°î
, 
∑π_íåy
 **
èbÀ
, 
u32_t
 
pos
)

414 
r
, 
n
;

415 
∑π_íåy
 *
≥
, **
±
;

417 i‡((
r

	`ªad£˘‹s
(
	`m⁄2abs
(
ma°î
), 
pos
, 1)) != 0) Ñ;

419 
≥
(
∑π_íåy
 *Ë(
ma°î
 + 
PART_TABLE_OFF
);

420 
±

èbÀ
;Öà<ÅabÀ + 
NR_PARTITIONS
;Öt++Ë*±
≥
++;

423 i‡(
pos
 != 0)  0;

425 
n

NR_PARTITIONS
;

427 
±

èbÀ
;Öà<ÅabÀ + 
NR_PARTITIONS
-1;Öt++) {

428 i‡(
±
[0]->
sysöd
 =
NO_PART


429 || (
±
[0]->
low£c
 >Öt[1]->lowsec

430 && 
±
[1]->
sysöd
 !
NO_PART
)) {

431 
≥

±
[0];Öt[0]=Öt[1];Öt[1]=Öe;

434 } --
n
 > 0);

436 
	}
}

438 
	$öôülize
()

440 
ma°î
[
SECTOR_SIZE
];

441 
∑π_íåy
 *
èbÀ
[
NR_PARTITIONS
];

442 
r
, 
p
;

443 
u32_t
 
ma°îpos
;

444 
sub
[]= "a";

446 #i‡!
DOS


448 
boŸdev
.
«me
[0]= 0;

449 
boŸdev
.
devi˚
= device;

450 
boŸdev
.
¥im¨y
= -1;

451 
boŸdev
.
£c⁄d¨y
= -1;

453 i‡(
devi˚
 < 0x80) {

455 
	`°r˝y
(
boŸdev
.
«me
, "fd");

456 
	`°rˇt
(
boŸdev
.
«me
, 
	`u2a
(boŸdev.
devi˚
));

466 
low£c

boŸ_∑π
.lowsec;

468 
ma°îpos
= 0;

472 i‡((
r

	`gë_ma°î
(
ma°î
, 
èbÀ
, 
ma°îpos
)) != 0) {

473 
	`ªadîr
(
ma°îpos
, 
r
); 
	`exô
(1);

477 
p
0;Ö < 
NR_PARTITIONS
;Ö++) {

478 i‡(
low£c
 - 
èbÀ
[
p
]->low£¯<ÅabÀ[p]->
size
) ;

481 i‡(
low£c
 =
èbÀ
[
p
]->lowsec) {

482 i‡(
boŸdev
.
¥im¨y
 < 0)

483 
boŸdev
.
¥im¨y

p
;

485 
boŸdev
.
£c⁄d¨y

p
;

489 i‡(
p
 =
NR_PARTITIONS
 || 
boŸdev
.
¥im¨y
 >= 0) {

493 
boŸdev
.
devi˚
= -1;

498 
boŸdev
.
¥im¨y

p
;

499 
ma°îpos

èbÀ
[
p
]->
low£c
;

501 
	`°r˝y
(
boŸdev
.
«me
, "hd");

502 
	`°rˇt
(
boŸdev
.
«me
, 
	`u2a
((
devi˚
 - 0x80Ë* (1 + 
NR_PARTITIONS
)

503 + 1 + 
boŸdev
.
¥im¨y
));

504 
sub
[0]'a' + 
boŸdev
.
£c⁄d¨y
;

505 i‡(
boŸdev
.
£c⁄d¨y
 >0Ë
	`°rˇt
(boŸdev.
«me
, 
sub
);

511 *
¨gp
, *
vdisk
;

514 
¨gp

PSP
 + 0x81;

515 
¨gp
[
PSP
[0x80]]= 0;

516 
	`bëwìn
('\1', *
¨gp
, ' '))árgp++;

517 
vdisk

¨gp
;

518 !
	`bëwìn
('\0', *
¨gp
, ' '))árgp++;

519 
	`bëwìn
('\1', *
¨gp
, ' ')) *argp++= 0;

520 i‡(*
¨gp
 !0 || *
vdisk
 == 0) {

521 
	`¥ötf
("\nUsage: boot <vdisk>\n");

522 
	`exô
(1);

525 i‡((
r

	`dos_›í
(
vdisk
)) != 0) {

526 
	`¥ötf
("\n%s: Eº‹ %02x (%s)\n", 
vdisk
, 
r
, 
	`bios_îr
(r));

527 
	`exô
(1);

531 i‡((
r

	`gë_ma°î
(
ma°î
, 
èbÀ
, 0)) != 0) {

532 
	`ªadîr
(0, 
r
); 
	`exô
(1);

535 
	`°r˝y
(
boŸdev
.
«me
, "dosd0");

536 
boŸdev
.
¥im¨y
= -1;

537 
p
0;Ö < 
NR_PARTITIONS
;Ö++) {

538 i‡(
èbÀ
[
p
]->
boŸöd
 !0 &&ÅabÀ[p]->
sysöd
 =
MINIX_PART
) {

539 
boŸdev
.
¥im¨y

p
;

540 
boŸdev
.
«me
[4]'1' + 
p
;

541 
low£c

èbÀ
[
p
]->lowsec;

546 
	}
}

548 
	gnuŒ
[]= "";

550 
	$s‰ì
(*
s
)

553 i‡(
s
 !
nû
 && s !
nuŒ
Ë
	`‰ì
(s);

554 
	}
}

556 *
	$c›y°r
(*
s
)

559 *
c
;

561 i‡(*
s
 =0Ë 
nuŒ
;

562 
c

	`mÆloc
((
	`°æí
(
s
) + 1) * ());

563 
	`°r˝y
(
c
, 
s
);

564  
c
;

565 
	}
}

567 
	$is_deÁu…
(
ívú⁄mít
 *
e
)

569  (
e
->
Êags
 & 
E_SPECIAL
Ë&&É->
defvÆ
 =
nû
;

570 
	}
}

572 
ívú⁄mít
 **
	$£¨chív
(*
«me
)

574 
ívú⁄mít
 **
´nv
&
ív
;

576 *
´nv
 !
nû
 && 
	`°rcmp
((*´nv)->
«me
,Çame) != 0) {

577 
´nv
&(*´nv)->
√xt
;

580  
´nv
;

581 
	}
}

583 
	#b_gëív
(
«me
Ë(*
	`£¨chív
“ame))

	)

586 *
	$b_vÆue
(*
«me
)

589 
ívú⁄mít
 *
e

	`b_gëív
(
«me
);

591  
e
 =
nû
 || !”->
Êags
 & 
E_VAR
Ë?Çû :É->
vÆue
;

592 
	}
}

594 *
	$b_body
(*
«me
)

597 
ívú⁄mít
 *
e

	`b_gëív
(
«me
);

599  
e
 =
nû
 || !”->
Êags
 & 
E_FUNCTION
Ë?Çû :É->
vÆue
;

600 
	}
}

602 
	$b_£ãnv
(
Êags
, *
«me
, *
¨g
, *
vÆue
)

607 
ívú⁄mít
 **
´nv
, *
e
;

609 i‡(*(
´nv

	`£¨chív
(
«me
)Ë=
nû
) {

610 
e

	`mÆloc
((*e));

611 
e
->
«me

	`c›y°r
(name);

612 
e
->
Êags
= flags;

613 
e
->
defvÆ

nû
;

614 
e
->
√xt

nû
;

615 *
´nv

e
;

617 
e
*
´nv
;

622 i‡(
e
->
Êags
 & 
E_RESERVED
 || (e->Êag†& 
E_SPECIAL


623 && (
e
->
Êags
 & 
E_FUNCTION
) != (flags & E_FUNCTION)

624 )Ë 
e
->
Êags
;

626 
e
->
Êags
”->Êag†& 
E_STICKY
) | flags;

627 i‡(
	`is_deÁu…
(
e
)) {

628 
e
->
defvÆ
e->
vÆue
;

630 
	`s‰ì
(
e
->
vÆue
);

632 
	`s‰ì
(
e
->
¨g
);

634 
e
->
¨g

	`c›y°r
(arg);

635 
e
->
vÆue

	`c›y°r
(value);

637 
	}
}

639 
	$b_£tv¨
(
Êags
, *
«me
, *
vÆue
)

642  
	`b_£ãnv
(
Êags
, 
«me
, 
nuŒ
, 
vÆue
);

643 
	}
}

645 
	$b_un£t
(*
«me
)

650 
ívú⁄mít
 **
´nv
, *
e
;

652 i‡((
e
*(
´nv

	`£¨chív
(
«me
))Ë=
nû
) ;

654 i‡(
e
->
Êags
 & 
E_SPECIAL
) {

655 i‡(
e
->
defvÆ
 !
nû
) {

656 
	`s‰ì
(
e
->
¨g
);

657 
e
->
¨g

nuŒ
;

658 
	`s‰ì
(
e
->
vÆue
);

659 
e
->
vÆue
e->
defvÆ
;

660 
e
->
defvÆ

nû
;

663 
	`s‰ì
(
e
->
«me
);

664 
	`s‰ì
(
e
->
¨g
);

665 
	`s‰ì
(
e
->
vÆue
);

666 *
´nv

e
->
√xt
;

667 
	`‰ì
(
e
);

669 
	}
}

671 
	$a2l
(*
a
)

674 
sign
= 1;

675 
n
= 0;

677 i‡(*
a
 ='-'Ë{ 
sign
= -1;á++; }

679 
	`bëwìn
('0', *
a
, '9')Ë
n
=Ç * 10 + (*a++ - '0');

681  
sign
 * 
n
;

682 
	}
}

684 *
	$ul2a
(
u32_t
 
n
)

687 
num
[3 * (
n
)];

688 *
a

	`¨øylimô
(
num
) - 1;

690 dÿ*--
a
 = (
n
 % 10) + '0'; (n/= 10) > 0);

691  
a
;

692 
	}
}

694 *
	$u2a
(
U16_t
 
n
)

697  
	`ul2a
(
n
);

698 
	}
}

700 
	$a2x
(*
a
)

703 
n
= 0;

704 
c
;

707 
c
*
a
;

708 i‡(
	`bëwìn
('0', 
c
, '9')) c= c - '0' + 0x0;

710 i‡(
	`bëwìn
('A', 
c
, 'F')) c= c - 'A' + 0xA;

712 i‡(
	`bëwìn
('a', 
c
, 'f')) c= c - 'a' + 0xa;

715 
n
“<<4Ë| 
c
;

716 
a
++;

718  
n
;

719 
	}
}

721 
	$gë_∑ømëîs
()

723 
∑øms
[
SECTOR_SIZE
 + 1];

724 
tokí
 **
acmds
;

725 
r
, 
fundef
= 0;

726 
bus_ty≥
[][4] = {

729 
vid_ty≥
[][4] = {

732 
vid_chrome
[][6] = {

737 
	`b_£tv¨
(
E_SPECIAL
|
E_VAR
|
E_DEV
, "rootdev", "ram");

738 
	`b_£tv¨
(
E_SPECIAL
|
E_VAR
|
E_DEV
, "ramimagedev", "bootdev");

739 
	`b_£tv¨
(
E_SPECIAL
|
E_VAR
, "ramsize", "0");

740 
	`b_£tv¨
(
E_SPECIAL
|
E_VAR
, "¥o˚ss‹", 
	`u2a
(
	`gë¥o˚ss‹
()));

741 
	`b_£tv¨
(
E_SPECIAL
|
E_VAR
, "bus", 
bus_ty≥
[
	`gë_bus
()]);

742 
	`b_£tv¨
(
E_SPECIAL
|
E_VAR
, "memsize", 
	`u2a
(
	`gë_memsize
()));

743 
	`b_£tv¨
(
E_SPECIAL
|
E_VAR
, "emssize", 
	`ul2a
(
	`gë_ext_memsize
()));

744 
	`b_£tv¨
(
E_SPECIAL
|
E_VAR
, "video", 
vid_ty≥
[
	`gë_video
()]);

745 
	`b_£tv¨
(
E_SPECIAL
|
E_VAR
, "chrome", 
vid_chrome
[
	`gë_video
() & 1]);

748 
	`b_£tv¨
(
E_SPECIAL
|
E_VAR
, "image", "minix");

749 
	`b_£tv¨
(
E_SPECIAL
|
E_FUNCTION
, "main", "menu");

752 
	`b_£ãnv
(
E_RESERVED
|
E_FUNCTION
, "\1", "=,Start Minix", "boot");

755 
	`b_£tv¨
(
E_RESERVED
, "boŸ", 
nuŒ
);

756 
	`b_£tv¨
(
E_RESERVED
, "míu", 
nuŒ
);

757 
	`b_£tv¨
(
E_RESERVED
, "£t", 
nuŒ
);

758 
	`b_£tv¨
(
E_RESERVED
, "un£t", 
nuŒ
);

759 
	`b_£tv¨
(
E_RESERVED
, "ßve", 
nuŒ
);

760 
	`b_£tv¨
(
E_RESERVED
, "ls", 
nuŒ
);

761 
	`b_£tv¨
(
E_RESERVED
, "echo", 
nuŒ
);

762 
	`b_£tv¨
(
E_RESERVED
, "å≠", 
nuŒ
);

763 
	`b_£tv¨
(
E_RESERVED
, "hñp", 
nuŒ
);

764 
	`b_£tv¨
(
E_RESERVED
, "exô", 
nuŒ
);

767 i‡((
r

	`ªad£˘‹s
(
	`m⁄2abs
(
∑øms
), 
low£c
+
PARAMSEC
, 1)) != 0) {

768 
	`ªadîr
(
low£c
+
PARAMSEC
, 
r
);

769 
	`exô
(1);

771 
∑øms
[
SECTOR_SIZE
]= 0;

772 
acmds

	`tokíize
(&
cmds
, 
∑øms
, &
fundef
);

775 (Ë
	`tokíize
(
acmds
, ":;maö", &
fundef
);

776 
	}
}

778 
	$ªmŸe_code
()

781 i‡(
ªboŸ_code
 != 0) {

782 
code
[
SECTOR_SIZE
 + 2];

783 
fundef
= 0;

785 
	`øw_c›y
(
	`m⁄2abs
(
code
), 
ªboŸ_code
, 
SECTOR_SIZE
);

786 
code
[
SECTOR_SIZE
]= 0;

787 
	`°rˇt
(
code
, ";");

788 (Ë
	`tokíize
(&
cmds
, 
code
, &
fundef
);

789 
ªboŸ_code
= 0;

791 
	}
}

793 *
	gadd±r
;

795 
	$add∑rm
(*
n
)

797 *
n
 !0 && *
add±r
 != 0) *addptr++ = *n++;

798 
	}
}

800 
	$ßve_∑ømëîs
()

803 
ívú⁄mít
 *
e
;

804 
∑øms
[
SECTOR_SIZE
 + 1];

805 
r
;

808 
	`mem£t
(
∑øms
, '\n', 
SECTOR_SIZE
);

811 
∑øms
[
SECTOR_SIZE
]= 0;

812 
add±r

∑øms
;

814 
e

ív
;É !
nû
;Ée->
√xt
) {

815 i‡(
e
->
Êags
 & 
E_RESERVED
 || 
	`is_deÁu…
(e)) ;

817 
	`add∑rm
(
e
->
«me
);

818 i‡(
e
->
Êags
 & 
E_FUNCTION
) {

819 
	`add∑rm
("(");

820 
	`add∑rm
(
e
->
¨g
);

821 
	`add∑rm
("){");

823 
	`add∑rm
((
e
->
Êags
 & (
E_DEV
|
E_SPECIAL
)) != E_DEV

826 
	`add∑rm
(
e
->
vÆue
);

827 i‡(
e
->
Êags
 & 
E_FUNCTION
Ë
	`add∑rm
("}");

828 i‡(*
add±r
 == 0) {

829 
	`¥ötf
("TheÉnvironment isÅoo big\n");

832 *
add±r
++= '\n';

836 i‡((
r

	`wrôe£˘‹s
(
	`m⁄2abs
(
∑øms
), 
low£c
+
PARAMSEC
, 1)) != 0) {

837 
	`wrôîr
(
low£c
+
PARAMSEC
, 
r
);

838 
	`¥ötf
("Can't saveÉnvironment\n");

840 
	}
}

842 
	$show_ív
()

845 
ívú⁄mít
 *
e
;

847 
e

ív
;É !
nû
;Ée->
√xt
) {

848 i‡(
e
->
Êags
 & 
E_RESERVED
) ;

850 i‡(
e
->
Êags
 & 
E_FUNCTION
) {

851 
	`¥ötf
("%s(%sË{%s}\n", 
e
->
«me
,É->
¨g
,É->
vÆue
);

853 
	`¥ötf
(
	`is_deÁu…
(
e
) ? "%s = (%s)\n" : "%s = %s\n",

854 
e
->
«me
,É->
vÆue
);

857 
	}
}

859 
	$num¥efix
(*
s
, **
ps
)

864 *
n

s
;

866 
	`bëwìn
('0', *
n
, '9'))Ç++;

868 i‡(
n
 =
s
)  0;

870 i‡(
ps
 =
nû
Ë *
n
 == 0;

872 *
ps

n
;

874 
	}
}

876 
	$numîic
(*
s
)

878  
	`num¥efix
(
s
, (**Ë
nû
);

879 
	}
}

882 
	#DEV_RAM
 0x0100

	)

883 
	#DEV_FD0
 0x0200

	)

884 
	#DEV_HD0
 0x0300

	)

885 
	#DEV_SD0
 0x0A00

	)

886 
	#mö‹_1a
 128

	)

888 
dev_t
 
	$«me2dev
(*
«me
)

895 
dev_t
 
dev
;

896 
öo_t
 
öo
;

897 
drive
;

898 
°©
 
°
;

899 *
n
, *
s
;

902 i‡((
a˘iv©e
(
«me
[0] == '*')))Çame++;

905 i‡(
	`°rcmp
(
«me
, "bootdev") == 0) {

906 i‡(
boŸdev
.
devi˚
 == -1) {

907 
	`¥ötf
("The boot device couldÇot beÇamed\n");

908 
î∫o
= 0;

911 
«me

boŸdev
.name;

918 
tmpdev
.
devi˚
tmpdev.
¥im¨y
tmpdev.
£c⁄d¨y
= -1;

919 
dev
= -1;

920 
n

«me
;

921 i‡(
	`°∫cmp
(
n
, "/dev/", 5) == 0)Ç+= 5;

923 i‡(
	`°rcmp
(
n
, "ram") == 0) {

924 
dev

DEV_RAM
;

926 i‡(
n
[0] ='f' &&Ç[1] ='d' && 
	`numîic
(n+2)) {

928 
tmpdev
.
devi˚

	`a2l
(
n
+2);

929 
dev

DEV_FD0
 + 
tmpdev
.
devi˚
;

931 i‡((
n
[0] ='h' ||Ç[0] ='s'Ë&&Ç[1] ='d' && 
	`num¥efix
“+2, &
s
)

932 && (*
s
 =0 || (
	`bëwìn
('a', *s, 'd') && s[1] == 0))

935 
dev

	`a2l
(
n
+2);

936 
tmpdev
.
devi˚

dev
 / (1 + 
NR_PARTITIONS
);

937 
tmpdev
.
¥im¨y
(
dev
 % (1 + 
NR_PARTITIONS
)) - 1;

938 i‡(*
s
 != 0) {

940 
tmpdev
.
£c⁄d¨y
*
s
 - 'a';

941 
dev

mö‹_1a


942 + (
tmpdev
.
devi˚
 * 
NR_PARTITIONS


943 + 
tmpdev
.
¥im¨y
Ë* 
NR_PARTITIONS


944 + 
tmpdev
.
£c⁄d¨y
;

946 
tmpdev
.
devi˚
+= 0x80;

947 
dev
+
n
[0] ='h' ? 
DEV_HD0
 : 
DEV_SD0
;

951 i‡(
fsok
) {

953 
öo

	`r_lookup
‘_lookup(
ROOT_INO
, "dev"), 
«me
);

955 i‡(
öo
 != 0) {

957 
	`r_°©
(
öo
, &
°
);

958 i‡(!
	`S_ISBLK
(
°
.
°_mode
)) {

959 
	`¥ötf
("%†i†nŸá block devi˚\n", 
«me
);

960 
î∫o
= 0;

961  (
dev_t
) -1;

963 
dev

°
.
°_rdev
;

967 i‡(
tmpdev
.
¥im¨y
 < 0Ë
a˘iv©e
= 0;

969 i‡(
dev
 == -1) {

970 
	`¥ötf
("C™'àªcognizê'%s'á†®devi˚\n", 
«me
);

971 
î∫o
= 0;

973  
dev
;

974 
	}
}

976 #i‡!
DOS


977 
	#B_NODEV
 -1

	)

978 
	#B_NOSIG
 -2

	)

980 
	$exec_boŸ°øp
(
dev_t
 
dev
)

986 
r
, 
n
, 
dúty
= 0;

987 
ma°î
[
SECTOR_SIZE
];

988 
∑π_íåy
 *
èbÀ
[
NR_PARTITIONS
], 
dummy
, *
a˘ive
= &dummy;

989 
u32_t
 
ma°îpos
;

991 
devi˚

tmpdev
.device;

992 i‡(!
	`dev_geomëry
()Ë 
B_NODEV
;

994 
a˘ive
->
low£c
= 0;

997 
tmpdev
.
¥im¨y
 >= 0) {

998 
ma°îpos

a˘ive
->
low£c
;

1000 i‡((
r

	`gë_ma°î
(
ma°î
, 
èbÀ
, 
ma°îpos
)) != 0) Ñ;

1002 
a˘ive

èbÀ
[
tmpdev
.
¥im¨y
];

1005 i‡(
a˘ive
->
sysöd
 =
NO_PART
Ë 
B_NOSIG
;

1007 
tmpdev
.
¥im¨y
tmpdev.
£c⁄d¨y
;

1008 
tmpdev
.
£c⁄d¨y
= -1;

1011 i‡(
a˘iv©e
 && !
a˘ive
->
boŸöd
) {

1012 
n
0;Ç < 
NR_PARTITIONS
;Ç++Ë
èbÀ
[n]->
boŸöd
= 0;

1013 
a˘ive
->
boŸöd

ACTIVE_FLAG
;

1014 
dúty
= 1;

1018 i‡((
r

	`ªad£˘‹s
(
BOOTPOS
, 
a˘ive
->
low£c
, 1)) != 0) Ñ;

1021 i‡(
	`gë_w‹d
(
BOOTPOS
+
SIGNATOFF
Ë!
SIGNATURE
Ë 
B_NOSIG
;

1024 i‡(
dúty
 && (
r

	`wrôe£˘‹s
(
	`m⁄2abs
(
ma°î
), 
ma°îpos
, 1)) != 0)

1025  
r
;

1027 
	`boŸ°øp
(
devi˚
, 
a˘ive
);

1028 
	}
}

1030 
	$boŸ_devi˚
(*
dev«me
)

1033 
dev_t
 
dev

	`«me2dev
(
dev«me
);

1034 
ßve_dev

devi˚
;

1035 
r
;

1037 i‡(
tmpdev
.
devi˚
 < 0) {

1038 i‡(
dev
 !-1Ë
	`¥ötf
("C™'àboŸ from %s\n", 
dev«me
);

1042 
r

	`exec_boŸ°øp
(
dev
)) {

1043 
B_NODEV
:

1044 
	`¥ötf
("%s: devi˚ÇŸÖª£¡\n", 
dev«me
);

1046 
B_NOSIG
:

1047 
	`¥ötf
("%†i†nŸ boŸabÀ\n", 
dev«me
);

1050 
	`¥ötf
("C™'àboŸ %s: %s\n", 
dev«me
, 
	`bios_îr
(
r
));

1054 
devi˚

ßve_dev
;

1055 (Ë
	`dev_geomëry
();

1056 
	}
}

1060 
	$boŸ_devi˚
(*
dev«me
)

1063 
	`¥ötf
("Can't boot devices under MS-DOS\n");

1064 
	}
}

1067 
	$ls
(*
dú
)

1070 
öo_t
 
öo
;

1071 
°©
 
°
;

1072 
«me
[
NAME_MAX
+1];

1074 i‡(!
fsok
) ;

1076 i‡((
öo

	`r_lookup
(
ROOT_INO
, 
dú
)) == 0

1077 || (
	`r_°©
(
öo
, &
°
), 
	`r_ªaddú
(
«me
)) == -1

1079 
	`¥ötf
("ls: %s: %s\n", 
dú
, 
	`unix_îr
(
î∫o
));

1082 (Ë
	`r_ªaddú
(
«me
);

1084 (
öo

	`r_ªaddú
(
«me
)Ë!0Ë
	`¥ötf
("%s/%s\n", 
dú
,Çame);

1085 
	}
}

1087 
u32_t
 
	$mûli_time
()

1089  
	`gë_tick
(Ë* 
MSEC_PER_TICK
;

1090 
	}
}

1092 
u32_t
 
	$mûli_sö˚
(
u32_t
 
ba£
)

1094  (
	`mûli_time
(Ë+ (
TICKS_PER_DAY
*
MSEC_PER_TICK
Ë- 
ba£
)

1095 % (
TICKS_PER_DAY
*
MSEC_PER_TICK
);

1096 
	}
}

1098 *
	gTh™dÀr
;

1099 
u32_t
 
	gTba£
, 
	gTcou¡
;

1101 
	$unscheduÀ
()

1104 i‡(
Th™dÀr
 !
nû
) {

1105 
	`‰ì
(
Th™dÀr
);

1106 
Th™dÀr

nû
;

1108 
	}
}

1110 
	$scheduÀ
(
m£c
, *
cmd
)

1113 
	`unscheduÀ
();

1114 
Th™dÀr

cmd
;

1115 
Tba£

	`mûli_time
();

1116 
Tcou¡

m£c
;

1117 
	}
}

1119 
	$expúed
()

1124 
fundef
= 0;

1126 i‡(
Th™dÀr
 =
nû
 || 
	`mûli_sö˚
(
Tba£
Ë< 
Tcou¡
)  0;

1128 (Ë
	`tokíize
—okíize(&
cmds
, 
Th™dÀr
, &
fundef
), ";", &fundef);

1129 
	`unscheduÀ
();

1131 
	}
}

1133 
	$dñay
(*
m£c
)

1141 
sw≠
= 0;

1142 
u32_t
 
ba£
, 
cou¡
;

1144 i‡(
	`°rcmp
(
m£c
, "swap") == 0) {

1145 
sw≠
= 1;

1146 
cou¡
= 0;

1147 
	`¥ötf
("\nInsertÅheÑoot disketteÅhen hit RETURN\n");

1149 i‡((
cou¡

	`a2l
(
m£c
)) > 0) {

1150 
ba£

	`mûli_time
();

1154 
	`≥ekch¨
()) {

1156 
ESC
: 
	`öãºu±
();  0;

1157 '\n': 
sw≠
= 0;

1158 : (Ë
	`gëch¨
();

1160 } !
	`expúed
()

1161 && (
sw≠
 || (
cou¡
 > 0 && 
	`mûli_sö˚
(
ba£
) < count))

1164 
	}
}

1166 
	ewh©fun
 { 
	mNOFUN
, 
	mSELECT
, 
	mDEFFUN
, 
	mUSERFUN
 } 
	$míufun
(
ívú⁄mít
 *
e
)

1168 i‡(!(
e
->
Êags
 & 
E_FUNCTION
Ë||É->
¨g
[0] =0Ë 
NOFUN
;

1169 i‡(
e
->
¨g
[1] !','Ë 
SELECT
;

1170  
e
->
Êags
 & 
E_RESERVED
 ? 
DEFFUN
 : 
USERFUN
;

1171 
	}
}

1173 
	$míu
()

1180 
fundef
0, 
c
, 
def
= 1;

1181 *
choi˚

nû
;

1182 
ívú⁄mít
 *
e
;

1185 
e

ív
;É !
nû
;Ée->
√xt
Ëi‡(
	`míufun
”Ë=
USERFUN
Ë
def
= 0;

1187 
	`¥ötf
("\nHitá keyás follows:\n\n");

1190 
e

ív
;É !
nû
;Ée->
√xt
) {

1191 
	`míufun
(
e
)) {

1192 
DEFFUN
:

1193 i‡(!
def
) ;

1195 
USERFUN
:

1196 
	`¥ötf
(" %¯ %s\n", 
e
->
¨g
[0],É->arg+2);

1198 
SELECT
:

1199 
	`¥ötf
(" %¯ Sñe˘ %†kî√l\n", 
e
->
¨g
[0],e->
«me
);

1205 
	`≥ekch¨
(Ë=-1Ëi‡(
	`expúed
()) ;

1207 
	`unscheduÀ
();

1209 i‡((
c

	`gëch¨
()Ë=
ESC
Ë{ 
	`öãºu±
(); ; }

1211 
e

ív
;É !
nû
;Ée->
√xt
) {

1212 
	`míufun
(
e
)) {

1213 
DEFFUN
:

1214 i‡(!
def
) ;

1215 
USERFUN
:

1216 
SELECT
:

1217 i‡(
c
 =
e
->
¨g
[0]Ë
choi˚
e->
vÆue
;

1220 } 
choi˚
 =
nû
);

1223 
	`¥ötf
("%c\n", 
c
);

1224 (Ë
	`tokíize
(&
cmds
, 
choi˚
, &
fundef
);

1225 
	}
}

1227 
	$hñp
()

1230 
	shñp
 {

1231 *
thög
;

1232 *
hñp
;

1233 } *
pi
;

1234 
hñp
 
öfo
[] = {

1235 { 
nû
, "Names:" },

1243 { 
nû
, "Commands:" },

1261 
pi

öfo
;Öò< 
	`¨øylimô
(info);Öi++) {

1262 i‡(
pi
->
thög
 !
nû
Ë
	`¥ötf
(" %-24s- ",Öi->thing);

1263 
	`¥ötf
("%s\n", 
pi
->
hñp
);

1265 
	}
}

1267 
	$execuã
()

1270 
tokí
 *
£c⁄d
, *
thúd
, *
fouπh
, *
fi·h
, *
£p
;

1271 *
«me

cmds
->
tokí
;

1272 
size_t
 
n
= 0;

1275 
£p

cmds
; sï !
nû
 && sï->
tokí
[0] !';'; sï£p->
√xt
Ë
n
++;

1277 i‡((
£c⁄d

cmds
->
√xt
Ë!
nû


1278 && (
thúd

£c⁄d
->
√xt
Ë!
nû


1279 && (
fouπh

thúd
->
√xt
Ë!
nû
)

1280 
fi·h

fouπh
->
√xt
;

1283 i‡(
n
 == 0) {

1284 
	`voidtokí
();

1288 i‡((
n
 == 3 ||Ç == 4)

1289 && !
	`sug¨
(
«me
)

1290 && 
£c⁄d
->
tokí
[0] == '='

1291 && !
	`sug¨
(
thúd
->
tokí
)

1292 && (
n
 =3 || (¿=4 && 
thúd
->
tokí
[0] == 'd'

1293 && !
	`sug¨
(
fouπh
->
tokí
)

1295 *
vÆue

thúd
->
tokí
;

1296 
Êags

E_VAR
;

1298 i‡(
n
 =4Ë{ 
vÆue

fouπh
->
tokí
; 
Êags
|
E_DEV
; }

1300 i‡((
Êags

	`b_£tv¨
(Êags, 
«me
, 
vÆue
)) != 0) {

1301 
	`¥ötf
("%†i†®%s\n", 
«me
,

1302 
Êags
 & 
E_RESERVED
 ? "reserved word" :

1304 
îr
= 1;

1306 
cmds
 !
£p
Ë
	`voidtokí
();

1310 i‡(
n
 >= 5

1311 && !
	`sug¨
(
«me
)

1312 && 
£c⁄d
->
tokí
[0] == '('

1313 && 
fouπh
->
tokí
[0] == ')'

1314 && 
fi·h
->
tokí
[0] == '{'

1316 
tokí
 *
fun

fi·h
->
√xt
;

1317 
ok
1, 
Êags
;

1318 *
body
;

1319 
size_t
 
Àn
= 1;

1321 
£p

fun
;

1322 
£p
 !
nû
 && sï->
tokí
[0] != '}') {

1323 
Àn
+
	`°æí
(
£p
->
tokí
) + 1;

1324 
£p
£p->
√xt
;

1326 i‡(
£p
 =
nû
 || (£p£p->
√xt
) ==Çil

1327 || 
£p
->
tokí
[0] != ';'

1328 Ë
ok
= 0;

1330 i‡(
ok
) {

1331 
body

	`mÆloc
(
Àn
 * ());

1332 *
body
= 0;

1334 
fun
->
tokí
[0] != '}') {

1335 
	`°rˇt
(
body
, 
fun
->
tokí
);

1336 i‡(!
	`sug¨
(
fun
->
tokí
)

1337 && !
	`sug¨
(
fun
->
√xt
->
tokí
)

1338 Ë
	`°rˇt
(
body
, " ");

1339 
fun
fun->
√xt
;

1342 i‡((
Êags

	`b_£ãnv
(
E_FUNCTION
, 
«me
,

1343 
thúd
->
tokí
, 
body
)) != 0) {

1344 
	`¥ötf
("%†i†®%s\n", 
«me
,

1345 
Êags
 & 
E_RESERVED
 ? "reserved word" :

1347 
îr
= 1;

1349 
cmds
 !
£p
Ë
	`voidtokí
();

1350 
	`‰ì
(
body
);

1355 i‡(
	`≥ekch¨
(Ë=
ESC
) {

1356 
	`öãºu±
();

1360 i‡(
n
 >= 1 && (

1361 
	`°rcmp
(
«me
, "unset") == 0

1362 || 
	`°rcmp
(
«me
, "echo") == 0

1364 
cmd

«me
[0];

1365 *
¨g

	`p›tokí
();

1368 
	`‰ì
(
¨g
);

1369 i‡(
cmds
 =
£p
) ;

1370 
¨g

	`p›tokí
();

1371 i‡(
cmd
 == 'u') {

1372 
	`b_un£t
(
¨g
);

1374 
	`¥ötf
("%s", 
¨g
);

1375 i‡(
cmds
 !
£p
Ë
	`putch¨
(' ');

1378 i‡(
cmd
 ='e'Ë
	`putch¨
('\n');

1382 i‡(
n
 =2 && 
	`°rcmp
(
«me
, "boŸ"Ë=0 && 
£c⁄d
->
tokí
[0] == '-') {

1383 
›tsv¨
[]= "bootopts";

1384 (Ë
	`b_£tv¨
(
E_VAR
, 
›tsv¨
, 
£c⁄d
->
tokí
);

1385 
	`boŸmöix
();

1386 
	`b_un£t
(
›tsv¨
);

1387 
	`voidtokí
();

1388 
	`voidtokí
();

1392 i‡(
n
 == 2 && (

1393 
	`°rcmp
(
«me
, "boot") == 0

1394 || 
	`°rcmp
(
«me
, "delay") == 0

1395 || 
	`°rcmp
(
«me
, "ls") == 0

1397 i‡(
«me
[0] ='b'Ë
	`boŸ_devi˚
(
£c⁄d
->
tokí
);

1398 i‡(
«me
[0] ='d'Ë(Ë
	`dñay
(
£c⁄d
->
tokí
);

1399 i‡(
«me
[0] ='l'Ë
	`ls
(
£c⁄d
->
tokí
);

1400 
	`voidtokí
();

1401 
	`voidtokí
();

1405 i‡(
n
 =3 && 
	`°rcmp
(
«me
, "å≠"Ë=0 && 
	`numîic
(
£c⁄d
->
tokí
)) {

1406 
m£c

	`a2l
(
£c⁄d
->
tokí
);

1408 
	`voidtokí
();

1409 
	`voidtokí
();

1410 
	`scheduÀ
(
m£c
, 
	`p›tokí
());

1414 i‡(
n
 == 1) {

1415 *
cmd

	`p›tokí
();

1416 *
body
;

1417 
fundef
= 0;

1418 
ok
= 0;

1420 i‡(
	`°rcmp
(
cmd
, "boŸ"Ë=0Ë{ 
	`boŸmöix
(); 
ok
= 1; }

1421 i‡(
	`°rcmp
(
cmd
, "dñay"Ë=0Ë{ (Ë
	`dñay
("500"); 
ok
= 1; }

1422 i‡(
	`°rcmp
(
cmd
, "ls"Ë=0Ë{ 
	`ls
(
nuŒ
); 
ok
= 1; }

1423 i‡(
	`°rcmp
(
cmd
, "míu"Ë=0Ë{ 
	`míu
(); 
ok
= 1; }

1424 i‡(
	`°rcmp
(
cmd
, "ßve"Ë=0Ë{ 
	`ßve_∑ømëîs
(); 
ok
= 1; }

1425 i‡(
	`°rcmp
(
cmd
, "£t"Ë=0Ë{ 
	`show_ív
(); 
ok
= 1; }

1426 i‡(
	`°rcmp
(
cmd
, "hñp"Ë=0Ë{ 
	`hñp
(); 
ok
= 1; }

1427 i‡(
	`°rcmp
(
cmd
, "exô"Ë=0Ë{ 
	`exô
(0); }

1430 i‡(
	`°rcmp
(
cmd
, ":"Ë=0Ë
ok
= 1;

1433 i‡(!
ok
 && (
body

	`b_body
(
cmd
)Ë!
nû
) {

1434 (Ë
	`tokíize
(&
cmds
, 
body
, &
fundef
);

1435 
ok
= 1;

1437 i‡(!
ok
Ë
	`¥ötf
("%s: unknow¿fun˘i⁄", 
cmd
);

1438 
	`‰ì
(
cmd
);

1439 i‡(
ok
) ;

1442 
	`¥ötf
("Can'tÖarse:");

1443 
cmds
 !
£p
) {

1444 
	`¥ötf
(" %s", 
cmds
->
tokí
); 
	`voidtokí
();

1449 
	`¥ötf
("\nTry 'help'\n");

1450 
îr
= 1;

1451 
	}
}

1453 
	$m⁄ô‹
()

1456 *
löe
;

1457 
fundef
= 0;

1458 
tokí
 **
acmds
&
cmds
;

1460 
	`unscheduÀ
();

1463 
	`¥ötf
("%s%c", 
boŸdev
.
«me
, 
fundef
 == 0 ? '>' : '+');

1464 
löe

	`ªadlöe
();

1465 
acmds

	`tokíize
◊cmds, 
löe
, &
fundef
);

1466 
	`‰ì
(
löe
);

1467 } 
fundef
 != 0);

1468 
	}
}

1470 
	$boŸ
()

1476 
	`ª£t_video
(
	`gë_video
(Ë& 1 ? 
COLOR_MODE
 : 
MONO_MODE
);

1478 
	`¥ötf
("\nMöix boŸ m⁄ô‹ %s\n", 
vîsi⁄
);

1479 
	`¥ötf
("\nPress ESCÅoÉnterÅhe monitor\n");

1482 i‡(
DOS
Ë
	`öôülize
();

1485 
	`migøã
();

1488 i‡(!
DOS
Ë
	`öôülize
();

1491 
	`öô_ˇche
();

1494 
	`gë_∑ømëîs
();

1497 
fsok

	`r_su≥r
() != 0;

1501 
cmds
 !
nû
) {

1502 
	`execuã
();

1503 i‡(
îr
) {

1505 
cmds
 !
nû
Ë
	`voidtokí
();

1506 
îr
= 0;

1509 (Ë
	`expúed
();

1510 
	`ªmŸe_code
();

1513 
	`m⁄ô‹
();

1515 
	}
}

	@boot.h

6 
	#SECTOR_SIZE
 512

	)

7 
	#SECTOR_SHIFT
 9

	)

8 
	#RATIO
 (
BLOCK_SIZE
 / 
SECTOR_SIZE
)

	)

10 
	#PARAMSEC
 1

	)

12 
	#DSKBASE
 0x1E

	)

13 
	#DSKPARSIZE
 11

	)

15 
	#ESC
 '\33'

	)

17 
	#HEADERPOS
 0x00600L

	)

19 
	#MINIXPOS
 0x00800L

	)

22 
	#FREEPOS
 0x08000L

	)

25 
	#MSEC_PER_TICK
 55

	)

26 
	#TICKS_PER_DAY
 0x1800B0L

	)

28 
	#BOOTPOS
 0x07C00L

	)

29 
	#SIGNATURE
 0xAA55

	)

30 
	#SIGNATOFF
 510

	)

33 
	#MONO_MODE
 0x07

	)

34 
	#COLOR_MODE
 0x03

	)

38 #i‚de‡
EXTERN


39 
	#EXTERN
 

	)

42 
	sve˘‹
 {

43 
u16_t
 
off£t
;

44 
u16_t
 
£gmít
;

45 } 
	tve˘‹
;

47 
EXTERN
 
ve˘‹
 
	gªm_∑π
;

49 
EXTERN
 
u32_t
 
	gˇddr
, 
	gdaddr
;

50 
EXTERN
 
u32_t
 
	grunsize
;

52 
EXTERN
 
u16_t
 
	gdevi˚
;

53 
EXTERN
 
u16_t
 
	ghóds
, 
	g£˘‹s
;

58 
exô
(
code
);

60 
u32_t
 
m⁄2abs
(*
±r
);

62 
u32_t
 
vec2abs
(
ve˘‹
 *
vec
);

64 
øw_c›y
(
u32_t
 
d°addr
, u32_à
§ˇddr
, u32_à
cou¡
);

66 
u16_t
 
gë_w‹d
(
u32_t
 
addr
);

68 
put_w‹d
(
u32_t
 
addr
, 
U16_t
 
w‹d
);

70 
ªloˇã
();

72 
dev_geomëry
();

74 
ªad£˘‹s
(
u32_t
 
buÁddr
, u32_à
£˘‹
, 
U8_t
 
cou¡
);

76 
wrôe£˘‹s
(
u32_t
 
buÁddr
, u32_à
£˘‹
, 
U8_t
 
cou¡
);

78 
gëch¨
();

80 
≥ekch¨
();

82 
putch¨
(
c
);

84 
ª£t_video
(
mode
);

87 
u16_t
 
gë_bus
();

89 
u16_t
 
gë_video
();

91 
u16_t
 
gë_memsize
();

93 
u32_t
 
gë_ext_memsize
();

95 
u32_t
 
gë_tick
();

98 
boŸ°øp
(
devi˚
, 
∑π_íåy
 *
íåy
);

100 
u32_t
 
möix
(u32_à
koff
, u32_à
kcs
, u32_à
kds
,

101 *
boŸ∑øms
, 
size_t
 
∑ømsize
);

108 
	#E_SPECIAL
 0x01

	)

109 
	#E_DEV
 0x02

	)

110 
	#E_RESERVED
 0x04

	)

111 
	#E_STICKY
 0x07

	)

114 
	#E_VAR
 0x08

	)

115 
	#E_FUNCTION
 0x10

	)

118 
	sívú⁄mít
 {

119 
ívú⁄mít
 *
	m√xt
;

120 
	mÊags
;

121 *
	m«me
;

122 *
	m¨g
;

123 *
	mvÆue
;

124 *
	mdefvÆ
;

125 } 
	tívú⁄mít
;

127 
EXTERN
 
ívú⁄mít
 *
	gív
;

129 *
b_vÆue
(*
«me
);

131 
EXTERN
 
	gfsok
;

132 
EXTERN
 
u32_t
 
	glow£c
;

133 
EXTERN
 
u32_t
 
	gªboŸ_code
;

137 
boŸmöix
();

142 
ªadîr
(
off_t
 
£c
, 
îr
);

144 *
u2a
(
U16_t
 
n
), *
ul2a
(
u32_t
Ç);

146 
a2l
(*
a
);

148 
a2x
(*
a
);

150 
dev_t
 
«me2dev
(*
«me
);

152 
num¥efix
(*
s
, **
ps
);

154 
numîic
(*
s
);

156 *
unix_îr
(
îr
);

158 
övÆid©e_ˇche
();

160 
öô_ˇche
();

162 
dñay
(*
m£c
);

165 #i‡
DOS


167 
dos_›í
(*
«me
);

169 
PSP
[256];

172 
	#DOS
 0

	)

	@bootimage.c

4 
	#nû
 0

	)

5 
	#_POSIX_SOURCE
 1

	)

6 
	#_MINIX
 1

	)

7 
	~<°ddef.h
>

8 
	~<sys/ty≥s.h
>

9 
	~<sys/°©.h
>

10 
	~<°dlib.h
>

11 
	~<limôs.h
>

12 
	~<°rög.h
>

13 
	~<î∫o.h
>

14 
	~<a.out.h
>

15 
	~<möix/c⁄fig.h
>

16 
	~<möix/c⁄°.h
>

17 
	~<möix/ty≥.h
>

18 
	~<kî√l/c⁄°.h
>

19 
	~<kî√l/ty≥.h
>

20 
	~<ibm/∑πôi⁄.h
>

21 
	~"øwfs.h
"

22 
	~"image.h
"

23 
	~"boŸ.h
"

25 
¥ötk
(*
fmt
, ...);

26 
	#¥ötf
 
¥ötk


	)

28 
	#˛ick_shi·
 
˛ck_sh·


	)

31 
	#K_I386
 0x0001

	)

32 
	#K_CLAIM
 0x0002

	)

33 
	#K_CHMEM
 0x0004

	)

34 
	#K_HIGH
 0x0008

	)

35 
	#K_HDR
 0x0010

	)

36 
	#K_RET
 0x0020

	)

41 
	#PROCESS_MAX
 16

	)

42 
	#KERNEL
 0

	)

43 
	#FS
 2

	)

45 
	s¥o˚ss
 {

46 
	m«me
[
IM_NAME_MAX
 + 1];

47 
u32_t
 
	míåy
;

48 
u32_t
 
	mcs
;

49 
u32_t
 
	mds
;

50 
u32_t
 
	md©a
;

51 
u32_t
 
	míd
;

52 } 
	g¥o˚ss
[
PROCESS_MAX
];

53 
	gn_¥ocs
;

56 
	#MAGIC_OFF
 0

	)

57 
	#CLICK_OFF
 2

	)

58 
	#FLAGS_OFF
 4

	)

59 
	#KERNEL_D_MAGIC
 0x526F

	)

62 
	#P_SIZ_OFF
 0

	)

63 
	#P_INIT_OFF
 4

	)

66 
	#bëwìn
(
a
, 
c
, 
z
Ë((Ë((cË- (a)Ë<((zË- (a)))

	)

68 
	$¥ëty_image
(*
image
)

76 
up
0, 
c
;

78 (
c
*
image
++) != 0) {

79 i‡(
c
 == '/' || c == '_') c= ' ';

81 i‡(
c
 ='r' && 
	`bëwìn
('0', *
image
, '9')) {

82 
	`¥ötf
("Ñevision ");

85 i‡(!
up
 && 
	`bëwìn
('a', 
c
, 'z')) c= c - 'a' + 'A';

87 i‡(
	`bëwìn
('A', 
c
, 'Z')Ë
up
= 1;

89 
	`putch¨
(
c
);

91 
	}
}

93 
	$øw_˛ór
(
u32_t
 
addr
, u32_à
cou¡
)

96 
zîos
[128];

97 
u32_t
 
d°
;

98 
u32_t
 
z˘
;

100 
z˘
(
zîos
);

101 i‡(
z˘
 > 
cou¡
) zct= count;

102 
	`øw_c›y
(
addr
, 
	`m⁄2abs
(&
zîos
), 
z˘
);

103 
cou¡
-
z˘
;

105 
cou¡
 > 0) {

106 
d°

addr
 + 
z˘
;

107 i‡(
z˘
 > 
cou¡
) zct= count;

108 
	`øw_c›y
(
d°
, 
addr
, 
z˘
);

109 
cou¡
-
z˘
;

110 
z˘
*= 2;

112 
	}
}

115 
	#Æign
(
a
, 
n
Ë(((
u32_t
)◊Ë+ ((u32_t)“Ë- 1)Ë& ~((u32_t)“Ë- 1))

	)

116 
	g˛ick_shi·
;

117 
	g˛ick_size
;

118 
	gk_Êags
;

120 
	$∑tch_sizes
()

126 
u16_t
 
ãxt_size
, 
d©a_size
;

127 
i
;

128 
¥o˚ss
 *
¥o˝
, *
öôp
;

129 
u32_t
 
doff
;

131 i‡(
k_Êags
 & 
K_HDR
) ;

135 
doff

¥o˚ss
[
KERNEL
].
d©a
 + 
P_SIZ_OFF
;

137 
i
0; i < 
n_¥ocs
; i++) {

138 
¥o˝
&
¥o˚ss
[
i
];

139 
ãxt_size
(
¥o˝
->
ds
 -Öro˝->
cs
Ë>> 
˛ick_shi·
;

140 
d©a_size
(
¥o˝
->
íd
 -Öro˝->
ds
Ë>> 
˛ick_shi·
;

143 
	`put_w‹d
(
doff
, 
ãxt_size
); doff+= 2;

144 
	`put_w‹d
(
doff
, 
d©a_size
); doff+= 2;

146 
öôp

¥o˝
;

149 i‡(
k_Êags
 & 
K_HIGH
) ;

152 
	`put_w‹d
(
¥o˚ss
[
FS
].
d©a
 + 
P_INIT_OFF
+0, 
öôp
->
cs
 >> 
˛ick_shi·
);

153 
	`put_w‹d
(
¥o˚ss
[
FS
].
d©a
 + 
P_INIT_OFF
+2, 
ãxt_size
);

154 
	`put_w‹d
(
¥o˚ss
[
FS
].
d©a
 + 
P_INIT_OFF
+4, 
d©a_size
);

155 
	}
}

157 
	$£À˘ed
(*
«me
)

160 *
cﬁ⁄
, *
œbñ
;

161 
cmp
;

163 i‡((
cﬁ⁄

	`°rchr
(
«me
, ':')Ë=
nû
)  1;

164 i‡((
œbñ

	`b_vÆue
("œbñ")Ë=
nû
)  1;

166 *
cﬁ⁄
= 0;

167 
cmp

	`°rcmp
(
œbñ
, 
«me
);

168 *
cﬁ⁄
= ':';

169  
cmp
 == 0;

170 
	}
}

172 
u32_t
 
	$¥oc_size
(
image_hódî
 *
hdr
)

175 
u32_t
 
Àn

hdr
->
¥o˚ss
.
a_ãxt
;

177 i‡(
hdr
->
¥o˚ss
.
a_Êags
 & 
A_PAL
Ë
Àn
+hdr->¥o˚ss.
a_hdæí
;

178 i‡(
hdr
->
¥o˚ss
.
a_Êags
 & 
A_SEP
Ë
Àn

	`Æign
÷í, 
SECTOR_SIZE
);

179 
Àn

	`Æign
÷í + 
hdr
->
¥o˚ss
.
a_d©a
, 
SECTOR_SIZE
);

181  
Àn
 >> 
SECTOR_SHIFT
;

182 
	}
}

184 
off_t
 
	gimage_off
, 
	gimage_size
;

185 
	$u32_t
 (*
vú2£c
)(
u32_t
 
v£c
);

187 
u32_t
 
	$fûe_vú2£c
(
u32_t
 
v£c
)

190 
off_t
 
blk
;

192 i‡((
blk

	`r_vú2abs
(
v£c
 / 
RATIO
)) == -1) {

193 
î∫o

EIO
;

196  
blk
 =0 ? 0 : 
low£c
 + blk * 
RATIO
 + 
v£c
 % RATIO;

197 
	}
}

199 
u32_t
 
	$Ê©_vú2£c
(
u32_t
 
v£c
)

202  
low£c
 + 
image_off
 + 
v£c
;

203 
	}
}

205 *
	$gë_£˘‹
(
u32_t
 
v£c
)

211 
u32_t
 
£c
;

212 
r
;

213 
buf
[32 * 
SECTOR_SIZE
];

214 
size_t
 
cou¡
;

215 
u32_t
 
buf£c
;

217 i‡(
v£c
 =0Ë
cou¡
= 0;

219 i‡((
£c
(*
vú2£c
)(
v£c
)Ë=-1Ë 
nû
;

221 i‡(
£c
 == 0) {

223 
cou¡
= 0;

224 
	`mem£t
(
buf
, 0, 
SECTOR_SIZE
);

225  
buf
;

229 i‡((
£c
 - 
buf£c
Ë< 
cou¡
) {

230  
buf
 + ((
size_t
Ë(
£c
 - 
buf£c
Ë<< 
SECTOR_SHIFT
);

234 
cou¡
= 0;

235 
buf£c

£c
;

238 ++
cou¡
 < 32 && (
buf£c
 + cou¡Ë% 
£˘‹s
 != 0) {

239 
v£c
++;

240 i‡((
£c
(*
vú2£c
)(
v£c
)) == -1) ;

243 i‡(
£c
 !
buf£c
 + 
cou¡
) ;

247 i‡((
r

	`ªad£˘‹s
(
	`m⁄2abs
(
buf
), 
buf£c
, 
cou¡
)) != 0) {

248 
	`ªadîr
(
buf£c
, 
r
);

249 
cou¡
= 0;

250 
î∫o
= 0;

251  
nû
;

253  
buf
;

254 
	}
}

256 
	$gë_˛ickshi·
(
u32_t
 
k£c
, 
image_hódî
 *
hdr
)

259 *
ãxç
;

261 i‡((
ãxç

	`gë_£˘‹
(
k£c
)Ë=
nû
)  0;

263 i‡(
hdr
->
¥o˚ss
.
a_Êags
 & 
A_PAL
Ë
ãxç
+hdr->¥o˚ss.
a_hdæí
;

264 
˛ick_shi·
* (
u16_t
 *Ë(
ãxç
 + 
CLICK_OFF
);

265 
k_Êags
* (
u16_t
 *Ë(
ãxç
 + 
FLAGS_OFF
);

267 i‡(
˛ick_shi·
 < 
HCLICK_SHIFT
 || click_shift > 16) {

268 
	`¥ötf
("%†˛ick sizêi†bad\n", 
hdr
->
«me
);

269 
î∫o
= 0;

273 
˛ick_size
1 << 
˛ick_shi·
;

276 
	}
}

278 
	$gë_£gmít
(
u32_t
 *
v£c
, *
size
, u32_à*
addr
, u32_à
limô
)

281 *
buf
;

282 
size_t
 
˙t
, 
n
;

284 
˙t
= 0;

285 *
size
 > 0) {

286 i‡(
˙t
 == 0) {

287 i‡((
buf

	`gë_£˘‹
((*
v£c
)++)Ë=
nû
)  0;

288 
˙t

SECTOR_SIZE
;

290 i‡(*
addr
 + 
˛ick_size
 > 
limô
Ë{ 
î∫o

ENOMEM
;  0; }

291 
n

˛ick_size
;

292 i‡(
n
 > 
˙t
)Ç= cnt;

293 
	`øw_c›y
(*
addr
, 
	`m⁄2abs
(
buf
), 
n
);

294 *
addr
+
n
;

295 *
size
-
n
;

296 
buf
+
n
;

297 
˙t
-
n
;

301 
n

	`Æign
(*
addr
, 
˛ick_size
) - *addr;

302 
	`øw_˛ór
(*
addr
, 
n
);

303 *
addr
+
n
;

304 *
size
-
n
;

306 
	}
}

308 
	$exec_image
(*
image
, *
∑øms
, 
size_t
 
∑ømsize
)

311 
i
;

312 
image_hódî
 
hdr
;

313 *
buf
;

314 
u32_t
 
v£c
= 0;

315 
u32_t
 
addr

MINIXPOS
;

316 
u32_t
 
limô

ˇddr
;

317 
u32_t
 
n
;

318 
¥o˚ss
 *
¥o˝
;

319 
a_ãxt
, 
a_d©a
, 
a_bss
, 
a_°ack
;

320 *
m£c
, *
c⁄sﬁe
;

321 
u16_t
 
mode
;

322 
b™√r
= 0;

323 
¥o˚ss‹

	`a2l
(
	`b_vÆue
("processor"));

326 
	`øw_˛ór
(
HEADERPOS
, 
PROCESS_MAX
 * 
A_MINHDR
);

329 
i
0; 
v£c
 < 
image_size
; i++) {

330 i‡(
i
 =
PROCESS_MAX
) {

331 
	`¥ötf
("Thereáre moreÅhen %dÖrograms in %s\n",

332 
PROCESS_MAX
, 
image
);

333 
î∫o
= 0;

336 
¥o˝
&
¥o˚ss
[
i
];

340 i‡((
buf

	`gë_£˘‹
(
v£c
++)Ë=
nû
) ;

342 
	`mem˝y
(&
hdr
, 
buf
, (hdr));

344 i‡(
	`BADMAG
(
hdr
.
¥o˚ss
)Ë{ 
î∫o

ENOEXEC
; ; }

347 i‡(
	`£À˘ed
(
hdr
.
«me
)) ;

350 
v£c
+
	`¥oc_size
(&
hdr
);

354 
	`øw_c›y
(
HEADERPOS
 + 
i
 * 
A_MINHDR
, 
	`m⁄2abs
(&
hdr
.
¥o˚ss
),

355 
A_MINHDR
);

358 i‡(
hdr
.
¥o˚ss
.
a_˝u
 =
A_I80386
 && 
¥o˚ss‹
 < 386) {

359 
	`¥ötf
("You can'tÑuná 386 kernel onÅhis 80%ld\n",

360 
¥o˚ss‹
);

361 
î∫o
= 0;

366 i‡(
i
 =
KERNEL
) {

367 i‡(!
	`gë_˛ickshi·
(
v£c
, &
hdr
)) ;

368 
addr

	`Æign
◊ddr, 
˛ick_size
);

371 i‡(!
b™√r
) {

372 
	`¥ötf
(" cs dsÅext data bss");

373 i‡(
k_Êags
 & 
K_CHMEM
Ë
	`¥ötf
(" stack");

374 
	`putch¨
('\n');

375 
b™√r
= 1;

379 
a_ãxt

hdr
.
¥o˚ss
.a_text;

380 
a_d©a

hdr
.
¥o˚ss
.a_data;

381 
a_bss

hdr
.
¥o˚ss
.a_bss;

382 i‡(
k_Êags
 & 
K_CHMEM
) {

383 
a_°ack

hdr
.
¥o˚ss
.
a_tŸÆ
 - 
a_d©a
 - 
a_bss
;

384 i‡(!(
hdr
.
¥o˚ss
.
a_Êags
 & 
A_SEP
)Ë
a_°ack
-
a_ãxt
;

386 
a_°ack
= 0;

390 
	`°r˝y
(
¥o˝
->
«me
, 
hdr
.name);

391 
¥o˝
->
cs

addr
;

396 
¥o˝
->
íåy

hdr
.
¥o˚ss
.
a_íåy
;

397 i‡(
hdr
.
¥o˚ss
.
a_Êags
 & 
A_PAL
Ë
a_ãxt
+hdr.¥o˚ss.
a_hdæí
;

398 i‡(
hdr
.
¥o˚ss
.
a_Êags
 & 
A_UZP
Ë
¥o˝
->
cs
-
˛ick_size
;

401 i‡(
hdr
.
¥o˚ss
.
a_Êags
 & 
A_SEP
) {

403 i‡(!
	`gë_£gmít
(&
v£c
, &
a_ãxt
, &
addr
, 
limô
)) ;

406 
¥o˝
->
ds

addr
;

407 i‡(
hdr
.
¥o˚ss
.
a_Êags
 & 
A_UZP
Ë
¥o˝
->
ds
-
˛ick_size
;

408 
¥o˝
->
d©a

addr
;

411 
¥o˝
->
d©a

addr
 + 
a_ãxt
;

412 
¥o˝
->
ds
¥o˝->
cs
;

413 
a_d©a
+
a_ãxt
;

416 
	`¥ötf
("%06lx %06lx%8ld%8ld%8ld",

417 
¥o˝
->
cs
,Öro˝->
ds
,

418 
hdr
.
¥o˚ss
.
a_ãxt
, hdr.¥o˚ss.
a_d©a
,

419 
hdr
.
¥o˚ss
.
a_bss


421 i‡(
k_Êags
 & 
K_CHMEM
Ë
	`¥ötf
("%8ld", 
a_°ack
);

423 
	`¥ötf
(" %s\n", 
hdr
.
«me
);

426 i‡(!
	`gë_£gmít
(&
v£c
, &
a_d©a
, &
addr
, 
limô
)) ;

429 i‡(
i
 !
KERNEL
 && (
k_Êags
 & 
K_CLAIM
)Ë
a_bss

a_°ack
= 0;

436 
a_bss
+
a_d©a
;

437 
n

	`Æign
(
a_bss
, 
˛ick_size
);

438 
a_bss
-
n
;

441 i‡(
addr
 + 
n
 > 
limô
Ë{ 
î∫o

ENOMEM
; ; }

442 
	`øw_˛ór
(
addr
, 
n
);

443 
addr
+
n
;

446 
a_°ack
+
a_bss
;

447 
n

	`Æign
(
a_°ack
, 
˛ick_size
);

448 
a_°ack
-
n
;

451 
addr
+
n
;

454 
¥o˝
->
íd

addr
;

456 i‡(
i
 =0 && (
k_Êags
 & 
K_HIGH
)) {

458 
addr
= 0x100000L;

459 
limô
0x100000L + 
	`gë_ext_memsize
() * 1024L;

463 i‡((
n_¥ocs

i
) == 0) {

464 
	`¥ötf
("Thîê¨ênÿ¥ogøm†ö %s\n", 
image
);

465 
î∫o
= 0;

470 i‡(
	`gë_w‹d
(
¥o˚ss
[
KERNEL
].
d©a
 + 
MAGIC_OFF
Ë!
KERNEL_D_MAGIC
) {

471 
	`¥ötf
("%†magi¯numbî i†öc‹ª˘\n", 
¥o˚ss
[
KERNEL
].
«me
);

472 
î∫o
= 0;

477 
	`∑tch_sizes
();

480 
m£c

	`b_vÆue
("delay");

481 i‡(!
	`dñay
(
m£c
 !
nû
 ? m£¯: "0")Ë{ 
î∫o
= 0; ; }

486 
mode

	`°rcmp
(
	`b_vÆue
("chrome"), "cﬁ‹"Ë=0 ? 
COLOR_MODE
 : 
MONO_MODE
;

487 
c⁄sﬁe

	`b_vÆue
("console");

488 i‡(
c⁄sﬁe
 !
nû
 && 
	`a2x
(c⁄sﬁeË!0Ë
mode
=á2x(console);

489 
	`ª£t_video
(
mode
);

492 
ªboŸ_code

	`möix
(
¥o˚ss
[
KERNEL
].
íåy
,Öro˚ss[KERNEL].
cs
,

493 
¥o˚ss
[
KERNEL
].
ds
, 
∑øms
, 
∑ømsize
);

496 
fsok

	`r_su≥r
() != 0;

497 
î∫o
= 0;

498 
	}
}

500 *
	$∑øms2∑øms
(
size_t
 *
size
)

503 *
∑rms
;

504 
size_t
 
i
, 
z
;

505 
ívú⁄mít
 *
e
;

507 
i
= 0;

508 
z
= 64;

509 
∑rms

	`mÆloc
(
z
 * (*));

511 
e

ív
;É !
nû
;Ée->
√xt
) {

512 *
«me

e
->«me, *
vÆue
=É->value;

513 
size_t
 
n
;

514 
dev_t
 
dev
;

516 i‡(!(
e
->
Êags
 & 
E_VAR
)) ;

518 i‡(
e
->
Êags
 & 
E_DEV
) {

519 i‡((
dev

	`«me2dev
(
vÆue
)) == -1) {

520 
	`‰ì
(
∑rms
);

521 
î∫o
= 0;

522  
nû
;

524 
vÆue

	`u2a
((
u16_t
Ë
dev
);

527 
n

i
 + 
	`°æí
(
«me
Ë+ 1 + såÀn(
vÆue
) + 1;

528 i‡(
n
 > 
z
) {

529 
z
+
n
;

530 
∑rms

	`ªÆloc
’¨ms, 
z
 * ());

532 
	`°r˝y
(
∑rms
 + 
i
, 
«me
);

533 
	`°rˇt
(
∑rms
 + 
i
, "=");

534 
	`°rˇt
(
∑rms
 + 
i
, 
vÆue
);

535 
i

n
;

537 
∑rms
[
i
++]= 0;

538 *
size

i
;

539  
∑rms
;

540 
	}
}

542 
öo_t
 
	$œã°_vîsi⁄
(*
vîsi⁄
, 
°©
 *
°p
)

547 
«me
[
NAME_MAX
 + 1];

548 
öo_t
 
öo
, 
√we°
;

549 
time_t
 
mtime
;

551 i‡((
öo

	`r_ªaddú
(
«me
)Ë=0Ë{ 
°p
->
°_mtime
= 0;  0; }

553 
√we°

	`œã°_vîsi⁄
(
vîsi⁄
, 
°p
);

554 
mtime

°p
->
°_mtime
;

555 
	`r_°©
(
öo
, 
°p
);

557 i‡(
	`S_ISREG
(
°p
->
°_mode
Ë&& sç->
°_mtime
 > 
mtime
) {

558 
√we°

öo
;

559 
	`°r˝y
(
vîsi⁄
, 
«me
);

561 
°p
->
°_mtime

mtime
;

563  
√we°
;

564 
	}
}

566 *
	$£À˘_image
(*
image
)

573 
öo_t
 
image_öo
;

574 
°©
 
°
;

576 
image

	`°r˝y
(
	`mÆloc
((
	`°æí
(imageË+ 1 + 
NAME_MAX
 + 1)

577 * ()), 
image
);

579 i‡(!
fsok
 || (
image_öo

	`r_lookup
(
ROOT_INO
, 
image
)) == 0) {

580 *
size
;

582 i‡(
	`num¥efix
(
image
, &
size
) && *size++ == ':'

583 && 
	`numîic
(
size
)) {

584 
vú2£c

Ê©_vú2£c
;

585 
image_off

	`a2l
(
image
);

586 
image_size

	`a2l
(
size
);

587 
	`°r˝y
(
image
, "Minix");

588  
image
;

590 i‡(!
fsok
)

591 
	`¥ötf
("No image selected\n");

593 
	`¥ötf
("C™'àlﬂd %s: %s\n", 
image
, 
	`unix_îr
(
î∫o
));

594 
baû_out
;

597 
	`r_°©
(
image_öo
, &
°
);

598 i‡(!
	`S_ISREG
(
°
.
°_mode
)) {

599 *
vîsi⁄

image
 + 
	`°æí
(image);

600 
dŸs
[
NAME_MAX
 + 1];

602 i‡(!
	`S_ISDIR
(
°
.
°_mode
)) {

603 
	`¥ötf
("%s: %s\n", 
image
, 
	`unix_îr
(
ENOTDIR
));

604 
baû_out
;

606 (Ë
	`r_ªaddú
(
dŸs
);

607 (Ë
	`r_ªaddú
(
dŸs
);

608 *
vîsi⁄
++= '/';

609 *
vîsi⁄
= 0;

610 i‡((
image_öo

	`œã°_vîsi⁄
(
vîsi⁄
, &
°
)) == 0) {

611 
	`¥ötf
("Thîê¨ênÿimage†ö %s/\n", 
image
);

612 
baû_out
;

614 
	`r_°©
(
image_öo
, &
°
);

616 
vú2£c

fûe_vú2£c
;

617 
image_size
(
°
.
°_size
 + 
SECTOR_SIZE
 - 1Ë>> 
SECTOR_SHIFT
;

618  
image
;

619 
baû_out
:

620 
	`‰ì
(
image
);

621  
nû
;

622 
	}
}

624 
	$boŸmöix
()

629 *
image
;

630 *
möix∑øms
;

631 
size_t
 
∑ømsize
;

634 i‡((
möix∑øms

	`∑øms2∑øms
(&
∑ømsize
)Ë=
nû
) ;

636 i‡((
image

	`£À˘_image
(
	`b_vÆue
("image"))Ë=
nû
) ;

639 
	`övÆid©e_ˇche
();

641 
	`¥ötf
("\nLoading ");

642 
	`¥ëty_image
(
image
);

643 
	`¥ötf
(".\n\n");

645 
	`exec_image
(
image
, 
möix∑øms
, 
∑ømsize
);

647 
î∫o
) {

648 
ENOEXEC
:

649 
	`¥ötf
("%†c⁄èö†®badÖrogøm hódî\n", 
image
);

651 
ENOMEM
:

652 
	`¥ötf
("NŸÉnough mem‹yÅÿlﬂd %s\n", 
image
);

654 
EIO
:

655 
	`¥ötf
("Unsu•e˘ed EOF o¿%s\n", 
image
);

660 
	`öô_ˇche
();

662 
	`‰ì
(
möix∑øms
);

663 
	`‰ì
(
image
);

664 
	}
}

	@break.c

18 
	~"mm.h
"

19 
	~<sig«l.h
>

20 
	~"m¥oc.h
"

21 
	~"∑øm.h
"

23 
	#DATA_CHANGED
 1

	)

24 
	#STACK_CHANGED
 2

	)

29 
PUBLIC
 
	$do_brk
()

39 
m¥oc
 *
rmp
;

40 
r
;

41 
vú_byãs
 
v
, 
√w_•
;

42 
vú_˛icks
 
√w_˛icks
;

44 
rmp
 = 
mp
;

45 
v
 = (
vú_byãs
Ë
addr
;

46 
√w_˛icks
 = (
vú_˛icks
Ë–((Ë
v
 + 
CLICK_SIZE
 - 1Ë>> 
CLICK_SHIFT
);

47 i‡(
√w_˛icks
 < 
rmp
->
mp_£g
[
D
].
mem_vú
) {

48 
ªs_±r
 = (*) -1;

49 (
ENOMEM
);

51 
√w_˛icks
 -
rmp
->
mp_£g
[
D
].
mem_vú
;

52 
	`sys_gë•
(
who
, &
√w_•
);

53 
r
 = 
	`adju°
(
rmp
, 
√w_˛icks
, 
√w_•
);

54 
ªs_±r
 = (
r
 =
OK
 ? 
addr
 : (*) -1);

55 (
r
);

56 
	}
}

62 
PUBLIC
 
	$adju°
(
rmp
, 
d©a_˛icks
, 
•
)

63 
m¥oc
 *
rmp
;

64 
vú_˛icks
 
d©a_˛icks
;

65 
vú_byãs
 
•
;

73 
mem_m≠
 *
mem_•
, *
mem_dp
;

74 
vú_˛icks
 
•_˛ick
, 
g≠_ba£
, 
lowî
, 
ﬁd_˛icks
;

75 
ch™ged
, 
r
, 
·
;

76 
ba£_of_°ack
, 
dñè
;

78 
mem_dp
 = &
rmp
->
mp_£g
[
D
];

79 
mem_•
 = &
rmp
->
mp_£g
[
S
];

80 
ch™ged
 = 0;

82 i‡(
mem_•
->
mem_Àn
 =0Ë(
OK
);

85 
ba£_of_°ack
 = (Ë
mem_•
->
mem_vú
 + (Ëmem_•->
mem_Àn
;

86 
•_˛ick
 = 
•
 >> 
CLICK_SHIFT
;

87 i‡(
•_˛ick
 >
ba£_of_°ack
Ë(
ENOMEM
);

90 
dñè
 = (Ë
mem_•
->
mem_vú
 - (Ë
•_˛ick
;

91 
lowî
 = (
dñè
 > 0 ? 
•_˛ick
 : 
mem_•
->
mem_vú
);

94 
	#SAFETY_BYTES
 (384 * (*))

	)

95 
	#SAFETY_CLICKS
 ((
SAFETY_BYTES
 + 
CLICK_SIZE
 - 1Ë/ CLICK_SIZE)

	)

96 
g≠_ba£
 = 
mem_dp
->
mem_vú
 + 
d©a_˛icks
 + 
SAFETY_CLICKS
;

97 i‡(
lowî
 < 
g≠_ba£
Ë(
ENOMEM
);

100 
ﬁd_˛icks
 = 
mem_dp
->
mem_Àn
;

101 i‡(
d©a_˛icks
 !
mem_dp
->
mem_Àn
) {

102 
mem_dp
->
mem_Àn
 = 
d©a_˛icks
;

103 
ch™ged
 |
DATA_CHANGED
;

107 i‡(
dñè
 > 0) {

108 
mem_•
->
mem_vú
 -
dñè
;

109 
mem_•
->
mem_phys
 -
dñè
;

110 
mem_•
->
mem_Àn
 +
dñè
;

111 
ch™ged
 |
STACK_CHANGED
;

115 
·
 = (
rmp
->
mp_Êags
 & 
SEPARATE
);

116 
r
 = 
	`size_ok
(
·
, 
rmp
->
mp_£g
[
T
].
mem_Àn
,Ñmp->mp_£g[
D
].mem_len,

117 
rmp
->
mp_£g
[
S
].
mem_Àn
,Ñmp->mp_£g[
D
].
mem_vú
,Ñmp->mp_seg[S].mem_vir);

118 i‡(
r
 =
OK
) {

119 i‡(
ch™ged
Ë
	`sys_√wm≠
(()(
rmp
 - 
m¥oc
),Ñmp->
mp_£g
);

120 (
OK
);

124 i‡(
ch™ged
 & 
DATA_CHANGED
Ë
mem_dp
->
mem_Àn
 = 
ﬁd_˛icks
;

125 i‡(
ch™ged
 & 
STACK_CHANGED
) {

126 
mem_•
->
mem_vú
 +
dñè
;

127 
mem_•
->
mem_phys
 +
dñè
;

128 
mem_•
->
mem_Àn
 -
dñè
;

130 (
ENOMEM
);

131 
	}
}

137 
PUBLIC
 
	$size_ok
(
fûe_ty≥
, 
tc
, 
dc
, 
sc
, 
dvú
, 
s_vú
)

138 
fûe_ty≥
;

139 
vú_˛icks
 
tc
;

140 
vú_˛icks
 
dc
;

141 
vú_˛icks
 
sc
;

142 
vú_˛icks
 
dvú
;

143 
vú_˛icks
 
s_vú
;

152 #i‡(
CHIP
 =
INTEL
 && 
_WORD_SIZE
 == 2)

153 
±
, 
pd
, 
ps
;

155 
±
 = ( (
tc
 << 
CLICK_SHIFT
Ë+ 
PAGE_SIZE
 - 1)/PAGE_SIZE;

156 
pd
 = ( (
dc
 << 
CLICK_SHIFT
Ë+ 
PAGE_SIZE
 - 1)/PAGE_SIZE;

157 
ps
 = ( (
sc
 << 
CLICK_SHIFT
Ë+ 
PAGE_SIZE
 - 1)/PAGE_SIZE;

159 i‡(
fûe_ty≥
 =
SEPARATE
) {

160 i‡(
±
 > 
MAX_PAGES
 || 
pd
 + 
ps
 > MAX_PAGESË(
ENOMEM
);

162 i‡(
±
 + 
pd
 + 
ps
 > 
MAX_PAGES
Ë(
ENOMEM
);

166 i‡(
dvú
 + 
dc
 > 
s_vú
Ë(
ENOMEM
);

168 (
OK
);

169 
	}
}

	@bsearch.c

7 
	~<°dlib.h
>

10 
b£¨ch
(c⁄° *
key
, c⁄° *
ba£
,

11 
size_t
 
nmemb
, size_à
size
,

12 (*
com∑r
)(const *, const *))

14 c⁄° *
mid_poöt
;

15 
cmp
;

17 
nmemb
 > 0) {

18 
mid_poöt
 = (*)
ba£
 + 
size
 * (
nmemb
 >> 1);

19 i‡((
cmp
 = (*
com∑r
)(
key
, 
mid_poöt
)) == 0)

20  (*)
mid_poöt
;

21 i‡(
cmp
 >= 0) {

22 
ba£
 = (*)
mid_poöt
 + 
size
;

23 
nmemb
 = (nmemb - 1) >> 1;

25 
nmemb
 >>= 1;

27  (*)
NULL
;

28 
	}
}

	@buf.c

5 
	~"öë.h
"

7 
	~<°dlib.h
>

8 
	~<°rög.h
>

10 
	~"gíîic/as£π.h
"

11 
	~"gíîic/buf.h
"

12 
	~"gíîic/ty≥.h
"

14 
INIT_PANIC
();

16 #i‡
TRACE_ENQUEUE_PROBLEM


17 
íqueue_¥obÀm
;

20 
	#USE_MALLOCS
 0

	)

22 #i‚de‡
BUF512_NR


23 
	#BUF512_NR
 ((Ë=2 ? 40 : 128)

	)

26 
	#ACC_NR
 200

	)

27 
	#CLIENT_NR
 5

	)

29 
	sbuf512


31 
buf_t
 
	mbuf_hódî
;

32 
	mbuf_d©a
[512];

33 } 
	tbuf512_t
;

35 #i‡
USE_MALLOCS


36 
PRIVATE
 
buf512_t
 *
	gbuf„rs512
;

37 
PRIVATE
 
acc_t
 *
	gac˚ss‹s
;

39 
PRIVATE
 
buf512_t
 
	gbuf„rs512
[
BUF512_NR
];

40 
PRIVATE
 
acc_t
 
	gac˚ss‹s
[
ACC_NR
];

43 
PRIVATE
 
buf512_t
 *
	gbuf512_‰ì
;

45 
PRIVATE
 
bf_‰ìªq_t
 
	g‰ìªq
[
CLIENT_NR
];

46 
PRIVATE
 
size_t
 
	gbf_buf_gøn
;

47 
PRIVATE
 
acc_t
 *
	gacc_‰ì_li°
;

49 
PUBLIC
 
size_t
 
	gbf_‰ì_buffsize
;

50 
PUBLIC
 
acc_t
 *
	gbf_ãmp‹¨y_acc
;

53 #ifde‡
bf_memªq


54 
PUBLIC
 *
	gbf_memªq_fûe
;

55 
PUBLIC
 
	gbf_memªq_löe
;

57 #ifde‡
bf_cut


58 
PUBLIC
 *
	gbf_cut_fûe
;

59 
PUBLIC
 
	gbf_cut_löe
;

61 #ifde‡
bf_∑ckIffLess


62 
PUBLIC
 *
	gbf_∑ck_fûe
;

63 
PUBLIC
 
	gbf_∑ck_löe
;

65 #ifde‡
bf_bufsize


66 
PUBLIC
 *
	gbf_bufsize_fûe
;

67 
PUBLIC
 
	gbf_bufsize_löe
;

70 
FORWARD
 
acc_t
 *
bf_smÆl_memªq
 
ARGS
(–
size_t
 
size
 ));

71 
FORWARD
 
bf_512‰ì
 
ARGS
(–
buf_t
 *
buf„r
 ));

73 
PUBLIC
 
	$bf_öô
()

75 
i
;

76 
size_t
 
size
;

77 
size_t
 
buf_s
;

79 
bf_buf_gøn

BUF_S
;

80 
buf_s
= 0;

82 #i‡
USE_MALLOCS


83 
	`¥ötf
("buf.c: mÆlo¯%d 32K-buf„r†(%dK)\n", 
BUF32K_NR
,

84 (*
buf„rs32K
Ë* 
BUF32K_NR
 / 1024);

85 
buf„rs32K

	`mÆloc
((*buf„rs32KË* 
BUF32K_NR
);

86 i‡(!
buf„rs32K
)

87 
	`ù_∑nic
(( "unableÅoálloc 32K-buffers" ));

88 
	`¥ötf
("buf.c: mÆlo¯%d 2K-buf„r†(%dK)\n", 
BUF2K_NR
,

89 (*
buf„rs2K
Ë* 
BUF2K_NR
 / 1024);

90 
buf„rs2K

	`mÆloc
((*buf„rs2KË* 
BUF2K_NR
);

91 i‡(!
buf„rs2K
)

92 
	`ù_∑nic
(( "unableÅoálloc 2K-buffers" ));

93 
	`¥ötf
("buf.c: mÆlo¯%d 512-buf„r†(%dK)\n", 
BUF512_NR
,

94 (*
buf„rs512
Ë* 
BUF512_NR
 / 1024);

95 
buf„rs512

	`mÆloc
((*buf„rs512Ë* 
BUF512_NR
);

96 i‡(!
buf„rs512
)

97 
	`ù_∑nic
(( "unableÅoálloc 512-buffers" ));

98 
	`¥ötf
("buf.c: mÆlo¯%dác˚ss‹†(%dK)\n", 
ACC_NR
,

99 (*
ac˚ss‹s
Ë* 
ACC_NR
 / 1024);

100 
ac˚ss‹s

	`mÆloc
((*ac˚ss‹sË* 
ACC_NR
);

101 i‡(!
ac˚ss‹s
)

102 
	`ù_∑nic
(( "unableÅoállocáccessors" ));

105 
i
=0;i<
BUF512_NR
;i++)

107 
buf„rs512
[
i
].
buf_hódî
.
buf_lökC
= 0;

108 
buf„rs512
[
i
].
buf_hódî
.
buf_√xt
= &buffers512[i+1];

109 
buf„rs512
[
i
].
buf_hódî
.
buf_‰ì

bf_512‰ì
;

110 
buf„rs512
[
i
].
buf_hódî
.
buf_size
= (buffers512[i].

111 
buf_d©a
);

112 
buf„rs512
[
i
].
buf_hódî
.
buf_d©a_p
buf„rs512[i].
buf_d©a
;

114 
buf„rs512
[
i
-1].
buf_hódî
.
buf_√xt
= 0;

115 
buf512_‰ì
&
buf„rs512
[0];

116 i‡((
buf„rs512
[0].
buf_d©a
Ë< 
bf_buf_gøn
)

117 
bf_buf_gøn
(
buf„rs512
[0].
buf_d©a
);

118 i‡((
buf„rs512
[0].
buf_d©a
Ë> 
buf_s
)

119 
buf_s
(
buf„rs512
[0].
buf_d©a
);

121 
i
=0;i<
ACC_NR
;i++)

123 
ac˚ss‹s
[
i
].
acc_lökC
= 0;

124 
ac˚ss‹s
[
i
].
acc_√xt
= &accessors[i+1];

126 
acc_‰ì_li°

ac˚ss‹s
;

127 
ac˚ss‹s
[
i
-1].
acc_√xt
= 0;

129 
i
=0;i<
CLIENT_NR
;i++)

130 
‰ìªq
[
i
]=0;

132 
	`as£π
 (
buf_s
 =
BUF_S
);

133 
	}
}

135 
PUBLIC
 
	$bf_log⁄
(
func
)

136 
bf_‰ìªq_t
 
func
;

138 
i
;

140 
i
=0;i<
CLIENT_NR
;i++)

141 i‡(!
‰ìªq
[
i
])

143 
‰ìªq
[
i
]=
func
;

147 
	`ù_∑nic
(( "buf.c:Åo many clients" ));

148 
	}
}

154 #i‚de‡
bf_memªq


155 
PUBLIC
 
acc_t
 *
	$bf_memªq
(
size
)

157 
PUBLIC
 
acc_t
 *
	$_bf_memªq
(
size
)

159 
size_t
 
size
;

161 
acc_t
 *
hód
, *
èû
, *
√w_acc
;

162 
i
,
j
;

163 
size_t
 
cou¡
;

165 #i‡
TRACE_ENQUEUE_PROBLEM


166 { i‡(
íqueue_¥obÀm
)

167 { 
	`whîe
(); 
	`¥ötf
("bf_memªq(%dËˇŒed wôhÉnqueue_¥obÀm\n", 
size
); } }

169 #ifde‡
bf_memªq


170 { 
	`whîe
(); 
	`¥ötf
("bf_memªq(%dËˇŒed by %s, %d\n", 
size
, 
bf_memªq_fûe
,

171 
bf_memªq_löe
); }

173 
	`as£π
 (
size
>0);

175 
hód

NULL
;

176 
size
)

178 i‡(!
acc_‰ì_li°
)

180 #i‡
DEBUG


181 { 
	`whîe
(); 
	`¥ötf
("freeingáccessors\n"); }

183 
i
=0; !
acc_‰ì_li°
 && i<
MAX_BUFREQ_PRI
; i++)

185 
j
=0; !
acc_‰ì_li°
 && j<
CLIENT_NR
; j++)

187 
bf_‰ì_buffsize
= 0;

188 i‡(
‰ìªq
[
j
])

189 (*
‰ìªq
[
j
])(
i
, 
BUF_S
);

193 i‡(!
acc_‰ì_li°
)

194 
	`ù_∑nic
(( "To fewáccessors" ));

195 
√w_acc

acc_‰ì_li°
;

196 
acc_‰ì_li°
acc_‰ì_li°->
acc_√xt
;

197 #i‡
DEBUG
 & 256

198 { 
	`whîe
(); 
	`¥ötf
("gŸác˚ss‹ %d\n", 
√w_acc
-
ac˚ss‹s
); }

200 
√w_acc
->
acc_lökC
= 1;

201 
√w_acc
->
acc_buf„r
= 0;

203 #i‡
DEBUG
 & 256

204 { 
	`whîe
(); 
	`¥ötf
("looking for 512 byte buffer\n"); }

206 i‡(
buf512_‰ì
)

208 
buf512_t
 *
buf512
;

210 #i‡
DEBUG
 & 256

211 { 
	`whîe
(); 
	`¥ötf
("foundá 512 byte buffer\n"); }

213 
buf512

buf512_‰ì
;

214 
buf512_‰ì

buf512
->
buf_hódî
.
buf_√xt
;

215 
	`as£π
 (!
buf512
->
buf_hódî
.
buf_lökC
);

216 
buf512
->
buf_hódî
.
buf_lökC
= 1;

217 
	`as£π
 (
buf512
->
buf_hódî
.
buf_‰ì
 =
bf_512‰ì
);

218 
	`as£π
 (
buf512
->
buf_hódî
.
buf_size
 =(buf512->
buf_d©a
));

219 
	`as£π
 (
buf512
->
buf_hódî
.
buf_d©a_p
 =buf512->
buf_d©a
);

220 
√w_acc
->
acc_buf„r
&
buf512
->
buf_hódî
;

221 
buf512
->
buf_hódî
.
buf_√xt
= buf512;

223 #i‡
DEBUG


225 { 
	`whîe
(); 
	`¥ötf
("unableÅo findá 512 byte buffer\n"); }

227 i‡(!
√w_acc
->
acc_buf„r
)

229 #i‡
DEBUG


230 { 
	`whîe
(); 
	`¥ötf
("freeing buffers\n"); }

232 
bf_‰ì_buffsize
= 0;

233 
i
=0; 
bf_‰ì_buffsize
<
size
 && i<
MAX_BUFREQ_PRI
;

234 
i
++)

235 
j
=0; 
bf_‰ì_buffsize
<
size
 && j<
CLIENT_NR
;

236 
j
++)

237 i‡(
‰ìªq
[
j
])

238 (*
‰ìªq
[
j
])(
i
, 
size
);

240 i‡(
bf_‰ì_buffsize
<
size
)

241 
	`ù_∑nic
(( "notÉnough buffers freed" ));

247 i‡(!
hód
)

248 
hód

√w_acc
;

250 
èû
->
acc_√xt

√w_acc
;

251 
èû

√w_acc
;

253 
cou¡

èû
->
acc_buf„r
->
buf_size
;

254 i‡(
cou¡
 > 
size
)

255 
cou¡

size
;

257 
èû
->
acc_off£t
= 0;

258 
èû
->
acc_Àngth

cou¡
;

259 
size
 -
cou¡
;

261 
èû
->
acc_√xt
= 0;

262 #i‡
DEBUG


263 
	`bf_chkbuf
(
hód
);

265 #i‡
DEBUG
 & 256

266 { 
	`whîe
(); 
	`¥ötf
("ac¯0x%x ha†buf„∏0x%x\n", 
hód
, hód->
acc_buf„r
); }

268  
hód
;

269 
	}
}

275 
PRIVATE
 
acc_t
 *
	$bf_smÆl_memªq
(
size
)

276 
size_t
 
size
;

278 
acc_t
 *
hód
, *
èû
, *
√w_acc
;

279 
i
,
j
;

280 
size_t
 
cou¡
;

282 #i‡
TRACE_ENQUEUE_PROBLEM


283 { i‡(
íqueue_¥obÀm
)

284 { 
	`whîe
(); 
	`¥ötf
("bf_smÆl_memªq(%dËˇŒed wôhÉnqueue_¥obÀm\n", 
size
);

287 #i‡
DEBUG
 & 256

288 { 
	`whîe
(); 
	`¥ötf
("bf_smÆl_memªq(%d)\n", 
size
); }

291 
	`as£π
 (
size
>0);

293 
hód

NULL
;

294 
size
)

296 i‡(!
acc_‰ì_li°
)

298 #i‡
DEBUG


299 { 
	`whîe
(); 
	`¥ötf
("freeingáccessors\n"); }

301 
i
=0; !
acc_‰ì_li°
 && i<
MAX_BUFREQ_PRI
; i++)

303 
j
=0; !
acc_‰ì_li°
 && j<
CLIENT_NR
; j++)

305 
bf_‰ì_buffsize
= 0;

306 i‡(
‰ìªq
[
j
])

307 (*
‰ìªq
[
j
])(
i
, 
BUF_S
);

311 
√w_acc

acc_‰ì_li°
;

312 i‡(!
√w_acc
)

313 
	`ù_∑nic
(( "buf.c: out ofáccessors" ));

314 
acc_‰ì_li°

√w_acc
->
acc_√xt
;

315 #i‡
DEBUG
 & 256

316 { 
	`whîe
(); 
	`¥ötf
("gŸác˚ss‹ %d\n", 
√w_acc
-
ac˚ss‹s
); }

318 
√w_acc
->
acc_lökC
= 1;

320 i‡(
size
 >(
buf512_‰ì
->
buf_d©a
))

322 i‡(
buf512_‰ì
)

324 
buf512_t
 *
buf512
;

326 #i‡
DEBUG
 & 256

327 { 
	`whîe
(); 
	`¥ötf
("foundá 512 byte buffer\n"); }

329 
buf512

buf512_‰ì
;

330 
buf512_‰ì

buf512
->
buf_hódî
.
buf_√xt
;

331 
	`as£π
 (!
buf512
->
buf_hódî
.
buf_lökC
);

332 
buf512
->
buf_hódî
.
buf_lökC
= 1;

333 
	`as£π
 (
buf512
->
buf_hódî
.
buf_‰ì
 =
bf_512‰ì
);

334 
	`as£π
 (
buf512
->
buf_hódî
.
buf_size
 =(buf512->
buf_d©a
));

335 
	`as£π
 (
buf512
->
buf_hódî
.
buf_d©a_p
 =buf512->
buf_d©a
);

336 
√w_acc
->
acc_buf„r
&
buf512
->
buf_hódî
;

337 
buf512
->
buf_hódî
.
buf_√xt
= buf512;

345 i‡(!
hód
)

346 
hód

√w_acc
;

348 
èû
->
acc_√xt

√w_acc
;

349 
èû

√w_acc
;

351 
cou¡

èû
->
acc_buf„r
->
buf_size
;

352 i‡(
cou¡
 > 
size
)

353 
cou¡

size
;

355 
èû
->
acc_off£t
= 0;

356 
èû
->
acc_Àngth

cou¡
;

357 
size
 -
cou¡
;

359 i‡(
size
)

361 
√w_acc
->
acc_lökC
= 0;

362 
√w_acc
->
acc_√xt

acc_‰ì_li°
;

363 
acc_‰ì_li°

√w_acc
;

364 
√w_acc

	`bf_memªq
(
size
);

365 i‡(!
hód
)

366 
hód

√w_acc
;

368 
èû
->
acc_√xt

√w_acc
;

371 
èû
->
acc_√xt
= 0;

372  
hód
;

373 
	}
}

375 
PUBLIC
 
	$bf_a‰ì
(
acc_±r
)

376 
acc_t
 *
acc_±r
;

378 
acc_t
 *
tmp_acc
;

379 
buf_t
 *
tmp_buf
;

381 
acc_±r
)

383 
	`as£π
 (
acc_±r
->
acc_lökC
);

384 
acc_±r
->
acc_lökC
--;

385 i‡(!
acc_±r
->
acc_lökC
)

387 
tmp_buf

acc_±r
->
acc_buf„r
;

388 
	`as£π
 (
tmp_buf
);

389 
	`as£π
 (
tmp_buf
->
buf_lökC
);

390 i‡(!--
tmp_buf
->
buf_lökC
)

392 
bf_‰ì_buffsize
 +
tmp_buf
->
buf_size
;

393 
tmp_buf
->
	`buf_‰ì
(tmp_buf);

395 
tmp_acc

acc_±r
;

396 
acc_±r
acc_±r->
acc_√xt
;

397 
tmp_acc
->
acc_√xt

acc_‰ì_li°
;

398 
acc_‰ì_li°

tmp_acc
;

403 
	}
}

405 
PUBLIC
 
acc_t
 *
	$bf_du∑cc
(
acc_±r
)

406 
acc_t
 *
acc_±r
;

408 
acc_t
 *
√w_acc
;

409 
i
, 
j
;

411 #i‡
TRACE_ENQUEUE_PROBLEM


412 { i‡(
íqueue_¥obÀm
)

413 { 
	`whîe
(); 
	`¥ötf
("bf_du∑cc(0x%xËˇŒed wôhÉnqueue_¥obÀm\n", 
acc_±r
);

418 i‡(!
acc_‰ì_li°
)

420 #i‡
DEBUG


421 { 
	`whîe
(); 
	`¥ötf
("freeingáccessors\n"); }

423 
i
=0; !
acc_‰ì_li°
 && i<
MAX_BUFREQ_PRI
; i++)

425 
j
=0; !
acc_‰ì_li°
 && j<
CLIENT_NR
; j++)

427 
bf_‰ì_buffsize
= 0;

428 i‡(
‰ìªq
[
j
])

429 (*
‰ìªq
[
j
])(
i
, 
BUF_S
);

433 
√w_acc

acc_‰ì_li°
;

434 i‡(!
√w_acc
)

435 
	`ù_∑nic
(( "buf.c: out ofáccessors" ));

436 
acc_‰ì_li°

√w_acc
->
acc_√xt
;

437 #i‡
DEBUG
 & 256

438 { 
	`whîe
(); 
	`¥ötf
("gŸác˚ss‹ %d\n", 
√w_acc
-
ac˚ss‹s
); }

441 *
√w_acc
*
acc_±r
;

442 i‡(
acc_±r
->
acc_√xt
)

443 
acc_±r
->
acc_√xt
->
acc_lökC
++;

444 i‡(
acc_±r
->
acc_buf„r
)

445 
acc_±r
->
acc_buf„r
->
buf_lökC
++;

446 
√w_acc
->
acc_lökC
= 1;

447  
√w_acc
;

448 
	}
}

450 #ifde‡
bf_bufsize


451 
PUBLIC
 
size_t
 
	$_bf_bufsize
(
acc_±r
)

453 
PUBLIC
 
size_t
 
	$bf_bufsize
(
acc_±r
)

455 
acc_t
 *
acc_±r
;

457 
size_t
 
size
;

459 #ifde‡
bf_bufsize


460 { 
	`whîe
(); 
	`¥ötf
("bf_bufsize(0x%xËˇŒed by %s, %d\n", 
acc_±r
,

461 
bf_bufsize_fûe
, 
bf_bufsize_löe
); }

464 
	`as£π
(
acc_±r
);

466 
size
=0;

468 
acc_±r
)

470 
	`as£π
(
acc_±r
 >
ac˚ss‹s
 &&ácc_±∏<&ac˚ss‹s[
ACC_NR
-1]);

471 
size
 +
acc_±r
->
acc_Àngth
;

472 
acc_±r
acc_±r->
acc_√xt
;

474 #i‡
DEBUG
 & 256

475 { 
	`whîe
(); 
	`¥ötf
("bf_bufsize(...)%d\n", 
size
); }

477  
size
;

478 
	}
}

480 #i‚de‡
bf_∑ckIffLess


481 
PUBLIC
 
acc_t
 *
	$bf_∑ckIffLess
(
∑ck
, 
mö_Àn
)

483 
PUBLIC
 
acc_t
 *
	$_bf_∑ckIffLess
(
∑ck
, 
mö_Àn
)

485 
acc_t
 *
∑ck
;

486 
mö_Àn
;

488 i‡(!
∑ck
 ||Öack->
acc_Àngth
 >
mö_Àn
)

489  
∑ck
;

491 #ifde‡
bf_∑ckIffLess


492 { 
	`whîe
(); 
	`¥ötf
("ˇŒög bf_∑ck beˇu£ o‡%†%d: %d\n", 
bf_∑ck_fûe
,

493 
bf_∑ck_löe
, 
mö_Àn
); }

495  
	`bf_∑ck
(
∑ck
);

496 
	}
}

498 
PUBLIC
 
acc_t
 *
	$bf_∑ck
(
ﬁd_acc
)

499 
acc_t
 *
ﬁd_acc
;

501 
acc_t
 *
√w_acc
, *
acc_±r_ﬁd
, *
acc_±r_√w
;

502 
size_t
 
size
, 
off£t_ﬁd
, 
off£t_√w
, 
block_size
, 
block_size_ﬁd
;

505 i‡(!
ﬁd_acc
 || !ﬁd_acc->
acc_√xt
 && old_acc->
acc_lökC
 == 1 &&

506 (!
ﬁd_acc
->
acc_buf„r
 || old_acc->acc_buf„r->
buf_lökC
 == 1))

507  
ﬁd_acc
;

509 
size

	`bf_bufsize
(
ﬁd_acc
);

510 
√w_acc

	`bf_memªq
(
size
);

511 
acc_±r_ﬁd

ﬁd_acc
;

512 
acc_±r_√w

√w_acc
;

513 
off£t_ﬁd
= 0;

514 
off£t_√w
= 0;

515 
size
)

517 
	`as£π
 (
acc_±r_ﬁd
);

518 i‡(
off£t_ﬁd
 =
acc_±r_ﬁd
->
acc_Àngth
)

520 
off£t_ﬁd
= 0;

521 
acc_±r_ﬁd
acc_±r_ﬁd->
acc_√xt
;

524 
	`as£π
 (
off£t_ﬁd
 < 
acc_±r_ﬁd
->
acc_Àngth
);

525 
block_size_ﬁd

acc_±r_ﬁd
->
acc_Àngth
 - 
off£t_ﬁd
;

526 
	`as£π
 (
acc_±r_√w
);

527 i‡(
off£t_√w
 =
acc_±r_√w
->
acc_Àngth
)

529 
off£t_√w
= 0;

530 
acc_±r_√w
acc_±r_√w->
acc_√xt
;

533 
	`as£π
 (
off£t_√w
 < 
acc_±r_√w
->
acc_Àngth
);

534 
block_size

acc_±r_√w
->
acc_Àngth
 - 
off£t_√w
;

535 i‡(
block_size
 > 
block_size_ﬁd
)

536 
block_size

block_size_ﬁd
;

537 
	`mem˝y
(
	`±r2acc_d©a
(
acc_±r_√w
)+
off£t_√w
,

538 
	`±r2acc_d©a
(
acc_±r_ﬁd
)+
off£t_ﬁd
, 
block_size
);

539 
off£t_√w
 +
block_size
;

540 
off£t_ﬁd
 +
block_size
;

541 
size
 -
block_size
;

543 
	`bf_a‰ì
(
ﬁd_acc
);

544  
√w_acc
;

545 
	}
}

547 #i‚de‡
bf_cut


548 
PUBLIC
 
acc_t
 *
	$bf_cut
 (
d©a
, 
off£t
, 
Àngth
)

550 
PUBLIC
 
acc_t
 *
	$_bf_cut
 (
d©a
, 
off£t
, 
Àngth
)

552 
acc_t
 *
d©a
;

553 
off£t
;

554 
Àngth
;

556 
acc_t
 *
hód
, *
èû
;

558 #i‡
DEBUG
 & 256

559 { 
	`whîe
(); 
	`¥ötf
("bf_cut(.., %u, %uËˇŒed\n", 
off£t
, 
Àngth
); }

560 #ifde‡
bf_cut


561 { 
	`whîe
(); 
	`¥ötf
("bf_cut_fûe%s, bf_cut_löe%d\n", 
bf_cut_fûe
,

562 
bf_cut_löe
); }

565 i‡(!
d©a
 && !
off£t
 && !
Àngth
)

567 #ifde‡
bf_cut


568 i‡(!
d©a
)

569 { 
	`whîe
(); 
	`¥ötf
("bf_cut_fûe%s, bf_cut_löe%d\n", 
bf_cut_fûe
,

570 
bf_cut_löe
); }

572 
	`as£π
(
d©a
);

573 #i‡
DEBUG


574 
	`bf_chkbuf
(
d©a
);

576 i‡(!
Àngth
)

578 
hód

	`bf_du∑cc
(
d©a
);

579 
	`bf_a‰ì
(
hód
->
acc_√xt
);

580 
hód
->
acc_√xt
= 0;

581 
hód
->
acc_Àngth
= 0;

582 #i‡
DEBUG


583 
	`bf_chkbuf
(
d©a
);

585  
hód
;

587 
d©a
 && 
off£t
>=d©a->
acc_Àngth
)

589 
off£t
 -
d©a
->
acc_Àngth
;

590 
d©a
d©a->
acc_√xt
;

592 #ifde‡
bf_cut


593 i‡(!
d©a
)

594 { 
	`whîe
(); 
	`¥ötf
("bf_cut_fûe%s, bf_cut_löe%d\n", 
bf_cut_fûe
,

595 
bf_cut_löe
); }

597 
	`as£π
 (
d©a
);

598 
hód

	`bf_du∑cc
(
d©a
);

599 
	`bf_a‰ì
(
hód
->
acc_√xt
);

600 
hód
->
acc_√xt
= 0;

601 
hód
->
acc_off£t
 +
off£t
;

602 
hód
->
acc_Àngth
 -
off£t
;

603 i‡(
Àngth
 >
hód
->
acc_Àngth
)

604 
Àngth
 -
hód
->
acc_Àngth
;

607 
hód
->
acc_Àngth

Àngth
;

608 
Àngth
= 0;

610 
èû

hód
;

611 
d©a
d©a->
acc_√xt
;

612 
d©a
 && 
Àngth
 &&Üígth>=d©a->
acc_Àngth
)

614 
èû
->
acc_√xt

	`bf_du∑cc
(
d©a
);

615 
èû
èû->
acc_√xt
;

616 
	`bf_a‰ì
(
èû
->
acc_√xt
);

617 
èû
->
acc_√xt
= 0;

618 
d©a
d©a->
acc_√xt
;

619 
Àngth
 -
èû
->
acc_Àngth
;

621 i‡(
Àngth
)

623 #ifde‡
bf_cut


624 i‡(!
d©a
)

625 { 
	`whîe
(); 
	`¥ötf
("bf_cut_fûe%s, bf_cut_löe%d\n", 
bf_cut_fûe
,

626 
bf_cut_löe
); }

628 
	`as£π
 (
d©a
);

629 
èû
->
acc_√xt

	`bf_du∑cc
(
d©a
);

630 
èû
èû->
acc_√xt
;

631 
	`bf_a‰ì
(
èû
->
acc_√xt
);

632 
èû
->
acc_√xt
= 0;

633 
èû
->
acc_Àngth

Àngth
;

635 #i‡
DEBUG


636 
	`bf_chkbuf
(
d©a
);

638  
hód
;

639 
	}
}

645 
PUBLIC
 
acc_t
 *
	$bf_≠≥nd
(
d©a_fú°
, 
d©a_£c⁄d
)

646 
acc_t
 *
d©a_fú°
;

647 
acc_t
 *
d©a_£c⁄d
;

649 
acc_t
 *
hód
, *
èû
, *
√w_acc
, *
acc_±r_√w
, 
tmp_acc
, *
cuº
;

650 *
§c_±r
, *
d°_±r
;

651 
size_t
 
size
, 
off£t_ﬁd
, 
off£t_√w
, 
block_size_ﬁd
, 
block_size
;

653 #i‡
TRACE_ENQUEUE_PROBLEM


654 { i‡(
íqueue_¥obÀm
)

655 { 
	`whîe
(); 
	`¥ötf
("bf_append(0x%x, 0x%x) called withÉnqueue_problem\n",

656 
d©a_fú°
, 
d©a_£c⁄d
); } }

658 #i‡
DEBUG
 & 256

659 { 
	`whîe
(); 
	`¥ötf
("BF_Aµíd(0x%x, 0x%xËˇŒed\n", 
d©a_fú°
, 
d©a_£c⁄d
); }

661 i‡(!
d©a_fú°
)

662  
d©a_£c⁄d
;

663 i‡(!
d©a_£c⁄d
)

664  
d©a_fú°
;

666 
hód
= 0;

667 
d©a_fú°
)

669 i‡(
d©a_fú°
->
acc_lökC
 == 1)

670 
cuº

d©a_fú°
;

673 
cuº

	`bf_du∑cc
(
d©a_fú°
);

674 
	`as£π
 (
cuº
->
acc_lökC
 == 1);

675 
	`bf_a‰ì
(
d©a_fú°
);

677 
d©a_fú°

cuº
->
acc_√xt
;

678 i‡(!
cuº
->
acc_Àngth
)

680 
cuº
->
acc_√xt
= 0;

681 
	`bf_a‰ì
(
cuº
);

684 i‡(!
hód
)

685 
hód

cuº
;

687 
èû
->
acc_√xt

cuº
;

688 
èû

cuº
;

690 i‡(!
hód
)

691  
d©a_£c⁄d
;

692 
èû
->
acc_√xt
= 0;

694 
d©a_£c⁄d
 && !d©a_£c⁄d->
acc_Àngth
)

696 
cuº

d©a_£c⁄d
;

697 
d©a_£c⁄d
d©a_£c⁄d->
acc_√xt
;

698 i‡(
d©a_£c⁄d
)

699 
d©a_£c⁄d
->
acc_lökC
++;

700 
	`bf_a‰ì
(
cuº
);

702 i‡(!
d©a_£c⁄d
)

703  
hód
;

705 i‡(
èû
->
acc_Àngth
 + 
d©a_£c⁄d
->acc_length >

706 
èû
->
acc_buf„r
->
buf_size
)

708 
èû
->
acc_√xt

d©a_£c⁄d
;

709  
hód
;

712 i‡(
èû
->
acc_buf„r
->
buf_size
 =
bf_buf_gøn
 &&

713 
èû
->
acc_buf„r
->
buf_lökC
 == 1)

715 i‡(
èû
->
acc_off£t
)

717 
	`memmove
(
èû
->
acc_buf„r
->
buf_d©a_p
,

718 
	`±r2acc_d©a
(
èû
),Åaû->
acc_Àngth
);

719 
èû
->
acc_off£t
= 0;

721 
d°_±r

	`±r2acc_d©a
(
èû
Ë+Åaû->
acc_Àngth
;

722 
§c_±r

	`±r2acc_d©a
(
d©a_£c⁄d
);

723 
	`mem˝y
(
d°_±r
, 
§c_±r
, 
d©a_£c⁄d
->
acc_Àngth
);

724 
èû
->
acc_Àngth
 +
d©a_£c⁄d
->acc_length;

725 
èû
->
acc_√xt

d©a_£c⁄d
->acc_next;

726 i‡(
d©a_£c⁄d
->
acc_√xt
)

727 
d©a_£c⁄d
->
acc_√xt
->
acc_lökC
++;

728 
	`bf_a‰ì
(
d©a_£c⁄d
);

729  
hód
;

732 
√w_acc

	`bf_smÆl_memªq
(
èû
->
acc_Àngth
+
d©a_£c⁄d
->acc_length);

733 
acc_±r_√w

√w_acc
;

734 
off£t_ﬁd
= 0;

735 
off£t_√w
= 0;

736 
size

èû
->
acc_Àngth
;

737 
size
)

739 
	`as£π
 (
acc_±r_√w
);

740 i‡(
off£t_√w
 =
acc_±r_√w
->
acc_Àngth
)

742 
off£t_√w
= 0;

743 
acc_±r_√w
acc_±r_√w->
acc_√xt
;

746 
	`as£π
 (
off£t_√w
 < 
acc_±r_√w
->
acc_Àngth
);

747 
	`as£π
 (
off£t_ﬁd
 < 
èû
->
acc_Àngth
);

748 
block_size_ﬁd

èû
->
acc_Àngth
 - 
off£t_ﬁd
;

749 
block_size

acc_±r_√w
->
acc_Àngth
 - 
off£t_√w
;

750 i‡(
block_size
 > 
block_size_ﬁd
)

751 
block_size

block_size_ﬁd
;

752 
	`mem˝y
(
	`±r2acc_d©a
(
acc_±r_√w
)+
off£t_√w
,

753 
	`±r2acc_d©a
(
èû
)+
off£t_ﬁd
, 
block_size
);

754 
off£t_√w
 +
block_size
;

755 
off£t_ﬁd
 +
block_size
;

756 
size
 -
block_size
;

758 
off£t_ﬁd
= 0;

759 
size

d©a_£c⁄d
->
acc_Àngth
;

760 
size
)

762 
	`as£π
 (
acc_±r_√w
);

763 i‡(
off£t_√w
 =
acc_±r_√w
->
acc_Àngth
)

765 
off£t_√w
= 0;

766 
acc_±r_√w
acc_±r_√w->
acc_√xt
;

769 
	`as£π
 (
off£t_√w
 < 
acc_±r_√w
->
acc_Àngth
);

770 
	`as£π
 (
off£t_ﬁd
 < 
d©a_£c⁄d
->
acc_Àngth
);

771 
block_size_ﬁd

d©a_£c⁄d
->
acc_Àngth
 - 
off£t_ﬁd
;

772 
block_size

acc_±r_√w
->
acc_Àngth
 - 
off£t_√w
;

773 i‡(
block_size
 > 
block_size_ﬁd
)

774 
block_size

block_size_ﬁd
;

775 
	`mem˝y
(
	`±r2acc_d©a
(
acc_±r_√w
)+
off£t_√w
,

776 
	`±r2acc_d©a
(
d©a_£c⁄d
)+
off£t_ﬁd
, 
block_size
);

777 
off£t_√w
 +
block_size
;

778 
off£t_ﬁd
 +
block_size
;

779 
size
 -
block_size
;

781 
tmp_acc
*
èû
;

782 *
èû
*
√w_acc
;

783 *
√w_acc

tmp_acc
;

785 
	`bf_a‰ì
(
√w_acc
);

786 
èû
->
acc_√xt
)

787 
èû
èû->
acc_√xt
;

789 
èû
->
acc_√xt

d©a_£c⁄d
->acc_next;

790 i‡(
d©a_£c⁄d
->
acc_√xt
)

791 
d©a_£c⁄d
->
acc_√xt
->
acc_lökC
++;

792 
	`bf_a‰ì
(
d©a_£c⁄d
);

793  
hód
;

794 
	}
}

796 
PRIVATE
 
	$bf_512‰ì
(
buf„r
)

797 
buf_t
 *
buf„r
;

799 
buf512_t
 *
buf512
;

801 
buf512

buf„r
->
buf_√xt
;

802 
buf512
->
buf_hódî
.
buf_√xt

buf512_‰ì
;

803 
buf512_‰ì

buf512
;

804 
	}
}

806 
PUBLIC
 
	$bf_check_Æl_bufs
()

808 
j
;

809 
accs
;

810 
acc_t
 *
acc
;

811 
bufs
;

812 
buf512_t
 *
buf512
;

814 
j
=0; j<
CLIENT_NR
; j++)

816 i‡(
‰ìªq
[
j
])

817 (*
‰ìªq
[
j
])(-1, 0);

821 
accs
= 0;

822 
acc

acc_‰ì_li°
;ácc;áccacc->
acc_√xt
)

823 
accs
++;

824 
	`¥ötf
("numbî o‡‰ìácc†i†%d,Éx≥˘ed %d\n", 
accs
, 
ACC_NR
);

827 
bufs
= 0;

828 
buf512

buf512_‰ì
; buf512; buf512=

829 (
buf512_t
 *)
buf512
->
buf_hódî
.
buf_√xt
)

830 
bufs
++;

832 
	`¥ötf
("numbî o‡‰ì 512 byã buf„r†i†%d,Éx≥˘ed %d\n", 
bufs
,

833 
BUF512_NR
);

834 
	}
}

	@buf.h

5 #i‚de‡
BUF_H


6 
	#BUF_H


	)

8 #i‚de‡
BUF_S


9 
	#BUF_S
 32768

	)

12 
	#MAX_BUFREQ_PRI
 10

	)

14 
	#ETH_PRI_PORTBUFS
 3

	)

15 
	#ETH_PRI_EXP_FDBUFS
 4

	)

16 
	#ETH_PRI_FDBUFS
 5

	)

18 
	#ICMP_PRI_QUEUE
 1

	)

20 
	#TCP_PRI_FRAG2SEND
 4

	)

21 
	#TCP_PRI_CONNwoUSER
 6

	)

22 
	#TCP_PRI_CONN_INUSE
 9

	)

24 
	#UDP_PRI_EXP_FDBUFS
 5

	)

25 
	#UDP_PRI_FDBUFS
 6

	)

27 
	gbuf
;

28 (*
	tbuf‰ì_t
Ë
	tARGS
(–
	tbuf
 *
	tbuf„r
 ));

29 (*
	tbf_‰ìªq_t
Ë
	tARGS
(–
	t¥i‹ôy
, 
	tsize_t
 
	tªqsize
 ));

31 
	sbuf


33 
buf_lökC
;

34 *
buf_√xt
;

35 
buf‰ì_t
 
buf_‰ì
;

36 
size_t
 
buf_size
;

37 *
buf_d©a_p
;

38 } 
	tbuf_t
;

40 
	sacc


42 
acc_lökC
;

43 
acc_off£t
, 
acc_Àngth
;

44 
buf_t
 *
acc_buf„r
;

45 
acc
 *
acc_√xt
, *
acc_ext_lök
;

46 } 
	tacc_t
;

48 
size_t
 
bf_‰ì_buffsize
;

49 
acc_t
 *
bf_ãmp‹¨y_acc
;

53 #i‡
DEBUG
 & 256

54 
	#bf_memªq
(
a
Ë(
bf_memªq_fûe

__FILE__
, 
bf_memªq_löe

__LINE__
, \

	)

55 
	$_bf_memªq
(
a
))

58 #i‡
DEBUG
 & 256

59 
	#bf_cut
(
a
,
b
,
c
Ë(
bf_cut_fûe

__FILE__
, 
bf_cut_löe

__LINE__
, \

	)

60 
	$_bf_cut
(
a
,
b
,
c
))

63 #i‡
DEBUG
 & 256

64 
	#bf_∑ckIffLess
(
a
,
b
Ë(
bf_∑ck_fûe

__FILE__
, 
bf_∑ck_löe

__LINE__
, \

	)

65 
	$_bf_∑ckIffLess
(
a
,
b
))

68 #i‡
DEBUG
 & 256

69 
	#bf_bufsize
(
a
Ë(
bf_bufsize_fûe

__FILE__
, 
bf_bufsize_löe

__LINE__
, \

	)

70 
	$_bf_bufsize
(
a
))

73 #ifde‡
bf_memªq


74 *
bf_memªq_fûe
;

75 
bf_memªq_löe
;

77 #ifde‡
bf_cut


78 *
bf_cut_fûe
;

79 
bf_cut_löe
;

81 #ifde‡
bf_∑ckIffLess


82 *
bf_∑ck_fûe
;

83 
bf_∑ck_löe
;

85 #ifde‡
bf_bufsize


86 *
bf_bufsize_fûe
;

87 
bf_bufsize_löe
;

92 
bf_öô
 
	`ARGS
(( ));

93 
bf_log⁄
 
	`ARGS
(–
bf_‰ìªq_t
 
func
 ));

95 #i‚de‡
bf_memªq


96 
acc_t
 *
bf_memªq
 
	`ARGS
(–
size
));

98 
acc_t
 *
_bf_memªq
 
	`ARGS
(–
size
));

102 
acc_t
 *
bf_du∑cc
 
	`ARGS
(–acc_à*
acc
 ));

105 
bf_a‰ì
 
	`ARGS
(–
acc_t
 *
acc
));

108 
acc_t
 *
bf_∑ck
 
	`ARGS
(–acc_à*
∑ck
));

112 #i‚de‡
bf_∑ckIffLess


113 
acc_t
 *
bf_∑ckIffLess
 
	`ARGS
(–acc_à*
∑ck
, 
mö_Àn
 ));

115 
acc_t
 *
_bf_∑ckIffLess
 
	`ARGS
(–acc_à*
∑ck
, 
mö_Àn
 ));

119 #i‚de‡
bf_bufsize


120 
size_t
 
bf_bufsize
 
	`ARGS
(–
acc_t
 *
∑ck
));

122 
size_t
 
_bf_bufsize
 
	`ARGS
(–
acc_t
 *
∑ck
));

127 #i‚de‡
bf_cut


128 
acc_t
 *
bf_cut
 
	`ARGS
(–acc_à*
d©a
, 
off£t
,

129 
Àngth
 ));

131 
acc_t
 *
_bf_cut
 
	`ARGS
(–acc_à*
d©a
, 
off£t
,

132 
Àngth
 ));

138 
acc_t
 *
bf_≠≥nd
 
	`ARGS
(–acc_à*
d©a_fú°
,ácc_à*
d©a_£c⁄d
 ));

146 
	#±r2acc_d©a
–
a
Ë(
bf_ãmp‹¨y_acc
=◊), \

	)

147 (&
bf_ãmp‹¨y_acc
->
acc_buf„r
->
buf_d©a_p
[bf_temporary_acc-> \

148 
acc_off£t
]))

150 
	#bf_chkbuf
(
buf
Ë((buf)? (
	`as£π
((buf)->
acc_lökC
>0), \

	)

151 
	`as£π
((
buf
)->
acc_buf„r
), \

152 
	`as£π
((
buf
)->
acc_buf„r
->
buf_lökC
>0)) : 0)

154 
bf_check_Æl_bufs
 
	`ARGS
(( ));

	@byte_order.h

1 
	#CHAR_UNSIGNED
 0

	)

2 
	#MSB_AT_LOW_ADDRESS
 0

	)

3 
	#MSW_AT_LOW_ADDRESS
 0

	)

4 
	#FL_MSB_AT_LOW_ADDRESS
 0

	)

5 
	#FL_MSW_AT_LOW_ADDRESS
 0

	)

6 
	#FL_MSL_AT_LOW_ADDRESS
 0

	)

	@bzero.c

1 
	~<lib.h
>

4 
	~<°rög.h
>

6 
	$bzîo
(
d°
, 
Àngth
)

7 *
d°
;

8 
size_t
 
Àngth
;

10 (Ë
	`mem£t
(
d°
, 0, 
Àngth
);

11 
	}
}

	@cache.c

15 
	~"fs.h
"

16 
	~<möix/com.h
>

17 
	~<möix/boŸ.h
>

18 
	~"buf.h
"

19 
	~"fûe.h
"

20 
	~"Âroc.h
"

21 
	~"su≥r.h
"

23 
FORWARD
 
_PROTOTYPE
–
rm_Ãu
, (
buf
 *
bp
) );

28 
PUBLIC
 
buf
 *
	$gë_block
(
dev
, 
block
, 
⁄ly_£¨ch
)

29 
dev_t
 
dev
;

30 
block_t
 
block
;

31 
⁄ly_£¨ch
;

48 
b
;

49 
buf
 *
bp
, *
¥ev_±r
;

56 i‡(
dev
 !
NO_DEV
) {

57 
b
 = (Ë
block
 & 
HASH_MASK
;

58 
bp
 = 
buf_hash
[
b
];

59 
bp
 !
NIL_BUF
) {

60 i‡(
bp
->
b_blockƒ
 =
block
 && bp->
b_dev
 =
dev
) {

62 i‡(
bp
->
b_cou¡
 =0Ë
	`rm_Ãu
(bp);

63 
bp
->
b_cou¡
++;

64 (
bp
);

67 
bp
 = bp->
b_hash
;

73 i‡((
bp
 = 
‰⁄t
Ë=
NIL_BUF
Ë
	`∑nic
("Æ»buf„r†ö u£", 
NR_BUFS
);

74 
	`rm_Ãu
(
bp
);

77 
b
 = (Ë
bp
->
b_blockƒ
 & 
HASH_MASK
;

78 
¥ev_±r
 = 
buf_hash
[
b
];

79 i‡(
¥ev_±r
 =
bp
) {

80 
buf_hash
[
b
] = 
bp
->
b_hash
;

83 
¥ev_±r
->
b_hash
 !
NIL_BUF
)

84 i‡(
¥ev_±r
->
b_hash
 =
bp
) {

85 
¥ev_±r
->
b_hash
 = 
bp
->b_hash;

88 
¥ev_±r
 =Öªv_±r->
b_hash
;

95 i‡(
bp
->
b_dev
 !
NO_DEV
) {

96 i‡(
bp
->
b_dút
 =
DIRTY
Ë
	`ÊushÆl
(bp->
b_dev
);

97 #i‡
ENABLE_CACHE2


98 
	`put_block2
(
bp
);

103 
bp
->
b_dev
 = 
dev
;

104 
bp
->
b_blockƒ
 = 
block
;

105 
bp
->
b_cou¡
++;

106 
b
 = (Ë
bp
->
b_blockƒ
 & 
HASH_MASK
;

107 
bp
->
b_hash
 = 
buf_hash
[
b
];

108 
buf_hash
[
b
] = 
bp
;

111 i‡(
dev
 !
NO_DEV
) {

112 #i‡
ENABLE_CACHE2


113 i‡(
	`gë_block2
(
bp
, 
⁄ly_£¨ch
)) ;

116 i‡(
⁄ly_£¨ch
 =
PREFETCH
Ë
bp
->
b_dev
 = 
NO_DEV
;

118 i‡(
⁄ly_£¨ch
 =
NORMAL
Ë
	`rw_block
(
bp
, 
READING
);

120 (
bp
);

121 
	}
}

127 
PUBLIC
 
	$put_block
(
bp
, 
block_ty≥
)

128 
buf
 *
bp
;

129 
block_ty≥
;

140 i‡(
bp
 =
NIL_BUF
) ;

142 
bp
->
b_cou¡
--;

143 i‡(
bp
->
b_cou¡
 != 0) ;

145 
bufs_ö_u£
--;

152 i‡(
block_ty≥
 & 
ONE_SHOT
) {

156 
bp
->
b_¥ev
 = 
NIL_BUF
;

157 
bp
->
b_√xt
 = 
‰⁄t
;

158 i‡(
‰⁄t
 =
NIL_BUF
)

159 
ª¨
 = 
bp
;

161 
‰⁄t
->
b_¥ev
 = 
bp
;

162 
‰⁄t
 = 
bp
;

167 
bp
->
b_¥ev
 = 
ª¨
;

168 
bp
->
b_√xt
 = 
NIL_BUF
;

169 i‡(
ª¨
 =
NIL_BUF
)

170 
‰⁄t
 = 
bp
;

172 
ª¨
->
b_√xt
 = 
bp
;

173 
ª¨
 = 
bp
;

180 i‡((
block_ty≥
 & 
WRITE_IMMED
Ë&& 
bp
->
b_dút
==
DIRTY
 && bp->
b_dev
 !
NO_DEV
)

181 
	`rw_block
(
bp
, 
WRITING
);

182 
	}
}

188 
PUBLIC
 
z⁄e_t
 
	$Æloc_z⁄e
(
dev
, 
z
)

189 
dev_t
 
dev
;

190 
z⁄e_t
 
z
;

194 
maj‹
, 
mö‹
;

195 
bô_t
 
b
, 
bô
;

196 
su≥r_block
 *
•
;

205 
•
 = 
	`gë_su≥r
(
dev
);

208 i‡(
z
 =
•
->
s_fú°d©az⁄e
) {

209 
bô
 = 
•
->
s_z£¨ch
;

211 
bô
 = (
bô_t
Ë
z
 - (
•
->
s_fú°d©az⁄e
 - 1);

213 
b
 = 
	`Æloc_bô
(
•
, 
ZMAP
, 
bô
);

214 i‡(
b
 =
NO_BIT
) {

215 
îr_code
 = 
ENOSPC
;

216 
maj‹
 = (Ë(
•
->
s_dev
 >> 
MAJOR
Ë& 
BYTE
;

217 
mö‹
 = (Ë(
•
->
s_dev
 >> 
MINOR
Ë& 
BYTE
;

218 
	`¥ötf
("No space on %sdevice %d/%d\n",

219 
•
->
s_dev
 =
ROOT_DEV
 ? "roŸ " : "", 
maj‹
, 
mö‹
);

220 (
NO_ZONE
);

222 i‡(
z
 =
•
->
s_fú°d©az⁄e
Ë•->
s_z£¨ch
 = 
b
;

223 (
•
->
s_fú°d©az⁄e
 - 1 + (
z⁄e_t
Ë
b
);

224 
	}
}

230 
PUBLIC
 
	$‰ì_z⁄e
(
dev
, 
numb
)

231 
dev_t
 
dev
;

232 
z⁄e_t
 
numb
;

236 
su≥r_block
 *
•
;

237 
bô_t
 
bô
;

240 
•
 = 
	`gë_su≥r
(
dev
);

241 i‡(
numb
 < 
•
->
s_fú°d©az⁄e
 ||Çumb >•->
s_z⁄es
) ;

242 
bô
 = (
bô_t
Ë(
numb
 - (
•
->
s_fú°d©az⁄e
 - 1));

243 
	`‰ì_bô
(
•
, 
ZMAP
, 
bô
);

244 i‡(
bô
 < 
•
->
s_z£¨ch
) sp->s_zsearch = bit;

245 
	}
}

251 
PUBLIC
 
	$rw_block
(
bp
, 
rw_Êag
)

252 
buf
 *
bp
;

253 
rw_Êag
;

261 
r
, 
›
;

262 
off_t
 
pos
;

263 
dev_t
 
dev
;

265 i‡–(
dev
 = 
bp
->
b_dev
Ë!
NO_DEV
) {

266 
pos
 = (
off_t
Ë
bp
->
b_blockƒ
 * 
BLOCK_SIZE
;

267 
›
 = (
rw_Êag
 =
READING
 ? 
DEV_READ
 : 
DEV_WRITE
);

268 
r
 = 
	`dev_io
(
›
, 
FALSE
, 
dev
, 
pos
, 
BLOCK_SIZE
, 
FS_PROC_NR
, 
bp
->
b_d©a
);

269 i‡(
r
 !
BLOCK_SIZE
) {

270 i‡(
r
 >0Ë∏
END_OF_FILE
;

271 i‡(
r
 !
END_OF_FILE
)

272 
	`¥ötf
("Unrecoverable diskÉrror on device %d/%d, block %ld\n",

273 (
dev
>>
MAJOR
)&
BYTE
, (dev>>
MINOR
)&BYTE, 
bp
->
b_blockƒ
);

274 
bp
->
b_dev
 = 
NO_DEV
;

277 i‡(
rw_Êag
 =
READING
Ë
rdwt_îr
 = 
r
;

281 
bp
->
b_dút
 = 
CLEAN
;

282 
	}
}

288 
PUBLIC
 
	$övÆid©e
(
devi˚
)

289 
dev_t
 
devi˚
;

293 
buf
 *
bp
;

295 
bp
 = &
buf
[0]; b∞< &buf[
NR_BUFS
]; bp++)

296 i‡(
bp
->
b_dev
 =
devi˚
Ëbp->b_dev = 
NO_DEV
;

298 #i‡
ENABLE_CACHE2


299 
	`övÆid©e2
(
devi˚
);

301 
	}
}

307 
PUBLIC
 
	$ÊushÆl
(
dev
)

308 
dev_t
 
dev
;

312 
buf
 *
bp
;

313 
buf
 *
dúty
[
NR_BUFS
];

314 
ndúty
;

316 
bp
 = &
buf
[0], 
ndúty
 = 0; b∞< &buf[
NR_BUFS
]; bp++)

317 i‡(
bp
->
b_dút
 =
DIRTY
 && bp->
b_dev
 =
dev
Ë
dúty
[
ndúty
++] = bp;

318 
	`rw_sˇâîed
(
dev
, 
dúty
, 
ndúty
, 
WRITING
);

319 
	}
}

325 
PUBLIC
 
	$rw_sˇâîed
(
dev
, 
bufq
, 
bufqsize
, 
rw_Êag
)

326 
dev_t
 
dev
;

327 
buf
 **
bufq
;

328 
bufqsize
;

329 
rw_Êag
;

333 
buf
 *
bp
;

334 
g≠
;

335 
i
;

336 
i‹eque°_s
 *
i›
;

337 
i‹eque°_s
 
iovec
[
NR_IOREQS
];

338 
j
;

341 
g≠
 = 1;

343 
g≠
 = 3 * gap + 1;

344 
g≠
 <
bufqsize
);

345 
g≠
 != 1) {

346 
g≠
 /= 3;

347 
j
 = 
g≠
; j < 
bufqsize
; j++) {

348 
i
 = 
j
 - 
g≠
;

349 
i
 >0 && 
bufq
[i]->
b_blockƒ
 > bufq[ò+ 
g≠
]->b_blocknr;

350 
i
 -
g≠
) {

351 
bp
 = 
bufq
[
i
];

352 
bufq
[
i
] = bufq[ò+ 
g≠
];

353 
bufq
[
i
 + 
g≠
] = 
bp
;

362 
bufqsize
 > 0) {

363 
j
 = 0, 
i›
 = 
iovec
; j < 
NR_IOREQS
 && j < 
bufqsize
; j++, iop++) {

364 
bp
 = 
bufq
[
j
];

365 
i›
->
io_posôi⁄
 = (
off_t
Ë
bp
->
b_blockƒ
 * 
BLOCK_SIZE
;

366 
i›
->
io_buf
 = 
bp
->
b_d©a
;

367 
i›
->
io_nbyãs
 = 
BLOCK_SIZE
;

368 
i›
->
io_ªque°
 = 
rw_Êag
 =
WRITING
 ?

369 
DEV_WRITE
 : 
DEV_READ
 | 
OPTIONAL_IO
;

371 (Ë
	`dev_io
(
SCATTERED_IO
, 0, 
dev
, (
off_t
Ë0, 
j
, 
FS_PROC_NR
,

372 (*Ë
iovec
);

375 
i
 = 0, 
i›
 = 
iovec
; i < 
j
; i++, iop++) {

376 
bp
 = 
bufq
[
i
];

377 i‡(
rw_Êag
 =
READING
) {

378 i‡(
i›
->
io_nbyãs
 == 0)

379 
bp
->
b_dev
 = 
dev
;

380 
	`put_block
(
bp
, 
PARTIAL_DATA_BLOCK
);

382 i‡(
i›
->
io_nbyãs
 != 0) {

383 
	`¥ötf
("Unrecoverable writeÉrror on device %d/%d, block %ld\n",

384 (
dev
>>
MAJOR
)&
BYTE
, (dev>>
MINOR
)&BYTE, 
bp
->
b_blockƒ
);

385 
bp
->
b_dev
 = 
NO_DEV
;

387 
bp
->
b_dút
 = 
CLEAN
;

390 
bufq
 +
j
;

391 
bufqsize
 -
j
;

393 
	}
}

399 
PRIVATE
 
	$rm_Ãu
(
bp
)

400 
buf
 *
bp
;

404 
buf
 *
√xt_±r
, *
¥ev_±r
;

406 
bufs_ö_u£
++;

407 
√xt_±r
 = 
bp
->
b_√xt
;

408 
¥ev_±r
 = 
bp
->
b_¥ev
;

409 i‡(
¥ev_±r
 !
NIL_BUF
)

410 
¥ev_±r
->
b_√xt
 = 
√xt_±r
;

412 
‰⁄t
 = 
√xt_±r
;

414 i‡(
√xt_±r
 !
NIL_BUF
)

415 
√xt_±r
->
b_¥ev
 = 
¥ev_±r
;

417 
ª¨
 = 
¥ev_±r
;

418 
	}
}

	@cache2.c

17 
	~"fs.h
"

18 
	~<möix/com.h
>

19 
	~<möix/boŸ.h
>

20 
	~"buf.h
"

22 #i‡
ENABLE_CACHE2


24 
	#MAX_BUF2
 (256 * (*))

	)

26 
PRIVATE
 
	sbuf2
 {

27 
block_t
 
	mb2_blockƒ
;

28 
dev_t
 
	mb2_dev
;

29 
u16_t
 
	mb2_cou¡
;

30 } 
	gbuf2
[
MAX_BUF2
];

32 
PRIVATE
 
	gƒ_buf2
;

33 
PRIVATE
 
	gbuf2_idx
;

35 
	#hash2
(
block
Ë((Ë((blockË& (
MAX_BUF2
 - 1)))

	)

41 
PUBLIC
 
	$öô_ˇche2
(
size
)

42 
size
;

46 
ƒ_buf2
 = 
size
 > 
MAX_BUF2
 ? MAX_BUF2 : () size;

47 
	}
}

53 
PUBLIC
 
	$gë_block2
(
bp
, 
⁄ly_£¨ch
)

54 
buf
 *
bp
;

55 
⁄ly_£¨ch
;

58 
b
;

59 
buf2
 *
bp2
;

62 i‡(
bp
->
b_dev
 =
DEV_RAM
Ë
ƒ_buf2
 = 0;

65 i‡(
ƒ_buf2
 =0 || 
⁄ly_£¨ch
 =
NO_READ


66 || 
buf2
[
	`hash2
(
bp
->
b_blockƒ
)].
b2_cou¡
 == 0) (0);

69 
b
 = 
buf2_idx
;

71 i‡(
b
 =0Ëb = 
ƒ_buf2
;

72 
bp2
 = &
buf2
[--
b
];

73 i‡(
bp2
->
b2_blockƒ
 =
bp
->
b_blockƒ
 && bp2->
b2_dev
 =bp->
b_dev
) ;

74 i‡(
b
 =
buf2_idx
) (0);

78 i‡(
	`dev_io
(
DEV_READ
, 0, 
DEV_RAM
, (
off_t
Ë
b
 * 
BLOCK_SIZE
, BLOCK_SIZE,

79 
FS_PROC_NR
, 
bp
->
b_d©a
Ë=
BLOCK_SIZE
) {

83 
	}
}

89 
PUBLIC
 
	$put_block2
(
bp
)

90 
buf
 *
bp
;

93 
b
;

94 
buf2
 *
bp2
;

96 i‡(
ƒ_buf2
 == 0) ;

98 
b
 = 
buf2_idx
++;

99 i‡(
buf2_idx
 =
ƒ_buf2
) buf2_idx = 0;

101 
bp2
 = &
buf2
[
b
];

103 i‡(
	`dev_io
(
DEV_WRITE
, 0, 
DEV_RAM
, (
off_t
Ë
b
 * 
BLOCK_SIZE
, BLOCK_SIZE,

104 
FS_PROC_NR
, 
bp
->
b_d©a
Ë=
BLOCK_SIZE
) {

105 i‡(
bp2
->
b2_dev
 !
NO_DEV
Ë
buf2
[
	`hash2
(bp2->
b2_blockƒ
)].
b2_cou¡
--;

106 
bp2
->
b2_dev
 = 
bp
->
b_dev
;

107 
bp2
->
b2_blockƒ
 = 
bp
->
b_blockƒ
;

108 
buf2
[
	`hash2
(
bp2
->
b2_blockƒ
)].
b2_cou¡
++;

110 
	}
}

116 
PUBLIC
 
	$övÆid©e2
(
devi˚
)

117 
dev_t
 
devi˚
;

120 
b
;

121 
buf2
 *
bp2
;

123 
b
 = 0; b < 
ƒ_buf2
; b++) {

124 
bp2
 = &
buf2
[
b
];

125 i‡(
bp2
->
b2_dev
 =
devi˚
) {

126 
bp2
->
b2_dev
 = 
NO_DEV
;

127 
buf2
[
	`hash2
(
bp2
->
b2_blockƒ
)].
b2_cou¡
--;

130 
	}
}

	@calloc.c

2 
	~<°dlib.h
>

4 
	#ALIGN
(
x
Ë(((xË+ ((
size_t
Ë- 1)Ë& ~((size_tË- 1))

	)

7 
	$ˇŒoc
(
size_t
 
√Àm
, size_à
ñsize
)

9 *
p
;

10 
size_t
 *
q
;

11 
size_t
 
size
 = 
	`ALIGN
(
√Àm
 * 
ñsize
);

13 
p
 = 
	`mÆloc
(
size
);

14 i‡(
p
 =
NULL
)  NULL;

15 
q
 = (
size_t
 *Ë(
p
 + 
size
);

16 (*Ë
q
 > 
p
) *--q = 0;

17  
p
;

18 
	}
}

	@ceil.c

9 
	~<m©h.h
>

12 
	$˚û
(
x
)

14 
vÆ
;

16  
	`modf
(
x
, &
vÆ
) > 0 ? val + 1.0 : val ;

20 
	}
}

	@cff4.c

18 
	~"FP_ty≥s.h
"

21 
	$cff4
(
§c
)

22 
DOUBLE
 
§c
;

24 
EXTEND
 
buf
;

26 
	`exãnd
(&
§c
.
d
[0],&
buf
,(
DOUBLE
));

27 
	`com∑˘
(&
buf
,&(
§c
.
d
[1]),(
SINGLE
));

28 
	}
}

	@cff8.c

18 
	~"FP_ty≥s.h
"

21 
	$cff8
(
§c
)

22 
SINGLE
 
§c
;

24 
EXTEND
 
buf
;

26 
	`exãnd
(&
§c
,&
buf
,(
SINGLE
));

27 
	`com∑˘
(&
buf
, &
§c
,(
DOUBLE
));

28 
	}
}

	@cfi.c

16 
	~"FP_å≠.h
"

17 
	~"FP_ty≥s.h
"

18 
	~"FP_shi·.h
"

21 
	$cfi
(
ds
,
ss
,
§c
)

22 
ds
;

23 
ss
;

24 
DOUBLE
 
§c
;

26 
EXTEND
 
buf
;

27 
√w
;

28 
max_exp
;

30 
	`exãnd
(&
§c
.
d
[0],&
buf
,
ss
);

31 i‡(
buf
.
exp
 < 0) {

32 
§c
.
d
[
ss
 == 8] = 0L;

35 
max_exp
 = (
ds
 << 3) - 2;

37 i‡(
buf
.
exp
 > 
max_exp
) {

38 i‡(
buf
.
exp
 =
max_exp
+1 && buf.
sign
 && buf.
m1
 =
NORMBIT
 &&

39 
buf
.
m2
 == 0L) {

42 
	`å≠
(
EIOVFL
);

43 
buf
.
exp
 %
max_exp
;

46 
√w
 = 
buf
.
m1
 >> (31-buf.
exp
);

47 i‡(
buf
.
sign
)

48 
√w
 = -new;

49 
d⁄e
:

50 
§c
.
d
[
ss
 =8] = 
√w
;

51 (
√w
);

52 
	}
}

	@cfu.c

16 
	~"FP_å≠.h
"

17 
	~"FP_ty≥s.h
"

20 
	$cfu
(
ds
,
ss
,
§c
)

21 
ds
;

22 
ss
;

23 
DOUBLE
 
§c
;

25 
EXTEND
 
buf
;

26 
√w
;

27 
√wöt
, 
max_exp
;

29 
	`exãnd
(&
§c
.
d
[0],&
buf
,
ss
);

30 i‡(
buf
.
exp
 < 0) {

31 
§c
.
d
[
ss
 == 8] = 0L;

34 
max_exp
 = (
ds
 << 3) - 1;

35 i‡(
buf
.
exp
 > 
max_exp
) {

36 
	`å≠
(
EIOVFL
);

37 
buf
.
exp
 %
max_exp
;

39 
√w
 = 
buf
.
m1
 >> (31-buf.
exp
);

40 
d⁄e
:

41 
§c
.
d
[
ss
 =8] = 
√w
;

42 (
√w
);

43 
	}
}

	@charpick.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

9 
	$wöch
(
wö
)

10 
WINDOW
 *
wö
;

12 ((
wö
->
_löe
[wö->
_cury
][wö->
_curx
]) & 0xff);

13 
	}
}

20 
	$mvöch
(
y
, 
x
)

21 
y
;

22 
x
;

24 i‡(
	`wmove
(
°ds¸
, 
y
, 
x
Ë=
ERR
) (ERR);

25 ((
°ds¸
->
_löe
[°ds¸->
_cury
][°ds¸->
_curx
]) & 0xff);

26 
	}
}

33 
	$mvwöch
(
wö
, 
y
, 
x
)

34 
WINDOW
 *
wö
;

35 
y
;

36 
x
;

38 i‡(
	`wmove
(
wö
, 
y
, 
x
Ë=
ERR
) (ERR);

39 ((
wö
->
_löe
[wö->
_cury
][wö->
_curx
]) & 0xff);

40 
	}
}

	@chartab.c

1 
	~<˘y≥.h
>

3 
	g__˘y≥
[] = {

5 
_C
,

6 
_C
,

7 
_C
,

8 
_C
,

9 
_C
,

10 
_C
,

11 
_C
,

12 
_C
,

13 
_C
,

14 
_C
|
_S
,

15 
_C
|
_S
,

16 
_C
|
_S
,

17 
_C
|
_S
,

18 
_C
|
_S
,

19 
_C
,

20 
_C
,

21 
_C
,

22 
_C
,

23 
_C
,

24 
_C
,

25 
_C
,

26 
_C
,

27 
_C
,

28 
_C
,

29 
_C
,

30 
_C
,

31 
_C
,

32 
_C
,

33 
_C
,

34 
_C
,

35 
_C
,

36 
_C
,

37 
_S
,

38 
_P
,

39 
_P
,

40 
_P
,

41 
_P
,

42 
_P
,

43 
_P
,

44 
_P
,

45 
_P
,

46 
_P
,

47 
_P
,

48 
_P
,

49 
_P
,

50 
_P
,

51 
_P
,

52 
_P
,

53 
_N
,

54 
_N
,

55 
_N
,

56 
_N
,

57 
_N
,

58 
_N
,

59 
_N
,

60 
_N
,

61 
_N
,

62 
_N
,

63 
_P
,

64 
_P
,

65 
_P
,

66 
_P
,

67 
_P
,

68 
_P
,

69 
_P
,

70 
_U
|
_X
,

71 
_U
|
_X
,

72 
_U
|
_X
,

73 
_U
|
_X
,

74 
_U
|
_X
,

75 
_U
|
_X
,

76 
_U
,

77 
_U
,

78 
_U
,

79 
_U
,

80 
_U
,

81 
_U
,

82 
_U
,

83 
_U
,

84 
_U
,

85 
_U
,

86 
_U
,

87 
_U
,

88 
_U
,

89 
_U
,

90 
_U
,

91 
_U
,

92 
_U
,

93 
_U
,

94 
_U
,

95 
_U
,

96 
_P
,

97 
_P
,

98 
_P
,

99 
_P
,

100 
_P
,

101 
_P
,

102 
_L
|
_X
,

103 
_L
|
_X
,

104 
_L
|
_X
,

105 
_L
|
_X
,

106 
_L
|
_X
,

107 
_L
|
_X
,

108 
_L
,

109 
_L
,

110 
_L
,

111 
_L
,

112 
_L
,

113 
_L
,

114 
_L
,

115 
_L
,

116 
_L
,

117 
_L
,

118 
_L
,

119 
_L
,

120 
_L
,

121 
_L
,

122 
_L
,

123 
_L
,

124 
_L
,

125 
_L
,

126 
_L
,

127 
_L
,

128 
_P
,

129 
_P
,

130 
_P
,

131 
_P
,

132 
_C
,

	@cif4.c

17 
	~"FP_ty≥s.h
"

20 
	$cif4
(
ss
,
§c
)

21 
ss
;

22 
§c
;

24 
EXTEND
 
buf
;

25 *
ùt
;

26 
i_§c
;

27 
SINGLE
 *
ªsu…
;

29 
	`zrf_ext
(&
buf
);

30 i‡(
ss
 == ()) {

31 
buf
.
exp
 = 31;

32 
i_§c
 = 
§c
;

33 
ªsu…
 = (
SINGLE
 *Ë&
§c
;

36 
ùt
 = (*Ë&
§c
;

37 
i_§c
 = (Ë*
ùt
;

38 
buf
.
exp
 = 15;

39 
ªsu…
 = (
SINGLE
 *Ë&
ss
;

41 i‡(
i_§c
 == 0) {

42 *
ªsu…
 = (
SINGLE
) 0L;

47 
buf
.
sign
 = (
i_§c
 < 0) ? 0x8000 : 0;

50 
buf
.
m1
 = (
i_§c
 < 0) ? -i_src : i_src;

52 i‡(
ss
 != ())

53 
buf
.
m1
 <<= 16;

54 
	`ƒm_ext
(&
buf
);

55 
	`com∑˘
(&
buf
, 
ªsu…
,(
SINGLE
));

56 
	}
}

	@cif8.c

17 
	~"FP_ty≥s.h
"

20 
	$cif8
(
ss
,
§c
)

21 
ss
;

22 
§c
;

24 
EXTEND
 
buf
;

25 
DOUBLE
 *
ªsu…
;

26 *
ùt
;

27 
i_§c
;

29 
ªsu…
 = (
DOUBLE
 *Ë((*Ë&
ss
);

30 
	`zrf_ext
(&
buf
);

31 i‡(
ss
 == ()) {

32 
buf
.
exp
 = 31;

33 
i_§c
 = 
§c
;

36 
ùt
 = (*Ë&
§c
;

37 
i_§c
 = (Ë*
ùt
;

38 
buf
.
exp
 = 15;

40 i‡(
i_§c
 == 0) {

41 
	`zrf8
(
ªsu…
);

46 
buf
.
sign
 = (
i_§c
 < 0) ? 0x8000 : 0;

49 
buf
.
m1
 = (
i_§c
 < 0) ? -i_src : i_src;

51 i‡(
ss
 != ())

52 
buf
.
m1
 <<= 16;

53 
	`ƒm_ext
(&
buf
);

54 
	`com∑˘
(&
buf
,&
ªsu…
->
d
[0],8);

55 
	}
}

	@clearerr.c

6 
	~<°dio.h
>

9 (
	g˛óªº
)(
FILE
 *
	g°ªam
)

11 
˛óªº
(
°ªam
);

	@clock.c

47 
	~"kî√l.h
"

48 
	~<sig«l.h
>

49 
	~<möix/ˇŒƒ.h
>

50 
	~<möix/com.h
>

51 
	~"¥oc.h
"

54 
	#MILLISEC
 100

	)

55 
	#SCHED_RATE
 (
MILLISEC
*
HZ
/1000Ë

	)

58 #i‡(
CHIP
 =
INTEL
)

59 
	#COUNTER_FREQ
 (2*
TIMER_FREQ
Ë

	)

60 
	#LATCH_COUNT
 0x00

	)

61 
	#SQUARE_WAVE
 0x36

	)

63 
	#TIMER_COUNT
 ((Ë(
TIMER_FREQ
/
HZ
)Ë

	)

64 
	#TIMER_FREQ
 1193182L

	)

66 
	#CLOCK_ACK_BIT
 0x80

	)

69 #i‡(
CHIP
 =
M68000
)

70 
	#TIMER_FREQ
 2457600L

	)

74 
PRIVATE
 
˛ock_t
 
	gªÆtime
;

75 
PRIVATE
 
time_t
 
	gboŸ_time
;

76 
PRIVATE
 
˛ock_t
 
	g√xt_Æ¨m
;

77 
PRIVATE
 
mesßge
 
	gmc
;

78 
PRIVATE
 
	gw©chdog_¥oc
;

79 
PRIVATE
 
w©chdog_t
 
	gw©ch_dog
[
NR_TASKS
+
NR_PROCS
];

82 
PRIVATE
 
	gsyn_Æ_Æive

TRUE
;

83 
PRIVATE
 
	gsyn_èbÀ
[
NR_TASKS
+
NR_PROCS
];

86 
PRIVATE
 
˛ock_t
 
	g≥ndög_ticks
;

87 
PRIVATE
 
	gsched_ticks
 = 
SCHED_RATE
;

88 
PRIVATE
 
¥oc
 *
	g¥ev_±r
;

90 
FORWARD
 
_PROTOTYPE
–
comm⁄_£èœrm
, (
¥oc_ƒ
,

91 
dñè_ticks
, 
w©chdog_t
 
fu˘i⁄
) );

92 
FORWARD
 
_PROTOTYPE
–
do_˛ocktick
, () );

93 
FORWARD
 
_PROTOTYPE
–
do_gë_time
, () );

94 
FORWARD
 
_PROTOTYPE
–
do_gëu±ime
, () );

95 
FORWARD
 
_PROTOTYPE
–
do_£t_time
, (
mesßge
 *
m_±r
) );

96 
FORWARD
 
_PROTOTYPE
–
do_£èœrm
, (
mesßge
 *
m_±r
) );

97 
FORWARD
 
_PROTOTYPE
–
öô_˛ock
, () );

98 
FORWARD
 
_PROTOTYPE
–
ˇu£_Æ¨m
, () );

99 
FORWARD
 
_PROTOTYPE
–
do_£tsyn_Ærm
, (
mesßge
 *
m_±r
) );

100 
FORWARD
 
_PROTOTYPE
–
˛ock_h™dÀr
, (
úq
) );

105 
PUBLIC
 
	$˛ock_èsk
()

113 
›code
;

115 
	`öô_˛ock
();

118 
TRUE
) {

119 
	`ª˚ive
(
ANY
, &
mc
);

120 
›code
 = 
mc
.
m_ty≥
;

122 
	`lock
();

123 
ªÆtime
 +
≥ndög_ticks
;

124 
≥ndög_ticks
 = 0;

125 
	`u∆ock
();

127 
›code
) {

128 
HARD_INT
: 
	`do_˛ocktick
(); ;

129 
GET_UPTIME
: 
	`do_gëu±ime
(); ;

130 
GET_TIME
: 
	`do_gë_time
(); ;

131 
SET_TIME
: 
	`do_£t_time
(&
mc
); ;

132 
SET_ALARM
: 
	`do_£èœrm
(&
mc
); ;

133 
SET_SYNC_AL
:
	`do_£tsyn_Ærm
(&
mc
); ;

134 : 
	`∑nic
("˛ockÅask gŸ bad mesßge", 
mc
.
m_ty≥
);

138 
mc
.
m_ty≥
 = 
OK
;

139 i‡(
›code
 !
HARD_INT
Ë
	`£nd
(
mc
.
m_sour˚
, &mc);

141 
	}
}

147 
PRIVATE
 
	$do_˛ocktick
()

153 
¥oc
 *
Ω
;

154 
¥oc_ƒ
;

156 i‡(
√xt_Æ¨m
 <
ªÆtime
) {

158 
√xt_Æ¨m
 = 
LONG_MAX
;

159 
Ω
 = 
BEG_PROC_ADDR
;Ñ∞< 
END_PROC_ADDR
;Ñp++) {

160 i‡(
Ω
->
p_Æ¨m
 != 0) {

162 i‡(
Ω
->
p_Æ¨m
 <
ªÆtime
) {

167 
¥oc_ƒ
 = 
	`¥oc_numbî
(
Ω
);

168 i‡(
w©ch_dog
[
¥oc_ƒ
+
NR_TASKS
]) {

169 
w©chdog_¥oc

¥oc_ƒ
;

170 (*
w©ch_dog
[
¥oc_ƒ
+
NR_TASKS
])();

173 
	`ˇu£_sig
(
¥oc_ƒ
, 
SIGALRM
);

174 
Ω
->
p_Æ¨m
 = 0;

178 i‡(
Ω
->
p_Æ¨m
 !0 &&Ñp->p_Æ¨m < 
√xt_Æ¨m
)

179 
√xt_Æ¨m
 = 
Ω
->
p_Æ¨m
;

185 i‡(--
sched_ticks
 == 0) {

186 i‡(
bûl_±r
 =
¥ev_±r
Ë
	`lock_sched
();

187 
sched_ticks
 = 
SCHED_RATE
;

188 
¥ev_±r
 = 
bûl_±r
;

190 #i‡(
SHADOWING
 == 1)

191 i‡(
rdy_hód
[
SHADOW_Q
]Ë
	`unshadow
(rdy_head[SHADOW_Q]);

193 
	}
}

199 
PRIVATE
 
	$do_gëu±ime
()

203 
mc
.
NEW_TIME
 = 
ªÆtime
;

204 
	}
}

210 
PUBLIC
 
˛ock_t
 
	$gë_u±ime
()

217 
˛ock_t
 
u±ime
;

219 
	`lock
();

220 
u±ime
 = 
ªÆtime
 + 
≥ndög_ticks
;

221 
	`u∆ock
();

222 (
u±ime
);

223 
	}
}

229 
PRIVATE
 
	$do_gë_time
()

233 
mc
.
NEW_TIME
 = 
boŸ_time
 + 
ªÆtime
/
HZ
;

234 
	}
}

240 
PRIVATE
 
	$do_£t_time
(
m_±r
)

241 
mesßge
 *
m_±r
;

245 
boŸ_time
 = 
m_±r
->
NEW_TIME
 - 
ªÆtime
/
HZ
;

246 
	}
}

252 
PRIVATE
 
	$do_£èœrm
(
m_±r
)

253 
mesßge
 *
m_±r
;

259 
¥oc
 *
Ω
;

260 
¥oc_ƒ
;

261 
dñè_ticks
;

262 
w©chdog_t
 
fun˘i⁄
;

265 
¥oc_ƒ
 = 
m_±r
->
CLOCK_PROC_NR
;

266 
dñè_ticks
 = 
m_±r
->
DELTA_TICKS
;

267 
fun˘i⁄
 = (
w©chdog_t
Ë
m_±r
->
FUNC_TO_CALL
;

269 
Ω
 = 
	`¥oc_addr
(
¥oc_ƒ
);

270 
mc
.
SECONDS_LEFT
 = (
Ω
->
p_Æ¨m
 =0 ? 0 : (Ω->p_Æ¨m - 
ªÆtime
)/
HZ
 );

271 i‡(!
	`i°askp
(
Ω
)Ë
fun˘i⁄
= 0;

272 
	`comm⁄_£èœrm
(
¥oc_ƒ
, 
dñè_ticks
, 
fun˘i⁄
);

273 
	}
}

279 
PRIVATE
 
	$do_£tsyn_Ærm
(
m_±r
)

280 
mesßge
 *
m_±r
;

285 
¥oc
 *
Ω
;

286 
¥oc_ƒ
;

287 
dñè_ticks
;

290 
¥oc_ƒ
 = 
m_±r
->
CLOCK_PROC_NR
;

291 
dñè_ticks
 = 
m_±r
->
DELTA_TICKS
;

292 
Ω
 = 
	`¥oc_addr
(
¥oc_ƒ
);

293 
mc
.
SECONDS_LEFT
 = (
Ω
->
p_Æ¨m
 =0 ? 0 : (Ω->p_Æ¨m - 
ªÆtime
)/
HZ
 );

294 
	`comm⁄_£èœrm
(
¥oc_ƒ
, 
dñè_ticks
, 
ˇu£_Æ¨m
);

295 
	}
}

301 
PRIVATE
 
	$comm⁄_£èœrm
(
¥oc_ƒ
, 
dñè_ticks
, 
fun˘i⁄
)

302 
¥oc_ƒ
;

303 
dñè_ticks
;

304 
w©chdog_t
 
fun˘i⁄
;

311 
¥oc
 *
Ω
;

313 
Ω
 = 
	`¥oc_addr
(
¥oc_ƒ
);

314 
Ω
->
p_Æ¨m
 = (
dñè_ticks
 =0 ? 0 : 
ªÆtime
 + delta_ticks);

315 
w©ch_dog
[
¥oc_ƒ
+
NR_TASKS
] = 
fun˘i⁄
;

318 
√xt_Æ¨m
 = 
LONG_MAX
;

319 
Ω
 = 
BEG_PROC_ADDR
;Ñ∞< 
END_PROC_ADDR
;Ñp++)

320 if(
Ω
->
p_Æ¨m
 !0 &&Ñp->p_Æ¨m < 
√xt_Æ¨m
)next_alarm=rp->p_alarm;

322 
	}
}

328 
PRIVATE
 
	$ˇu£_Æ¨m
()

333 
mesßge
 
mess
;

335 
syn_èbÀ
[
w©chdog_¥oc
 + 
NR_TASKS
]
TRUE
;

336 i‡(!
syn_Æ_Æive
Ë
	`£nd
 (
SYN_ALRM_TASK
, &
mess
);

337 
	}
}

343 
PUBLIC
 
	$syn_Ærm_èsk
()

354 
mesßge
 
mess
;

355 
w‹k_d⁄e
;

356 *
Æ_±r
;

357 
i
;

359 
syn_Æ_Æive

TRUE
;

360 
i
0, 
Æ_±r

syn_èbÀ
; i<
NR_TASKS
+
NR_PROCS
; i++,ál_ptr++)

361 *
Æ_±r

FALSE
;

363 
TRUE
) {

364 
w‹k_d⁄e

TRUE
;

365 
i
0, 
Æ_±r

syn_èbÀ
; i<
NR_TASKS
+
NR_PROCS
; i++,ál_ptr++)

366 i‡(*
Æ_±r
) {

367 *
Æ_±r

FALSE
;

368 
mess
.
m_ty≥

CLOCK_INT
;

369 
	`£nd
 (
i
-
NR_TASKS
, &
mess
);

370 
w‹k_d⁄e

FALSE
;

372 i‡(
w‹k_d⁄e
) {

373 
syn_Æ_Æive

FALSE
;

374 
	`ª˚ive
 (
CLOCK
, &
mess
);

375 
syn_Æ_Æive

TRUE
;

378 
	}
}

384 
PRIVATE
 
	$˛ock_h™dÀr
(
úq
)

385 
úq
;

436 
¥oc
 *
Ω
;

437 
ticks
;

438 
˛ock_t
 
now
;

440 i‡(
ps_mˇ
) {

442 
	`out_byã
(
PORT_B
, 
	`ö_byã
(PORT_BË| 
CLOCK_ACK_BIT
);

451 i‡(
k_ªíãr
 != 0)

452 
Ω
 = 
	`¥oc_addr
(
HARDWARE
);

454 
Ω
 = 
¥oc_±r
;

455 
ticks
 = 
lo°_ticks
 + 1;

456 
lo°_ticks
 = 0;

457 
Ω
->
u£r_time
 +
ticks
;

458 i‡(
Ω
 !
bûl_±r
 &&Ñ∞!
	`¥oc_addr
(
IDLE
)Ëbûl_±r->
sys_time
 +
ticks
;

460 
≥ndög_ticks
 +
ticks
;

461 
now
 = 
ªÆtime
 + 
≥ndög_ticks
;

462 i‡(
ây_timeout
 <
now
Ë
	`ây_wakeup
(now);

463 #i‡(
CHIP
 !
M68000
)

464 
	`¥_ª°¨t
();

466 #i‡(
CHIP
 =
M68000
)

467 
	`kb_timî
();

468 i‡(
sched_ticks
 =1Ë
	`fd_timî
();

471 i‡(
√xt_Æ¨m
 <
now
 ||

472 
sched_ticks
 == 1 &&

473 
bûl_±r
 =
¥ev_±r
 &&

474 #i‡(
SHADOWING
 == 0)

475 
rdy_hód
[
USER_Q
] !
NIL_PROC
) {

477 (
rdy_hód
[
USER_Q
] !
NIL_PROC
 ||Ñdy_hód[
SHADOW_Q
] != NIL_PROC)) {

479 
	`öãºu±
(
CLOCK
);

483 i‡(--
sched_ticks
 == 0) {

485 
sched_ticks
 = 
SCHED_RATE
;

486 
¥ev_±r
 = 
bûl_±r
;

489 
	}
}

491 #i‡(
CHIP
 =
INTEL
)

496 
PRIVATE
 
	$öô_˛ock
()

500 
	`out_byã
(
TIMER_MODE
, 
SQUARE_WAVE
);

501 
	`out_byã
(
TIMER0
, 
TIMER_COUNT
);

502 
	`out_byã
(
TIMER0
, 
TIMER_COUNT
 >> 8);

503 
	`put_úq_h™dÀr
(
CLOCK_IRQ
, 
˛ock_h™dÀr
);

504 
	`íabÀ_úq
(
CLOCK_IRQ
);

505 
	}
}

511 
PUBLIC
 
	$˛ock_°›
()

515 
	`out_byã
(
TIMER_MODE
, 0x36);

516 
	`out_byã
(
TIMER0
, 0);

517 
	`out_byã
(
TIMER0
, 0);

518 
	}
}

524 
PUBLIC
 
	$mûli_dñay
(
mûli£c
)

525 
mûli£c
;

529 
mûli_°©e
 
ms
;

531 
	`mûli_°¨t
(&
ms
);

532 
	`mûli_ñ≠£d
(&
ms
Ë< 
mûli£c
) {}

533 
	}
}

538 
PUBLIC
 
	$mûli_°¨t
(
m•
)

539 
mûli_°©e
 *
m•
;

543 
m•
->
¥ev_cou¡
 = 0;

544 
m•
->
accum_cou¡
 = 0;

545 
	}
}

551 
PUBLIC
 
	$mûli_ñ≠£d
(
m•
)

552 
mûli_°©e
 *
m•
;

557 
cou¡
;

565 
	`out_byã
(
TIMER_MODE
, 
LATCH_COUNT
);

566 
cou¡
 = 
	`ö_byã
(
TIMER0
);

567 
cou¡
 |
	`ö_byã
(
TIMER0
) << 8;

573 
m•
->
accum_cou¡
 +
cou¡
 <m•->
¥ev_cou¡
 ? (msp->prev_count - count) : 1;

574 
m•
->
¥ev_cou¡
 = 
cou¡
;

576  
m•
->
accum_cou¡
 / (
TIMER_FREQ
 / 1000);

577 
	}
}

581 #i‡(
CHIP
 =
M68000
)

582 
	~"°addr.h
"

583 
	~"°mÂ.h
"

588 
PRIVATE
 
	$öô_˛ock
()

596 
MFP
->
mf_tcdr
 = 
TIMER_FREQ
/(64*4*
HZ
);

597 } (
MFP
->
mf_tcdr
 & 0xFFË!
TIMER_FREQ
/(64*4*
HZ
));

598 
MFP
->
mf_tcd¸
 |(
T_Q064
<<4);

599 
	}
}

	@clock.h

5 #i‚de‡
CLOCK_H


6 
	#CLOCK_H


	)

8 
	gtimî
;

10 (*
	ttimî_func_t
Ë
	tARGS
(–
	tfd
, 
	ttimî
 *timer ));

12 
	stimî


14 
timî
 *
tim_√xt
;

15 
timî_func_t
 
tim_func
;

16 
tim_ªf
;

17 
time_t
 
tim_time
;

18 } 
	ttimî_t
;

20 
˛ck_öô
 
	`ARGS
(( ));

21 
£t_time
 
	`ARGS
(–
time_t
 
time
 ));

22 
time_t
 
gë_time
 
	`ARGS
(( ));

23 
ª£t_time
 
	`ARGS
(( ));

24 
˛ck_timî
 
	`ARGS
(–
timî
 *timî, 
time_t
 
timeout
, 
timî_func_t
 
func
,

25 
fd
 ));

27 
˛ck_u¡imî
 
	`ARGS
(–
timî
 *timer ));

	@cmf4.c

12 
	~"FP_ty≥s.h
"

13 
	~"gë_put.h
"

16 
	$cmf4
(
f1
,
f2
)

17 
SINGLE
 
f1
,
f2
;

22 
	#SIGN
(
x
Ë(((xË< 0Ë? -1 : 1)

	)

23 
sign1
,
sign2
;

24 
l1
,
l2
;

26 
l1
 = 
	`gë4
((*Ë&
f1
);

27 
l2
 = 
	`gë4
((*Ë&
f2
);

29 i‡(
l1
 =
l2
)  0;

31 
sign1
 = 
	`SIGN
(
l1
);

32 
sign2
 = 
	`SIGN
(
l2
);

33 i‡(
sign1
 !
sign2
) {

34 i‡((
l1
 & 0x7fffffff) == 0 &&

35 (
l2
 & 0x7fffffff) == 0)  0;

36  ((
sign1
 > 0) ? -1 : 1);

39  (
sign1
 * ((
l1
 < 
l2
) ? 1 : -1));

40 
	}
}

	@cmf8.c

12 
	~"FP_ty≥s.h
"

13 
	~"gë_put.h
"

16 
	$cmf8
(
d1
,
d2
)

17 
DOUBLE
 
d1
,
d2
;

19 
	#SIGN
(
x
Ë(((xË< 0Ë? -1 : 1)

	)

23 
l1
,
l2
;

24 
sign1
,
sign2
;

25 
rv
;

27 #i‡
FL_MSL_AT_LOW_ADDRESS


28 
l1
 = 
	`gë4
((*)&
d1
);

29 
l2
 = 
	`gë4
((*)&
d2
);

31 
l1
 = 
	`gë4
(((*)&
d1
+4));

32 
l2
 = 
	`gë4
(((*)&
d2
+4));

34 
sign1
 = 
	`SIGN
(
l1
);

35 
sign2
 = 
	`SIGN
(
l2
);

36 i‡(
sign1
 !
sign2
) {

37 
l1
 &= 0x7fffffff;

38 
l2
 &= 0x7fffffff;

39 i‡(
l1
 !0 || 
l2
 != 0) {

40  ((
sign1
 > 0) ? -1 : 1);

43 i‡(
l1
 !
l2
) {

44 
rv
 = 
l1
 < 
l2
 ? 1 : -1;

47 
u1
, 
u2
;

48 #i‡
FL_MSL_AT_LOW_ADDRESS


49 
u1
 = 
	`gë4
(((*)&
d1
 + 4));

50 
u2
 = 
	`gë4
(((*)&
d2
 + 4));

52 
u1
 = 
	`gë4
((*)&
d1
);

53 
u2
 = 
	`gë4
((*)&
d2
);

55 i‡(
u1
 =
u2
)

57 i‡(
u1
 < 
u2
Ë
rv
 = 1;

58 
rv
 = -1;

60  
sign1
 * 
rv
;

61 
	}
}

	@common.c

6 
	~<î∫o.h
>

7 
	~<°dlib.h
>

8 
	~<°rög.h
>

9 
	~<uni°d.h
>

10 
	~<°dio.h
>

12 
	gcomm⁄_ã°_ƒ
 = -1, 
	gîr˘
 = 0, 
	gsubã°
;

14 
_PROTOTYPE
(
˛ónup
, ());

15 
_PROTOTYPE
(
e
, (
n
));

16 
_PROTOTYPE
(
quô
, ());

17 
_PROTOTYPE
(
rm_rf_dú
, (
ã°_ƒ
));

18 
_PROTOTYPE
(
rm_rf_µdú
, (
ã°_ƒ
));

19 
_PROTOTYPE
(
°¨t
, (
ã°_ƒ
));

21 
	$°¨t
(
ã°_ƒ
)

22 
ã°_ƒ
;

24 
buf
[64];

26 
comm⁄_ã°_ƒ
 = 
ã°_ƒ
;

27 
	`¥ötf
("Te° %2d ", 
ã°_ƒ
);

28 
	`fÊush
(
°dout
);

29 
	`sync
();

30 
	`rm_rf_dú
(
ã°_ƒ
);

31 
	`•rötf
(
buf
, "mkdú DIR_%02d", 
ã°_ƒ
);

32 i‡(
	`sy°em
(
buf
) != 0) {

33 
	`e
(666);

34 
	`quô
();

36 
	`•rötf
(
buf
, "DIR_%02d", 
ã°_ƒ
);

37 i‡(
	`chdú
(
buf
) != 0) {

38 
	`e
(6666);

39 
	`quô
();

41 
	}
}

43 
	$rm_rf_dú
(
ã°_ƒ
)

44 
ã°_ƒ
;

46 
buf
[128];

53 
	`•rötf
(
buf
, "chmod 777 DIR_%02d DIR_%02d/* DIR_%02d/*/* >/dev/null 2>&1",

54 
ã°_ƒ
,Åest_nr,Åest_nr);

55 (Ë
	`sy°em
(
buf
);

56 
	`•rötf
(
buf
, "rm -r‡DIR_%02d >/dev/nuŒ 2>&1", 
ã°_ƒ
);

57 i‡(
	`sy°em
(
buf
Ë!0Ë
	`¥ötf
("Warning: system(\"%s\") failed\n", buf);

58 
	}
}

60 
	$rm_rf_µdú
(
ã°_ƒ
)

61 
ã°_ƒ
;

65 
buf
[128];

67 
	`•rötf
(
buf
, "chmod 777 ../DIR_%02d/* ../DIR_%02d/*/* >/dev/null 2>&1",

68 
ã°_ƒ
,Åest_nr);

69 (Ë
	`sy°em
(
buf
);

70 
	`•rötf
(
buf
, "rm -r‡../DIR_%02d >/dev/nuŒ 2>&1", 
ã°_ƒ
);

71 i‡(
	`sy°em
(
buf
Ë!0Ë
	`¥ötf
("Warning: system(\"%s\") failed\n", buf);

72 
	}
}

74 
	$e
(
n
)

75 
n
;

77 i‡(
îr˘
 =0Ë
	`¥ötf
("\n");

78 
	`¥ötf
("Subtest %d,Érror %d,Érrno %d: %s\n",

79 
subã°
, 
n
, 
î∫o
, 
	`°ªº‹
(errno));

80 i‡(
îr˘
++ > 
MAX_ERROR
) {

81 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

82 
	`˛ónup
();

83 
	`exô
(1);

85 
î∫o
 = 0;

86 
	}
}

88 
	$˛ónup
()

90 i‡(
	`chdú
(".."Ë=0 && 
comm⁄_ã°_ƒ
 !-1Ë
	`rm_rf_dú
(common_test_nr);

91 
	}
}

93 
	$quô
()

95 
	`˛ónup
();

96 i‡(
îr˘
 == 0) {

97 
	`¥ötf
("ok\n");

98 
	`exô
(0);

100 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

101 
	`exô
(1);

103 
	}
}

	@compact.c

12 
	~"FP_büs.h
"

13 
	~"FP_shi·.h
"

14 
	~"FP_å≠.h
"

15 
	~"FP_ty≥s.h
"

16 
	~"gë_put.h
"

19 
	$com∑˘
(
f
,
to
,
size
)

20 
EXTEND
 *
f
;

21 *
to
;

22 
size
;

24 
îr‹
 = 0;

26 i‡(
size
 =(
DOUBLE
)) {

30 
DOUBLE
 *
DBL
 = (DOUBLE *Ë(*Ë
to
;

32 i‡((
f
->
m1
|(f->
m2
 & 
DBL_ZERO
)) == 0L) {

33 
	`zrf8
(
DBL
);

36 
f
->
exp
 +
DBL_BIAS
;

37 i‡(
f
->
exp
 > 
DBL_MAX
) {

38 
dbl_ovî
: 
	`å≠
(
EFOVFL
);

39 
f
->
exp
 = 
DBL_MAX
+1;

40 
f
->
m1
 = 0;

41 
f
->
m2
 = 0;

42 i‡(
îr‹
++)

45 i‡(
f
->
exp
 < 
DBL_MIN
) {

46 
	`b64_rs·
(&(
f
->
m™tisß
));

47 i‡(
f
->
exp
 < 0) {

48 
	`b64_s·
(&(
f
->
m™tisß
), -f->
exp
);

49 
f
->
exp
 = 0;

61 
DBL
->
d
[0] = 
f
->
m1
 >> 
DBL_RUNPACK
;

62 
DBL
->
d
[1] = 
f
->
m2
 >> 
DBL_RUNPACK
;

63 
DBL
->
d
[1] |(
f
->
m1
 << 
DBL_LUNPACK
);

68 #ifde‡
EXCEPTION_INEXACT


69 i‡((
f
->
m2
 & 
DBL_EXACT
) != 0) {

70 
	`INEXACT
();

72 i‡(((
f
->
m2
 & 
DBL_EXACT
Ë> 
DBL_ROUNDUP
)

73 || ((
f
->
m2
 & 
DBL_EXACT
Ë=
DBL_ROUNDUP


74 && (
f
->
m2
 & (
DBL_ROUNDUP
 << 1)))) {

75 
DBL
->
d
[1]++;

76 i‡(
DBL
->
d
[1] == 0L) {

77 
DBL
->
d
[0]++;

79 i‡(
f
->
exp
 =0 && (
DBL
->
d
[0] & ~
DBL_MASK
)) {

80 
f
->
exp
++;

82 i‡(
DBL
->
d
[0] & 
DBL_CARRYOUT
) {

83 i‡(
DBL
->
d
[0] & 01)

84 
DBL
->
d
[1] = 
CARRYBIT
;

85 
DBL
->
d
[0] >>= 1;

86 
f
->
exp
++;

90 i‡(
f
->
exp
 > 
DBL_MAX
)

91 
dbl_ovî
;

93 #ifde‡
EXCEPTION_INEXACT


104 
DBL
->
d
[0] &
DBL_MASK
;

105 
DBL
->
d
[0] |=

106 ((Ë(
f
->
exp
 << 
DBL_EXPSHIFT
Ë<< 
EXP_STORE
);

107 i‡(
f
->
sign
)

108 
DBL
->
d
[0] |
CARRYBIT
;

114 #i‡
FL_MSL_AT_LOW_ADDRESS


115 
	`put4
(
DBL
->
d
[0], (*) &DBL->d[0]);

116 
	`put4
(
DBL
->
d
[1], (*) &DBL->d[1]);

118 { 
l
;

119 
	`put4
(
DBL
->
d
[1], (*Ë&
l
);

120 
	`put4
(
DBL
->
d
[0], (*) &DBL->d[1]);

121 
DBL
->
d
[0] = 
l
;

129 
SINGLE
 *
SGL
;

132 
SGL
 = (
SINGLE
 *Ë(*Ë
to
;

133 i‡((
f
->
m1
 & 
SGL_ZERO
) == 0L) {

134 *
SGL
 = 0L;

137 
f
->
exp
 +
SGL_BIAS
;

138 i‡(
f
->
exp
 > 
SGL_MAX
) {

139 
sgl_ovî
: 
	`å≠
(
EFOVFL
);

140 
f
->
exp
 = 
SGL_MAX
+1;

141 
f
->
m1
 = 0L;

142 
f
->
m2
 = 0L;

143 i‡(
îr‹
++)

146 i‡(
f
->
exp
 < 
SGL_MIN
) {

147 
	`b64_rs·
(&(
f
->
m™tisß
));

148 i‡(
f
->
exp
 < 0) {

149 
	`b64_s·
(&(
f
->
m™tisß
), -f->
exp
);

150 
f
->
exp
 = 0;

156 *
SGL
 = (
f
->
m1
 >> 
SGL_RUNPACK
);

160 #ifde‡
EXCEPTION_INEXACT


161 i‡(
f
->
m2
 != 0 ||

162 (
f
->
m1
 & 
SGL_EXACT
) != 0L) {

163 
	`INEXACT
();

165 i‡(((
f
->
m1
 & 
SGL_EXACT
Ë> 
SGL_ROUNDUP
)

166 || ((
f
->
m1
 & 
SGL_EXACT
Ë=
SGL_ROUNDUP


167 && (
f
->
m1
 & (
SGL_ROUNDUP
 << 1)))) {

168 (*
SGL
)++;

169 i‡(
f
->
exp
 =0 && (*
SGL
 & ~
SGL_MASK
)) {

170 
f
->
exp
++;

173 i‡(*
SGL
 & 
SGL_CARRYOUT
) {

174 *
SGL
 >>= 1;

175 
f
->
exp
++;

177 i‡(
f
->
exp
 > 
SGL_MAX
)

178 
sgl_ovî
;

180 #ifde‡
EXCEPTION_INEXACT


191 *
SGL
 &
SGL_MASK
;

192 *
SGL
 |((Ë(
f
->
exp
 << 
SGL_EXPSHIFT
Ë<< 
EXP_STORE
);

193 i‡(
f
->
sign
)

194 *
SGL
 |
CARRYBIT
;

200 
	`put4
(*
SGL
, (*) &SGL);

202 
	}
}

	@complete.c

5 
	~"edôlöe.h
"

8 #if 
deföed
(
NEED_STRDUP
)

13 
	$°rdup
(
p
)

14 *
p
;

16 *
√w
;

18 i‡((
√w
 = 
	`NEW
(, 
	`°æí
(
p
Ë+ 1)Ë!
NULL
)

19 ()
	`°r˝y
(
√w
, 
p
);

20  
√w
;

21 
	}
}

27 
STATIC
 

28 
	$com∑ª
(
p1
, 
p2
)

29 
CONST
 *
p1
;

30 
CONST
 *
p2
;

32 
CONST
 **
v1
;

33 
CONST
 **
v2
;

35 
v1
 = (
CONST
 **)
p1
;

36 
v2
 = (
CONST
 **)
p2
;

37  
	`°rcmp
(*
v1
, *
v2
);

38 
	}
}

44 
STATIC
 

45 
	$FödM©ches
(
dú
, 
fûe
, 
avp
)

46 *
dú
;

47 *
fûe
;

48 ***
avp
;

50 **
av
;

51 **
√w
;

52 *
p
;

53 
DIR
 *
dp
;

54 
DIRENTRY
 *
ï
;

55 
SIZE_T
 
ac
;

56 
SIZE_T
 
Àn
;

57 
SIZE_T
 
choi˚s
;

58 
SIZE_T
 
tŸÆ
;

60 i‡((
dp
 = 
	`›ídú
(
dú
)Ë=
NULL
)

63 
av
 = 
NULL
;

64 
ac
 = 0;

65 
Àn
 = 
	`°æí
(
fûe
);

66 
choi˚s
 = 0;

67 
tŸÆ
 = 0;

68 (
ï
 = 
	`ªaddú
(
dp
)Ë!
NULL
) {

69 
p
 = 
ï
->
d_«me
;

70 i‡(
p
[0] == '.' && (p[1] == '\0' || (p[1] == '.' &&Ö[2] == '\0')))

72 i‡(
Àn
 && 
	`°∫cmp
(
p
, 
fûe
,Üen) != 0)

75 
choi˚s
++;

76 i‡((
tŸÆ
 +
	`°æí
(
p
)) > 1024) {

78 
ac
 > 0Ë
	`DISPOSE
(
av
[--ac]);

82 i‡((
ac
 % 
MEM_INC
) == 0) {

83 i‡((
√w
 = 
	`NEW
(*, 
ac
 + 
MEM_INC
)Ë=
NULL
) {

84 
tŸÆ
 = 0;

87 i‡(
ac
) {

88 
	`COPYFROMTO
(
√w
, 
av
, 
ac
 *  (**));

89 
	`DISPOSE
(
av
);

91 *
avp
 = 
av
 = 
√w
;

94 i‡((
av
[
ac
] = 
	`°rdup
(
p
)Ë=
NULL
) {

95 i‡(
ac
 == 0)

96 
	`DISPOSE
(
av
);

97 
tŸÆ
 = 0;

100 
ac
++;

104 ()
	`˛o£dú
(
dp
);

105 i‡(
tŸÆ
 > 1024) {

106 
m™y
[(
tŸÆ
) * 3];

107 
p
 = 
m™y
 + (many);

108 *--
p
 = '\0';

109 
choi˚s
 > 0) {

110 *--
p
 = '0' + 
choi˚s
 % 10;

111 
choi˚s
 /= 10;

113 
p
 > 
m™y
 + (many) - 8) *--p = ' ';

114 i‡((
p
 = 
	`°rdup
’)Ë!
NULL
Ë
av
[
ac
++] =Ö;

115 i‡((
p
 = 
	`°rdup
("choi˚s")Ë!
NULL
Ë
av
[
ac
++] =Ö;

117 i‡(
ac
)

118 
	`qs‹t
(
av
, 
ac
,  (**), 
com∑ª
);

120  
ac
;

121 
	}
}

126 
STATIC
 

127 
	$S∂ôP©h
(
∑th
, 
dú∑π
, 
fûï¨t
)

128 *
∑th
;

129 **
dú∑π
;

130 **
fûï¨t
;

132 
DOT
[] = ".";

133 *
d∑π
;

134 *
Â¨t
;

136 i‡((
Â¨t
 = 
	`°ºchr
(
∑th
, '/')Ë=
NULL
) {

137 i‡((
d∑π
 = 
	`°rdup
(
DOT
)Ë=
NULL
)

139 i‡((
Â¨t
 = 
	`°rdup
(
∑th
)Ë=
NULL
) {

140 
	`DISPOSE
(
d∑π
);

145 i‡((
d∑π
 = 
	`°rdup
(
∑th
)Ë=
NULL
)

147 
d∑π
[
Â¨t
 - 
∑th
 + 1] = '\0';

148 i‡((
Â¨t
 = 
	`°rdup
(++Â¨t)Ë=
NULL
) {

149 
	`DISPOSE
(
d∑π
);

153 *
dú∑π
 = 
d∑π
;

154 *
fûï¨t
 = 
Â¨t
;

156 
	}
}

163 
	$æ_com∂ëe
(
∑th«me
, 
unique
)

164 *
∑th«me
;

165 *
unique
;

167 **
av
;

168 *
dú
;

169 *
fûe
;

170 *
√w
;

171 *
p
;

172 
SIZE_T
 
ac
;

173 
SIZE_T
 
íd
;

174 
SIZE_T
 
i
;

175 
SIZE_T
 
j
;

176 
SIZE_T
 
Àn
;

178 i‡(
	`S∂ôP©h
(
∑th«me
, &
dú
, &
fûe
) < 0)

179  
NULL
;

180 i‡((
ac
 = 
	`FödM©ches
(
dú
, 
fûe
, &
av
)) == 0) {

181 
	`DISPOSE
(
dú
);

182 
	`DISPOSE
(
fûe
);

183  
NULL
;

186 
p
 = 
NULL
;

187 
Àn
 = 
	`°æí
(
fûe
);

188 i‡(
ac
 == 1) {

190 *
unique
 = 1;

191 
j
 = 
	`°æí
(
av
[0]Ë- 
Àn
 + 2;

192 i‡((
p
 = 
	`NEW
(, 
j
 + 1)Ë!
NULL
) {

193 
	`COPYFROMTO
(
p
, 
av
[0] + 
Àn
, 
j
);

194 i‡((
√w
 = 
	`NEW
(, 
	`°æí
(
dú
Ë+ såÀn(
av
[0]Ë+ 2)Ë!
NULL
) {

195 ()
	`°r˝y
(
√w
, 
dú
);

196 ()
	`°rˇt
(
√w
, "/");

197 ()
	`°rˇt
(
√w
, 
av
[0]);

198 
	`æ_add_¶ash
(
√w
, 
p
);

199 
	`DISPOSE
(
√w
);

204 *
unique
 = 0;

205 i‡(
Àn
) {

207 
i
 = 
Àn
, 
íd
 = 
	`°æí
(
av
[0]); i <Énd; i++)

208 
j
 = 1; j < 
ac
; j++)

209 i‡(
av
[0][
i
] !av[
j
][i])

210 
bªakout
;

211 
bªakout
:

212 i‡(
i
 > 
Àn
) {

213 
j
 = 
i
 - 
Àn
 + 1;

214 i‡((
p
 = 
	`NEW
(, 
j
)Ë!
NULL
) {

215 
	`COPYFROMTO
(
p
, 
av
[0] + 
Àn
, 
j
);

216 
p
[
j
 - 1] = '\0';

223 
	`DISPOSE
(
dú
);

224 
	`DISPOSE
(
fûe
);

225 
i
 = 0; i < 
ac
; i++)

226 
	`DISPOSE
(
av
[
i
]);

227 
	`DISPOSE
(
av
);

228  
p
;

229 
	}
}

235 
	$æ_li°_possib
(
∑th«me
, 
avp
)

236 *
∑th«me
;

237 ***
avp
;

239 *
dú
;

240 *
fûe
;

241 
ac
;

243 i‡(
	`S∂ôP©h
(
∑th«me
, &
dú
, &
fûe
) < 0)

245 
ac
 = 
	`FödM©ches
(
dú
, 
fûe
, 
avp
);

246 
	`DISPOSE
(
dú
);

247 
	`DISPOSE
(
fûe
);

248  
ac
;

249 
	}
}

	@config.h

4 
	#ENABLE_ARP
 1

	)

5 
	#ENABLE_IP
 1

	)

6 
	#ENABLE_TCP
 1

	)

7 
	#ENABLE_UDP
 1

	)

	@console.c

19 
	~"kî√l.h
"

20 
	~<ãrmios.h
>

21 
	~<möix/ˇŒƒ.h
>

22 
	~<möix/com.h
>

23 
	~"¥Ÿe˘.h
"

24 
	~"ây.h
"

25 
	~"¥oc.h
"

28 
	#MONO_BASE
 0xB0000L

	)

29 
	#COLOR_BASE
 0xB8000L

	)

30 
	#MONO_SIZE
 0x1000

	)

31 
	#COLOR_SIZE
 0x4000

	)

32 
	#EGA_SIZE
 0x8000

	)

33 
	#BLANK_COLOR
 0x0700

	)

34 
	#SCROLL_UP
 0

	)

35 
	#SCROLL_DOWN
 1

	)

36 
	#BLANK_MEM
 ((
u16_t
 *Ë0Ë

	)

37 
	#CONS_RAM_WORDS
 80

	)

38 
	#MAX_ESC_PARMS
 2

	)

41 
	#M_6845
 0x3B4

	)

42 
	#C_6845
 0x3D4

	)

43 
	#EGA
 0x3C4

	)

44 
	#INDEX
 0

	)

45 
	#DATA
 1

	)

46 
	#VID_ORG
 12

	)

47 
	#CURSOR
 14

	)

50 
	#BEEP_FREQ
 0x0533

	)

51 
	#B_TIME
 3

	)

54 
	#GA_SEQUENCER_INDEX
 0x3C4

	)

55 
	#GA_SEQUENCER_DATA
 0x3C5

	)

56 
	#GA_GRAPHICS_INDEX
 0x3CE

	)

57 
	#GA_GRAPHICS_DATA
 0x3CF

	)

58 
	#GA_VIDEO_ADDRESS
 0xA0000L

	)

59 
	#GA_FONT_SIZE
 8192

	)

62 
PUBLIC
 
	gvid_£g
;

63 
PUBLIC
 
	gvid_size
;

64 
PUBLIC
 
	gvid_mask
;

65 
PUBLIC
 
	gbœnk_cﬁ‹
 = 
BLANK_COLOR
;

68 
PRIVATE
 
	gvid_p‹t
;

69 
PRIVATE
 
	gwøp
;

70 
PRIVATE
 
	gso·s¸ﬁl
;

71 
PRIVATE
 
	gvid_ba£
;

72 
PRIVATE
 
	gbìpög
;

73 
	#s¸_width
 80

	)

74 
	#s¸_löes
 25

	)

75 
	#s¸_size
 (80*25Ë

	)

78 
	sc⁄sﬁe
 {

79 
ây_t
 *
	mc_ây
;

80 
	mc_cﬁumn
;

81 
	mc_row
;

82 
	mc_rw‹ds
;

83 
	mc_°¨t
;

84 
	mc_limô
;

85 
	mc_‹g
;

86 
	mc_cur
;

87 
	mc_©å
;

88 
	mc_bœnk
;

89 
	mc_esc_°©e
;

90 
	mc_esc_öåo
;

91 *
	mc_esc_∑rmp
;

92 
	mc_esc_∑rmv
[
MAX_ESC_PARMS
];

93 
u16_t
 
	mc_ømqueue
[
CONS_RAM_WORDS
];

94 } 
	tc⁄sﬁe_t
;

96 
PRIVATE
 
	gƒ_c⁄s
= 1;

97 
PRIVATE
 
c⁄sﬁe_t
 
	gc⁄s_èbÀ
[
NR_CONS
];

98 
PRIVATE
 
c⁄sﬁe_t
 *
	gcurc⁄s
;

101 
	#cﬁ‹
 (
vid_p‹t
 =
C_6845
)

	)

104 
PRIVATE
 
	g™si_cﬁ‹s
[8] = {0, 4, 2, 6, 1, 5, 3, 7};

107 
	s£quí˚
 {

108 
	mödex
;

109 
	mp‹t
;

110 
	mvÆue
;

113 
FORWARD
 
_PROTOTYPE
–
c⁄s_wrôe
, (
ây
 *
ç
) );

114 
FORWARD
 
_PROTOTYPE
–
c⁄s_echo
, (
ây_t
 *
ç
, 
c
) );

115 
FORWARD
 
_PROTOTYPE
–
out_ch¨
, (
c⁄sﬁe_t
 *
c⁄s
, 
c
) );

116 
FORWARD
 
_PROTOTYPE
–
bìp
, () );

117 
FORWARD
 
_PROTOTYPE
–
do_esˇ≥
, (
c⁄sﬁe_t
 *
c⁄s
, 
c
) );

118 
FORWARD
 
_PROTOTYPE
–
Êush
, (
c⁄sﬁe_t
 *
c⁄s
) );

119 
FORWARD
 
_PROTOTYPE
–
∑r£_esˇ≥
, (
c⁄sﬁe_t
 *
c⁄s
, 
c
) );

120 
FORWARD
 
_PROTOTYPE
–
s¸ﬁl_s¸ìn
, (
c⁄sﬁe_t
 *
c⁄s
, 
dú
) );

121 
FORWARD
 
_PROTOTYPE
–
£t_6845
, (
ªg
, 
vÆ
) );

122 
FORWARD
 
_PROTOTYPE
–
°›_bìp
, () );

123 
FORWARD
 
_PROTOTYPE
–
c⁄s_‹g0
, () );

124 
FORWARD
 
_PROTOTYPE
–
ga_¥ogøm
, (
£quí˚
 *
£q
) );

130 
PRIVATE
 
	$c⁄s_wrôe
(
ç
)

131 
ây
 *
ç
;

138 
cou¡
;

139 *
tbuf
;

140 
buf
[64];

141 
phys_byãs
 
u£r_phys
;

142 
c⁄sﬁe_t
 *
c⁄s
 = 
ç
->
ây_¥iv
;

147 i‡((
cou¡
 = 
ç
->
ây_ouée·
Ë=0 ||Åp->
ây_öhibôed
) ;

153 i‡(
cou¡
 > (
buf
)) count = (buf);

154 
u£r_phys
 = 
	`¥oc_vú2phys
(
	`¥oc_addr
(
ç
->
ây_ouçroc
),Åp->
ây_out_vú
);

155 
	`phys_c›y
(
u£r_phys
, 
	`vú2phys
(
buf
), (
phys_byãs
Ë
cou¡
);

156 
tbuf
 = 
buf
;

159 
ç
->
ây_out_vú
 +
cou¡
;

160 
ç
->
ây_outcum
 +
cou¡
;

161 
ç
->
ây_ouée·
 -
cou¡
;

168 i‡((Ë*
tbuf
 < ' ' || 
c⁄s
->
c_esc_°©e
 > 0

169 || 
c⁄s
->
c_cﬁumn
 >
s¸_width


170 || 
c⁄s
->
c_rw‹ds
 >
	`buÊí
(c⁄s->
c_ømqueue
))

172 
	`out_ch¨
(
c⁄s
, *
tbuf
++);

174 
c⁄s
->
c_ømqueue
[c⁄s->
c_rw‹ds
++] =

175 
c⁄s
->
c_©å
 | (*
tbuf
++ & 
BYTE
);

176 
c⁄s
->
c_cﬁumn
++;

178 } --
cou¡
 != 0);

179 } (
cou¡
 = 
ç
->
ây_ouée·
Ë!0 && !ç->
ây_öhibôed
);

181 
	`Êush
(
c⁄s
);

184 i‡(
ç
->
ây_ouée·
 == 0) {

185 
	`ây_ª∂y
(
ç
->
ây_ouåïcode
,Åp->
ây_outˇŒî
,Åp->
ây_ouçroc
,

186 
ç
->
ây_outcum
);

187 
ç
->
ây_outcum
 = 0;

189 
	}
}

195 
PRIVATE
 
	$c⁄s_echo
(
ç
, 
c
)

196 
ây_t
 *
ç
;

197 
c
;

200 
c⁄sﬁe_t
 *
c⁄s
 = 
ç
->
ây_¥iv
;

202 
	`out_ch¨
(
c⁄s
, 
c
);

203 
	`Êush
(
c⁄s
);

204 
	}
}

210 
PRIVATE
 
	$out_ch¨
(
c⁄s
, 
c
)

211 
c⁄sﬁe_t
 *
c⁄s
;

212 
c
;

215 i‡(
c⁄s
->
c_esc_°©e
 > 0) {

216 
	`∑r£_esˇ≥
(
c⁄s
, 
c
);

220 
c
) {

225 
	`Êush
(
c⁄s
);

226 
	`bìp
();

230 i‡(--
c⁄s
->
c_cﬁumn
 < 0) {

231 i‡(--
c⁄s
->
c_row
 >0Ëc⁄s->
c_cﬁumn
 +
s¸_width
;

233 
	`Êush
(
c⁄s
);

237 i‡((
c⁄s
->
c_ây
->
ây_ãrmios
.
c_oÊag
 & (
OPOST
|
ONLCR
))

238 =(
OPOST
|
ONLCR
)) {

239 
c⁄s
->
c_cﬁumn
 = 0;

244 i‡(
c⁄s
->
c_row
 =
s¸_löes
-1) {

245 
	`s¸ﬁl_s¸ìn
(
c⁄s
, 
SCROLL_UP
);

247 
c⁄s
->
c_row
++;

249 
	`Êush
(
c⁄s
);

253 
c⁄s
->
c_cﬁumn
 = 0;

254 
	`Êush
(
c⁄s
);

258 
c⁄s
->
c_cﬁumn
 = (c⁄s->c_cﬁum¿+ 
TAB_SIZE
Ë& ~
TAB_MASK
;

259 i‡(
c⁄s
->
c_cﬁumn
 > 
s¸_width
) {

260 
c⁄s
->
c_cﬁumn
 -
s¸_width
;

261 i‡(
c⁄s
->
c_row
 =
s¸_löes
-1) {

262 
	`s¸ﬁl_s¸ìn
(
c⁄s
, 
SCROLL_UP
);

264 
c⁄s
->
c_row
++;

267 
	`Êush
(
c⁄s
);

271 
	`Êush
(
c⁄s
);

272 
c⁄s
->
c_esc_°©e
 = 1;

276 i‡(
c⁄s
->
c_cﬁumn
 >
s¸_width
) {

277 i‡(!
LINEWRAP
) ;

278 i‡(
c⁄s
->
c_row
 =
s¸_löes
-1) {

279 
	`s¸ﬁl_s¸ìn
(
c⁄s
, 
SCROLL_UP
);

281 
c⁄s
->
c_row
++;

283 
c⁄s
->
c_cﬁumn
 = 0;

284 
	`Êush
(
c⁄s
);

286 i‡(
c⁄s
->
c_rw‹ds
 =
	`buÊí
(c⁄s->
c_ømqueue
)Ë
	`Êush
(cons);

287 
c⁄s
->
c_ømqueue
[c⁄s->
c_rw‹ds
++] = c⁄s->
c_©å
 | (
c
 & 
BYTE
);

288 
c⁄s
->
c_cﬁumn
++;

291 
	}
}

297 
PRIVATE
 
	$s¸ﬁl_s¸ìn
(
c⁄s
, 
dú
)

298 
c⁄sﬁe_t
 *
c⁄s
;

299 
dú
;

301 
√w_löe
, 
√w_‹g
, 
ch¨s
;

303 
	`Êush
(
c⁄s
);

304 
ch¨s
 = 
s¸_size
 - 
s¸_width
;

313 i‡(
dú
 =
SCROLL_UP
) {

315 i‡(
so·s¸ﬁl
) {

316 
	`vid_vid_c›y
(
c⁄s
->
c_°¨t
 + 
s¸_width
, c⁄s->c_°¨t, 
ch¨s
);

318 i‡(!
wøp
 && 
c⁄s
->
c_‹g
 + 
s¸_size
 + 
s¸_width
 >c⁄s->
c_limô
) {

319 
	`vid_vid_c›y
(
c⁄s
->
c_‹g
 + 
s¸_width
, c⁄s->
c_°¨t
, 
ch¨s
);

320 
c⁄s
->
c_‹g
 = c⁄s->
c_°¨t
;

322 
c⁄s
->
c_‹g
 = (c⁄s->c_‹g + 
s¸_width
Ë& 
vid_mask
;

324 
√w_löe
 = (
c⁄s
->
c_‹g
 + 
ch¨s
Ë& 
vid_mask
;

327 i‡(
so·s¸ﬁl
) {

328 
	`vid_vid_c›y
(
c⁄s
->
c_°¨t
, c⁄s->c_°¨à+ 
s¸_width
, 
ch¨s
);

330 i‡(!
wøp
 && 
c⁄s
->
c_‹g
 < c⁄s->
c_°¨t
 + 
s¸_width
) {

331 
√w_‹g
 = 
c⁄s
->
c_limô
 - 
s¸_size
;

332 
	`vid_vid_c›y
(
c⁄s
->
c_‹g
, 
√w_‹g
 + 
s¸_width
, 
ch¨s
);

333 
c⁄s
->
c_‹g
 = 
√w_‹g
;

335 
c⁄s
->
c_‹g
 = (c⁄s->c_‹g - 
s¸_width
Ë& 
vid_mask
;

337 
√w_löe
 = 
c⁄s
->
c_‹g
;

340 
bœnk_cﬁ‹
 = 
c⁄s
->
c_bœnk
;

341 
	`mem_vid_c›y
(
BLANK_MEM
, 
√w_löe
, 
s¸_width
);

344 i‡(
c⁄s
 =
curc⁄s
Ë
	`£t_6845
(
VID_ORG
, c⁄s->
c_‹g
);

345 
	`Êush
(
c⁄s
);

346 
	}
}

352 
PRIVATE
 
	$Êush
(
c⁄s
)

353 
c⁄sﬁe_t
 *
c⁄s
;

358 
cur
;

359 
ây_t
 *
ç
 = 
c⁄s
->
c_ây
;

362 i‡(
c⁄s
->
c_rw‹ds
 > 0) {

363 
	`mem_vid_c›y
(
c⁄s
->
c_ømqueue
, c⁄s->
c_cur
, c⁄s->
c_rw‹ds
);

364 
c⁄s
->
c_rw‹ds
 = 0;

367 
ç
->
ây_posôi⁄
 = 
c⁄s
->
c_cﬁumn
;

368 
ç
->
ây_ª¥öt
 = 
TRUE
;

372 i‡(
c⁄s
->
c_cﬁumn
 < 0) cons->c_column = 0;

373 i‡(
c⁄s
->
c_cﬁumn
 > 
s¸_width
) cons->c_column = scr_width;

374 i‡(
c⁄s
->
c_row
 < 0) cons->c_row = 0;

375 i‡(
c⁄s
->
c_row
 >
s¸_löes
) cons->c_row = scr_lines - 1;

376 
cur
 = 
c⁄s
->
c_‹g
 + c⁄s->
c_row
 * 
s¸_width
 + c⁄s->
c_cﬁumn
;

377 i‡(
cur
 !
c⁄s
->
c_cur
) {

378 i‡(
c⁄s
 =
curc⁄s
Ë
	`£t_6845
(
CURSOR
, 
cur
);

379 
c⁄s
->
c_cur
 = 
cur
;

381 
	}
}

387 
PRIVATE
 
	$∑r£_esˇ≥
(
c⁄s
, 
c
)

388 
c⁄sﬁe_t
 *
c⁄s
;

389 
c
;

408 
c⁄s
->
c_esc_°©e
) {

410 
c⁄s
->
c_esc_öåo
 = '\0';

411 
c⁄s
->
c_esc_∑rmp
 = c⁄s->
c_esc_∑rmv
;

412 
c⁄s
->
c_esc_∑rmv
[0] = cons->c_esc_parmv[1] = 0;

413 
c
) {

415 
c⁄s
->
c_esc_öåo
 = 
c
;

416 
c⁄s
->
c_esc_°©e
 = 2;

419 
	`do_esˇ≥
(
c⁄s
, 
c
);

422 
c⁄s
->
c_esc_°©e
 = 0;

427 i‡(
c
 >= '0' && c <= '9') {

428 i‡(
c⁄s
->
c_esc_∑rmp
 < 
	`bu„nd
(c⁄s->
c_esc_∑rmv
))

429 *
c⁄s
->
c_esc_∑rmp
 = *c⁄s->c_esc_∑rm∞* 10 + (
c
-'0');

431 i‡(
c
 == ';') {

432 i‡(++
c⁄s
->
c_esc_∑rmp
 < 
	`bu„nd
(c⁄s->
c_esc_∑rmv
))

433 *
c⁄s
->
c_esc_∑rmp
 = 0;

435 
	`do_esˇ≥
(
c⁄s
, 
c
);

439 
	}
}

445 
PRIVATE
 
	$do_esˇ≥
(
c⁄s
, 
c
)

446 
c⁄sﬁe_t
 *
c⁄s
;

447 
c
;

449 
vÆue
, 
n
;

450 
§c
, 
d°
, 
cou¡
;

453 
	`Êush
(
c⁄s
);

455 i‡(
c⁄s
->
c_esc_öåo
 == '\0') {

457 
c
) {

459 i‡(
c⁄s
->
c_row
 == 0) {

460 
	`s¸ﬁl_s¸ìn
(
c⁄s
, 
SCROLL_DOWN
);

462 
c⁄s
->
c_row
--;

464 
	`Êush
(
c⁄s
);

470 i‡(
c⁄s
->
c_esc_öåo
 == '[') {

472 
vÆue
 = 
c⁄s
->
c_esc_∑rmv
[0];

473 
c
) {

475 
n
 = (
vÆue
 == 0 ? 1 : value);

476 
c⁄s
->
c_row
 -
n
;

477 
	`Êush
(
c⁄s
);

481 
n
 = (
vÆue
 == 0 ? 1 : value);

482 
c⁄s
->
c_row
 +
n
;

483 
	`Êush
(
c⁄s
);

487 
n
 = (
vÆue
 == 0 ? 1 : value);

488 
c⁄s
->
c_cﬁumn
 +
n
;

489 
	`Êush
(
c⁄s
);

493 
n
 = (
vÆue
 == 0 ? 1 : value);

494 
c⁄s
->
c_cﬁumn
 -
n
;

495 
	`Êush
(
c⁄s
);

499 
c⁄s
->
c_row
 = c⁄s->
c_esc_∑rmv
[0] - 1;

500 
c⁄s
->
c_cﬁumn
 = c⁄s->
c_esc_∑rmv
[1] - 1;

501 
	`Êush
(
c⁄s
);

505 
vÆue
) {

507 
cou¡
 = 
s¸_size
 - (
c⁄s
->
c_cur
 - c⁄s->
c_‹g
);

508 
d°
 = 
c⁄s
->
c_cur
;

511 
cou¡
 = 
c⁄s
->
c_cur
 - c⁄s->
c_‹g
;

512 
d°
 = 
c⁄s
->
c_‹g
;

515 
cou¡
 = 
s¸_size
;

516 
d°
 = 
c⁄s
->
c_‹g
;

519 
cou¡
 = 0;

520 
d°
 = 
c⁄s
->
c_‹g
;

522 
bœnk_cﬁ‹
 = 
c⁄s
->
c_bœnk
;

523 
	`mem_vid_c›y
(
BLANK_MEM
, 
d°
, 
cou¡
);

527 
vÆue
) {

529 
cou¡
 = 
s¸_width
 - 
c⁄s
->
c_cﬁumn
;

530 
d°
 = 
c⁄s
->
c_cur
;

533 
cou¡
 = 
c⁄s
->
c_cﬁumn
;

534 
d°
 = 
c⁄s
->
c_cur
 - c⁄s->
c_cﬁumn
;

537 
cou¡
 = 
s¸_width
;

538 
d°
 = 
c⁄s
->
c_cur
 - c⁄s->
c_cﬁumn
;

541 
cou¡
 = 0;

542 
d°
 = 
c⁄s
->
c_cur
;

544 
bœnk_cﬁ‹
 = 
c⁄s
->
c_bœnk
;

545 
	`mem_vid_c›y
(
BLANK_MEM
, 
d°
, 
cou¡
);

549 
n
 = 
vÆue
;

550 i‡(
n
 < 1)Ç = 1;

551 i‡(
n
 > (
s¸_löes
 - 
c⁄s
->
c_row
))

552 
n
 = 
s¸_löes
 - 
c⁄s
->
c_row
;

554 
§c
 = 
c⁄s
->
c_‹g
 + c⁄s->
c_row
 * 
s¸_width
;

555 
d°
 = 
§c
 + 
n
 * 
s¸_width
;

556 
cou¡
 = (
s¸_löes
 - 
c⁄s
->
c_row
 - 
n
Ë* 
s¸_width
;

557 
	`vid_vid_c›y
(
§c
, 
d°
, 
cou¡
);

558 
bœnk_cﬁ‹
 = 
c⁄s
->
c_bœnk
;

559 
	`mem_vid_c›y
(
BLANK_MEM
, 
§c
, 
n
 * 
s¸_width
);

563 
n
 = 
vÆue
;

564 i‡(
n
 < 1)Ç = 1;

565 i‡(
n
 > (
s¸_löes
 - 
c⁄s
->
c_row
))

566 
n
 = 
s¸_löes
 - 
c⁄s
->
c_row
;

568 
d°
 = 
c⁄s
->
c_‹g
 + c⁄s->
c_row
 * 
s¸_width
;

569 
§c
 = 
d°
 + 
n
 * 
s¸_width
;

570 
cou¡
 = (
s¸_löes
 - 
c⁄s
->
c_row
 - 
n
Ë* 
s¸_width
;

571 
	`vid_vid_c›y
(
§c
, 
d°
, 
cou¡
);

572 
bœnk_cﬁ‹
 = 
c⁄s
->
c_bœnk
;

573 
	`mem_vid_c›y
(
BLANK_MEM
, 
d°
 + 
cou¡
, 
n
 * 
s¸_width
);

577 
n
 = 
vÆue
;

578 i‡(
n
 < 1)Ç = 1;

579 i‡(
n
 > (
s¸_width
 - 
c⁄s
->
c_cﬁumn
))

580 
n
 = 
s¸_width
 - 
c⁄s
->
c_cﬁumn
;

582 
§c
 = 
c⁄s
->
c_cur
;

583 
d°
 = 
§c
 + 
n
;

584 
cou¡
 = 
s¸_width
 - 
c⁄s
->
c_cﬁumn
 - 
n
;

585 
	`vid_vid_c›y
(
§c
, 
d°
, 
cou¡
);

586 
bœnk_cﬁ‹
 = 
c⁄s
->
c_bœnk
;

587 
	`mem_vid_c›y
(
BLANK_MEM
, 
§c
, 
n
);

591 
n
 = 
vÆue
;

592 i‡(
n
 < 1)Ç = 1;

593 i‡(
n
 > (
s¸_width
 - 
c⁄s
->
c_cﬁumn
))

594 
n
 = 
s¸_width
 - 
c⁄s
->
c_cﬁumn
;

596 
d°
 = 
c⁄s
->
c_cur
;

597 
§c
 = 
d°
 + 
n
;

598 
cou¡
 = 
s¸_width
 - 
c⁄s
->
c_cﬁumn
 - 
n
;

599 
	`vid_vid_c›y
(
§c
, 
d°
, 
cou¡
);

600 
bœnk_cﬁ‹
 = 
c⁄s
->
c_bœnk
;

601 
	`mem_vid_c›y
(
BLANK_MEM
, 
d°
 + 
cou¡
, 
n
);

605 
vÆue
) {

607 i‡(
cﬁ‹
) {

609 
c⁄s
->
c_©å
 = (cons->c_attr & 0xf0ff) | 0x0E00;

612 
c⁄s
->
c_©å
 |= 0x0800;

617 i‡(
cﬁ‹
) {

619 
c⁄s
->
c_©å
 = (cons->c_attr & 0xf0ff) | 0x0A00;

621 
c⁄s
->
c_©å
 = (cons->c_attr & 0x8900);

626 i‡(
cﬁ‹
) {

628 
c⁄s
->
c_©å
 = (cons->c_attr & 0xf0ff) | 0x0500;

631 
c⁄s
->
c_©å
 |= 0x8000;

636 i‡(
cﬁ‹
) {

638 
c⁄s
->
c_©å
 =

639 ((
c⁄s
->
c_©å
 & 0xf000) >> 4) |

640 ((
c⁄s
->
c_©å
 & 0x0f00) << 4);

642 i‡((
c⁄s
->
c_©å
 & 0x7000) == 0) {

643 
c⁄s
->
c_©å
 = (cons->c_attr & 0x8800) | 0x7000;

645 
c⁄s
->
c_©å
 = (cons->c_attr & 0x8800) | 0x0700;

650 i‡(30 <
vÆue
 && value <= 37) {

651 
c⁄s
->
c_©å
 =

652 (
c⁄s
->
c_©å
 & 0xf0ff) |

653 (
™si_cﬁ‹s
[(
vÆue
 - 30)] << 8);

654 
c⁄s
->
c_bœnk
 =

655 (
c⁄s
->
c_bœnk
 & 0xf0ff) |

656 (
™si_cﬁ‹s
[(
vÆue
 - 30)] << 8);

658 i‡(40 <
vÆue
 && value <= 47) {

659 
c⁄s
->
c_©å
 =

660 (
c⁄s
->
c_©å
 & 0x0fff) |

661 (
™si_cﬁ‹s
[(
vÆue
 - 40)] << 12);

662 
c⁄s
->
c_bœnk
 =

663 (
c⁄s
->
c_bœnk
 & 0x0fff) |

664 (
™si_cﬁ‹s
[(
vÆue
 - 40)] << 12);

666 
c⁄s
->
c_©å
 = c⁄s->
c_bœnk
;

673 
c⁄s
->
c_esc_°©e
 = 0;

674 
	}
}

680 
PRIVATE
 
	$£t_6845
(
ªg
, 
vÆ
)

681 
ªg
;

682 
vÆ
;

688 
	`lock
();

689 
	`out_byã
(
vid_p‹t
 + 
INDEX
, 
ªg
);

690 
	`out_byã
(
vid_p‹t
 + 
DATA
, (
vÆ
>>8Ë& 
BYTE
);

691 
	`out_byã
(
vid_p‹t
 + 
INDEX
, 
ªg
 + 1);

692 
	`out_byã
(
vid_p‹t
 + 
DATA
, 
vÆ
&
BYTE
);

693 
	`u∆ock
();

694 
	}
}

700 
PRIVATE
 
	$bìp
()

707 
mesßge
 
mess
;

709 i‡(
bìpög
) ;

710 
	`out_byã
(
TIMER_MODE
, 0xB6);

711 
	`out_byã
(
TIMER2
, 
BEEP_FREQ
 & 
BYTE
);

712 
	`out_byã
(
TIMER2
, (
BEEP_FREQ
 >> 8Ë& 
BYTE
);

713 
	`lock
();

714 
	`out_byã
(
PORT_B
, 
	`ö_byã
(PORT_B) | 3);

715 
	`u∆ock
();

716 
bìpög
 = 
TRUE
;

718 
mess
.
m_ty≥
 = 
SET_ALARM
;

719 
mess
.
CLOCK_PROC_NR
 = 
TTY
;

720 
mess
.
DELTA_TICKS
 = 
B_TIME
;

721 
mess
.
FUNC_TO_CALL
 = (
sigh™dÀr_t
Ë
°›_bìp
;

722 
	`£ndªc
(
CLOCK
, &
mess
);

723 
	}
}

729 
PRIVATE
 
	$°›_bìp
()

733 
	`lock
();

734 
	`out_byã
(
PORT_B
, 
	`ö_byã
(PORT_B) & ~3);

735 
bìpög
 = 
FALSE
;

736 
	`u∆ock
();

737 
	}
}

743 
PUBLIC
 
	$s¸_öô
(
ç
)

744 
ây_t
 *
ç
;

747 
c⁄sﬁe_t
 *
c⁄s
;

748 
phys_byãs
 
vid_ba£
;

749 
u16_t
 
bios_¸tba£
;

750 
löe
;

751 
∑ge_size
;

754 
löe
 = 
ç
 - &
ây_èbÀ
[0];

755 i‡(
löe
 >
ƒ_c⁄s
) ;

756 
c⁄s
 = &
c⁄s_èbÀ
[
löe
];

757 
c⁄s
->
c_ây
 = 
ç
;

758 
ç
->
ây_¥iv
 = 
c⁄s
;

761 
	`kb_öô
(
ç
);

764 
ç
->
ây_devwrôe
 = 
c⁄s_wrôe
;

765 
ç
->
ây_echo
 = 
c⁄s_echo
;

768 
	`phys_c›y
(0x463L, 
	`vú2phys
(&
bios_¸tba£
), 2L);

770 
vid_p‹t
 = 
bios_¸tba£
;

772 i‡(
cﬁ‹
) {

773 
vid_ba£
 = 
COLOR_BASE
;

774 
vid_size
 = 
COLOR_SIZE
;

776 
vid_ba£
 = 
MONO_BASE
;

777 
vid_size
 = 
MONO_SIZE
;

779 i‡(
ega
Ë
vid_size
 = 
EGA_SIZE
;

780 
wøp
 = !
ega
;

782 
vid_£g
 = 
¥Ÿe˘ed_mode
 ? 
VIDEO_SELECTOR
 : 
	`physb_to_h˛ick
(
vid_ba£
);

783 
	`öô_d©a£g
(&
gdt
[
VIDEO_INDEX
], 
vid_ba£
, (
phys_byãs
Ë
vid_size
,

784 
TASK_PRIVILEGE
);

785 
vid_size
 >>= 1;

786 
vid_mask
 = 
vid_size
 - 1;

789 
ƒ_c⁄s
 = 
vid_size
 / 
s¸_size
;

790 i‡(
ƒ_c⁄s
 > 
NR_CONS
)Çr_cons = NR_CONS;

791 i‡(
ƒ_c⁄s
 > 1Ë
wøp
 = 0;

792 
∑ge_size
 = 
vid_size
 / 
ƒ_c⁄s
;

793 
c⁄s
->
c_°¨t
 = 
löe
 * 
∑ge_size
;

794 
c⁄s
->
c_limô
 = c⁄s->
c_°¨t
 + 
∑ge_size
;

795 
c⁄s
->
c_‹g
 = c⁄s->
c_°¨t
;

796 
c⁄s
->
c_©å
 = c⁄s->
c_bœnk
 = 
BLANK_COLOR
;

799 
bœnk_cﬁ‹
 = 
BLANK_COLOR
;

800 
	`mem_vid_c›y
(
BLANK_MEM
, 
c⁄s
->
c_°¨t
, 
s¸_size
);

801 
	`£À˘_c⁄sﬁe
(0);

802 
	}
}

808 
PUBLIC
 
	$putk
(
c
)

809 
c
;

817 i‡(
c
 != 0) {

818 i‡(
c
 ='\n'Ë
	`putk
('\r');

819 
	`out_ch¨
(&
c⁄s_èbÀ
[0], (Ë
c
);

821 
	`Êush
(&
c⁄s_èbÀ
[0]);

823 
	}
}

829 
PUBLIC
 
	$toggÀ_s¸ﬁl
()

833 
	`c⁄s_‹g0
();

834 
so·s¸ﬁl
 = !softscroll;

835 
	`¥ötf
("%sw¨ês¸ﬁlögÉ«bÀd.\n", 
so·s¸ﬁl
 ? "Soft" : "Hard");

836 
	}
}

842 
PUBLIC
 
	$c⁄s_°›
()

845 
	`c⁄s_‹g0
();

846 
so·s¸ﬁl
 = 1;

847 
	`£À˘_c⁄sﬁe
(0);

848 
c⁄s_èbÀ
[0].
c_©å
 = c⁄s_èbÀ[0].
c_bœnk
 = 
BLANK_COLOR
;

849 
	}
}

855 
PRIVATE
 
	$c⁄s_‹g0
()

858 
c⁄s_löe
;

859 
c⁄sﬁe_t
 *
c⁄s
;

860 
n
;

862 
c⁄s_löe
 = 0; c⁄s_löê< 
ƒ_c⁄s
; cons_line++) {

863 
c⁄s
 = &
c⁄s_èbÀ
[
c⁄s_löe
];

864 
c⁄s
->
c_‹g
 > c⁄s->
c_°¨t
) {

865 
n
 = 
vid_size
 - 
s¸_size
;

866 i‡(
n
 > 
c⁄s
->
c_‹g
 - c⁄s->
c_°¨t
)

867 
n
 = 
c⁄s
->
c_‹g
 - c⁄s->
c_°¨t
;

868 
	`vid_vid_c›y
(
c⁄s
->
c_‹g
, c⁄s->c_‹g - 
n
, 
s¸_size
);

869 
c⁄s
->
c_‹g
 -
n
;

871 
	`Êush
(
c⁄s
);

873 
	`£À˘_c⁄sﬁe
(
cuºít
);

874 
	}
}

880 
PUBLIC
 
	$£À˘_c⁄sﬁe
(
c⁄s_löe
)

884 i‡(
c⁄s_löe
 < 0 || c⁄s_löê>
ƒ_c⁄s
) ;

885 
cuºít
 = 
c⁄s_löe
;

886 
curc⁄s
 = &
c⁄s_èbÀ
[
c⁄s_löe
];

887 
	`£t_6845
(
VID_ORG
, 
curc⁄s
->
c_‹g
);

888 
	`£t_6845
(
CURSOR
, 
curc⁄s
->
c_cur
);

889 
	}
}

896 
PUBLIC
 
	$c⁄_lﬂdf⁄t
(
u£r_phys
)

897 
phys_byãs
 
u£r_phys
;

900 
£quí˚
 
£q1
[7] = {

901 { 
GA_SEQUENCER_INDEX
, 0x00, 0x01 },

902 { 
GA_SEQUENCER_INDEX
, 0x02, 0x04 },

903 { 
GA_SEQUENCER_INDEX
, 0x04, 0x07 },

904 { 
GA_SEQUENCER_INDEX
, 0x00, 0x03 },

905 { 
GA_GRAPHICS_INDEX
, 0x04, 0x02 },

906 { 
GA_GRAPHICS_INDEX
, 0x05, 0x00 },

907 { 
GA_GRAPHICS_INDEX
, 0x06, 0x00 },

909 
£quí˚
 
£q2
[7] = {

910 { 
GA_SEQUENCER_INDEX
, 0x00, 0x01 },

911 { 
GA_SEQUENCER_INDEX
, 0x02, 0x03 },

912 { 
GA_SEQUENCER_INDEX
, 0x04, 0x03 },

913 { 
GA_SEQUENCER_INDEX
, 0x00, 0x03 },

914 { 
GA_GRAPHICS_INDEX
, 0x04, 0x00 },

915 { 
GA_GRAPHICS_INDEX
, 0x05, 0x10 },

916 { 
GA_GRAPHICS_INDEX
, 0x06, 0 },

919 
£q2
[6].
vÆue

cﬁ‹
 ? 0x0E : 0x0A;

921 i‡(!
ega
Ë(
ENOTTY
);

923 
	`lock
();

924 
	`ga_¥ogøm
(
£q1
);

926 
	`phys_c›y
(
u£r_phys
, (
phys_byãs
)
GA_VIDEO_ADDRESS
, (phys_byãs)
GA_FONT_SIZE
);

928 
	`ga_¥ogøm
(
£q2
);

929 
	`u∆ock
();

931 (
OK
);

932 
	}
}

939 
PRIVATE
 
	$ga_¥ogøm
(
£q
)

940 
£quí˚
 *
£q
;

942 
Àn
= 7;

944 
	`out_byã
(
£q
->
ödex
, seq->
p‹t
);

945 
	`out_byã
(
£q
->
ödex
+1, seq->
vÆue
);

946 
£q
++;

947 } --
Àn
 > 0);

948 
	}
}

	@const.h

3 #i‡(
CHIP
 =
INTEL
)

5 
	#K_STACK_BYTES
 1024

	)

7 
	#INIT_PSW
 0x0200

	)

8 
	#INIT_TASK_PSW
 0x1200

	)

9 
	#TRACEBIT
 0x100

	)

10 
	#SETPSW
(
Ω
, 
√w
Ë \

	)

11 ((
	gΩ
)->
	gp_ªg
.
	gpsw
 = (
Ω
)->
p_ªg
.
psw
 & ~0xCD5 | (
√w
) & 0xCD5)

22 
	#INIT_SP
 (2 + 2 + 3 * 2 + 3 * 2 + 3 * 2 + 3 * 2)

	)

24 
	#HCLICK_SHIFT
 4

	)

25 
	#HCLICK_SIZE
 16

	)

26 #i‡
CLICK_SIZE
 >
HCLICK_SIZE


27 
	#˛ick_to_h˛ick
(
n
Ë(“Ë<< (
CLICK_SHIFT
 - 
HCLICK_SHIFT
))

	)

29 
	#˛ick_to_h˛ick
(
n
Ë(“Ë>> (
HCLICK_SHIFT
 - 
CLICK_SHIFT
))

	)

31 
	#h˛ick_to_physb
(
n
Ë((
phys_byãs
Ë“Ë<< 
HCLICK_SHIFT
)

	)

32 
	#physb_to_h˛ick
(
n
Ë(“Ë>> 
HCLICK_SHIFT
)

	)

35 
	#DIVIDE_VECTOR
 0

	)

36 
	#DEBUG_VECTOR
 1

	)

37 
	#NMI_VECTOR
 2

	)

38 
	#BREAKPOINT_VECTOR
 3

	)

39 
	#OVERFLOW_VECTOR
 4

	)

42 
	#SYS_VECTOR
 32

	)

43 
	#SYS386_VECTOR
 33

	)

44 
	#LEVEL0_VECTOR
 34

	)

50 
	#BIOS_IRQ0_VEC
 0x08

	)

51 
	#BIOS_IRQ8_VEC
 0x70

	)

52 
	#IRQ0_VECTOR
 0x28

	)

53 
	#IRQ8_VECTOR
 0x30

	)

56 
	#NR_IRQ_VECTORS
 16

	)

57 
	#CLOCK_IRQ
 0

	)

58 
	#KEYBOARD_IRQ
 1

	)

59 
	#CASCADE_IRQ
 2

	)

60 
	#ETHER_IRQ
 3

	)

61 
	#SECONDARY_IRQ
 3

	)

62 
	#RS232_IRQ
 4

	)

63 
	#XT_WINI_IRQ
 5

	)

64 
	#FLOPPY_IRQ
 6

	)

65 
	#PRINTER_IRQ
 7

	)

66 
	#AT_WINI_IRQ
 14

	)

69 
	#BIOS_VECTOR
(
úq
Ë\

	)

70 (((
úq
Ë< 8 ? 
BIOS_IRQ0_VEC
 : 
BIOS_IRQ8_VEC
) + ((irq) & 0x07))

71 
	#VECTOR
(
úq
Ë\

	)

72 (((
úq
Ë< 8 ? 
IRQ0_VECTOR
 : 
IRQ8_VECTOR
) + ((irq) & 0x07))

75 
	#WINI_0_PARM_VEC
 0x41

	)

76 
	#WINI_1_PARM_VEC
 0x46

	)

79 
	#INT_CTL
 0x20

	)

80 
	#INT_CTLMASK
 0x21

	)

81 
	#INT2_CTL
 0xA0

	)

82 
	#INT2_CTLMASK
 0xA1

	)

85 
	#ENABLE
 0x20

	)

88 
	#NR_MEMS
 3

	)

91 
	#PCR
 0x65

	)

92 
	#PORT_B
 0x61

	)

93 
	#TIMER0
 0x40

	)

94 
	#TIMER2
 0x42

	)

95 
	#TIMER_MODE
 0x43

	)

99 #i‡(
CHIP
 =
M68000
)

101 
	#K_STACK_BYTES
 1024

	)

104 
	#NR_MEMS
 2

	)

107 
	#NR_REGS
 15

	)

109 
	#TRACEBIT
 0x8000

	)

110 
	#SETPSW
(
Ω
, 
√w
Ë \

	)

111 ((
	gΩ
)->
	gp_ªg
.
	gpsw
 = (
Ω
)->
p_ªg
.
psw
 & ~0xFF | (
√w
) & 0xFF)

113 
	#MEM_BYTES
 0xfffffff‡

	)

115 #ifde‡
__ACK__


116 
	#FSTRUCOPY


	)

122 
	#TASK_Q
 0

	)

123 
	#SERVER_Q
 1

	)

124 
	#USER_Q
 2

	)

126 #i‡(
MACHINE
 =
ATARI
)

127 
	#SHADOW_Q
 3

	)

128 
	#NQ
 4

	)

130 
	#NQ
 3

	)

134 
	#EP_UNSET
 0

	)

135 
	#EP_OFF
 1

	)

136 
	#EP_ON
 2

	)

137 
	#EP_SET
 3

	)

142 
	#vú2phys
(
vú
Ë(
d©a_ba£
 + (
vú_byãs
Ë(vú))

	)

144 
	#¥ötf
 
¥ötk


	)

	@crypt.c

6 
	#nû
 0

	)

7 
	#pùe
 
_pùe


	)

8 
	#f‹k
 
_f‹k


	)

9 
	#˛o£
 
_˛o£


	)

10 
	#dup2
 
_dup2


	)

11 
	#exe˛
 
_exe˛


	)

12 
	#ªad
 
_ªad


	)

13 
	#_exô
 
__exô


	)

14 
	#wrôe
 
_wrôe


	)

15 
	#waôpid
 
_waôpid


	)

16 
	~<sys/ty≥s.h
>

17 
	~<uni°d.h
>

18 
	~<°rög.h
>

19 
	~<°dio.h
>

20 
	~<sys/waô.h
>

23 
	gPWDAUTH
[] = "/usr/lib/pwdauth";

24 
	#LEN
 1024

	)

26 *
	$¸y±
(c⁄° *
key
, c⁄° *
ß…
)

28 
pid_t
 
pid
;

29 
°©us
;

30 
pfd
[2];

31 
pwd©a
[
LEN
];

32 *
p

pwd©a
;

33 c⁄° *
k

key
;

34 c⁄° *
s

ß…
;

35 
n
;

38 (*
p
++ = *
k
++Ë!0Ëi‡’ =
pwd©a
+
LEN
-1Ë
Áû
;

39 (*
p
++ = *
s
++Ë!0Ëi‡’ =
pwd©a
+
LEN
-0Ë
Áû
;

41 i‡(
	`pùe
(
pfd
Ë< 0Ë
Áû
;

44 (Ë
	`wrôe
(
pfd
[1], 
pwd©a
, 
p
 -Öwdata);

46 (
pid

	`f‹k
())) {

48 
	`˛o£
(
pfd
[0]);

49 
	`˛o£
(
pfd
[1]);

50 
Áû
;

53 i‡(
pfd
[0] != 0) {

54 
	`dup2
(
pfd
[0], 0);

55 
	`˛o£
(
pfd
[0]);

57 i‡(
pfd
[1] != 1) {

58 
	`dup2
(
pfd
[1], 1);

59 
	`˛o£
(
pfd
[1]);

62 
	`exe˛
(
PWDAUTH
, PWDAUTH, (*Ë
nû
);

65 (Ë
	`ªad
(0, 
pwd©a
, 
LEN
);

66 
	`_exô
(1);

68 
	`˛o£
(
pfd
[1]);

70 i‡(
	`waôpid
(
pid
, &
°©us
, 0) < 0 || status != 0) {

71 
	`˛o£
(
pfd
[0]);

72 
Áû
;

78 
n

	`ªad
(
pfd
[0], 
pwd©a
, 
LEN
);

79 
	`˛o£
(
pfd
[0]);

80 i‡(
n
 < 0Ë
Áû
;

81 
p
 = 
pwd©a
 + 
n
;

82 
n
 = 0;

83 
p
 > 
pwd©a
Ëi‡(*--∞=0Ë
n
++;

84 i‡(
n
 !1Ë
Áû
;

85  
pwd©a
;

87 
Áû
:

88 
pwd©a
[0] = 
ß…
[0] ^ 1;

89 
pwd©a
[1] = 0;

90  
pwd©a
;

91 
	}
}

	@ctermid.c

14 
	~<lib.h
>

15 
	~<°rög.h
>

16 
	~<°dio.h
>

18 
_PROTOTYPE
–*
˘îmid
, (*
«me_•a˚
));

20 #i‚de‡
L_˘îmid


21 
	#L_˘îmid
 9

	)

24 *
	$˘îmid
(
«me_•a˚
)

25 *
«me_•a˚
;

27 
PRIVATE
 
ãrmid
[
L_˘îmid
];

29 i‡(
«me_•a˚
 =(*)
NULL
Ë«me_•a˚ = 
ãrmid
;

30 
	`°r˝y
(
«me_•a˚
, "/dev/tty");

31 (
«me_•a˚
);

32 
	}
}

	@ctime.c

6 
	~<time.h
>

9 
	$˘ime
(c⁄° 
time_t
 *
timî
)

11  
	`as˘ime
(
	`loˇ…ime
(
timî
));

12 
	}
}

	@cuf4.c

17 
	~"FP_ty≥s.h
"

20 
	$cuf4
(
ss
,
§c
)

21 
ss
;

22 
§c
;

24 
EXTEND
 
buf
;

25 *
ùt
;

26 
SINGLE
 *
ªsu…
;

27 
i_§c
;

29 
	`zrf_ext
(&
buf
);

30 i‡(
ss
 == ()) {

31 
buf
.
exp
 = 31;

32 
i_§c
 = 
§c
;

33 
ªsu…
 = (
SINGLE
 *Ë&
§c
;

36 
ùt
 = (*Ë&
§c
;

37 
i_§c
 = (Ë*
ùt
;

38 
buf
.
exp
 = 15;

39 
ªsu…
 = (
SINGLE
 *Ë((*Ë&
ss
);

41 i‡(
i_§c
 == 0) {

42 *
ªsu…
 = (
SINGLE
) 0L;

48 i‡(
ss
 != ())

49 
i_§c
 <<= 16;

52 
buf
.
m1
 = 
i_§c
;

55 
	`ƒm_ext
(&
buf
);

56 
	`com∑˘
(&
buf
,
ªsu…
,4);

57 
	}
}

	@cuf8.c

17 
	~"FP_ty≥s.h
"

20 
	$cuf8
(
ss
,
§c
)

21 
ss
;

22 
§c
;

24 
EXTEND
 
buf
;

25 *
ùt
;

26 
i_§c
;

28 
	`zrf_ext
(&
buf
);

29 i‡(
ss
 == ()) {

30 
buf
.
exp
 = 31;

31 
i_§c
 = 
§c
;

34 
ùt
 = (*Ë&
§c
;

35 
i_§c
 = (Ë*
ùt
;

36 
buf
.
exp
 = 15;

38 i‡(
i_§c
 == 0) {

39 
	`zrf8
((
DOUBLE
 *)((*)&
ss
));

45 i‡(
ss
 != ())

46 
i_§c
 <<= 16;

49 
buf
.
m1
 = 
i_§c
;

52 
	`ƒm_ext
(&
buf
);

53 
	`com∑˘
(&
buf
,(*Ë(*)&
ss
,8);

54 
	}
}

	@curs_set.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

3 
	~<ãrmˇp.h
>

5 *
vi
, *
ve
, *
vs
;

10 
	$curs_£t
(
visibûôy
)

11 
visibûôy
;

13 
visibûôy
) {

15 i‡(
vi
Ë
	`çuts
(vi, 1, 
outc
);

18 i‡(
ve
Ë
	`çuts
(ve, 1, 
outc
);

21 i‡(
vs
)

22 
	`çuts
(
vs
, 1, 
outc
);

23 i‡(
ve
)

24 
	`çuts
(
ve
, 1, 
outc
);

26 
	}
}

	@cursesio.c

1 
	~<°dlib.h
>

2 
	~<ãrmˇp.h
>

3 
	~<sys/ty≥s.h
>

4 
	~<sys/io˘l.h
>

5 
	~<cur£s.h
>

6 
	~"cur•riv.h
"

8 
ãrmios
 
	g_‹ig_ây
, 
	g_ây
;

9 
cursv
 
	g_cursv¨
;

11 
WINDOW
 *
	g°ds¸
, *
	gcurs¸
;

12 
	gLINES
, 
	gCOLS
;

13 
boﬁ
 
	gNONL
;

15 
	gãrmˇp
[1024];

16 
	gtc
[200];

17 *
	gâyty≥
;

18 *
	g¨p
;

19 *
	g˝
;

21 *
	g˛
;

22 *
	gcm
;

23 *
	gso
;

24 *
	g£
;

25 *
	gmr
;

26 *
	gme
;

27 *
	gmb
;

28 *
	gmd
;

29 *
	gus
;

30 *
	gue
;

31 *
	gvi
;

32 *
	gve
;

33 *
	gvs
;

34 *
	gas
;

35 *
	g´
;

36 *
	gbl
;

37 *
	gvb
;

40 
	$Áèl
(
s
)

41 *
s
;

43 (Ë
	`Ârötf
(
°dîr
, "cur£s: %s\n", 
s
);

44 
	`exô
(1);

45 
	}
}

48 
	$outc
(
c
)

49 
c
;

51 
	`putch¨
(
c
);

52 
	}
}

55 
	$poscur
(
r
, 
c
)

56 
r
, 
c
;

58 
	`çuts
(
	`tgŸo
(
cm
, 
c
, 
r
), 1, 
outc
);

59 
	}
}

62 
	$˛rs¸
()

64 
	`çuts
(
˛
, 1, 
outc
);

65 
	}
}

69 
	gACS_ULCORNER
;

70 
	gACS_LLCORNER
;

71 
	gACS_URCORNER
;

72 
	gACS_LRCORNER
;

73 
	gACS_RTEE
;

74 
	gACS_LTEE
;

75 
	gACS_BTEE
;

76 
	gACS_TTEE
;

77 
	gACS_HLINE
;

78 
	gACS_VLINE
;

79 
	gACS_PLUS
;

80 
	gACS_S1
;

81 
	gACS_S9
;

82 
	gACS_DIAMOND
;

83 
	gACS_CKBOARD
;

84 
	gACS_DEGREE
;

85 
	gACS_PLMINUS
;

86 
	gACS_BULLET
;

87 
	gACS_LARROW
;

88 
	gACS_RARROW
;

89 
	gACS_DARROW
;

90 
	gACS_UARROW
;

91 
	gACS_BOARD
;

92 
	gACS_LANTERN
;

93 
	gACS_BLOCK
;

99 
	#RIGHTARROW
 0

	)

100 
	#LEFTARROW
 1

	)

101 
	#DOWNARROW
 2

	)

102 
	#UPARROW
 3

	)

103 
	#FULLSQUARE
 4

	)

104 
	#GREYSQUARE
 5

	)

105 
	#EMPTYSQUARE
 6

	)

106 
	#LATERN
 7

	)

107 
	#DIAMOND
 8

	)

108 
	#DEGREE
 9

	)

109 
	#PLUSMINUS
 10

	)

110 
	#DOWNRIGHT
 11

	)

111 
	#UPRIGHT
 12

	)

112 
	#UPLEFT
 13

	)

113 
	#DOWNLEFT
 14

	)

114 
	#CROSS
 15

	)

115 
	#UPLINE
 16

	)

116 
	#UPMIDLINE
 17

	)

117 
	#MIDLINE
 18

	)

118 
	#DOMIDLINE
 19

	)

119 
	#DOWNLINE
 20

	)

120 
	#TEELEFT
 21

	)

121 
	#TEERIGHT
 22

	)

122 
	#TEEHEAD
 23

	)

123 
	#TEENORMAL
 24

	)

124 
	#VERTLINE
 25

	)

125 
	#PARAGRAPH
 26

	)

127 
	g_cursgø·abÀ
[27] =

132 
	g_cursidít
[28] = "+,.-0ahI`fgjklmnopqrstuvwx~";

134 
	$£âîm
(
ty≥
)

135 *
ty≥
;

137 *
ac
;

138 
i
;

139 #ifde‡
TIOCGWINSZ


140 
wösize
 
wsize
;

143 i‡(
	`tgëít
(
ãrmˇp
, 
ty≥
Ë!1Ë 
ERR
;

145 #ifde‡
TIOCGWINSZ


146 i‡(
	`io˘l
(0, 
TIOCGWINSZ
, &
wsize
) == 0) {

147 
LINES
 = 
wsize
.
ws_row
 !0 ? wsize.ws_row : 
	`tgënum
("li");

148 
COLS
 = 
wsize
.
ws_cﬁ
 !0 ? wsize.ws_cﬁ : 
	`tgënum
("co");

151 
LINES
 = 
	`tgënum
("li");

152 
COLS
 = 
	`tgënum
("co");

153 #ifde‡
TIOCGWINSZ


156 
¨p
 = 
tc
;

157 
˛
 = 
	`tgë°r
("˛", &
¨p
);

158 
so
 = 
	`tgë°r
("so", &
¨p
);

159 
£
 = 
	`tgë°r
("£", &
¨p
);

160 
cm
 = 
	`tgë°r
("cm", &
¨p
);

161 
mr
 = 
	`tgë°r
("mr", &
¨p
);

162 
me
 = 
	`tgë°r
("me", &
¨p
);

163 
mb
 = 
	`tgë°r
("mb", &
¨p
);

164 
md
 = 
	`tgë°r
("md", &
¨p
);

165 
us
 = 
	`tgë°r
("us", &
¨p
);

166 
ue
 = 
	`tgë°r
("ue", &
¨p
);

167 
vi
 = 
	`tgë°r
("vi", &
¨p
);

168 
ve
 = 
	`tgë°r
("ve", &
¨p
);

169 
vs
 = 
	`tgë°r
("vs", &
¨p
);

170 
as
 = 
	`tgë°r
("as", &
¨p
);

171 
´
 = 
	`tgë°r
("´", &
¨p
);

172 
ac
 = (*Ë
	`tgë°r
("ac", &
¨p
);

173 
bl
 = 
	`tgë°r
("bl", &
¨p
);

174 
vb
 = 
	`tgë°r
("vb", &
¨p
);

176 i‡(
ac
) {

177 *
ac
) {

178 
i
 = 0;

179 *
ac
 !
_cursidít
[
i
]) i++;

180 
_cursgø·abÀ
[
i
] = *++
ac
 | 
A_ALTCHARSET
;

181 
ac
++;

185 
ACS_ULCORNER
 = 
_cursgø·abÀ
[
UPLEFT
];

186 
ACS_LLCORNER
 = 
_cursgø·abÀ
[
DOWNLEFT
];

187 
ACS_URCORNER
 = 
_cursgø·abÀ
[
UPRIGHT
];

188 
ACS_LRCORNER
 = 
_cursgø·abÀ
[
DOWNRIGHT
];

189 
ACS_RTEE
 = 
_cursgø·abÀ
[
TEERIGHT
];

190 
ACS_LTEE
 = 
_cursgø·abÀ
[
TEELEFT
];

191 
ACS_BTEE
 = 
_cursgø·abÀ
[
TEEHEAD
];

192 
ACS_TTEE
 = 
_cursgø·abÀ
[
TEENORMAL
];

193 
ACS_HLINE
 = 
_cursgø·abÀ
[
MIDLINE
];

194 
ACS_VLINE
 = 
_cursgø·abÀ
[
VERTLINE
];

195 
ACS_PLUS
 = 
_cursgø·abÀ
[
CROSS
];

196 
ACS_S1
 = 
_cursgø·abÀ
[
UPLINE
];

197 
ACS_S9
 = 
_cursgø·abÀ
[
DOWNLINE
];

198 
ACS_DIAMOND
 = 
_cursgø·abÀ
[
DIAMOND
];

199 
ACS_CKBOARD
 = 
_cursgø·abÀ
[
GREYSQUARE
];

200 
ACS_DEGREE
 = 
_cursgø·abÀ
[
DEGREE
];

201 
ACS_PLMINUS
 = 
_cursgø·abÀ
[
PLUSMINUS
];

202 
ACS_BULLET
 = 'o';

204 
ACS_LARROW
 = 
_cursgø·abÀ
[
LEFTARROW
];

205 
ACS_RARROW
 = 
_cursgø·abÀ
[
RIGHTARROW
];

206 
ACS_DARROW
 = 
_cursgø·abÀ
[
DOWNARROW
];

207 
ACS_UARROW
 = 
_cursgø·abÀ
[
UPARROW
];

208 
ACS_BOARD
 = 
_cursgø·abÀ
[
EMPTYSQUARE
];

209 
ACS_LANTERN
 = 
_cursgø·abÀ
[
LATERN
];

210 
ACS_BLOCK
 = 
_cursgø·abÀ
[
FULLSQUARE
];

212  
OK
;

213 
	}
}

215 
	$gëtmode
()

217 
	`tcgë©å
(0, &
_‹ig_ây
);

218 
	`tcgë©å
(0, &
_ây
);

219 
_cursv¨
.
echoô
 = (
_ây
.
c_lÊag
 & 
ECHO
) != 0;

220 
_cursv¨
.
øwmode
 = (
_ây
.
c_lÊag
 & (
ICANON
|
ISIG
)) == 0;

221 
_cursv¨
.
cbrkmode
 = (
_ây
.
c_lÊag
 & (
ICANON
|
ISIG
)) == ISIG;

222 
NONL
 = (
_ây
.
c_iÊag
 & 
ICRNL
) != 0;

223 
	}
}

	@curspriv.h

2 
	#_SUBWIN
 1

	)

3 
	#_ENDLINE
 2

	)

4 
	#_FULLWIN
 4

	)

5 
	#_SCROLLWIN
 8

	)

7 
	#_NO_CHANGE
 -1

	)

8 
	#_BREAKCHAR
 0x03

	)

9 
	#_DCCHAR
 0x08

	)

10 
	#_DLCHAR
 0x1b

	)

11 
	#_GOCHAR
 0x11

	)

12 
	#_PRINTCHAR
 0x10

	)

13 
	#_STOPCHAR
 0x13

	)

14 
	#NUNGETCH
 10

	)

16 
	#max
(
a
,
b
Ë((◊Ë> (b)Ë? (aË: (b))

	)

17 
	#mö
(
a
,
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

20 
	#CHR_MSK
 ((Ë0x00ffË

	)

21 
	#ATR_MSK
 ((Ë0xff00Ë

	)

22 
	#ATR_NRM
 ((Ë0x0000Ë

	)

27 
WINDOW
 *
	mtmpwö
;

28 
	mcur§ow
;

29 
	mcurscﬁ
;

30 
boﬁ
 
	møwmode
;

31 
boﬁ
 
	mcbrkmode
;

32 
boﬁ
 
	mechoô
;

33 } 
	tcursv
;

36 
cursv
 
_cursv¨
;

	@cuserid.c

6 
	~<lib.h
>

7 
	~<pwd.h
>

8 
	~<°rög.h
>

9 
	~<uni°d.h
>

10 
	~<°dio.h
>

12 #i‚de‡ 
L_cu£rid


13 
	#L_cu£rid
 9

	)

16 *
	$cu£rid
(
u£r_«me
)

17 *
u£r_«me
;

19 
PRIVATE
 
u£rid
[
L_cu£rid
];

20 
∑sswd
 *
pw_íåy
;

22 i‡(
u£r_«me
 =(*)
NULL
Ëu£r_«mê
u£rid
;

24 
pw_íåy
 = 
	`gëpwuid
(
	`gëeuid
());

26 i‡(
pw_íåy
 =(
∑sswd
 *)
NULL
) {

27 *
u£r_«me
 = '\0';

28 ((*)
NULL
);

30 
	`°r˝y
(
u£r_«me
, 
pw_íåy
->
pw_«me
);

32 (
u£r_«me
);

33 
	}
}

	@data.c

6 
	~<°dio.h
>

8 
__iobuf
 
	g__°dö
 = {

9 0, 0, 
_IOREAD
, 0,

10 (*)
NULL
, (*)NULL,

13 
__iobuf
 
	g__°dout
 = {

14 0, 1, 
_IOWRITE
, 0,

15 (*)
NULL
, (*)NULL,

18 
__iobuf
 
	g__°dîr
 = {

19 0, 2, 
_IOWRITE
 | 
_IOLBF
, 0,

20 (*)
NULL
, (*)NULL,

23 
FILE
 *
	g__iŸab
[
FOPEN_MAX
] = {

24 &
__°dö
,

25 &
__°dout
,

26 &
__°dîr
,

	@dev.h

5 
_PROTOTYPE
 ((*
	tdm≠_t
), (
	tèsk
, 
	tmesßge
 *
	tm_±r
) );

7 
	sdm≠
 {

8 
dm≠_t
 
dm≠_›í
;

9 
dm≠_t
 
dm≠_rw
;

10 
dm≠_t
 
dm≠_˛o£
;

11 
dm≠_èsk
;

12 } 
dm≠
[];

	@device.c

16 
	~"fs.h
"

17 
	~<f˙é.h
>

18 
	~<möix/ˇŒƒ.h
>

19 
	~<möix/com.h
>

20 
	~"dev.h
"

21 
	~"fûe.h
"

22 
	~"Âroc.h
"

23 
	~"öode.h
"

24 
	~"∑øm.h
"

26 
PRIVATE
 
mesßge
 
	gdev_mess
;

27 
PRIVATE
 
	gmaj‹
, 
	gmö‹
, 
	gèsk
;

29 
FORWARD
 
_PROTOTYPE
–
föd_dev
, (
Dev_t
 
dev
) );

34 
PUBLIC
 
	$dev_io
(
›
, 
n⁄block
, 
dev
, 
pos
, 
byãs
, 
¥oc
, 
buff
)

35 
›
;

36 
n⁄block
;

37 
dev_t
 
dev
;

38 
off_t
 
pos
;

39 
byãs
;

40 
¥oc
;

41 *
buff
;

45 
	`föd_dev
(
dev
);

48 
dev_mess
.
m_ty≥
 = 
›
;

49 
dev_mess
.
DEVICE
 = (
dev
 >> 
MINOR
Ë& 
BYTE
;

50 
dev_mess
.
POSITION
 = 
pos
;

51 
dev_mess
.
PROC_NR
 = 
¥oc
;

52 
dev_mess
.
ADDRESS
 = 
buff
;

53 
dev_mess
.
COUNT
 = 
byãs
;

54 
dev_mess
.
TTY_FLAGS
 = 
n⁄block
;

57 (*
dm≠
[
maj‹
].
dm≠_rw
)(
èsk
, &
dev_mess
);

60 i‡(
dev_mess
.
REP_STATUS
 =
SUSPEND
) {

61 i‡(
›
 =
DEV_OPEN
Ë
èsk
 = 
XPOPEN
;

62 
	`su•íd
(
èsk
);

65 (
dev_mess
.
REP_STATUS
);

66 
	}
}

72 
PUBLIC
 
	$dev_›˛
(
èsk_ƒ
, 
mess_±r
)

73 
èsk_ƒ
;

74 
mesßge
 *
mess_±r
;

78 
›
;

80 
›
 = 
mess_±r
->
m_ty≥
;

81 
mess_±r
->
DEVICE
 = (mess_±r->DEVICE >> 
MINOR
Ë& 
BYTE
;

82 
mess_±r
->
PROC_NR
 = 
Â
 - 
Âroc
;

84 
	`ˇŒ_èsk
(
èsk_ƒ
, 
mess_±r
);

87 i‡(
mess_±r
->
REP_STATUS
 =
SUSPEND
) {

88 i‡(
›
 =
DEV_OPEN
Ë
èsk_ƒ
 = 
XPOPEN
;

89 
	`su•íd
(
èsk_ƒ
);

91 
	}
}

96 
PUBLIC
 
	$ây_›í
(
èsk_ƒ
, 
mess_±r
)

97 
èsk_ƒ
;

98 
mesßge
 *
mess_±r
;

102 
r
;

103 
dev_t
 
dev
;

104 
Êags
, 
¥oc
;

105 
Âroc
 *
rÂ
;

107 
dev
 = (
dev_t
Ë
mess_±r
->
DEVICE
;

108 
Êags
 = 
mess_±r
->
COUNT
;

109 
¥oc
 = 
Â
 - 
Âroc
;

115 i‡(!
Â
->
Â_£¶dr
 || fp->
Â_ây
 != 0) {

116 
Êags
 |
O_NOCTTY
;

118 
rÂ
 = &
Âroc
[
LOW_USER
];ÑÂ < &Âroc[
NR_PROCS
];Ñfp++) {

119 i‡(
rÂ
->
Â_ây
 =
dev
Ë
Êags
 |
O_NOCTTY
;

123 
r
 = 
	`dev_io
(
DEV_OPEN
, 
mode
, 
dev
, (
off_t
Ë0, 
Êags
, 
¥oc
, 
NIL_PTR
);

125 i‡(
r
 == 1) {

126 
Â
->
Â_ây
 = 
dev
;

127 
r
 = 
OK
;

130 
mess_±r
->
REP_STATUS
 = 
r
;

131 
	}
}

137 
PUBLIC
 
	$˘ty_›í
(
èsk_ƒ
, 
mess_±r
)

138 
èsk_ƒ
;

139 
mesßge
 *
mess_±r
;

145 
mess_±r
->
REP_STATUS
 = 
Â
->
Â_ây
 =0 ? 
ENXIO
 : 
OK
;

146 
	}
}

152 
PUBLIC
 
	$˘ty_˛o£
(
èsk_ƒ
, 
mess_±r
)

153 
èsk_ƒ
;

154 
mesßge
 *
mess_±r
;

158 
mess_±r
->
REP_STATUS
 = 
OK
;

159 
	}
}

165 
PUBLIC
 
	$do_£tsid
()

170 
Âroc
 *
rÂ
;

173 i‡(
who
 !
MM_PROC_NR
Ë(
ENOSYS
);

176 
rÂ
 = &
Âroc
[
¶Ÿ1
];

177 
rÂ
->
Â_£¶dr
 = 
TRUE
;

178 
rÂ
->
Â_ây
 = 0;

179 
	}
}

185 
PUBLIC
 
	$do_io˘l
()

189 
fûp
 *
f
;

190 
öode
 *
rù
;

191 
dev_t
 
dev
;

193 i‡–(
f
 = 
	`gë_fûp
(
ls_fd
)Ë=
NIL_FILP
Ë(
îr_code
);

194 
rù
 = 
f
->
fûp_öo
;

195 i‡–(
rù
->
i_mode
 & 
I_TYPE
Ë!
I_CHAR_SPECIAL


196 && (
rù
->
i_mode
 & 
I_TYPE
Ë!
I_BLOCK_SPECIAL
Ë(
ENOTTY
);

197 
dev
 = (
dev_t
Ë
rù
->
i_z⁄e
[0];

198 
	`föd_dev
(
dev
);

200 
dev_mess

m
;

202 
dev_mess
.
m_ty≥
 = 
DEV_IOCTL
;

203 
dev_mess
.
PROC_NR
 = 
who
;

204 
dev_mess
.
TTY_LINE
 = 
mö‹
;

207 (*
dm≠
[
maj‹
].
dm≠_rw
)(
èsk
, &
dev_mess
);

210 i‡(
dev_mess
.
REP_STATUS
 =
SUSPEND
) {

211 i‡(
f
->
fûp_Êags
 & 
O_NONBLOCK
) {

213 
dev_mess
.
m_ty≥
 = 
CANCEL
;

214 
dev_mess
.
PROC_NR
 = 
who
;

215 
dev_mess
.
TTY_LINE
 = 
mö‹
;

216 (*
dm≠
[
maj‹
].
dm≠_rw
)(
èsk
, &
dev_mess
);

217 i‡(
dev_mess
.
REP_STATUS
 =
EINTR
Ëdev_mess.REP_STATUS = 
EAGAIN
;

219 
	`su•íd
(
èsk
);

222 #i‡
ENABLE_BINCOMPAT


223 
m1
.
TTY_SPEK
 = 
dev_mess
.TTY_SPEK;

224 
m1
.
TTY_FLAGS
 = 
dev_mess
.TTY_FLAGS;

226 (
dev_mess
.
REP_STATUS
);

227 
	}
}

233 
PRIVATE
 
	$föd_dev
(
dev
)

234 
dev_t
 
dev
;

238 
maj‹
 = (
dev
 >> 
MAJOR
Ë& 
BYTE
;

239 
mö‹
 = (
dev
 >> 
MINOR
Ë& 
BYTE
;

240 i‡(
maj‹
 >
max_maj‹
) {

241 
maj‹
 = 
mö‹
 = 0;

243 
èsk
 = 
dm≠
[
maj‹
].
dm≠_èsk
;

244 
	}
}

250 
PUBLIC
 
	$ˇŒ_èsk
(
èsk_ƒ
, 
mess_±r
)

251 
èsk_ƒ
;

252 
mesßge
 *
mess_±r
;

258 
r
, 
¥oc_ƒ
;

259 
mesßge
 
loˇl_m
;

261 
¥oc_ƒ
 = 
mess_±r
->
PROC_NR
;

263 (
r
 = 
	`£ndªc
(
èsk_ƒ
, 
mess_±r
)Ë=
ELOCKED
) {

268 i‡((
r
 = 
	`ª˚ive
(
èsk_ƒ
, &
loˇl_m
)Ë!
OK
) ;

274 i‡(
mess_±r
->
m_ty≥
 =
CANCEL
 && 
loˇl_m
.
REP_PROC_NR
 =
¥oc_ƒ
)

278 i‡(
loˇl_m
.
m_ty≥
 !
REVIVE
) {

279 
	`¥ötf
(

281 
loˇl_m
.
m_sour˚
,

282 
loˇl_m
.
m_ty≥
,Üoˇl_m.
REP_PROC_NR
);

286 
	`ªvive
(
loˇl_m
.
REP_PROC_NR
,Üoˇl_m.
REP_STATUS
);

293 i‡(
r
 !
OK
Ë
	`∑nic
("ˇŒ_èsk: c™'à£nd/ª˚ive", 
NO_NUM
);

296 i‡(
mess_±r
->
REP_PROC_NR
 =
¥oc_ƒ
) ;

299 i‡(
mess_±r
->
m_ty≥
 !
REVIVE
) {

300 
	`¥ötf
(

302 
mess_±r
->
m_sour˚
,

303 
mess_±r
->
m_ty≥
, mess_±r->
REP_PROC_NR
);

306 
	`ªvive
(
mess_±r
->
REP_PROC_NR
, mess_±r->
REP_STATUS
);

308 
r
 = 
	`ª˚ive
(
èsk_ƒ
, 
mess_±r
);

310 
	}
}

316 
PUBLIC
 
	$ˇŒ_˘ty
(
èsk_ƒ
, 
mess_±r
)

317 
èsk_ƒ
;

318 
mesßge
 *
mess_±r
;

325 
maj‹_devi˚
;

327 i‡(
Â
->
Â_ây
 == 0) {

329 
mess_±r
->
REP_STATUS
 = 
EIO
;

332 
maj‹_devi˚
 = (
Â
->
Â_ây
 >> 
MAJOR
Ë& 
BYTE
;

333 
èsk_ƒ
 = 
dm≠
[
maj‹_devi˚
].
dm≠_èsk
;

334 
mess_±r
->
DEVICE
 = (
Â
->
Â_ây
 >> 
MINOR
Ë& 
BYTE
;

335 
	`ˇŒ_èsk
(
èsk_ƒ
, 
mess_±r
);

336 
	}
}

342 
PUBLIC
 
	$no_dev
(
èsk_ƒ
, 
m_±r
)

343 
èsk_ƒ
;

344 
mesßge
 *
m_±r
;

348 
m_±r
->
REP_STATUS
 = 
ENODEV
;

349 
	}
}

352 #i‡
ENABLE_NETWORKING


356 
PUBLIC
 
	$√t_›í
(
èsk_ƒ
, 
mess_±r
)

357 
èsk_ƒ
;

358 
mesßge
 *
mess_±r
;

366 
dev_t
 
dev
;

367 
öode
 *
rù
, *
ƒù
;

368 
ªsu…
;

369 
ncou¡
, 
¥oc
;

371 
rù
 = 
Â
->
Â_fûp
[
fd
]->
fûp_öo
;

373 
ƒù
 = 
	`Æloc_öode
(
rù
->
i_dev
, 
ALL_MODES
 | 
I_CHAR_SPECIAL
);

374 i‡(
ƒù
 =
NIL_INODE
) {

375 
mess_±r
->
REP_STATUS
 = 
îr_code
;

379 
dev
 = (
dev_t
Ë
mess_±r
->
DEVICE
;

380 
ncou¡
 = 
mess_±r
->
COUNT
;

381 
¥oc
 = 
Â
 - 
Âroc
;

382 
ªsu…
 = 
	`dev_io
(
DEV_OPEN
, 
mode
, 
dev
, (
off_t
Ë0, 
ncou¡
, 
¥oc
, 
NIL_PTR
);

384 i‡(
ªsu…
 < 0) {

385 
	`put_öode
(
ƒù
);

386 
mess_±r
->
REP_STATUS
 = 
ªsu…
;

390 
dev

rù
->
i_z⁄e
[0];

391 
dev
(dev & ~(
BYTE
 << 
MINOR
)Ë| ((
ªsu…
 & BYTE) << MINOR);

393 
ƒù
->
i_z⁄e
[0]
dev
;

394 
	`put_öode
(
rù
);

395 
Â
->
Â_fûp
[
fd
]->
fûp_öo
 = 
ƒù
;

396 
mess_±r
->
REP_STATUS
 = 
OK
;

397 
	}
}

	@difftime.c

6 
	~<time.h
>

9 
	$dif·ime
(
time_t
 
time1
,Åime_à
time0
)

12 i‡((
time_t
)-1 > 0 && 
time0
 > 
time1
) {

13  - (Ë(
time0
 - 
time1
);

15  ()(
time1
 - 
time0
);

17 
	}
}

	@div.c

7 
	~<°dlib.h
>

9 
	gtmp
 = -1;

11 
div_t


12 
	$div
(
numî
, 
díom
)

14 
div_t
 
r
;

17 i‡(
tmp
 == -1) {

18 
tmp
 = (tmp / 2 == 0);

20 i‡(
numî
 == 0) {

21 
r
.
quŸ
 = 
numî
 / 
díom
;

22 
r
.
ªm
 = 
numî
 % 
díom
;

23 } i‡–!
tmp
 && ((
numî
 < 0Ë!(
díom
 < 0))) {

24 
r
.
quŸ
 = (
numî
 / 
díom
) + 1;

25 
r
.
ªm
 = 
numî
 - (numî / 
díom
 + 1) * denom;

27 
r
.
quŸ
 = 
numî
 / 
díom
;

28 
r
.
ªm
 = 
numî
 % 
díom
;

30  
r
;

31 
	}
}

	@div_ext.c

12 
	~"FP_büs.h
"

13 
	~"FP_å≠.h
"

14 
	~"FP_ty≥s.h
"

30 
	$div_ext
(
e1
,
e2
)

31 
EXTEND
 *
e1
,*
e2
;

33 
îr‹
 = 0;

34 
B64
 
ªsu…
;

35 *
Õ
;

36 #i‚de‡
USE_DIVIDE


37 
cou¡
;

39 
u
[9], 
v
[5];

40 
j
;

41 *
u_p
 = 
u
;

42 
maxv
 = 4;

45 i‡((
e2
->
m1
 |É2->
m2
) == 0) {

49 
	`å≠
(
EFDIVZ
);

50 
e1
->
m1
 =É1->
m2
 = 0L;

51 
e1
->
exp
 = 
EXT_MAX
;

54 i‡((
e1
->
m1
 |É1->
m2
) == 0) {

55 
e1
->
exp
 = 0;

58 #i‚de‡
USE_DIVIDE


64 
	`b64_rs·
(&
e1
->
m™tisß
);

65 
	`b64_rs·
(&
e2
->
m™tisß
);

66 
e1
->
exp
++;

67 
e2
->
exp
++;

70 
e1
->
sign
 ^
e2
->sign;

71 
e1
->
exp
 -
e2
->exp;

73 #i‚de‡
USE_DIVIDE


78 
cou¡
 = 64;

79 
ªsu…
.
h_32
 = 0L;

80 
ªsu…
.
l_32
 = 0L;

84 
cou¡
--) {

88 
	`b64_ls·
(&
ªsu…
);

94 i‡–(
e1
->
m1
 < 
e2
->m1) ||

95 ((
e1
->
m1
 =
e2
->m1Ë&& (e1->
m2
 <É2->m2) ))

99 
ªsu…
.
l_32
++;

100 i‡(
e2
->
m2
 > 
e1
->m2)

101 
e1
->
m1
 -= 1;

102 
e1
->
m1
 -
e2
->m1;

103 
e1
->
m2
 -
e2
->m2;

115 
Õ
 = &
e1
->
m1
;

117 
îr‹
 = ((*
Õ
 | *(lp+1)) != 0L) ? 1 : 0;

118 i‡(
îr‹
) {

120 
	`b64_ls·
(&
e1
->
m™tisß
);

127 i‡(
cou¡
 > 0) {

128 
Õ
 = &
ªsu…
.
h_32
;

129 i‡(
cou¡
 > 31) {

130 *
Õ
 = *(lp+1);

131 
cou¡
 -= 32;

132 *(
Õ
+1) = 0L;

134 i‡(*
Õ
)

135 *
Õ
 <<
cou¡
;

136 
Õ
++;

137 i‡(*
Õ
) {

138 
ªsu…
.
h_32
 |(*
Õ
 >> 32-
cou¡
);

139 *
Õ
 <<
cou¡
;

144 
u
[4] = (
e1
->
m2
 & 1) << 15;

145 
	`b64_rs·
(&(
e1
->
m™tisß
));

146 
u
[0] = 
e1
->
m1
 >> 16;

147 
u
[1] = 
e1
->
m1
;

148 
u
[2] = 
e1
->
m2
 >> 16;

149 
u
[3] = 
e1
->
m2
;

150 
u
[5] = 0; u[6] = 0; u[7] = 0;

151 
v
[1] = 
e2
->
m1
 >> 16;

152 
v
[2] = 
e2
->
m1
;

153 
v
[3] = 
e2
->
m2
 >> 16;

154 
v
[4] = 
e2
->
m2
;

155 ! 
v
[
maxv
]) maxv--;

156 
ªsu…
.
h_32
 = 0;

157 
ªsu…
.
l_32
 = 0;

158 
Õ
 = &
ªsu…
.
h_32
;

165 
j
 = 0; j <3; j++, 
u_p
++) {

166 
q_e°
, 
ãmp
;

168 i‡(
j
 =2Ë
Õ
++;

169 i‡(
u_p
[0] =0 && u_p[1] < 
v
[1]) ;

170 
ãmp
 = (()
u_p
[0] << 16) + u_p[1];

171 i‡(
u_p
[0] >
v
[1]) {

172 
q_e°
 = 0x0000FFFFL;

175 
q_e°
 = 
ãmp
 / 
v
[1];

177 
ãmp
 -
q_e°
 * 
v
[1];

178 
ãmp
 < 0x10000 && 
v
[2]*
q_e°
 > (—emp<<16)+
u_p
[2])) {

179 
q_e°
--;

180 
ãmp
 +
v
[1];

186 i‡(
q_e°
 != 0) {

187 
i
;

188 
k
 = 0;

189 
b‹row
 = 0;

191 
i
 = 
maxv
; i > 0; i--) {

192 
tmp
 = 
q_e°
 * 
v
[
i
] + 
k
 + 
b‹row
;

193 
md
 = 
tmp
;

195 
b‹row
 = (
md
 > 
u_p
[
i
]);

196 
u_p
[
i
] -
md
;

197 
k
 = 
tmp
 >> 16;

199 
k
 +
b‹row
;

200 
b‹row
 = 
u_p
[0] < 
k
;

201 
u_p
[0] -
k
;

203 i‡(
b‹row
) {

207 *
Õ
 |(
j
 & 1Ë? (
q_e°
 - 1) : ((q_est-1)<<16);

208 
b‹row
 = 0;

209 
i
 = 
maxv
; i > 0; i--) {

210 
tmp


211 
v
[
i
]+()
u_p
[i]+
b‹row
;

213 
u_p
[
i
] = 
tmp
;

214 
b‹row
 = 
tmp
 >> 16;

216 
u_p
[0] +
b‹row
;

218 *
Õ
 |(
j
 & 1Ë? 
q_e°
 : (q_est<<16);

221 #ifdef 
EXCEPTION_INEXACT


222 
u_p
 = &
u
[0];

223 
j
 = 7; j >= 0; j--) {

224 i‡(*
u_p
++) {

225 
îr‹
 = 1;

232 #ifde‡ 
EXCEPTION_INEXACT


233 i‡(
îr‹
) {

243 
	`INEXACT
();

245 
e1
->
m™tisß
 = 
ªsu…
;

247 
	`ƒm_ext
(
e1
);

248 i‡(
e1
->
exp
 < 
EXT_MIN
) {

252 
	`å≠
(
EFUNFL
);

253 
e1
->
exp
 = 
EXT_MIN
;

254 
e1
->
m1
 =É1->
m2
 = 0L;

257 i‡(
e1
->
exp
 >
EXT_MAX
) {

261 
	`å≠
(
EFOVFL
);

262 
e1
->
exp
 = 
EXT_MAX
;

263 
e1
->
m1
 =É1->
m2
 = 0L;

	@dmp.c

3 
	~"kî√l.h
"

4 
	~<möix/com.h
>

5 
	~"¥oc.h
"

7 *
	gv¨gv
;

9 
FORWARD
 
_PROTOTYPE
(*
¥oc_«me
, (
¥oc_ƒ
));

14 #i‡(
CHIP
 =
INTEL
)

15 
PUBLIC
 
	$p_dmp
()

19 
¥oc
 *
Ω
;

20 
¥oc
 *
ﬁdΩ
 = 
BEG_PROC_ADDR
;

21 
n
 = 0;

22 
phys_˛icks
 
ãxt
, 
d©a
, 
size
;

23 
¥oc_ƒ
;

25 
	`¥ötf
("\n--pid --pc- ---sp- flag -user --sys-- -text- -data- -size- -recv- command\n");

27 
Ω
 = 
ﬁdΩ
;Ñ∞< 
END_PROC_ADDR
;Ñp++) {

28 
¥oc_ƒ
 = 
	`¥oc_numbî
(
Ω
);

29 i‡(
Ω
->
p_Êags
 & 
P_SLOT_FREE
) ;

30 i‡(++
n
 > 20) ;

31 
ãxt
 = 
Ω
->
p_m≠
[
T
].
mem_phys
;

32 
d©a
 = 
Ω
->
p_m≠
[
D
].
mem_phys
;

33 
size
 = 
Ω
->
p_m≠
[
T
].
mem_Àn


34 + ((
Ω
->
p_m≠
[
S
].
mem_phys
 +Ñp->p_m≠[S].
mem_Àn
Ë- 
d©a
);

35 
	`¥ötf
("%5d %5lx %6lx %2x %7U %7U %5uK %5uK %5uK ",

36 
¥oc_ƒ
 < 0 ?Öroc_ƒ : 
Ω
->
p_pid
,

37 (Ë
Ω
->
p_ªg
.
pc
,

38 (Ë
Ω
->
p_ªg
.
•
,

39 
Ω
->
p_Êags
,

40 
Ω
->
u£r_time
,Ñp->
sys_time
,

41 
	`˛ick_to_round_k
(
ãxt
), click_to_round_k(
d©a
),

42 
	`˛ick_to_round_k
(
size
));

43 i‡(
Ω
->
p_Êags
 & 
RECEIVING
) {

44 
	`¥ötf
("%-7.7s", 
	`¥oc_«me
(
Ω
->
p_gë‰om
));

46 i‡(
Ω
->
p_Êags
 & 
SENDING
) {

47 
	`¥ötf
("S:%-5.5s", 
	`¥oc_«me
(
Ω
->
p_£ndto
));

49 i‡(
Ω
->
p_Êags
 == 0) {

50 
	`¥ötf
(" ");

52 
	`¥ötf
("%s\n", 
Ω
->
p_«me
);

54 i‡(
Ω
 =
END_PROC_ADDR
ËΩ = 
BEG_PROC_ADDR
; 
	`¥ötf
("--more--\r");

55 
ﬁdΩ
 = 
Ω
;

56 
	}
}

62 #i‡(
SHADOWING
 == 0)

63 
PUBLIC
 
	$m≠_dmp
()

65 
¥oc
 *
Ω
;

66 
¥oc
 *
ﬁdΩ
 = 
	`˝roc_addr
(
HARDWARE
);

67 
n
 = 0;

68 
phys_˛icks
 
size
;

70 
	`¥ötf
("\nPROC NAME- -----TEXT----- -----DATA----- ----STACK----- -SIZE-\n");

71 
Ω
 = 
ﬁdΩ
;Ñ∞< 
END_PROC_ADDR
;Ñp++) {

72 i‡(
Ω
->
p_Êags
 & 
P_SLOT_FREE
) ;

73 i‡(++
n
 > 20) ;

74 
size
 = 
Ω
->
p_m≠
[
T
].
mem_Àn


75 + ((
Ω
->
p_m≠
[
S
].
mem_phys
 +Ñp->p_m≠[S].
mem_Àn
)

76 - 
Ω
->
p_m≠
[
D
].
mem_phys
);

77 
	`¥ötf
("%3d %-6.6s %4x %4x %4x %4x %4x %4x %4x %4x %4x %5uK\n",

78 
	`¥oc_numbî
(
Ω
),

79 
Ω
->
p_«me
,

80 
Ω
->
p_m≠
[
T
].
mem_vú
,Ñp->p_m≠[T].
mem_phys
,Ñp->p_m≠[T].
mem_Àn
,

81 
Ω
->
p_m≠
[
D
].
mem_vú
,Ñp->p_m≠[D].
mem_phys
,Ñp->p_m≠[D].
mem_Àn
,

82 
Ω
->
p_m≠
[
S
].
mem_vú
,Ñp->p_m≠[S].
mem_phys
,Ñp->p_m≠[S].
mem_Àn
,

83 
	`˛ick_to_round_k
(
size
));

85 i‡(
Ω
 =
END_PROC_ADDR
ËΩ = 
	`˝roc_addr
(
HARDWARE
); 
	`¥ötf
("--more--\r");

86 
ﬁdΩ
 = 
Ω
;

87 
	}
}

91 
PUBLIC
 
	$m≠_dmp
()

93 
¥oc
 *
Ω
;

94 
¥oc
 *
ﬁdΩ
 = 
	`˝roc_addr
(
HARDWARE
);

95 
n
 = 0;

96 
vú_˛icks
 
ba£
, 
limô
;

98 
	`¥ötf
("\nPROC NAME- --TEXT--- --DATA--- --STACK-- SHADOW FLIP P BASE SIZE\n");

99 
Ω
 = 
ﬁdΩ
;Ñ∞< 
END_PROC_ADDR
;Ñp++) {

100 i‡(
Ω
->
p_Êags
 & 
P_SLOT_FREE
) ;

101 i‡(++
n
 > 20) ;

102 
ba£
 = 
Ω
->
p_m≠
[
T
].
mem_phys
;

103 
limô
 = 
Ω
->
p_m≠
[
S
].
mem_phys
 +Ñp->p_m≠[S].
mem_Àn
;

104 
	`¥ötf
("%3d %-6.6s %4x %4x %4x %4x %4x %4x %4x %4d %d %4uK\n",

105 
	`¥oc_numbî
(
Ω
),

106 
Ω
->
p_«me
,

107 
Ω
->
p_m≠
[
T
].
mem_phys
,Ñp->p_m≠[T].
mem_Àn
,

108 
Ω
->
p_m≠
[
D
].
mem_phys
,Ñp->p_m≠[D].
mem_Àn
,

109 
Ω
->
p_m≠
[
S
].
mem_phys
,Ñp->p_m≠[S].
mem_Àn
,

110 
Ω
->
p_shadow
,Ñp->
p_nÊùs
,Ñp->
p_physio
,

111 
	`˛ick_to_round_k
(
ba£
), click_to_round_k(
limô
));

113 i‡(
Ω
 =
END_PROC_ADDR
ËΩ = 
	`˝roc_addr
(
HARDWARE
); 
	`¥ötf
("--more--\r");

114 
ﬁdΩ
 = 
Ω
;

115 
	}
}

119 #i‡(
CHIP
 =
M68000
)

120 
FORWARD
 
_PROTOTYPE
(
mem_dmp
, (*
adr
, 
Àn
));

125 
PUBLIC
 
	$p_dmp
()

129 
¥oc
 *
Ω
;

130 
¥oc
 *
ﬁdΩ
 = 
BEG_PROC_ADDR
;

131 
n
 = 0;

132 
vú_˛icks
 
ba£
, 
limô
;

134 
	`¥ötf
(

137 
Ω
 = 
ﬁdΩ
;Ñ∞< 
END_PROC_ADDR
;Ñp++) {

138 i‡(
Ω
->
p_Êags
 & 
P_SLOT_FREE
) ;

139 i‡(++
n
 > 20) ;

140 
ba£
 = 
Ω
->
p_m≠
[
T
].
mem_phys
;

141 
limô
 = 
Ω
->
p_m≠
[
S
].
mem_phys
 +Ñp->p_m≠[S].
mem_Àn
;

142 
	`¥ötf
("%4u %4u %6lx %6lx %6lx %4x %5U %6U ",

143 
	`¥oc_numbî
(
Ω
),

144 
Ω
->
p_pid
,

145 (Ë
Ω
->
p_ªg
.
pc
,

146 (Ë
Ω
->
p_ªg
.
•
,

147 (Ë
Ω
->
p_•low
,

148 
Ω
->
p_Êags
,

149 
Ω
->
u£r_time
,Ñp->
sys_time
);

150 i‡(
Ω
->
p_Êags
 & 
RECEIVING
) {

151 
	`¥ötf
("%-7.7s", 
	`¥oc_«me
(
Ω
->
p_gë‰om
));

153 i‡(
Ω
->
p_Êags
 & 
SENDING
) {

154 
	`¥ötf
("S:%-5.5s", 
	`¥oc_«me
(
Ω
->
p_£ndto
));

156 i‡(
Ω
->
p_Êags
 == 0) {

157 
	`¥ötf
(" ");

159 
	`¥ötf
("%s\n", 
Ω
->
p_«me
);

161 i‡(
Ω
 =
END_PROC_ADDR
ËΩ = 
BEG_PROC_ADDR
; 
	`¥ötf
("--more--\r");

162 
ﬁdΩ
 = 
Ω
;

163 
	}
}

169 
PUBLIC
 
	$ªg_dmp
(
Ω
)

170 
¥oc
 *
Ω
;

172 
i
;

173 *
ªgs
[
NR_REGS
] = {

177 
ªg_t
 *
ªg±r
 = (ªg_à*Ë& 
Ω
->
p_ªg
;

179 
	`¥ötf
("ªg = %08lx, ", 
Ω
);

180 
	`¥ötf
("k• = %08lx\n", (Ë&
Ω
 + (rp));

181 
	`¥ötf
("Ö¯%08lx, ", 
Ω
->
p_ªg
.
pc
);

182 
	`¥ötf
(" s∏ %04x, ", 
Ω
->
p_ªg
.
psw
);

183 
	`¥ötf
("å∞ %2x\n", 
Ω
->
p_å≠
);

184 
i
 = 0; i < 
NR_REGS
; i++)

185 
	`¥ötf
("%3†%08lx%s",
ªgs
[
i
], *
ªg±r
++, (i&3) == 3 ? "\n" : ", ");

186 
	`¥ötf
("á7 = %08lx\n", 
Ω
->
p_ªg
.
•
);

187 #i‡(
SHADOWING
 == 1)

188 
	`mem_dmp
((*Ë(((Ë
Ω
->
p_ªg
.
pc
 & ~31L) - 96), 128);

189 
	`mem_dmp
((*Ë(((Ë
Ω
->
p_ªg
.
•
 & ~31L) - 32), 256);

191 
	`mem_dmp
((*Ë(((Ë
Ω
->
p_ªg
.
pc
 & ~31L) - 96 +

192 (()
Ω
->
p_m≠
[
T
].
mem_phys
<<
CLICK_SHIFT
)), 128);

193 
	`mem_dmp
((*Ë(((Ë
Ω
->
p_ªg
.
•
 & ~31L) - 32 +

194 (()
Ω
->
p_m≠
[
S
].
mem_phys
<<
CLICK_SHIFT
)), 256);

196 
	}
}

202 
PRIVATE
 
	$mem_dmp
(
adr
, 
Àn
)

203 *
adr
;

204 
Àn
;

206 
i
;

207 *
p
;

209 
i
 = 0, 
p
 = (*Ë
adr
; i < 
Àn
; i += 4) {

210 #i‡(
CHIP
 =
M68000
)

211 i‡((
i
 & 31Ë=0Ë
	`¥ötf
("\n%lX:", 
p
);

212 
	`¥ötf
(" %8lX", *
p
++);

214 i‡((
i
 & 31Ë=0Ë
	`¥ötf
("\n%X:", 
p
);

215 
	`¥ötf
(" %8X", *
p
++);

218 
	`¥ötf
("\n");

219 
	}
}

227 
PRIVATE
 *
	$¥oc_«me
(
¥oc_ƒ
)

228 
¥oc_ƒ
;

230 i‡(
¥oc_ƒ
 =
ANY
)  "ANY";

231  
	`¥oc_addr
(
¥oc_ƒ
)->
p_«me
;

232 
	}
}

	@domainname.c

5 
	~<°dio.h
>

6 
	~<°rög.h
>

7 
	~<√t/√éib.h
>

9 
	$gëdomaö«me
(
domaö
, 
size
)

10 *
domaö
;

11 
size_t
 
size
;

13 
FILE
 *
domaöfûe
;

14 *
löe
;

16 
domaöfûe

	`f›í
("/etc/domainname", "r");

17 i‡(!
domaöfûe
)

22 
löe

	`fgës
(
domaö
, 
size
, 
domaöfûe
);

23 
	`f˛o£
(
domaöfûe
);

24 i‡(!
löe
)

26 
löe

	`°rchr
(
domaö
, '\n');

27 i‡(
löe
)

28 *
löe
= '\0';

30 
	}
}

	@doprnt.c

6 
	~<˘y≥.h
>

7 
	~<°dio.h
>

8 
	~<°d¨g.h
>

9 
	~<°rög.h
>

10 
	~"loc_ö˛.h
"

14 
	$gnum
(c⁄° *
f
, *
ù
, 
va_li°
 *
≠p
)

16 
i
, 
c
;

18 i‡(*
f
 == '*') {

19 *
ù
 = 
	`va_¨g
((*
≠p
), );

20 
f
++;

22 
i
 = 0;

23 (
c
 = *
f
 - '0') >= 0 && c <= 9) {

24 
i
 = i*10 + 
c
;

25 
f
++;

27 *
ù
 = 
i
;

29  
f
;

30 
	}
}

32 #if 
_EM_WSIZE
 =
_EM_PSIZE


33 
	#£t_poöãr
(
Êags
Ë

	)

34 #ñif 
_EM_LSIZE
 =
_EM_PSIZE


35 
	#£t_poöãr
(
Êags
Ë(Êag†|
FL_LONG
)

	)

37 #îr‹ 
g¨bage
 
poöãr
 
size


38 
	#£t_poöãr
(
Êags
Ë

	)

43 
	$o_¥öt
(
va_li°
 *
≠
, 
Êags
, *
s
, 
c
, 
¥ecisi⁄
, 
is_sig√d
)

45 
sig√d_vÆ
;

46 
unsig√d_vÆ
;

47 *
ﬁd_s
 = 
s
;

48 
ba£
;

50 
Êags
 & (
FL_SHORT
 | 
FL_LONG
)) {

51 
FL_SHORT
:

52 i‡(
is_sig√d
) {

53 
sig√d_vÆ
 = (Ë
	`va_¨g
(*
≠
, );

55 
unsig√d_vÆ
 = (Ë
	`va_¨g
(*
≠
, );

58 
FL_LONG
:

59 i‡(
is_sig√d
) {

60 
sig√d_vÆ
 = 
	`va_¨g
(*
≠
, );

62 
unsig√d_vÆ
 = 
	`va_¨g
(*
≠
, );

66 i‡(
is_sig√d
) {

67 
sig√d_vÆ
 = 
	`va_¨g
(*
≠
, );

69 
unsig√d_vÆ
 = 
	`va_¨g
(*
≠
, );

74 i‡(
is_sig√d
) {

75 i‡(
sig√d_vÆ
 < 0) {

76 *
s
++ = '-';

77 
sig√d_vÆ
 = -signed_val;

78 } i‡(
Êags
 & 
FL_SIGN
Ë*
s
++ = '+';

79 i‡(
Êags
 & 
FL_SPACE
Ë*
s
++ = ' ';

80 
unsig√d_vÆ
 = 
sig√d_vÆ
;

82 i‡((
Êags
 & 
FL_ALT
Ë&& (
c
 ='o')Ë*
s
++ = '0';

83 i‡(!
unsig√d_vÆ
) {

84 i‡(!
¥ecisi⁄
)

85  
s
;

86 } i‡(((
Êags
 & 
FL_ALT
Ë&& (
c
 == 'x' || c == 'X'))

87 || 
c
 == 'p') {

88 *
s
++ = '0';

89 *
s
++ = (
c
 == 'X' ? 'X' : 'x');

92 
c
) {

93 'b': 
ba£
 = 2; ;

94 'o': 
ba£
 = 8; ;

97 'u': 
ba£
 = 10; ;

100 'p': 
ba£
 = 16; ;

103 
s
 = 
	`_i_compuã
(
unsig√d_vÆ
, 
ba£
, s, 
¥ecisi⁄
);

105 i‡(
c
 == 'X')

106 
ﬁd_s
 !
s
) {

107 *
ﬁd_s
 = 
	`touµî
(*old_s);

108 
ﬁd_s
++;

111  
s
;

112 
	}
}

115 
	$_d›∫t
(c⁄° *
fmt
, 
va_li°
 
≠
, 
FILE
 *
°ªam
)

117 *
s
;

118 
j
;

119 
i
, 
c
, 
width
, 
¥ecisi⁄
, 
zfûl
, 
Êags
, 
bëwìn_fûl
;

120 
ƒch¨s
=0;

121 c⁄° *
ﬁdfmt
;

122 *
s1
, 
buf
[1025];

124 
c
 = *
fmt
++) {

125 i‡(
c
 != '%') {

126 #ifdef 
CPM


127 i‡(
c
 == '\n') {

128 i‡(
	`putc
('\r', 
°ªam
Ë=
EOF
)

129  
ƒch¨s
 ? -nrchars : -1;

130 
ƒch¨s
++;

133 i‡(
	`putc
(
c
, 
°ªam
Ë=
EOF
)

134  
ƒch¨s
 ? -nrchars : -1;

135 
ƒch¨s
++;

138 
Êags
 = 0;

140 *
fmt
) {

141 '-': 
Êags
 |
FL_LJUST
; ;

142 '+': 
Êags
 |
FL_SIGN
; ;

143 ' ': 
Êags
 |
FL_SPACE
; ;

144 '#': 
Êags
 |
FL_ALT
; ;

145 '0': 
Êags
 |
FL_ZEROFILL
; ;

146 : 
Êags
 |
FL_NOMORE
; ;

148 
fmt
++;

149 } !(
Êags
 & 
FL_NOMORE
));

151 
ﬁdfmt
 = 
fmt
;

152 
fmt
 = 
	`gnum
(fmt, &
width
, &
≠
);

153 i‡(
fmt
 !
ﬁdfmt
Ë
Êags
 |
FL_WIDTHSPEC
;

155 i‡(*
fmt
 == '.') {

156 
fmt
++; 
ﬁdfmt
 = fmt;

157 
fmt
 = 
	`gnum
(fmt, &
¥ecisi⁄
, &
≠
);

158 i‡(
¥ecisi⁄
 >0Ë
Êags
 |
FL_PRECSPEC
;

161 i‡((
Êags
 & 
FL_WIDTHSPEC
Ë&& 
width
 < 0) {

162 
width
 = -width;

163 
Êags
 |
FL_LJUST
;

165 i‡(!(
Êags
 & 
FL_WIDTHSPEC
)Ë
width
 = 0;

167 i‡(
Êags
 & 
FL_SIGN
ËÊag†&~
FL_SPACE
;

169 i‡(
Êags
 & 
FL_LJUST
ËÊag†&~
FL_ZEROFILL
;

172 
s
 = 
s1
 = 
buf
;

174 *
fmt
) {

175 'h': 
Êags
 |
FL_SHORT
; 
fmt
++; ;

176 'l': 
Êags
 |
FL_LONG
; 
fmt
++; ;

177 'L': 
Êags
 |
FL_LONGDOUBLE
; 
fmt
++; ;

180 
c
 = *
fmt
++) {

182 #ifdef 
CPM


183 i‡(
c
 == '\n') {

184 i‡(
	`putc
('\r', 
°ªam
Ë=
EOF
)

185  
ƒch¨s
 ? -nrchars : -1;

186 
ƒch¨s
++;

189 i‡(
	`putc
(
c
, 
°ªam
Ë=
EOF
)

190  
ƒch¨s
 ? -nrchars : -1;

191 
ƒch¨s
++;

194 i‡(
Êags
 & 
FL_SHORT
)

195 *
	`va_¨g
(
≠
, *Ë(Ë
ƒch¨s
;

196 i‡(
Êags
 & 
FL_LONG
)

197 *
	`va_¨g
(
≠
, *Ë(Ë
ƒch¨s
;

199 *
	`va_¨g
(
≠
, *Ë(Ë
ƒch¨s
;

202 
s1
 = 
	`va_¨g
(
≠
, *);

203 i‡(
s1
 =
NULL
)

204 
s1
 = "(null)";

205 
s
 = 
s1
;

206 
¥ecisi⁄
 || !(
Êags
 & 
FL_PRECSPEC
)) {

207 i‡(*
s
 == '\0')

209 
s
++;

210 
¥ecisi⁄
--;

214 
	`£t_poöãr
(
Êags
);

221 i‡(!(
Êags
 & 
FL_PRECSPEC
)Ë
¥ecisi⁄
 = 1;

222 i‡(
c
 !'p'Ë
Êags
 &~
FL_ZEROFILL
;

223 
s
 = 
	`o_¥öt
(&
≠
, 
Êags
, s, 
c
, 
¥ecisi⁄
, 0);

227 
Êags
 |
FL_SIGNEDCONV
;

228 i‡(!(
Êags
 & 
FL_PRECSPEC
)Ë
¥ecisi⁄
 = 1;

229 
Êags
 &~
FL_ZEROFILL
;

230 
s
 = 
	`o_¥öt
(&
≠
, 
Êags
, s, 
c
, 
¥ecisi⁄
, 1);

233 *
s
++ = 
	`va_¨g
(
≠
, );

235 #i‚de‡
NOFLOAT


238 i‡((
Êags
 & 
FL_PRECSPEC
Ë&& (
¥ecisi⁄
 == 0))

239 
¥ecisi⁄
 = 1;

243 i‡(!(
Êags
 & 
FL_PRECSPEC
))

244 
¥ecisi⁄
 = 6;

246 i‡(
¥ecisi⁄
 >(
buf
))

247 
¥ecisi⁄
 = (
buf
) - 1;

249 
Êags
 |
FL_SIGNEDCONV
;

250 
s
 = 
	`_f_¥öt
(&
≠
, 
Êags
, s, 
c
, 
¥ecisi⁄
);

254 
≠
 = 
	`va_¨g
◊p, 
va_li°
);

255 
fmt
 = 
	`va_¨g
(
≠
, *);

258 
zfûl
 = ' ';

259 i‡(
Êags
 & 
FL_ZEROFILL
Ë
zfûl
 = '0';

260 
j
 = 
s
 - 
s1
;

269 
bëwìn_fûl
 = 0;

270 i‡((
Êags
 & 
FL_ZEROFILL
)

271 && (((
c
 ='x' || c ='X'Ë&& (
Êags
 & 
FL_ALT
))

272 || (
c
 == 'p')

273 || ((
Êags
 & 
FL_SIGNEDCONV
)

274 && ( *
s1
 == '+' || *s1 == '-' || *s1 == ' '))))

275 
bëwìn_fûl
++;

277 i‡((
i
 = 
width
 - 
j
) > 0)

278 i‡(!(
Êags
 & 
FL_LJUST
)) {

279 
ƒch¨s
 +
i
;

280 i‡(
bëwìn_fûl
) {

281 i‡(
Êags
 & 
FL_SIGNEDCONV
) {

282 
j
--; 
ƒch¨s
++;

283 i‡(
	`putc
(*
s1
++, 
°ªam
Ë=
EOF
)

284  
ƒch¨s
 ? -nrchars : -1;

286 
j
 -2; 
ƒch¨s
 += 2;

287 i‡((
	`putc
(*
s1
++, 
°ªam
Ë=
EOF
)

288 || (
	`putc
(*
s1
++, 
°ªam
Ë=
EOF
))

289  
ƒch¨s
 ? -nrchars : -1;

293 i‡(
	`putc
(
zfûl
, 
°ªam
Ë=
EOF
)

294  
ƒch¨s
 ? -nrchars : -1;

295 } --
i
);

298 
ƒch¨s
 +
j
;

299 --
j
 >= 0) {

300 i‡(
	`putc
(*
s1
++, 
°ªam
Ë=
EOF
)

301  
ƒch¨s
 ? -nrchars : -1;

304 i‡(
i
 > 0Ë
ƒch¨s
 += i;

305 --
i
 >= 0)

306 i‡(
	`putc
(
zfûl
, 
°ªam
Ë=
EOF
)

307  
ƒch¨s
 ? -nrchars : -1;

309  
ƒch¨s
;

310 
	}
}

	@doscan.c

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

8 
	~<˘y≥.h
>

9 
	~<°d¨g.h
>

10 
	~"loc_ö˛.h
"

12 #if 
_EM_WSIZE
 =
_EM_PSIZE


13 
	#£t_poöãr
(
Êags
Ë

	)

14 #ñif 
_EM_LSIZE
 =
_EM_PSIZE


15 
	#£t_poöãr
(
Êags
Ë(Êag†|
FL_LONG
)

	)

17 #îr‹ 
g¨bage
 
poöãr
 
size


18 
	#£t_poöãr
(
Êags
Ë

	)

21 
	#NUMLEN
 512

	)

22 
	#NR_CHARS
 256

	)

24 
	gXèbÀ
[
NR_CHARS
];

25 
	göp_buf
[
NUMLEN
];

34 
	$o_cﬁÀ˘
(
c
, 
FILE
 *
°ªam
, 
ty≥
,

35 
width
, *
ba£p
)

37 *
buÂ
 = 
öp_buf
;

38 
ba£
;

40 
ty≥
) {

44 'X': 
ba£
 = 16; ;

46 'u': 
ba£
 = 10; ;

47 'o': 
ba£
 = 8; ;

48 'b': 
ba£
 = 2; ;

51 i‡(
c
 == '-' || c == '+') {

52 *
buÂ
++ = 
c
;

53 i‡(--
width
)

54 
c
 = 
	`gëc
(
°ªam
);

57 i‡(
width
 && 
c
 ='0' && 
ba£
 == 16) {

58 *
buÂ
++ = 
c
;

59 i‡(--
width
)

60 
c
 = 
	`gëc
(
°ªam
);

61 i‡(
c
 != 'x' && c != 'X') {

62 i‡(
ty≥
 ='i'Ë
ba£
 = 8;

64 i‡(
width
) {

65 *
buÂ
++ = 
c
;

66 i‡(--
width
)

67 
c
 = 
	`gëc
(
°ªam
);

70 i‡(
ty≥
 ='i'Ë
ba£
 = 10;

72 
width
) {

73 i‡(((
ba£
 =10Ë&& 
	`isdigô
(
c
))

74 || ((
ba£
 =16Ë&& 
	`isxdigô
(
c
))

75 || ((
ba£
 =8Ë&& 
	`isdigô
(
c
) && (c < '8'))

76 || ((
ba£
 =2Ë&& 
	`isdigô
(
c
) && (c < '2'))) {

77 *
buÂ
++ = 
c
;

78 i‡(--
width
)

79 
c
 = 
	`gëc
(
°ªam
);

84 i‡(
width
 && 
c
 !
EOF
Ë
	`ungëc
(c, 
°ªam
);

85 i‡(
ty≥
 ='i'Ë
ba£
 = 0;

86 *
ba£p
 = 
ba£
;

87 *
buÂ
 = '\0';

88  
buÂ
 - 1;

89 
	}
}

91 #i‚def 
NOFLOAT


101 
	$f_cﬁÀ˘
(
c
, 
FILE
 *
°ªam
, 
width
)

103 *
buÂ
 = 
öp_buf
;

104 
digô_£í
 = 0;

106 i‡(
c
 == '-' || c == '+') {

107 *
buÂ
++ = 
c
;

108 i‡(--
width
)

109 
c
 = 
	`gëc
(
°ªam
);

112 
width
 && 
	`isdigô
(
c
)) {

113 
digô_£í
++;

114 *
buÂ
++ = 
c
;

115 i‡(--
width
)

116 
c
 = 
	`gëc
(
°ªam
);

118 i‡(
width
 && 
c
 == '.') {

119 *
buÂ
++ = 
c
;

120 if(--
width
)

121 
c
 = 
	`gëc
(
°ªam
);

122 
width
 && 
	`isdigô
(
c
)) {

123 
digô_£í
++;

124 *
buÂ
++ = 
c
;

125 i‡(--
width
)

126 
c
 = 
	`gëc
(
°ªam
);

130 i‡(!
digô_£í
) {

131 i‡(
width
 && 
c
 !
EOF
Ë
	`ungëc
(c, 
°ªam
);

132  
öp_buf
 - 1;

134 
digô_£í
 = 0;

136 i‡(
width
 && (
c
 == 'e' || c == 'E')) {

137 *
buÂ
++ = 
c
;

138 i‡(--
width
)

139 
c
 = 
	`gëc
(
°ªam
);

140 i‡(
width
 && (
c
 == '+' || c == '-')) {

141 *
buÂ
++ = 
c
;

142 i‡(--
width
)

143 
c
 = 
	`gëc
(
°ªam
);

145 
width
 && 
	`isdigô
(
c
)) {

146 
digô_£í
++;

147 *
buÂ
++ = 
c
;

148 i‡(--
width
)

149 
c
 = 
	`gëc
(
°ªam
);

151 i‡(!
digô_£í
) {

152 i‡(
width
 && 
c
 !
EOF
Ë
	`ungëc
(c,
°ªam
);

153  
öp_buf
 - 1;

157 i‡(
width
 && 
c
 !
EOF
Ë
	`ungëc
(c, 
°ªam
);

158 *
buÂ
 = '\0';

159  
buÂ
 - 1;

160 
	}
}

169 
	$_dosˇn
(
FILE
 *
°ªam
, c⁄° *
f‹m©
, 
va_li°
 
≠
)

171 
d⁄e
 = 0;

172 
ƒch¨s
 = 0;

173 
c⁄v
 = 0;

174 
ba£
;

175 
vÆ
;

176 *
°r
;

177 *
tmp_°rög
;

178 
width
 = 0;

179 
Êags
;

180 
ªvî£
;

181 
köd
;

182 
ic
 = 
EOF
;

183 #i‚def 
NOFLOAT


184 
ld_vÆ
;

187 i‡(!*
f‹m©
)  0;

190 i‡(
	`is•a˚
(*
f‹m©
)) {

191 
	`is•a˚
(*
f‹m©
))

192 
f‹m©
++;

193 
ic
 = 
	`gëc
(
°ªam
);

194 
ƒch¨s
++;

195 
	`is•a˚
 (
ic
)) {

196 
ic
 = 
	`gëc
(
°ªam
);

197 
ƒch¨s
++;

199 i‡(
ic
 !
EOF
Ë
	`ungëc
(ic,
°ªam
);

200 
ƒch¨s
--;

202 i‡(!*
f‹m©
) ;

204 i‡(*
f‹m©
 != '%') {

205 
ic
 = 
	`gëc
(
°ªam
);

206 
ƒch¨s
++;

207 i‡(
ic
 !*
f‹m©
++) ;

210 
f‹m©
++;

211 i‡(*
f‹m©
 == '%') {

212 
ic
 = 
	`gëc
(
°ªam
);

213 
ƒch¨s
++;

214 i‡(
ic
 == '%') {

215 
f‹m©
++;

220 
Êags
 = 0;

221 i‡(*
f‹m©
 == '*') {

222 
f‹m©
++;

223 
Êags
 |
FL_NOASSIGN
;

225 i‡(
	`isdigô
 (*
f‹m©
)) {

226 
Êags
 |
FL_WIDTHSPEC
;

227 
width
 = 0; 
	`isdigô
 (*
f‹m©
);)

228 
width
 = width * 10 + *
f‹m©
++ - '0';

231 *
f‹m©
) {

232 'h': 
Êags
 |
FL_SHORT
; 
f‹m©
++; ;

233 'l': 
Êags
 |
FL_LONG
; 
f‹m©
++; ;

234 'L': 
Êags
 |
FL_LONGDOUBLE
; 
f‹m©
++; ;

236 
köd
 = *
f‹m©
;

237 i‡((
köd
 != 'c') && (kind != '[') && (kind != 'n')) {

239 
ic
 = 
	`gëc
(
°ªam
);

240 
ƒch¨s
++;

241 } 
	`is•a˚
(
ic
));

242 i‡(
ic
 =
EOF
) ;

243 } i‡(
köd
 != 'n') {

244 
ic
 = 
	`gëc
(
°ªam
);

245 i‡(
ic
 =
EOF
) ;

246 
ƒch¨s
++;

248 
köd
) {

251  
c⁄v
 || (
ic
 !
EOF
Ë? 
d⁄e
 : EOF;

254 i‡(!(
Êags
 & 
FL_NOASSIGN
)) {

255 i‡(
Êags
 & 
FL_SHORT
)

256 *
	`va_¨g
(
≠
, *Ë(Ë
ƒch¨s
;

257 i‡(
Êags
 & 
FL_LONG
)

258 *
	`va_¨g
(
≠
, *Ë(Ë
ƒch¨s
;

260 *
	`va_¨g
(
≠
, *Ë(Ë
ƒch¨s
;

264 
	`£t_poöãr
(
Êags
);

273 i‡(!(
Êags
 & 
FL_WIDTHSPEC
Ë|| 
width
 > 
NUMLEN
)

274 
width
 = 
NUMLEN
;

275 i‡(!
width
Ë 
d⁄e
;

277 
°r
 = 
	`o_cﬁÀ˘
(
ic
, 
°ªam
, 
köd
, 
width
, &
ba£
);

278 i‡(
°r
 < 
öp_buf


279 || (
°r
 =
öp_buf


280 && (*
°r
 == '-'

281 || *
°r
 ='+'))Ë 
d⁄e
;

287 
ƒch¨s
 +
°r
 - 
öp_buf
;

289 i‡(!(
Êags
 & 
FL_NOASSIGN
)) {

290 i‡(
köd
 == 'd' || kind == 'i')

291 
vÆ
 = 
	`°πﬁ
(
öp_buf
, &
tmp_°rög
, 
ba£
);

293 
vÆ
 = 
	`°πoul
(
öp_buf
, &
tmp_°rög
, 
ba£
);

294 i‡(
Êags
 & 
FL_LONG
)

295 *
	`va_¨g
(
≠
, *Ë(Ë
vÆ
;

296 i‡(
Êags
 & 
FL_SHORT
)

297 *
	`va_¨g
(
≠
, *Ë(Ë
vÆ
;

299 *
	`va_¨g
(
≠
, *Ë(Ë
vÆ
;

303 i‡(!(
Êags
 & 
FL_WIDTHSPEC
))

304 
width
 = 1;

305 i‡(!(
Êags
 & 
FL_NOASSIGN
))

306 
°r
 = 
	`va_¨g
(
≠
, *);

307 i‡(!
width
Ë 
d⁄e
;

309 
width
 && 
ic
 !
EOF
) {

310 i‡(!(
Êags
 & 
FL_NOASSIGN
))

311 *
°r
++ = (Ë
ic
;

312 i‡(--
width
) {

313 
ic
 = 
	`gëc
(
°ªam
);

314 
ƒch¨s
++;

318 i‡(
width
) {

319 i‡(
ic
 !
EOF
Ë
	`ungëc
(ic,
°ªam
);

320 
ƒch¨s
--;

324 i‡(!(
Êags
 & 
FL_WIDTHSPEC
))

325 
width
 = 0xffff;

326 i‡(!(
Êags
 & 
FL_NOASSIGN
))

327 
°r
 = 
	`va_¨g
(
≠
, *);

328 i‡(!
width
Ë 
d⁄e
;

330 
width
 && 
ic
 !
EOF
 && !
	`is•a˚
(ic)) {

331 i‡(!(
Êags
 & 
FL_NOASSIGN
))

332 *
°r
++ = (Ë
ic
;

333 i‡(--
width
) {

334 
ic
 = 
	`gëc
(
°ªam
);

335 
ƒch¨s
++;

339 i‡(!(
Êags
 & 
FL_NOASSIGN
))

340 *
°r
 = '\0';

341 i‡(
width
) {

342 i‡(
ic
 !
EOF
Ë
	`ungëc
(ic,
°ªam
);

343 
ƒch¨s
--;

347 i‡(!(
Êags
 & 
FL_WIDTHSPEC
))

348 
width
 = 0xffff;

349 i‡(!
width
Ë 
d⁄e
;

351 i‡–*++
f‹m©
 == '^' ) {

352 
ªvî£
 = 1;

353 
f‹m©
++;

355 
ªvî£
 = 0;

357 
°r
 = 
XèbÀ
; så < &XèbÀ[
NR_CHARS
]

358 ; 
°r
++)

359 *
°r
 = 0;

361 i‡(*
f‹m©
 =']'Ë
XèbÀ
[*format++] = 1;

363 *
f‹m©
 && *format != ']') {

364 
XèbÀ
[*
f‹m©
++] = 1;

365 i‡(*
f‹m©
 == '-') {

366 
f‹m©
++;

367 i‡(*
f‹m©


368 && *
f‹m©
 != ']'

369 && *(
f‹m©
) >= *(format -2)) {

370 
c
;

372  
c
 = *(
f‹m©
 -2) + 1

373 ; 
c
 <*
f‹m©
 ; c++)

374 
XèbÀ
[
c
] = 1;

375 
f‹m©
++;

377 
XèbÀ
['-'] = 1;

380 i‡(!*
f‹m©
Ë 
d⁄e
;

382 i‡(!(
XèbÀ
[
ic
] ^ 
ªvî£
)) {

384 
	`ungëc
(
ic
, 
°ªam
);

385  
d⁄e
;

388 i‡(!(
Êags
 & 
FL_NOASSIGN
))

389 
°r
 = 
	`va_¨g
(
≠
, *);

392 i‡(!(
Êags
 & 
FL_NOASSIGN
))

393 *
°r
++ = (Ë
ic
;

394 i‡(--
width
) {

395 
ic
 = 
	`gëc
(
°ªam
);

396 
ƒch¨s
++;

398 } 
width
 && 
ic
 !
EOF
 && (
XèbÀ
[ic] ^ 
ªvî£
));

400 i‡(
width
) {

401 i‡(
ic
 !
EOF
Ë
	`ungëc
(ic, 
°ªam
);

402 
ƒch¨s
--;

404 i‡(!(
Êags
 & 
FL_NOASSIGN
)) {

405 *
°r
 = '\0';

408 #i‚def 
NOFLOAT


414 i‡(!(
Êags
 & 
FL_WIDTHSPEC
Ë|| 
width
 > 
NUMLEN
)

415 
width
 = 
NUMLEN
;

417 i‡(!
width
Ë 
d⁄e
;

418 
°r
 = 
	`f_cﬁÀ˘
(
ic
, 
°ªam
, 
width
);

420 i‡(
°r
 < 
öp_buf


421 || (
°r
 =
öp_buf


422 && (*
°r
 == '-'

423 || *
°r
 ='+'))Ë 
d⁄e
;

429 
ƒch¨s
 +
°r
 - 
öp_buf
;

431 i‡(!(
Êags
 & 
FL_NOASSIGN
)) {

432 
ld_vÆ
 = 
	`°πod
(
öp_buf
, &
tmp_°rög
);

433 i‡(
Êags
 & 
FL_LONGDOUBLE
)

434 *
	`va_¨g
(
≠
, *Ë(Ë
ld_vÆ
;

436 i‡(
Êags
 & 
FL_LONG
)

437 *
	`va_¨g
(
≠
, *Ë(Ë
ld_vÆ
;

439 *
	`va_¨g
(
≠
, *Ë(Ë
ld_vÆ
;

444 
c⁄v
++;

445 i‡(!(
Êags
 & 
FL_NOASSIGN
Ë&& 
köd
 !'n'Ë
d⁄e
++;

446 
f‹m©
++;

448  
c⁄v
 || (
ic
 !
EOF
Ë? 
d⁄e
 : EOF;

449 
	}
}

	@dp8390.c

46 
	~"kî√l.h
"

47 
	~<°dlib.h
>

48 
	~<möix/com.h
>

49 
	~<√t/ht⁄.h
>

50 
	~<√t/gí/ëhî.h
>

51 
	~<√t/gí/ëh_io.h
>

52 
	~"as£π.h
"

53 
	gINIT_ASSERT


54 
	~"¥Ÿe˘.h
"

55 
	~"dp8390.h
"

56 
	~"¥oc.h
"

58 #i‡
ENABLE_NETWORKING


60 #i‡!
__möix_vmd


61 
	#¥ötW
(Ë(Ë0

	)

62 
	#debug
 0

	)

65 
	#DE_PORT_NR
 2

	)

67 
d≥th_t
 
	gde_èbÀ
[
DE_PORT_NR
];

68 
	göt_≥ndög
[
NR_IRQ_VECTORS
];

69 
	gd≥th_èskƒ

ANY
;

70 
u16_t
 
	gëh_ign_¥Ÿo
;

73 
	sdp_c⁄f


75 
p‹t_t
 
	mdpc_p‹t
;

76 
	mdpc_úq
;

77 
phys_byãs
 
	mdpc_mem
;

78 *
	mdpc_ívv¨
;

79 
£gm_t
 
	mdpc_¥Ÿ_£l
;

80 } 
	tdp_c⁄f_t
;

82 
dp_c⁄f_t
 
	gdp_c⁄f
[]=

85 { 0x280, 3, 0xD0000, "DPETH0", 
DP_ETH0_SELECTOR
 },

86 { 0x300, 5, 0xCC000, "DPETH1", 
DP_ETH1_SELECTOR
 },

92 
___dummy
[
DE_PORT_NR
 =(
dp_c⁄f
)/(dp_conf[0]) ? 1 : -1];

95 
_PROTOTYPE
–
do_vwrôe
, (
mesßge
 *
mp
, 
‰om_öt
,

96 
ve˘‹ed
) );

97 
_PROTOTYPE
–
do_vªad
, (
mesßge
 *
mp
, 
ve˘‹ed
) );

98 
_PROTOTYPE
–
do_öô
, (
mesßge
 *
mp
) );

99 
_PROTOTYPE
–
do_öt
, (
d≥th_t
 *
dï
) );

100 
_PROTOTYPE
–
do_gë°©
, (
mesßge
 *
mp
) );

101 
_PROTOTYPE
–
do_°›
, (
mesßge
 *
mp
) );

102 
_PROTOTYPE
–
dp_öô
, (
d≥th_t
 *
dï
) );

103 
_PROTOTYPE
–
dp_c⁄Áddr
, (
d≥th_t
 *
dï
) );

104 
_PROTOTYPE
–
dp_ªöô
, (
d≥th_t
 *
dï
) );

105 
_PROTOTYPE
–
dp_ª£t
, (
d≥th_t
 *
dï
) );

106 
_PROTOTYPE
–
dp_check_öts
, (
d≥th_t
 *
dï
) );

107 
_PROTOTYPE
–
dp_ªcv
, (
d≥th_t
 *
dï
) );

108 
_PROTOTYPE
–
dp_£nd
, (
d≥th_t
 *
dï
) );

109 
_PROTOTYPE
–
dp_gëblock
, (
d≥th_t
 *
dï
, 
∑ge
,

110 
size_t
 
off£t
, size_à
size
, *
d°
) );

111 
_PROTOTYPE
–
dp_pio8_gëblock
, (
d≥th_t
 *
dï
, 
∑ge
,

112 
size_t
 
off£t
, size_à
size
, *
d°
) );

113 
_PROTOTYPE
–
dp_pio16_gëblock
, (
d≥th_t
 *
dï
, 
∑ge
,

114 
size_t
 
off£t
, size_à
size
, *
d°
) );

115 
_PROTOTYPE
–
dp_pkt2u£r
, (
d≥th_t
 *
dï
, 
∑ge
,

116 
Àngth
) );

117 
_PROTOTYPE
–
dp_u£r2nic
, (
d≥th_t
 *
dï
, 
iovec_d©_t
 *
iovp
,

118 
vú_byãs
 
off£t
, 
nic_addr
, vú_byã†
cou¡
) );

119 
_PROTOTYPE
–
dp_pio8_u£r2nic
, (
d≥th_t
 *
dï
,

120 
iovec_d©_t
 *
iovp
, 
vú_byãs
 
off£t
,

121 
nic_addr
, 
vú_byãs
 
cou¡
) );

122 
_PROTOTYPE
–
dp_pio16_u£r2nic
, (
d≥th_t
 *
dï
,

123 
iovec_d©_t
 *
iovp
, 
vú_byãs
 
off£t
,

124 
nic_addr
, 
vú_byãs
 
cou¡
) );

125 
_PROTOTYPE
–
dp_nic2u£r
, (
d≥th_t
 *
dï
, 
nic_addr
,

126 
iovec_d©_t
 *
iovp
, 
vú_byãs
 
off£t
, vú_byã†
cou¡
) );

127 
_PROTOTYPE
–
dp_pio8_nic2u£r
, (
d≥th_t
 *
dï
, 
nic_addr
,

128 
iovec_d©_t
 *
iovp
, 
vú_byãs
 
off£t
, vú_byã†
cou¡
) );

129 
_PROTOTYPE
–
dp_pio16_nic2u£r
, (
d≥th_t
 *
dï
, 
nic_addr
,

130 
iovec_d©_t
 *
iovp
, 
vú_byãs
 
off£t
, vú_byã†
cou¡
) );

131 
_PROTOTYPE
–
dp_√xt_iovec
, (
iovec_d©_t
 *
iovp
) );

132 
_PROTOTYPE
–
dp_h™dÀr
, (
úq
) );

133 
_PROTOTYPE
–
c⁄f_hw
, (
d≥th_t
 *
dï
) );

134 
_PROTOTYPE
–
upd©e_c⁄f
, (
d≥th_t
 *
dï
, 
dp_c⁄f_t
 *
d˝
) );

135 
_PROTOTYPE
–
ˇlc_iovec_size
, (
iovec_d©_t
 *
iovp
) );

136 
_PROTOTYPE
–
ª∂y
, (
d≥th_t
 *
dï
, 
îr
, 
may_block
) );

137 
_PROTOTYPE
–
mess_ª∂y
, (
mesßge
 *
ªq
, mesßgê*
ª∂y
) );

138 
_PROTOTYPE
–
gë_u£rd©a
, (
u£r_¥oc
,

139 
vú_byãs
 
u£r_addr
, vú_byã†
cou¡
, *
loc_addr
) );

140 
_PROTOTYPE
–
put_u£rd©a
, (
u£r_¥oc
,

141 
vú_byãs
 
u£r_addr
, vú_byã†
cou¡
, *
loc_addr
) );

146 
	$dp8390_èsk
()

148 
mesßge
 
m
;

149 
i
, 
úq
, 
r
;

150 
d≥th_t
 *
dï
;

151 
v
;

153 
d≥th_èskƒ

	`¥oc_numbî
(
¥oc_±r
);

155 
v
= 0xFFFF;

156 (Ë
	`ív_∑r£
("ETH_IGN_PROTO", "x", 0, &
v
, 0x0000L, 0xFFFFL);

157 
ëh_ign_¥Ÿo

	`ht⁄s
((
u16_t
Ë
v
);

159 
TRUE
)

161 i‡((
r

	`ª˚ive
(
ANY
, &
m
)Ë!
OK
)

162 
	`∑nic
("dp8390:Ñe˚ivêÁûed", 
r
);

164 
m
.
m_ty≥
)

166 
DL_WRITE
: 
	`do_vwrôe
(&
m
, 
FALSE
, FALSE); ;

167 
DL_WRITEV
: 
	`do_vwrôe
(&
m
, 
FALSE
, 
TRUE
); ;

168 
DL_READ
: 
	`do_vªad
(&
m
, 
FALSE
); ;

169 
DL_READV
: 
	`do_vªad
(&
m
, 
TRUE
); ;

170 
DL_INIT
: 
	`do_öô
(&
m
); ;

171 
DL_GETSTAT
: 
	`do_gë°©
(&
m
); ;

172 
DL_STOP
: 
	`do_°›
(&
m
); ;

173 
HARD_INT
:

174 
i
0, 
dï
&
de_èbÀ
[0]; i<
DE_PORT_NR
; i++, dep++)

176 i‡(
dï
->
de_mode
 !
DEM_ENABLED
)

178 
	`as£π
(
dï
->
de_Êags
 & 
DEF_ENABLED
);

179 
úq

dï
->
de_úq
;

180 
	`as£π
(
úq
 >0 && irq < 
NR_IRQ_VECTORS
);

181 i‡(
öt_≥ndög
[
úq
])

183 
öt_≥ndög
[
úq
]= 0;

184 
	`dp_check_öts
(
dï
);

185 
	`do_öt
(
dï
);

190 
	`∑nic
("dp8390: iŒegÆ mesßge", 
m
.
m_ty≥
);

193 
	}
}

199 
	$dp_dump
()

201 
d≥th_t
 *
dï
;

202 
i
, 
i§
;

204 
	`¥ötf
("\n");

205 
i
0, 
dï
 = &
de_èbÀ
[0]; i<
DE_PORT_NR
; i++, dep++)

207 i‡(
dï
->
de_mode
 =
DEM_DISABLED
)

208 
	`¥ötf
("dp8390Ö‹à%d i†dißbÀd\n", 
i
);

209 i‡(
dï
->
de_mode
 =
DEM_SINK
)

210 
	`¥ötf
("dp8390Ö‹à%d i†ö sök mode\n", 
i
);

212 i‡(
dï
->
de_mode
 !
DEM_ENABLED
)

215 
	`¥ötf
("dp8390 sèti°ic†o‡p‹à%d:\n", 
i
);

217 
	`¥ötf
("ªcvEº :%8ld\t", 
dï
->
de_°©
.
ës_ªcvEº
);

218 
	`¥ötf
("£ndEº :%8ld\t", 
dï
->
de_°©
.
ës_£ndEº
);

219 
	`¥ötf
("OVW :%8ld\n", 
dï
->
de_°©
.
ës_OVW
);

221 
	`¥ötf
("CRCî∏ :%8ld\t", 
dï
->
de_°©
.
ës_CRCîr
);

222 
	`¥ötf
("‰ameAŒ :%8ld\t", 
dï
->
de_°©
.
ës_‰ameAŒ
);

223 
	`¥ötf
("mis£dP :%8ld\n", 
dï
->
de_°©
.
ës_mis£dP
);

225 
	`¥ötf
("∑ckëR :%8ld\t", 
dï
->
de_°©
.
ës_∑ckëR
);

226 
	`¥ötf
("∑ckëT :%8ld\t", 
dï
->
de_°©
.
ës_∑ckëT
);

227 
	`¥ötf
("å™sDe‡ :%8ld\n", 
dï
->
de_°©
.
ës_å™sDef
);

229 
	`¥ötf
("cﬁlisi⁄ :%8ld\t", 
dï
->
de_°©
.
ës_cﬁlisi⁄
);

230 
	`¥ötf
("å™sAb :%8ld\t", 
dï
->
de_°©
.
ës_å™sAb
);

231 
	`¥ötf
("ˇºSí£ :%8ld\n", 
dï
->
de_°©
.
ës_ˇºSí£
);

233 
	`¥ötf
("fifoUndî :%8ld\t", 
dï
->
de_°©
.
ës_fifoUndî
);

234 
	`¥ötf
("fifoOvî :%8ld\t", 
dï
->
de_°©
.
ës_fifoOvî
);

235 
	`¥ötf
("CDhóπbót:%8ld\n", 
dï
->
de_°©
.
ës_CDhóπbót
);

237 
	`¥ötf
("OWC :%8ld\t", 
dï
->
de_°©
.
ës_OWC
);

239 
i§

	`öb_ªg0
(
dï
, 
DP_ISR
);

240 
	`¥ötf
("dp_i§ = 0x%x + 0x%x, de_Êag†0x%x\n", 
i§
,

241 
	`öb_ªg0
(
dï
, 
DP_ISR
), dï->
de_Êags
);

243 
	}
}

249 
	$dp8390_°›
()

251 
mesßge
 
mess
;

252 
i
;

254 
i
0; i<
DE_PORT_NR
; i++)

256 i‡(
de_èbÀ
[
i
].
de_mode
 !
DEM_ENABLED
)

258 
mess
.
m_ty≥

DL_STOP
;

259 
mess
.
DL_PORT

i
;

260 
	`do_°›
(&
mess
);

262 
	}
}

268 
	$do_vwrôe
(
mp
, 
‰om_öt
, 
ve˘‹ed
)

269 
mesßge
 *
mp
;

270 
‰om_öt
;

271 
ve˘‹ed
;

273 
p‹t
, 
cou¡
, 
size
;

274 
£ndq_hód
;

275 
d≥th_t
 *
dï
;

277 
p‹t
 = 
mp
->
DL_PORT
;

278 
cou¡
 = 
mp
->
DL_COUNT
;

279 i‡(
p‹t
 < 0 ||Ö‹à>
DE_PORT_NR
)

280 
	`∑nic
("dp8390: iŒegÆÖ‹t", 
p‹t
);

281 
dï
&
de_èbÀ
[
p‹t
];

282 
dï
->
de_˛õ¡

mp
->
DL_PROC
;

284 i‡(
dï
->
de_mode
 =
DEM_SINK
)

286 
	`as£π
(!
‰om_öt
);

287 
dï
->
de_Êags
 |
DEF_PACK_SEND
;

288 
	`ª∂y
(
dï
, 
OK
, 
FALSE
);

291 
	`as£π
(
dï
->
de_mode
 =
DEM_ENABLED
);

292 
	`as£π
(
dï
->
de_Êags
 & 
DEF_ENABLED
);

293 i‡(
dï
->
de_Êags
 & 
DEF_SEND_AVAIL
)

294 
	`∑nic
("dp8390: sídáÃódy i¿¥ogªss", 
NO_NUM
);

296 
£ndq_hód

dï
->
de_£ndq_hód
;

297 i‡(
dï
->
de_£ndq
[
£ndq_hód
].
sq_fûÀd
)

299 i‡(
‰om_öt
)

300 
	`∑nic
("dp8390: shouldÇŸ bê£ndög\n", 
NO_NUM
);

301 
dï
->
de_£ndmsg
*
mp
;

302 
dï
->
de_Êags
 |
DEF_SEND_AVAIL
;

303 
	`ª∂y
(
dï
, 
OK
, 
FALSE
);

306 
	`as£π
(!(
dï
->
de_Êags
 & 
DEF_PACK_SEND
));

308 i‡(
ve˘‹ed
)

310 
	`gë_u£rd©a
(
mp
->
DL_PROC
, (
vú_byãs
Ëmp->
DL_ADDR
,

311 (
cou¡
 > 
IOVEC_NR
 ? IOVEC_NR : count) *

312 (
iovec_t
), 
dï
->
de_wrôe_iovec
.
iod_iovec
);

313 
dï
->
de_wrôe_iovec
.
iod_iovec_s
 = 
cou¡
;

314 
dï
->
de_wrôe_iovec
.
iod_¥oc_ƒ
 = 
mp
->
DL_PROC
;

315 
dï
->
de_wrôe_iovec
.
iod_iovec_addr
 = (
vú_byãs
Ë
mp
->
DL_ADDR
;

317 
dï
->
de_tmp_iovec
 = dï->
de_wrôe_iovec
;

318 
size
 = 
	`ˇlc_iovec_size
(&
dï
->
de_tmp_iovec
);

322 
dï
->
de_wrôe_iovec
.
iod_iovec
[0].
iov_addr
 =

323 (
vú_byãs
Ë
mp
->
DL_ADDR
;

324 
dï
->
de_wrôe_iovec
.
iod_iovec
[0].
iov_size
 =

325 
mp
->
DL_COUNT
;

326 
dï
->
de_wrôe_iovec
.
iod_iovec_s
 = 1;

327 
dï
->
de_wrôe_iovec
.
iod_¥oc_ƒ
 = 
mp
->
DL_PROC
;

328 
dï
->
de_wrôe_iovec
.
iod_iovec_addr
 = 0;

329 
size

mp
->
DL_COUNT
;

331 i‡(
size
 < 
ETH_MIN_PACK_SIZE
 || sizê> 
ETH_MAX_PACK_SIZE
)

333 
	`∑nic
("dp8390: invÆidÖackë size", 
size
);

335 (
dï
->
de_u£r2nicf
)(dï, &dï->
de_wrôe_iovec
, 0,

336 
dï
->
de_£ndq
[
£ndq_hód
].
sq_£nd∑ge
 * 
DP_PAGESIZE
,

337 
size
);

338 
dï
->
de_£ndq
[
£ndq_hód
].
sq_fûÀd

TRUE
;

339 i‡(
dï
->
de_£ndq_èû
 =
£ndq_hód
)

341 
	`outb_ªg0
(
dï
, 
DP_TPSR
, dï->
de_£ndq
[
£ndq_hód
].
sq_£nd∑ge
);

342 
	`outb_ªg0
(
dï
, 
DP_TBCR1
, 
size
 >> 8);

343 
	`outb_ªg0
(
dï
, 
DP_TBCR0
, 
size
 & 0xff);

344 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_TXP
);

347 
dï
->
de_£ndq
[
£ndq_hód
].
sq_size

size
;

349 i‡(++
£ndq_hód
 =
dï
->
de_£ndq_ƒ
)

350 
£ndq_hód
= 0;

351 
	`as£π
(
£ndq_hód
 < 
SENDQ_NR
);

352 
dï
->
de_£ndq_hód

£ndq_hód
;

354 
dï
->
de_Êags
 |
DEF_PACK_SEND
;

359 i‡(
‰om_öt
)

361 
	`ª∂y
(
dï
, 
OK
, 
FALSE
);

363 
	`as£π
(
dï
->
de_mode
 =
DEM_ENABLED
);

364 
	`as£π
(
dï
->
de_Êags
 & 
DEF_ENABLED
);

365 
	}
}

371 
	$do_vªad
(
mp
, 
ve˘‹ed
)

372 
mesßge
 *
mp
;

373 
ve˘‹ed
;

375 
p‹t
, 
cou¡
;

376 
size
;

377 
d≥th_t
 *
dï
;

379 
p‹t
 = 
mp
->
DL_PORT
;

380 
cou¡
 = 
mp
->
DL_COUNT
;

381 i‡(
p‹t
 < 0 ||Ö‹à>
DE_PORT_NR
)

382 
	`∑nic
("dp8390: iŒegÆÖ‹t", 
p‹t
);

383 
dï
&
de_èbÀ
[
p‹t
];

384 
dï
->
de_˛õ¡

mp
->
DL_PROC
;

385 i‡(
dï
->
de_mode
 =
DEM_SINK
)

387 
	`ª∂y
(
dï
, 
OK
, 
FALSE
);

390 
	`as£π
(
dï
->
de_mode
 =
DEM_ENABLED
);

391 
	`as£π
(
dï
->
de_Êags
 & 
DEF_ENABLED
);

393 if(
dï
->
de_Êags
 & 
DEF_READING
)

394 
	`∑nic
("dp8390:ÑódáÃódy i¿¥ogªss", 
NO_NUM
);

396 i‡(
ve˘‹ed
)

398 
	`gë_u£rd©a
(
mp
->
DL_PROC
, (
vú_byãs
Ëmp->
DL_ADDR
,

399 (
cou¡
 > 
IOVEC_NR
 ? IOVEC_NR : count) *

400 (
iovec_t
), 
dï
->
de_ªad_iovec
.
iod_iovec
);

401 
dï
->
de_ªad_iovec
.
iod_iovec_s
 = 
cou¡
;

402 
dï
->
de_ªad_iovec
.
iod_¥oc_ƒ
 = 
mp
->
DL_PROC
;

403 
dï
->
de_ªad_iovec
.
iod_iovec_addr
 = (
vú_byãs
Ë
mp
->
DL_ADDR
;

405 
dï
->
de_tmp_iovec
 = dï->
de_ªad_iovec
;

406 
size

	`ˇlc_iovec_size
(&
dï
->
de_tmp_iovec
);

410 
dï
->
de_ªad_iovec
.
iod_iovec
[0].
iov_addr
 =

411 (
vú_byãs
Ë
mp
->
DL_ADDR
;

412 
dï
->
de_ªad_iovec
.
iod_iovec
[0].
iov_size
 =

413 
mp
->
DL_COUNT
;

414 
dï
->
de_ªad_iovec
.
iod_iovec_s
 = 1;

415 
dï
->
de_ªad_iovec
.
iod_¥oc_ƒ
 = 
mp
->
DL_PROC
;

416 
dï
->
de_ªad_iovec
.
iod_iovec_addr
 = 0;

417 
size

cou¡
;

419 i‡(
size
 < 
ETH_MAX_PACK_SIZE
)

420 
	`∑nic
("dp8390: wr⁄gÖackë size", 
size
);

421 
dï
->
de_Êags
 |
DEF_READING
;

423 
	`dp_ªcv
(
dï
);

425 i‡((
dï
->
de_Êags
 & (
DEF_READING
|
DEF_STOPPED
)) ==

426 (
DEF_READING
|
DEF_STOPPED
))

431 
	`dp_ª£t
(
dï
);

433 
	`ª∂y
(
dï
, 
OK
, 
FALSE
);

434 
	}
}

440 
	$do_öô
(
mp
)

441 
mesßge
 *
mp
;

443 
p‹t
;

444 
d≥th_t
 *
dï
;

445 
mesßge
 
ª∂y_mess
;

447 
p‹t
 = 
mp
->
DL_PORT
;

448 i‡(
p‹t
 < 0 ||Ö‹à>
DE_PORT_NR
)

450 
ª∂y_mess
.
m_ty≥

DL_INIT_REPLY
;

451 
ª∂y_mess
.
m3_i1

ENXIO
;

452 
	`mess_ª∂y
(
mp
, &
ª∂y_mess
);

455 
dï
&
de_èbÀ
[
p‹t
];

456 i‡(
dï
->
de_mode
 =
DEM_DISABLED
)

459 
	`c⁄f_hw
(
dï
);

460 i‡(
dï
->
de_mode
 =
DEM_DISABLED
)

463 
ª∂y_mess
.
m_ty≥

DL_INIT_REPLY
;

464 
ª∂y_mess
.
m3_i1

ENXIO
;

465 
	`mess_ª∂y
(
mp
, &
ª∂y_mess
);

468 i‡(
dï
->
de_mode
 =
DEM_ENABLED
)

469 
	`dp_öô
(
dï
);

472 i‡(
dï
->
de_mode
 =
DEM_SINK
)

474 
dï
->
de_addªss
.
ó_addr
[0] =

475 
dï
->
de_addªss
.
ó_addr
[1] =

476 
dï
->
de_addªss
.
ó_addr
[2] =

477 
dï
->
de_addªss
.
ó_addr
[3] =

478 
dï
->
de_addªss
.
ó_addr
[4] =

479 
dï
->
de_addªss
.
ó_addr
[5] = 0;

480 
	`dp_c⁄Áddr
(
dï
);

481 
ª∂y_mess
.
m_ty≥
 = 
DL_INIT_REPLY
;

482 
ª∂y_mess
.
m3_i1
 = 
mp
->
DL_PORT
;

483 
ª∂y_mess
.
m3_i2
 = 
DE_PORT_NR
;

484 *(
ëhî_addr_t
 *Ë
ª∂y_mess
.
m3_ˇ1
 = 
dï
->
de_addªss
;

485 
	`mess_ª∂y
(
mp
, &
ª∂y_mess
);

488 
	`as£π
(
dï
->
de_mode
 =
DEM_ENABLED
);

489 
	`as£π
(
dï
->
de_Êags
 & 
DEF_ENABLED
);

491 
dï
->
de_Êags
 &~(
DEF_PROMISC
 | 
DEF_MULTI
 | 
DEF_BROAD
);

493 i‡(
mp
->
DL_MODE
 & 
DL_PROMISC_REQ
)

494 
dï
->
de_Êags
 |
DEF_PROMISC
 | 
DEF_MULTI
 | 
DEF_BROAD
;

495 i‡(
mp
->
DL_MODE
 & 
DL_MULTI_REQ
)

496 
dï
->
de_Êags
 |
DEF_MULTI
;

497 i‡(
mp
->
DL_MODE
 & 
DL_BROAD_REQ
)

498 
dï
->
de_Êags
 |
DEF_BROAD
;

500 
dï
->
de_˛õ¡
 = 
mp
->
m_sour˚
;

501 
	`dp_ªöô
(
dï
);

503 
ª∂y_mess
.
m_ty≥
 = 
DL_INIT_REPLY
;

504 
ª∂y_mess
.
m3_i1
 = 
mp
->
DL_PORT
;

505 
ª∂y_mess
.
m3_i2
 = 
DE_PORT_NR
;

506 *(
ëhî_addr_t
 *Ë
ª∂y_mess
.
m3_ˇ1
 = 
dï
->
de_addªss
;

508 
	`mess_ª∂y
(
mp
, &
ª∂y_mess
);

509 
	}
}

514 
	$do_öt
(
dï
)

515 
d≥th_t
 *
dï
;

517 i‡(
dï
->
de_Êags
 & (
DEF_PACK_SEND
 | 
DEF_PACK_RECV
))

518 
	`ª∂y
(
dï
, 
OK
, 
TRUE
);

519 
	}
}

525 
	$do_gë°©
(
mp
)

526 
mesßge
 *
mp
;

528 
p‹t
;

529 
d≥th_t
 *
dï
;

531 
p‹t
 = 
mp
->
DL_PORT
;

532 i‡(
p‹t
 < 0 ||Ö‹à>
DE_PORT_NR
)

533 
	`∑nic
("dp8390: iŒegÆÖ‹t", 
p‹t
);

534 
dï
&
de_èbÀ
[
p‹t
];

535 
dï
->
de_˛õ¡

mp
->
DL_PROC
;

536 i‡(
dï
->
de_mode
 =
DEM_SINK
)

538 
	`put_u£rd©a
(
mp
->
DL_PROC
, (
vú_byãs
Ëmp->
DL_ADDR
,

539 (
vú_byãs
Ë(
dï
->
de_°©
), &dep->de_stat);

540 
	`ª∂y
(
dï
, 
OK
, 
FALSE
);

543 
	`as£π
(
dï
->
de_mode
 =
DEM_ENABLED
);

544 
	`as£π
(
dï
->
de_Êags
 & 
DEF_ENABLED
);

546 
dï
->
de_°©
.
ës_CRCîr
 +
	`öb_ªg0
(dï, 
DP_CNTR0
);

547 
dï
->
de_°©
.
ës_‰ameAŒ
 +
	`öb_ªg0
(dï, 
DP_CNTR1
);

548 
dï
->
de_°©
.
ës_mis£dP
 +
	`öb_ªg0
(dï, 
DP_CNTR2
);

550 
	`put_u£rd©a
(
mp
->
DL_PROC
, (
vú_byãs
Ëmp->
DL_ADDR
,

551 (
vú_byãs
Ë(
dï
->
de_°©
), &dep->de_stat);

552 
	`ª∂y
(
dï
, 
OK
, 
FALSE
);

553 
	}
}

559 
	$do_°›
(
mp
)

560 
mesßge
 *
mp
;

562 
p‹t
;

563 
d≥th_t
 *
dï
;

565 
p‹t
 = 
mp
->
DL_PORT
;

567 i‡(
p‹t
 < 0 ||Ö‹à>
DE_PORT_NR
)

568 
	`∑nic
("dp8390: iŒegÆÖ‹t", 
p‹t
);

569 
dï
&
de_èbÀ
[
p‹t
];

570 i‡(
dï
->
de_mode
 =
DEM_SINK
)

572 
	`as£π
(
dï
->
de_mode
 =
DEM_ENABLED
);

574 i‡(!(
dï
->
de_Êags
 & 
DEF_ENABLED
))

577 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_STP
 | 
CR_DM_ABORT
);

578 (
dï
->
de_°›f
)(dep);

580 
dï
->
de_Êags

DEF_EMPTY
;

581 
	}
}

587 
	$dp_öô
(
dï
)

588 
d≥th_t
 *
dï
;

590 
dp_r¸_ªg
;

591 
i
;

594 
dï
->
de_Êags
 = 
DEF_EMPTY
;

595 (*
dï
->
de_öôf
)(dep);

597 
	`dp_c⁄Áddr
(
dï
);

600 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_PS_P0
 | 
CR_STP
 | 
CR_DM_ABORT
);

601 
	`outb_ªg0
(
dï
, 
DP_IMR
, 0);

602 
	`outb_ªg0
(
dï
, 
DP_PSTART
, dï->
de_°¨çage
);

603 
	`outb_ªg0
(
dï
, 
DP_PSTOP
, dï->
de_°›∑ge
);

604 
	`outb_ªg0
(
dï
, 
DP_BNRY
, dï->
de_°¨çage
);

605 
	`outb_ªg0
(
dï
, 
DP_RCR
, 
RCR_MON
);

606 
	`outb_ªg0
(
dï
, 
DP_TCR
, 
TCR_NORMAL
);

607 i‡(
dï
->
de_16bô
)

608 
	`outb_ªg0
(
dï
, 
DP_DCR
, 
DCR_WORDWIDE
 | 
DCR_8BYTES
 | 
DCR_BMS
);

610 
	`outb_ªg0
(
dï
, 
DP_DCR
, 
DCR_BYTEWIDE
 | 
DCR_8BYTES
 | 
DCR_BMS
);

611 
	`outb_ªg0
(
dï
, 
DP_RBCR0
, 0);

612 
	`outb_ªg0
(
dï
, 
DP_RBCR1
, 0);

613 
	`outb_ªg0
(
dï
, 
DP_ISR
, 0xFF);

614 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_PS_P1
 | 
CR_DM_ABORT
);

616 
	`outb_ªg1
(
dï
, 
DP_PAR0
, dï->
de_addªss
.
ó_addr
[0]);

617 
	`outb_ªg1
(
dï
, 
DP_PAR1
, dï->
de_addªss
.
ó_addr
[1]);

618 
	`outb_ªg1
(
dï
, 
DP_PAR2
, dï->
de_addªss
.
ó_addr
[2]);

619 
	`outb_ªg1
(
dï
, 
DP_PAR3
, dï->
de_addªss
.
ó_addr
[3]);

620 
	`outb_ªg1
(
dï
, 
DP_PAR4
, dï->
de_addªss
.
ó_addr
[4]);

621 
	`outb_ªg1
(
dï
, 
DP_PAR5
, dï->
de_addªss
.
ó_addr
[5]);

623 
	`outb_ªg1
(
dï
, 
DP_MAR0
, 0xff);

624 
	`outb_ªg1
(
dï
, 
DP_MAR1
, 0xff);

625 
	`outb_ªg1
(
dï
, 
DP_MAR2
, 0xff);

626 
	`outb_ªg1
(
dï
, 
DP_MAR3
, 0xff);

627 
	`outb_ªg1
(
dï
, 
DP_MAR4
, 0xff);

628 
	`outb_ªg1
(
dï
, 
DP_MAR5
, 0xff);

629 
	`outb_ªg1
(
dï
, 
DP_MAR6
, 0xff);

630 
	`outb_ªg1
(
dï
, 
DP_MAR7
, 0xff);

632 
	`outb_ªg1
(
dï
, 
DP_CURR
, dï->
de_°¨çage
 + 1);

633 
	`outb_ªg1
(
dï
, 
DP_CR
, 
CR_PS_P0
 | 
CR_DM_ABORT
);

635 
dp_r¸_ªg
 = 0;

636 i‡(
dï
->
de_Êags
 & 
DEF_PROMISC
)

637 
dp_r¸_ªg
 |
RCR_AB
 | 
RCR_PRO
 | 
RCR_AM
;

638 i‡(
dï
->
de_Êags
 & 
DEF_BROAD
)

639 
dp_r¸_ªg
 |
RCR_AB
;

640 i‡(
dï
->
de_Êags
 & 
DEF_MULTI
)

641 
dp_r¸_ªg
 |
RCR_AM
;

642 
	`outb_ªg0
(
dï
, 
DP_RCR
, 
dp_r¸_ªg
);

643 
	`öb_ªg0
(
dï
, 
DP_CNTR0
);

644 
	`öb_ªg0
(
dï
, 
DP_CNTR1
);

645 
	`öb_ªg0
(
dï
, 
DP_CNTR2
);

647 
	`outb_ªg0
(
dï
, 
DP_IMR
, 
IMR_PRXE
 | 
IMR_PTXE
 | 
IMR_RXEE
 | 
IMR_TXEE
 |

648 
IMR_OVWE
 | 
IMR_CNTE
);

649 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_STA
 | 
CR_DM_ABORT
);

652 
dï
->
de_Êags
 |
DEF_ENABLED
;

653 
i
0; i<
dï
->
de_£ndq_ƒ
; i++)

654 
dï
->
de_£ndq
[
i
].
sq_fûÀd
= 0;

655 
dï
->
de_£ndq_hód
= 0;

656 
dï
->
de_£ndq_èû
= 0;

657 i‡(!
dï
->
de_¥og_IO
)

659 
dï
->
de_u£r2nicf

dp_u£r2nic
;

660 
dï
->
de_nic2u£rf

dp_nic2u£r
;

661 
dï
->
de_gëblockf

dp_gëblock
;

663 i‡(
dï
->
de_16bô
)

665 
dï
->
de_u£r2nicf

dp_pio16_u£r2nic
;

666 
dï
->
de_nic2u£rf

dp_pio16_nic2u£r
;

667 
dï
->
de_gëblockf

dp_pio16_gëblock
;

671 
dï
->
de_u£r2nicf

dp_pio8_u£r2nic
;

672 
dï
->
de_nic2u£rf

dp_pio8_nic2u£r
;

673 
dï
->
de_gëblockf

dp_pio8_gëblock
;

677 
	`put_úq_h™dÀr
(
dï
->
de_úq
, 
dp_h™dÀr
);

678 
	`íabÀ_úq
(
dï
->
de_úq
);

679 
	}
}

685 
	$dp_c⁄Áddr
(
dï
)

686 
d≥th_t
 *
dï
;

688 
i
;

689 
ókey
[16];

690 
ófmt
[]= "x:x:x:x:x:x";

691 
v
;

694 
	`°r˝y
(
ókey
, 
dp_c⁄f
[
dï
-
de_èbÀ
].
dpc_ívv¨
);

695 
	`°rˇt
(
ókey
, "_EA");

697 
i
= 0; i < 6; i++)

699 
v

dï
->
de_addªss
.
ó_addr
[
i
];

700 i‡(
	`ív_∑r£
(
ókey
, 
ófmt
, 
i
, &
v
, 0x00L, 0xFFLË!
EP_SET
)

702 
dï
->
de_addªss
.
ó_addr
[
i
]
v
;

705 i‡(
i
 != 0 && i != 6)

708 (Ë
	`ív_∑r£
(
ókey
, "?", 0, &
v
, 0L, 0L);

710 
	}
}

716 
	$dp_ªöô
(
dï
)

717 
d≥th_t
 *
dï
;

719 
dp_r¸_ªg
;

721 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_PS_P0
);

723 
dp_r¸_ªg
 = 0;

724 i‡(
dï
->
de_Êags
 & 
DEF_PROMISC
)

725 
dp_r¸_ªg
 |
RCR_AB
 | 
RCR_PRO
 | 
RCR_AM
;

726 i‡(
dï
->
de_Êags
 & 
DEF_BROAD
)

727 
dp_r¸_ªg
 |
RCR_AB
;

728 i‡(
dï
->
de_Êags
 & 
DEF_MULTI
)

729 
dp_r¸_ªg
 |
RCR_AM
;

730 
	`outb_ªg0
(
dï
, 
DP_RCR
, 
dp_r¸_ªg
);

731 
	}
}

737 
	$dp_ª£t
(
dï
)

738 
d≥th_t
 *
dï
;

740 
i
;

743 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_STP
 | 
CR_DM_ABORT
);

744 
	`outb_ªg0
(
dï
, 
DP_RBCR0
, 0);

745 
	`outb_ªg0
(
dï
, 
DP_RBCR1
, 0);

746 
i
0; i < 0x1000 && ((
	`öb_ªg0
(
dï
, 
DP_ISR
Ë& 
ISR_RST
) == 0); i++)

748 
	`outb_ªg0
(
dï
, 
DP_TCR
, 
TCR_1EXTERNAL
|
TCR_OFST
);

749 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_STA
|
CR_DM_ABORT
);

750 
	`outb_ªg0
(
dï
, 
DP_TCR
, 
TCR_NORMAL
|
TCR_OFST
);

753 
i
0; i < 0x1000 && ((
	`öb_ªg0
(
dï
, 
DP_ISR
Ë& 
ISR_RDC
) == 0); i++)

755 
	`outb_ªg0
(
dï
, 
DP_ISR
, 
	`öb_ªg0
(dï, DP_ISRË& ~
ISR_RDC
);

761 
dï
->
de_£ndq_hód
dï->
de_£ndq_èû
= 0;

762 
i
0; i<
dï
->
de_£ndq_ƒ
; i++)

763 
dï
->
de_£ndq
[
i
].
sq_fûÀd
= 0;

764 
	`dp_£nd
(
dï
);

765 
dï
->
de_Êags
 &~
DEF_STOPPED
;

766 
	}
}

772 
	$dp_check_öts
(
dï
)

773 
d≥th_t
 *
dï
;

775 
i§
, 
t§
;

776 
size
, 
£ndq_èû
;

778 i‡(!(
dï
->
de_Êags
 & 
DEF_ENABLED
))

779 
	`∑nic
("dp8390: gŸÖªm©uª i¡îru±", 
NO_NUM
);

783 
i§
 = 
	`öb_ªg0
(
dï
, 
DP_ISR
);

784 i‡(!
i§
)

786 
	`outb_ªg0
(
dï
, 
DP_ISR
, 
i§
);

787 i‡(
i§
 & (
ISR_PTX
|
ISR_TXE
))

789 i‡(
i§
 & 
ISR_TXE
)

791 #i‡
DEBUG


792 { 
	`¥ötf
("dp8390: got send Error\n"); }

794 
dï
->
de_°©
.
ës_£ndEº
++;

798 
t§
 = 
	`öb_ªg0
(
dï
, 
DP_TSR
);

800 i‡(
t§
 & 
TSR_PTX
Ë
dï
->
de_°©
.
ës_∑ckëT
++;

801 i‡(
t§
 & 
TSR_DFR
Ë
dï
->
de_°©
.
ës_å™sDef
++;

802 i‡(
t§
 & 
TSR_COL
Ë
dï
->
de_°©
.
ës_cﬁlisi⁄
++;

803 i‡(
t§
 & 
TSR_ABT
Ë
dï
->
de_°©
.
ës_å™sAb
++;

804 i‡(
t§
 & 
TSR_CRS
Ë
dï
->
de_°©
.
ës_ˇºSí£
++;

805 i‡(
t§
 & 
TSR_FU


806 && ++
dï
->
de_°©
.
ës_fifoUndî
 <= 10)

808 
	`¥ötf
("dp8390: fifo underrun\n");

810 i‡(
t§
 & 
TSR_CDH


811 && ++
dï
->
de_°©
.
ës_CDhóπbót
 <= 10)

813 
	`¥ötf
(

816 i‡(
t§
 & 
TSR_OWC
Ë
dï
->
de_°©
.
ës_OWC
++;

818 
£ndq_èû

dï
->
de_£ndq_èû
;

820 i‡(!(
dï
->
de_£ndq
[
£ndq_èû
].
sq_fûÀd
))

823 
	`as£π
(!
debug
);

826 
	`¥ötf
(

830 
dï
->
de_£ndq
[
£ndq_èû
].
sq_fûÀd
= 0;

831 i‡(++
£ndq_èû
 =
dï
->
de_£ndq_ƒ
)

832 
£ndq_èû
= 0;

833 
dï
->
de_£ndq_èû

£ndq_èû
;

834 i‡(
dï
->
de_£ndq
[
£ndq_èû
].
sq_fûÀd
)

836 
size

dï
->
de_£ndq
[
£ndq_èû
].
sq_size
;

837 
	`outb_ªg0
(
dï
, 
DP_TPSR
,

838 
dï
->
de_£ndq
[
£ndq_èû
].
sq_£nd∑ge
);

839 
	`outb_ªg0
(
dï
, 
DP_TBCR1
, 
size
 >> 8);

840 
	`outb_ªg0
(
dï
, 
DP_TBCR0
, 
size
 & 0xff);

841 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_TXP
);

843 i‡(
dï
->
de_Êags
 & 
DEF_SEND_AVAIL
)

844 
	`dp_£nd
(
dï
);

847 i‡(
i§
 & 
ISR_PRX
)

848 
	`dp_ªcv
(
dï
);

850 i‡(
i§
 & 
ISR_RXE
Ë
dï
->
de_°©
.
ës_ªcvEº
++;

851 i‡(
i§
 & 
ISR_CNT
)

853 
dï
->
de_°©
.
ës_CRCîr
 +
	`öb_ªg0
(dï, 
DP_CNTR0
);

854 
dï
->
de_°©
.
ës_‰ameAŒ
 +
	`öb_ªg0
(dï, 
DP_CNTR1
);

855 
dï
->
de_°©
.
ës_mis£dP
 +
	`öb_ªg0
(dï, 
DP_CNTR2
);

857 i‡(
i§
 & 
ISR_OVW
)

859 #i‡
DEBUG


860 { 
	`¥ötW
(); 
	`¥ötf
("dp8390: got overwrite warning\n"); }

863 i‡(
i§
 & 
ISR_RDC
)

867 i‡(
i§
 & 
ISR_RST
)

874 #i‡
DEBUG


875 { 
	`¥ötW
(); 
	`¥ötf
("dp8390: NIC stopped\n"); }

877 
dï
->
de_Êags
 |
DEF_STOPPED
;

881 i‡((
dï
->
de_Êags
 & (
DEF_READING
|
DEF_STOPPED
)) ==

882 (
DEF_READING
|
DEF_STOPPED
))

887 
	`dp_ª£t
(
dï
);

889 
	}
}

895 
	$dp_ªcv
(
dï
)

896 
d≥th_t
 *
dï
;

898 
dp_rcvhdr_t
 
hódî
;

899 
∑gío
, 
cuº
, 
√xt
;

900 
vú_byãs
 
Àngth
;

901 
∑ckë_¥o˚s£d
, 
r
;

902 
u16_t
 
ëh_ty≥
;

904 
∑ckë_¥o˚s£d
 = 
FALSE
;

905 
∑gío
 = 
	`öb_ªg0
(
dï
, 
DP_BNRY
) + 1;

906 i‡(
∑gío
 =
dï
->
de_°›∑ge
Ë∑gíÿdï->
de_°¨çage
;

910 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_PS_P1
);

911 
cuº
 = 
	`öb_ªg1
(
dï
, 
DP_CURR
);

912 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_PS_P0
);

914 i‡(
cuº
 =
∑gío
) ;

916 (
dï
->
de_gëblockf
)(dï, 
∑gío
, (
size_t
)0, (
hódî
),

917 &
hódî
);

918 (
dï
->
de_gëblockf
)(dï, 
∑gío
, (
hódî
) +

919 2*(
ëhî_addr_t
), (
ëh_ty≥
), &eth_type);

921 
Àngth
 = (
hódî
.
dr_rb˛
 | (hódî.
dr_rbch
 << 8)) -

922 (
dp_rcvhdr_t
);

923 
√xt
 = 
hódî
.
dr_√xt
;

924 i‡(
Àngth
 < 60 ||Üength > 1514)

926 
	`¥ötf
(

928 
Àngth
);

929 
√xt

cuº
;

931 i‡(
√xt
 < 
dï
->
de_°¨çage
 ||Çexà>dï->
de_°›∑ge
)

933 
	`¥ötf
("dp8390: strangeÇextÖage\n");

934 
√xt

cuº
;

936 i‡(
ëh_ty≥
 =
ëh_ign_¥Ÿo
)

942 
fú°
= 1;

943 i‡(
fú°
)

945 
fú°
= 0;

946 
	`¥ötW
();

947 
	`¥ötf
("droppingÖroto %04xÖacket\n",

948 
	`¡ohs
(
ëh_ign_¥Ÿo
));

950 
dï
->
de_°©
.
ës_∑ckëR
++;

951 
√xt
 = 
cuº
;

953 i‡(
hódî
.
dr_°©us
 & 
RSR_FO
)

957 
	`¥ötf
(

959 
dï
->
de_°©
.
ës_fifoOvî
++;

960 
√xt
 = 
cuº
;

962 i‡((
hódî
.
dr_°©us
 & 
RSR_PRX
) &&

963 (
dï
->
de_Êags
 & 
DEF_ENABLED
))

965 
r
 = 
	`dp_pkt2u£r
(
dï
, 
∑gío
, 
Àngth
);

966 i‡(
r
 !
OK
)

969 
∑ckë_¥o˚s£d
 = 
TRUE
;

970 
dï
->
de_°©
.
ës_∑ckëR
++;

972 i‡(
√xt
 =
dï
->
de_°¨çage
)

973 
	`outb_ªg0
(
dï
, 
DP_BNRY
, dï->
de_°›∑ge
 - 1);

975 
	`outb_ªg0
(
dï
, 
DP_BNRY
, 
√xt
 - 1);

977 
∑gío
 = 
√xt
;

979 !
∑ckë_¥o˚s£d
);

980 
	}
}

986 
	$dp_£nd
(
dï
)

987 
d≥th_t
 *
dï
;

989 i‡(!(
dï
->
de_Êags
 & 
DEF_SEND_AVAIL
))

992 
dï
->
de_Êags
 &~
DEF_SEND_AVAIL
;

993 
dï
->
de_£ndmsg
.
m_ty≥
)

995 
DL_WRITE
: 
	`do_vwrôe
(&
dï
->
de_£ndmsg
, 
TRUE
, 
FALSE
); ;

996 
DL_WRITEV
: 
	`do_vwrôe
(&
dï
->
de_£ndmsg
, 
TRUE
, TRUE); ;

998 
	`∑nic
("dp8390: wr⁄gÅy≥:", 
dï
->
de_£ndmsg
.
m_ty≥
);

1001 
	}
}

1007 
	$dp_gëblock
(
dï
, 
∑ge
, 
off£t
, 
size
, 
d°
)

1008 
d≥th_t
 *
dï
;

1009 
∑ge
;

1010 
size_t
 
off£t
;

1011 
size_t
 
size
;

1012 *
d°
;

1014 
u16_t
 *
ha
;

1015 
i
;

1017 
ha
 = (
u16_t
 *Ë
d°
;

1018 
off£t
 = 
∑ge
 * 
DP_PAGESIZE
 + offset;

1019 
	`as£π
(!(
size
 & 1));

1020 
i
0; i<
size
; i+=2)

1022 *
ha
 = 
	`mem_rdw
(
dï
->
de_mem£gm
, 
off£t
+
i
);

1023 
ha
++;

1025 
	}
}

1031 
	$dp_pio8_gëblock
(
dï
, 
∑ge
, 
off£t
, 
size
, 
d°
)

1032 
d≥th_t
 *
dï
;

1033 
∑ge
;

1034 
size_t
 
off£t
;

1035 
size_t
 
size
;

1036 *
d°
;

1038 
u8_t
 *
ha
;

1039 
i
;

1041 
ha
 = (
u8_t
 *Ë
d°
;

1042 
off£t
 = 
∑ge
 * 
DP_PAGESIZE
 + offset;

1043 
	`outb_ªg0
(
dï
, 
DP_RBCR0
, 
size
 & 0xFF);

1044 
	`outb_ªg0
(
dï
, 
DP_RBCR1
, 
size
 >> 8);

1045 
	`outb_ªg0
(
dï
, 
DP_RSAR0
, 
off£t
 & 0xFF);

1046 
	`outb_ªg0
(
dï
, 
DP_RSAR1
, 
off£t
 >> 8);

1047 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_DM_RR
 | 
CR_PS_P0
 | 
CR_STA
);

1049 
i
0; i<
size
; i++)

1050 
ha
[
i
]
	`ö_byã
(
dï
->
de_d©a_p‹t
);

1051 
	}
}

1057 
	$dp_pio16_gëblock
(
dï
, 
∑ge
, 
off£t
, 
size
, 
d°
)

1058 
d≥th_t
 *
dï
;

1059 
∑ge
;

1060 
size_t
 
off£t
;

1061 
size_t
 
size
;

1062 *
d°
;

1064 
u16_t
 *
ha
;

1065 
i
;

1067 
ha
 = (
u16_t
 *Ë
d°
;

1068 
off£t
 = 
∑ge
 * 
DP_PAGESIZE
 + offset;

1069 
	`outb_ªg0
(
dï
, 
DP_RBCR0
, 
size
 & 0xFF);

1070 
	`outb_ªg0
(
dï
, 
DP_RBCR1
, 
size
 >> 8);

1071 
	`outb_ªg0
(
dï
, 
DP_RSAR0
, 
off£t
 & 0xFF);

1072 
	`outb_ªg0
(
dï
, 
DP_RSAR1
, 
off£t
 >> 8);

1073 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_DM_RR
 | 
CR_PS_P0
 | 
CR_STA
);

1075 
	`as£π
 (!(
size
 & 1));

1076 
size
 /= 2;

1077 
i
0; i<
size
; i++)

1078 
ha
[
i
]
	`ö_w‹d
(
dï
->
de_d©a_p‹t
);

1079 
	}
}

1085 
	$dp_pkt2u£r
(
dï
, 
∑ge
, 
Àngth
)

1086 
d≥th_t
 *
dï
;

1087 
∑ge
, 
Àngth
;

1089 
œ°
, 
cou¡
;

1091 i‡(!(
dï
->
de_Êags
 & 
DEF_READING
))

1092  
EGENERIC
;

1094 
œ°
 = 
∑ge
 + (
Àngth
 - 1Ë/ 
DP_PAGESIZE
;

1095 i‡(
œ°
 >
dï
->
de_°›∑ge
)

1097 
cou¡
 = (
dï
->
de_°›∑ge
 - 
∑ge
Ë* 
DP_PAGESIZE
 -

1098 (
dp_rcvhdr_t
);

1101 
dï
->
de_tmp_iovec
 = dï->
de_ªad_iovec
;

1102 (
dï
->
de_nic2u£rf
)(dï, 
∑ge
 * 
DP_PAGESIZE
 +

1103 (
dp_rcvhdr_t
), &
dï
->
de_tmp_iovec
, 0, 
cou¡
);

1104 (
dï
->
de_nic2u£rf
)(dï, dï->
de_°¨çage
 * 
DP_PAGESIZE
,

1105 &
dï
->
de_ªad_iovec
, 
cou¡
, 
Àngth
 - count);

1109 (
dï
->
de_nic2u£rf
)(dï, 
∑ge
 * 
DP_PAGESIZE
 +

1110 (
dp_rcvhdr_t
), &
dï
->
de_ªad_iovec
, 0, 
Àngth
);

1113 
dï
->
de_ªad_s
 = 
Àngth
;

1114 
dï
->
de_Êags
 |
DEF_PACK_RECV
;

1115 
dï
->
de_Êags
 &~
DEF_READING
;

1117  
OK
;

1118 
	}
}

1124 
	$dp_u£r2nic
(
dï
, 
iovp
, 
off£t
, 
nic_addr
, 
cou¡
)

1125 
d≥th_t
 *
dï
;

1126 
iovec_d©_t
 *
iovp
;

1127 
vú_byãs
 
off£t
;

1128 
nic_addr
;

1129 
vú_byãs
 
cou¡
;

1131 
phys_byãs
 
phys_hw
, 
phys_u£r
;

1132 
byãs
, 
i
;

1134 
phys_hw
 = 
dï
->
de_lömem
 + 
nic_addr
;

1136 
i
= 0;

1137 
cou¡
 > 0)

1139 i‡(
i
 >
IOVEC_NR
)

1141 
	`dp_√xt_iovec
(
iovp
);

1142 
i
= 0;

1145 
	`as£π
(
i
 < 
iovp
->
iod_iovec_s
);

1146 i‡(
off£t
 >
iovp
->
iod_iovec
[
i
].
iov_size
)

1148 
off£t
 -
iovp
->
iod_iovec
[
i
].
iov_size
;

1149 
i
++;

1152 
byãs
 = 
iovp
->
iod_iovec
[
i
].
iov_size
 - 
off£t
;

1153 i‡(
byãs
 > 
cou¡
)

1154 
byãs
 = 
cou¡
;

1156 
phys_u£r
 = 
	`num≠
(
iovp
->
iod_¥oc_ƒ
,

1157 
iovp
->
iod_iovec
[
i
].
iov_addr
 + 
off£t
, 
byãs
);

1158 i‡(!
phys_u£r
)

1159 
	`∑nic
("dp8390: um≠ faûed\n", 
NO_NUM
);

1160 
	`phys_c›y
(
phys_u£r
, 
phys_hw
, (
phys_byãs
Ë
byãs
);

1161 
cou¡
 -
byãs
;

1162 
phys_hw
 +
byãs
;

1163 
off£t
 +
byãs
;

1165 
	`as£π
(
cou¡
 == 0);

1166 
	}
}

1172 
	$dp_pio8_u£r2nic
(
dï
, 
iovp
, 
off£t
, 
nic_addr
, 
cou¡
)

1173 
d≥th_t
 *
dï
;

1174 
iovec_d©_t
 *
iovp
;

1175 
vú_byãs
 
off£t
;

1176 
nic_addr
;

1177 
vú_byãs
 
cou¡
;

1179 
phys_byãs
 
phys_u£r
;

1180 
byãs
, 
i
;

1182 
	`outb_ªg0
(
dï
, 
DP_ISR
, 
ISR_RDC
);

1184 
	`outb_ªg0
(
dï
, 
DP_RBCR0
, 
cou¡
 & 0xFF);

1185 
	`outb_ªg0
(
dï
, 
DP_RBCR1
, 
cou¡
 >> 8);

1186 
	`outb_ªg0
(
dï
, 
DP_RSAR0
, 
nic_addr
 & 0xFF);

1187 
	`outb_ªg0
(
dï
, 
DP_RSAR1
, 
nic_addr
 >> 8);

1188 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_DM_RW
 | 
CR_PS_P0
 | 
CR_STA
);

1190 
i
= 0;

1191 
cou¡
 > 0)

1193 i‡(
i
 >
IOVEC_NR
)

1195 
	`dp_√xt_iovec
(
iovp
);

1196 
i
= 0;

1199 
	`as£π
(
i
 < 
iovp
->
iod_iovec_s
);

1200 i‡(
off£t
 >
iovp
->
iod_iovec
[
i
].
iov_size
)

1202 
off£t
 -
iovp
->
iod_iovec
[
i
].
iov_size
;

1203 
i
++;

1206 
byãs
 = 
iovp
->
iod_iovec
[
i
].
iov_size
 - 
off£t
;

1207 i‡(
byãs
 > 
cou¡
)

1208 
byãs
 = 
cou¡
;

1210 
phys_u£r
 = 
	`num≠
(
iovp
->
iod_¥oc_ƒ
,

1211 
iovp
->
iod_iovec
[
i
].
iov_addr
 + 
off£t
, 
byãs
);

1212 i‡(!
phys_u£r
)

1213 
	`∑nic
("dp8390: um≠ faûed\n", 
NO_NUM
);

1214 
	`p‹t_wrôe_byã
(
dï
->
de_d©a_p‹t
, 
phys_u£r
, 
byãs
);

1215 
cou¡
 -
byãs
;

1216 
off£t
 +
byãs
;

1218 
	`as£π
(
cou¡
 == 0);

1220 
i
= 0; i<100; i++)

1222 i‡(
	`öb_ªg0
(
dï
, 
DP_ISR
Ë& 
ISR_RDC
)

1225 i‡(
i
 == 100)

1227 
	`∑nic
("dp8390:ÑemŸêdm®ÁûedÅÿcom∂ëe", 
NO_NUM
);

1229 
	}
}

1235 
	$dp_pio16_u£r2nic
(
dï
, 
iovp
, 
off£t
, 
nic_addr
, 
cou¡
)

1236 
d≥th_t
 *
dï
;

1237 
iovec_d©_t
 *
iovp
;

1238 
vú_byãs
 
off£t
;

1239 
nic_addr
;

1240 
vú_byãs
 
cou¡
;

1242 
phys_byãs
 
phys_u£r
;

1243 
vú_byãs
 
ecou¡
;

1244 
byãs
, 
i
;

1245 
u8_t
 
two_byãs
[2];

1246 
phys_byãs
 
phys_2byãs
;

1247 
odd_byã
;

1249 
ecou¡
(
cou¡
+1) & ~1;

1250 
phys_2byãs
 = 
	`vú2phys
(
two_byãs
);

1251 
odd_byã
= 0;

1253 
	`outb_ªg0
(
dï
, 
DP_ISR
, 
ISR_RDC
);

1254 
	`outb_ªg0
(
dï
, 
DP_RBCR0
, 
ecou¡
 & 0xFF);

1255 
	`outb_ªg0
(
dï
, 
DP_RBCR1
, 
ecou¡
 >> 8);

1256 
	`outb_ªg0
(
dï
, 
DP_RSAR0
, 
nic_addr
 & 0xFF);

1257 
	`outb_ªg0
(
dï
, 
DP_RSAR1
, 
nic_addr
 >> 8);

1258 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_DM_RW
 | 
CR_PS_P0
 | 
CR_STA
);

1260 
i
= 0;

1261 
cou¡
 > 0)

1263 i‡(
i
 >
IOVEC_NR
)

1265 
	`dp_√xt_iovec
(
iovp
);

1266 
i
= 0;

1269 
	`as£π
(
i
 < 
iovp
->
iod_iovec_s
);

1270 i‡(
off£t
 >
iovp
->
iod_iovec
[
i
].
iov_size
)

1272 
off£t
 -
iovp
->
iod_iovec
[
i
].
iov_size
;

1273 
i
++;

1276 
byãs
 = 
iovp
->
iod_iovec
[
i
].
iov_size
 - 
off£t
;

1277 i‡(
byãs
 > 
cou¡
)

1278 
byãs
 = 
cou¡
;

1280 
phys_u£r
 = 
	`num≠
(
iovp
->
iod_¥oc_ƒ
,

1281 
iovp
->
iod_iovec
[
i
].
iov_addr
 + 
off£t
, 
byãs
);

1282 i‡(!
phys_u£r
)

1283 
	`∑nic
("dp8390: um≠ faûed\n", 
NO_NUM
);

1284 i‡(
odd_byã
)

1286 
	`phys_c›y
(
phys_u£r
, 
phys_2byãs
+1,

1287 (
phys_byãs
) 1);

1288 
	`out_w‹d
(
dï
->
de_d©a_p‹t
, *(
u16_t
 *)
two_byãs
);

1289 
cou¡
--;

1290 
off£t
++;

1291 
byãs
--;

1292 
phys_u£r
++;

1293 
odd_byã
= 0;

1294 i‡(!
byãs
)

1297 
ecou¡

byãs
 & ~1;

1298 i‡(
ecou¡
 != 0)

1300 
	`p‹t_wrôe
(
dï
->
de_d©a_p‹t
, 
phys_u£r
, 
ecou¡
);

1301 
cou¡
 -
ecou¡
;

1302 
off£t
 +
ecou¡
;

1303 
byãs
 -
ecou¡
;

1304 
phys_u£r
 +
ecou¡
;

1306 i‡(
byãs
)

1308 
	`as£π
(
byãs
 == 1);

1309 
	`phys_c›y
(
phys_u£r
, 
phys_2byãs
, (
phys_byãs
) 1);

1310 
cou¡
--;

1311 
off£t
++;

1312 
byãs
--;

1313 
phys_u£r
++;

1314 
odd_byã
= 1;

1317 
	`as£π
(
cou¡
 == 0);

1319 i‡(
odd_byã
)

1320 
	`out_w‹d
(
dï
->
de_d©a_p‹t
, *(
u16_t
 *)
two_byãs
);

1322 
i
= 0; i<100; i++)

1324 i‡(
	`öb_ªg0
(
dï
, 
DP_ISR
Ë& 
ISR_RDC
)

1327 i‡(
i
 == 100)

1329 
	`∑nic
("dp8390:ÑemŸêdm®ÁûedÅÿcom∂ëe", 
NO_NUM
);

1331 
	}
}

1337 
	$dp_nic2u£r
(
dï
, 
nic_addr
, 
iovp
, 
off£t
, 
cou¡
)

1338 
d≥th_t
 *
dï
;

1339 
nic_addr
;

1340 
iovec_d©_t
 *
iovp
;

1341 
vú_byãs
 
off£t
;

1342 
vú_byãs
 
cou¡
;

1344 
phys_byãs
 
phys_hw
, 
phys_u£r
;

1345 
byãs
, 
i
;

1347 
phys_hw
 = 
dï
->
de_lömem
 + 
nic_addr
;

1349 
i
= 0;

1350 
cou¡
 > 0)

1352 i‡(
i
 >
IOVEC_NR
)

1354 
	`dp_√xt_iovec
(
iovp
);

1355 
i
= 0;

1358 
	`as£π
(
i
 < 
iovp
->
iod_iovec_s
);

1359 i‡(
off£t
 >
iovp
->
iod_iovec
[
i
].
iov_size
)

1361 
off£t
 -
iovp
->
iod_iovec
[
i
].
iov_size
;

1362 
i
++;

1365 
byãs
 = 
iovp
->
iod_iovec
[
i
].
iov_size
 - 
off£t
;

1366 i‡(
byãs
 > 
cou¡
)

1367 
byãs
 = 
cou¡
;

1369 
phys_u£r
 = 
	`num≠
(
iovp
->
iod_¥oc_ƒ
,

1370 
iovp
->
iod_iovec
[
i
].
iov_addr
 + 
off£t
, 
byãs
);

1371 i‡(!
phys_u£r
)

1372 
	`∑nic
("dp8390: um≠ faûed\n", 
NO_NUM
);

1373 
	`phys_c›y
(
phys_hw
, 
phys_u£r
, (
phys_byãs
Ë
byãs
);

1374 
cou¡
 -
byãs
;

1375 
phys_hw
 +
byãs
;

1376 
off£t
 +
byãs
;

1378 
	`as£π
(
cou¡
 == 0);

1379 
	}
}

1385 
	$dp_pio8_nic2u£r
(
dï
, 
nic_addr
, 
iovp
, 
off£t
, 
cou¡
)

1386 
d≥th_t
 *
dï
;

1387 
nic_addr
;

1388 
iovec_d©_t
 *
iovp
;

1389 
vú_byãs
 
off£t
;

1390 
vú_byãs
 
cou¡
;

1392 
phys_byãs
 
phys_u£r
;

1393 
byãs
, 
i
;

1395 
	`outb_ªg0
(
dï
, 
DP_RBCR0
, 
cou¡
 & 0xFF);

1396 
	`outb_ªg0
(
dï
, 
DP_RBCR1
, 
cou¡
 >> 8);

1397 
	`outb_ªg0
(
dï
, 
DP_RSAR0
, 
nic_addr
 & 0xFF);

1398 
	`outb_ªg0
(
dï
, 
DP_RSAR1
, 
nic_addr
 >> 8);

1399 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_DM_RR
 | 
CR_PS_P0
 | 
CR_STA
);

1401 
i
= 0;

1402 
cou¡
 > 0)

1404 i‡(
i
 >
IOVEC_NR
)

1406 
	`dp_√xt_iovec
(
iovp
);

1407 
i
= 0;

1410 
	`as£π
(
i
 < 
iovp
->
iod_iovec_s
);

1411 i‡(
off£t
 >
iovp
->
iod_iovec
[
i
].
iov_size
)

1413 
off£t
 -
iovp
->
iod_iovec
[
i
].
iov_size
;

1414 
i
++;

1417 
byãs
 = 
iovp
->
iod_iovec
[
i
].
iov_size
 - 
off£t
;

1418 i‡(
byãs
 > 
cou¡
)

1419 
byãs
 = 
cou¡
;

1421 
phys_u£r
 = 
	`num≠
(
iovp
->
iod_¥oc_ƒ
,

1422 
iovp
->
iod_iovec
[
i
].
iov_addr
 + 
off£t
, 
byãs
);

1423 i‡(!
phys_u£r
)

1424 
	`∑nic
("dp8390: um≠ faûed\n", 
NO_NUM
);

1425 
	`p‹t_ªad_byã
(
dï
->
de_d©a_p‹t
, 
phys_u£r
, 
byãs
);

1426 
cou¡
 -
byãs
;

1427 
off£t
 +
byãs
;

1429 
	`as£π
(
cou¡
 == 0);

1430 
	}
}

1436 
	$dp_pio16_nic2u£r
(
dï
, 
nic_addr
, 
iovp
, 
off£t
, 
cou¡
)

1437 
d≥th_t
 *
dï
;

1438 
nic_addr
;

1439 
iovec_d©_t
 *
iovp
;

1440 
vú_byãs
 
off£t
;

1441 
vú_byãs
 
cou¡
;

1443 
phys_byãs
 
phys_u£r
;

1444 
vú_byãs
 
ecou¡
;

1445 
byãs
, 
i
;

1446 
u8_t
 
two_byãs
[2];

1447 
phys_byãs
 
phys_2byãs
;

1448 
odd_byã
;

1450 
ecou¡
(
cou¡
+1) & ~1;

1451 
phys_2byãs
 = 
	`vú2phys
(
two_byãs
);

1452 
odd_byã
= 0;

1454 
	`outb_ªg0
(
dï
, 
DP_RBCR0
, 
ecou¡
 & 0xFF);

1455 
	`outb_ªg0
(
dï
, 
DP_RBCR1
, 
ecou¡
 >> 8);

1456 
	`outb_ªg0
(
dï
, 
DP_RSAR0
, 
nic_addr
 & 0xFF);

1457 
	`outb_ªg0
(
dï
, 
DP_RSAR1
, 
nic_addr
 >> 8);

1458 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_DM_RR
 | 
CR_PS_P0
 | 
CR_STA
);

1460 
i
= 0;

1461 
cou¡
 > 0)

1463 i‡(
i
 >
IOVEC_NR
)

1465 
	`dp_√xt_iovec
(
iovp
);

1466 
i
= 0;

1469 
	`as£π
(
i
 < 
iovp
->
iod_iovec_s
);

1470 i‡(
off£t
 >
iovp
->
iod_iovec
[
i
].
iov_size
)

1472 
off£t
 -
iovp
->
iod_iovec
[
i
].
iov_size
;

1473 
i
++;

1476 
byãs
 = 
iovp
->
iod_iovec
[
i
].
iov_size
 - 
off£t
;

1477 i‡(
byãs
 > 
cou¡
)

1478 
byãs
 = 
cou¡
;

1480 
phys_u£r
 = 
	`num≠
(
iovp
->
iod_¥oc_ƒ
,

1481 
iovp
->
iod_iovec
[
i
].
iov_addr
 + 
off£t
, 
byãs
);

1482 i‡(!
phys_u£r
)

1483 
	`∑nic
("dp8390: um≠ faûed\n", 
NO_NUM
);

1484 i‡(
odd_byã
)

1486 
	`phys_c›y
(
phys_2byãs
+1, 
phys_u£r
, (
phys_byãs
) 1);

1487 
cou¡
--;

1488 
off£t
++;

1489 
byãs
--;

1490 
phys_u£r
++;

1491 
odd_byã
= 0;

1492 i‡(!
byãs
)

1495 
ecou¡

byãs
 & ~1;

1496 i‡(
ecou¡
 != 0)

1498 
	`p‹t_ªad
(
dï
->
de_d©a_p‹t
, 
phys_u£r
, 
ecou¡
);

1499 
cou¡
 -
ecou¡
;

1500 
off£t
 +
ecou¡
;

1501 
byãs
 -
ecou¡
;

1502 
phys_u£r
 +
ecou¡
;

1504 i‡(
byãs
)

1506 
	`as£π
(
byãs
 == 1);

1507 *(
u16_t
 *)
two_byãs

	`ö_w‹d
(
dï
->
de_d©a_p‹t
);

1508 
	`phys_c›y
(
phys_2byãs
, 
phys_u£r
, (
phys_byãs
) 1);

1509 
cou¡
--;

1510 
off£t
++;

1511 
byãs
--;

1512 
phys_u£r
++;

1513 
odd_byã
= 1;

1516 
	`as£π
(
cou¡
 == 0);

1517 
	}
}

1523 
	$dp_√xt_iovec
(
iovp
)

1524 
iovec_d©_t
 *
iovp
;

1526 
	`as£π
(
iovp
->
iod_iovec_s
 > 
IOVEC_NR
);

1528 
iovp
->
iod_iovec_s
 -
IOVEC_NR
;

1530 
iovp
->
iod_iovec_addr
 +
IOVEC_NR
 * (
iovec_t
);

1532 
	`gë_u£rd©a
(
iovp
->
iod_¥oc_ƒ
, iovp->
iod_iovec_addr
,

1533 (
iovp
->
iod_iovec_s
 > 
IOVEC_NR
 ? IOVEC_NR : iovp->iod_iovec_s) *

1534 (
iovec_t
), 
iovp
->
iod_iovec
);

1535 
	}
}

1541 
	$dp_h™dÀr
(
úq
)

1542 
úq
;

1546 
	`as£π
(
úq
 >0 && irq < 
NR_IRQ_VECTORS
);

1547 
öt_≥ndög
[
úq
]= 1;

1548 
	`öãºu±
(
d≥th_èskƒ
);

1550 
	}
}

1555 
	$c⁄f_hw
(
dï
)

1556 
d≥th_t
 *
dï
;

1558 
ëh_°©_t
 
em±y_°©
 = {0, 0, 0, 0, 0, 0 };

1560 
i‚r
;

1561 
dp_c⁄f_t
 *
d˝
;

1563 
dï
->
de_mode

DEM_DISABLED
;

1564 
i‚r

dï
-
de_èbÀ
;

1566 
d˝
&
dp_c⁄f
[
i‚r
];

1567 
	`upd©e_c⁄f
(
dï
, 
d˝
);

1568 i‡(
dï
->
de_mode
 !
DEM_ENABLED
)

1570 i‡(!
	`wdëh_¥obe
(
dï
Ë&& !
	`√_¥obe
(dep))

1572 
	`¥ötf
("dp8390: warningÇoÉthernet card foundát 0x%x\n",

1573 
dï
->
de_ba£_p‹t
);

1574 
dï
->
de_mode

DEM_DISABLED
;

1581 i‡(
dï
->
de_lömem
 != 0)

1583 i‡(
¥Ÿe˘ed_mode
)

1585 
	`öô_d©a£g
(&
gdt
[
d˝
->
dpc_¥Ÿ_£l
 / 
DESC_SIZE
],

1586 
dï
->
de_lömem
, dï->
de_ømsize
,

1587 
TASK_PRIVILEGE
);

1588 
dï
->
de_mem£gm

d˝
->
dpc_¥Ÿ_£l
;

1592 
dï
->
de_mem£gm

	`physb_to_h˛ick
(dï->
de_lömem
);

1596  i‡(
dï
->
de_lömem
 == 0) dep->de_linmem= 0xFFFF0000;

1598 
dï
->
de_Êags
 = 
DEF_EMPTY
;

1599 
dï
->
de_°©
 = 
em±y_°©
;

1600 
	}
}

1606 
	$upd©e_c⁄f
(
dï
, 
d˝
)

1607 
d≥th_t
 *
dï
;

1608 
dp_c⁄f_t
 *
d˝
;

1610 
v
;

1611 
dpc_fmt
[] = "x:d:x";

1614 
dï
->
de_mode

DEM_SINK
;

1615 
v

d˝
->
dpc_p‹t
;

1616 
	`ív_∑r£
(
d˝
->
dpc_ívv¨
, 
dpc_fmt
, 0, &
v
, 0x000L, 0x3FFL)) {

1617 
EP_OFF
:

1618 
dï
->
de_mode

DEM_DISABLED
;

1620 
EP_ON
:

1621 
EP_SET
:

1622 
dï
->
de_mode

DEM_ENABLED
;

1626 
dï
->
de_ba£_p‹t

v
;

1628 
v

d˝
->
dpc_úq
 | 
DEI_DEFAULT
;

1629 (Ë
	`ív_∑r£
(
d˝
->
dpc_ívv¨
, 
dpc_fmt
, 1, &
v
, 0L,

1630 (Ë
NR_IRQ_VECTORS
 - 1);

1631 
dï
->
de_úq

v
;

1633 
v

d˝
->
dpc_mem
;

1634 (Ë
	`ív_∑r£
(
d˝
->
dpc_ívv¨
, 
dpc_fmt
, 2, &
v
, 0L, 
LONG_MAX
);

1635 
dï
->
de_lömem

v
;

1636 
	}
}

1642 
	$ˇlc_iovec_size
(
iovp
)

1643 
iovec_d©_t
 *
iovp
;

1648 
size
;

1649 
i
;

1651 
size
= 0;

1652 
i
= 0;

1653 
i
 < 
iovp
->
iod_iovec_s
)

1655 i‡(
i
 >
IOVEC_NR
)

1657 
	`dp_√xt_iovec
(
iovp
);

1658 
i
= 0;

1661 
size
 +
iovp
->
iod_iovec
[
i
].
iov_size
;

1662 
i
++;

1664  
size
;

1665 
	}
}

1671 
	$ª∂y
(
dï
, 
îr
, 
may_block
)

1672 
d≥th_t
 *
dï
;

1673 
îr
;

1674 
may_block
;

1676 
mesßge
 
ª∂y
;

1677 
°©us
;

1678 
r
;

1680 
°©us
 = 0;

1681 i‡(
dï
->
de_Êags
 & 
DEF_PACK_SEND
)

1682 
°©us
 |
DL_PACK_SEND
;

1683 i‡(
dï
->
de_Êags
 & 
DEF_PACK_RECV
)

1684 
°©us
 |
DL_PACK_RECV
;

1686 
ª∂y
.
m_ty≥
 = 
DL_TASK_REPLY
;

1687 
ª∂y
.
DL_PORT
 = 
dï
 - 
de_èbÀ
;

1688 
ª∂y
.
DL_PROC
 = 
dï
->
de_˛õ¡
;

1689 
ª∂y
.
DL_STAT
 = 
°©us
 | ((
u32_t
Ë
îr
 << 16);

1690 
ª∂y
.
DL_COUNT
 = 
dï
->
de_ªad_s
;

1691 
ª∂y
.
DL_CLCK
 = 
	`gë_u±ime
();

1692 
r

	`£nd
(
dï
->
de_˛õ¡
, &
ª∂y
);

1695 i‡(
ªsu…
 =
ELOCKED
 && 
may_block
)

1698 i‡(
r
 < 0)

1699 
	`∑nic
("dp8390: síd faûed:", 
r
);

1701 
dï
->
de_ªad_s
 = 0;

1702 
dï
->
de_Êags
 &~(
DEF_PACK_SEND
 | 
DEF_PACK_RECV
);

1703 
	}
}

1709 
	$mess_ª∂y
(
ªq
, 
ª∂y_mess
)

1710 
mesßge
 *
ªq
;

1711 
mesßge
 *
ª∂y_mess
;

1713 i‡(
	`£nd
(
ªq
->
m_sour˚
, 
ª∂y_mess
Ë!
OK
)

1714 
	`∑nic
("dp8390: u«bÀÅÿmess_ª∂y", 
NO_NUM
);

1715 
	}
}

1721 
	$gë_u£rd©a
(
u£r_¥oc
, 
u£r_addr
, 
cou¡
, 
loc_addr
)

1722 
u£r_¥oc
;

1723 
vú_byãs
 
u£r_addr
;

1724 
vú_byãs
 
cou¡
;

1725 *
loc_addr
;

1727 
phys_byãs
 
§c
;

1729 
§c
 = 
	`num≠
(
u£r_¥oc
, 
u£r_addr
, 
cou¡
);

1730 i‡(!
§c
)

1731 
	`∑nic
("dp8390: um≠ faûed", 
NO_NUM
);

1733 
	`phys_c›y
(
§c
, 
	`vú2phys
(
loc_addr
), (
phys_byãs
Ë
cou¡
);

1734 
	}
}

1740 
	$put_u£rd©a
(
u£r_¥oc
, 
u£r_addr
, 
cou¡
, 
loc_addr
)

1741 
u£r_¥oc
;

1742 
vú_byãs
 
u£r_addr
;

1743 
vú_byãs
 
cou¡
;

1744 *
loc_addr
;

1746 
phys_byãs
 
d°
;

1748 
d°
 = 
	`num≠
(
u£r_¥oc
, 
u£r_addr
, 
cou¡
);

1749 i‡(!
d°
)

1750 
	`∑nic
("dp8390: um≠ faûed", 
NO_NUM
);

1752 
	`phys_c›y
(
	`vú2phys
(
loc_addr
), 
d°
, (
phys_byãs
Ë
cou¡
);

1753 
	}
}

	@dp8390.h

10 
	#DP_CR
 0x0

	)

11 
	#DP_CLDA0
 0x1

	)

12 
	#DP_CLDA1
 0x2

	)

13 
	#DP_BNRY
 0x3

	)

14 
	#DP_TSR
 0x4

	)

15 
	#DP_NCR
 0x5

	)

16 
	#DP_FIFO
 0x6

	)

17 
	#DP_ISR
 0x7

	)

18 
	#DP_CRDA0
 0x8

	)

19 
	#DP_CRDA1
 0x9

	)

20 
	#DP_DUM1
 0xA

	)

21 
	#DP_DUM2
 0xB

	)

22 
	#DP_RSR
 0xC

	)

23 
	#DP_CNTR0
 0xD

	)

24 
	#DP_CNTR1
 0xE

	)

25 
	#DP_CNTR2
 0xF

	)

28 
	#DP_CR
 0x0

	)

29 
	#DP_PSTART
 0x1

	)

30 
	#DP_PSTOP
 0x2

	)

31 
	#DP_BNRY
 0x3

	)

32 
	#DP_TPSR
 0x4

	)

33 
	#DP_TBCR0
 0x5

	)

34 
	#DP_TBCR1
 0x6

	)

35 
	#DP_ISR
 0x7

	)

36 
	#DP_RSAR0
 0x8

	)

37 
	#DP_RSAR1
 0x9

	)

38 
	#DP_RBCR0
 0xA

	)

39 
	#DP_RBCR1
 0xB

	)

40 
	#DP_RCR
 0xC

	)

41 
	#DP_TCR
 0xD

	)

42 
	#DP_DCR
 0xE

	)

43 
	#DP_IMR
 0xF

	)

46 
	#DP_CR
 0x0

	)

47 
	#DP_PAR0
 0x1

	)

48 
	#DP_PAR1
 0x2

	)

49 
	#DP_PAR2
 0x3

	)

50 
	#DP_PAR3
 0x4

	)

51 
	#DP_PAR4
 0x5

	)

52 
	#DP_PAR5
 0x6

	)

53 
	#DP_CURR
 0x7

	)

54 
	#DP_MAR0
 0x8

	)

55 
	#DP_MAR1
 0x9

	)

56 
	#DP_MAR2
 0xA

	)

57 
	#DP_MAR3
 0xB

	)

58 
	#DP_MAR4
 0xC

	)

59 
	#DP_MAR5
 0xD

	)

60 
	#DP_MAR6
 0xE

	)

61 
	#DP_MAR7
 0xF

	)

64 
	#CR_STP
 0x01

	)

65 
	#CR_STA
 0x02

	)

66 
	#CR_TXP
 0x04

	)

67 
	#CR_DMA
 0x38

	)

68 
	#CR_DM_NOP
 0x00

	)

69 
	#CR_DM_RR
 0x08

	)

70 
	#CR_DM_RW
 0x10

	)

71 
	#CR_DM_SP
 0x18

	)

72 
	#CR_DM_ABORT
 0x20

	)

73 
	#CR_PS
 0xC0

	)

74 
	#CR_PS_P0
 0x00

	)

75 
	#CR_PS_P1
 0x40

	)

76 
	#CR_PS_T0
 0x80

	)

77 
	#CR_SP_T1
 0xC0

	)

80 
	#ISR_MASK
 0x3F

	)

81 
	#ISR_PRX
 0x01

	)

82 
	#ISR_PTX
 0x02

	)

83 
	#ISR_RXE
 0x04

	)

84 
	#ISR_TXE
 0x08

	)

85 
	#ISR_OVW
 0x10

	)

86 
	#ISR_CNT
 0x20

	)

87 
	#ISR_RDC
 0x40

	)

88 
	#ISR_RST
 0x80

	)

91 
	#IMR_PRXE
 0x01

	)

92 
	#IMR_PTXE
 0x02

	)

93 
	#IMR_RXEE
 0x04

	)

94 
	#IMR_TXEE
 0x08

	)

95 
	#IMR_OVWE
 0x10

	)

96 
	#IMR_CNTE
 0x20

	)

97 
	#IMR_RDCE
 0x40

	)

100 
	#DCR_WTS
 0x01

	)

101 
	#DCR_BYTEWIDE
 0x00

	)

102 
	#DCR_WORDWIDE
 0x01

	)

103 
	#DCR_BOS
 0x02

	)

104 
	#DCR_LTLENDIAN
 0x00

	)

105 
	#DCR_BIGENDIAN
 0x02

	)

106 
	#DCR_LAS
 0x04

	)

107 
	#DCR_BMS
 0x08

	)

108 
	#DCR_AR
 0x10

	)

109 
	#DCR_FTS
 0x60

	)

110 
	#DCR_2BYTES
 0x00

	)

111 
	#DCR_4BYTES
 0x40

	)

112 
	#DCR_8BYTES
 0x20

	)

113 
	#DCR_12BYTES
 0x60

	)

116 
	#TCR_CRC
 0x01

	)

117 
	#TCR_ELC
 0x06

	)

118 
	#TCR_NORMAL
 0x00

	)

119 
	#TCR_INTERNAL
 0x02

	)

120 
	#TCR_0EXTERNAL
 0x04

	)

121 
	#TCR_1EXTERNAL
 0x06

	)

122 
	#TCR_ATD
 0x08

	)

123 
	#TCR_OFST
 0x10

	)

126 
	#TSR_PTX
 0x01

	)

127 
	#TSR_DFR
 0x02

	)

128 
	#TSR_COL
 0x04

	)

129 
	#TSR_ABT
 0x08

	)

130 
	#TSR_CRS
 0x10

	)

131 
	#TSR_FU
 0x20

	)

132 
	#TSR_CDH
 0x40

	)

133 
	#TSR_OWC
 0x80

	)

136 
	#RCR_SEP
 0x01

	)

137 
	#RCR_AR
 0x02

	)

138 
	#RCR_AB
 0x04

	)

139 
	#RCR_AM
 0x08

	)

140 
	#RCR_PRO
 0x10

	)

141 
	#RCR_MON
 0x20

	)

144 
	#RSR_PRX
 0x01

	)

145 
	#RSR_CRC
 0x02

	)

146 
	#RSR_FAE
 0x04

	)

147 
	#RSR_FO
 0x08

	)

148 
	#RSR_MPA
 0x10

	)

149 
	#RSR_PHY
 0x20

	)

150 
	#RSR_DIS
 0x40

	)

153 
	sdp_rcvhdr


155 
u8_t
 
	mdr_°©us
;

156 
u8_t
 
	mdr_√xt
;

157 
u8_t
 
	mdr_rb˛
;

158 
u8_t
 
	mdr_rbch
;

159 } 
	tdp_rcvhdr_t
;

161 
	#DP_PAGESIZE
 256

	)

164 
	#öb_ªg0
(
dï
, 
ªg
Ë(
	`ö_byã
(dï->
de_dp8390_p‹t
+ªg))

	)

165 
	#outb_ªg0
(
dï
, 
ªg
, 
d©a
Ë(
	`out_byã
(dï->
de_dp8390_p‹t
+ªg, d©a))

	)

166 
	#öb_ªg1
(
dï
, 
ªg
Ë(
	`ö_byã
 (dï->
de_dp8390_p‹t
+ªg))

	)

167 
	#outb_ªg1
(
dï
, 
ªg
, 
d©a
Ë(
	`out_byã
(dï->
de_dp8390_p‹t
+ªg, d©a))

	)

171 
	gd≥th
;

172 
	giovec_d©
;

173 
_PROTOTYPE
–(*
	tdp_öôf_t
), (
	td≥th
 *
	tdï
) );

174 
_PROTOTYPE
–(*
	tdp_°›f_t
), (
	td≥th
 *
	tdï
) );

175 
_PROTOTYPE
–(*
	tdp_u£r2nicf_t
), (
	td≥th
 *
	tdï
,

176 
	tiovec_d©
 *
	tiovp
, 
	tvú_byãs
 
	toff£t
,

177 
	tnic_addr
, 
	tvú_byãs
 
	tcou¡
) );

178 
_PROTOTYPE
–(*
	tdp_nic2u£rf_t
), (
	td≥th
 *
	tdï
,

179 
	tnic_addr
, 
	tiovec_d©
 *
	tiovp
,

180 
	tvú_byãs
 
	toff£t
, vú_byã†
	tcou¡
) );

182 
_PROTOTYPE
–(*
	tdp_gëhódîf_t
), (
	td≥th
 *
	tdï
,

183 
	t∑ge
, 
	tdp_rcvhdr
 *
	th
, 
	tu16_t
 *
	tëh_ty≥
) );

185 
_PROTOTYPE
–(*
	tdp_gëblock_t
), (
	td≥th
 *
	tdï
,

186 
	t∑ge
, 
	tsize_t
 
	toff£t
, size_à
	tsize
, *
	td°
) );

189 
	#IOVEC_NR
 16

	)

191 
	siovec_d©


193 
iovec_t
 
	miod_iovec
[
IOVEC_NR
];

194 
	miod_iovec_s
;

195 
	miod_¥oc_ƒ
;

196 
vú_byãs
 
	miod_iovec_addr
;

197 } 
	tiovec_d©_t
;

199 
	#SENDQ_NR
 2

	)

200 
	#SENDQ_PAGES
 6

	)

202 
	sd≥th


212 
p‹t_t
 
	mde_ba£_p‹t
;

213 
phys_byãs
 
	mde_lömem
;

214 
	mde_úq
;

215 
dp_öôf_t
 
	mde_öôf
;

216 
dp_°›f_t
 
	mde_°›f
;

217 
	mde_¥og_IO
;

224 
ëhî_addr_t
 
	mde_addªss
;

225 
p‹t_t
 
	mde_dp8390_p‹t
;

226 
p‹t_t
 
	mde_d©a_p‹t
;

227 
	mde_16bô
;

228 
	mde_ømsize
;

229 
	mde_off£t_∑ge
;

230 
	mde_°¨çage
;

231 
	mde_°›∑ge
;

234 
	s£ndq


236 
	msq_fûÀd
;

237 
	msq_size
;

238 
	msq_£nd∑ge
;

239 } 
	mde_£ndq
[
SENDQ_NR
];

240 
	mde_£ndq_ƒ
;

241 
	mde_£ndq_hód
;

242 
	mde_£ndq_èû
;

245 
£gm_t
 
	mde_mem£gm
;

248 
	mde_Êags
;

249 
	mde_mode
;

250 
ëh_°©_t
 
	mde_°©
;

251 
iovec_d©_t
 
	mde_ªad_iovec
;

252 
iovec_d©_t
 
	mde_wrôe_iovec
;

253 
iovec_d©_t
 
	mde_tmp_iovec
;

254 
vú_byãs
 
	mde_ªad_s
;

255 
	mde_˛õ¡
;

256 
mesßge
 
	mde_£ndmsg
;

257 
dp_u£r2nicf_t
 
	mde_u£r2nicf
;

258 
dp_nic2u£rf_t
 
	mde_nic2u£rf
;

259 
dp_gëblock_t
 
	mde_gëblockf
;

260 } 
	td≥th_t
;

262 
	#DEI_DEFAULT
 0x8000

	)

264 
	#DEF_EMPTY
 0x000

	)

265 
	#DEF_PACK_SEND
 0x001

	)

266 
	#DEF_PACK_RECV
 0x002

	)

267 
	#DEF_SEND_AVAIL
 0x004

	)

268 
	#DEF_READING
 0x010

	)

269 
	#DEF_PROMISC
 0x040

	)

270 
	#DEF_MULTI
 0x080

	)

271 
	#DEF_BROAD
 0x100

	)

272 
	#DEF_ENABLED
 0x200

	)

273 
	#DEF_STOPPED
 0x400

	)

275 
	#DEM_DISABLED
 0x0

	)

276 
	#DEM_SINK
 0x1

	)

277 
	#DEM_ENABLED
 0x2

	)

	@driver.c

29 
	~"kî√l.h
"

30 
	~<sys/io˘l.h
>

31 
	~"drivî.h
"

33 #i‡(
CHIP
 =
INTEL
)

34 #i‡
ENABLE_ADAPTEC_SCSI
 && 
DMA_BUF_SIZE
 < 2048

36 
	#BUF_EXTRA
 (2048 - 
DMA_BUF_SIZE
)

	)

38 
	#BUF_EXTRA
 0

	)

42 
PRIVATE
 
u8_t
 
	gbuf„r
[(Ë2 * 
DMA_BUF_SIZE
 + 
BUF_EXTRA
];

43 
u8_t
 *
	gtmp_buf
;

44 
phys_byãs
 
	gtmp_phys
;

49 
u8_t
 
	gtmp_buf
[
DMA_BUF_SIZE
];

50 
phys_byãs
 
	gtmp_phys
;

54 
FORWARD
 
_PROTOTYPE
–
öô_buf„r
, () );

60 
PUBLIC
 
	$drivî_èsk
(
dp
)

61 
drivî
 *
dp
;

65 
r
, 
ˇŒî
, 
¥oc_ƒ
;

66 
mesßge
 
mess
;

68 
	`öô_buf„r
();

75 
TRUE
) {

77 
	`ª˚ive
(
ANY
, &
mess
);

79 
ˇŒî
 = 
mess
.
m_sour˚
;

80 
¥oc_ƒ
 = 
mess
.
PROC_NR
;

82 
ˇŒî
) {

83 
HARDWARE
:

86 
FS_PROC_NR
:

90 
	`¥ötf
("%s: gŸ mesßgê‰om %d\n", (*
dp
->
dr_«me
)(), 
ˇŒî
);

95 
mess
.
m_ty≥
) {

96 
DEV_OPEN
: 
r
 = (*
dp
->
dr_›í
)(dp, &
mess
); ;

97 
DEV_CLOSE
: 
r
 = (*
dp
->
dr_˛o£
)(dp, &
mess
); ;

98 
DEV_IOCTL
: 
r
 = (*
dp
->
dr_io˘l
)(dp, &
mess
); ;

100 
DEV_READ
:

101 
DEV_WRITE
: 
r
 = 
	`do_rdwt
(
dp
, &
mess
); ;

103 
SCATTERED_IO
: 
r
 = 
	`do_vrdwt
(
dp
, &
mess
); ;

104 : 
r
 = 
EINVAL
; ;

108 (*
dp
->
dr_˛ónup
)();

111 
mess
.
m_ty≥
 = 
TASK_REPLY
;

112 
mess
.
REP_PROC_NR
 = 
¥oc_ƒ
;

114 
mess
.
REP_STATUS
 = 
r
;

115 
	`£nd
(
ˇŒî
, &
mess
);

117 
	}
}

123 
PRIVATE
 
	$öô_buf„r
()

130 #i‡(
CHIP
 =
INTEL
)

131 
tmp_buf
 = 
buf„r
;

132 
tmp_phys
 = 
	`vú2phys
(
buf„r
);

134 i‡(
tmp_phys
 =0Ë
	`∑nic
("nÿDMA buf„r", 
NO_NUM
);

136 i‡(
	`dma_byãs_À·
(
tmp_phys
Ë< 
DMA_BUF_SIZE
) {

138 
tmp_buf
 +
DMA_BUF_SIZE
;

139 
tmp_phys
 +
DMA_BUF_SIZE
;

142 
tmp_phys
 = 
	`vú2phys
(
tmp_buf
);

144 
	}
}

150 
PUBLIC
 
	$do_rdwt
(
dp
, 
m_±r
)

151 
drivî
 *
dp
;

152 
mesßge
 *
m_±r
;

155 
i‹eque°_s
 
i‹eq
;

156 
r
;

158 i‡(
m_±r
->
COUNT
 <0Ë(
EINVAL
);

160 i‡((*
dp
->
dr_¥ï¨e
)(
m_±r
->
DEVICE
Ë=
NIL_DEV
Ë(
ENXIO
);

162 
i‹eq
.
io_ªque°
 = 
m_±r
->
m_ty≥
;

163 
i‹eq
.
io_buf
 = 
m_±r
->
ADDRESS
;

164 
i‹eq
.
io_posôi⁄
 = 
m_±r
->
POSITION
;

165 
i‹eq
.
io_nbyãs
 = 
m_±r
->
COUNT
;

167 
r
 = (*
dp
->
dr_scheduÀ
)(
m_±r
->
PROC_NR
, &
i‹eq
);

169 i‡(
r
 =
OK
Ë(Ë(*
dp
->
dr_föish
)();

171 
r
 = 
i‹eq
.
io_nbyãs
;

172 (
r
 < 0 ?Ñ : 
m_±r
->
COUNT
 -Ñ);

173 
	}
}

179 
PUBLIC
 
	$do_vrdwt
(
dp
, 
m_±r
)

180 
drivî
 *
dp
;

181 
mesßge
 *
m_±r
;

187 
i‹eque°_s
 *
i›
;

188 
i‹eque°_s
 
iovec
[
NR_IOREQS
];

189 
phys_byãs
 
iovec_phys
;

190 
ƒ_ªque°s
;

191 
ªque°
;

192 
r
;

193 
phys_byãs
 
u£r_iovec_phys
;

195 
ƒ_ªque°s
 = 
m_±r
->
COUNT
;

197 i‡(
ƒ_ªque°s
 >  
iovec
 /  iovec[0])

198 
	`∑nic
("FSÖas£dÅoÿbigá¿I/O ve˘‹", 
ƒ_ªque°s
);

200 
iovec_phys
 = 
	`vú2phys
(
iovec
);

201 
u£r_iovec_phys
 = 
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
Ëm_±r->
ADDRESS
,

202 (
vú_byãs
Ë(
ƒ_ªque°s
 *  
iovec
[0]));

204 i‡(
u£r_iovec_phys
 == 0)

205 
	`∑nic
("FSÖas£dá bad I/O ve˘‹", (Ë
m_±r
->
ADDRESS
);

207 
	`phys_c›y
(
u£r_iovec_phys
, 
iovec_phys
,

208 (
phys_byãs
Ë
ƒ_ªque°s
 *  
iovec
[0]);

210 i‡((*
dp
->
dr_¥ï¨e
)(
m_±r
->
DEVICE
Ë=
NIL_DEV
Ë(
ENXIO
);

212 
ªque°
 = 0, 
i›
 = 
iovec
;Ñeque° < 
ƒ_ªque°s
;Ñequest++, iop++) {

213 i‡((
r
 = (*
dp
->
dr_scheduÀ
)(
m_±r
->
PROC_NR
, 
i›
)Ë!
OK
) ;

216 i‡(
r
 =
OK
Ë(Ë(*
dp
->
dr_föish
)();

218 
	`phys_c›y
(
iovec_phys
, 
u£r_iovec_phys
,

219 (
phys_byãs
Ë
ƒ_ªque°s
 *  
iovec
[0]);

220 (
OK
);

221 
	}
}

227 
PUBLIC
 *
	$no_«me
()

231 (
èskèb
[
	`¥oc_numbî
(
¥oc_±r
Ë+ 
NR_TASKS
].
«me
);

232 
	}
}

238 
PUBLIC
 
	$do_n›
(
dp
, 
m_±r
)

239 
drivî
 *
dp
;

240 
mesßge
 *
m_±r
;

244 
m_±r
->
m_ty≥
) {

245 
DEV_OPEN
: (
ENODEV
);

246 
DEV_CLOSE
: (
OK
);

247 
DEV_IOCTL
: (
ENOTTY
);

248 : (
EIO
);

250 
	}
}

256 
PUBLIC
 
	$n›_föish
()

259 (
OK
);

260 
	}
}

266 
PUBLIC
 
	$n›_˛ónup
()

269 
	}
}

275 
PUBLIC
 
	$˛ock_mess
(
ticks
, 
func
)

276 
ticks
;

277 
w©chdog_t
 
func
;

281 
mesßge
 
mess
;

283 
mess
.
m_ty≥
 = 
SET_ALARM
;

284 
mess
.
CLOCK_PROC_NR
 = 
	`¥oc_numbî
(
¥oc_±r
);

285 
mess
.
DELTA_TICKS
 = (Ë
ticks
;

286 
mess
.
FUNC_TO_CALL
 = (
sigh™dÀr_t
Ë
func
;

287 
	`£ndªc
(
CLOCK
, &
mess
);

288 
	}
}

294 
PUBLIC
 
	$do_dio˙é
(
dp
, 
m_±r
)

295 
drivî
 *
dp
;

296 
mesßge
 *
m_±r
;

299 
devi˚
 *
dv
;

300 
phys_byãs
 
u£r_phys
, 
íåy_phys
;

301 
∑πôi⁄
 
íåy
;

303 i‡(
m_±r
->
REQUEST
 !
DIOCSETP
 && m_±r->REQUEST !
DIOCGETP
Ë(
ENOTTY
);

306 i‡((
dv
 = (*
dp
->
dr_¥ï¨e
)(
m_±r
->
DEVICE
)Ë=
NIL_DEV
Ë(
ENXIO
);

308 
u£r_phys
 = 
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
Ëm_±r->
ADDRESS
, (
íåy
));

309 i‡(
u£r_phys
 =0Ë(
EFAULT
);

311 
íåy_phys
 = 
	`vú2phys
(&
íåy
);

313 i‡(
m_±r
->
REQUEST
 =
DIOCSETP
) {

315 
	`phys_c›y
(
u£r_phys
, 
íåy_phys
, (
phys_byãs
Ë(
íåy
));

316 
dv
->
dv_ba£
 = 
íåy
.
ba£
;

317 
dv
->
dv_size
 = 
íåy
.
size
;

320 
íåy
.
ba£
 = 
dv
->
dv_ba£
;

321 
íåy
.
size
 = 
dv
->
dv_size
;

322 (*
dp
->
dr_geomëry
)(&
íåy
);

323 
	`phys_c›y
(
íåy_phys
, 
u£r_phys
, (
phys_byãs
Ë(
íåy
));

325 (
OK
);

326 
	}
}

	@driver.h

5 
	~<möix/ˇŒƒ.h
>

6 
	~<möix/com.h
>

7 
	~"¥oc.h
"

8 
	~<möix/∑πôi⁄.h
>

11 
	sdrivî
 {

12 
_PROTOTYPE
–*(*
dr_«me
), () );

13 
_PROTOTYPE
–(*
dr_›í
), (
drivî
 *
dp
, 
mesßge
 *
m_±r
) );

14 
_PROTOTYPE
–(*
dr_˛o£
), (
drivî
 *
dp
, 
mesßge
 *
m_±r
) );

15 
_PROTOTYPE
–(*
dr_io˘l
), (
drivî
 *
dp
, 
mesßge
 *
m_±r
) );

16 
_PROTOTYPE
–
devi˚
 *(*
dr_¥ï¨e
), (device) );

17 
_PROTOTYPE
–(*
dr_scheduÀ
), (
¥oc_ƒ
, 
i‹eque°_s
 *
ªque°
) );

18 
_PROTOTYPE
–(*
dr_föish
), () );

19 
_PROTOTYPE
–(*
dr_˛ónup
), () );

20 
_PROTOTYPE
–(*
dr_geomëry
), (
∑πôi⁄
 *
íåy
) );

23 #i‡(
CHIP
 =
INTEL
)

26 
	#dma_byãs_À·
(
phys
Ë\

	)

27 ((Ë((Ë=2 ? 0 : 0x10000Ë- (Ë((
phys
) & 0xFFFF))

32 
	sdevi˚
 {

33 
dv_ba£
;

34 
	mdv_size
;

37 
	#NIL_DEV
 ((
devi˚
 *Ë0)

	)

40 
_PROTOTYPE
–
drivî_èsk
, (
drivî
 *
dr
) );

41 
_PROTOTYPE
–
do_rdwt
, (
drivî
 *
dr
, 
mesßge
 *
m_±r
) );

42 
_PROTOTYPE
–
do_vrdwt
, (
drivî
 *
dr
, 
mesßge
 *
m_±r
) );

43 
_PROTOTYPE
–*
no_«me
, () );

44 
_PROTOTYPE
–
do_n›
, (
drivî
 *
dp
, 
mesßge
 *
m_±r
) );

45 
_PROTOTYPE
–
n›_föish
, () );

46 
_PROTOTYPE
–
n›_˛ónup
, () );

47 
_PROTOTYPE
–
˛ock_mess
, (
ticks
, 
w©chdog_t
 
func
) );

48 
_PROTOTYPE
–
do_dio˙é
, (
drivî
 *
dr
, 
mesßge
 *
m_±r
) );

51 
	#SECTOR_SIZE
 512

	)

52 
	#SECTOR_SHIFT
 9

	)

53 
	#SECTOR_MASK
 511

	)

56 
	#DMA_BUF_SIZE
 (
DMA_SECTORS
 * 
SECTOR_SIZE
)

	)

58 #i‡(
CHIP
 =
INTEL
)

59 
u8_t
 *
tmp_buf
;

61 
u8_t
 
tmp_buf
[];

63 
phys_byãs
 
tmp_phys
;

	@drvlib.c

7 
	~"kî√l.h
"

8 
	~"drivî.h
"

9 
	~"drvlib.h
"

12 
FORWARD
 
_PROTOTYPE
–
exç¨tôi⁄
, (
drivî
 *
dp
, 
extdev
,

13 
extba£
) );

14 
FORWARD
 
_PROTOTYPE
–
gë_∑π_èbÀ
, (
drivî
 *
dp
, 
devi˚
,

15 
off£t
, 
∑π_íåy
 *
èbÀ
) );

16 
FORWARD
 
_PROTOTYPE
–
s‹t
, (
∑π_íåy
 *
èbÀ
) );

22 
PUBLIC
 
	$∑πôi⁄
(
dp
, 
devi˚
, 
°yÀ
)

23 
drivî
 *
dp
;

24 
devi˚
;

25 
°yÀ
;

34 
∑π_íåy
 
èbÀ
[
NR_PARTITIONS
], *
≥
;

35 
disk
, 
∑r
;

36 
devi˚
 *
dv
;

37 
ba£
, 
limô
, 
∑π_limô
;

40 i‡((
dv
 = (*
dp
->
dr_¥ï¨e
)(
devi˚
)Ë=
NIL_DEV
 || dv->
dv_size
 == 0) ;

41 
ba£
 = 
dv
->
dv_ba£
 >> 
SECTOR_SHIFT
;

42 
limô
 = 
ba£
 + (
dv
->
dv_size
 >> 
SECTOR_SHIFT
);

45 i‡(!
	`gë_∑π_èbÀ
(
dp
, 
devi˚
, 0L, 
èbÀ
)) ;

48 
°yÀ
) {

49 
P_FLOPPY
:

50 
devi˚
 +
MINOR_fd0a
;

52 
P_PRIMARY
:

53 
	`s‹t
(
èbÀ
);

54 
devi˚
 += 1;

56 
P_SUB
:

57 
disk
 = 
devi˚
 / 
DEV_PER_DRIVE
;

58 
∑r
 = 
devi˚
 % 
DEV_PER_DRIVE
 - 1;

59 
devi˚
 = 
MINOR_hd1a
 + (
disk
 * 
NR_PARTITIONS
 + 
∑r
) * NR_PARTITIONS;

63 i‡((
dv
 = (*
dp
->
dr_¥ï¨e
)(
devi˚
)Ë=
NIL_DEV
) ;

66 
∑r
 = 0;Ö¨ < 
NR_PARTITIONS
;Ö¨++, 
dv
++) {

68 
≥
 = &
èbÀ
[
∑r
];

69 
∑π_limô
 = 
≥
->
low£c
 +Öe->
size
;

70 i‡(
∑π_limô
 < 
≥
->
low£c
Ë∑π_limô = 
limô
;

71 i‡(
∑π_limô
 > 
limô
)Öart_limit =Üimit;

72 i‡(
≥
->
low£c
 < 
ba£
)Öe->lowsec = base;

73 i‡(
∑π_limô
 < 
≥
->
low£c
)Öart_limit =Öe->lowsec;

75 
dv
->
dv_ba£
 = 
≥
->
low£c
 << 
SECTOR_SHIFT
;

76 
dv
->
dv_size
 = (
∑π_limô
 - 
≥
->
low£c
Ë<< 
SECTOR_SHIFT
;

78 i‡(
°yÀ
 =
P_PRIMARY
) {

80 i‡(
≥
->
sysöd
 =
MINIX_PART
)

81 
	`∑πôi⁄
(
dp
, 
devi˚
 + 
∑r
, 
P_SUB
);

84 i‡(
≥
->
sysöd
 =
EXT_PART
)

85 
	`exç¨tôi⁄
(
dp
, 
devi˚
 + 
∑r
, 
≥
->
low£c
);

88 
	}
}

94 
PRIVATE
 
	$exç¨tôi⁄
(
dp
, 
extdev
, 
extba£
)

95 
drivî
 *
dp
;

96 
extdev
;

97 
extba£
;

102 
∑π_íåy
 
èbÀ
[
NR_PARTITIONS
], *
≥
;

103 
subdev
, 
disk
, 
∑r
;

104 
devi˚
 *
dv
;

105 
off£t
, 
√xtoff£t
;

107 
disk
 = 
extdev
 / 
DEV_PER_DRIVE
;

108 
∑r
 = 
extdev
 % 
DEV_PER_DRIVE
 - 1;

109 
subdev
 = 
MINOR_hd1a
 + (
disk
 * 
NR_PARTITIONS
 + 
∑r
) * NR_PARTITIONS;

111 
off£t
 = 0;

113 i‡(!
	`gë_∑π_èbÀ
(
dp
, 
extdev
, 
off£t
, 
èbÀ
)) ;

114 
	`s‹t
(
èbÀ
);

119 
√xtoff£t
 = 0;

120 
∑r
 = 0;Ö¨ < 
NR_PARTITIONS
;Öar++) {

121 
≥
 = &
èbÀ
[
∑r
];

122 i‡(
≥
->
sysöd
 =
EXT_PART
) {

123 
√xtoff£t
 = 
≥
->
low£c
;

125 i‡(
≥
->
sysöd
 !
NO_PART
) {

126 i‡((
dv
 = (*
dp
->
dr_¥ï¨e
)(
subdev
)Ë=
NIL_DEV
) ;

128 
dv
->
dv_ba£
 = (
extba£
 + 
off£t


129 + 
≥
->
low£c
Ë<< 
SECTOR_SHIFT
;

130 
dv
->
dv_size
 = 
≥
->
size
 << 
SECTOR_SHIFT
;

133 i‡(++
subdev
 % 
NR_PARTITIONS
 == 0) ;

136 } (
off£t
 = 
√xtoff£t
) != 0);

137 
	}
}

143 
PRIVATE
 
	$gë_∑π_èbÀ
(
dp
, 
devi˚
, 
off£t
, 
èbÀ
)

144 
drivî
 *
dp
;

145 
devi˚
;

146 
off£t
;

147 
∑π_íåy
 *
èbÀ
;

152 
mesßge
 
mess
;

154 
mess
.
DEVICE
 = 
devi˚
;

155 
mess
.
POSITION
 = 
off£t
 << 
SECTOR_SHIFT
;

156 
mess
.
COUNT
 = 
SECTOR_SIZE
;

157 
mess
.
ADDRESS
 = (*Ë
tmp_buf
;

158 
mess
.
PROC_NR
 = 
	`¥oc_numbî
(
¥oc_±r
);

159 
mess
.
m_ty≥
 = 
DEV_READ
;

161 i‡(
	`do_rdwt
(
dp
, &
mess
Ë!
SECTOR_SIZE
) {

162 
	`¥ötf
("%s: c™'àªadÖ¨tôi⁄ÅabÀ\n", (*
dp
->
dr_«me
)());

165 i‡(
tmp_buf
[510] != 0x55 ||Åmp_buf[511] != 0xAA) {

169 
	`mem˝y
(
èbÀ
, (
tmp_buf
 + 
PART_TABLE_OFF
), 
NR_PARTITIONS
 * (table[0]));

171 
	}
}

177 
PRIVATE
 
	$s‹t
(
èbÀ
)

178 
∑π_íåy
 *
èbÀ
;

181 
∑π_íåy
 *
≥
, 
tmp
;

182 
n
 = 
NR_PARTITIONS
;

185 
≥
 = 
èbÀ
;Öê<ÅabÀ + 
NR_PARTITIONS
-1;Öe++) {

186 i‡(
≥
[0].
sysöd
 =
NO_PART


187 || (
≥
[0].
low£c
 >Öe[1].lowsec

188 && 
≥
[1].
sysöd
 !
NO_PART
)) {

189 
tmp
 = 
≥
[0];Öe[0] =Öe[1];Öe[1] =Åmp;

192 } --
n
 > 0);

193 
	}
}

	@drvlib.h

5 
	~<ibm/∑πôi⁄.h
>

7 
_PROTOTYPE
–
∑πôi⁄
, (
drivî
 *
dr
, 
devi˚
, 
°yÀ
) );

10 
	#bp_cylödîs
(
t
Ë(* (
u16_t
 *Ë(&—)[0]))

	)

11 
	#bp_hóds
(
t
Ë(* (
u8_t
 *Ë(&—)[2]))

	)

12 
	#bp_ªdu˚d_wr
(
t
Ë(* (
u16_t
 *Ë(&—)[3]))

	)

13 
	#bp_¥ecomp
(
t
Ë(* (
u16_t
 *Ë(&—)[5]))

	)

14 
	#bp_max_ecc
(
t
Ë(* (
u8_t
 *Ë(&—)[7]))

	)

15 
	#bp_˘lbyã
(
t
Ë(* (
u8_t
 *Ë(&—)[8]))

	)

16 
	#bp_œndögz⁄e
(
t
Ë(* (
u16_t
 *Ë(&—)[12]))

	)

17 
	#bp_£˘‹s
(
t
Ë(* (
u8_t
 *Ë(&—)[14]))

	)

20 
	#DEV_PER_DRIVE
 (1 + 
NR_PARTITIONS
)

	)

21 
	#MINOR_hd1a
 128

	)

22 
	#MINOR_fd0a
 (28<<2)

	)

23 
	#P_FLOPPY
 0

	)

24 
	#P_PRIMARY
 1

	)

25 
	#P_SUB
 2

	)

	@dvf4.c

12 
	~"FP_ty≥s.h
"

15 
	$dvf4
(
s2
,
s1
)

16 
SINGLE
 
s1
,
s2
;

18 
EXTEND
 
e1
,
e2
;

20 
	`exãnd
(&
s1
,&
e1
,(
SINGLE
));

21 
	`exãnd
(&
s2
,&
e2
,(
SINGLE
));

24 
	`div_ext
(&
e1
,&
e2
);

25 
	`com∑˘
(&
e1
,&
s1
,(
SINGLE
));

26 
	}
}

	@dvf8.c

12 
	~"FP_ty≥s.h
"

15 
	$dvf8
(
s2
,
s1
)

16 
DOUBLE
 
s1
,
s2
;

18 
EXTEND
 
e1
,
e2
;

20 
	`exãnd
(&
s1
.
d
[0],&
e1
,(
DOUBLE
));

21 
	`exãnd
(&
s2
.
d
[0],&
e2
,(
DOUBLE
));

24 
	`div_ext
(&
e1
,&
e2
);

25 
	`com∑˘
(&
e1
,&
s1
.
d
[0],(
DOUBLE
));

26 
	}
}

	@ecvt.c

3 #i‚de‡
NOFLOAT


5 
	~"../™si/ext_fmt.h
"

6 
_dbl_ext_cvt
(
vÆue
, 
EXTEND
 *
e
);

7 *
_ext_°r_cvt
(
EXTEND
 *
e
, 
ndigô
, *
de˝t
, * 
sign
, 
ecvtÊag
);

10 
	$cvt
(
vÆue
, 
ndigô
, *
de˝t
, *
sign
, 
ecvtÊag
)

12 
EXTEND
 
e
;

14 
	`_dbl_ext_cvt
(
vÆue
, &
e
);

15  
	`_ext_°r_cvt
(&
e
, 
ndigô
, 
de˝t
, 
sign
, 
ecvtÊag
);

16 
	}
}

19 
	$_ecvt
(
vÆue
, 
ndigô
, *
de˝t
, *
sign
)

22  
	`cvt
(
vÆue
, 
ndigô
, 
de˝t
, 
sign
, 1);

23 
	}
}

26 
	$_fcvt
(
vÆue
, 
ndigô
, *
de˝t
, *
sign
)

28  
	`cvt
(
vÆue
, 
ndigô
, 
de˝t
, 
sign
, 0);

29 
	}
}

	@editline.c

5 
	~"edôlöe.h
"

6 
	~<sig«l.h
>

7 
	~<˘y≥.h
>

12 
	#SCREEN_WIDTH
 80

	)

13 
	#SCREEN_ROWS
 24

	)

14 
	#NO_ARG
 (-1)

	)

15 
	#DEL
 127

	)

16 
	#CTL
(
x
Ë((xË& 0x1F)

	)

17 
	#ISCTL
(
x
Ë((xË&& (xË< ' ')

	)

18 
	#UNCTL
(
x
Ë((xË+ 64)

	)

19 
	#META
(
x
Ë((xË| 0x80)

	)

20 
	#ISMETA
(
x
Ë((xË& 0x80)

	)

21 
	#UNMETA
(
x
Ë((xË& 0x7F)

	)

22 #if !
deföed
(
HIST_SIZE
)

23 
	#HIST_SIZE
 20

	)

29 
	e_STATUS
 {

30 
	mCSd⁄e
, 
	mCSeof
, 
	mCSmove
, 
	mCSdi•©ch
, 
	mCS°ay
, 
	mCSsig«l


31 } 
	tSTATUS
;

36 
	e_CASE
 {

37 
	mTOuµî
, 
	mTOlowî


38 } 
	tCASE
;

43 
	s_KEYMAP
 {

44 
CHAR
 
	mKey
;

45 
STATUS
 (*
Fun˘i⁄
)();

46 } 
	tKEYMAP
;

51 
	s_HISTORY
 {

52 
	mSize
;

53 
	mPos
;

54 
CHAR
 *
	mLöes
[
HIST_SIZE
];

55 } 
	tHISTORY
;

60 
	gæ_eof
;

61 
	gæ_îa£
;

62 
	gæ_öå
;

63 
	gæ_kûl
;

64 
	gæ_quô
;

66 
STATIC
 
CHAR
 
	gNIL
[] = "";

67 
STATIC
 
CONST
 
CHAR
 *
	gI≈ut
 = 
NIL
;

68 
STATIC
 
CHAR
 *
	gLöe
;

69 
STATIC
 
CONST
 *
	gProm±
;

70 
STATIC
 
CHAR
 *
	gY™ked
;

71 
STATIC
 *
	gS¸ìn
;

72 
STATIC
 
	gNEWLINE
[]
CRLF
;

73 
STATIC
 
HISTORY
 
	gH
;

74 
STATIC
 
	gRïót
;

75 
STATIC
 
	gEnd
;

76 
STATIC
 
	gM¨k
;

77 
STATIC
 
	gOldPoöt
;

78 
STATIC
 
	gPoöt
;

79 
STATIC
 
	gPushBack
;

80 
STATIC
 
	gPushed
;

81 
STATIC
 
	gSig«l
;

82 
FORWARD
 
KEYMAP
 
	gM≠
[33];

83 
FORWARD
 
KEYMAP
 
	gMëaM≠
[17];

84 
STATIC
 
SIZE_T
 
	gLígth
;

85 
STATIC
 
SIZE_T
 
	gS¸ìnCou¡
;

86 
STATIC
 
SIZE_T
 
	gS¸ìnSize
;

87 
STATIC
 *
	gback•a˚
;

88 
STATIC
 
	gTTYwidth
;

89 
STATIC
 
	gTTYrows
;

92 
	gæ_mëa_ch¨s
 = 0;

97 
STATIC
 
CHAR
 *
edôöput
();

98 
ªad
();

99 
wrôe
();

100 #if 
deföed
(
USE_TERMCAP
)

101 *
gëív
();

102 *
tgë°r
();

103 
tgëít
();

110 
STATIC
 

111 
	$TTYÊush
()

113 i‡(
S¸ìnCou¡
) {

114 ()
	`wrôe
(1, 
S¸ìn
, 
S¸ìnCou¡
);

115 
S¸ìnCou¡
 = 0;

117 
	}
}

119 
STATIC
 

120 
	$TTYput
(
c
)

121 
CHAR
 
c
;

123 
S¸ìn
[
S¸ìnCou¡
] = 
c
;

124 i‡(++
S¸ìnCou¡
 >
S¸ìnSize
 - 1) {

125 
S¸ìnSize
 +
SCREEN_INC
;

126 
	`RENEW
(
S¸ìn
, , 
S¸ìnSize
);

128 
	}
}

130 
STATIC
 

131 
	$TTYputs
(
p
)

132 
CHAR
 *
p
;

134 *
p
)

135 
	`TTYput
(*
p
++);

136 
	}
}

138 
STATIC
 

139 
	$TTYshow
(
c
)

140 
CHAR
 
c
;

142 i‡(
c
 =
DEL
) {

143 
	`TTYput
('^');

144 
	`TTYput
('?');

146 i‡(
	`ISCTL
(
c
)) {

147 
	`TTYput
('^');

148 
	`TTYput
(
	`UNCTL
(
c
));

150 i‡(
æ_mëa_ch¨s
 && 
	`ISMETA
(
c
)) {

151 
	`TTYput
('M');

152 
	`TTYput
('-');

153 
	`TTYput
(
	`UNMETA
(
c
));

156 
	`TTYput
(
c
);

157 
	}
}

159 
STATIC
 

160 
	$TTY°rög
(
p
)

161 
CHAR
 *
p
;

163 *
p
)

164 
	`TTYshow
(*
p
++);

165 
	}
}

167 
STATIC
 

168 
	$TTYgë
()

170 
CHAR
 
c
;

172 
	`TTYÊush
();

173 i‡(
Pushed
) {

174 
Pushed
 = 0;

175  
PushBack
;

177 i‡(*
I≈ut
)

178  *
I≈ut
++;

179  
	`ªad
(0, &
c
, (
SIZE_T
)1Ë=1 ? c : 
EOF
;

180 
	}
}

182 
	#TTYback
(Ë(
back•a˚
 ? 
	`TTYputs
((
CHAR
 *)back•a˚Ë: 
	`TTYput
('\b'))

	)

184 
STATIC
 

185 
	$TTYbackn
(
n
)

186 
n
;

188 --
n
 >= 0)

189 
	`TTYback
();

190 
	}
}

192 
STATIC
 

193 
	$TTYöfo
()

195 
öô
;

196 #if 
	`deföed
(
USE_TERMCAP
)

197 *
ãrm
;

198 
buff
[2048];

199 *
bp
;

201 #if 
	`deföed
(
TIOCGWINSZ
)

202 
wösize
 
W
;

205 i‡(
öô
) {

206 #if 
	`deföed
(
TIOCGWINSZ
)

208 i‡(
	`io˘l
(0, 
TIOCGWINSZ
, &
W
) >= 0

209 && 
W
.
ws_cﬁ
 > 0 && W.
ws_row
 > 0) {

210 
TTYwidth
 = ()
W
.
ws_cﬁ
;

211 
TTYrows
 = ()
W
.
ws_row
;

216 
öô
++;

218 
TTYwidth
 = 
TTYrows
 = 0;

219 #if 
	`deföed
(
USE_TERMCAP
)

220 
bp
 = &
buff
[0];

221 i‡((
ãrm
 = 
	`gëív
("TERM")Ë=
NULL
)

222 
ãrm
 = "dumb";

223 i‡(
	`tgëít
(
buff
, 
ãrm
) < 0) {

224 
TTYwidth
 = 
SCREEN_WIDTH
;

225 
TTYrows
 = 
SCREEN_ROWS
;

228 i‡((
back•a˚
 = 
	`tgë°r
("À", &
bp
)Ë!
NULL
)

229 
back•a˚
 = 
	`°rdup
(backspace);

230 
TTYwidth
 = 
	`tgënum
("co");

231 
TTYrows
 = 
	`tgënum
("li");

234 #if 
	`deföed
(
TIOCGWINSZ
)

235 i‡(
	`io˘l
(0, 
TIOCGWINSZ
, &
W
) >= 0) {

236 
TTYwidth
 = ()
W
.
ws_cﬁ
;

237 
TTYrows
 = ()
W
.
ws_row
;

241 i‡(
TTYwidth
 <0 || 
TTYrows
 <= 0) {

242 
TTYwidth
 = 
SCREEN_WIDTH
;

243 
TTYrows
 = 
SCREEN_ROWS
;

245 
	}
}

251 
STATIC
 

252 
	$cﬁumns
(
ac
, 
av
)

253 
ac
;

254 
CHAR
 **
av
;

256 
CHAR
 *
p
;

257 
i
;

258 
j
;

259 
k
;

260 
Àn
;

261 
skù
;

262 
l⁄ge°
;

263 
cﬁs
;

266 
l⁄ge°
 = 0, 
i
 = 0; i < 
ac
; i++)

267 i‡((
j
 = 
	`°æí
((*)
av
[
i
])Ë> 
l⁄ge°
)

268 
l⁄ge°
 = 
j
;

269 
cﬁs
 = 
TTYwidth
 / (
l⁄ge°
 + 3);

271 
	`TTYputs
((
CHAR
 *)
NEWLINE
);

272 
skù
 = 
ac
 / 
cﬁs
 + 1, 
i
 = 0; i < skip; i++) {

273 
j
 = 
i
; j < 
ac
; j +
skù
) {

274 
p
 = 
av
[
j
], 
Àn
 = 
	`°æí
((*Ì), 
k
 =Üen; --k >= 0;Ö++)

275 
	`TTYput
(*
p
);

276 i‡(
j
 + 
skù
 < 
ac
)

277 ++
Àn
 < 
l⁄ge°
 + 3)

278 
	`TTYput
(' ');

280 
	`TTYputs
((
CHAR
 *)
NEWLINE
);

282 
	}
}

284 
STATIC
 

285 
	$ªposôi⁄
()

287 
i
;

288 
CHAR
 *
p
;

290 
	`TTYput
('\r');

291 
	`TTYputs
((
CONST
 
CHAR
 *)
Prom±
);

292 
i
 = 
Poöt
, 
p
 = 
Löe
; --i >= 0;Ö++)

293 
	`TTYshow
(*
p
);

294 
	}
}

296 
STATIC
 

297 
	$À·
(
Ch™ge
)

298 
STATUS
 
Ch™ge
;

300 
	`TTYback
();

301 i‡(
Poöt
) {

302 i‡(
	`ISCTL
(
Löe
[
Poöt
 - 1]))

303 
	`TTYback
();

304 i‡(
æ_mëa_ch¨s
 && 
	`ISMETA
(
Löe
[
Poöt
 - 1])) {

305 
	`TTYback
();

306 
	`TTYback
();

309 i‡(
Ch™ge
 =
CSmove
)

310 
Poöt
--;

311 
	}
}

313 
STATIC
 

314 
	$right
(
Ch™ge
)

315 
STATUS
 
Ch™ge
;

317 
	`TTYshow
(
Löe
[
Poöt
]);

318 i‡(
Ch™ge
 =
CSmove
)

319 
Poöt
++;

320 
	}
}

322 
STATIC
 
STATUS


323 
	$rög_bñl
()

325 
	`TTYput
('\07');

326 
	`TTYÊush
();

327  
CS°ay
;

328 
	}
}

330 
STATIC
 
STATUS


331 
	$do_ma¸o
(
c
)

332 
c
;

334 
CHAR
 
«me
[4];

336 
«me
[0] = '_';

337 
«me
[1] = 
c
;

338 
«me
[2] = '_';

339 
«me
[3] = '\0';

341 i‡((
I≈ut
 = (
CHAR
 *)
	`gëív
((*)
«me
)Ë=
NULL
) {

342 
I≈ut
 = 
NIL
;

343  
	`rög_bñl
();

345  
CS°ay
;

346 
	}
}

348 
STATIC
 
STATUS


349 
	$do_f‹w¨d
(
move
)

350 
STATUS
 
move
;

352 
i
;

353 
CHAR
 *
p
;

355 
i
 = 0;

357 
p
 = &
Löe
[
Poöt
];

358  ; 
Poöt
 < 
End
 && (*
p
 =' ' || !
	`iß um
(*p)); Point++,Ö++)

359 i‡(
move
 =
CSmove
)

360 
	`right
(
CS°ay
);

362 ; 
Poöt
 < 
End
 && 
	`iß um
(*
p
); Point++,Ö++)

363 i‡(
move
 =
CSmove
)

364 
	`right
(
CS°ay
);

366 i‡(
Poöt
 =
End
)

368 } ++
i
 < 
Rïót
);

370  
CS°ay
;

371 
	}
}

373 
STATIC
 
STATUS


374 
	$do_ˇ£
(
ty≥
)

375 
CASE
 
ty≥
;

377 
i
;

378 
íd
;

379 
cou¡
;

380 
CHAR
 *
p
;

382 ()
	`do_f‹w¨d
(
CS°ay
);

383 i‡(
OldPoöt
 !
Poöt
) {

384 i‡((
cou¡
 = 
Poöt
 - 
OldPoöt
) < 0)

385 
cou¡
 = -count;

386 
Poöt
 = 
OldPoöt
;

387 i‡((
íd
 = 
Poöt
 + 
cou¡
Ë> 
End
)

388 
íd
 = 
End
;

389 
i
 = 
Poöt
, 
p
 = &
Löe
[i]; i < 
íd
; i++,Ö++) {

390 i‡(
ty≥
 =
TOuµî
) {

391 i‡(
	`i¶owî
(*
p
))

392 *
p
 = 
	`touµî
(*p);

394 i‡(
	`isuµî
(*
p
))

395 *
p
 = 
	`tﬁowî
(*p);

396 
	`right
(
CSmove
);

399  
CS°ay
;

400 
	}
}

402 
STATIC
 
STATUS


403 
	$ˇ£_down_w‹d
()

405  
	`do_ˇ£
(
TOlowî
);

406 
	}
}

408 
STATIC
 
STATUS


409 
	$ˇ£_up_w‹d
()

411  
	`do_ˇ£
(
TOuµî
);

412 
	}
}

414 
STATIC
 

415 
	$˚ﬁ
()

417 
exåas
;

418 
i
;

419 
CHAR
 *
p
;

421 
exåas
 = 0, 
i
 = 
Poöt
, 
p
 = &
Löe
[i]; i <
End
; i++,Ö++) {

422 
	`TTYput
(' ');

423 i‡(
	`ISCTL
(*
p
)) {

424 
	`TTYput
(' ');

425 
exåas
++;

427 i‡(
æ_mëa_ch¨s
 && 
	`ISMETA
(*
p
)) {

428 
	`TTYput
(' ');

429 
	`TTYput
(' ');

430 
exåas
 += 2;

434 
i
 +
exåas
; i > 
Poöt
; i--)

435 
	`TTYback
();

436 
	}
}

438 
STATIC
 

439 
	$˛ór_löe
()

441 
Poöt
 = -
	`°æí
(
Prom±
);

442 
	`TTYput
('\r');

443 
	`˚ﬁ
();

444 
Poöt
 = 0;

445 
End
 = 0;

446 
Löe
[0] = '\0';

447 
	}
}

449 
STATIC
 
STATUS


450 
	$ö£π_°rög
(
p
)

451 
CHAR
 *
p
;

453 
SIZE_T
 
Àn
;

454 
i
;

455 
CHAR
 *
√w
;

456 
CHAR
 *
q
;

458 
Àn
 = 
	`°æí
((*)
p
);

459 i‡(
End
 + 
Àn
 >
Lígth
) {

460 i‡((
√w
 = 
	`NEW
(
CHAR
, 
Lígth
 + 
Àn
 + 
MEM_INC
)Ë=
NULL
)

461  
CS°ay
;

462 i‡(
Lígth
) {

463 
	`COPYFROMTO
(
√w
, 
Löe
, 
Lígth
);

464 
	`DISPOSE
(
Löe
);

466 
Löe
 = 
√w
;

467 
Lígth
 +
Àn
 + 
MEM_INC
;

470 
q
 = &
Löe
[
Poöt
], 
i
 = 
End
 - Point; --i >= 0; )

471 
q
[
Àn
 + 
i
] = q[i];

472 
	`COPYFROMTO
(&
Löe
[
Poöt
], 
p
, 
Àn
);

473 
End
 +
Àn
;

474 
Löe
[
End
] = '\0';

475 
	`TTY°rög
(&
Löe
[
Poöt
]);

476 
Poöt
 +
Àn
;

478  
Poöt
 =
End
 ? 
CS°ay
 : 
CSmove
;

479 
	}
}

481 
STATIC
 
STATUS


482 
	$ªdi•œy
()

484 
	`TTYputs
((
CONST
 
CHAR
 *)
NEWLINE
);

485 
	`TTYputs
((
CONST
 
CHAR
 *)
Prom±
);

486 
	`TTY°rög
(
Löe
);

487  
CSmove
;

488 
	}
}

490 
STATIC
 
STATUS


491 
	$toggÀ_mëa_mode
()

493 
æ_mëa_ch¨s
 = !Ñl_meta_chars;

494  
	`ªdi•œy
();

495 
	}
}

498 
STATIC
 
CHAR
 *

499 
	$√xt_hi°
()

501  
H
.
Pos
 >H.
Size
 - 1 ? 
NULL
 : H.
Löes
[++H.Pos];

502 
	}
}

504 
STATIC
 
CHAR
 *

505 
	$¥ev_hi°
()

507  
H
.
Pos
 =0 ? 
NULL
 : H.
Löes
[--H.Pos];

508 
	}
}

510 
STATIC
 
STATUS


511 
	$do_ö£π_hi°
(
p
)

512 
CHAR
 *
p
;

514 i‡(
p
 =
NULL
)

515  
	`rög_bñl
();

516 
Poöt
 = 0;

517 
	`ªposôi⁄
();

518 
	`˚ﬁ
();

519 
End
 = 0;

520  
	`ö£π_°rög
(
p
);

521 
	}
}

523 
STATIC
 
STATUS


524 
	$do_hi°
(
move
)

525 
CHAR
 *(*
move
)();

527 
CHAR
 *
p
;

528 
i
;

530 
i
 = 0;

532 i‡((
p
 = (*
move
)()Ë=
NULL
)

533  
	`rög_bñl
();

534 } ++
i
 < 
Rïót
);

535  
	`do_ö£π_hi°
(
p
);

536 
	}
}

538 
STATIC
 
STATUS


539 
	$h_√xt
()

541  
	`do_hi°
(
√xt_hi°
);

542 
	}
}

544 
STATIC
 
STATUS


545 
	$h_¥ev
()

547  
	`do_hi°
(
¥ev_hi°
);

548 
	}
}

550 
STATIC
 
STATUS


551 
	$h_fú°
()

553  
	`do_ö£π_hi°
(
H
.
Löes
[H.
Pos
 = 0]);

554 
	}
}

556 
STATIC
 
STATUS


557 
	$h_œ°
()

559  
	`do_ö£π_hi°
(
H
.
Löes
[H.
Pos
 = H.
Size
 - 1]);

560 
	}
}

565 
STATIC
 

566 
	$sub°rcmp
(
ãxt
, 
∑t
, 
Àn
)

567 *
ãxt
;

568 *
∑t
;

569 
Àn
;

571 
c
;

573 i‡((
c
 = *
∑t
) == '\0')

574  *
ãxt
 == '\0';

575  ; *
ãxt
;Åext++)

576 i‡(*
ãxt
 =
c
 && 
	`°∫cmp
—ext, 
∑t
, 
Àn
) == 0)

579 
	}
}

581 
STATIC
 
CHAR
 *

582 
	$£¨ch_hi°
(
£¨ch
, 
move
)

583 
CHAR
 *
£¨ch
;

584 
CHAR
 *(*
move
)();

586 
CHAR
 *
ﬁd_£¨ch
;

587 
Àn
;

588 
pos
;

589 (*
m©ch
)();

590 *
∑t
;

593 i‡(
£¨ch
 && *search) {

594 i‡(
ﬁd_£¨ch
)

595 
	`DISPOSE
(
ﬁd_£¨ch
);

596 
ﬁd_£¨ch
 = (
CHAR
 *)
	`°rdup
((*)
£¨ch
);

599 i‡(
ﬁd_£¨ch
 =
NULL
 || *old_search == '\0')

600  
NULL
;

601 
£¨ch
 = 
ﬁd_£¨ch
;

605 i‡(*
£¨ch
 == '^') {

606 
m©ch
 = 
°∫cmp
;

607 
∑t
 = (*)(
£¨ch
 + 1);

610 
m©ch
 = 
sub°rcmp
;

611 
∑t
 = (*)
£¨ch
;

613 
Àn
 = 
	`°æí
(
∑t
);

615 
pos
 = 
H
.
Pos
; (*
move
)(Ë!
NULL
; )

616 i‡((*
m©ch
)((*)
H
.
Löes
[H.
Pos
], 
∑t
, 
Àn
) == 0)

617  
H
.
Löes
[H.
Pos
];

618 
H
.
Pos
 = 
pos
;

619  
NULL
;

620 
	}
}

622 
STATIC
 
STATUS


623 
	$h_£¨ch
()

625 
Sórchög
;

626 
CONST
 *
ﬁd_¥om±
;

627 
CHAR
 *(*
move
)();

628 
CHAR
 *
p
;

630 i‡(
Sórchög
)

631  
	`rög_bñl
();

632 
Sórchög
 = 1;

634 
	`˛ór_löe
();

635 
ﬁd_¥om±
 = 
Prom±
;

636 
Prom±
 = "Search: ";

637 
	`TTYputs
((
CONST
 
CHAR
 *)
Prom±
);

638 
move
 = 
Rïót
 =
NO_ARG
 ? 
¥ev_hi°
 : 
√xt_hi°
;

639 
p
 = 
	`edôöput
();

640 
Prom±
 = 
ﬁd_¥om±
;

641 
Sórchög
 = 0;

642 
	`TTYputs
((
CONST
 
CHAR
 *)
Prom±
);

643 i‡(
p
 =
NULL
 && 
Sig«l
 > 0) {

644 
Sig«l
 = 0;

645 
	`˛ór_löe
();

646  
	`ªdi•œy
();

648 
p
 = 
	`£¨ch_hi°
’, 
move
);

649 
	`˛ór_löe
();

650 i‡(
p
 =
NULL
) {

651 ()
	`rög_bñl
();

652  
	`ªdi•œy
();

654  
	`do_ö£π_hi°
(
p
);

655 
	}
}

657 
STATIC
 
STATUS


658 
	$fd_ch¨
()

660 
i
;

662 
i
 = 0;

664 i‡(
Poöt
 >
End
)

666 
	`right
(
CSmove
);

667 } ++
i
 < 
Rïót
);

668  
CS°ay
;

669 
	}
}

671 
STATIC
 

672 
	$ßve_y™k
(
begö
, 
i
)

673 
begö
;

674 
i
;

676 i‡(
Y™ked
) {

677 
	`DISPOSE
(
Y™ked
);

678 
Y™ked
 = 
NULL
;

681 i‡(
i
 < 1)

684 i‡((
Y™ked
 = 
	`NEW
(
CHAR
, (
SIZE_T
)
i
 + 1)Ë!
NULL
) {

685 
	`COPYFROMTO
(
Y™ked
, &
Löe
[
begö
], 
i
);

686 
Y™ked
[
i
] = '\0';

688 
	}
}

690 
STATIC
 
STATUS


691 
	$dñëe_°rög
(
cou¡
)

692 
cou¡
;

694 
i
;

695 
CHAR
 *
p
;

697 i‡(
cou¡
 <0 || 
End
 =
Poöt
)

698  
	`rög_bñl
();

700 i‡(
cou¡
 =1 && 
Poöt
 =
End
 - 1) {

702 
End
--;

703 
p
 = &
Löe
[
Poöt
];

704 
i
 = 1;

705 
	`TTYput
(' ');

706 i‡(
	`ISCTL
(*
p
)) {

707 
i
 = 2;

708 
	`TTYput
(' ');

710 i‡(
æ_mëa_ch¨s
 && 
	`ISMETA
(*
p
)) {

711 
i
 = 3;

712 
	`TTYput
(' ');

713 
	`TTYput
(' ');

715 
	`TTYbackn
(
i
);

716 *
p
 = '\0';

717  
CSmove
;

719 i‡(
Poöt
 + 
cou¡
 > 
End
 && (count = End - Point) <= 0)

720  
CS°ay
;

722 i‡(
cou¡
 > 1)

723 
	`ßve_y™k
(
Poöt
, 
cou¡
);

725 
p
 = &
Löe
[
Poöt
], 
i
 = 
End
 - (Poöà+ 
cou¡
) + 1; --i >= 0;Ö++)

726 
p
[0] =Ö[
cou¡
];

727 
	`˚ﬁ
();

728 
End
 -
cou¡
;

729 
	`TTY°rög
(&
Löe
[
Poöt
]);

730  
CSmove
;

731 
	}
}

733 
STATIC
 
STATUS


734 
	$bk_ch¨
()

736 
i
;

738 
i
 = 0;

740 i‡(
Poöt
 == 0)

742 
	`À·
(
CSmove
);

743 } ++
i
 < 
Rïót
);

745  
CS°ay
;

746 
	}
}

748 
STATIC
 
STATUS


749 
	$bk_dñ_ch¨
()

751 
i
;

753 
i
 = 0;

755 i‡(
Poöt
 == 0)

757 
	`À·
(
CSmove
);

758 } ++
i
 < 
Rïót
);

760  
	`dñëe_°rög
(
i
);

761 
	}
}

763 
STATIC
 
STATUS


764 
	$kûl_löe
()

766 
i
;

768 i‡(
Rïót
 !
NO_ARG
) {

769 i‡(
Rïót
 < 
Poöt
) {

770 
i
 = 
Poöt
;

771 
Poöt
 = 
Rïót
;

772 
	`ªposôi⁄
();

773 ()
	`dñëe_°rög
(
i
 - 
Poöt
);

775 i‡(
Rïót
 > 
Poöt
) {

776 
	`right
(
CSmove
);

777 ()
	`dñëe_°rög
(
Rïót
 - 
Poöt
 - 1);

779  
CSmove
;

782 
	`ßve_y™k
(
Poöt
, 
End
 - Point);

783 
Löe
[
Poöt
] = '\0';

784 
	`˚ﬁ
();

785 
End
 = 
Poöt
;

786  
CS°ay
;

787 
	}
}

789 
STATIC
 
STATUS


790 
	$ö£π_ch¨
(
c
)

791 
c
;

793 
STATUS
 
s
;

794 
CHAR
 
buff
[2];

795 
CHAR
 *
p
;

796 
CHAR
 *
q
;

797 
i
;

799 i‡(
Rïót
 =
NO_ARG
 || Repeat < 2) {

800 
buff
[0] = 
c
;

801 
buff
[1] = '\0';

802  
	`ö£π_°rög
(
buff
);

805 i‡((
p
 = 
	`NEW
(
CHAR
, 
Rïót
 + 1)Ë=
NULL
)

806  
CS°ay
;

807 
i
 = 
Rïót
, 
q
 = 
p
; --i >= 0; )

808 *
q
++ = 
c
;

809 *
q
 = '\0';

810 
Rïót
 = 0;

811 
s
 = 
	`ö£π_°rög
(
p
);

812 
	`DISPOSE
(
p
);

813  
s
;

814 
	}
}

816 
STATIC
 
STATUS


817 
	$mëa
()

819 
c
;

820 
KEYMAP
 *
kp
;

822 i‡((
c
 = 
	`TTYgë
()Ë=
EOF
)

823  
CSeof
;

824 #if 
	`deföed
(
ANSI_ARROWS
)

826 i‡(
c
 == '[' || c == 'O')

827 
c
 = 
	`TTYgë
()) {

828 :  
	`rög_bñl
();

829 
EOF
:  
CSeof
;

830 'A':  
	`h_¥ev
();

831 'B':  
	`h_√xt
();

832 'C':  
	`fd_ch¨
();

833 'D':  
	`bk_ch¨
();

837 i‡(
	`isdigô
(
c
)) {

838 
Rïót
 = 
c
 - '0'; (¯
	`TTYgë
()Ë!
EOF
 && 
	`isdigô
(c); )

839 
Rïót
 = Rïóà* 10 + 
c
 - '0';

840 
Pushed
 = 1;

841 
PushBack
 = 
c
;

842  
CS°ay
;

845 i‡(
	`isuµî
(
c
))

846  
	`do_ma¸o
(
c
);

847 
kp
 = 
MëaM≠
; kp->
Fun˘i⁄
; kp++)

848 i‡(
kp
->
Key
 =
c
)

849  (*
kp
->
Fun˘i⁄
)();

851  
	`rög_bñl
();

852 
	}
}

854 
STATIC
 
STATUS


855 
	$emacs
(
c
)

856 
c
;

858 
STATUS
 
s
;

859 
KEYMAP
 *
kp
;

861 
OldPoöt
 = 
Poöt
;

862 i‡(
æ_mëa_ch¨s
 && 
	`ISMETA
(
c
)) {

863 
Pushed
 = 1;

864 
PushBack
 = 
	`UNMETA
(
c
);

865  
	`mëa
();

867 
kp
 = 
M≠
; kp->
Fun˘i⁄
; kp++)

868 i‡(
kp
->
Key
 =
c
)

870 
s
 = 
kp
->
Fun˘i⁄
 ? (*kp->Fun˘i⁄)(Ë: 
	`ö£π_ch¨
(()
c
);

871 i‡(!
Pushed
)

873 
Rïót
 = 
NO_ARG
;

874  
s
;

875 
	}
}

877 
STATIC
 
STATUS


878 
	$TTY•ecül
(
c
)

879 
c
;

881 i‡(
	`ISMETA
(
c
))

882  
CSdi•©ch
;

884 i‡(
c
 =
æ_îa£
 || c =
DEL
)

885  
	`bk_dñ_ch¨
();

886 i‡(
c
 =
æ_kûl
) {

887 i‡(
Poöt
 != 0) {

888 
Poöt
 = 0;

889 
	`ªposôi⁄
();

891 
Rïót
 = 
NO_ARG
;

892  
	`kûl_löe
();

894 i‡(
c
 =
æ_eof
 && 
Poöt
 =0 && 
End
 == 0)

895  
CSeof
;

896 i‡(
c
 =
æ_öå
) {

897 
Sig«l
 = 
SIGINT
;

898  
CSsig«l
;

900 i‡(
c
 =
æ_quô
) {

901 
Sig«l
 = 
SIGQUIT
;

902  
CSeof
;

905  
CSdi•©ch
;

906 
	}
}

908 
STATIC
 
CHAR
 *

909 
	$edôöput
()

911 
c
;

913 
Rïót
 = 
NO_ARG
;

914 
OldPoöt
 = 
Poöt
 = 
M¨k
 = 
End
 = 0;

915 
Löe
[0] = '\0';

917 
Sig«l
 = -1;

918 (
c
 = 
	`TTYgë
()Ë!
EOF
)

919 
	`TTY•ecül
(
c
)) {

920 
CSd⁄e
:

921  
Löe
;

922 
CSeof
:

923  
NULL
;

924 
CSsig«l
:

925  (
CHAR
 *)"";

926 
CSmove
:

927 
	`ªposôi⁄
();

929 
CSdi•©ch
:

930 
	`emacs
(
c
)) {

931 
CSd⁄e
:

932  
Löe
;

933 
CSeof
:

934  
NULL
;

935 
CSsig«l
:

936  (
CHAR
 *)"";

937 
CSmove
:

938 
	`ªposôi⁄
();

940 
CSdi•©ch
:

941 
CS°ay
:

945 
CS°ay
:

948  
NULL
;

949 
	}
}

951 
STATIC
 

952 
	$hi°_add
(
p
)

953 
CHAR
 *
p
;

955 
i
;

957 i‡((
p
 = (
CHAR
 *)
	`°rdup
((*Ì)Ë=
NULL
)

959 i‡(
H
.
Size
 < 
HIST_SIZE
)

960 
H
.
Löes
[H.
Size
++] = 
p
;

962 
	`DISPOSE
(
H
.
Löes
[0]);

963 
i
 = 0; i < 
HIST_SIZE
 - 1; i++)

964 
H
.
Löes
[
i
] = H.Lines[i + 1];

965 
H
.
Löes
[
i
] = 
p
;

967 
H
.
Pos
 = H.
Size
 - 1;

968 
	}
}

975 
	$æ_ª£t_ãrmöÆ
(
p
)

976 *
p
;

978 
	}
}

981 
	$æ_öôülize
()

983 
	}
}

986 
	$ªadlöe
(
¥om±
)

987 
CONST
 *
¥om±
;

989 
CHAR
 *
löe
;

990 
s
;

992 i‡(
Löe
 =
NULL
) {

993 
Lígth
 = 
MEM_INC
;

994 i‡((
Löe
 = 
	`NEW
(
CHAR
, 
Lígth
)Ë=
NULL
)

995  
NULL
;

998 
	`TTYöfo
();

999 
	`æ_ây£t
(0);

1000 
	`hi°_add
(
NIL
);

1001 
S¸ìnSize
 = 
SCREEN_INC
;

1002 
S¸ìn
 = 
	`NEW
(, 
S¸ìnSize
);

1003 
Prom±
 = 
¥om±
 ?Örom± : (*)
NIL
;

1004 
	`TTYputs
((
CONST
 
CHAR
 *)
Prom±
);

1005 i‡((
löe
 = 
	`edôöput
()Ë!
NULL
) {

1006 
löe
 = (
CHAR
 *)
	`°rdup
((*)line);

1007 
	`TTYputs
((
CHAR
 *)
NEWLINE
);

1008 
	`TTYÊush
();

1010 
	`æ_ây£t
(1);

1011 
	`DISPOSE
(
S¸ìn
);

1012 
	`DISPOSE
(
H
.
Löes
[--H.
Size
]);

1013 i‡(
Sig«l
 > 0) {

1014 
s
 = 
Sig«l
;

1015 
Sig«l
 = 0;

1016 ()
	`kûl
(
	`gëpid
(), 
s
);

1018  (*)
löe
;

1019 
	}
}

1022 
	$add_hi°‹y
(
p
)

1023 *
p
;

1025 i‡(
p
 =
NULL
 || *p == '\0')

1028 #if 
	`deföed
(
UNIQUE_HISTORY
)

1029 i‡(
H
.
Pos
 && 
	`°rcmp
(
p
, (*ËH.
Löes
[H.Pos - 1]) == 0)

1032 i‡(
H
.
Size
 && 
	`°rcmp
(
p
, (*ËH.
Löes
[H.Size - 1]) == 0)

1034 
	`hi°_add
((
CHAR
 *)
p
);

1035 
	}
}

1038 
STATIC
 
STATUS


1039 
	$beg_löe
()

1041 i‡(
Poöt
) {

1042 
Poöt
 = 0;

1043  
CSmove
;

1045  
CS°ay
;

1046 
	}
}

1048 
STATIC
 
STATUS


1049 
	$dñ_ch¨
()

1051  
	`dñëe_°rög
(
Rïót
 =
NO_ARG
 ? 1 : Repeat);

1052 
	}
}

1054 
STATIC
 
STATUS


1055 
	$íd_löe
()

1057 i‡(
Poöt
 !
End
) {

1058 
Poöt
 = 
End
;

1059  
CSmove
;

1061  
CS°ay
;

1062 
	}
}

1068 
STATIC
 
CHAR
 *

1069 
	$föd_w‹d
()

1071 
SEPS
[] = "#:;&|^$=`'{}()<>\n\t ";

1072 
CHAR
 *
p
;

1073 
CHAR
 *
√w
;

1074 
SIZE_T
 
Àn
;

1076 
p
 = &
Löe
[
Poöt
];Ö > Löê&& 
	`°rchr
(
SEPS
, (Ì[-1]Ë=
NULL
;Ö--)

1078 
Àn
 = 
Poöt
 - (
p
 - 
Löe
) + 1;

1079 i‡((
√w
 = 
	`NEW
(
CHAR
, 
Àn
)Ë=
NULL
)

1080  
NULL
;

1081 
	`COPYFROMTO
(
√w
, 
p
, 
Àn
);

1082 
√w
[
Àn
 - 1] = '\0';

1083  
√w
;

1084 
	}
}

1086 
STATIC
 
STATUS


1087 
	$c_possibÀ
()

1089 
CHAR
 **
av
;

1090 
CHAR
 *
w‹d
;

1091 
ac
;

1093 
w‹d
 = 
	`föd_w‹d
();

1094 
ac
 = 
	`æ_li°_possib
((*)
w‹d
, (***)&
av
);

1095 i‡(
w‹d
)

1096 
	`DISPOSE
(
w‹d
);

1097 i‡(
ac
) {

1098 
	`cﬁumns
(
ac
, 
av
);

1099 --
ac
 >= 0)

1100 
	`DISPOSE
(
av
[
ac
]);

1101 
	`DISPOSE
(
av
);

1102  
CSmove
;

1104  
	`rög_bñl
();

1105 
	}
}

1107 
STATIC
 
STATUS


1108 
	$c_com∂ëe
()

1110 
CHAR
 *
p
;

1111 
CHAR
 *
w‹d
;

1112 
unique
;

1113 
STATUS
 
s
;

1115 
w‹d
 = 
	`föd_w‹d
();

1116 
p
 = (
CHAR
 *)
	`æ_com∂ëe
((*)
w‹d
, &
unique
);

1117 i‡(
w‹d
)

1118 
	`DISPOSE
(
w‹d
);

1119 i‡(
p
 && *p) {

1120 
s
 = 
	`ö£π_°rög
(
p
);

1121 #i‡
ANNOYING_NOISE


1122 i‡(!
unique
)

1123 ()
	`rög_bñl
();

1125 
	`DISPOSE
(
p
);

1126  
s
;

1128  
	`c_possibÀ
();

1129 
	}
}

1131 
STATIC
 
STATUS


1132 
	$ac˚±_löe
()

1134 
Löe
[
End
] = '\0';

1135  
CSd⁄e
;

1136 
	}
}

1138 
STATIC
 
STATUS


1139 
	$å™•o£
()

1141 
CHAR
 
c
;

1143 i‡(
Poöt
) {

1144 i‡(
Poöt
 =
End
)

1145 
	`À·
(
CSmove
);

1146 
c
 = 
Löe
[
Poöt
 - 1];

1147 
	`À·
(
CS°ay
);

1148 
Löe
[
Poöt
 - 1] = Line[Point];

1149 
	`TTYshow
(
Löe
[
Poöt
 - 1]);

1150 
Löe
[
Poöt
++] = 
c
;

1151 
	`TTYshow
(
c
);

1153  
CS°ay
;

1154 
	}
}

1156 
STATIC
 
STATUS


1157 
	$quŸe
()

1159 
c
;

1161  (
c
 = 
	`TTYgë
()Ë=
EOF
 ? 
CSeof
 : 
	`ö£π_ch¨
(()c);

1162 
	}
}

1164 
STATIC
 
STATUS


1165 
	$wùe
()

1167 
i
;

1169 i‡(
M¨k
 > 
End
)

1170  
	`rög_bñl
();

1172 i‡(
Poöt
 > 
M¨k
) {

1173 
i
 = 
Poöt
;

1174 
Poöt
 = 
M¨k
;

1175 
M¨k
 = 
i
;

1176 
	`ªposôi⁄
();

1179  
	`dñëe_°rög
(
M¨k
 - 
Poöt
);

1180 
	}
}

1182 
STATIC
 
STATUS


1183 
	$mk_£t
()

1185 
M¨k
 = 
Poöt
;

1186  
CS°ay
;

1187 
	}
}

1189 
STATIC
 
STATUS


1190 
	$exch™ge
()

1192 
c
;

1194 i‡((
c
 = 
	`TTYgë
()Ë!
	`CTL
('X'))

1195  
c
 =
EOF
 ? 
CSeof
 : 
	`rög_bñl
();

1197 i‡((
c
 = 
M¨k
Ë<
End
) {

1198 
M¨k
 = 
Poöt
;

1199 
Poöt
 = 
c
;

1200  
CSmove
;

1202  
CS°ay
;

1203 
	}
}

1205 
STATIC
 
STATUS


1206 
	$y™k
()

1208 i‡(
Y™ked
 && *Yanked)

1209  
	`ö£π_°rög
(
Y™ked
);

1210  
CS°ay
;

1211 
	}
}

1213 
STATIC
 
STATUS


1214 
	$c›y_ªgi⁄
()

1216 i‡(
M¨k
 > 
End
)

1217  
	`rög_bñl
();

1219 i‡(
Poöt
 > 
M¨k
)

1220 
	`ßve_y™k
(
M¨k
, 
Poöt
 - Mark);

1222 
	`ßve_y™k
(
Poöt
, 
M¨k
 - Point);

1224  
CS°ay
;

1225 
	}
}

1227 
STATIC
 
STATUS


1228 
	$move_to_ch¨
()

1230 
c
;

1231 
i
;

1232 
CHAR
 *
p
;

1234 i‡((
c
 = 
	`TTYgë
()Ë=
EOF
)

1235  
CSeof
;

1236 
i
 = 
Poöt
 + 1, 
p
 = &
Löe
[i]; i < 
End
; i++,Ö++)

1237 i‡(*
p
 =
c
) {

1238 
Poöt
 = 
i
;

1239  
CSmove
;

1241  
CS°ay
;

1242 
	}
}

1244 
STATIC
 
STATUS


1245 
	$fd_w‹d
()

1247  
	`do_f‹w¨d
(
CSmove
);

1248 
	}
}

1250 
STATIC
 
STATUS


1251 
	$fd_kûl_w‹d
()

1253 
i
;

1255 ()
	`do_f‹w¨d
(
CS°ay
);

1256 i‡(
OldPoöt
 !
Poöt
) {

1257 
i
 = 
Poöt
 - 
OldPoöt
;

1258 
Poöt
 = 
OldPoöt
;

1259  
	`dñëe_°rög
(
i
);

1261  
CS°ay
;

1262 
	}
}

1264 
STATIC
 
STATUS


1265 
	$bk_w‹d
()

1267 
i
;

1268 
CHAR
 *
p
;

1270 
i
 = 0;

1272 
p
 = &
Löe
[
Poöt
];Ö > Löê&& !
	`iß um
(p[-1]);Ö--)

1273 
	`À·
(
CSmove
);

1275 ; 
p
 > 
Löe
 &&Ö[-1] !' ' && 
	`iß um
(p[-1]);Ö--)

1276 
	`À·
(
CSmove
);

1278 i‡(
Poöt
 == 0)

1280 } ++
i
 < 
Rïót
);

1282  
CS°ay
;

1283 
	}
}

1285 
STATIC
 
STATUS


1286 
	$bk_kûl_w‹d
()

1288 ()
	`bk_w‹d
();

1289 i‡(
OldPoöt
 !
Poöt
)

1290  
	`dñëe_°rög
(
OldPoöt
 - 
Poöt
);

1291  
CS°ay
;

1292 
	}
}

1294 
STATIC
 

1295 
	$¨gify
(
löe
, 
avp
)

1296 
CHAR
 *
löe
;

1297 
CHAR
 ***
avp
;

1299 
CHAR
 *
c
;

1300 
CHAR
 **
p
;

1301 
CHAR
 **
√w
;

1302 
ac
;

1303 
i
;

1305 
i
 = 
MEM_INC
;

1306 i‡((*
avp
 = 
p
 = 
	`NEW
(
CHAR
*, 
i
))=
NULL
)

1309 
c
 = 
löe
; 
	`is•a˚
(*c); c++)

1311 i‡(*
c
 == '\n' || *c == '\0')

1314 
ac
 = 0, 
p
[ac++] = 
c
; *c && *c != '\n'; ) {

1315 i‡(
	`is•a˚
(*
c
)) {

1316 *
c
++ = '\0';

1317 i‡(*
c
 && *c != '\n') {

1318 i‡(
ac
 + 1 =
i
) {

1319 
√w
 = 
	`NEW
(
CHAR
*, 
i
 + 
MEM_INC
);

1320 i‡(
√w
 =
NULL
) {

1321 
p
[
ac
] = 
NULL
;

1322  
ac
;

1324 
	`COPYFROMTO
(
√w
, 
p
, 
i
 *  (**));

1325 
i
 +
MEM_INC
;

1326 
	`DISPOSE
(
p
);

1327 *
avp
 = 
p
 = 
√w
;

1329 
p
[
ac
++] = 
c
;

1333 
c
++;

1335 *
c
 = '\0';

1336 
p
[
ac
] = 
NULL
;

1337  
ac
;

1338 
	}
}

1340 
STATIC
 
STATUS


1341 
	$œ°_¨gumít
()

1343 
CHAR
 **
av
;

1344 
CHAR
 *
p
;

1345 
STATUS
 
s
;

1346 
ac
;

1348 i‡(
H
.
Size
 =1 || (
p
 = H.
Löes
[H.Sizê- 2]Ë=
NULL
)

1349  
	`rög_bñl
();

1351 i‡((
p
 = (
CHAR
 *)
	`°rdup
((*Ì)Ë=
NULL
)

1352  
CS°ay
;

1353 
ac
 = 
	`¨gify
(
p
, &
av
);

1355 i‡(
Rïót
 !
NO_ARG
)

1356 
s
 = 
Rïót
 < 
ac
 ? 
	`ö£π_°rög
(
av
[Rïót]Ë: 
	`rög_bñl
();

1358 
s
 = 
ac
 ? 
	`ö£π_°rög
(
av
[a¯- 1]Ë: 
CS°ay
;

1360 i‡(
ac
)

1361 
	`DISPOSE
(
av
);

1362 
	`DISPOSE
(
p
);

1363  
s
;

1364 
	}
}

1366 
STATIC
 
KEYMAP
 
	gM≠
[33] = {

1367 { 
CTL
('@'), 
mk_£t
 },

1368 { 
CTL
('A'), 
beg_löe
 },

1369 { 
CTL
('B'), 
bk_ch¨
 },

1370 { 
CTL
('D'), 
dñ_ch¨
 },

1371 { 
CTL
('E'), 
íd_löe
 },

1372 { 
CTL
('F'), 
fd_ch¨
 },

1373 { 
CTL
('G'), 
rög_bñl
 },

1374 { 
CTL
('H'), 
bk_dñ_ch¨
 },

1375 { 
CTL
('I'), 
c_com∂ëe
 },

1376 { 
CTL
('J'), 
ac˚±_löe
 },

1377 { 
CTL
('K'), 
kûl_löe
 },

1378 { 
CTL
('L'), 
ªdi•œy
 },

1379 { 
CTL
('M'), 
ac˚±_löe
 },

1380 { 
CTL
('N'), 
h_√xt
 },

1381 { 
CTL
('O'), 
rög_bñl
 },

1382 { 
CTL
('P'), 
h_¥ev
 },

1383 { 
CTL
('Q'), 
rög_bñl
 },

1384 { 
CTL
('R'), 
h_£¨ch
 },

1385 { 
CTL
('S'), 
rög_bñl
 },

1386 { 
CTL
('T'), 
å™•o£
 },

1387 { 
CTL
('U'), 
rög_bñl
 },

1388 { 
CTL
('V'), 
quŸe
 },

1389 { 
CTL
('W'), 
bk_kûl_w‹d
 },

1390 { 
CTL
('X'), 
exch™ge
 },

1391 { 
CTL
('Y'), 
y™k
 },

1392 { 
CTL
('Z'), 
íd_löe
 },

1393 { 
CTL
('['), 
mëa
 },

1394 { 
CTL
(']'), 
move_to_ch¨
 },

1395 { 
CTL
('^'), 
rög_bñl
 },

1396 { 
CTL
('_'), 
rög_bñl
 },

1397 { 0, 
NULL
 }

1400 
STATIC
 
KEYMAP
 
	gMëaM≠
[17]= {

1401 { 
CTL
('H'), 
wùe
 },

1402 { 
DEL
, 
wùe
 },

1403 { ' ', 
mk_£t
 },

1404 { '.', 
œ°_¨gumít
 },

1405 { '<', 
h_fú°
 },

1406 { '>', 
h_œ°
 },

1407 { '?', 
c_possibÀ
 },

1408 { 'b', 
bk_w‹d
 },

1409 { 'd', 
fd_kûl_w‹d
 },

1410 { 'f', 
fd_w‹d
 },

1411 { 'l', 
ˇ£_down_w‹d
 },

1412 { 'm', 
toggÀ_mëa_mode
 },

1413 { 'u', 
ˇ£_up_w‹d
 },

1414 { 'y', 
y™k
 },

1415 { 'w', 
c›y_ªgi⁄
 },

1416 { 0, 
NULL
 }

	@editline.h

5 
	~<°dio.h
>

6 #if 
deföed
(
HAVE_STDLIB
)

7 
	~<°dlib.h
>

8 
	~<°rög.h
>

10 #if 
deföed
(
SYS_UNIX
)

11 
	~"unix.h
"

13 #if 
deföed
(
SYS_OS9
)

14 
	~"os9.h
"

17 #if !
deföed
(
SIZE_T
)

18 
	#SIZE_T
 

	)

21 
	tCHAR
;

23 #if 
deföed
(
HIDE
)

24 
	#STATIC
 

	)

26 
	#STATIC


	)

29 #if !
deföed
(
CONST
)

30 #if 
deföed
(
__STDC__
)

31 
	#CONST
 c⁄°

	)

33 
	#CONST


	)

38 
	#MEM_INC
 64

	)

39 
	#SCREEN_INC
 256

	)

41 
	#DISPOSE
(
p
Ë
	`‰ì
((*)’))

	)

42 
	#NEW
(
T
, 
c
Ë\

	)

43 ((
	gT
 *)
mÆloc
(()( (
T
Ë* (
c
))))

44 
	#RENEW
(
p
, 
T
, 
c
Ë\

	)

45 (
	gp
 = (
T
 *)
ªÆloc
((*)(
p
), ()( (TË* (
c
))))

46 
	#COPYFROMTO
(
√w
, 
p
, 
Àn
Ë\

	)

47 ()
mem˝y
((*)(
√w
), (*)(
p
), ()(
Àn
))

53 
æ_eof
;

54 
æ_îa£
;

55 
æ_öå
;

56 
æ_kûl
;

57 
æ_quô
;

58 *
æ_com∂ëe
();

59 
æ_li°_possib
();

60 
æ_ây£t
();

61 
æ_add_¶ash
();

63 #if !
deföed
(
HAVE_STDLIB
)

64 *
gëív
();

65 *
mÆloc
();

66 *
ªÆloc
();

67 *
mem˝y
();

68 *
°rˇt
();

69 *
°rchr
();

70 *
°ºchr
();

71 *
°r˝y
();

72 
°rcmp
();

73 
°æí
();

74 
°∫cmp
();

77 #if 
deföed
(
NEED_STRDUP
)

78 *
°rdup
();

	@edparams.c

5 
	#nû
 0

	)

6 
	#_POSIX_SOURCE
 1

	)

7 
	#_MINIX
 1

	)

8 
	~<°ddef.h
>

9 
	~<sys/ty≥s.h
>

10 
	~<sys/°©.h
>

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

13 
	~<°rög.h
>

14 
	~<time.h
>

15 
	~<uni°d.h
>

16 
	~<f˙é.h
>

17 
	~<sig«l.h
>

18 
	~<î∫o.h
>

19 
	~<ãrmios.h
>

22 
	gboŸ_magic
[] = { 0x31, 0xC0, 0x8E, 0xD8, 0xFA, 0x8E, 0xD0, 0xBC };

24 
	#SECTOR_SIZE
 512

	)

26 
	#PARAMSEC
 1

	)

28 
	#ESC
 1234

	)

30 
	gdevi˚
;

31 *
	gdev«me
;

33 
ãrmios
 
	gãrmbuf
;

34 
	gi°ty
= 1;

36 
	$ªp‹t
(*
œbñ
)

39 
	`Ârötf
(
°dîr
, "ed∑øms: %s: %s\n", 
œbñ
, 
	`°ªº‹
(
î∫o
));

40 
	}
}

42 
	$Áèl
(*
œbñ
)

44 
	`ªp‹t
(
œbñ
);

45 
	`exô
(1);

46 
	}
}

48 *
	$Æloc
(*
m
, 
size_t
 
n
)

50 
m
m =
nû
 ? 
	`mÆloc
(
n
Ë: 
	`ªÆloc
(m,Ç);

51 i‡(
m
 =
nû
Ë
	`Áèl
("");

52  
m
;

53 
	}
}

55 
	gnuŒ
[]= "";

57 
	$s‰ì
(*
s
)

60 i‡(
s
 !
nû
 && s !
nuŒ
Ë
	`‰ì
(s);

61 
	}
}

63 *
	$c›y°r
(*
s
)

66 *
c
;

68 i‡(*
s
 =0Ë 
nuŒ
;

69 
c

	`Æloc
(
nû
, (
	`°æí
(
s
) + 1) * ());

70 
	`°r˝y
(
c
, 
s
);

71  
c
;

72 
	}
}

74 
	$gëch
()

76 
c
;

78 
	`ªad
(0, &
c
, 1)) {

80 i‡(
î∫o
 !
EINTR
Ë
	`Áèl
("");

81 (
ESC
);

83 i‡(
i°ty
Ë
	`putch¨
('\n');

84 
	`exô
(0);

86  
c
 & 0xFF;

88 
	}
}

91 
	#E_SPECIAL
 0x01

	)

92 
	#E_DEV
 0x02

	)

93 
	#E_RESERVED
 0x04

	)

94 
	#E_STICKY
 0x07

	)

96 
	#E_VAR
 0x08

	)

97 
	#E_FUNCTION
 0x10

	)

99 
	sívú⁄mít
 {

100 
ívú⁄mít
 *
	m√xt
;

101 
	mÊags
;

102 *
	m«me
;

103 *
	m¨g
;

104 *
	mvÆue
;

105 *
	mdefvÆ
;

106 } 
	tívú⁄mít
;

108 
ívú⁄mít
 *
	gív
;

110 
	#¨øysize
(
a
Ë(◊Ë/ (◊)[0]))

	)

111 
	#¨øylimô
(
a
Ë(◊Ë+ 
	`¨øysize
◊))

	)

113 *
	$ªadlöe
()

116 *
löe
;

117 
size_t
 
i
, 
z
;

118 
c
;

120 
i
= 0;

121 
z
= 20;

122 
löe

	`Æloc
(
nû
, 
z
 * ());

125 
c

	`gëch
();

127 i‡(
c
 < ' ' && c != '\n') {

128 
	`¥ötf
("\7Don't use control characters!\n");

129 (
c

	`gëch
()) != '\n') {}

130 
i
= 0;

132 
löe
[
i
++]
c
;

133 i‡(
i
 =
z
) {

134 
z
*= 2;

135 
löe

	`Æloc
÷öe, 
z
 * ());

138 } 
c
 != '\n');

139 
löe
[
i
]= 0;

140  
löe
;

141 
	}
}

143 
	$sug¨
(*
tok
)

146  
	`°rchr
("=(){};\n", 
tok
[0]Ë!
nû
;

147 
	}
}

149 *
	$⁄ëokí
(**
Æöe
, 
¨g
)

154 *
löe
*
Æöe
;

155 
size_t
 
n
;

156 *
tok
;

159 *
löe
 == ' ' || (*line == '\n' &&Üine[1] == '\n'))Üine++;

161 *
Æöe

löe
;

164 i‡((Ë*
löe
 < ' ' && *löê!'\n'Ë 
nû
;

166 i‡(
¨g
) {

168 
dïth
= 0;

170 (Ë*
löe
 >= ' ') {

171 i‡(*
löe
 ='('Ë
dïth
++;

172 i‡(*
löe
 =')' && --
dïth
 < 0) ;

173 
löe
++;

175 
löe
 > *
Æöe
 &&Üine[-1] == ' ')Üine--;

177 i‡(
	`sug¨
(
löe
)) {

179 
löe
++;

182 dÿ
löe
++; (Ë*löê> ' ' && !
	`sug¨
(line));

184 
n

löe
 - *
Æöe
;

185 
tok

	`Æloc
(
nû
, (
n
 + 1) * ());

186 
	`mem˝y
(
tok
, *
Æöe
, 
n
);

187 
tok
[
n
]= 0;

188 i‡(
tok
[0] == '\n')Åok[0]= ';';

190 *
Æöe

löe
;

191  
tok
;

192 
	}
}

196 
	stokí
 {

197 
tokí
 *
	m√xt
;

198 *
	mtokí
;

199 } 
	ttokí
;

201 
tokí
 **
	$tokíize
(
tokí
 **
acmds
, *
löe
, *
fundef
)

210 
fd
*
fundef
;

211 *
tok
;

212 
tokí
 *
√wcmd
;

213 
funsug¨
[]= { '(', 0, ')', '{', '}' };

215 (
tok

	`⁄ëokí
(&
löe
, 
fd
 =1)Ë!
nû
) {

216 i‡(
fd
 == 1) {

217 
fd
++;

219 i‡(
funsug¨
[
fd
] =
tok
[0]) {

221 
fd

tok
[0] == '}' ? 0 : fd + 1;

223 i‡(
fd
 != 0) {

224 i‡(
tok
[0] =';' && 
fd
 == 3) {

226 
	`‰ì
(
tok
);

230 i‡(
fd
 != 4) fd= 0;

232 
√wcmd

	`Æloc
(
nû
, (*newcmd));

233 
√wcmd
->
tokí

tok
;

234 
√wcmd
->
√xt
*
acmds
;

235 *
acmds

√wcmd
;

236 
acmds
&
√wcmd
->
√xt
;

238 *
fundef

fd
;

239  
acmds
;

240 
	}
}

242 
tokí
 *
	gcmds
;

243 
	gîr
;

245 *
	$p›tokí
()

248 
tokí
 *
cmd

cmds
;

249 *
tok

cmd
->
tokí
;

251 
cmds

cmd
->
√xt
;

252 
	`‰ì
(
cmd
);

254  
tok
;

255 
	}
}

257 
	$voidtokí
()

260 
	`‰ì
(
	`p›tokí
());

261 
	}
}

263 
	gå≠sig
;

265 
	$å≠
(
sig
)

267 
å≠sig

sig
;

268 
	`sig«l
(
sig
, 
å≠
);

269 
	`Æ¨m
(1);

270 
	}
}

272 
	$öãºu±
()

275 
	`¥ötf
("[ESC]\n");

276 
å≠sig
= 0;

277 
îr
= 1;

278 
	}
}

280 
	$is_deÁu…
(
ívú⁄mít
 *
e
)

282  (
e
->
Êags
 & 
E_SPECIAL
Ë&&É->
defvÆ
 =
nû
;

283 
	}
}

285 
ívú⁄mít
 **
	$£¨chív
(*
«me
)

287 
ívú⁄mít
 **
´nv
&
ív
;

289 *
´nv
 !
nû
 && 
	`°rcmp
((*´nv)->
«me
,Çame) != 0) {

290 
´nv
&(*´nv)->
√xt
;

293  
´nv
;

294 
	}
}

296 
	#b_gëív
(
«me
Ë(*
	`£¨chív
“ame))

	)

299 *
	$b_vÆue
(*
«me
)

302 
ívú⁄mít
 *
e

	`b_gëív
(
«me
);

304  
e
 =
nû
 || !”->
Êags
 & 
E_VAR
Ë?Çû :É->
vÆue
;

305 
	}
}

307 *
	$b_body
(*
«me
)

310 
ívú⁄mít
 *
e

	`b_gëív
(
«me
);

312  
e
 =
nû
 || !”->
Êags
 & 
E_FUNCTION
Ë?Çû :É->
vÆue
;

313 
	}
}

315 
	$b_£ãnv
(
Êags
, *
«me
, *
¨g
, *
vÆue
)

320 
ívú⁄mít
 **
´nv
, *
e
;

322 i‡(*(
´nv

	`£¨chív
(
«me
)Ë=
nû
) {

323 
e

	`Æloc
(
nû
, (*e));

324 
e
->
«me

	`c›y°r
(name);

325 
e
->
Êags
= flags;

326 
e
->
defvÆ

nû
;

327 
e
->
√xt

nû
;

328 *
´nv

e
;

330 
e
*
´nv
;

335 i‡(
e
->
Êags
 & 
E_RESERVED
 || (e->Êag†& 
E_SPECIAL


336 && (
e
->
Êags
 & 
E_FUNCTION
) != (flags & E_FUNCTION)

337 )Ë 
e
->
Êags
;

339 
e
->
Êags
”->Êag†& 
E_STICKY
) | flags;

340 i‡(
	`is_deÁu…
(
e
)) {

341 
e
->
defvÆ
e->
vÆue
;

343 
	`s‰ì
(
e
->
vÆue
);

345 
	`s‰ì
(
e
->
¨g
);

347 
e
->
¨g

	`c›y°r
(arg);

348 
e
->
vÆue

	`c›y°r
(value);

350 
	}
}

352 
	$b_£tv¨
(
Êags
, *
«me
, *
vÆue
)

355  
	`b_£ãnv
(
Êags
, 
«me
, 
nuŒ
, 
vÆue
);

356 
	}
}

358 
	$b_un£t
(*
«me
)

363 
ívú⁄mít
 **
´nv
, *
e
;

365 i‡((
e
*(
´nv

	`£¨chív
(
«me
))Ë=
nû
) ;

367 i‡(
e
->
Êags
 & 
E_SPECIAL
) {

368 i‡(
e
->
defvÆ
 !
nû
) {

369 
	`s‰ì
(
e
->
¨g
);

370 
e
->
¨g

nuŒ
;

371 
	`s‰ì
(
e
->
vÆue
);

372 
e
->
vÆue
e->
defvÆ
;

373 
e
->
defvÆ

nû
;

376 
	`s‰ì
(
e
->
«me
);

377 
	`s‰ì
(
e
->
¨g
);

378 
	`s‰ì
(
e
->
vÆue
);

379 *
´nv

e
->
√xt
;

380 
	`‰ì
(
e
);

382 
	}
}

384 
	#bëwìn
(
a
, 
c
, 
z
Ë((Ë((cË- (a)Ë<((zË- (a)))

	)

386 
	$a2l
(*
a
)

389 
sign
= 1;

390 
n
= 0;

392 i‡(*
a
 ='-'Ë{ 
sign
= -1;á++; }

394 
	`bëwìn
('0', *
a
, '9')Ë
n
=Ç * 10 + (*a++ - '0');

396  
sign
 * 
n
;

397 
	}
}

399 *
	$ul2a
(
u32_t
 
n
)

402 
num
[3 * (
n
)];

403 *
a

	`¨øylimô
(
num
) - 1;

405 dÿ*--
a
 = (
n
 % 10) + '0'; (n/= 10) > 0);

406  
a
;

407 
	}
}

409 *
	$u2a
(
U16_t
 
n
)

412  
	`ul2a
(
n
);

413 
	}
}

415 
	$gë_∑ømëîs
()

417 
∑øms
[
SECTOR_SIZE
 + 1];

418 
tokí
 **
acmds
;

419 
fundef
= 0;

422 
	`b_£tv¨
(
E_SPECIAL
|
E_VAR
|
E_DEV
, "rootdev", "ram");

423 
	`b_£tv¨
(
E_SPECIAL
|
E_VAR
|
E_DEV
, "ramimagedev", "bootdev");

424 
	`b_£tv¨
(
E_SPECIAL
|
E_VAR
, "ramsize", "0");

425 
	`b_£tv¨
(
E_SPECIAL
|
E_VAR
, "processor", "?");

426 
	`b_£tv¨
(
E_SPECIAL
|
E_VAR
, "bus", "?");

427 
	`b_£tv¨
(
E_SPECIAL
|
E_VAR
, "memsize", "?");

428 
	`b_£tv¨
(
E_SPECIAL
|
E_VAR
, "emssize", "?");

429 
	`b_£tv¨
(
E_SPECIAL
|
E_VAR
, "video", "?");

430 
	`b_£tv¨
(
E_SPECIAL
|
E_VAR
, "chrome", "?");

433 
	`b_£tv¨
(
E_SPECIAL
|
E_VAR
, "image", "minix");

434 
	`b_£tv¨
(
E_SPECIAL
|
E_FUNCTION
, "main", "menu");

437 
	`b_£ãnv
(
E_RESERVED
|
E_FUNCTION
, "\1", "=,Start Minix", "boot");

440 
	`b_£tv¨
(
E_RESERVED
|
E_VAR
, "boŸdev", 
nuŒ
);

441 
	`b_£tv¨
(
E_RESERVED
, "boŸ", 
nuŒ
);

442 
	`b_£tv¨
(
E_RESERVED
, "míu", 
nuŒ
);

443 
	`b_£tv¨
(
E_RESERVED
, "£t", 
nuŒ
);

444 
	`b_£tv¨
(
E_RESERVED
, "un£t", 
nuŒ
);

445 
	`b_£tv¨
(
E_RESERVED
, "ßve", 
nuŒ
);

446 
	`b_£tv¨
(
E_RESERVED
, "ls", 
nuŒ
);

447 
	`b_£tv¨
(
E_RESERVED
, "echo", 
nuŒ
);

448 
	`b_£tv¨
(
E_RESERVED
, "å≠", 
nuŒ
);

449 
	`b_£tv¨
(
E_RESERVED
, "hñp", 
nuŒ
);

450 
	`b_£tv¨
(
E_RESERVED
, "exô", 
nuŒ
);

452 
	`mem£t
(
∑øms
, 0, (params));

455 i‡(
	`l£ek
(
devi˚
, 
PARAMSEC
 * 
SECTOR_SIZE
, 
SEEK_SET
) < 0

456 || 
	`ªad
(
devi˚
, 
∑øms
, 
SECTOR_SIZE
) < 0)

457 
	`Áèl
(
dev«me
);

459 
acmds

	`tokíize
(&
cmds
, 
∑øms
, &
fundef
);

462 (Ë
	`tokíize
(
acmds
, ":;", &
fundef
);

464 
	}
}

466 *
	gadd±r
;

468 
	$add∑rm
(*
n
)

470 *
n
 !0 && *
add±r
 != 0) *addptr++ = *n++;

471 
	}
}

473 
	$ßve_∑ømëîs
()

476 
ívú⁄mít
 *
e
;

477 
∑øms
[
SECTOR_SIZE
 + 1];

480 
	`mem£t
(
∑øms
, '\n', 
SECTOR_SIZE
);

483 
∑øms
[
SECTOR_SIZE
]= 0;

484 
add±r

∑øms
;

486 
e

ív
;É !
nû
;Ée->
√xt
) {

487 i‡(
e
->
Êags
 & 
E_RESERVED
 || 
	`is_deÁu…
(e)) ;

489 
	`add∑rm
(
e
->
«me
);

490 i‡(
e
->
Êags
 & 
E_FUNCTION
) {

491 
	`add∑rm
("(");

492 
	`add∑rm
(
e
->
¨g
);

493 
	`add∑rm
("){");

495 
	`add∑rm
((
e
->
Êags
 & (
E_DEV
|
E_SPECIAL
)) != E_DEV

498 
	`add∑rm
(
e
->
vÆue
);

499 i‡(
e
->
Êags
 & 
E_FUNCTION
Ë
	`add∑rm
("}");

500 i‡(*
add±r
 == 0) {

501 
	`¥ötf
("TheÉnvironment isÅoo big\n");

504 *
add±r
++= '\n';

507 i‡(
	`l£ek
(
devi˚
, 
PARAMSEC
 * 
SECTOR_SIZE
, 
SEEK_SET
) < 0

508 || 
	`wrôe
(
devi˚
, 
∑øms
, 
SECTOR_SIZE
) < 0) {

509 
	`ªp‹t
(
dev«me
);

510 
	`¥ötf
("Can't saveÉnvironment\n");

512 
	}
}

514 
	$show_ív
()

517 
ívú⁄mít
 *
e
;

519 
e

ív
;É !
nû
;Ée->
√xt
) {

520 i‡(
e
->
Êags
 & 
E_RESERVED
) ;

521 i‡(!
i°ty
 && 
	`is_deÁu…
(
e
)) ;

523 i‡(
e
->
Êags
 & 
E_FUNCTION
) {

524 
	`¥ötf
("%s(%sË{%s}\n", 
e
->
«me
,É->
¨g
,É->
vÆue
);

526 
	`¥ötf
(
	`is_deÁu…
(
e
) ? "%s = (%s)\n" : "%s = %s\n",

527 
e
->
«me
,É->
vÆue
);

530 
	}
}

532 
	$numîic
(*
s
)

535 *
n

s
;

537 
	`bëwìn
('0', *
n
, '9'))Ç++;

539  
n
 !
s
 && *n == 0;

540 
	}
}

542 
u32_t
 
	$mûli_time
()

544  1000 * (
u32_t
Ë
	`time
(
nû
);

545 
	}
}

547 
u32_t
 
	$mûli_sö˚
(
u32_t
 
ba£
)

549  
	`mûli_time
(Ë- 
ba£
;

550 
	}
}

552 *
	gTh™dÀr
;

553 
u32_t
 
	gTba£
, 
	gTcou¡
;

555 
	$unscheduÀ
()

558 
	`Æ¨m
(0);

560 i‡(
Th™dÀr
 !
nû
) {

561 
	`‰ì
(
Th™dÀr
);

562 
Th™dÀr

nû
;

564 
	}
}

566 
	$scheduÀ
(
m£c
, *
cmd
)

569 
	`unscheduÀ
();

570 
Th™dÀr

cmd
;

571 
Tba£

	`mûli_time
();

572 
Tcou¡

m£c
;

573 
	`Æ¨m
(1);

574 
	}
}

576 
	$expúed
()

581 
fundef
= 0;

583 i‡(
Th™dÀr
 =
nû
 || 
	`mûli_sö˚
(
Tba£
Ë< 
Tcou¡
)  0;

585 (Ë
	`tokíize
—okíize(&
cmds
, 
Th™dÀr
, &
fundef
), ";", &fundef);

586 
	`unscheduÀ
();

588 
	}
}

590 
	$dñay
(*
m£c
)

596 
sw≠
= 0;

597 
u32_t
 
ba£
, 
cou¡
;

599 i‡(
	`°rcmp
(
m£c
, "swap") == 0) {

600 
sw≠
= 1;

601 
cou¡
= 0;

602 
	`¥ötf
("\nInsertÅheÑoot disketteÅhen hit RETURN\n");

604 i‡((
cou¡

	`a2l
(
m£c
)) > 0) {

605 
ba£

	`mûli_time
();

608 
	`Æ¨m
(1);

611 i‡(
sw≠
) {

612 
	`gëch
()) {

613 
ESC
: 
	`öãºu±
();  0;

614 '\n': 
sw≠
= 0;

617 i‡(
cou¡
 > 0) {

618 
	`∑u£
();

619 i‡(
å≠sig
 =
SIGINT
Ë
	`öãºu±
();

621 } !
	`expúed
()

622 && (
sw≠
 || (
cou¡
 > 0 && 
	`mûli_sö˚
(
ba£
) < count))

625 
	}
}

627 
	ewh©fun
 { 
	mNOFUN
, 
	mSELECT
, 
	mDEFFUN
, 
	mUSERFUN
 } 
	$míufun
(
ívú⁄mít
 *
e
)

629 i‡(!(
e
->
Êags
 & 
E_FUNCTION
Ë||É->
¨g
[0] =0Ë 
NOFUN
;

630 i‡(
e
->
¨g
[1] !','Ë 
SELECT
;

631  
e
->
Êags
 & 
E_RESERVED
 ? 
DEFFUN
 : 
USERFUN
;

632 
	}
}

634 
	$míu
()

641 
fundef
0, 
c
, 
def
= 1;

642 *
choi˚

nû
;

643 
ívú⁄mít
 *
e
;

644 
ãrmios
 
øwãrm
;

646 
øwãrm

ãrmbuf
;

647 
øwãrm
.
c_lÊag
 &~(
ICANON
|
ECHO
|
IEXTEN
);

648 i‡(
	`tc£èâr
(0, 
TCSANOW
, &
øwãrm
Ë< 0Ë
	`Áèl
("");

651 
e

ív
;É !
nû
;Ée->
√xt
Ëi‡(
	`míufun
”Ë=
USERFUN
Ë
def
= 0;

653 
	`¥ötf
("\nHitá keyás follows:\n\n");

656 
e

ív
;É !
nû
;Ée->
√xt
) {

657 
	`míufun
(
e
)) {

658 
DEFFUN
:

659 i‡(!
def
) ;

661 
USERFUN
:

662 
	`¥ötf
(" %¯ %s\n", 
e
->
¨g
[0],É->arg+2);

664 
SELECT
:

665 
	`¥ötf
(" %¯ Sñe˘ %†kî√l\n", 
e
->
¨g
[0],e->
«me
);

673 i‡((
c

	`gëch
()Ë=
ESC
) {

674 i‡(
å≠sig
 =
SIGINT
Ë{ 
	`öãºu±
(); 
ªt
; }

675 i‡(
	`expúed
()Ë
ªt
;

678 
e

ív
;É !
nû
;Ée->
√xt
) {

679 
	`míufun
(
e
)) {

680 
DEFFUN
:

681 i‡(!
def
) ;

682 
USERFUN
:

683 
SELECT
:

684 i‡(
c
 =
e
->
¨g
[0]Ë
choi˚
e->
vÆue
;

687 } 
choi˚
 =
nû
);

690 
	`¥ötf
("%c\n", 
c
);

691 (Ë
	`tokíize
(&
cmds
, 
choi˚
, &
fundef
);

692 
ªt
:

693 i‡(
	`tc£èâr
(0, 
TCSANOW
, &
ãrmbuf
Ë< 0Ë
	`Áèl
("");

694 
	}
}

696 
	$hñp
()

699 
	shñp
 {

700 *
thög
;

701 *
hñp
;

702 } *
pi
;

703 
hñp
 
öfo
[] = {

704 { 
nû
, "Names:" },

712 { 
nû
, "Commands:" },

730 
pi

öfo
;Öò< 
	`¨øylimô
(info);Öi++) {

731 i‡(
pi
->
thög
 !
nû
Ë
	`¥ötf
(" %-24s- ",Öi->thing);

732 
	`¥ötf
("%s\n", 
pi
->
hñp
);

734 
	}
}

736 
	$execuã
()

739 
tokí
 *
£c⁄d
, *
thúd
, *
fouπh
, *
fi·h
, *
£p
;

740 *
«me

cmds
->
tokí
;

741 
size_t
 
n
= 0;

744 
£p

cmds
; sï !
nû
 && sï->
tokí
[0] !';'; sï£p->
√xt
Ë
n
++;

746 i‡((
£c⁄d

cmds
->
√xt
Ë!
nû


747 && (
thúd

£c⁄d
->
√xt
Ë!
nû


748 && (
fouπh

thúd
->
√xt
Ë!
nû
)

749 
fi·h

fouπh
->
√xt
;

752 i‡(
n
 == 0) {

753 
	`voidtokí
();

757 i‡((
n
 == 3 ||Ç == 4)

758 && !
	`sug¨
(
«me
)

759 && 
£c⁄d
->
tokí
[0] == '='

760 && !
	`sug¨
(
thúd
->
tokí
)

761 && (
n
 =3 || (¿=4 && 
thúd
->
tokí
[0] == 'd'

762 && !
	`sug¨
(
fouπh
->
tokí
)

764 *
vÆue

thúd
->
tokí
;

765 
Êags

E_VAR
;

767 i‡(
n
 =4Ë{ 
vÆue

fouπh
->
tokí
; 
Êags
|
E_DEV
; }

769 i‡((
Êags

	`b_£tv¨
(Êags, 
«me
, 
vÆue
)) != 0) {

770 
	`¥ötf
("%†i†®%s\n", 
«me
,

771 
Êags
 & 
E_RESERVED
 ? "reserved word" :

773 
îr
= 1;

775 
cmds
 !
£p
Ë
	`voidtokí
();

779 i‡(
n
 >= 5

780 && !
	`sug¨
(
«me
)

781 && 
£c⁄d
->
tokí
[0] == '('

782 && 
fouπh
->
tokí
[0] == ')'

783 && 
fi·h
->
tokí
[0] == '{'

785 
tokí
 *
fun

fi·h
->
√xt
;

786 
ok
1, 
Êags
;

787 *
body
;

788 
size_t
 
Àn
= 1;

790 
£p

fun
;

791 
£p
 !
nû
 && sï->
tokí
[0] != '}') {

792 
Àn
+
	`°æí
(
£p
->
tokí
) + 1;

793 
£p
£p->
√xt
;

795 i‡(
£p
 =
nû
 || (£p£p->
√xt
) ==Çil

796 || 
£p
->
tokí
[0] != ';'

797 Ë
ok
= 0;

799 i‡(
ok
) {

800 
body

	`Æloc
(
nû
, 
Àn
 * ());

801 *
body
= 0;

803 
fun
->
tokí
[0] != '}') {

804 
	`°rˇt
(
body
, 
fun
->
tokí
);

805 i‡(!
	`sug¨
(
fun
->
tokí
)

806 && !
	`sug¨
(
fun
->
√xt
->
tokí
)

807 Ë
	`°rˇt
(
body
, " ");

808 
fun
fun->
√xt
;

811 i‡((
Êags

	`b_£ãnv
(
E_FUNCTION
, 
«me
,

812 
thúd
->
tokí
, 
body
)) != 0) {

813 
	`¥ötf
("%†i†®%s\n", 
«me
,

814 
Êags
 & 
E_RESERVED
 ? "reserved word" :

816 
îr
= 1;

818 
cmds
 !
£p
Ë
	`voidtokí
();

819 
	`‰ì
(
body
);

824 i‡(
å≠sig
 =
SIGINT
) {

825 
	`öãºu±
();

829 i‡(
n
 >= 1 && (

830 
	`°rcmp
(
«me
, "unset") == 0

831 || 
	`°rcmp
(
«me
, "echo") == 0

833 
cmd

«me
[0];

834 *
¨g

	`p›tokí
();

837 
	`‰ì
(
¨g
);

838 i‡(
cmds
 =
£p
) ;

839 
¨g

	`p›tokí
();

840 i‡(
cmd
 == 'u') {

841 
	`b_un£t
(
¨g
);

843 
	`¥ötf
("%s", 
¨g
);

844 i‡(
cmds
 !
£p
Ë
	`putch¨
(' ');

847 i‡(
cmd
 ='e'Ë
	`putch¨
('\n');

851 i‡(
n
 == 2 && (

852 
	`°rcmp
(
«me
, "boot") == 0

853 || 
	`°rcmp
(
«me
, "delay") == 0

854 || 
	`°rcmp
(
«me
, "ls") == 0

856 i‡(
«me
[0] ='b'Ë
	`¥ötf
("[boŸ %s]\n", 
£c⁄d
->
tokí
);

857 i‡(
«me
[0] ='d'Ë(Ë
	`dñay
(
£c⁄d
->
tokí
);

858 i‡(
«me
[0] ='l'Ë
	`¥ötf
("[l†%s]\n", 
£c⁄d
->
tokí
);

859 
	`voidtokí
();

860 
	`voidtokí
();

864 i‡(
n
 =3 && 
	`°rcmp
(
«me
, "å≠"Ë=0 && 
	`numîic
(
£c⁄d
->
tokí
)) {

865 
m£c

	`a2l
(
£c⁄d
->
tokí
);

867 
	`voidtokí
();

868 
	`voidtokí
();

869 
	`scheduÀ
(
m£c
, 
	`p›tokí
());

873 i‡(
n
 == 1) {

874 *
cmd

	`p›tokí
();

875 *
body
;

876 
fundef
= 0;

877 
ok
= 0;

879 i‡(
	`°rcmp
(
cmd
, "boŸ"Ë=0Ë{ 
	`¥ötf
("[boŸ]\n"); 
ok
= 1; }

880 i‡(
	`°rcmp
(
cmd
, "dñay"Ë=0Ë{ (Ë
	`dñay
("500"); 
ok
= 1; }

881 i‡(
	`°rcmp
(
cmd
, "ls"Ë=0Ë{ 
	`¥ötf
("[ls]\n"); 
ok
= 1; }

882 i‡(
	`°rcmp
(
cmd
, "míu"Ë=0Ë{ 
	`míu
(); 
ok
= 1; }

883 i‡(
	`°rcmp
(
cmd
, "ßve"Ë=0Ë{ 
	`ßve_∑ømëîs
(); 
ok
= 1; }

884 i‡(
	`°rcmp
(
cmd
, "£t"Ë=0Ë{ 
	`show_ív
(); 
ok
= 1; }

885 i‡(
	`°rcmp
(
cmd
, "hñp"Ë=0Ë{ 
	`hñp
(); 
ok
= 1; }

886 i‡(
	`°rcmp
(
cmd
, "exô"Ë=0Ë
	`exô
(0);

889 i‡(
	`°rcmp
(
cmd
, ":"Ë=0Ë
ok
= 1;

892 i‡(!
ok
 && (
body

	`b_body
(
cmd
)Ë!
nû
) {

893 (Ë
	`tokíize
(&
cmds
, 
body
, &
fundef
);

894 
ok
= 1;

896 i‡(!
ok
Ë
	`¥ötf
("%s: unknow¿fun˘i⁄", 
cmd
);

897 
	`‰ì
(
cmd
);

898 i‡(
ok
) ;

901 
	`¥ötf
("Can'tÖarse:");

902 
cmds
 !
£p
) {

903 
	`¥ötf
(" %s", 
cmds
->
tokí
); 
	`voidtokí
();

908 
	`¥ötf
("\nTry 'help'\n");

909 
îr
= 1;

910 
	}
}

912 
	$m⁄ô‹
()

915 *
löe
;

916 
fundef
= 0;

917 
tokí
 **
acmds
&
cmds
;

919 
	`unscheduÀ
();

922 i‡(
i°ty
Ë
	`putch¨
(
fundef
 == 0 ? '>' : '+');

923 
	`fÊush
(
°dout
);

924 
löe

	`ªadlöe
();

925 
acmds

	`tokíize
◊cmds, 
löe
, &
fundef
);

926 
	`‰ì
(
löe
);

927 } 
fundef
 != 0);

928 
	}
}

930 
	$maö
(
¨gc
, **
¨gv
)

933 
i
;

934 
boŸcode
[
SECTOR_SIZE
];

936 i‡(
	`tcgë©å
(0, &
ãrmbuf
Ë< 0Ë
i°ty
= 0;

937 i‡(
¨gc
 > 2Ë
i°ty
= 0;

939 i‡(
¨gc
 < 2) {

940 
	`Ârötf
(
°dîr
, "Usage:Édparams device [command ...]\n");

941 
	`exô
(1);

945 
i
2; i < 
¨gc
; i++) {

946 *
p
;

948 
p

¨gv
[
i
]; *p != 0;Ö++) {

949 i‡((Ë*
p
 < ' ' && *p != '\n') *p= ' ';

953 
dev«me

¨gv
[1];

954 i‡((
devi˚

	`›í
(
dev«me
, 
O_RDWR
 | 
O_CREAT
, 0666)) < 0)

955 
	`Áèl
(
dev«me
);

958 i‡(
	`ªad
(
devi˚
, 
boŸcode
, 
SECTOR_SIZE
) != SECTOR_SIZE

959 || 
	`memcmp
(
boŸcode
, 
boŸ_magic
, (boot_magic)) != 0) {

960 
	`Ârötf
(
°dîr
, "edparams: %s:Çotá bootable Minix device\n",

961 
dev«me
);

962 
	`exô
(1);

966 i‡(
i°ty
Ë
	`¥ötf
("BootÖarametersÉditor.\n");

968 
	`sig«l
(
SIGINT
, 
å≠
);

969 
	`sig«l
(
SIGALRM
, 
å≠
);

972 
	`gë_∑ømëîs
();

974 
i
= 2;

977 
cmds
 !
nû
 || 
i
 < 
¨gc
) {

978 i‡(
cmds
 =
nû
) {

980 
tokí
 **
acmds
;

981 
fundef
= 0;

982 
acmds

	`tokíize
(&
cmds
, 
¨gv
[
i
++], &
fundef
);

983 (Ë
	`tokíize
(
acmds
, ";", &
fundef
);

985 
	`execuã
();

986 i‡(
îr
) {

988 i‡(!
i°ty
Ë
	`exô
(1);

989 
cmds
 !
nû
Ë
	`voidtokí
();

990 
îr
= 0;

993 (Ë
	`expúed
();

997 i‡(
¨gc
 > 2) ;

1000 
	`m⁄ô‹
();

1002 
	`exô
(0);

1003 
	}
}

	@em_abs.h

6 
	#LINO_AD
 0

	)

7 
	#FILN_AD
 4

	)

9 
	#LINO
 (*(*)(
	`_hﬁ0
()+
LINO_AD
))

	)

10 
	#FILN
 (*(**)(
	`_hﬁ0
()+
FILN_AD
))

	)

12 
	#EARRAY
 0

	)

13 
	#ERANGE
 1

	)

14 
	#ESET
 2

	)

15 
	#EIOVFL
 3

	)

16 
	#EFOVFL
 4

	)

17 
	#EFUNFL
 5

	)

18 
	#EIDIVZ
 6

	)

19 
	#EFDIVZ
 7

	)

20 
	#EIUND
 8

	)

21 
	#EFUND
 9

	)

22 
	#ECONV
 10

	)

24 
	#ESTACK
 16

	)

25 
	#EHEAP
 17

	)

26 
	#EILLINS
 18

	)

27 
	#EODDZ
 19

	)

28 
	#ECASE
 20

	)

29 
	#EMEMFLT
 21

	)

30 
	#EBADPTR
 22

	)

31 
	#EBADPC
 23

	)

32 
	#EBADLAE
 24

	)

33 
	#EBADMON
 25

	)

34 
	#EBADLIN
 26

	)

35 
	#EBADGTO
 27

	)

	@endwin.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

3 
	~<ãrmˇp.h
>

5 
	$ídwö
()

7 *
me
;

9 
	`curs_£t
(1);

10 
	`poscur
(
LINES
 - 1, 0);

11 
	`ª‰esh
();

12 
	`çuts
(
me
, 1, 
outc
);

13 
	`dñwö
(
°ds¸
);

14 
	`dñwö
(
curs¸
);

15 
	`dñwö
(
_cursv¨
.
tmpwö
);

16 
	`ª£ây
();

17 (
OK
);

18 
	}
}

	@environ.c

16 #i‡
_EM_PSIZE
==2

17 **
	gívú⁄
 = (**) 0x5353;

19 **
	gívú⁄
 = (**) 0x53535353;

	@errlist.c

7 
	~<î∫o.h
>

9 c⁄° 
	gunknown
[] = "UnknownÉrror";

11 c⁄° *
	g_sys_îæi°
[] = {

52 
unknown
,

53 
unknown
,

54 
unknown
,

55 
unknown
,

56 
unknown
,

57 
unknown
,

58 
unknown
,

59 
unknown
,

60 
unknown
,

61 
unknown
,

81 c⁄° 
	g_sys_√º
 = (
_sys_îæi°
) / (_sys_errlist[0]);

	@errno.c

1 
	~<lib.h
>

4 
	gî∫o
 = 0;

	@esdi_wini.c

27 
	~"kî√l.h
"

28 
	~"drivî.h
"

29 
	~"drvlib.h
"

31 #i‡
ENABLE_ESDI_WINI


34 
	#USE_BUF
 (
DMA_BUF_SIZE
 > 
BLOCK_SIZE
)

	)

39 
	#CMD_REG
 0x3510

	)

40 
	#STAT_REG
 0x3510

	)

41 
	#BCTL_REG
 0x3512

	)

42 
	#BST_REG
 0x3512

	)

43 
	#ATT_REG
 0x3513

	)

44 
	#INT_REG
 0x3513

	)

49 
	#DMA_ENA
 0x80

	)

50 
	#INT_PND
 0x40

	)

51 
	#CMD_PRG
 0x20

	)

52 
	#BUSY
 0x10

	)

53 
	#STR_FUL
 0x08

	)

54 
	#CMD_FUL
 0x04

	)

55 
	#XFR_REQ
 0x02

	)

56 
	#INT_SET
 0x01

	)

61 
	#ATT_CMD
 0x01

	)

62 
	#ATT_EOI
 0x02

	)

63 
	#ATT_ABT
 0x03

	)

64 
	#ATT_RST
 0xE4

	)

69 
	#DMA_EXTCMD
 0x18

	)

70 
	#DMA_EXEC
 0x1A

	)

75 
	#ERR
 (-1Ë

	)

76 
	#ERR_BAD_SECTOR
 (-2Ë

	)

77 
	#MAX_ERRORS
 4

	)

78 
	#MAX_DRIVES
 2

	)

79 
	#NR_DEVICES
 (
MAX_DRIVES
*
DEV_PER_DRIVE
)

	)

81 
	#SUB_PER_DRIVE
 (
NR_PARTITIONS
 * NR_PARTITIONS)

	)

82 
	#NR_SUBDEVS
 (
MAX_DRIVES
 * 
SUB_PER_DRIVE
)

	)

84 
	#SYS_PORTA
 0x92

	)

85 
	#LIGHT_ON
 0xC0

	)

90 
PRIVATE
 
	swöi
 {

91 
	m›í_˘
;

92 
devi˚
 
	m∑π
[
DEV_PER_DRIVE
];

93 
devi˚
 
	msub∑π
[
SUB_PER_DRIVE
];

94 } 
	gwöi
[
MAX_DRIVES
], *
	gw_wn
;

96 
PRIVATE
 
	så™s
 {

97 
i‹eque°_s
 *
	mi›
;

98 
	mblock
;

99 
	mcou¡
;

100 
phys_byãs
 
	mphys
;

101 
phys_byãs
 
	mdma
;

102 } 
	gwå™s
[
NR_IOREQS
];

104 
PRIVATE
 
	gƒ_drives
;

105 
PRIVATE
 
	gcomm™d
[4];

106 
PRIVATE
 
	g°©us_block
[9];

107 
PRIVATE
 
	gdma_ch™√l
;

108 
PRIVATE
 
å™s
 *
	gw_ç
;

109 
PRIVATE
 
	gw_cou¡
;

110 
PRIVATE
 
	gw_√xtblock
;

111 
PRIVATE
 
	gw_›code
;

112 
PRIVATE
 
	gw_drive
;

113 
PRIVATE
 
	gw_i°©
;

114 
PRIVATE
 
devi˚
 *
	gw_dv
;

119 
FORWARD
 
_PROTOTYPE
–
devi˚
 *
w_¥ï¨e
, (device) );

120 
FORWARD
 
_PROTOTYPE
–*
w_«me
, () );

121 
FORWARD
 
_PROTOTYPE
–
w_do_›í
, (
drivî
 *
dp
, 
mesßge
 *
m_±r
) );

122 
FORWARD
 
_PROTOTYPE
–
w_do_˛o£
, (
drivî
 *
dp
, 
mesßge
 *
m_±r
) );

123 
FORWARD
 
_PROTOTYPE
–
w_öô
, () );

124 
FORWARD
 
_PROTOTYPE
–
w_comm™d
, (
devi˚
, 
cmd
, 
num_w‹ds
) );

125 
FORWARD
 
_PROTOTYPE
–
w_scheduÀ
, (
¥oc_ƒ
, 
i‹eque°_s
 *
i›
) );

126 
FORWARD
 
_PROTOTYPE
–
w_föish
, () );

127 
FORWARD
 
_PROTOTYPE
–
w_å™s„r
, (
å™s
 *
ç
, 
cou¡
) );

128 
FORWARD
 
_PROTOTYPE
–
w_©t_wrôe
, (
vÆue
) );

129 
FORWARD
 
_PROTOTYPE
–
w_öãºu±
, (
dma
) );

130 
FORWARD
 
_PROTOTYPE
–
w_h™dÀr
, (
úq
) );

131 
FORWARD
 
_PROTOTYPE
–
w_dma_£tup
, (
å™s
 *
ç
, 
cou¡
) );

132 
FORWARD
 
_PROTOTYPE
–
w_geomëry
, (
∑πôi⁄
 *
íåy
));

136 
PRIVATE
 
drivî
 
	gw_dèb
 = {

137 
w_«me
,

138 
w_do_›í
,

139 
w_do_˛o£
,

140 
do_dio˙é
,

141 
w_¥ï¨e
,

142 
w_scheduÀ
,

143 
w_föish
,

144 
n›_˛ónup
,

145 
w_geomëry


152 
PUBLIC
 
	$esdi_wöche°î_èsk
()

154 
	`drivî_èsk
(&
w_dèb
);

155 
	}
}

161 
PRIVATE
 
devi˚
 *
	$w_¥ï¨e
(
devi˚
)

162 
devi˚
;

167 
w_cou¡
 = 0;

169 i‡(
devi˚
 < 
NR_DEVICES
) {

170 
w_drive
 = 
devi˚
 / 
DEV_PER_DRIVE
;

171 
w_wn
 = &
wöi
[
w_drive
];

172 
w_dv
 = &
w_wn
->
∑π
[
devi˚
 % 
DEV_PER_DRIVE
];

174 i‡((Ë(
devi˚
 -
MINOR_hd1a
Ë< 
NR_SUBDEVS
) {

175 
w_drive
 = 
devi˚
 / 
SUB_PER_DRIVE
;

176 
w_wn
 = &
wöi
[
w_drive
];

177 
w_dv
 = &
w_wn
->
sub∑π
[
devi˚
 % 
SUB_PER_DRIVE
];

179 (
NIL_DEV
);

181 (
w_drive
 < 
ƒ_drives
 ? 
w_dv
 : 
NIL_DEV
);

182 
	}
}

188 
PRIVATE
 *
	$w_«me
()

191 
«me
[] = "esdi-hd5";

193 
«me
[7] = '0' + 
w_drive
 * 
DEV_PER_DRIVE
;

194  
«me
;

195 
	}
}

201 
PRIVATE
 
	$w_do_›í
(
dp
, 
m_±r
)

202 
drivî
 *
dp
;

203 
mesßge
 *
m_±r
;

207 
öô_d⁄e
 = 
FALSE
;

209 i‡(!
öô_d⁄e
Ë{ 
	`w_öô
(); inô_d⁄ê
TRUE
; }

211 i‡(
	`w_¥ï¨e
(
m_±r
->
DEVICE
Ë=
NIL_DEV
Ë(
ENXIO
);

213 i‡(
w_wn
->
›í_˘
++ == 0) {

215 
	`∑πôi⁄
(&
w_dèb
, 
w_drive
 * 
DEV_PER_DRIVE
, 
P_PRIMARY
);

217 (
OK
);

218 
	}
}

224 
PRIVATE
 
	$w_do_˛o£
(
dp
, 
m_±r
)

225 
drivî
 *
dp
;

226 
mesßge
 *
m_±r
;

230 i‡(
	`w_¥ï¨e
(
m_±r
->
DEVICE
Ë=
NIL_DEV
Ë(
ENXIO
);

231 
w_wn
->
›í_˘
--;

232 (
OK
);

233 
	}
}

239 
PRIVATE
 
	$w_öô
()

256 
drive
;

257 
size
;

260 
	`phys_c›y
(0x475L, 
tmp_phys
, 1L);

261 
ƒ_drives
 = 
tmp_buf
[0];

262 i‡(
ƒ_drives
 > 
MAX_DRIVES
)Çr_drives = MAX_DRIVES;

264 
	`put_úq_h™dÀr
(
AT_WINI_IRQ
, 
w_h™dÀr
);

265 
	`íabÀ_úq
(
AT_WINI_IRQ
);

267 
drive
 = 0; drivê< 
ƒ_drives
; ++drive) {

268 (Ë
	`w_¥ï¨e
(
drive
 * 
DEV_PER_DRIVE
);

269 i‡(
	`w_comm™d
(
drive
, 0x0609, 6Ë!
OK
) {

270 
	`¥ötf
("%s: u«bÀÅÿgëÖ¨amëîs\n", 
	`w_«me
());

271 
ƒ_drives
 = 
drive
;

275 
size
 = ((Ë
°©us_block
[2] << 0) |

276 ((Ë
°©us_block
[3] << 16);

277 i‡(
drive
 == 0) {

278 i‡(
	`w_comm™d
(7, 0x060A, 5Ë!
OK
) {

279 
	`¥ötf
("%s: u«bÀÅÿgë dm®ch™√l\n", 
	`w_«me
());

280 
ƒ_drives
 = 0;

283 
dma_ch™√l
 = (
°©us_block
[2] & 0x3C00) >> 10;

285 
	`¥ötf
("%s: %lu se˘‹s\n", 
	`w_«me
(), 
size
);

286 
w_wn
->
∑π
[0].
dv_size
 = 
size
 << 
SECTOR_SHIFT
;

288 
	}
}

294 
PRIVATE
 
	$w_comm™d
(
devi˚
, 
cmd
, 
num_w‹ds
)

295 
devi˚
;

298 
cmd
;

299 
num_w‹ds
;

317 
ki
;

318 
°©us
;

320 
devi˚
 <<= 5;

321 
comm™d
[0] = 
cmd
 | 
devi˚
;

322 
comm™d
[1] = 0;

324 
	`w_©t_wrôe
(
devi˚
 | 
ATT_CMD
);

326 
ki
 = 0; ki < 2; ++ki) {

327 
	`out_w‹d
(
CMD_REG
, 
comm™d
[
ki
]);

328 
	`u∆ock
();

329 
TRUE
) {

330 
	`lock
();

331 
°©us
 = 
	`ö_byã
(
BST_REG
);

332 i‡(!(
°©us
 & 
CMD_FUL
)) ;

333 
	`u∆ock
();

336 
	`u∆ock
();

338 
	`w_öãºu±
(0);

339 i‡(
w_i°©
 !(
devi˚
 | 0x01)) {

340 
	`w_©t_wrôe
(
devi˚
 | 
ATT_ABT
);

341 
	`w_öãºu±
(0);

342 (
ERR
);

344 
ki
 = 0; kò< 
num_w‹ds
; ++ki) {

345 
TRUE
) {

346 
	`lock
();

347 
°©us
 = 
	`ö_byã
(
BST_REG
);

348 i‡(
°©us
 & 
STR_FUL
) ;

349 
	`u∆ock
();

351 
°©us_block
[
ki
] = 
	`ö_w‹d
(
STAT_REG
);

352 
	`u∆ock
();

354 
	`w_©t_wrôe
(
devi˚
 | 
ATT_EOI
);

356 (
OK
);

357 
	}
}

363 
PRIVATE
 
	$w_scheduÀ
(
¥oc_ƒ
, 
i›
)

364 
¥oc_ƒ
;

365 
i‹eque°_s
 *
i›
;

371 
r
, 
›code
;

372 
pos
;

373 
nbyãs
, 
cou¡
;

374 
block
;

375 
phys_byãs
 
u£r_phys
, 
dma_phys
;

378 
nbyãs
 = 
i›
->
io_nbyãs
;

379 i‡((
nbyãs
 & 
SECTOR_MASK
Ë!0Ë(
i›
->
io_nbyãs
 = 
EINVAL
);

382 
pos
 = 
i›
->
io_posôi⁄
;

383 i‡((
pos
 & 
SECTOR_MASK
Ë!0Ë(
i›
->
io_nbyãs
 = 
EINVAL
);

386 
u£r_phys
 = 
	`num≠
(
¥oc_ƒ
, (
vú_byãs
Ë
i›
->
io_buf
, 
nbyãs
);

387 i‡(
u£r_phys
 =0Ë(
i›
->
io_nbyãs
 = 
EINVAL
);

390 
›code
 = 
i›
->
io_ªque°
 & ~
OPTIONAL_IO
;

393 i‡(
pos
 >
w_dv
->
dv_size
Ë(
OK
);

394 i‡(
pos
 + 
nbyãs
 > 
w_dv
->
dv_size
)Çbytes = w_dv->dv_size -Öos;

395 
block
 = (
w_dv
->
dv_ba£
 + 
pos
Ë>> 
SECTOR_SHIFT
;

397 i‡(
USE_BUF
 && 
w_cou¡
 > 0 && 
block
 !
w_√xtblock
) {

399 i‡((
r
 = 
	`w_föish
()Ë!
OK
) (r);

403 i‡(
USE_BUF
Ë
w_√xtblock
 = 
block
 + (
nbyãs
 >> 
SECTOR_SHIFT
);

407 
cou¡
 = 
nbyãs
;

409 i‡(
USE_BUF
) {

410 i‡(
w_cou¡
 =
DMA_BUF_SIZE
) {

412 i‡((
r
 = 
	`w_föish
()Ë!
OK
) (r);

415 i‡(
w_cou¡
 + 
cou¡
 > 
DMA_BUF_SIZE
)

416 
cou¡
 = 
DMA_BUF_SIZE
 - 
w_cou¡
;

418 i‡(
w_ç
 =
wå™s
 + 
NR_IOREQS
) {

420 i‡((
r
 = 
	`w_föish
()Ë!
OK
) (r);

424 i‡(
w_cou¡
 == 0) {

426 
w_›code
 = 
›code
;

427 
w_ç
 = 
wå™s
;

430 i‡(
USE_BUF
) {

431 
dma_phys
 = 
tmp_phys
 + 
w_cou¡
;

436 
dma_phys
 = 
u£r_phys
;

440 
w_ç
->
i›
 = iop;

441 
w_ç
->
block
 = block;

442 
w_ç
->
cou¡
 = count;

443 
w_ç
->
phys
 = 
u£r_phys
;

444 
w_ç
->
dma
 = 
dma_phys
;

447 
w_ç
++;

448 
w_cou¡
 +
cou¡
;

449 
block
 +
cou¡
 >> 
SECTOR_SHIFT
;

450 
u£r_phys
 +
cou¡
;

451 
nbyãs
 -
cou¡
;

452 } 
nbyãs
 > 0);

454 (
OK
);

455 
	}
}

461 
PRIVATE
 
	$w_föish
()

472 
å™s
 *
ç
 = 
wå™s
, *
ç2
;

473 
cou¡
;

474 
r
, 
îr‹s
 = 0, 
m™y
 = 
USE_BUF
;

476 i‡(
w_cou¡
 =0Ë(
OK
);

479 i‡(
w_›code
 =
DEV_WRITE
) {

480 
ç2
 = 
ç
;

481 
cou¡
 = 0;

483 i‡(
USE_BUF
 || 
ç2
->
dma
 =
tmp_phys
) {

484 
	`phys_c›y
(
ç2
->
phys
,Åp2->
dma
,

485 (
phys_byãs
Ë
ç2
->
cou¡
);

487 
cou¡
 +
ç2
->count;

488 
ç2
++;

489 } 
m™y
 && 
cou¡
 < 
w_cou¡
);

491 
cou¡
 = 
m™y
 ? 
w_cou¡
 : 
ç
->count;

495 
	`out_byã
(
SYS_PORTA
, 
	`ö_byã
(SYS_PORTAË| 
LIGHT_ON
);

498 
r
 = 
	`w_å™s„r
(
ç
, 
cou¡
);

501 
	`out_byã
(
SYS_PORTA
, 
	`ö_byã
(SYS_PORTAË& ~
LIGHT_ON
);

503 i‡(
r
 !
OK
) {

505 i‡(
r
 =
ERR_BAD_SECTOR
 || ++
îr‹s
 =
MAX_ERRORS
)

506 (
ç
->
i›
->
io_nbyãs
 = 
EIO
);

508 
m™y
 = 0;

511 
îr‹s
 = 0;

513 
w_cou¡
 -
cou¡
;

516 i‡(
w_›code
 =
DEV_READ
) {

517 i‡(
USE_BUF
 || 
ç
->
dma
 =
tmp_phys
) {

518 
	`phys_c›y
(
ç
->
dma
,Åp->
phys
,

519 (
phys_byãs
Ë
ç
->
cou¡
);

522 
ç
->
i›
->
io_nbyãs
 -ç->
cou¡
;

523 
cou¡
 -
ç
->count;

524 
ç
++;

525 } 
cou¡
 > 0);

526 } 
w_cou¡
 > 0);

528 (
OK
);

529 
	}
}

535 
PRIVATE
 
	$w_å™s„r
(
ç
, 
cou¡
)

536 
å™s
 *
ç
;

537 
cou¡
;

552 
devi˚
;

553 
ki
;

554 
°©us
;

556 
devi˚
 = 
w_drive
 << 5;

557 
comm™d
[0] = (
w_›code
 =
DEV_WRITE
 ? 0x4602 : 0x4601Ë| 
devi˚
;

558 
comm™d
[1] = 
cou¡
 >> 
SECTOR_SHIFT
;

559 
comm™d
[2] = (Ë(
ç
->
block
 & 0xFFFF);

560 
comm™d
[3] = (Ë(
ç
->
block
 >> 16);

562 
	`w_©t_wrôe
(
devi˚
 | 
ATT_CMD
);

564 
ki
 = 0; ki < 4; ++ki) {

565 
	`out_w‹d
(
CMD_REG
, 
comm™d
[
ki
]);

566 
	`u∆ock
();

567 
TRUE
) {

568 
	`lock
();

569 
°©us
 = 
	`ö_byã
(
BST_REG
);

570 i‡(!(
°©us
 & 
CMD_FUL
)) ;

571 
	`u∆ock
();

574 
	`u∆ock
();

576 
	`w_öãºu±
(0);

577 i‡(
w_i°©
 !(
devi˚
 | 0x0B)) {

578 
	`w_©t_wrôe
(
devi˚
 | 
ATT_ABT
);

579 
	`w_öãºu±
(0);

580 (
ERR
);

582 
	`w_dma_£tup
(
ç
, 
cou¡
);

584 
	`w_öãºu±
(1);

586 
	`w_©t_wrôe
(
devi˚
 | 
ATT_EOI
);

588 i‡((
w_i°©
 & 0x0FË> 8Ë(
ERR
);

589 (
OK
);

590 
	}
}

597 
PRIVATE
 
	$w_©t_wrôe
(
vÆue
)

598 
vÆue
;

607 
°©us
;

609 
TRUE
) {

610 
	`lock
();

611 
°©us
 = 
	`ö_byã
(
BST_REG
);

612 i‡(!(
°©us
 & (
INT_PND
 | 
BUSY
))) ;

613 
	`u∆ock
();

615 
	`out_byã
(
ATT_REG
, 
vÆue
);

616 
	`u∆ock
();

618 (
OK
);

619 
	}
}

626 
PRIVATE
 
	$w_öãºu±
(
dma
)

627 
dma
;

640 
mesßge
 
dummy
;

642 
	`out_byã
(
BCTL_REG
, 
dma
 ? 0x03 : 0x01);

644 
	`ª˚ive
(
HARDWARE
, &
dummy
);

646 
	`out_byã
(
BCTL_REG
, 0);

647 i‡(
dma
Ë
	`out_byã
(
DMA_EXTCMD
, 0x90 + 
dma_ch™√l
);

648 
	}
}

655 
PRIVATE
 
	$w_h™dÀr
(
úq
)

656 
úq
;

660 
w_i°©
 = 
	`ö_byã
(
INT_REG
);

661 
	`öãºu±
(
WINCHESTER
);

663 
	}
}

670 
PRIVATE
 
	$w_dma_£tup
(
ç
, 
cou¡
)

671 
å™s
 *
ç
;

672 
cou¡
;

680 
	`lock
();

681 
	`out_byã
(
DMA_EXTCMD
, 0x90 + 
dma_ch™√l
);

683 
	`out_byã
(
DMA_EXTCMD
, 0x20 + 
dma_ch™√l
);

685 
	`out_byã
(
DMA_EXEC
, (Ë
ç
->
dma
 >> 0);

686 
	`out_byã
(
DMA_EXEC
, (Ë
ç
->
dma
 >> 8);

687 
	`out_byã
(
DMA_EXEC
, (Ë(
ç
->
dma
 >> 16));

688 
	`out_byã
(
DMA_EXTCMD
, 0x40 + 
dma_ch™√l
);

690 
	`out_byã
(
DMA_EXEC
, (
cou¡
 - 1) >> 0);

691 
	`out_byã
(
DMA_EXEC
, (
cou¡
 - 1) >> 8);

692 
	`out_byã
(
DMA_EXTCMD
, 0x70 + 
dma_ch™√l
);

694 
	`out_byã
(
DMA_EXEC
, 
w_›code
 =
DEV_WRITE
 ? 0x44 : 0x4C);

695 
	`out_byã
(
DMA_EXTCMD
, 0xA0 + 
dma_ch™√l
);

697 
	`u∆ock
();

698 
	}
}

704 
PRIVATE
 
	$w_geomëry
(
íåy
)

705 
∑πôi⁄
 *
íåy
;

707 
íåy
->
cylödîs
 = (
w_wn
->
∑π
[0].
dv_size
 >> 
SECTOR_SHIFT
) / (64 * 32);

708 
íåy
->
hóds
 = 64;

709 
íåy
->
£˘‹s
 = 32;

710 
	}
}

	@eth.c

5 
	~"öë.h
"

6 
	~"buf.h
"

7 
	~"˛ock.h
"

8 
	~"osdï_ëh.h
"

10 
	~"as£π.h
"

11 
	~"buf.h
"

12 
	~"ëh.h
"

13 
	~"ëh_öt.h
"

14 
	~"io.h
"

15 
	~"§.h
"

16 
	~"ty≥.h
"

18 
INIT_PANIC
();

20 
	#ETH_FD_NR
 32

	)

21 
	#EXPIRE_TIME
 60*
HZ


	)

23 
	sëh_fd


25 
	mef_Êags
;

26 
ëh_p‹t_t
 *
	mef_p‹t
;

27 
	mef_§fd
;

28 
gë_u£rd©a_t
 
	mef_gë_u£rd©a
;

29 
put_u£rd©a_t
 
	mef_put_u£rd©a
;

30 
nwio_ëh›t_t
 
	mef_ëh›t
;

31 
size_t
 
	mef_wrôe_cou¡
;

32 
acc_t
 *
	mef_rd_buf
;

33 
acc_t
 *
	mef_rd_èû
;

34 
time_t
 
	mef_exp_tim
;

35 
	mef_∑ck_°©
;

36 } 
	tëh_fd_t
;

38 
	#EFF_FLAGS
 0xf

	)

39 
	#EFF_EMPTY
 0x0

	)

40 
	#EFF_INUSE
 0x1

	)

41 
	#EFF_BUSY
 0x6

	)

42 
	#EFF_READ_IP
 0x2

	)

43 
	#EFF_WRITE_IP
 0x4

	)

44 
	#EFF_OPTSET
 0x8

	)

46 
FORWARD
 
ëh_check›t
 
ARGS
(–
ëh_fd_t
 *
ëh_fd
 ));

47 
FORWARD
 
ëh_buf‰ì
 
ARGS
(–
¥i‹ôy
, 
size_t
 
ªqsize
 ));

48 
FORWARD
 
ok_f‹_me
 
ARGS
(–
ëh_fd_t
 *
fd
, 
acc_t
 *
∑ck
 ));

49 
FORWARD
 
∑ckë2u£r
 
ARGS
(–
ëh_fd_t
 *
fd
 ));

50 
FORWARD
 
ª∂y_thr_gë
 
ARGS
(–
ëh_fd_t
 *
ëh_fd
,

51 
size_t
 
ªsu…
, 
f‹_io˘l
 ));

52 
FORWARD
 
ª∂y_thr_put
 
ARGS
(–
ëh_fd_t
 *
ëh_fd
,

53 
size_t
 
ªsu…
, 
f‹_io˘l
 ));

54 
FORWARD
 
ª°¨t_wrôe_fd
 
ARGS
(–
ëh_fd_t
 *
ëh_fd
 ));

56 
PUBLIC
 
ëh_p‹t_t
 
	gëh_p‹t_èbÀ
[
ETH_PORT_NR
];

58 
PRIVATE
 
ëh_fd_t
 
	gëh_fd_èbÀ
[
ETH_FD_NR
];

61 
PUBLIC
 
	$ëh_öô
()

63 
i
;

65 
	`as£π
 (
BUF_S
 >(
nwio_ëh›t_t
));

66 
	`as£π
 (
BUF_S
 >
ETH_HDR_SIZE
);

71 
i
=0; i<
ETH_FD_NR
; i++)

72 
ëh_fd_èbÀ
[
i
].
ef_Êags

EFF_EMPTY
;

73 
i
=0; i<
ETH_PORT_NR
; i++)

74 
ëh_p‹t_èbÀ
[
i
].
ëp_Êags

EFF_EMPTY
;

76 
	`bf_log⁄
(
ëh_buf‰ì
);

78 
	`ëh_öô0
();

80 
	}
}

82 
PUBLIC
 
	$ëh_›í
(
p‹t
, 
§fd
, 
gë_u£rd©a
, 
put_u£rd©a
)

83 
p‹t
, 
§fd
;

84 
gë_u£rd©a_t
 
gë_u£rd©a
;

85 
put_u£rd©a_t
 
put_u£rd©a
;

87 
i
;

88 
ëh_p‹t_t
 *
ëh_p‹t
;

89 
ëh_fd_t
 *
ëh_fd
;

91 #i‡
DEBUG
 & 256

92 { 
	`whîe
(); 
	`¥ötf
("ëh_›í (%d, ...)\n", 
p‹t
); }

94 
ëh_p‹t
&
ëh_p‹t_èbÀ
[
p‹t
];

95 i‡(!(
ëh_p‹t
->
ëp_Êags
 & 
EPF_ENABLED
))

96  
EGENERIC
;

98 
i
=0; i<
ETH_FD_NR
 && (
ëh_fd_èbÀ
[i].
ef_Êags
 & 
EFF_INUSE
);

99 
i
++);

101 i‡(
i
>=
ETH_FD_NR
)

103 #i‡
DEBUG


104 { 
	`whîe
(); 
	`¥ötf
("out of fds\n"); }

106  
EOUTOFBUFS
;

109 
ëh_fd
&
ëh_fd_èbÀ
[
i
];

111 
ëh_fd
->
ef_Êags

EFF_INUSE
;

112 
ëh_fd
->
ef_ëh›t
.
nweo_Êags
=
NWEO_DEFAULT
;

113 
ëh_fd
->
ef_p‹t

ëh_p‹t
;

114 
ëh_fd
->
ef_§fd

§fd
;

115 
ëh_fd
->
ef_rd_buf
= 0;

116 
ëh_fd
->
ef_gë_u£rd©a

gë_u£rd©a
;

117 
ëh_fd
->
ef_put_u£rd©a

put_u£rd©a
;

118  
i
;

119 
	}
}

121 
PUBLIC
 
	$ëh_io˘l
(
fd
, 
ªq
)

122 
fd
;

123 
ªq
;

125 
acc_t
 *
d©a
;

126 
ty≥
;

127 
ëh_fd_t
 *
ëh_fd
;

128 
ëh_p‹t_t
 *
ëh_p‹t
;

130 #i‡
DEBUG
 & 256

131 { 
	`whîe
(); 
	`¥ötf
("ëh_io˘»(%d, ...)\n", 
fd
); }

133 
ëh_fd
&
ëh_fd_èbÀ
[
fd
];

134 
ëh_p‹t

ëh_fd
->
ef_p‹t
;

135 
ty≥

ªq
 & 
IOCTYPE_MASK
;

137 
	`as£π
 (
ëh_fd
->
ef_Êags
 & 
EFF_INUSE
);

139 
ty≥
)

141 
NWIOSETHOPT
 & 
IOCTYPE_MASK
:

143 
nwio_ëh›t_t
 *
ëh›t
;

144 
nwio_ëh›t_t
 
ﬁd›t
, 
√w›t
;

145 
ªsu…
;

146 
u32_t
 
√w_í_Êags
, 
√w_di_Êags
,

147 
ﬁd_í_Êags
, 
ﬁd_di_Êags
;

148 
u32_t
 
Êags
;

149 
ëh_fd_t
 *
loc_fd
;

150 
i
;

152 i‡(
ªq
 !
NWIOSETHOPT
)

155 #i‡
DEBUG
 & 256

156 { 
	`whîe
(); 
	`¥ötf
("calling *get_userdata\n"); }

158 
d©a
(*
ëh_fd
->
ef_gë_u£rd©a
)(eth_fd->

159 
ef_§fd
, 0, (
nwio_ëh›t_t
), 
TRUE
);

161 
ëh›t
(
nwio_ëh›t_t
 *)
	`±r2acc_d©a
(
d©a
);

162 
ﬁd›t

ëh_fd
->
ef_ëh›t
;

163 
√w›t
*
ëh›t
;

165 #i‡
DEBUG
 & 256

166 { 
	`whîe
(); 
	`¥ötf
("√w›t.nweo_Êags0x%x\n", 
√w›t
.
nweo_Êags
); }

168 
ﬁd_í_Êags

ﬁd›t
.
nweo_Êags
 & 0xffff;

169 
ﬁd_di_Êags
(
ﬁd›t
.
nweo_Êags
 >> 16) & 0xffff;

170 
√w_í_Êags

√w›t
.
nweo_Êags
 & 0xffff;

171 
√w_di_Êags
(
√w›t
.
nweo_Êags
 >> 16) & 0xffff;

172 i‡(
√w_í_Êags
 & 
√w_di_Êags
)

174 
	`bf_a‰ì
(
d©a
);

175 
	`ª∂y_thr_gë
 (
ëh_fd
, 
EBADMODE
, 
TRUE
);

176  
NW_OK
;

180 i‡(
√w_di_Êags
 & 
NWEO_ACC_MASK
)

182 
	`bf_a‰ì
(
d©a
);

183 
	`ª∂y_thr_gë
 (
ëh_fd
, 
EBADMODE
, 
TRUE
);

184  
NW_OK
;

188 i‡(!(
√w_í_Êags
 & 
NWEO_ACC_MASK
))

189 
√w_í_Êags
 |(
ﬁd_í_Êags
 & 
NWEO_ACC_MASK
);

193 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
Ë& 
NWEO_LOC_MASK
))

195 
√w_í_Êags
 |(
ﬁd_í_Êags
 & 
NWEO_LOC_MASK
);

196 
√w_di_Êags
 |(
ﬁd_di_Êags
 & 
NWEO_LOC_MASK
);

200 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
Ë& 
NWEO_BROAD_MASK
))

202 
√w_í_Êags
 |(
ﬁd_í_Êags
 & 
NWEO_BROAD_MASK
);

203 
√w_di_Êags
 |(
ﬁd_di_Êags
 & 
NWEO_BROAD_MASK
);

207 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
Ë& 
NWEO_MULTI_MASK
))

209 
√w_í_Êags
 |(
ﬁd_í_Êags
 & 
NWEO_MULTI_MASK
);

210 
√w_di_Êags
 |(
ﬁd_di_Êags
 & 
NWEO_MULTI_MASK
);

211 
√w›t
.
nweo_mu…i

ﬁd›t
.nweo_multi;

215 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
Ë& 
NWEO_PROMISC_MASK
))

217 
√w_í_Êags
 |(
ﬁd_í_Êags
 & 
NWEO_PROMISC_MASK
);

218 
√w_di_Êags
 |(
ﬁd_di_Êags
 & 
NWEO_PROMISC_MASK
);

222 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
Ë& 
NWEO_REM_MASK
))

224 
√w_í_Êags
 |(
ﬁd_í_Êags
 & 
NWEO_REM_MASK
);

225 
√w_di_Êags
 |(
ﬁd_di_Êags
 & 
NWEO_REM_MASK
);

226 
√w›t
.
nweo_ªm

ﬁd›t
.nweo_rem;

230 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
Ë& 
NWEO_TYPE_MASK
))

232 
√w_í_Êags
 |(
ﬁd_í_Êags
 & 
NWEO_TYPE_MASK
);

233 
√w_di_Êags
 |(
ﬁd_di_Êags
 & 
NWEO_TYPE_MASK
);

234 
√w›t
.
nweo_ty≥

ﬁd›t
.nweo_type;

238 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
Ë& 
NWEO_RW_MASK
))

240 
√w_í_Êags
 |(
ﬁd_í_Êags
 & 
NWEO_RW_MASK
);

241 
√w_di_Êags
 |(
ﬁd_di_Êags
 & 
NWEO_RW_MASK
);

244 
√w›t
.
nweo_Êags
(()
√w_di_Êags
 << 16) |

245 
√w_í_Êags
;

247 
ëh_fd
->
ef_ëh›t

√w›t
;

249 
ªsu…

	`ëh_check›t
(
ëh_fd
);

251 i‡(
ªsu…
<0)

252 
ëh_fd
->
ef_ëh›t

ﬁd›t
;

255 
›t_Êags
;

256 
ch™ges
;

257 
›t_Êags

ﬁd›t
.
nweo_Êags
 ^

258 
ëh_fd
->
ef_ëh›t
.
nweo_Êags
;

259 
ch™ges
((
›t_Êags
 >> 16) | opt_flags) &

261 i‡(
ch™ges
 & (
NWEO_BROAD_MASK
 |

262 
NWEO_MULTI_MASK
 | 
NWEO_PROMISC_MASK
))

264 
Êags

NWEO_NOFLAGS
;

265 
i
=0, 
loc_fd

ëh_fd_èbÀ
;

266 
i
<
ETH_FD_NR
; i++, 
loc_fd
++)

268 i‡(!(
loc_fd
->
ef_Êags
 |

269 ~(
EFF_INUSE
 | 
EFF_OPTSET
)))

271 i‡(
loc_fd
->
ef_p‹t


272 !
ëh_p‹t
)

274 
Êags
 |
loc_fd
->
ef_ëh›t
.

275 
nweo_Êags
;

277 
	`ëh_£t_ªc_c⁄f
(
ëh_p‹t
, 
Êags
);

281 
	`bf_a‰ì
(
d©a
);

282 
	`ª∂y_thr_gë
 (
ëh_fd
, 
ªsu…
, 
TRUE
);

283  
NW_OK
;

286 
NWIOGETHOPT
 & 
IOCTYPE_MASK
:

288 
nwio_ëh›t_t
 *
ëh›t
;

289 
acc_t
 *
acc
;

290 
ªsu…
;

292 i‡(
ªq
 !
NWIOGETHOPT
)

294 
acc

	`bf_memªq
((
nwio_ëh›t_t
));

296 
ëh›t
(
nwio_ëh›t_t
 *)
	`±r2acc_d©a
(
acc
);

298 *
ëh›t

ëh_fd
->
ef_ëh›t
;

300 
ªsu…
(*
ëh_fd
->
ef_put_u£rd©a
)(eth_fd->

301 
ef_§fd
, 0, 
acc
, 
TRUE
);

302 i‡(
ªsu…
 >= 0)

303 
	`ª∂y_thr_put
(
ëh_fd
, 
NW_OK
, 
TRUE
);

304  
ªsu…
;

306 
NWIOGETHSTAT
 & 
IOCTYPE_MASK
:

308 
nwio_ëh°©_t
 *
ëh°©
;

309 
acc_t
 *
acc
;

310 
ªsu…
;

312 
	`as£π
 ((
nwio_ëh°©_t
Ë<
BUF_S
);

314 i‡(
ªq
 !
NWIOGETHSTAT
)

317 
ëh_p‹t

ëh_fd
->
ef_p‹t
;

318 i‡(!(
ëh_p‹t
->
ëp_Êags
 & 
EPF_ENABLED
))

320 
	`ª∂y_thr_put
(
ëh_fd
, 
EGENERIC
, 
TRUE
);

321  
NW_OK
;

324 
acc

	`bf_memªq
((
nwio_ëh°©_t
));

325 
	`com∑ª
 (
	`bf_bufsize
(
acc
), ==, (*
ëh°©
));

327 
ëh°©
(
nwio_ëh°©_t
 *)
	`±r2acc_d©a
(
acc
);

329 
ëh°©
->
nwes_addr

ëh_p‹t
->
ëp_ëhaddr
;

331 
ªsu…

	`ëh_gë_°©
(
ëh_p‹t
, &
ëh°©
->
nwes_°©
);

332 
	`as£π
 (
ªsu…
 == 0);

333 #i‡
DEBUG
 & 256

334 { 
	`whîe
(); 
	`¥ötf
("returning NW_OK\n"); }

336 
	`com∑ª
 (
	`bf_bufsize
(
acc
), ==, (*
ëh°©
));

337 
ªsu…
(*
ëh_fd
->
ef_put_u£rd©a
)(eth_fd->

338 
ef_§fd
, 0, 
acc
, 
TRUE
);

339 i‡(
ªsu…
 >= 0)

340 
	`ª∂y_thr_put
(
ëh_fd
, 
NW_OK
, 
TRUE
);

341  
ªsu…
;

346 
	`ª∂y_thr_put
(
ëh_fd
, 
EBADIOCTL
, 
TRUE
);

347  
NW_OK
;

348 
	}
}

350 
PUBLIC
 
	$ëh_wrôe
(
fd
, 
cou¡
)

351 
fd
;

352 
size_t
 
cou¡
;

354 
ëh_fd_t
 *
ëh_fd
;

355 
ëh_p‹t_t
 *
ëh_p‹t
;

357 #i‡
DEBUG
 & 256

358 { 
	`whîe
(); 
	`¥ötf
("ëh_wrôê(%d, ...)\n", 
fd
); }

360 
ëh_fd
&
ëh_fd_èbÀ
[
fd
];

361 
ëh_p‹t

ëh_fd
->
ef_p‹t
;

363 i‡(!(
ëh_fd
->
ef_Êags
 & 
EFF_OPTSET
))

365 
	`ª∂y_thr_gë
 (
ëh_fd
, 
EBADMODE
, 
FALSE
);

366  
NW_OK
;

369 
	`as£π
 (!(
ëh_fd
->
ef_Êags
 & 
EFF_WRITE_IP
));

371 
ëh_fd
->
ef_wrôe_cou¡

cou¡
;

372 i‡(
ëh_fd
->
ef_ëh›t
.
nweo_Êags
 & 
NWEO_RWDATONLY
)

373 
cou¡
 +
ETH_HDR_SIZE
;

375 i‡(
cou¡
<
ETH_MIN_PACK_SIZE
 || cou¡>
ETH_MAX_PACK_SIZE
)

377 #i‡
DEBUG


378 { 
	`whîe
(); 
	`¥ötf
("ûÀgÆÖackësizê(%d)\n",
cou¡
); }

380 
	`ª∂y_thr_gë
 (
ëh_fd
, 
EPACKSIZE
, 
FALSE
);

381  
NW_OK
;

383 
ëh_fd
->
ef_Êags
 |
EFF_WRITE_IP
;

384 
	`ª°¨t_wrôe_fd
(
ëh_fd
);

385 i‡(
ëh_fd
->
ef_Êags
 & 
EFF_WRITE_IP
)

386  
NW_SUSPEND
;

388  
NW_OK
;

389 
	}
}

391 
PUBLIC
 
	$ëh_ªad
 (
fd
, 
cou¡
)

392 
fd
;

393 
size_t
 
cou¡
;

395 
ëh_fd_t
 *
ëh_fd
;

396 
acc_t
 *
acc
, *
acc2
;

398 #i‡
DEBUG
 & 256

399 { 
	`whîe
(); 
	`¥ötf
("ëh_ªad (%d, ...)\n", 
fd
); }

401 
ëh_fd
&
ëh_fd_èbÀ
[
fd
];

402 i‡(!(
ëh_fd
->
ef_Êags
 & 
EFF_OPTSET
))

404 
	`ª∂y_thr_put
(
ëh_fd
, 
EBADMODE
, 
FALSE
);

405  
NW_OK
;

407 i‡(
cou¡
 < 
ETH_MAX_PACK_SIZE
)

409 
	`ª∂y_thr_put
(
ëh_fd
, 
EPACKSIZE
, 
FALSE
);

410  
NW_OK
;

412 i‡(
ëh_fd
->
ef_rd_buf
)

414 i‡(
	`gë_time
(Ë<
ëh_fd
->
ef_exp_tim
)

415  
	`∑ckë2u£r
 (
ëh_fd
);

416 
acc

ëh_fd
->
ef_rd_buf
;ácc;)

418 
acc2

acc
->
acc_ext_lök
;

419 
	`bf_a‰ì
(
acc
);

420 
acc

acc2
;

422 
ëh_fd
->
ef_rd_buf
= 0;

424 
ëh_fd
->
ef_Êags
 |
EFF_READ_IP
;

425 #i‡
DEBUG
 & 256

426 { 
	`whîe
(); 
	`¥ötf
("eth_fd_table[%d].ef_flags= 0x%x\n",

427 
ëh_fd
-
ëh_fd_èbÀ
,Éth_fd->
ef_Êags
); }

429  
NW_SUSPEND
;

430 
	}
}

432 
PUBLIC
 
	$ëh_ˇn˚l
(
fd
, 
which_›î©i⁄
)

433 
fd
;

434 
which_›î©i⁄
;

436 
ëh_fd_t
 *
ëh_fd
;

438 #i‡
DEBUG
 & 2

439 { 
	`whîe
(); 
	`¥ötf
("ëh_ˇn˚»(%d)\n", 
fd
); }

441 
ëh_fd
&
ëh_fd_èbÀ
[
fd
];

443 
which_›î©i⁄
)

445 
SR_CANCEL_READ
:

446 
	`as£π
 (
ëh_fd
->
ef_Êags
 & 
EFF_READ_IP
);

447 
ëh_fd
->
ef_Êags
 &~
EFF_READ_IP
;

448 
	`ª∂y_thr_put
(
ëh_fd
, 
EINTR
, 
FALSE
);

450 
SR_CANCEL_WRITE
:

451 
	`as£π
 (
ëh_fd
->
ef_Êags
 & 
EFF_WRITE_IP
);

452 
ëh_fd
->
ef_Êags
 &~
EFF_WRITE_IP
;

453 
	`ª∂y_thr_gë
(
ëh_fd
, 
EINTR
, 
FALSE
);

456 
	`ù_∑nic
(( "got unknown cancelÑequest" ));

458  
NW_OK
;

459 
	}
}

461 
PUBLIC
 
	$ëh_˛o£
(
fd
)

462 
fd
;

464 
ëh_fd_t
 *
ëh_fd
;

465 
acc_t
 *
acc
, *
acc2
;

467 #i‡
DEBUG


468 { 
	`whîe
(); 
	`¥ötf
("ëh_˛o£ (%d)\n", 
fd
); }

470 
ëh_fd
&
ëh_fd_èbÀ
[
fd
];

472 
	`as£π
 (
ëh_fd
->
ef_Êags
 & 
EFF_INUSE
);

474 
ëh_fd
->
ef_Êags

EFF_EMPTY
;

475 
acc

ëh_fd
->
ef_rd_buf
;ácc;)

477 
acc2

acc
->
acc_ext_lök
;

478 
	`bf_a‰ì
(
acc
);

479 
acc

acc2
;

481 
ëh_fd
->
ef_rd_buf
= 0;

482 
	}
}

484 
PRIVATE
 
	$ëh_check›t
 (
ëh_fd
)

485 
ëh_fd_t
 *
ëh_fd
;

489 
Êags
;

490 
í_di_Êags
;

491 
ëh_p‹t_t
 *
ëh_p‹t
;

492 
acc_t
 *
acc
, *
acc2
;

494 
ëh_p‹t

ëh_fd
->
ef_p‹t
;

495 
Êags

ëh_fd
->
ef_ëh›t
.
nweo_Êags
;

496 #i‡
DEBUG
 & 256

497 { 
	`whîe
(); 
	`¥ötf
("eth_fd_table[%d].ef_ethopt.nweo_flags= 0x%x\n",

498 
ëh_fd
-
ëh_fd_èbÀ
, 
Êags
); }

500 
í_di_Êags
(
Êags
 >>16) | (flags & 0xffff);

502 i‡((
í_di_Êags
 & 
NWEO_ACC_MASK
) &&

503 (
í_di_Êags
 & 
NWEO_LOC_MASK
) &&

504 (
í_di_Êags
 & 
NWEO_BROAD_MASK
) &&

505 (
í_di_Êags
 & 
NWEO_MULTI_MASK
) &&

506 (
í_di_Êags
 & 
NWEO_PROMISC_MASK
) &&

507 (
í_di_Êags
 & 
NWEO_REM_MASK
) &&

508 (
í_di_Êags
 & 
NWEO_TYPE_MASK
) &&

509 (
í_di_Êags
 & 
NWEO_RW_MASK
))

511 
ëh_fd
->
ef_Êags
 |
EFF_OPTSET
;

512 
ëh_fd
->
ef_∑ck_°©

EPS_EMPTY
;

513 i‡(
Êags
 & 
NWEO_EN_LOC
)

514 
ëh_fd
->
ef_∑ck_°©
 |
EPS_LOC
;

515 i‡(
Êags
 & 
NWEO_EN_BROAD
)

516 
ëh_fd
->
ef_∑ck_°©
 |
EPS_BROAD
;

517 i‡(
Êags
 & 
NWEO_EN_MULTI
)

518 
ëh_fd
->
ef_∑ck_°©
 |
EPS_MULTI
;

519 i‡(
Êags
 & 
NWEO_EN_PROMISC
)

520 
ëh_fd
->
ef_∑ck_°©
 |(
EPS_PROMISC
|
EPS_MULTI
|

521 
EPS_BROAD
);

524 
ëh_fd
->
ef_Êags
 &~
EFF_OPTSET
;

526 
acc

ëh_fd
->
ef_rd_buf
;ácc;)

528 
acc2

acc
->
acc_ext_lök
;

529 
	`bf_a‰ì
(
acc
);

530 
acc

acc2
;

532 
ëh_fd
->
ef_rd_buf
= 0;

534  
NW_OK
;

535 
	}
}

537 
PUBLIC
 
	$ëh_gë_w‹k
(
ëh_p‹t
)

538 
ëh_p‹t_t
 *
ëh_p‹t
;

540 
ëh_fd_t
 *
ëh_fd
;

541 
i
;

543 #i‡
DEBUG
 & 256

544 { 
	`whîe
(); 
	`¥ötf
("eth_get_work called\n"); }

546 i‡(
ëh_p‹t
->
ëp_wr_∑ck
)

548 i‡(!(
ëh_p‹t
->
ëp_Êags
 & 
EPF_MORE2WRITE
))

551 
i
=0, 
ëh_fd

ëh_fd_èbÀ
; i<
ETH_FD_NR
; i++,Éth_fd++)

553 i‡((
ëh_fd
->
ef_Êags
 & (
EFF_INUSE
|
EFF_WRITE_IP
)) !=

554 (
EFF_INUSE
|
EFF_WRITE_IP
))

556 i‡(
ëh_fd
->
ef_p‹t
 !
ëh_p‹t
)

558 #i‡
DEBUG
 & 256

559 { 
	`whîe
(); 
	`¥ötf
("eth_get_work callingÑestart_write_fd\n"); }

561 
	`ª°¨t_wrôe_fd
(
ëh_fd
);

562 i‡(
ëh_p‹t
->
ëp_wr_∑ck
)

565 
ëh_p‹t
->
ëp_Êags
 &~
EPF_MORE2WRITE
;

567 
	}
}

569 
PUBLIC
 
	$ëh_¨rive
 (
ëh_p‹t
, 
∑ck
)

570 
ëh_p‹t_t
 *
ëh_p‹t
;

571 
acc_t
 *
∑ck
;

573 
time_t
 
exp_tim
;

574 
ëh_hdr_t
 *
ëh_hdr
;

575 
ëhî_addr_t
 
brﬂdˇ°
= {255, 255, 255, 255, 255, 255},

576 
mu…i_addr
, 
ªm_addr
, 
∑ckaddr
;

577 
∑ck_°©
;

578 
ëhî_ty≥_t
 
ty≥
;

579 
ëh_fd_t
 *
ëh_fd
, *
sh¨e_fd
;

580 
acc_t
 *
acc
;

581 
i
;

583 #i‡
DEBUG
 & 256

584 { 
	`whîe
(); 
	`¥ötf
("ëh_¨rive(0x%x, 0x%xËˇŒed\n", 
ëh_p‹t
, 
∑ck
); }

586 
	`as£π
(
∑ck
->
acc_lökC
);

587 
exp_tim

	`gë_time
(Ë+ 
EXPIRE_TIME
;

589 
∑ck

	`bf_∑ckIffLess
’ack, 
ETH_HDR_SIZE
);

590 
ëh_hdr
(
ëh_hdr_t
*)
	`±r2acc_d©a
(
∑ck
);

591 #i‡
DEBUG
 & 256

592 { 
	`whîe
(); 
	`¥ötf
("§c"); 
	`wrôeEthîAddr
(&
ëh_hdr
->
eh_§c
);Örötf(" d°"); wrôeEthîAddr(&ëh_hdr->
eh_d°
);

593 
	`¥ötf
("ÖrŸo0x%x\n", 
	`¡ohs
(
ëh_hdr
->
eh_¥Ÿo
));

594 
	`¥ötf
(" myáddr"); 
	`wrôeEthîAddr
(&
ëh_p‹t
->
ëp_ëhaddr
);

595 
	`¥ötf
("\n"); }

598 
∑ckaddr

ëh_hdr
->
eh_d°
;

599 i‡(
∑ckaddr
.
ó_addr
[0] & 0x01)

602 i‡(!
	`ëh_addrcmp
(
∑ckaddr
, 
brﬂdˇ°
))

603 
∑ck_°©

EPS_BROAD
;

606 
∑ck_°©

EPS_MULTI
;

607 #i‡
DEBUG


608 { 
	`whîe
(); 
	`¥ötf
("Gotá multicastÖacket\n"); }

614 i‡(!
	`ëh_addrcmp
 (
∑ckaddr
, 
ëh_p‹t
->
ëp_ëhaddr
))

615 
∑ck_°©

EPS_LOC
;

617 
∑ck_°©

EPS_PROMISC
;

619 
ty≥

ëh_hdr
->
eh_¥Ÿo
;

621 #i‡
DEBUG
 & 256

622 { 
	`whîe
(); 
	`¥ötf
("∑ck_°©0x%x\n", 
∑ck_°©
); }

625 
sh¨e_fd
= 0;

626 
i
=0, 
ëh_fd
=
ëh_fd_èbÀ
; i<
ETH_FD_NR
; i++,Éth_fd++)

628 i‡(!(
ëh_fd
->
ef_Êags
 & 
EFF_OPTSET
))

630 #i‡
DEBUG
 & 256

631 { 
	`whîe
(); 
	`¥ötf
("fd %d d€¢'àhavêEFF_OPTSET\n", 
i
); }

635 i‡(
ëh_fd
->
ef_p‹t
 !
ëh_p‹t
)

637 #i‡
DEBUG


638 { 
	`whîe
(); 
	`¥ötf
("fd %d u£†p‹à%d,Öackë i†⁄Ö‹à%d\n", 
i
,

639 
ëh_fd
->
ef_p‹t
-
ëh_p‹t_èbÀ
, 
ëh_p‹t
-eth_port_table); }

643 i‡(!(
ëh_fd
->
ef_∑ck_°©
 & 
∑ck_°©
))

645 #i‡
DEBUG
 & 256

646 { 
	`whîe
(); 
	`¥ötf
("fd %d ha†ef_∑ck_°© 0x%x,Éx≥˘ög 0x%x\n", 
i
,

647 
ëh_fd
->
ef_∑ck_°©
, 
∑ck_°©
); }

651 i‡((
ëh_fd
->
ef_ëh›t
.
nweo_Êags
 & 
NWEO_TYPESPEC
) &&

652 
ty≥
 !
ëh_fd
->
ef_ëh›t
.
nweo_ty≥
)

654 #i‡
DEBUG
 & 256

655 { 
	`whîe
(); 
	`¥ötf
("fd %d u£†ty≥ 0x%x,Éx≥˘ög 0x%x\n", 
i
,

656 
ëh_fd
->
ef_ëh›t
.
nweo_ty≥
, 
ty≥
); }

660 #i‡
DEBUG
 & 256

661 { 
	`whîe
(); 
	`¥ötf
("multi OK\n"); }

663 i‡(
ëh_fd
->
ef_ëh›t
.
nweo_Êags
 & 
NWEO_REMSPEC
)

665 
ªm_addr

ëh_fd
->
ef_ëh›t
.
nweo_ªm
;

666 i‡(
	`ëh_addrcmp
 (
ëh_hdr
->
eh_§c
,

667 
ªm_addr
))

670 #i‡
DEBUG
 & 256

671 { 
	`whîe
(); 
	`¥ötf
("rem NW_OK\n"); }

673 i‡(
ëh_fd
->
ef_rd_buf
)

675 i‡(
ëh_fd
->
ef_ëh›t
.
nweo_Êags
 =
NWEO_SHARED
)

677 
sh¨e_fd

ëh_fd
;

681 
acc

	`bf_du∑cc
(
∑ck
);

682 
acc
->
acc_ext_lök

NULL
;

683 i‡(!
ëh_fd
->
ef_rd_buf
)

685 
ëh_fd
->
ef_rd_buf

acc
;

686 
ëh_fd
->
ef_exp_tim

exp_tim
;

689 
ëh_fd
->
ef_rd_èû
->
acc_ext_lök

acc
;

690 
ëh_fd
->
ef_rd_èû

acc
;

692 i‡(
ëh_fd
->
ef_Êags
 & 
EFF_READ_IP
)

693 
	`∑ckë2u£r
(
ëh_fd
);

694 i‡((
ëh_fd
->
ef_ëh›t
.
nweo_Êags
 & 
NWEO_ACC_MASK
Ë!
NWEO_COPY
)

696 
	`bf_a‰ì
(
∑ck
);

697 
∑ck
= 0;

701 i‡(
sh¨e_fd
 && 
∑ck
)

703 
acc

	`bf_du∑cc
(
∑ck
);

704 
acc
->
acc_ext_lök

NULL
;

705 i‡(!
sh¨e_fd
->
ef_rd_buf
)

707 
sh¨e_fd
->
ef_rd_buf

acc
;

708 
sh¨e_fd
->
ef_exp_tim

exp_tim
;

711 
sh¨e_fd
->
ef_rd_èû
->
acc_ext_lök

acc
;

712 
sh¨e_fd
->
ef_rd_èû

acc
;

714 i‡(
∑ck
)

715 
	`bf_a‰ì
(
∑ck
);

716 
	}
}

718 
PRIVATE
 
	$∑ckë2u£r
 (
ëh_fd
)

719 
ëh_fd_t
 *
ëh_fd
;

721 
acc_t
 *
∑ck
, *
hódî
;

722 
ªsu…
;

723 
size_t
 
size
;

725 #i‡
DEBUG
 & 256

726 { 
	`whîe
(); 
	`¥ötf
("packet2user() called\n"); }

728 
∑ck

ëh_fd
->
ef_rd_buf
;

729 
ëh_fd
->
ef_rd_buf

∑ck
->
acc_ext_lök
;

730 i‡(
ëh_fd
->
ef_ëh›t
.
nweo_Êags
 & 
NWEO_RWDATONLY
)

732 
∑ck

	`bf_∑ckIffLess
 (∑ck, 
ETH_HDR_SIZE
);

734 
	`as£π
 (
∑ck
->
acc_Àngth
 >
ETH_HDR_SIZE
);

736 i‡(
∑ck
->
acc_lökC
 >1)

738 
hódî

	`bf_du∑cc
 (
∑ck
);

739 
	`bf_a‰ì
(
∑ck
);

740 
∑ck

hódî
;

743 
	`as£π
 (
∑ck
->
acc_lökC
 == 1);

745 
∑ck
->
acc_off£t
 +
ETH_HDR_SIZE
;

746 
∑ck
->
acc_Àngth
 -
ETH_HDR_SIZE
;

749 
size

	`bf_bufsize
 (
∑ck
);

751 
ëh_fd
->
ef_Êags
 &~
EFF_READ_IP
;

752 
ªsu…
(*
ëh_fd
->
ef_put_u£rd©a
)”th_fd->
ef_§fd
, (
size_t
)0, 
∑ck
,

753 
FALSE
);

754 i‡(
ªsu…
 >=0)

755 
	`ª∂y_thr_put
(
ëh_fd
, 
size
, 
FALSE
);

756  
ªsu…
<0 ?Ñesu… : 
NW_OK
;

757 
	}
}

759 
PRIVATE
 
	$ok_f‹_me
 (
ëh_fd
, 
∑ck
)

760 
ëh_fd_t
 *
ëh_fd
;

761 
acc_t
 *
∑ck
;

763 
ëh_p‹t_t
 *
ëh_p‹t
;

764 
ëh_hdr_t
 *
ëh_hdr
;

765 
ëhî_ty≥_t
 
ty≥
;

766 
ëhî_addr_t
 
brﬂdˇ°
= {255, 255, 255, 255, 255, 255},

767 
∑ckaddr
, 
p‹èddr
, 
mu…i_addr
, 
ªm_addr
;

768 
∑ck_köd
;

770 
	`as£π
 (
∑ck
->
acc_Àngth
 >
ETH_HDR_SIZE
);

772 
ëh_p‹t

ëh_fd
->
ef_p‹t
;

774 
ëh_hdr
(
ëh_hdr_t
 *)
	`±r2acc_d©a
(
∑ck
);

775 
∑ckaddr

ëh_hdr
->
eh_d°
;

776 i‡(
∑ckaddr
.
ó_addr
[0] & 0x01)

778 i‡(!
	`ëh_addrcmp
 (
∑ckaddr
, 
brﬂdˇ°
))

779 
∑ck_köd

EPS_BROAD
;

781 
∑ck_köd

EPS_MULTI
;

784 
p‹èddr

ëh_p‹t
->
ëp_ëhaddr
;

785 i‡(!
	`ëh_addrcmp
(
∑ckaddr
, 
p‹èddr
))

786 
∑ck_köd

EPS_LOC
;

788 
∑ck_köd

EPS_PROMISC
;

791 
∑ck_köd
 &
ëh_fd
->
ef_∑ck_°©
;

793 i‡(!
∑ck_köd
)

794  
FALSE
;

796 
ty≥

ëh_hdr
->
eh_¥Ÿo
;

798 i‡((
ëh_fd
->
ef_ëh›t
.
nweo_Êags
 & 
NWEO_TYPESPEC
) &&

799 
ty≥
 !
ëh_fd
->
ef_ëh›t
.
nweo_ty≥
)

800  
FALSE
;

802 i‡(
ëh_fd
->
ef_ëh›t
.
nweo_Êags
 & 
NWEO_REMSPEC
)

804 
ªm_addr

ëh_fd
->
ef_ëh›t
.
nweo_ªm
;

805 i‡(
	`ëh_addrcmp
(
ëh_hdr
->
eh_§c
, 
ªm_addr
))

806  
FALSE
;

808  
TRUE
;

809 
	}
}

811 
PRIVATE
 
	$ëh_buf‰ì
 (
¥i‹ôy
, 
ªqsize
)

812 
¥i‹ôy
;

813 
size_t
 
ªqsize
;

815 
i
, 
⁄˚_m‹e
;

816 
time_t
 
cuº_tim
;

817 
acc_t
 *
acc
;

819 i‡(
¥i‹ôy
 <
ETH_PRI_EXP_FDBUFS
)

822 #i‡
DEBUG
 & 256

823 { 
	`whîe
(); 
	`¥ötf
("eth_buffree called\n"); }

826 
cuº_tim

	`gë_time
();

827 
i
=0; i<
ETH_FD_NR
; i++)

829 i‡(!(
ëh_fd_èbÀ
[
i
].
ef_Êags
 & 
EFF_INUSE
) )

831 
acc

ëh_fd_èbÀ
[
i
].
ef_rd_buf
;

832 i‡(
acc
 && 
ëh_fd_èbÀ
[
i
].
ef_exp_tim
 < 
cuº_tim
)

834 
ëh_fd_èbÀ
[
i
].
ef_rd_buf

acc
->
acc_ext_lök
;

835 
	`bf_a‰ì
(
acc
);

836 i‡(
bf_‰ì_buffsize
 >
ªqsize
)

841 i‡(
¥i‹ôy
 <
ETH_PRI_FDBUFS
)

844 
⁄˚_m‹e
= 1;

845 
⁄˚_m‹e
)

847 
⁄˚_m‹e
= 0;

848 
i
=0; i<
ETH_FD_NR
; i++)

850 i‡(!(
ëh_fd_èbÀ
[
i
].
ef_Êags
 & 
EFF_INUSE
))

852 
acc

ëh_fd_èbÀ
[
i
].
ef_rd_buf
;

853 i‡(
acc
)

855 
ëh_fd_èbÀ
[
i
].
ef_rd_buf

acc
->
acc_ext_lök
;

856 
	`bf_a‰ì
(
acc
);

857 i‡(
bf_‰ì_buffsize
 >
ªqsize
)

859 
⁄˚_m‹e
= 1;

863 
	}
}

865 
PRIVATE
 
	$ª°¨t_wrôe_fd
(
ëh_fd
)

866 
ëh_fd_t
 *
ëh_fd
;

868 
ëh_p‹t_t
 *
ëh_p‹t
;

869 
acc_t
 *
u£r_d©a
, *
hódî
;

870 
size
;

871 
nweo_Êags
;

872 
ëh_hdr_t
 *
ëh_hdr
;

874 
ëh_p‹t

ëh_fd
->
ef_p‹t
;

876 i‡(
ëh_p‹t
->
ëp_wr_∑ck
)

878 
ëh_p‹t
->
ëp_Êags
 |
EPF_MORE2WRITE
;

882 
	`as£π
 (
ëh_fd
->
ef_Êags
 & 
EFF_WRITE_IP
);

883 
ëh_fd
->
ef_Êags
 &~
EFF_WRITE_IP
;

885 
	`as£π
 (!
ëh_p‹t
->
ëp_wr_∑ck
);

887 #i‡
DEBUG
 & 256

888 { 
	`whîe
(); 
	`¥ötf
("calling *get_userdata\n"); }

890 
u£r_d©a
(*
ëh_fd
->
ef_gë_u£rd©a
)”th_fd->
ef_§fd
, 0,

891 
ëh_fd
->
ef_wrôe_cou¡
, 
FALSE
);

892 i‡(!
u£r_d©a
)

894 
ëh_fd
->
ef_Êags
 &~
EFF_WRITE_IP
;

895 
	`ª∂y_thr_gë
 (
ëh_fd
, 
EFAULT
, 
FALSE
);

898 
size

	`bf_bufsize
 (
u£r_d©a
);

900 
nweo_Êags

ëh_fd
->
ef_ëh›t
.nweo_flags;

902 i‡(
nweo_Êags
 & 
NWEO_RWDATONLY
)

904 
hódî

	`bf_memªq
(
ETH_HDR_SIZE
);

905 
hódî
->
acc_√xt

u£r_d©a
;

906 
u£r_d©a

hódî
;

909 
u£r_d©a

	`bf_∑ckIffLess
 (u£r_d©a, 
ETH_HDR_SIZE
);

911 
ëh_hdr
(
ëh_hdr_t
 *)
	`±r2acc_d©a
(
u£r_d©a
);

913 i‡(
nweo_Êags
 & 
NWEO_REMSPEC
)

914 
ëh_hdr
->
eh_d°

ëh_fd
->
ef_ëh›t
.
nweo_ªm
;

916 
ëh_hdr
->
eh_§c

ëh_p‹t
->
ëp_ëhaddr
;

918 i‡(
nweo_Êags
 & 
NWEO_TYPESPEC
)

919 
ëh_hdr
->
eh_¥Ÿo

ëh_fd
->
ef_ëh›t
.
nweo_ty≥
;

921 
	`as£π
 (!
ëh_p‹t
->
ëp_wr_∑ck
);

922 
ëh_p‹t
->
ëp_wr_∑ck

u£r_d©a
;

924 i‡(!(
ëh_p‹t
->
ëp_Êags
 & 
EPF_WRITE_IP
))

926 
	`ëh_wrôe_p‹t
(
ëh_p‹t
);

928 
	`ª∂y_thr_gë
 (
ëh_fd
, 
size
, 
FALSE
);

929 
	}
}

931 
PRIVATE
 
	$ª∂y_thr_gë
 (
ëh_fd
, 
ªsu…
, 
f‹_io˘l
)

932 
ëh_fd_t
 *
ëh_fd
;

933 
size_t
 
ªsu…
;

934 
f‹_io˘l
;

936 
acc_t
 *
d©a
;

938 #i‡
DEBUG
 & 256

939 { 
	`whîe
(); 
	`¥ötf
("ˇŒög *gë_u£rd©a(fd%d, %d, 0)\n", 
ëh_fd
->

940 
ef_§fd
, 
ªsu…
, 0); }

942 
d©a
(*
ëh_fd
->
ef_gë_u£rd©a
)”th_fd->
ef_§fd
, 
ªsu…
, 0, 
f‹_io˘l
);

943 
	`as£π
 (!
d©a
);

944 
	}
}

946 
PRIVATE
 
	$ª∂y_thr_put
 (
ëh_fd
, 
ªsu…
, 
f‹_io˘l
)

947 
ëh_fd_t
 *
ëh_fd
;

948 
size_t
 
ªsu…
;

949 
f‹_io˘l
;

951 
îr‹
;

953 
îr‹
(*
ëh_fd
->
ef_put_u£rd©a
)”th_fd->
ef_§fd
, 
ªsu…
, (
acc_t
 *)0,

954 
f‹_io˘l
);

955 
	`as£π
(!
îr‹
);

956 
	}
}

	@eth.h

5 #i‚de‡
ETH_H


6 
	#ETH_H


	)

8 
	#NWEO_DEFAULT
 (
NWEO_EN_LOC
 | 
NWEO_DI_BROAD
 | 
NWEO_DI_MULTI
 | \

	)

9 
	gNWEO_DI_PROMISC
 | 
	gNWEO_REMANY
 | 
	gNWEO_RWDATALL
)

11 
	#ETH0
 0

	)

13 
	#ëh_addrcmp
(
a
,
b
Ë(
	`memcmp
((
_VOIDSTAR
)&a, (_VOIDSTAR)&b, \

	)

14 (
a
)))

18 
acc
;

22 
ëh_öô
 
	`ARGS
(( ));

23 
ëh_›í
 
	`ARGS
(–
p‹t
, 
§fd
,

24 
acc
 *(*
gë_u£rd©a
)(
fd
, 
size_t
 
off£t
,size_à
cou¡
,

25 
f‹_io˘l
),

26 (*
put_u£rd©a
)(
fd
, 
size_t
 
off£t
, 
acc
 *
d©a
,

27 
f‹_io˘l
) ));

28 
ëh_io˘l
 
	`ARGS
(–
fd
, 
ªq
));

29 
ëh_ªad
 
	`ARGS
(–
p‹t
, 
size_t
 
cou¡
 ));

30 
ëh_wrôe
 
	`ARGS
(–
p‹t
, 
size_t
 
cou¡
 ));

31 
ëh_ˇn˚l
 
	`ARGS
(–
fd
, 
which_›î©i⁄
 ));

32 
ëh_˛o£
 
	`ARGS
(–
fd
 ));

	@eth_int.h

5 #i‚de‡
ETH_INT_H


6 
	#ETH_INT_H


	)

8 
	#ETH_PORT_NR
 1

	)

10 
	sëh_p‹t


12 
	mëp_Êags
;

13 
ëhî_addr_t
 
	mëp_ëhaddr
;

14 
acc_t
 *
	mëp_wr_∑ck
, *
	mëp_rd_∑ck
;

16 
osdï_ëh_p‹t_t
 
	mëp_osdï
;

17 } 
	tëh_p‹t_t
;

19 
	#EPF_EMPTY
 0x0

	)

20 
	#EPF_ENABLED
 0x1

	)

21 
	#EPF_WRITE_IP
 0x2

	)

22 
	#EPF_WRITE_SP
 0x4

	)

23 
	#EPF_MORE2WRITE
 0x8

	)

24 
	#EPF_READ_IP
 0x10

	)

25 
	#EPF_READ_SP
 0x20

	)

27 
	#EPS_EMPTY
 0x0

	)

28 
	#EPS_LOC
 0x1

	)

29 
	#EPS_BROAD
 0x2

	)

30 
	#EPS_MULTI
 0x4

	)

31 
	#EPS_PROMISC
 0x8

	)

33 
ëh_p‹t_t
 
ëh_p‹t_èbÀ
[
ETH_PORT_NR
];

35 
ëh_öô0
 
ARGS
(( ));

36 
ëh_gë_°©
 
ARGS
(–
ëh_p‹t_t
 *
ëh_p‹t
, 
ëh_°©_t
 *
ëh_°©
 ));

37 
ëh_wrôe_p‹t
 
ARGS
(–
ëh_p‹t_t
 *
ëh_p‹t
 ));

38 
ëh_¨rive
 
ARGS
(–
ëh_p‹t_t
 *
p‹t
, 
acc_t
 *
∑ck
 ));

39 
ëh_£t_ªc_c⁄f
 
ARGS
(–
ëh_p‹t_t
 *
ëh_p‹t
, 
u32_t
 
Êags
 ));

40 
ëh_gë_w‹k
 
ARGS
(–
ëh_p‹t_t
 *
ëh_p‹t
 ));

	@ether.h

5 
	uëhîaddr


7 
	mbyãs
[6];

8 
	msh‹ts
[3];

10 
	tëhî_addr
;

12 
	sëhî∑ckë


14 
ëhî_addr
 
	mde°
;

15 
ëhî_addr
 
	m§c
;

16 
	mty≥
[2];

17 
	mpkéí
;

18 *
	mpktbuf
;

20 
	tëhî_∑ckë
;

22 
	sëhîvec


24 
ëhî_addr
 
	mde°
;

25 
ëhî_addr
 
	m§c
;

26 
	mty≥
[2];

27 
	miov˙t
;

28 
iovec
 *
	miov
;

30 
	tëhî_vec
;

32 #i‚de‡
__ETHER_BCAST_ADDR__


33 
ëhî_addr
 
ëhî_bˇ°_addr
;

36 #ifde‡
__STDC__


38 
ëhî_›í
 (*
«me
, 
ty≥
, 
ëhî_addr
 * 
addªss
);

40 
ëhî_addr
 *
ëhî_addªss
 (
fd
,Éthî_add∏* 
addªss
);

42 
ëhî_addr
 *
ëhî_ötÁddr
 (*
ötf
,Éthî_add∏* 
addªss
);

44 **
ëhî_öãrÁ˚s
 ();

46 
ëhî_wrôe
 (
fd
, 
ëhî_∑ckë
 * 
∑ckë
);

48 
ëhî_wrôev
 (
fd
, 
ëhî_vec
 * 
∑ckë
);

50 
ëhî_ªad
 (
fd
, 
ëhî_∑ckë
 * 
∑ckë
);

52 
ëhî_ªadv
 (
fd
, 
ëhî_vec
 * 
∑ckë
);

54 
ëhî_blockög
 (
fd
, 
°©e
);

56 
ëhî_£nd_£lf
 (
fd
);

58 
ëhî_mˇ°_£lf
 (
fd
);

60 
ëhî_bˇ°_£lf
 (
fd
);

62 *
ëhî_¡ﬂ
 (
ëhî_addr
 *);

64 
ëhî_addr
 *
ëhî_©⁄
 (*);

66 #ifde‡
__GNUC__


72 
ö_addr
 *
	t_ëhî_NoNsEnSe
;

73 
ho°ít
 *
	t_ëhî_nOnSeNsE
;

77 *
ëhî_e2a
 (
ëhî_addr
 *, *);

79 
ëhî_addr
 *
ëhî_a2e
 (*,Éther_addr *);

81 
ö_addr
 *
ëhî_e2ù
 (
ëhî_addr
 *, in_addr *);

83 
ëhî_addr
 *
ëhî_ù2e
 (
ö_addr
 *,Éther_addr *);

85 *
ëhî_e2ho°
 (
ëhî_addr
 *, *);

87 
ëhî_addr
 *
ëhî_ho°2e
 (*,Éther_addr *);

89 
ëhî_addr
 *
ëhî_ho°ít2e
 (
ho°ít
 *,Éther_addr *);

93 
ëhî_›í
 ();

94 
ëhî_addr
 *
ëhî_addªss
 ();

95 
ëhî_addr
 *
ëhî_ötÁddr
 ();

96 **
ëhî_öãrÁ˚s
 ();

97 
ëhî_wrôe
 ();

98 
ëhî_wrôev
 ();

99 
ëhî_ªad
 ();

100 
ëhî_ªadv
 ();

101 
ëhî_blockög
 ();

102 
ëhî_£nd_£lf
 ();

103 
ëhî_mˇ°_£lf
 ();

104 
ëhî_bˇ°_£lf
 ();

106 *
ëhî_¡ﬂ
 ();

107 
ëhî_addr
 *
ëhî_©⁄
 ();

108 *
ëhî_e2a
 ();

109 
ëhî_addr
 *
ëhî_a2e
 ();

110 
ö_addr
 *
ëhî_e2ù
 ();

111 
ëhî_addr
 *
ëhî_ù2e
 ();

112 *
ëhî_e2ho°
 ();

113 
ëhî_addr
 *
ëhî_ho°2e
 ();

114 
ëhî_addr
 *
ëhî_ho°ít2e
 ();

118 #unde‡
ëhî_cmp


120 
	#ëhî_cmp
(
addr1
,
addr2
Ë\

	)

121 ((
	gaddr1
)->
	gsh‹ts
[0] !(
addr2
)->
sh‹ts
[0] \

122 || (
addr1
)->
sh‹ts
[1] !(
addr2
)->shorts[1] \

123 || (
addr1
)->
sh‹ts
[2] !(
addr2
)->shorts[2])

125 
	#ETHERSTRLEN
 18

	)

127 #ifde‡
NOFILE


128 #i‚de‡
MAXHOSTNAMELEN


129 
	#MAXHOSTNAMELEN
 64

	)

135 
	#ETHER_DST
 0

	)

136 
	#ETHER_SRC
 6

	)

137 
	#ETHER_TYPE
 12

	)

138 
	#ETHER_PKT
 14

	)

139 
	#ETHER_MIN
 46

	)

140 
	#ETHER_MAX
 1500

	)

142 
	#ETHER_MINTYPE
 0x5DD

	)

143 
	#ETHER_MAXTYPE
 0xFFFF

	)

145 
	#ETHER_MCAST
(
addr
Ë(((*Ë◊ddr))[0] & 0x01)

	)

147 #ifde‡
NT_ALLTYPES


148 
	#ETHER_ALLTYPES
 
NT_ALLTYPES


	)

150 
	#ETHER_ALLTYPES
 ((Ë-1)

	)

	@ether_line.c

17 
	~<sys/ty≥s.h
>

18 
	~<˘y≥.h
>

19 
	~<°dlib.h
>

20 
	~<√t/gí/ëhî.h
>

21 
	~<√t/gí/if_ëhî.h
>

24 
	$ëhî_löe
(
löe
, 
óddr
, 
ho°«me
)

25 * 
löe
;

26 
ëhî_addr
 * 
óddr
;

27 * 
ho°«me
;

29 
i
;

30 
vÆ
;

33 *
löe
 != '\n' && (*line == ' ' || *line == '\t'))

34 
löe
++;

37 
i
 = 0; i < 5; i++)

39 
vÆ
 = (Ë
	`°πﬁ
(
löe
, &line, 16);

40 i‡(
vÆ
 > 255 || *
löe
++ != ':')

42 
óddr
->
ó_addr
[
i
] = 
vÆ
 & 0xff;

44 
vÆ
 = (Ë
	`°πﬁ
(
löe
, &line, 16);

45 i‡(
vÆ
 > 255 || (*
löe
 != ' ' && *line != '\t'))

47 
óddr
->
ó_addr
[
i
] = 
vÆ
 & 0xff;

50 *
löe
 != '\n' && (*line == ' ' || *line == '\t'))

51 
löe
++;

54 !
	`is•a˚
(*
löe
))

55 *
ho°«me
++ = *
löe
++;

56 *
ho°«me
 = '\0';

58 
	}
}

	@ethera2n.c

9 
	~<sys/ty≥s.h
>

10 
	~<°dlib.h
>

11 
	~<√t/√éib.h
>

12 
	~<√t/gí/ëhî.h
>

13 
	~<√t/gí/if_ëhî.h
>

15 
ëhî_addr
 *
	$ëhî_©⁄
(
s
)

16 *
s
;

18 
ëhî_addr
 
ó
;

20 
i
;

21 
v
;

22 *
check
;

24 i‡(
s
 =
NULL
)

25  
NULL
;

27 
i
=0; i<6; i++)

29 
v

	`°πﬁ
(
s
, &
check
, 16);

30 i‡(
v
<0 || v>255)

31  
NULL
;

32 i‡((
i
<5 && 
check
[0] != ':') || (i == 5 && check[0] != '\0'))

33  
NULL
;

34 
ó
.
ó_addr
[
i
]
v
;

35 
s

check
+1;

37  &
ó
;

38 
	}
}

	@ethere2a.c

4 
	~<°dio.h
>

6 #ifde‡
_MINIX


7 
	~<sys/ty≥s.h
>

8 
	~<°dlib.h
>

10 
	~<√t/gí/ëhî.h
>

11 
	~<√t/gí/if_ëhî.h
>

13 
	#ETHERSTRLEN
 18

	)

14 
	#ëhî_addr
 
ëhî_addr_t


	)

15 
	#byãs
 
ó_addr


	)

16 *
ëhî_e2a
 
_ARGS
(–
ëhî_addr_t
 *
a
, *
e
 ));

18 
	~"libëhî.h
"

22 
	$ëhî_e2a
 (
addr
, 
e°rög
)

23 
ëhî_addr
 *
addr
;

24 *
e°rög
;

26 #ifde‡
löt


27 *
	`•rötf
 ();

29 i‡(
e°rög
 =
NULL
)

30 
e°rög
 = (*Ë
	`mÆloc
 (
ETHERSTRLEN
);

32 i‡(
e°rög
 !
NULL
)

33 (Ë
	`•rötf
 (
e°rög
, "%x:%x:%x:%x:%x:%x",

34 
addr
->
byãs
[0],áddr->bytes[1],áddr->bytes[2],

35 
addr
->
byãs
[3],áddr->bytes[4],áddr->bytes[5]);

36  (
e°rög
);

37 
	}
}

39 #i‚de‡
ETHERDB


42 
	$ëhî_¡ﬂ
 (
addr
)

43 
ëhî_addr
 *
addr
;

45 
e°rög
[
ETHERSTRLEN
];

47  (
	`ëhî_e2a
 (
addr
, 
e°rög
));

48 
	}
}

	@etherh2n.c

7 
	~<°dio.h
>

8 
	~<°rög.h
>

9 
	~<√t/gí/if_ëhî.h
>

12 
	$ëhî_ho°t⁄
(
ho°«me
, 
e
)

13 *
ho°«me
;

14 
ëhî_addr
 *
e
;

16 
FILE
 *
ëhîf
;

17 
b
[256], 
hn
[256];

19 
ëhîf

	`f›í
(
_PATH_ETHERS
, "r");

20 i‡(
ëhîf
 =
NULL
)

23 
	`fgës
(
b
, (b), 
ëhîf
Ë!
NULL
)

25 i‡(
	`ëhî_löe
(
b
, 
e
, 
hn
Ë=0 && 
	`°rcmp
(hn, 
ho°«me
) == 0)

27 
	`f˛o£
(
ëhîf
);

31 
	`f˛o£
(
ëhîf
);

33 
	}
}

	@ethern2h.c

7 
	~<sys/ty≥s.h
>

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~<√t/gí/ëhî.h
>

11 
	~<√t/gí/if_ëhî.h
>

14 
	$ëhî_¡oho°
(
ho°«me
, 
e
)

15 *
ho°«me
;

16 
ëhî_addr
 *
e
;

18 
FILE
 *
ëhîf
;

19 
b
[256];

20 
ëhî_addr
 
e_tmp
;

22 
ëhîf

	`f›í
(
_PATH_ETHERS
, "r");

23 i‡(
ëhîf
 =
NULL
)

26 
	`fgës
(
b
, (b), 
ëhîf
Ë!
NULL
)

28 i‡(
	`ëhî_löe
(
b
, &
e_tmp
, 
ho°«me
) == 0 &&

29 
	`memcmp
(&
e_tmp
, 
e
, (e_tmp)) == 0)

31 
	`f˛o£
(
ëhîf
);

35 
	`f˛o£
(
ëhîf
);

37 
	}
}

	@exception.c

6 
	~"kî√l.h
"

7 
	~<sig«l.h
>

8 
	~"¥oc.h
"

13 
PUBLIC
 
	$ex˚±i⁄
(
vec_ƒ
)

14 
vec_ƒ
;

18 
	sex_s
 {

19 *
msg
;

20 
signum
;

21 
mö¥o˚ss‹
;

23 
ex_s
 
ex_d©a
[] = {

24 "Dividêîr‹", 
SIGFPE
, 86,

25 "DebugÉx˚±i⁄", 
SIGTRAP
, 86,

26 "N⁄maskabÀ i¡îru±", 
SIGBUS
, 86,

27 "Bªakpoöt", 
SIGEMT
, 86,

28 "OvîÊow", 
SIGFPE
, 86,

29 "Bound†check", 
SIGFPE
, 186,

30 "InvÆid opcode", 
SIGILL
, 186,

31 "C›ro˚ss‹ÇŸávaûabÀ", 
SIGFPE
, 186,

32 "DoubÀ fau…", 
SIGBUS
, 286,

33 "C›ªss‹ segmíàovîrun", 
SIGSEGV
, 286,

34 "InvÆid TSS", 
SIGSEGV
, 286,

35 "SegmíànŸÖª£¡", 
SIGSEGV
, 286,

36 "SèckÉx˚±i⁄", 
SIGSEGV
, 286,

37 "GíîÆÖrŸe˘i⁄", 
SIGSEGV
, 286,

38 "PagêÁu…", 
SIGSEGV
, 386,

39 
NIL_PTR
, 
SIGILL
, 0,

40 "C›ro˚ss‹Éº‹", 
SIGFPE
, 386,

42 
ex_s
 *
ï
;

43 
¥oc
 *
ßved_¥oc
;

45 
ßved_¥oc

¥oc_±r
;

49 
ï
 = &
ex_d©a
[
vec_ƒ
];

51 i‡(
vec_ƒ
 == 2) {

52 
	`¥ötf
("got spurious NMI\n");

56 i‡(
k_ªíãr
 =0 && 
	`isu£Ω
(
ßved_¥oc
)) {

57 
	`u∆ock
();

58 
	`ˇu£_sig
(
	`¥oc_numbî
(
ßved_¥oc
), 
ï
->
signum
);

63 i‡(
ï
->
msg
 =
NIL_PTR
 || 
¥o˚ss‹
 <Ép->
mö¥o˚ss‹
)

64 
	`¥ötf
("\nI¡ñ-ª£rvedÉx˚±i⁄ %d\n", 
vec_ƒ
);

66 
	`¥ötf
("\n%s\n", 
ï
->
msg
);

67 
	`¥ötf
("processÇumber %d,Öc = 0x%04x:0x%08x\n",

68 
	`¥oc_numbî
(
ßved_¥oc
),

69 (Ë
ßved_¥oc
->
p_ªg
.
cs
,

70 (Ë
ßved_¥oc
->
p_ªg
.
pc
);

71 
	`∑nic
("ex˚±i⁄ i¿sy°em code", 
NO_NUM
);

72 
	}
}

	@exec.c

18 
	~"mm.h
"

19 
	~<sys/°©.h
>

20 
	~<möix/ˇŒƒ.h
>

21 
	~<a.out.h
>

22 
	~<sig«l.h
>

23 
	~<°rög.h
>

24 
	~"m¥oc.h
"

25 
	~"∑øm.h
"

27 
FORWARD
 
_PROTOTYPE
–
lﬂd_£g
, (
fd
, 
£g
, 
vú_byãs
 
£g_byãs
) );

28 
FORWARD
 
_PROTOTYPE
–
√w_mem
, (
m¥oc
 *
sh_mp
, 
vú_byãs
 
ãxt_byãs
,

29 
vú_byãs
 
d©a_byãs
, vú_byã†
bss_byãs
,

30 
vú_byãs
 
°k_byãs
, 
phys_byãs
 
tŸ_byãs
) );

31 
FORWARD
 
_PROTOTYPE
–
∑tch_±r
, (
°ack
 [
ARG_MAX
 ], 
vú_byãs
 
ba£
) );

32 
FORWARD
 
_PROTOTYPE
–
ªad_hódî
, (
fd
, *
·
, 
vú_byãs
 *
ãxt_byãs
,

33 
vú_byãs
 *
d©a_byãs
, vú_byã†*
bss_byãs
,

34 
phys_byãs
 *
tŸ_byãs
, *
sym_byãs
, 
vú_˛icks
 
sc
,

35 
vú_byãs
 *
pc
) );

37 #i‡(
SHADOWING
 == 1)

38 
FORWARD
 
_PROTOTYPE
–
ªloˇã
, (
fd
, *
buf
) );

44 
PUBLIC
 
	$do_exec
()

51 
m¥oc
 *
rmp
;

52 
m¥oc
 *
sh_mp
;

53 
m
, 
r
, 
fd
, 
·
, 
¢
;

54 
mbuf
[
ARG_MAX
];

55 
«me_buf
[
PATH_MAX
];

56 *
√w_•
, *
ba£«me
;

57 
vú_byãs
 
§c
, 
d°
, 
ãxt_byãs
, 
d©a_byãs
, 
bss_byãs
, 
°k_byãs
, 
v•
;

58 
phys_byãs
 
tŸ_byãs
;

59 
sym_byãs
;

60 
vú_˛icks
 
sc
;

61 
°©
 
s_buf
;

62 
vú_byãs
 
pc
;

65 
rmp
 = 
mp
;

66 
°k_byãs
 = (
vú_byãs
Ë
°ack_byãs
;

67 i‡(
°k_byãs
 > 
ARG_MAX
Ë(
ENOMEM
);

68 i‡(
exec_Àn
 <0 ||Éxec_À¿> 
PATH_MAX
Ë(
EINVAL
);

71 
§c
 = (
vú_byãs
Ë
exec_«me
;

72 
d°
 = (
vú_byãs
Ë
«me_buf
;

73 
r
 = 
	`sys_c›y
(
who
, 
D
, (
phys_byãs
Ë
§c
,

74 
MM_PROC_NR
, 
D
, (
phys_byãs
Ë
d°
, (phys_byãsË
exec_Àn
);

75 i‡(
r
 !
OK
) (r);

76 
	`ãŒ_fs
(
CHDIR
, 
who
, 
FALSE
, 0);

77 
fd
 = 
	`Ælowed
(
«me_buf
, &
s_buf
, 
X_BIT
);

78 i‡(
fd
 < 0) (fd);

81 
sc
 = (
°k_byãs
 + 
CLICK_SIZE
 - 1Ë>> 
CLICK_SHIFT
;

82 
m
 = 
	`ªad_hódî
(
fd
, &
·
, &
ãxt_byãs
, &
d©a_byãs
, &
bss_byãs
,

83 &
tŸ_byãs
, &
sym_byãs
, 
sc
, &
pc
);

84 i‡(
m
 < 0) {

85 
	`˛o£
(
fd
);

86 (
ENOEXEC
);

90 
§c
 = (
vú_byãs
Ë
°ack_±r
;

91 
d°
 = (
vú_byãs
Ë
mbuf
;

92 
r
 = 
	`sys_c›y
(
who
, 
D
, (
phys_byãs
Ë
§c
,

93 
MM_PROC_NR
, 
D
, (
phys_byãs
Ë
d°
, (phys_byãs)
°k_byãs
);

94 i‡(
r
 !
OK
) {

95 
	`˛o£
(
fd
);

96 (
EACCES
);

100 
sh_mp
 = 
	`föd_sh¨e
(
rmp
, 
s_buf
.
°_öo
, s_buf.
°_dev
, s_buf.
°_˘ime
);

103 
r
 = 
	`√w_mem
(
sh_mp
, 
ãxt_byãs
, 
d©a_byãs
, 
bss_byãs
, 
°k_byãs
, 
tŸ_byãs
);

104 i‡(
r
 !
OK
) {

105 
	`˛o£
(
fd
);

106 (
r
);

110 
rmp
->
mp_öo
 = 
s_buf
.
°_öo
;

111 
rmp
->
mp_dev
 = 
s_buf
.
°_dev
;

112 
rmp
->
mp_˘ime
 = 
s_buf
.
°_˘ime
;

115 
v•
 = (
vú_byãs
Ë
rmp
->
mp_£g
[
S
].
mem_vú
 << 
CLICK_SHIFT
;

116 
v•
 +(
vú_byãs
Ë
rmp
->
mp_£g
[
S
].
mem_Àn
 << 
CLICK_SHIFT
;

117 
v•
 -
°k_byãs
;

118 
	`∑tch_±r
(
mbuf
, 
v•
);

119 
§c
 = (
vú_byãs
Ë
mbuf
;

120 
r
 = 
	`sys_c›y
(
MM_PROC_NR
, 
D
, (
phys_byãs
Ë
§c
,

121 
who
, 
D
, (
phys_byãs
Ë
v•
, (phys_byãs)
°k_byãs
);

122 i‡(
r
 !
OK
Ë
	`∑nic
("do_exe¯°ack c›yÉº", 
NO_NUM
);

125 i‡(
sh_mp
 !
NULL
) {

126 
	`l£ek
(
fd
, (
off_t
Ë
ãxt_byãs
, 
SEEK_CUR
);

128 
	`lﬂd_£g
(
fd
, 
T
, 
ãxt_byãs
);

130 
	`lﬂd_£g
(
fd
, 
D
, 
d©a_byãs
);

132 #i‡(
SHADOWING
 == 1)

133 i‡(
	`l£ek
(
fd
, (
off_t
)
sym_byãs
, 
SEEK_CUR
) == (off_t) -1) ;

134 i‡(
	`ªloˇã
(
fd
, (*)
mbuf
) < 0) ;

135 
pc
 +(
vú_byãs
Ë
Ω
->
mp_£g
[
T
].
mem_vú
 << 
CLICK_SHIFT
;

138 
	`˛o£
(
fd
);

141 i‡((
rmp
->
mp_Êags
 & 
TRACED
) == 0) {

142 i‡(
s_buf
.
°_mode
 & 
I_SET_UID_BIT
) {

143 
rmp
->
mp_effuid
 = 
s_buf
.
°_uid
;

144 
	`ãŒ_fs
(
SETUID
,
who
, ()
rmp
->
mp_ªÆuid
, (Ïmp->
mp_effuid
);

146 i‡(
s_buf
.
°_mode
 & 
I_SET_GID_BIT
) {

147 
rmp
->
mp_effgid
 = 
s_buf
.
°_gid
;

148 
	`ãŒ_fs
(
SETGID
,
who
, ()
rmp
->
mp_ªÆgid
, (Ïmp->
mp_effgid
);

153 
rmp
->
mp_¥oˇrgs
 = 
v•
;

156 
¢
 = 1; s¿<
_NSIG
; sn++) {

157 i‡(
	`sigismembî
(&
rmp
->
mp_ˇtch
, 
¢
)) {

158 
	`sigdñ£t
(&
rmp
->
mp_ˇtch
, 
¢
);

159 
rmp
->
mp_siga˘
[
¢
].
ß_h™dÀr
 = 
SIG_DFL
;

160 
	`sigem±y£t
(&
rmp
->
mp_siga˘
[
¢
].
ß_mask
);

164 
rmp
->
mp_Êags
 &~
SEPARATE
;

165 
rmp
->
mp_Êags
 |
·
;

166 
√w_•
 = (*Ë
v•
;

168 
	`ãŒ_fs
(
EXEC
, 
who
, 0, 0);

171 
ba£«me
 = 
	`°ºchr
(
«me_buf
, '/');

172 i‡(
ba£«me
 =
NULL
Ëba£«mê
«me_buf
; basename++;

173 
	`sys_exec
(
who
, 
√w_•
, 
rmp
->
mp_Êags
 & 
TRACED
, 
ba£«me
, 
pc
);

174 (
OK
);

175 
	}
}

181 
PRIVATE
 
	$ªad_hódî
(
fd
, 
·
, 
ãxt_byãs
, 
d©a_byãs
, 
bss_byãs
,

182 
tŸ_byãs
, 
sym_byãs
, 
sc
, 
pc
)

183 
fd
;

184 *
·
;

185 
vú_byãs
 *
ãxt_byãs
;

186 
vú_byãs
 *
d©a_byãs
;

187 
vú_byãs
 *
bss_byãs
;

188 
phys_byãs
 *
tŸ_byãs
;

189 *
sym_byãs
;

190 
vú_˛icks
 
sc
;

191 
vú_byãs
 *
pc
;

195 
m
, 
˘
;

196 
vú_˛icks
 
tc
, 
dc
, 
s_vú
, 
dvú
;

197 
phys_˛icks
 
tŸc
;

198 
exec
 
hdr
;

227 i‡(
	`ªad
(
fd
, (*Ë&
hdr
, 
A_MINHDR
Ë!A_MINHDRË(
ENOEXEC
);

230 i‡(
	`BADMAG
(
hdr
)Ë(
ENOEXEC
);

231 #i‡(
CHIP
 =
INTEL
 && 
_WORD_SIZE
 == 2)

232 i‡(
hdr
.
a_˝u
 !
A_I8086
Ë(
ENOEXEC
);

234 #i‡(
CHIP
 =
INTEL
 && 
_WORD_SIZE
 == 4)

235 i‡(
hdr
.
a_˝u
 !
A_I80386
Ë(
ENOEXEC
);

237 i‡((
hdr
.
a_Êags
 & ~(
A_NSYM
 | 
A_EXEC
 | 
A_SEP
)Ë!0Ë(
ENOEXEC
);

239 *
·
 = ( (
hdr
.
a_Êags
 & 
A_SEP
Ë? 
SEPARATE
 : 0);

242 *
ãxt_byãs
 = (
vú_byãs
Ë
hdr
.
a_ãxt
;

243 *
d©a_byãs
 = (
vú_byãs
Ë
hdr
.
a_d©a
;

244 *
bss_byãs
 = (
vú_byãs
Ë
hdr
.
a_bss
;

245 *
tŸ_byãs
 = 
hdr
.
a_tŸÆ
;

246 *
sym_byãs
 = 
hdr
.
a_syms
;

247 i‡(*
tŸ_byãs
 =0Ë(
ENOEXEC
);

249 i‡(*
·
 !
SEPARATE
) {

251 #i‡(
SHADOWING
 == 0)

253 *
d©a_byãs
 +*
ãxt_byãs
;

254 *
ãxt_byãs
 = 0;

266 *
d©a_byãs
 +*
ãxt_byãs
;

267 *
ãxt_byãs
 = (*ãxt_byã†>> 
CLICK_SHIFT
) << CLICK_SHIFT;

268 *
d©a_byãs
 -*
ãxt_byãs
;

269 *
tŸ_byãs
 -*
ãxt_byãs
;

273 *
pc
 = 
hdr
.
a_íåy
;

276 
tc
 = ((Ë*
ãxt_byãs
 + 
CLICK_SIZE
 - 1Ë>> 
CLICK_SHIFT
;

277 
dc
 = (*
d©a_byãs
 + *
bss_byãs
 + 
CLICK_SIZE
 - 1Ë>> 
CLICK_SHIFT
;

278 
tŸc
 = (*
tŸ_byãs
 + 
CLICK_SIZE
 - 1Ë>> 
CLICK_SHIFT
;

279 i‡(
dc
 >
tŸc
Ë(
ENOEXEC
);

280 
dvú
 = (*
·
 =
SEPARATE
 ? 0 : 
tc
);

281 
s_vú
 = 
dvú
 + (
tŸc
 - 
sc
);

282 
m
 = 
	`size_ok
(*
·
, 
tc
, 
dc
, 
sc
, 
dvú
, 
s_vú
);

283 
˘
 = 
hdr
.
a_hdæí
 & 
BYTE
;

284 i‡(
˘
 > 
A_MINHDR
Ë
	`l£ek
(
fd
, (
off_t
Ë˘, 
SEEK_SET
);

285 (
m
);

286 
	}
}

292 
PRIVATE
 
	$√w_mem
(
sh_mp
, 
ãxt_byãs
, 
d©a_byãs
,
bss_byãs
,
°k_byãs
,
tŸ_byãs
)

293 
m¥oc
 *
sh_mp
;

294 
vú_byãs
 
ãxt_byãs
;

295 
vú_byãs
 
d©a_byãs
;

296 
vú_byãs
 
bss_byãs
;

297 
vú_byãs
 
°k_byãs
;

298 
phys_byãs
 
tŸ_byãs
;

304 
m¥oc
 *
rmp
;

305 
vú_˛icks
 
ãxt_˛icks
, 
d©a_˛icks
, 
g≠_˛icks
, 
°ack_˛icks
, 
tŸ_˛icks
;

306 
phys_˛icks
 
√w_ba£
;

308 #i‡(
SHADOWING
 == 1)

309 
phys_˛icks
 
ba£
, 
size
;

311 
zîo
[1024];

312 
phys_byãs
 
byãs
, 
ba£
, 
cou¡
, 
bss_off£t
;

316 i‡(
sh_mp
 !
NULL
Ë
ãxt_byãs
 = 0;

323 
ãxt_˛icks
 = ((Ë
ãxt_byãs
 + 
CLICK_SIZE
 - 1Ë>> 
CLICK_SHIFT
;

324 
d©a_˛icks
 = (
d©a_byãs
 + 
bss_byãs
 + 
CLICK_SIZE
 - 1Ë>> 
CLICK_SHIFT
;

325 
°ack_˛icks
 = (
°k_byãs
 + 
CLICK_SIZE
 - 1Ë>> 
CLICK_SHIFT
;

326 
tŸ_˛icks
 = (
tŸ_byãs
 + 
CLICK_SIZE
 - 1Ë>> 
CLICK_SHIFT
;

327 
g≠_˛icks
 = 
tŸ_˛icks
 - 
d©a_˛icks
 - 
°ack_˛icks
;

328 i‡–(Ë
g≠_˛icks
 < 0Ë(
ENOMEM
);

334 i‡(
ãxt_˛icks
 + 
tŸ_˛icks
 > 
	`max_hﬁe
()Ë(
EAGAIN
);

337 
rmp
 = 
mp
;

339 #i‡(
SHADOWING
 == 0)

340 i‡(
	`föd_sh¨e
(
rmp
,Ñmp->
mp_öo
,Ñmp->
mp_dev
,Ñmp->
mp_˘ime
Ë=
NULL
) {

342 
	`‰ì_mem
(
rmp
->
mp_£g
[
T
].
mem_phys
,Ñmp->mp_£g[T].
mem_Àn
);

345 
	`‰ì_mem
(
rmp
->
mp_£g
[
D
].
mem_phys
,

346 
rmp
->
mp_£g
[
S
].
mem_vú
 +Ñmp->mp_£g[S].
mem_Àn
 -Ñmp->mp_£g[
D
].mem_vir);

352 
√w_ba£
 = 
	`Æloc_mem
(
ãxt_˛icks
 + 
tŸ_˛icks
);

353 i‡(
√w_ba£
 =
NO_MEM
Ë
	`∑nic
("MM hﬁêli° i†öc⁄si°ít", 
NO_NUM
);

355 i‡(
sh_mp
 !
NULL
) {

357 
rmp
->
mp_£g
[
T
] = 
sh_mp
->mp_seg[T];

359 
rmp
->
mp_£g
[
T
].
mem_phys
 = 
√w_ba£
;

360 
rmp
->
mp_£g
[
T
].
mem_vú
 = 0;

361 
rmp
->
mp_£g
[
T
].
mem_Àn
 = 
ãxt_˛icks
;

363 
rmp
->
mp_£g
[
D
].
mem_phys
 = 
√w_ba£
 + 
ãxt_˛icks
;

364 
rmp
->
mp_£g
[
D
].
mem_vú
 = 0;

365 
rmp
->
mp_£g
[
D
].
mem_Àn
 = 
d©a_˛icks
;

366 
rmp
->
mp_£g
[
S
].
mem_phys
 =Ñmp->mp_£g[
D
].mem_phy†+ 
d©a_˛icks
 + 
g≠_˛icks
;

367 
rmp
->
mp_£g
[
S
].
mem_vú
 =Ñmp->mp_£g[
D
].mem_vú + 
d©a_˛icks
 + 
g≠_˛icks
;

368 
rmp
->
mp_£g
[
S
].
mem_Àn
 = 
°ack_˛icks
;

370 #i‡(
CHIP
 =
M68000
)

371 #i‡(
SHADOWING
 == 0)

372 
rmp
->
mp_£g
[
T
].
mem_vú
 = 0;

373 
rmp
->
mp_£g
[
D
].
mem_vú
 =Ñmp->mp_£g[
T
].
mem_Àn
;

374 
rmp
->
mp_£g
[
S
].
mem_vú
 =Ñmp->mp_£g[
D
].mem_vú +Ñmp->mp_£g[D].
mem_Àn
 + 
g≠_˛icks
;

376 
rmp
->
mp_£g
[
T
].
mem_vú
 =Ñmp->mp_£g[T].
mem_phys
;

377 
rmp
->
mp_£g
[
D
].
mem_vú
 =Ñmp->mp_£g[D].
mem_phys
;

378 
rmp
->
mp_£g
[
S
].
mem_vú
 =Ñmp->mp_£g[S].
mem_phys
;

382 #i‡(
SHADOWING
 == 0)

383 
	`sys_√wm≠
(
who
, 
rmp
->
mp_£g
);

386 
byãs
 = (
phys_byãs
)(
d©a_˛icks
 + 
g≠_˛icks
 + 
°ack_˛icks
Ë<< 
CLICK_SHIFT
;

387 
ba£
 = (
phys_byãs
Ë
rmp
->
mp_£g
[
D
].
mem_phys
 << 
CLICK_SHIFT
;

388 
bss_off£t
 = (
d©a_byãs
 >> 
CLICK_SHIFT
) << CLICK_SHIFT;

389 
ba£
 +
bss_off£t
;

390 
byãs
 -
bss_off£t
;

392 
byãs
 > 0) {

393 
cou¡
 = 
	`MIN
(
byãs
, (
phys_byãs
Ë(
zîo
));

394 i‡(
	`sys_c›y
(
MM_PROC_NR
, 
D
, (
phys_byãs
Ë
zîo
,

395 
ABS
, 0, 
ba£
, 
cou¡
Ë!
OK
) {

396 
	`∑nic
("√w_mem c™'àzîo", 
NO_NUM
);

398 
ba£
 +
cou¡
;

399 
byãs
 -
cou¡
;

403 #i‡(
SHADOWING
 == 1)

404 
	`sys_‰esh
(
who
, 
rmp
->
mp_£g
, (
phys_˛icks
)(
d©a_byãs
 >> 
CLICK_SHIFT
),

405 &
ba£
, &
size
);

406 
	`‰ì_mem
(
ba£
, 
size
);

409 (
OK
);

410 
	}
}

416 
PRIVATE
 
	$∑tch_±r
(
°ack
, 
ba£
)

417 
°ack
[
ARG_MAX
];

418 
vú_byãs
 
ba£
;

426 **
≠
, 
Êag
;

427 
vú_byãs
 
v
;

429 
Êag
 = 0;

430 
≠
 = (**Ë
°ack
;

431 
≠
++;

432 
Êag
 < 2) {

433 i‡(
≠
 >(**Ë&
°ack
[
ARG_MAX
]) ;

434 i‡(*
≠
 !
NIL_PTR
) {

435 
v
 = (
vú_byãs
Ë*
≠
;

436 
v
 +
ba£
;

437 *
≠
 = (*Ë
v
;

439 
Êag
++;

441 
≠
++;

443 
	}
}

449 
PRIVATE
 
	$lﬂd_£g
(
fd
, 
£g
, 
£g_byãs
)

450 
fd
;

451 
£g
;

452 
vú_byãs
 
£g_byãs
;

466 
√w_fd
, 
byãs
;

467 *
ubuf_±r
;

469 
√w_fd
 = (
who
 << 8Ë| (
£g
 << 6Ë| 
fd
;

470 
ubuf_±r
 = (*Ë((
vú_byãs
)
mp
->
mp_£g
[
£g
].
mem_vú
 << 
CLICK_SHIFT
);

471 
£g_byãs
 != 0) {

472 
byãs
 = (
INT_MAX
 / 
BLOCK_SIZE
) * BLOCK_SIZE;

473 i‡(
£g_byãs
 < 
byãs
)

474 
byãs
 = ()
£g_byãs
;

475 i‡(
	`ªad
(
√w_fd
, 
ubuf_±r
, 
byãs
) != bytes)

477 
ubuf_±r
 +
byãs
;

478 
£g_byãs
 -
byãs
;

480 
	}
}

486 
PUBLIC
 
m¥oc
 *
	$föd_sh¨e
(
mp_ign
, 
öo
, 
dev
, 
˘ime
)

487 
m¥oc
 *
mp_ign
;

488 
öo_t
 
öo
;

489 
dev_t
 
dev
;

490 
time_t
 
˘ime
;

496 
m¥oc
 *
sh_mp
;

498 
sh_mp
 = &
m¥oc
[
INIT_PROC_NR
]; sh_m∞< &m¥oc[
NR_PROCS
]; sh_mp++) {

499 i‡((
sh_mp
->
mp_Êags
 & (
IN_USE
 | 
HANGING
 | 
SEPARATE
))

500 !(
IN_USE
 | 
SEPARATE
)) ;

501 i‡(
sh_mp
 =
mp_ign
) ;

502 i‡(
sh_mp
->
mp_öo
 !
öo
) ;

503 i‡(
sh_mp
->
mp_dev
 !
dev
) ;

504 i‡(
sh_mp
->
mp_˘ime
 !
˘ime
) ;

505  
sh_mp
;

507 (
NULL
);

508 
	}
}

511 #i‡(
SHADOWING
 == 1)

515 
PRIVATE
 
	$ªloˇã
(
fd
, 
buf
)

516 
fd
;

517 *
buf
;

519 
n
;

520 *
p
, 
c
;

521 
phys_byãs
 
off
;

522 
phys_byãs
 
adr
;

544 
off
 = (
phys_byãs
)
mp
->
mp_£g
[
T
].
mem_phys
 << 
CLICK_SHIFT
;

545 
p
 = 
buf
;

546 
n
 = 
	`ªad
(
fd
, (*)
p
, 
ARG_MAX
);

547 i‡(
n
 < ()) (-1);

548 i‡(*((*)
p
) == 0) (0);

549 
adr
 = 
off
 + *((*)
p
);

550 
n
 -= ();

551 
p
 += ();

552 *((*)
adr
Ë+
off
;

554 i‡(--
n
 < 0) {

555 
p
 = 
buf
;

556 
n
 = 
	`ªad
(
fd
, (*)
p
, 
ARG_MAX
);

557 i‡(--
n
 < 0)

560 
c
 = *
p
++;

561 i‡(
c
 == 1)

562 
adr
 += 254;

563 i‡(
c
 == 0)

565 i‡(
c
 & 1)

568 
adr
 +
c
;

569 *((*)
adr
Ë+
off
;

572 
	}
}

	@execlp.c

38 
	~<sys/ty≥s.h
>

39 
	~<lib.h
>

40 
	~<î∫o.h
>

41 
	~<limôs.h
>

42 
	~<°dlib.h
>

43 
	~<°rög.h
>

44 
	~<uni°d.h
>

45 
	~<°d¨g.h
>

47 #unde‡
NULL


48 
	#NULL
 0

	)

50 
	#MAX_NUM_ARGS
 512

	)

52 **
ívú⁄
;

54 #ifde‡
_ANSI


55 
	$exe˛p
(c⁄° *
fûe
, c⁄° *
¨g
, ...)

57 
	$exe˛p
(
fûe
)

58 *
fûe
;

61 
va_li°
 
¨gp
;

62 
ªsu…
;

64 
	`va_°¨t
(
¨gp
, 
fûe
);

65 
ªsu…
 = 
	`execvp
(
fûe
, (**Ë
¨gp
);

66 
	`va_íd
(
¨gp
);

67 (
ªsu…
);

68 
	}
}

70 #ifde‡
_ANSI


71 
	$execvp
(c⁄° *
fûe
, *c⁄° 
¨gv
[])

73 
	$execvp
(
fûe
, 
¨gv
)

74 *
fûe
;

75 **
¨gv
;

78 
i
, 
be°_î∫o
;

79 **
ívt›
;

80 
size_t
 
Êígth
;

81 *
£¨ch∑th
;

82 
size_t
 
¶ígth
;

83 *
•lô
;

84 
exe˝©h
[
PATH_MAX
 + 1];

85 *
¨g2
[
MAX_NUM_ARGS
 + 3];

98 i‡(
	`°rchr
(
fûe
, '/'Ë!
NULL
 || (
£¨ch∑th
 = 
	`gëív
("PATH")) == NULL)

99 
£¨ch∑th
 = "";

100 
Êígth
 = 
	`°æí
(
fûe
);

101 
be°_î∫o
 = 
ENOENT
;

104 
•lô
 = 
	`°rchr
(
£¨ch∑th
, ':');

105 i‡(
•lô
 =
NULL
)

106 
¶ígth
 = 
	`°æí
(
£¨ch∑th
);

108 
¶ígth
 = 
•lô
 - 
£¨ch∑th
;

109 i‡(
¶ígth
 + 
Êígth
 > 
exe˝©h
 - 2) {

110 
î∫o
 = 
ENAMETOOLONG
;

113 
	`°∫˝y
(
exe˝©h
, 
£¨ch∑th
, 
¶ígth
);

114 i‡(
¶ígth
 !0Ë
exe˝©h
[slength++] = '/';

115 
	`°r˝y
(
exe˝©h
 + 
¶ígth
, 
fûe
);

121 
	`execv
(
exe˝©h
, 
¨gv
);

122 
î∫o
) {

123 
EACCES
:

124 
be°_î∫o
 = 
î∫o
;

125 
ENOENT
:

126 i‡(
•lô
 =
NULL
) {

128 
î∫o
 = 
be°_î∫o
;

131 
£¨ch∑th
 = 
•lô
 + 1;

133 
ENOEXEC
:

143 
i
 = 0;

144 i‡(
¨gv
 !
NULL
)

146 
¨gv
[
i
] != 0) {

147 i‡(
i
 >
MAX_NUM_ARGS
) {

149 
î∫o
 = 
ENOEXEC
;

152 
¨g2
[
i
 + 1] = 
¨gv
[i];

153 
i
++;

156 
¨g2
[0] = "sh";

157 
¨g2
[1] = 
exe˝©h
;

158 
¨g2
[
i
 + 1] = 
NULL
;

161 
ívt›
 = 
ívú⁄
; *ívt› !
NULL
; )Énvtop++;

166 
	`__execve
("/bö/sh", 
¨g2
, 
ívú⁄
, 
i
 + 1, ()(
ívt›
 -Énviron));

169 
î∫o
 = 
ENOEXEC
;

175 
	}
}

	@exit.c

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

10 
	#NEXITS
 32

	)

12 (*
__fun˘ab
[
NEXITS
])();

13 
__func˙t
 = 0;

15 
	`_exô
();

18 (*
_˛ón
)(Ë
NULL
;

21 
	$_ˇŒs
()

23 
i
 = 
__func˙t
;

26 --
i
 >= 0)

27 (*
__fun˘ab
[
i
])();

28 
	}
}

31 
	$exô
(
°©us
)

33 
	`_ˇŒs
();

34 i‡(
_˛ón
Ë
	`_˛ón
();

35 
	`_exô
(
°©us
) ;

36 
	}
}

	@exp.c

9 
	~<m©h.h
>

10 
	~<Êﬂt.h
>

11 
	~<î∫o.h
>

12 
	~"loˇlm©h.h
"

16 
	$exp
(
x
)

23 
p
[] = {

29 
q
[] = {

35 
xn
, 
g
;

36 
n
;

37 
√g©ive
 = 
x
 < 0;

39 i‡(
	`__IsN™
(
x
)) {

40 
î∫o
 = 
EDOM
;

41  
x
;

43 i‡(
x
 < 
M_LN_MIN_D
) {

44 
î∫o
 = 
ERANGE
;

47 i‡(
x
 > 
M_LN_MAX_D
) {

48 
î∫o
 = 
ERANGE
;

49  
HUGE_VAL
;

52 i‡(
√g©ive
Ë
x
 = -x;

56 
n
 = 
x
 * 
M_LOG2E
 + 0.5;

57 
xn
 = 
n
;

59 
x1
 = (Ë
x
;

60 
x2
 = 
x
 - 
x1
;

62 
g
 = ((
x1
-
xn
*0.693359375)+
x2
) - xn*(-2.1219444005469058277e-4);

64 i‡(
√g©ive
) {

65 
g
 = -g;

66 
n
 = -n;

68 
xn
 = 
g
 * g;

69 
x
 = 
g
 * 
	`POLYNOM2
(
xn
, 
p
);

70 
n
 += 1;

71  (
	`ldexp
(0.5 + 
x
/(
	`POLYNOM3
(
xn
, 
q
Ë- x), 
n
));

72 
	}
}

	@ext_comp.c

14 
	~"ext_fmt.h
"

15 
	~<Êﬂt.h
>

16 
	~<î∫o.h
>

17 
	~<˘y≥.h
>

19 
b64_add
(
m™tisß
 *
e1
, m™tisß *
e2
);

20 
b64_s·
(
m™tisß
 *
e1
, 
n
);

23 
	$mul_ext
(
EXTEND
 *
e1
, EXTEND *
e2
, EXTEND *
e3
)

28 
i
,
j
;

29 
mp
[4];

30 
mc
[4];

31 
ªsu…
[8];

33 *
¥es
;

36 
e3
->
sign
 = 
e1
->sig¿^ 
e2
->sign;

39 
e3
->
exp
 = 
e1
->ex∞+ 
e2
->exp + 1;

47 
mp
[0] = 
e1
->
m1
 >> 16;

48 
mp
[1] = (Ë
e1
->
m1
;

49 
mp
[2] = 
e1
->
m2
 >> 16;

50 
mp
[3] = (Ë
e1
->
m2
;

51 
mc
[0] = 
e2
->
m1
 >> 16;

52 
mc
[1] = (Ë
e2
->
m1
;

53 
mc
[2] = 
e2
->
m2
 >> 16;

54 
mc
[3] = (Ë
e2
->
m2
;

55 
i
 = 8; i--;) {

56 
ªsu…
[
i
] = 0;

61 
i
=4, 
¥es
 = &
ªsu…
[4];i--;¥es--Ëi‡(
mp
[i]) {

62 
k
 = 0;

63 
mpi
 = 
mp
[
i
];

64 
j
=4;j--;) {

65 
tmp
 = ()
¥es
[
j
] + 
k
;

66 i‡(
mc
[
j
]Ë
tmp
 +
mpi
 * mc[j];

67 
¥es
[
j
] = 
tmp
;

68 
k
 = 
tmp
 >> 16;

70 
¥es
[-1] = 
k
;

73 i‡(! (
ªsu…
[0] & 0x8000)) {

74 
e3
->
exp
--;

75 
i
 = 0; i <= 3; i++) {

76 
ªsu…
[
i
] <<= 1;

77 i‡(
ªsu…
[
i
+1]&0x8000)Ñesult[i] |= 1;

79 
ªsu…
[4] <<= 1;

84 
e3
->
m1
 = (()(
ªsu…
[0]) << 16) +Ñesult[1];

85 
e3
->
m2
 = (()(
ªsu…
[2]) << 16) +Ñesult[3];

86 i‡(
ªsu…
[4] & 0x8000) {

87 i‡(++
e3
->
m2
 == 0) {

88 i‡(++
e3
->
m1
 == 0) {

89 
e3
->
m1
 = 0x80000000;

90 
e3
->
exp
++;

94 
	}
}

97 
	$add_ext
(
EXTEND
 *
e1
, EXTEND *
e2
, EXTEND *
e3
)

102 
EXTEND
 
˚2
;

103 
diff
;

105 i‡((
e2
->
m1
 |É2->
m2
) == 0L) {

106 *
e3
 = *
e1
;

109 i‡((
e1
->
m1
 |É1->
m2
) == 0L) {

110 *
e3
 = *
e2
;

113 
˚2
 = *
e2
;

114 *
e3
 = *
e1
;

115 
e1
 = &
˚2
;

118 
diff
 = 
e3
->
exp
 - 
e1
->exp;

119 i‡(
diff
 < 0) {

120 
diff
 = -diff;

121 
e3
->
exp
 +
diff
;

122 
	`b64_s·
(&(
e3
->
m™tisß
), 
diff
);

124 i‡(
diff
 > 0) {

125 
e1
->
exp
 +
diff
;

126 
	`b64_s·
(&(
e1
->
m™tisß
), 
diff
);

128 i‡(
e1
->
sign
 !
e3
->sign) {

130 i‡(
e1
->
m1
 > 
e3
->m1 ||

131 (
e1
->
m1
 =
e3
->m1 &&É1->
m2
 >É3->m2)) {

133 i‡(
e3
->
m2
 > 
e1
->m2) {

134 
e1
->
m1
 -= 1;

136 
e1
->
m1
 -
e3
->m1;

137 
e1
->
m2
 -
e3
->m2;

138 *
e3
 = *
e1
;

141 i‡(
e1
->
m2
 > 
e3
->m2)

142 
e3
->
m1
 -= 1;

143 
e3
->
m1
 -
e1
->m1;

144 
e3
->
m2
 -
e1
->m2;

148 i‡(
	`b64_add
(&
e3
->
m™tisß
,&
e1
->mantissa)) {

149 
	`b64_s·
(&
e3
->
m™tisß
,1);

150 
e3
->
m1
 |= 0x80000000L;

151 
e3
->
exp
++;

154 i‡((
e3
->
m2
 |É3->
m1
) != 0L) {

156 i‡(
e3
->
m1
 == 0L) {

157 
e3
->
m1
 =É3->
m2
;É3->m2 = 0L;É3->
exp
 -= 32;

159 i‡(!(
e3
->
m1
 & 0x80000000)) {

160 
l
 = 0x40000000;

161 
˙t
 = -1;

163 ! (
l
 & 
e3
->
m1
)) {

164 
l
 >>1; 
˙t
--;

166 
e3
->
exp
 +
˙t
;

167 
	`b64_s·
(&(
e3
->
m™tisß
), 
˙t
);

170 
	}
}

173 
	$cmp_ext
(
EXTEND
 *
e1
, EXTEND *
e2
)

175 
EXTEND
 
tmp
;

177 
e2
->
sign
 = !É2->sign;

178 
	`add_ext
(
e1
, 
e2
, &
tmp
);

179 
e2
->
sign
 = !É2->sign;

180 i‡(
tmp
.
m1
 =0 &&Åmp.
m2
 == 0)  0;

181 i‡(
tmp
.
sign
)  -1;

183 
	}
}

186 
	$b64_s·
(
m™tisß
 *
e1
, 
n
)

188 i‡(
n
 > 0) {

189 i‡(
n
 > 63) {

190 
e1
->
l_32
 = 0;

191 
e1
->
h_32
 = 0;

194 i‡(
n
 >= 32) {

195 
e1
->
l_32
 =É1->
h_32
;

196 
e1
->
h_32
 = 0;

197 
n
 -= 32;

199 i‡(
n
 > 0) {

200 
e1
->
l_32
 >>
n
;

201 i‡(
e1
->
h_32
 != 0) {

202 
e1
->
l_32
 |”1->
h_32
 << (32 - 
n
));

203 
e1
->
h_32
 >>
n
;

208 
n
 = -n;

209 i‡(
n
 > 0) {

210 i‡(
n
 > 63) {

211 
e1
->
l_32
 = 0;

212 
e1
->
h_32
 = 0;

215 i‡(
n
 >= 32) {

216 
e1
->
h_32
 =É1->
l_32
;

217 
e1
->
l_32
 = 0;

218 
n
 -= 32;

220 i‡(
n
 > 0) {

221 
e1
->
h_32
 <<
n
;

222 i‡(
e1
->
l_32
 != 0) {

223 
e1
->
h_32
 |”1->
l_32
 >> (32 - 
n
));

224 
e1
->
l_32
 <<
n
;

228 
	}
}

231 
	$b64_add
(
m™tisß
 *
e1
, m™tisß *
e2
)

236 
ovîÊow
;

237 
ˇºy
;

240 
ovîÊow
 = ((Ë0xFFFFFFFF - 
e1
->
h_32
 < 
e2
->h_32);

241 
e1
->
h_32
 +
e2
->h_32;

244 
ˇºy
 = ((Ë0xFFFFFFFF - 
e1
->
l_32
 < 
e2
->l_32);

245 
e1
->
l_32
 +
e2
->l_32;

246 i‡((
ˇºy
Ë&& (++
e1
->
h_32
 == 0))

249 (
ovîÊow
);

250 
	}
}

327 
EXTEND
 
	gãn_powîs
[] = {

357 
EXTEND
 
	gbig_ãn_powîs
[] = {

380 
EXTEND
 
	gr_ãn_powîs
[] = {

411 
EXTEND
 
	gr_big_ãn_powîs
[] = {

434 
	#TP
 ()((
ãn_powîs
)/—í_powîs[0]))

	)

435 
	#BTP
 ()((
big_ãn_powîs
)/(big_ãn_powîs[0]))

	)

436 
	#MAX_EXP
 (
TP
 * 
BTP
 - 1)

	)

439 
	$add_exp⁄ít
(
EXTEND
 *
e
, 
exp
)

441 
√g
 = 
exp
 < 0;

442 
divsz
, 
modsz
;

443 
EXTEND
 
x
;

445 i‡(
√g
Ë
exp
 = -exp;

446 
divsz
 = 
exp
 / 
TP
;

447 
modsz
 = 
exp
 % 
TP
;

448 i‡(
√g
) {

449 
	`mul_ext
(
e
, &
r_ãn_powîs
[
modsz
], &
x
);

450 
	`mul_ext
(&
x
, &
r_big_ãn_powîs
[
divsz
], 
e
);

453 
	`mul_ext
(
e
, &
ãn_powîs
[
modsz
], &
x
);

454 
	`mul_ext
(&
x
, &
big_ãn_powîs
[
divsz
], 
e
);

456 
	}
}

458 
	$_°r_ext_cvt
(c⁄° *
s
, **
ss
, 
EXTEND
 *
e
)

461 
c
;

462 
dŸ£í
 = 0;

463 
digô£í
 = 0;

464 
exp
 = 0;

466 i‡(
ss
Ë*s†(*)
s
;

467 
	`is•a˚
(*
s
)) s++;

469 
e
->
sign
 = 0;

470 
e
->
exp
 = 0;

471 
e
->
m1
 =É->
m2
 = 0;

473 
c
 = *
s
;

474 
c
) {

476 
e
->
sign
 = 1;

478 
s
++;

480 
c
 = *
s
++, 
	`isdigô
(cË|| (¯='.' && ! 
dŸ£í
++)) {

481 i‡(
c
 == '.') ;

482 
digô£í
 = 1;

483 i‡(
e
->
m1
 <= ()(0xFFFFFFFF)/10) {

484 
m™tisß
 
a1
;

486 
a1
 = 
e
->
m™tisß
;

487 
	`b64_s·
(&(
e
->
m™tisß
), -3);

488 
	`b64_s·
(&
a1
, -1);

489 
	`b64_add
(&(
e
->
m™tisß
), &
a1
);

490 
a1
.
h_32
 = 0;

491 
a1
.
l_32
 = 
c
 - '0';

492 
	`b64_add
(&(
e
->
m™tisß
), &
a1
);

494 
exp
++;

495 i‡(
dŸ£í
Ë
exp
--;

497 i‡(! 
digô£í
) ;

499 i‡(
ss
Ë*s†(*)
s
 - 1;

501 i‡(
c
 == 'E' || c == 'e') {

502 
exp1
 = 0;

503 
sign
 = 1;

504 
exp_ovîÊow
 = 0;

506 *
s
) {

508 
sign
 = -1;

510 
s
++;

512 i‡(
c
 = *
s
, 
	`isdigô
(c)) {

514 
tmp
;

516 
exp1
 = 10 *Éxp1 + (
c
 - '0');

517 i‡((
tmp
 = 
sign
 * 
exp1
 + 
exp
Ë> 
MAX_EXP
 ||

518 
tmp
 < -
MAX_EXP
) {

519 
exp_ovîÊow
 = 1;

521 } 
c
 = *++
s
, 
	`isdigô
(c));

522 i‡(
ss
Ë*s†(*)
s
;

524 
exp
 +
sign
 * 
exp1
;

525 i‡(
exp_ovîÊow
) {

526 
exp
 = 
sign
 * 
MAX_EXP
;

527 i‡(
e
->
m1
 !0 ||É->
m2
 !0Ë
î∫o
 = 
ERANGE
;

530 i‡(
e
->
m1
 =0 &&É->
m2
 == 0) ;

531 
e
->
exp
 = 63;

532 ! (
e
->
m1
 & 0x80000000)) {

533 
	`b64_s·
(&(
e
->
m™tisß
),-1);

534 
e
->
exp
--;

536 
	`add_exp⁄ít
(
e
, 
exp
);

537 
	}
}

539 
	~<m©h.h
>

542 
	$ãn_mu…
(
EXTEND
 *
e
)

544 
EXTEND
 
e1
 = *
e
;

546 
e1
.
exp
++;

547 
e
->
exp
 += 3;

548 
	`add_ext
(
e
, &
e1
,É);

549 
	}
}

551 
	#NDIGITS
 128

	)

552 
	#NSIGNIFICANT
 19

	)

555 
	$_ext_°r_cvt
(
EXTEND
 *
e
, 
ndigô
, *
de˝t
, *
sign
, 
ecvtÊag
)

559 
buf
[
NDIGITS
+1];

560 
EXTEND
 
m
;

561 *
p
 = 
buf
;

562 *
≥
;

563 
födex
 = 0;

565 i‡(
ndigô
 < 0)Çdigit = 0;

566 i‡(
ndigô
 > 
NDIGITS
)Çdigit = NDIGITS;

567 
≥
 = &
buf
[
ndigô
];

568 
buf
[0] = '\0';

570 *
sign
 = 0;

571 i‡(
e
->
sign
) {

572 *
sign
 = 1;

573 
e
->
sign
 = 0;

576 *
de˝t
 = 0;

577 i‡(
e
->
m1
 != 0) {

578 
EXTEND
 *
µ
 = &
big_ãn_powîs
[1];

580 
	`cmp_ext
(
e
,
µ
) >= 0) {

581 
µ
++;

582 
födex
 = 
µ
 - 
big_ãn_powîs
;

583 i‡(
födex
 >
BTP
) ;

585 
µ
--;

586 
födex
 = 
µ
 - 
big_ãn_powîs
;

587 
	`mul_ext
(
e
,&
r_big_ãn_powîs
[
födex
],e);

588 *
de˝t
 +
födex
 * 
TP
;

589 
µ
 = &
ãn_powîs
[1];

590 
µ
 < &
ãn_powîs
[
TP
] && 
	`cmp_ext
(
e
,Öp) >= 0)Öp++;

591 
µ
--;

592 
födex
 = 
µ
 - 
ãn_powîs
;

593 *
de˝t
 +
födex
;

595 i‡(
	`cmp_ext
(
e
, &
ãn_powîs
[0]) < 0) {

596 
µ
 = &
r_big_ãn_powîs
[1];

597 
	`cmp_ext
(
e
,
µ
) < 0)Öp++;

598 
µ
--;

599 
födex
 = 
µ
 - 
r_big_ãn_powîs
;

600 
	`mul_ext
(
e
, &
big_ãn_powîs
[
födex
],É);

601 *
de˝t
 -
födex
 * 
TP
;

603 
	`ãn_mu…
(
e
);

604 (*
de˝t
)--;

605 
µ
 = &
r_ãn_powîs
[0];

606 
	`cmp_ext
(
e
, 
µ
) < 0)Öp++;

607 
födex
 = 
µ
 - 
r_ãn_powîs
;

608 
	`mul_ext
(
e
, &
ãn_powîs
[
födex
],É);

609 *
de˝t
 -
födex
;

610 
födex
 = 0;

612 (*
de˝t
)++;

614 i‡(! 
ecvtÊag
) {

616 
≥
 +*
de˝t
;

617 i‡(
≥
 > &
buf
[
NDIGITS
])Öe = &buf[NDIGITS];

619 
m
.
exp
 = -62;

620 
m
.
sign
 = 0;

621 
m
.
m1
 = 0xA0000000;

622 
m
.
m2
 = 0;

623 
p
 <
≥
) {

624 
EXTEND
 
⁄emöm
;

626 i‡(
p
 - 
≥
 > 
NSIGNIFICANT
) {

627 
födex
 = 0;

628 
e
->
m1
 = 0;

630 i‡(
födex
) {

631 
EXTEND
 
tc
, 
ﬁdtc
;

632 
cou¡
 = 0;

634 
ﬁdtc
.
exp
 = 0;

635 
ﬁdtc
.
sign
 = 0;

636 
ﬁdtc
.
m1
 = 0;

637 
ﬁdtc
.
m2
 = 0;

638 
tc
 = 
ãn_powîs
[
födex
];

639 
	`cmp_ext
(
e
, &
tc
) >= 0) {

640 
ﬁdtc
 = 
tc
;

641 
	`add_ext
(&
tc
, &
ãn_powîs
[
födex
], &tc);

642 
cou¡
++;

644 *
p
++ = 
cou¡
 + '0';

645 
ﬁdtc
.
sign
 = 1;

646 
	`add_ext
(
e
, &
ﬁdtc
,É);

647 
födex
--;

650 i‡(
e
->
m1
) {

651 
m
.
sign
 = 1;

652 
	`add_ext
(&
ãn_powîs
[0], &
m
, &
⁄emöm
);

653 
m
.
sign
 = 0;

654 i‡(
e
->
exp
 >= 0) {

655 
EXTEND
 
x
;

657 
x
.
m2
 = 0; x.
exp
 = 
e
->exp;

658 
x
.
sign
 = 1;

659 
x
.
m1
 = 
e
->m1>>(31-e->
exp
);

660 *
p
++ = (
x
.
m1
) + '0';

661 
x
.
m1
 = x.m1 << (31-
e
->
exp
);

662 
	`add_ext
(
e
, &
x
,É);

664 *
p
++ = '0';

666 i‡(
	`cmp_ext
(&
m
, 
e
Ë> 0 || cmp_ext”, &
⁄emöm
) > 0) {

667 i‡(
e
->
m1
 &&É->
exp
 >-1Ë*(
p
-1) += 1;

668 
e
->
m1
 = 0;

671 
	`ãn_mu…
(&
m
);

672 
	`ãn_mu…
(
e
);

674 *
p
++ = '0';

676 i‡(
≥
 >
buf
) {

677 
p
 = 
≥
;

678 *
p
 += 5;

679 *
p
 > '9') {

680 *
p
 = '0';

681 i‡(
p
 > 
buf
) ++*--p;

683 *
p
 = '1';

684 ++*
de˝t
;

685 i‡(! 
ecvtÊag
) {

689 i‡(
≥
 > 
buf
) *pe = '0';

690 
≥
++;

694 *
≥
 = '\0';

696  
buf
;

697 
	}
}

699 
	$_dbl_ext_cvt
(
vÆue
, 
EXTEND
 *
e
)

703 
exp⁄ít
;

705 
vÆue
 = 
	`‰exp
(vÆue, &
exp⁄ít
);

706 
e
->
sign
 = 
vÆue
 < 0.0;

707 i‡(
e
->
sign
Ë
vÆue
 = -value;

708 
e
->
exp
 = 
exp⁄ít
 - 1;

709 
vÆue
 *= 4294967296.0;

710 
e
->
m1
 = 
vÆue
;

711 
vÆue
 -
e
->
m1
;

712 
vÆue
 *= 4294967296.0;

713 
e
->
m2
 = 
vÆue
;

714 
	}
}

716 
EXTEND
 
	gmax_d
;

719 
	$_ext_dbl_cvt
(
EXTEND
 *
e
)

723 
f
;

724 
sign
 = 
e
->sign;

726 
e
->
sign
 = 0;

727 i‡(
e
->
m1
 =0 &&É->
m2
 == 0) {

730 i‡(
max_d
.
exp
 == 0) {

731 
	`_dbl_ext_cvt
(
DBL_MAX
, &
max_d
);

733 i‡(
	`cmp_ext
(&
max_d
, 
e
) < 0) {

734 
f
 = 
HUGE_VAL
;

735 
î∫o
 = 
ERANGE
;

737 
f
 = 
	`ldexp
(()
e
->
m1
*4294967296.0 + (Î->
m2
,É->
exp
-63);

738 i‡(
sign
Ë
f
 = -f;

739 i‡(
f
 =0.0 && (
e
->
m1
 !0 ||É->
m2
 != 0)) {

740 
î∫o
 = 
ERANGE
;

742  
f
;

743 
	}
}

	@ext_fmt.h

1 
	sm™tisß
 {

2 
	mh_32
;

3 
	ml_32
;

6 
	sEXTEND
 {

7 
	msign
;

8 
	mexp
;

9 
m™tisß
 
	mm™tisß
;

10 
	#m1
 
m™tisß
.
h_32


	)

11 
	#m2
 
m™tisß
.
l_32


	)

	@extend.c

29 
	~"FP_büs.h
"

30 
	~"FP_shi·.h
"

31 
	~"FP_ty≥s.h
"

32 
	~"gë_put.h
"

36 
	$exãnd
(
‰om
,
to
,
size
)

37 *
‰om
;

38 
EXTEND
 *
to
;

39 
size
;

41 *
˝t1
;

42 
tmp
;

43 
Àadbô
 = 0;

45 
˝t1
 = (*Ë
‰om
;

47 #i‡
FL_MSL_AT_LOW_ADDRESS


48 #i‡
FL_MSW_AT_LOW_ADDRESS


49 
to
->
exp
 = 
	`ugë2
(
˝t1
);

51 
to
->
exp
 = 
	`ugë2
(
˝t1
+2);

54 #i‡
FL_MSW_AT_LOW_ADDRESS


55 
to
->
exp
 = 
	`ugë2
(
˝t1
+(
size
 =(
DOUBLE
) ? 4 : 0));

57 
to
->
exp
 = 
	`ugë2
(
˝t1
+(
size
 =(
DOUBLE
) ? 6 : 2));

60 
to
->
sign
 = (to->
exp
 & 0x8000);

61 
to
->
exp
 ^to->
sign
;

62 i‡(
size
 =(
DOUBLE
))

63 
to
->
exp
 >>
DBL_EXPSHIFT
;

65 
to
->
exp
 >>
SGL_EXPSHIFT
;

66 i‡(
to
->
exp
 > 0)

67 
Àadbô
++;

68 
to
->
exp
++;

70 i‡(
size
 =(
DOUBLE
)) {

71 #i‡
FL_MSL_AT_LOW_ADDRESS


72 
to
->
m1
 = 
	`gë4
(
˝t1
);

73 
˝t1
 += 4;

74 
tmp
 = 
	`gë4
(
˝t1
);

76 
tmp
 = 
	`gë4
(
˝t1
);

77 
˝t1
 += 4;

78 
to
->
m1
 = 
	`gë4
(
˝t1
);

80 i‡(
to
->
exp
 =1 &&Åo->
m1
 =0 && 
tmp
 == 0) {

81 
to
->
exp
 = 0;

82 
to
->
sign
 = 0;

83 
to
->
m1
 = 0;

84 
to
->
m2
 = 0;

87 
to
->
m1
 <<
DBL_M1LEFT
;

88 
to
->
exp
 -
DBL_BIAS
;

89 
to
->
m1
 |(
tmp
>>
DBL_RPACK
);

90 
to
->
m2
 = (
tmp
<<
DBL_LPACK
);

93 
to
->
m1
 = 
	`gë4
(
˝t1
);

94 
to
->
m1
 <<
SGL_M1LEFT
;

95 i‡(
to
->
exp
 =1 &&Åo->
m1
 == 0) {

96 
to
->
exp
 = 0;

97 
to
->
sign
 = 0;

98 
to
->
m1
 = 0;

99 
to
->
m2
 = 0;

102 
to
->
exp
 -
SGL_BIAS
;

103 
to
->
m2
 = 0L;

106 
to
->
m1
 |
NORMBIT
;

107 i‡(
Àadbô
 == 0) {

108 
to
->
m1
 &~
NORMBIT
;

109 
	`ƒm_ext
(
to
);

111 
	}
}

	@fabs.c

10 
	$Ábs
(
x
)

12  
x
 < 0 ? -x : x;

13 
	}
}

	@fclose.c

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

8 
	~"loc_ö˛.h
"

10 
_˛o£
(
d
);

13 
	$f˛o£
(
FILE
 *
Â
)

15 
i
, 
ªtvÆ
 = 0;

17 
i
=0; i<
FOPEN_MAX
; i++)

18 i‡(
Â
 =
__iŸab
[
i
]) {

19 
__iŸab
[
i
] = 0;

22 i‡(
i
 >
FOPEN_MAX
)

23  
EOF
;

24 i‡(
	`fÊush
(
Â
)Ë
ªtvÆ
 = 
EOF
;

25 i‡(
	`_˛o£
(
	`fûío
(
Â
))Ë
ªtvÆ
 = 
EOF
;

26 i‡–
	`io_ã°Êag
(
Â
,
_IOMYBUF
Ë&& fp->
_buf
 )

27 
	`‰ì
((*)
Â
->
_buf
);

28 i‡(
Â
 !
°dö
 && f∞!
°dout
 && f∞!
°dîr
)

29 
	`‰ì
((*)
Â
);

30  
ªtvÆ
;

31 
	}
}

	@fdopen.c

6 
	~<°dlib.h
>

7 
	~"../°dio/loc_ö˛.h
"

8 
	~<°dio.h
>

10 
FILE
 *

11 
	$fd›í
(
fd
, 
mode
)

12 
fd
;

13 
_CONST
 *
mode
;

15 
i
;

16 
FILE
 *
°ªam
;

17 
Êags
 = 0;

19 i‡(
fd
 < 0Ë (
FILE
 *)
NULL
;

20 
i
 = 0; 
__iŸab
[i] != 0 ; i++)

21 i‡(
i
 >
FOPEN_MAX
-1)

22  (
FILE
 *)
NULL
;

24 *
mode
++) {

26 
Êags
 |
_IOREAD
 | 
_IOREADING
;

29 
Êags
 |
_IOAPPEND
;

31 
Êags
 |
_IOWRITE
 | 
_IOWRITING
;

34  (
FILE
 *)
NULL
;

36 *
mode
) {

37 *
mode
++) {

41 
Êags
 |
_IOREAD
 | 
_IOWRITE
;

50 i‡((
°ªam
 = (
FILE
 *Ë
	`mÆloc
((FILE))Ë=
NULL
) {

51  (
FILE
 *)
NULL
;

54 i‡((
Êags
 & 
_IOREAD
Ë&& (Êag†& 
_IOWRITE
))

55 
Êags
 &~(
_IOREADING
 | 
_IOWRITING
);

57 
°ªam
->
_cou¡
 = 0;

58 
°ªam
->
_fd
 = 
fd
;

59 
°ªam
->
_Êags
 = 
Êags
;

60 
°ªam
->
_buf
 = 
NULL
;

61 
__iŸab
[
i
] = 
°ªam
;

62  
°ªam
;

63 
	}
}

	@fef4.c

12 
	~"FP_ty≥s.h
"

15 
	$„f4
(
r
,
s1
)

16 
SINGLE
 
s1
;

17 
„f4_ªtu∫s
 *
r
;

19 
EXTEND
 
buf
;

20 
„f4_ªtu∫s
 *
p
 = 
r
;

24 
	`exãnd
(&
s1
,&
buf
,(
SINGLE
));

25 i‡(
buf
.
exp
 =0 && buf.
m1
 =0 && buf.
m2
 == 0) {

26 
p
->
e
 = 0;

29 
p
->
e
 = 
buf
.
exp
+1;

30 
buf
.
exp
 = -1;

32 
	`com∑˘
(&
buf
,&
p
->
f
,(
SINGLE
));

33 
	}
}

	@fef8.c

12 
	~"FP_ty≥s.h
"

15 
	$„f8
(
r
, 
s1
)

16 
DOUBLE
 
s1
;

17 
„f8_ªtu∫s
 *
r
;

19 
EXTEND
 
buf
;

20 
„f8_ªtu∫s
 *
p
 = 
r
;

24 
	`exãnd
(&
s1
.
d
[0],&
buf
,(
DOUBLE
));

25 i‡(
buf
.
exp
 =0 && buf.
m1
 =0 && buf.
m2
 == 0) {

26 
p
->
e
 = 0;

29 
p
->
e
 = 
buf
.
exp
 + 1;

30 
buf
.
exp
 = -1;

32 
	`com∑˘
(&
buf
,&
p
->
f
.
d
[0],(
DOUBLE
));

33 
	}
}

	@feof.c

6 
	~<°dio.h
>

9 (
	g„of
)(
FILE
 *
	g°ªam
)

11  
„of
(
°ªam
);

	@ferror.c

6 
	~<°dio.h
>

9 (
	g„º‹
)(
FILE
 *
	g°ªam
)

11  
„º‹
(
°ªam
);

	@fflush.c

6 
	~<sys/ty≥s.h
>

7 
	~<°dio.h
>

8 
	~"loc_ö˛.h
"

10 
ssize_t
 
_wrôe
(
d
, c⁄° *
buf
, 
size_t
 
nbyãs
);

11 
off_t
 
_l£ek
(
fûdes
, off_à
off£t
, 
whí˚
);

14 
	$fÊush
(
FILE
 *
°ªam
)

16 
cou¡
, 
c1
, 
i
, 
ªtvÆ
 = 0;

18 i‡(!
°ªam
) {

19 
i
0; i < 
FOPEN_MAX
; i++)

20 i‡(
__iŸab
[
i
] && 
	`fÊush
(__iotab[i]))

21 
ªtvÆ
 = 
EOF
;

22  
ªtvÆ
;

25 i‡(!
°ªam
->
_buf


26 || (!
	`io_ã°Êag
(
°ªam
, 
_IOREADING
)

27 && !
	`io_ã°Êag
(
°ªam
, 
_IOWRITING
)))

29 i‡(
	`io_ã°Êag
(
°ªam
, 
_IOREADING
)) {

31 
adju°
 = 0;

32 i‡(
°ªam
->
_buf
 && !
	`io_ã°Êag
(°ªam,
_IONBF
))

33 
adju°
 = 
°ªam
->
_cou¡
;

34 
°ªam
->
_cou¡
 = 0;

35 
	`_l£ek
(
	`fûío
(
°ªam
), (
off_t
Ë
adju°
, 
SEEK_CUR
);

36 i‡(
	`io_ã°Êag
(
°ªam
, 
_IOWRITE
))

37 
°ªam
->
_Êags
 &~(
_IOREADING
 | 
_IOWRITING
);

38 
°ªam
->
_±r
 = såóm->
_buf
;

40 } i‡(
	`io_ã°Êag
(
°ªam
, 
_IONBF
))  0;

42 i‡(
	`io_ã°Êag
(
°ªam
, 
_IOREAD
))

43 
°ªam
->
_Êags
 &~
_IOWRITING
;

45 
cou¡
 = 
°ªam
->
_±r
 - såóm->
_buf
;

46 
°ªam
->
_±r
 = såóm->
_buf
;

48 i‡–
cou¡
 <= 0 )

51 i‡(
	`io_ã°Êag
(
°ªam
, 
_IOAPPEND
)) {

52 i‡(
	`_l£ek
(
	`fûío
(
°ªam
), 0L, 
SEEK_END
) == -1) {

53 
°ªam
->
_Êags
 |
_IOERR
;

54  
EOF
;

57 
c1
 = 
	`_wrôe
(
°ªam
->
_fd
, (*)°ªam->
_buf
, 
cou¡
);

59 
°ªam
->
_cou¡
 = 0;

61 i‡–
cou¡
 =
c1
 )

64 
°ªam
->
_Êags
 |
_IOERR
;

65  
EOF
;

66 
	}
}

69 
	$__˛ónup
()

71 
i
;

73 
i
0; i < 
FOPEN_MAX
; i++)

74 i‡(
__iŸab
[
i
] && 
	`io_ã°Êag
(__iŸab[i], 
_IOWRITING
))

75 (Ë
	`fÊush
(
__iŸab
[
i
]);

76 
	}
}

	@ffs.c

1 
	~<lib.h
>

6 
_PROTOTYPE
–
ffs
, (
w‹d
));

8 
	$ffs
(
w‹d
)

9 
w‹d
;

11 
i
;

13 i‡(
w‹d
 == 0) (0);

15 
i
 = 1;; ++i, 
w‹d
 >>= 1)

16 i‡(
w‹d
 & 1Ë(
i
);

17 
	}
}

	@fgetc.c

6 
	~<°dio.h
>

9 
	$fgëc
(
FILE
 *
°ªam
)

11  
	`gëc
(
°ªam
);

12 
	}
}

	@fgetpos.c

6 
	~<°dio.h
>

9 
	$fgëpos
(
FILE
 *
°ªam
, 
Âos_t
 *
pos
)

11 *
pos
 = 
	`·ñl
(
°ªam
);

12 i‡(*
pos
 == -1)  -1;

14 
	}
}

	@fgets.c

6 
	~<°dio.h
>

9 
	$fgës
(*
s
, 
n
, 
FILE
 *
°ªam
)

11 
ch
;

12 *
±r
;

14 
±r
 = 
s
;

15 --
n
 > 0 && (
ch
 = 
	`gëc
(
°ªam
)Ë!
EOF
) {

16 *
±r
++ = 
ch
;

17 i‡–
ch
 == '\n')

20 i‡(
ch
 =
EOF
) {

21 i‡(
	`„of
(
°ªam
)) {

22 i‡(
±r
 =
s
Ë 
NULL
;

23 }  
NULL
;

25 *
±r
 = '\0';

26  
s
;

27 
	}
}

	@fif4.c

12 
	~"FP_ty≥s.h
"

13 
	~"FP_shi·.h
"

16 
	$fif4
(
p
,
x
,
y
)

17 
SINGLE
 
x
,
y
;

18 
fif4_ªtu∫s
 *
p
;

21 
EXTEND
 
e1
,
e2
;

23 
	`exãnd
(&
y
,&
e1
,(
SINGLE
));

24 
	`exãnd
(&
x
,&
e2
,(
SINGLE
));

26 
	`mul_ext
(&
e1
,&
e2
);

27 
e2
 = 
e1
;

28 
	`com∑˘
(&
e2
,&
y
,(
SINGLE
));

29 i‡(
e1
.
exp
 < 0) {

30 
p
->
ù¨t
 = 0;

31 
p
->
Â¨t
 = 
y
;

34 i‡(
e1
.
exp
 > 30 - 
SGL_M1LEFT
) {

35 
p
->
ù¨t
 = 
y
;

36 
p
->
Â¨t
 = 0;

39 
	`b64_s·
(&
e1
.
m™tisß
, 63 -É1.
exp
);

40 
	`b64_s·
(&
e1
.
m™tisß
,É1.
exp
 - 63);

41 
	`com∑˘
(&
e1
,&(
p
->
ù¨t
),(
SINGLE
));

42 
	`exãnd
(&(
p
->
ù¨t
), &
e2
, (
SINGLE
));

43 
	`exãnd
(&
y
, &
e1
, (
SINGLE
));

44 
	`sub_ext
(&
e1
, &
e2
);

45 
	`com∑˘
(&
e1
, &(
p
->
Â¨t
), (
SINGLE
));

46 
	}
}

	@fif8.c

12 
	~"FP_ty≥s.h
"

13 
	~"FP_shi·.h
"

16 
	$fif8
(
p
,
x
,
y
)

17 
DOUBLE
 
x
,
y
;

18 
fif8_ªtu∫s
 *
p
;

21 
EXTEND
 
e1
,
e2
;

23 
	`exãnd
(&
y
.
d
[0],&
e1
,(
DOUBLE
));

24 
	`exãnd
(&
x
.
d
[0],&
e2
,(
DOUBLE
));

26 
	`mul_ext
(&
e1
,&
e2
);

27 
e2
 = 
e1
;

28 
	`com∑˘
(&
e2
, &
y
.
d
[0], (
DOUBLE
));

29 i‡(
e1
.
exp
 < 0) {

30 
p
->
ù¨t
.
d
[0] = 0;

31 
p
->
ù¨t
.
d
[1] = 0;

32 
p
->
Â¨t
 = 
y
;

35 i‡(
e1
.
exp
 > 62 - 
DBL_M1LEFT
) {

36 
p
->
ù¨t
 = 
y
;

37 
p
->
Â¨t
.
d
[0] = 0;

38 
p
->
Â¨t
.
d
[1] = 0;

41 
	`b64_s·
(&
e1
.
m™tisß
, 63 -É1.
exp
);

42 
	`b64_s·
(&
e1
.
m™tisß
,É1.
exp
 - 63);

43 
	`com∑˘
(&
e1
, &(
p
->
ù¨t
.
d
[0]), (
DOUBLE
));

44 
	`exãnd
(&(
p
->
ù¨t
.
d
[0]), &
e2
, (
DOUBLE
));

45 
	`exãnd
(&
y
.
d
[0], &
e1
, (
DOUBLE
));

46 
	`sub_ext
(&
e1
, &
e2
);

47 
	`com∑˘
(&
e1
, &(
p
->
Â¨t
.
d
[0]), (
DOUBLE
));

48 
	}
}

	@file.h

5 
EXTERN
 
	sfûp
 {

6 
mode_t
 
	mfûp_mode
;

7 
	mfûp_Êags
;

8 
	mfûp_cou¡
;

9 
öode
 *
	mfûp_öo
;

10 
off_t
 
	mfûp_pos
;

11 } 
	gfûp
[
NR_FILPS
];

13 
	#FILP_CLOSED
 0

	)

15 
	#NIL_FILP
 (
fûp
 *Ë0

	)

	@filedes.c

9 
	~"fs.h
"

10 
	~"fûe.h
"

11 
	~"Âroc.h
"

12 
	~"öode.h
"

17 
PUBLIC
 
	$gë_fd
(
°¨t
, 
bôs
, 
k
, 
Ât
)

18 
°¨t
;

19 
mode_t
 
bôs
;

20 *
k
;

21 
fûp
 **
Ât
;

28 
fûp
 *
f
;

29 
i
;

31 *
k
 = -1;

34 
i
 = 
°¨t
; i < 
OPEN_MAX
; i++) {

35 i‡(
Â
->
Â_fûp
[
i
] =
NIL_FILP
) {

37 *
k
 = 
i
;

43 i‡(*
k
 < 0Ë(
EMFILE
);

46 
f
 = &
fûp
[0]; f < &fûp[
NR_FILPS
]; f++) {

47 i‡(
f
->
fûp_cou¡
 == 0) {

48 
f
->
fûp_mode
 = 
bôs
;

49 
f
->
fûp_pos
 = 0L;

50 
f
->
fûp_Êags
 = 0;

51 *
Ât
 = 
f
;

52 (
OK
);

57 (
ENFILE
);

58 
	}
}

64 
PUBLIC
 
fûp
 *
	$gë_fûp
(
fûd
)

65 
fûd
;

69 
îr_code
 = 
EBADF
;

70 i‡(
fûd
 < 0 || fûd >
OPEN_MAX
 ) (
NIL_FILP
);

71 (
Â
->
Â_fûp
[
fûd
]);

72 
	}
}

78 
PUBLIC
 
fûp
 *
	$föd_fûp
(
rù
, 
bôs
)

79 
öode
 *
rù
;

80 
Mode_t
 
bôs
;

89 
fûp
 *
f
;

91 
f
 = &
fûp
[0]; f < &fûp[
NR_FILPS
]; f++) {

92 i‡(
f
->
fûp_cou¡
 !0 && f->
fûp_öo
 =
rù
 && (f->
fûp_mode
 & 
bôs
)){

93 (
f
);

98 (
NIL_FILP
);

99 
	}
}

	@fileno.c

6 
	~<°dio.h
>

9 (
	gfûío
)(
FILE
 *
	g°ªam
)

11  
	g°ªam
->
	g_fd
;

	@fillbuf.c

6 #if 
deföed
(
_POSIX_SOURCE
)

7 
	~<sys/ty≥s.h
>

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~"loc_ö˛.h
"

13 
ssize_t
 
_ªad
(ssize_à
d
, *
buf
, 
size_t
 
nbyãs
);

16 
	$__fûlbuf
(
FILE
 *
°ªam
)

18 
ch
[
FOPEN_MAX
];

19 
i
;

21 
°ªam
->
_cou¡
 = 0;

22 i‡(
	`fûío
(
°ªam
Ë< 0Ë 
EOF
;

23 i‡(
	`io_ã°Êag
(
°ªam
, (
_IOEOF
 | 
_IOERR
 ))Ë 
EOF
;

24 i‡(!
	`io_ã°Êag
(
°ªam
, 
_IOREAD
))

25 { 
°ªam
->
_Êags
 |
_IOERR
;  
EOF
; }

26 i‡(
	`io_ã°Êag
(
°ªam
, 
_IOWRITING
))

27 { 
°ªam
->
_Êags
 |
_IOERR
;  
EOF
; }

29 i‡(!
	`io_ã°Êag
(
°ªam
, 
_IOREADING
))

30 
°ªam
->
_Êags
 |
_IOREADING
;

32 i‡(!
	`io_ã°Êag
(
°ªam
, 
_IONBF
Ë&& !°ªam->
_buf
) {

33 
°ªam
->
_buf
 = (*Ë
	`mÆloc
(
BUFSIZ
);

34 i‡(!
°ªam
->
_buf
) {

35 
°ªam
->
_Êags
 |
_IONBF
;

38 
°ªam
->
_Êags
 |
_IOMYBUF
;

39 
°ªam
->
_bufsiz
 = 
BUFSIZ
;

44 
i
 = 0; i < 
FOPEN_MAX
; i++) {

45 i‡(
__iŸab
[
i
] && 
	`io_ã°Êag
(__iŸab[i], 
_IOLBF
))

46 i‡(
	`io_ã°Êag
(
__iŸab
[
i
], 
_IOWRITING
))

47 (Ë
	`fÊush
(
__iŸab
[
i
]);

50 i‡(!
°ªam
->
_buf
) {

51 
°ªam
->
_buf
 = &
ch
[
	`fûío
(stream)];

52 
°ªam
->
_bufsiz
 = 1;

54 
°ªam
->
_±r
 = såóm->
_buf
;

55 
°ªam
->
_cou¡
 = 
	`_ªad
(°ªam->
_fd
, (*)°ªam->
_buf
, såóm->
_bufsiz
);

57 i‡(
°ªam
->
_cou¡
 <= 0){

58 i‡(
°ªam
->
_cou¡
 == 0) {

59 
°ªam
->
_Êags
 |
_IOEOF
;

62 
°ªam
->
_Êags
 |
_IOERR
;

64  
EOF
;

66 
°ªam
->
_cou¡
--;

68  *
°ªam
->
_±r
++;

69 
	}
}

	@flash.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

3 
	~<ãrmˇp.h
>

5 *
bl
, *
vb
;

8 
	$Êash
()

10 i‡(
vb
)

11 
	`çuts
(
vb
, 1, 
outc
);

12 i‡(
bl
)

13 
	`çuts
(
bl
, 1, 
outc
);

14 
	}
}

	@floor.c

9 
	~<m©h.h
>

12 
	$Êo‹
(
x
)

14 
vÆ
;

16  
	`modf
(
x
, &
vÆ
) < 0 ? val - 1.0 : val ;

20 
	}
}

	@floppy.c

21 
	~"kî√l.h
"

22 
	~"drivî.h
"

23 
	~"drvlib.h
"

24 
	~<ibm/disk∑rm.h
>

27 
	#DOR
 0x3F2

	)

28 
	#FDC_STATUS
 0x3F4

	)

29 
	#FDC_DATA
 0x3F5

	)

30 
	#FDC_RATE
 0x3F7

	)

31 
	#DMA_ADDR
 0x004

	)

32 
	#DMA_TOP
 0x081

	)

33 
	#DMA_COUNT
 0x005

	)

34 
	#DMA_FLIPFLOP
 0x00C

	)

35 
	#DMA_MODE
 0x00B

	)

36 
	#DMA_INIT
 0x00A

	)

37 
	#DMA_RESET_VAL
 0x06

	)

40 
	#ST0
 0x00

	)

41 
	#ST1
 0x01

	)

42 
	#ST2
 0x02

	)

43 
	#ST3
 0x00

	)

44 
	#ST_CYL
 0x03

	)

45 
	#ST_HEAD
 0x04

	)

46 
	#ST_SEC
 0x05

	)

47 
	#ST_PCN
 0x01

	)

51 
	#CTL_BUSY
 0x10

	)

52 
	#DIRECTION
 0x40

	)

53 
	#MASTER
 0x80

	)

56 
	#MOTOR_SHIFT
 4

	)

57 
	#ENABLE_INT
 0x0C

	)

60 
	#ST0_BITS
 0xF8

	)

61 
	#TRANS_ST0
 0x00

	)

62 
	#SEEK_ST0
 0x20

	)

65 
	#BAD_SECTOR
 0x05

	)

66 
	#WRITE_PROTECT
 0x02

	)

69 
	#BAD_CYL
 0x1F

	)

72 
	#ST3_FAULT
 0x80

	)

73 
	#ST3_WR_PROTECT
 0x40

	)

74 
	#ST3_READY
 0x20

	)

77 
	#FDC_SEEK
 0x0F

	)

78 
	#FDC_READ
 0xE6

	)

79 
	#FDC_WRITE
 0xC5

	)

80 
	#FDC_SENSE
 0x08

	)

81 
	#FDC_RECALIBRATE
 0x07

	)

82 
	#FDC_SPECIFY
 0x03

	)

83 
	#FDC_READ_ID
 0x4A

	)

84 
	#FDC_FORMAT
 0x4D

	)

87 
	#DMA_READ
 0x46

	)

88 
	#DMA_WRITE
 0x4A

	)

91 
	#HC_SIZE
 2880

	)

92 
	#NR_HEADS
 0x02

	)

93 
	#MAX_SECTORS
 18

	)

94 
	#DTL
 0xFF

	)

95 
	#SPEC2
 0x02

	)

96 
	#MOTOR_OFF
 3*
HZ


	)

97 
	#WAKEUP
 2*
HZ


	)

100 
	#ERR_SEEK
 (-1Ë

	)

101 
	#ERR_TRANSFER
 (-2Ë

	)

102 
	#ERR_STATUS
 (-3Ë

	)

103 
	#ERR_READ_ID
 (-4Ë

	)

104 
	#ERR_RECALIBRATE
 (-5Ë

	)

105 
	#ERR_DRIVE
 (-6Ë

	)

106 
	#ERR_WR_PROTECT
 (-7Ë

	)

107 
	#ERR_TIMEOUT
 (-8Ë

	)

110 
	#îr_no_ªåy
(
îr
Ë(”ºË<
ERR_WR_PROTECT
)

	)

113 
	#DEV_TYPE_BITS
 0x7C

	)

114 
	#DEV_TYPE_SHIFT
 2

	)

115 
	#FORMAT_DEV_BIT
 0x80

	)

118 
	#MAX_ERRORS
 6

	)

119 
	#MAX_RESULTS
 7

	)

120 
	#NR_DRIVES
 2

	)

121 
	#DIVISOR
 128

	)

122 
	#SECTOR_SIZE_CODE
 2

	)

123 
	#TIMEOUT
 500

	)

124 
	#NT
 7

	)

125 
	#UNCALIBRATED
 0

	)

126 
	#CALIBRATED
 1

	)

127 
	#BASE_SECTOR
 1

	)

128 
	#NO_SECTOR
 0

	)

129 
	#NO_CYL
 (-1Ë

	)

130 
	#NO_DENS
 100

	)

131 
	#BSY_IDLE
 0

	)

132 
	#BSY_IO
 1

	)

133 
	#BSY_WAKEN
 2

	)

136 
PRIVATE
 
	sÊ›py
 {

137 
	mÊ_curcyl
;

138 
	mÊ_h¨dcyl
;

139 
	mÊ_cylödî
;

140 
	mÊ_£˘‹
;

141 
	mÊ_hód
;

142 
	mÊ_ˇlibøti⁄
;

143 
	mÊ_dísôy
;

144 
	mÊ_˛ass
;

145 
devi˚
 
	mÊ_geom
;

146 
devi˚
 
	mÊ_∑π
[
NR_PARTITIONS
];

147 } 
	gÊ›py
[
NR_DRIVES
], *
	gf_Â
;

150 
PRIVATE
 
	så™s
 {

151 
	må_cou¡
;

152 
i‹eque°_s
 *
	må_i›
;

153 
phys_byãs
 
	må_phys
;

154 
phys_byãs
 
	må_dma
;

155 } 
	g·øns
[
MAX_SECTORS
];

157 
PRIVATE
 
	gf_cou¡
;

158 
PRIVATE
 
	gf_√xâøck
;

159 
PRIVATE
 
	gmŸ‹_°©us
;

160 
PRIVATE
 
	gmŸ‹_gﬂl
;

161 
PRIVATE
 
	g√ed_ª£t
;

162 
PRIVATE
 
	gd
;

163 
PRIVATE
 
	gf_drive
;

164 
PRIVATE
 
	gf_devi˚
;

165 
PRIVATE
 
	gf_›code
;

166 
PRIVATE
 
	gf_£˘‹s
;

167 
PRIVATE
 
	gf_mu°
;

168 
PRIVATE
 
	gf_busy
;

169 
PRIVATE
 
	gcuºít_•ec1
;

170 
PRIVATE
 
devi˚
 *
	gf_dv
;

171 
PRIVATE
 
disk_∑ømëî_s
 
	gfmt_∑øm
;

172 
PRIVATE
 
	gf_ªsu…s
[
MAX_RESULTS
];

191 
PRIVATE
 
	gg≠
[
NT
] =

193 
PRIVATE
 
	gøã
[
NT
] =

195 
PRIVATE
 
	gƒ_£˘‹s
[
NT
] =

197 
PRIVATE
 
	gƒ_blocks
[
NT
] =

199 
PRIVATE
 
	g°ïs_≥r_cyl
[
NT
] =

201 
PRIVATE
 
	gmå_£tup
[
NT
] =

202 {1*
HZ
/4,3*HZ/4,1*HZ/4,4*HZ/4,3*HZ/4,3*HZ/4,4*HZ/4};

203 
PRIVATE
 
	g•ec1
[
NT
] =

205 
PRIVATE
 
	gã°_£˘‹
[
NT
] =

208 
	#b
(
d
Ë(1 << (d)Ë

	)

218 
PRIVATE
 
	sã°_‹dî
 {

219 
	mt_dísôy
;

220 
	mt_˛ass
;

221 } 
	gã°_‹dî
[
NT
-1] = {

222 { 6, 
b
(3) | b(6) },

223 { 1, 
b
(1) | b(4) | b(5) },

224 { 3, 
b
(2) | b(3) | b(6) },

225 { 4, 
b
(1) | b(4) | b(5) },

226 { 5, 
b
(1) | b(4) | b(5) },

227 { 2, 
b
(2) | b(3) },

231 
FORWARD
 
_PROTOTYPE
–
devi˚
 *
f_¥ï¨e
, (device) );

232 
FORWARD
 
_PROTOTYPE
–*
f_«me
, () );

233 
FORWARD
 
_PROTOTYPE
–
f_˛ónup
, () );

234 
FORWARD
 
_PROTOTYPE
–
f_scheduÀ
, (
¥oc_ƒ
, 
i‹eque°_s
 *
i›
) );

235 
FORWARD
 
_PROTOTYPE
–
f_föish
, () );

236 
FORWARD
 
_PROTOTYPE
–
defu£
, () );

237 
FORWARD
 
_PROTOTYPE
–
dma_£tup
, (
å™s
 *
ç
) );

238 
FORWARD
 
_PROTOTYPE
–
°¨t_mŸ‹
, () );

239 
FORWARD
 
_PROTOTYPE
–
°›_mŸ‹
, () );

240 
FORWARD
 
_PROTOTYPE
–
£ek
, (
Ê›py
 *
Â
) );

241 
FORWARD
 
_PROTOTYPE
–
f_å™s„r
, (
Ê›py
 *
Â
, 
å™s
 *
ç
) );

242 
FORWARD
 
_PROTOTYPE
–
fdc_ªsu…s
, () );

243 
FORWARD
 
_PROTOTYPE
–
f_h™dÀr
, (
úq
) );

244 
FORWARD
 
_PROTOTYPE
–
fdc_out
, (
vÆ
) );

245 
FORWARD
 
_PROTOTYPE
–
ªˇlibøã
, (
Ê›py
 *
Â
) );

246 
FORWARD
 
_PROTOTYPE
–
f_ª£t
, () );

247 
FORWARD
 
_PROTOTYPE
–
£nd_mess
, () );

248 
FORWARD
 
_PROTOTYPE
–
f_öå_waô
, () );

249 
FORWARD
 
_PROTOTYPE
–
f_timeout
, () );

250 
FORWARD
 
_PROTOTYPE
–
ªad_id
, (
Ê›py
 *
Â
) );

251 
FORWARD
 
_PROTOTYPE
–
f_do_›í
, (
drivî
 *
dp
, 
mesßge
 *
m_±r
) );

252 
FORWARD
 
_PROTOTYPE
–
ã°_ªad
, (
dísôy
) );

253 
FORWARD
 
_PROTOTYPE
–
f_geomëry
, (
∑πôi⁄
 *
íåy
));

257 
PRIVATE
 
drivî
 
	gf_dèb
 = {

258 
f_«me
,

259 
f_do_›í
,

260 
do_n›
,

261 
do_dio˙é
,

262 
f_¥ï¨e
,

263 
f_scheduÀ
,

264 
f_föish
,

265 
f_˛ónup
,

266 
f_geomëry


273 
PUBLIC
 
	$Ê›py_èsk
()

277 
Ê›py
 *
Â
;

279 
Â
 = &
Ê›py
[0]; f∞< &Ê›py[
NR_DRIVES
]; fp++) {

280 
Â
->
Ê_curcyl
 = 
NO_CYL
;

281 
Â
->
Ê_dísôy
 = 
NO_DENS
;

282 
Â
->
Ê_˛ass
 = ~0;

285 
	`put_úq_h™dÀr
(
FLOPPY_IRQ
, 
f_h™dÀr
);

286 
	`íabÀ_úq
(
FLOPPY_IRQ
);

288 
	`drivî_èsk
(&
f_dèb
);

289 
	}
}

295 
PRIVATE
 
devi˚
 *
	$f_¥ï¨e
(
devi˚
)

296 
devi˚
;

301 i‡(
f_cou¡
 > 0Ë
	`defu£
();

303 
f_devi˚
 = 
devi˚
;

304 
f_drive
 = 
devi˚
 & ~(
DEV_TYPE_BITS
 | 
FORMAT_DEV_BIT
);

305 i‡(
f_drive
 < 0 || f_drivê>
NR_DRIVES
Ë(
NIL_DEV
);

307 
f_Â
 = &
Ê›py
[
f_drive
];

308 
f_dv
 = &
f_Â
->
Ê_geom
;

309 
d
 = 
f_Â
->
Ê_dísôy
;

310 
f_£˘‹s
 = 
ƒ_£˘‹s
[
d
];

312 
f_mu°
 = 
TRUE
;

315 i‡((
devi˚
 &
DEV_TYPE_BITS
Ë>
MINOR_fd0a
)

316 
f_dv
 = &
f_Â
->
Ê_∑π
[(
devi˚
 - 
MINOR_fd0a
Ë>> 
DEV_TYPE_SHIFT
];

318  
f_dv
;

319 
	}
}

325 
PRIVATE
 *
	$f_«me
()

328 
«me
[] = "fd3";

330 
«me
[2] = '0' + 
f_drive
;

331  
«me
;

332 
	}
}

338 
PRIVATE
 
	$f_˛ónup
()

360 
mŸ‹_gﬂl
 = 0;

361 
	`˛ock_mess
(
MOTOR_OFF
, 
°›_mŸ‹
);

362 
	}
}

368 
PRIVATE
 
	$f_scheduÀ
(
¥oc_ƒ
, 
i›
)

369 
¥oc_ƒ
;

370 
i‹eque°_s
 *
i›
;

372 
r
, 
›code
, 
•™nög
;

373 
pos
;

374 
block
;

375 
nbyãs
, 
cou¡
, 
dma_cou¡
;

376 
phys_byãs
 
u£r_phys
, 
dma_phys
;

377 
å™s
 *
ç
, *
ç0
;

380 
mŸ‹_gﬂl
 = 
mŸ‹_°©us
;

383 
nbyãs
 = 
i›
->
io_nbyãs
;

384 i‡((
nbyãs
 & 
SECTOR_MASK
Ë!0Ë(
i›
->
io_nbyãs
 = 
EINVAL
);

387 
pos
 = 
i›
->
io_posôi⁄
;

388 i‡((
pos
 & 
SECTOR_MASK
Ë!0Ë(
i›
->
io_nbyãs
 = 
EINVAL
);

391 
u£r_phys
 = 
	`num≠
(
¥oc_ƒ
, (
vú_byãs
Ë
i›
->
io_buf
, 
nbyãs
);

392 i‡(
u£r_phys
 =0Ë(
i›
->
io_nbyãs
 = 
EINVAL
);

395 
›code
 = 
i›
->
io_ªque°
 & ~
OPTIONAL_IO
;

396 i‡(
f_devi˚
 & 
FORMAT_DEV_BIT
) {

397 i‡(
›code
 !
DEV_WRITE
Ë(
i›
->
io_nbyãs
 = 
EIO
);

398 i‡(
nbyãs
 !
BLOCK_SIZE
Ë(
i›
->
io_nbyãs
 = 
EINVAL
);

400 
	`phys_c›y
(
u£r_phys
 + 
SECTOR_SIZE
, 
	`vú2phys
(&
fmt_∑øm
),

401 (
phys_byãs
Ë 
fmt_∑øm
);

406 i‡(
fmt_∑øm
.
£˘‹s_≥r_cylödî
 == 0)

407 (
i›
->
io_nbyãs
 = 
EIO
);

410 
i›
->
io_nbyãs
 = 
nbyãs
 = 
SECTOR_SIZE
;

414 i‡(
pos
 >
f_dv
->
dv_size
Ë(
OK
);

415 i‡(
pos
 + 
nbyãs
 > 
f_dv
->
dv_size
)Çbytes = f_dv->dv_size -Öos;

416 
block
 = (
f_dv
->
dv_ba£
 + 
pos
Ë>> 
SECTOR_SHIFT
;

418 
•™nög
 = 
FALSE
;

422 
cou¡
 = 
nbyãs
;

424 i‡(
f_cou¡
 > 0 && 
block
 >
f_√xâøck
) {

426 i‡((
r
 = 
	`f_föish
()Ë!
OK
) (r);

427 
f_mu°
 = 
•™nög
;

430 i‡(
f_cou¡
 == 0) {

432 
f_›code
 = 
›code
;

433 
f_Â
->
Ê_cylödî
 = 
block
 / (
NR_HEADS
 * 
f_£˘‹s
);

434 
f_Â
->
Ê_h¨dcyl
 = f_Â->
Ê_cylödî
 * 
°ïs_≥r_cyl
[
d
];

435 
f_Â
->
Ê_hód
 = (
block
 % (
NR_HEADS
 * 
f_£˘‹s
)) / f_sectors;

438 
f_√xâøck
 = (
f_Â
->
Ê_cylödî
 * 
NR_HEADS


439 + 
f_Â
->
Ê_hód
 + 1Ë* 
f_£˘‹s
;

443 i‡(
block
 + (
cou¡
 >> 
SECTOR_SHIFT
Ë> 
f_√xâøck
)

444 
cou¡
 = (
f_√xâøck
 - 
block
Ë<< 
SECTOR_SHIFT
;

447 
dma_phys
 = 
u£r_phys
;

448 
dma_cou¡
 = 
	`dma_byãs_À·
(
dma_phys
);

450 #i‡
_WORD_SIZE
 > 2

452 i‡(
dma_phys
 >0x1000000Ë
dma_cou¡
 = 0;

454 i‡(
dma_cou¡
 < 
cou¡
) {

456 i‡(
dma_cou¡
 >
SECTOR_SIZE
) {

460 
cou¡
 = 
dma_cou¡
 & ~
SECTOR_MASK
;

463 
cou¡
 = 
SECTOR_SIZE
;

464 
dma_phys
 = 
tmp_phys
;

473 
ç
 = 
ç0
 = &
·øns
[
block
 % 
f_£˘‹s
];

475 
block
 +
cou¡
 >> 
SECTOR_SHIFT
;

476 
nbyãs
 -
cou¡
;

477 
f_cou¡
 +
cou¡
;

478 i‡(!(
i›
->
io_ªque°
 & 
OPTIONAL_IO
)Ë
f_mu°
 = 
TRUE
;

481 
ç
->
å_cou¡
 = 
cou¡
;

482 
ç
->
å_i›
 = 
i›
;

483 
ç
->
å_phys
 = 
u£r_phys
;

484 
ç
->
å_dma
 = 
dma_phys
;

485 
ç
++;

487 
u£r_phys
 +
SECTOR_SIZE
;

488 
dma_phys
 +
SECTOR_SIZE
;

489 
cou¡
 -
SECTOR_SIZE
;

490 } 
cou¡
 > 0);

492 
•™nög
 = 
TRUE
;

493 } 
nbyãs
 > 0);

495 (
OK
);

496 
	}
}

502 
PRIVATE
 
	$f_föish
()

506 
Ê›py
 *
Â
 = 
f_Â
;

507 
å™s
 *
ç
;

508 
r
, 
îr‹s
;

510 i‡(
f_cou¡
 =0Ë(
OK
);

516 i‡(!
f_mu°
) {

517 
	`defu£
();

518 (
EAGAIN
);

522 
	`°¨t_mŸ‹
();

528 
Â
->
Ê_£˘‹
 = 
f_cou¡
 >(6 * 
SECTOR_SIZE
Ë? 0 : 
BASE_SECTOR
;

532 
îr‹s
 = 0;

535 i‡(
√ed_ª£t
Ë
	`f_ª£t
();

538 i‡(
cuºít_•ec1
 !
•ec1
[
d
]) {

539 
	`fdc_out
(
FDC_SPECIFY
);

540 
cuºít_•ec1
 = 
•ec1
[
d
];

541 
	`fdc_out
(
cuºít_•ec1
);

542 
	`fdc_out
(
SPEC2
);

546 i‡(
pc_©
Ë
	`out_byã
(
FDC_RATE
, 
øã
[
d
]);

549 
r
 = 
	`£ek
(
Â
);

551 i‡(
Â
->
Ê_£˘‹
 =
NO_SECTOR
) {

553 i‡(
îr‹s
 > 0Ë
Â
->
Ê_£˘‹
 = 
BASE_SECTOR
;

556 i‡(
r
 =
OK
Ë∏
	`ªad_id
(
Â
);

560 i‡(
Â
->
Ê_£˘‹
 !
NO_SECTOR
) {

562 i‡(
Â
->
Ê_£˘‹
 >
BASE_SECTOR
 + 
f_£˘‹s
)

563 
Â
->
Ê_£˘‹
 = 
BASE_SECTOR
;

565 
ç
 = &
·øns
[
Â
->
Ê_£˘‹
 - 
BASE_SECTOR
];

566 i‡(
ç
->
å_cou¡
 > 0) ;

567 
Â
->
Ê_£˘‹
++;

570 i‡(
ç
->
å_cou¡
 > 
f_cou¡
)Åp->tr_count = f_count;

573 i‡(
r
 =
OK
 && 
ç
->
å_dma
 =
tmp_phys


574 && 
f_›code
 =
DEV_WRITE
) {

576 
	`phys_c›y
(
ç
->
å_phys
,Åp->
å_dma
,

577 (
phys_byãs
Ë
ç
->
å_cou¡
);

581 i‡(
r
 =
OK
) {

582 
	`dma_£tup
(
ç
);

583 
r
 = 
	`f_å™s„r
(
Â
, 
ç
);

586 i‡(
r
 =
OK
 && 
ç
->
å_dma
 =
tmp_phys


587 && 
f_›code
 =
DEV_READ
) {

589 
	`phys_c›y
(
ç
->
å_dma
,Åp->
å_phys
,

590 (
phys_byãs
Ë
ç
->
å_cou¡
);

593 i‡(
r
 =
OK
) ;

596 i‡(
	`îr_no_ªåy
(
r
Ë|| ++
îr‹s
 =
MAX_ERRORS
) {

597 i‡(
Â
->
Ê_£˘‹
 !0Ë
ç
->
å_i›
->
io_nbyãs
 = 
EIO
;

598 (
EIO
);

602 i‡(
îr‹s
 =
MAX_ERRORS
 / 2) {

603 
Â
->
Ê_ˇlibøti⁄
 = 
UNCALIBRATED
;

604 i‡(
ç
->
å_i›
->
io_ªque°
 & 
OPTIONAL_IO
)

605 (
ç
->
å_i›
->
io_nbyãs
 = 
EIO
);

608 
f_cou¡
 -
ç
->
å_cou¡
;

609 
ç
->
å_i›
->
io_nbyãs
 -ç->
å_cou¡
;

610 } 
f_cou¡
 > 0);

613 
	`defu£
();

615 (
OK
);

616 
	}
}

622 
PRIVATE
 
	$defu£
()

626 
å™s
 *
ç
;

628 
ç
 = 
·øns
;Å∞< få™†+ 
MAX_SECTORS
;Åp++Ëç->
å_cou¡
 = 0;

629 
f_cou¡
 = 0;

630 
	}
}

636 
PRIVATE
 
	$dma_£tup
(
ç
)

637 
å™s
 *
ç
;

650 
	`out_byã
(
DMA_INIT
, 
DMA_RESET_VAL
);

651 
	`out_byã
(
DMA_FLIPFLOP
, 0);

652 
	`out_byã
(
DMA_MODE
, 
f_›code
 =
DEV_WRITE
 ? 
DMA_WRITE
 : 
DMA_READ
);

653 
	`out_byã
(
DMA_ADDR
, (Ë
ç
->
å_dma
 >> 0);

654 
	`out_byã
(
DMA_ADDR
, (Ë
ç
->
å_dma
 >> 8);

655 
	`out_byã
(
DMA_TOP
, (Ë(
ç
->
å_dma
 >> 16));

656 
	`out_byã
(
DMA_COUNT
, (
ç
->
å_cou¡
 - 1) >> 0);

657 
	`out_byã
(
DMA_COUNT
, (
ç
->
å_cou¡
 - 1) >> 8);

658 
	`out_byã
(
DMA_INIT
, 2);

659 
	}
}

665 
PRIVATE
 
	$°¨t_mŸ‹
()

680 
mŸ‹_bô
, 
ru¬ög
;

681 
mesßge
 
mess
;

683 
mŸ‹_bô
 = 1 << 
f_drive
;

684 
ru¬ög
 = 
mŸ‹_°©us
 & 
mŸ‹_bô
;

685 
mŸ‹_gﬂl
 = 
mŸ‹_°©us
 | 
mŸ‹_bô
;

687 
	`out_byã
(
DOR
, (
mŸ‹_gﬂl
 << 
MOTOR_SHIFT
Ë| 
ENABLE_INT
 | 
f_drive
);

688 
mŸ‹_°©us
 = 
mŸ‹_gﬂl
;

691 i‡(
ru¬ög
) ;

692 
	`˛ock_mess
(
må_£tup
[
d
], 
£nd_mess
);

693 
	`ª˚ive
(
CLOCK
, &
mess
);

694 
	}
}

700 
PRIVATE
 
	$°›_mŸ‹
()

707 i‡(
mŸ‹_gﬂl
 !
mŸ‹_°©us
) {

708 
	`out_byã
(
DOR
, (
mŸ‹_gﬂl
 << 
MOTOR_SHIFT
Ë| 
ENABLE_INT
);

709 
mŸ‹_°©us
 = 
mŸ‹_gﬂl
;

711 
	}
}

717 
PUBLIC
 
	$Ê›py_°›
()

721 
mŸ‹_gﬂl
 = 0;

722 
	`°›_mŸ‹
();

723 
	}
}

729 
PRIVATE
 
	$£ek
(
Â
)

730 
Ê›py
 *
Â
;

736 
r
;

737 
mesßge
 
mess
;

740 i‡(
Â
->
Ê_ˇlibøti⁄
 =
UNCALIBRATED
)

741 i‡(
	`ªˇlibøã
(
Â
Ë!
OK
Ë(
ERR_SEEK
);

742 i‡(
Â
->
Ê_curcyl
 =Â->
Ê_h¨dcyl
Ë(
OK
);

745 
	`fdc_out
(
FDC_SEEK
);

746 
	`fdc_out
((
Â
->
Ê_hód
 << 2Ë| 
f_drive
);

747 
	`fdc_out
(
Â
->
Ê_h¨dcyl
);

748 i‡(
√ed_ª£t
Ë(
ERR_SEEK
);

749 i‡(
	`f_öå_waô
(Ë!
OK
Ë(
ERR_TIMEOUT
);

752 
	`fdc_out
(
FDC_SENSE
);

753 
r
 = 
	`fdc_ªsu…s
();

754 i‡(
r
 !
OK
 || (
f_ªsu…s
[
ST0
] & 
ST0_BITS
Ë!
SEEK_ST0


755 || 
f_ªsu…s
[
ST1
] !
Â
->
Ê_h¨dcyl
) {

757 (
ERR_SEEK
);

760 i‡(
f_devi˚
 & 
FORMAT_DEV_BIT
) {

761 
	`˛ock_mess
(2, 
£nd_mess
);

762 
	`ª˚ive
(
CLOCK
, &
mess
);

764 
Â
->
Ê_curcyl
 = fp->
Ê_h¨dcyl
;

765 (
OK
);

766 
	}
}

772 
PRIVATE
 
	$f_å™s„r
(
Â
, 
ç
)

773 
Ê›py
 *
Â
;

774 
å™s
 *
ç
;

778 
r
, 
s
;

781 i‡(
Â
->
Ê_ˇlibøti⁄
 =
UNCALIBRATED
Ë(
ERR_TRANSFER
);

782 i‡((
mŸ‹_°©us
 & (1 << 
f_drive
)Ë=0Ë(
ERR_TRANSFER
);

786 i‡(
f_devi˚
 & 
FORMAT_DEV_BIT
) {

787 
	`fdc_out
(
FDC_FORMAT
);

788 
	`fdc_out
((
Â
->
Ê_hód
 << 2Ë| 
f_drive
);

789 
	`fdc_out
(
fmt_∑øm
.
£˘‹_size_code
);

790 
	`fdc_out
(
fmt_∑øm
.
£˘‹s_≥r_cylödî
);

791 
	`fdc_out
(
fmt_∑øm
.
g≠_Àngth_f‹_f‹m©
);

792 
	`fdc_out
(
fmt_∑øm
.
fûl_byã_f‹_f‹m©
);

794 
	`fdc_out
(
f_›code
 =
DEV_WRITE
 ? 
FDC_WRITE
 : 
FDC_READ
);

795 
	`fdc_out
((
Â
->
Ê_hód
 << 2Ë| 
f_drive
);

796 
	`fdc_out
(
Â
->
Ê_cylödî
);

797 
	`fdc_out
(
Â
->
Ê_hód
);

798 
	`fdc_out
(
Â
->
Ê_£˘‹
);

799 
	`fdc_out
(
SECTOR_SIZE_CODE
);

800 
	`fdc_out
(
f_£˘‹s
);

801 
	`fdc_out
(
g≠
[
d
]);

802 
	`fdc_out
(
DTL
);

806 i‡(
√ed_ª£t
Ë(
ERR_TRANSFER
);

808 i‡(
	`f_öå_waô
(Ë!
OK
Ë(
ERR_TIMEOUT
);

811 
r
 = 
	`fdc_ªsu…s
();

812 i‡(
r
 !
OK
) (r);

814 i‡(
f_ªsu…s
[
ST1
] & 
WRITE_PROTECT
) {

815 
	`¥ötf
("%s: diskëã i†wrôê¥Ÿe˘ed.\n", 
	`f_«me
());

816 (
ERR_WR_PROTECT
);

819 i‡((
f_ªsu…s
[
ST0
] & 
ST0_BITS
Ë!
TRANS_ST0
Ë(
ERR_TRANSFER
);

820 i‡(
f_ªsu…s
[
ST1
] | f_ªsu…s[
ST2
]Ë(
ERR_TRANSFER
);

822 i‡(
f_devi˚
 & 
FORMAT_DEV_BIT
Ë(
OK
);

825 
s
 = (
f_ªsu…s
[
ST_CYL
] - 
Â
->
Ê_cylödî
Ë* 
NR_HEADS
 * 
f_£˘‹s
;

826 
s
 +(
f_ªsu…s
[
ST_HEAD
] - 
Â
->
Ê_hód
Ë* 
f_£˘‹s
;

827 
s
 +(
f_ªsu…s
[
ST_SEC
] - 
Â
->
Ê_£˘‹
);

828 i‡((
s
 << 
SECTOR_SHIFT
Ë!
ç
->
å_cou¡
Ë(
ERR_TRANSFER
);

831 
Â
->
Ê_£˘‹
 = 
f_ªsu…s
[
ST_SEC
];

832 (
OK
);

833 
	}
}

839 
PRIVATE
 
	$fdc_ªsu…s
()

845 
ªsu…_ƒ
, 
°©us
;

846 
mûli_°©e
 
ms
;

851 
ªsu…_ƒ
 = 0;

852 
	`mûli_°¨t
(&
ms
);

858 
°©us
 = 
	`ö_byã
(
FDC_STATUS
Ë& (
MASTER
 | 
DIRECTION
 | 
CTL_BUSY
);

859 i‡(
°©us
 =(
MASTER
 | 
DIRECTION
 | 
CTL_BUSY
)) {

860 i‡(
ªsu…_ƒ
 >
MAX_RESULTS
) ;

861 
f_ªsu…s
[
ªsu…_ƒ
++] = 
	`ö_byã
(
FDC_DATA
);

864 i‡(
°©us
 =
MASTER
) {

865 
	`íabÀ_úq
(
FLOPPY_IRQ
);

866 (
OK
);

868 } 
	`mûli_ñ≠£d
(&
ms
Ë< 
TIMEOUT
);

869 
√ed_ª£t
 = 
TRUE
;

870 
	`íabÀ_úq
(
FLOPPY_IRQ
);

871 (
ERR_STATUS
);

872 
	}
}

878 
PRIVATE
 
	$f_h™dÀr
(
úq
)

879 
úq
;

883 
	`öãºu±
(
FLOPPY
);

885 
	}
}

891 
PRIVATE
 
	$fdc_out
(
vÆ
)

892 
vÆ
;

899 
mûli_°©e
 
ms
;

901 i‡(
√ed_ª£t
) ;

904 
	`mûli_°¨t
(&
ms
);

905 (
	`ö_byã
(
FDC_STATUS
Ë& (
MASTER
 | 
DIRECTION
)) != (MASTER | 0)) {

906 i‡(
	`mûli_ñ≠£d
(&
ms
Ë>
TIMEOUT
) {

908 
√ed_ª£t
 = 
TRUE
;

912 
	`out_byã
(
FDC_DATA
, 
vÆ
);

913 
	}
}

919 
PRIVATE
 
	$ªˇlibøã
(
Â
)

920 
Ê›py
 *
Â
;

931 
r
;

934 
	`°¨t_mŸ‹
();

935 
	`fdc_out
(
FDC_RECALIBRATE
);

936 
	`fdc_out
(
f_drive
);

937 i‡(
√ed_ª£t
Ë(
ERR_SEEK
);

938 i‡(
	`f_öå_waô
(Ë!
OK
Ë(
ERR_TIMEOUT
);

941 
	`fdc_out
(
FDC_SENSE
);

942 
r
 = 
	`fdc_ªsu…s
();

943 
Â
->
Ê_curcyl
 = 
NO_CYL
;

944 i‡(
r
 !
OK
 ||

945 (
f_ªsu…s
[
ST0
] & 
ST0_BITS
Ë!
SEEK_ST0
 || f_ªsu…s[
ST_PCN
] != 0) {

947 
√ed_ª£t
 = 
TRUE
;

948 (
ERR_RECALIBRATE
);

951 
Â
->
Ê_ˇlibøti⁄
 = 
CALIBRATED
;

952 (
OK
);

954 
	}
}

960 
PRIVATE
 
	$f_ª£t
()

966 
i
;

967 
mesßge
 
mess
;

970 
√ed_ª£t
 = 
FALSE
;

981 
	`lock
();

982 
mŸ‹_°©us
 = 0;

983 
mŸ‹_gﬂl
 = 0;

984 
	`out_byã
(
DOR
, 0);

985 
	`out_byã
(
DOR
, 
ENABLE_INT
);

986 
	`u∆ock
();

987 
	`ª˚ive
(
HARDWARE
, &
mess
);

1000 
i
 = 0; i < 4; i++) {

1001 
	`fdc_out
(
FDC_SENSE
);

1002 (Ë
	`fdc_ªsu…s
();

1004 
i
 = 0; i < 
NR_DRIVES
; i++)

1005 
Ê›py
[
i
].
Ê_ˇlibøti⁄
 = 
UNCALIBRATED
;

1008 
cuºít_•ec1
 = 0;

1009 
	}
}

1015 
PRIVATE
 
	$£nd_mess
()

1019 
mesßge
 
mess
;

1021 
	`£nd
(
FLOPPY
, &
mess
);

1022 
	}
}

1028 
PRIVATE
 
	$f_öå_waô
()

1033 
mesßge
 
mess
;

1035 
f_busy
 = 
BSY_IO
;

1036 
	`˛ock_mess
(
WAKEUP
, 
f_timeout
);

1037 
	`ª˚ive
(
HARDWARE
, &
mess
);

1039 i‡(
f_busy
 =
BSY_WAKEN
) {

1043 
	`f_ª£t
();

1044 (
ERR_TIMEOUT
);

1046 
f_busy
 = 
BSY_IDLE
;

1047 (
OK
);

1048 
	}
}

1054 
PRIVATE
 
	$f_timeout
()

1060 i‡(
f_busy
 =
BSY_IO
) {

1061 
f_busy
 = 
BSY_WAKEN
;

1062 
	`öãºu±
(
FLOPPY
);

1064 
	}
}

1070 
PRIVATE
 
	$ªad_id
(
Â
)

1071 
Ê›py
 *
Â
;

1075 
ªsu…
;

1078 i‡(
Â
->
Ê_ˇlibøti⁄
 =
UNCALIBRATED
Ë(
ERR_READ_ID
);

1079 i‡((
mŸ‹_°©us
 & (1 << 
f_drive
)Ë=0Ë(
ERR_READ_ID
);

1082 
	`fdc_out
(
FDC_READ_ID
);

1083 
	`fdc_out
–(
f_Â
->
Ê_hód
 << 2Ë| 
f_drive
);

1086 i‡(
√ed_ª£t
Ë(
ERR_READ_ID
);

1088 i‡(
	`f_öå_waô
(Ë!
OK
Ë(
ERR_TIMEOUT
);

1091 
ªsu…
 = 
	`fdc_ªsu…s
();

1092 i‡(
ªsu…
 !
OK
) (result);

1094 i‡((
f_ªsu…s
[
ST0
] & 
ST0_BITS
Ë!
TRANS_ST0
Ë(
ERR_READ_ID
);

1095 i‡(
f_ªsu…s
[
ST1
] | f_ªsu…s[
ST2
]Ë(
ERR_READ_ID
);

1098 
f_Â
->
Ê_£˘‹
 = 
f_ªsu…s
[
ST_SEC
] + 1;

1099 (
OK
);

1100 
	}
}

1106 
PRIVATE
 
	$f_do_›í
(
dp
, 
m_±r
)

1107 
drivî
 *
dp
;

1108 
mesßge
 *
m_±r
;

1112 
dty≥
;

1113 
ã°_‹dî
 *
t›
;

1116 i‡(
	`f_¥ï¨e
(
m_±r
->
DEVICE
Ë=
NIL_DEV
Ë(
ENXIO
);

1118 
dty≥
 = 
f_devi˚
 & 
DEV_TYPE_BITS
;

1119 i‡(
dty≥
 >
MINOR_fd0a
) dtype = 0;

1120 i‡(
dty≥
 != 0) {

1122 
dty≥
 = (dty≥ >> 
DEV_TYPE_SHIFT
) - 1;

1123 i‡(
dty≥
 >
NT
Ë(
ENXIO
);

1124 
f_Â
->
Ê_dísôy
 = 
dty≥
;

1125 
f_Â
->
Ê_geom
.
dv_size
 = (Ë
ƒ_blocks
[
dty≥
] << 
SECTOR_SHIFT
;

1126 (
OK
);

1128 i‡(
f_devi˚
 & 
FORMAT_DEV_BIT
Ë(
EIO
);

1131 i‡(
mŸ‹_°©us
 & (1 << 
f_drive
)Ë(
OK
);

1138 i‡(
f_Â
->
Ê_dísôy
 !
NO_DENS
 && 
	`ã°_ªad
(f_Â->Ê_dísôyË=
OK
)

1139 (
OK
);

1144 
t›
 = &
ã°_‹dî
[0];Å› < &ã°_‹dî[
NT
-1];Åop++) {

1145 
dty≥
 = 
t›
->
t_dísôy
;

1148 i‡(!(
f_Â
->
Ê_˛ass
 & (1 << 
dty≥
))) ;

1150 i‡(
	`ã°_ªad
(
dty≥
Ë=
OK
) {

1154 
f_Â
->
Ê_˛ass
 &
t›
->
t_˛ass
;

1155 (
OK
);

1158 i‡(
f_busy
 =
BSY_WAKEN
) ;

1160 
f_Â
->
Ê_dísôy
 = 
NO_DENS
;

1161 (
EIO
);

1162 
	}
}

1168 
PRIVATE
 
	$ã°_ªad
(
dísôy
)

1169 
dísôy
;

1176 
mesßge
 
m
;

1177 
r
, 
devi˚
;

1179 
f_Â
->
Ê_dísôy
 = 
dísôy
;

1180 
devi˚
 = ((
dísôy
 + 1Ë<< 
DEV_TYPE_SHIFT
Ë+ 
f_drive
;

1181 
f_Â
->
Ê_geom
.
dv_size
 = (Ë
ƒ_blocks
[
dísôy
] << 
SECTOR_SHIFT
;

1182 
m
.
m_ty≥
 = 
DEV_READ
;

1183 
m
.
DEVICE
 = 
devi˚
;

1184 
m
.
PROC_NR
 = 
FLOPPY
;

1185 
m
.
COUNT
 = 
SECTOR_SIZE
;

1186 
m
.
POSITION
 = (Ë
ã°_£˘‹
[
dísôy
] * 
SECTOR_SIZE
;

1187 
m
.
ADDRESS
 = (*Ë
tmp_buf
;

1188 
r
 = 
	`do_rdwt
(&
f_dèb
, &
m
);

1189 i‡(
r
 !
SECTOR_SIZE
Ë(
EIO
);

1191 
	`∑πôi⁄
(&
f_dèb
, 
f_drive
, 
P_FLOPPY
);

1192 (
OK
);

1193 
	}
}

1199 
PRIVATE
 
	$f_geomëry
(
íåy
)

1200 
∑πôi⁄
 *
íåy
;

1202 
íåy
->
cylödîs
 = 
ƒ_blocks
[
d
] / (
NR_HEADS
 * 
f_£˘‹s
);

1203 
íåy
->
hóds
 = 
NR_HEADS
;

1204 
íåy
->
£˘‹s
 = 
f_£˘‹s
;

1205 
	}
}

	@fltpr.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"../°dio/loc_ö˛.h
"

5 
	g_Â_hook
 = 1;

8 
	$_f_¥öt
(
va_li°
 *
≠
, 
Êags
, *
s
, 
c
, 
¥ecisi⁄
)

10 
	`Ârötf
(
°dîr
,"cannotÖrint floatingÖoint\n");

11 
	`exô
(
EXIT_FAILURE
);

12 
	}
}

	@flushbuf.c

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

8 
	~"loc_ö˛.h
"

10 
	~<sys/ty≥s.h
>

12 
off_t
 
_l£ek
(
fûdes
, off_à
off£t
, 
whí˚
);

13 
ssize_t
 
_wrôe
(
d
, c⁄° *
buf
, 
size_t
 
nbyãs
);

14 
_ißây
(
d
);

15 (*
_˛ón
)();

18 
	$do_wrôe
(
d
, *
buf
, 
nbyãs
)

20 
c
;

25 (
c
 = 
	`_wrôe
(
d
, 
buf
, 
nbyãs
)) > 0 && c <Çbytes) {

26 
nbyãs
 -
c
;

27 
buf
 +
c
;

29  
c
 > 0;

30 
	}
}

33 
	$__Êushbuf
(
c
, 
FILE
 * 
°ªam
)

35 
_˛ón
 = 
__˛ónup
;

36 i‡(
	`fûío
(
°ªam
Ë< 0Ë 
EOF
;

37 i‡(!
	`io_ã°Êag
(
°ªam
, 
_IOWRITE
)Ë 
EOF
;

38 i‡(
	`io_ã°Êag
(
°ªam
, 
_IOREADING
Ë&& !
	`„of
(°ªam)Ë 
EOF
;

40 
°ªam
->
_Êags
 &~
_IOREADING
;

41 
°ªam
->
_Êags
 |
_IOWRITING
;

42 i‡(!
	`io_ã°Êag
(
°ªam
, 
_IONBF
)) {

43 i‡(!
°ªam
->
_buf
) {

44 i‡(
°ªam
 =
°dout
 && 
	`_ißây
(
	`fûío
(stdout))) {

45 i‡(!(
°ªam
->
_buf
 =

46 (*Ë
	`mÆloc
(
BUFSIZ
))) {

47 
°ªam
->
_Êags
 |
_IONBF
;

49 
°ªam
->
_Êags
 |
_IOLBF
|
_IOMYBUF
;

50 
°ªam
->
_bufsiz
 = 
BUFSIZ
;

51 
°ªam
->
_cou¡
 = -1;

54 i‡(!(
°ªam
->
_buf
 =

55 (*Ë
	`mÆloc
(
BUFSIZ
))) {

56 
°ªam
->
_Êags
 |
_IONBF
;

58 
°ªam
->
_Êags
 |
_IOMYBUF
;

59 
°ªam
->
_bufsiz
 = 
BUFSIZ
;

60 i‡(!
	`io_ã°Êag
(
°ªam
, 
_IOLBF
))

61 
°ªam
->
_cou¡
 = 
BUFSIZ
 - 1;

62 
°ªam
->
_cou¡
 = -1;

65 
°ªam
->
_±r
 = såóm->
_buf
;

69 i‡(
	`io_ã°Êag
(
°ªam
, 
_IONBF
)) {

70 
c1
 = 
c
;

72 
°ªam
->
_cou¡
 = 0;

73 i‡(
	`io_ã°Êag
(
°ªam
, 
_IOAPPEND
)) {

74 i‡(
	`_l£ek
(
	`fûío
(
°ªam
), 0L, 
SEEK_END
) == -1) {

75 
°ªam
->
_Êags
 |
_IOERR
;

76  
EOF
;

79 i‡(
	`_wrôe
(
	`fûío
(
°ªam
), &
c1
, 1) != 1) {

80 
°ªam
->
_Êags
 |
_IOERR
;

81  
EOF
;

83  
c
;

84 } i‡(
	`io_ã°Êag
(
°ªam
, 
_IOLBF
)) {

85 *
°ªam
->
_±r
++ = 
c
;

86 i‡(
c
 ='\n' || 
°ªam
->
_cou¡
 =-°ªam->
_bufsiz
) {

87 i‡(
	`io_ã°Êag
(
°ªam
, 
_IOAPPEND
)) {

88 i‡(
	`_l£ek
(
	`fûío
(
°ªam
), 0L, 
SEEK_END
) == -1) {

89 
°ªam
->
_Êags
 |
_IOERR
;

90  
EOF
;

93 i‡(! 
	`do_wrôe
(
	`fûío
(
°ªam
), (*)°ªam->
_buf
,

94 -
°ªam
->
_cou¡
)) {

95 
°ªam
->
_Êags
 |
_IOERR
;

96  
EOF
;

98 
°ªam
->
_±r
 = såóm->
_buf
;

99 
°ªam
->
_cou¡
 = 0;

103 
cou¡
 = 
°ªam
->
_±r
 - såóm->
_buf
;

105 
°ªam
->
_cou¡
 = såóm->
_bufsiz
 - 1;

106 
°ªam
->
_±r
 = såóm->
_buf
 + 1;

108 i‡(
cou¡
 > 0) {

109 i‡(
	`io_ã°Êag
(
°ªam
, 
_IOAPPEND
)) {

110 i‡(
	`_l£ek
(
	`fûío
(
°ªam
), 0L, 
SEEK_END
) == -1) {

111 
°ªam
->
_Êags
 |
_IOERR
;

112  
EOF
;

115 i‡(! 
	`do_wrôe
(
	`fûío
(
°ªam
), (*)°ªam->
_buf
, 
cou¡
)) {

116 *(
°ªam
->
_buf
Ë
c
;

117 
°ªam
->
_Êags
 |
_IOERR
;

118  
EOF
;

121 *(
°ªam
->
_buf
Ë
c
;

123  
c
;

124 
	}
}

	@fmod.c

9 
	~<m©h.h
>

10 
	~<î∫o.h
>

13 
	$fmod
(
x
, 
y
)

15 
i
;

16 
vÆ
;

17 
‰ac
;

19 i‡(
y
 == 0) {

20 
î∫o
 = 
EDOM
;

23 
‰ac
 = 
	`modf
–
x
 / 
y
, &
vÆ
);

25  
‰ac
 * 
y
;

34 
	}
}

	@fopen.c

6 #if 
deföed
(
_POSIX_SOURCE
)

7 
	~<sys/ty≥s.h
>

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~"loc_ö˛.h
"

13 
	#PMODE
 0666

	)

17 
	#O_RDONLY
 0

	)

18 
	#O_WRONLY
 1

	)

19 
	#O_RDWR
 2

	)

37 
	#O_CREAT
 0x010

	)

38 
	#O_TRUNC
 0x020

	)

39 
	#O_APPEND
 0x040

	)

41 
_›í
(c⁄° *
∑th
, 
Êags
);

42 
_¸ót
(c⁄° *
∑th
, 
Mode_t
 
mode
);

43 
_˛o£
(
d
);

45 
FILE
 *

46 
	$f›í
(c⁄° *
«me
, c⁄° *
mode
)

48 
i
;

49 
rwmode
 = 0, 
rwÊags
 = 0;

50 
FILE
 *
°ªam
;

51 
fd
, 
Êags
 = 0;

53 
i
 = 0; 
__iŸab
[i] != 0 ; i++)

54 i‡–
i
 >
FOPEN_MAX
-1 )

55  (
FILE
 *)
NULL
;

57 *
mode
++) {

59 
Êags
 |
_IOREAD
 | 
_IOREADING
;

60 
rwmode
 = 
O_RDONLY
;

63 
Êags
 |
_IOWRITE
 | 
_IOWRITING
;

64 
rwmode
 = 
O_WRONLY
;

65 
rwÊags
 = 
O_CREAT
 | 
O_TRUNC
;

68 
Êags
 |
_IOWRITE
 | 
_IOWRITING
 | 
_IOAPPEND
;

69 
rwmode
 = 
O_WRONLY
;

70 
rwÊags
 |
O_APPEND
 | 
O_CREAT
;

73  (
FILE
 *)
NULL
;

76 *
mode
) {

77 *
mode
++) {

81 
rwmode
 = 
O_RDWR
;

82 
Êags
 |
_IOREAD
 | 
_IOWRITE
;

94 i‡((
rwÊags
 & 
O_TRUNC
)

95 || (((
fd
 = 
	`_›í
(
«me
, 
rwmode
)) < 0)

96 && (
rwÊags
 & 
O_CREAT
))) {

97 i‡(((
fd
 = 
	`_¸ót
(
«me
, 
PMODE
)Ë> 0Ë&& 
Êags
 | 
_IOREAD
) {

98 (Ë
	`_˛o£
(
fd
);

99 
fd
 = 
	`_›í
(
«me
, 
rwmode
);

104 i‡(
fd
 < 0Ë (
FILE
 *)
NULL
;

106 i‡(–
°ªam
 = (
FILE
 *Ë
	`mÆloc
((FILE))Ë=
NULL
 ) {

107 
	`_˛o£
(
fd
);

108  (
FILE
 *)
NULL
;

111 i‡((
Êags
 & (
_IOREAD
 | 
_IOWRITE
)) == (_IOREAD | _IOWRITE))

112 
Êags
 &~(
_IOREADING
 | 
_IOWRITING
);

114 
°ªam
->
_cou¡
 = 0;

115 
°ªam
->
_fd
 = 
fd
;

116 
°ªam
->
_Êags
 = 
Êags
;

117 
°ªam
->
_buf
 = 
NULL
;

118 
__iŸab
[
i
] = 
°ªam
;

119  
°ªam
;

120 
	}
}

	@forkexit.c

17 
	~"mm.h
"

18 
	~<sys/waô.h
>

19 
	~<möix/ˇŒƒ.h
>

20 
	~<sig«l.h
>

21 
	~"m¥oc.h
"

22 
	~"∑øm.h
"

24 
	#LAST_FEW
 2

	)

26 
PRIVATE
 
pid_t
 
	g√xt_pid
 = 
INIT_PID
+1;

28 
FORWARD
 
_PROTOTYPE
 (
˛ónup
, (
m¥oc
 *
chûd
) );

33 
PUBLIC
 
	$do_f‹k
()

37 
m¥oc
 *
rmp
;

38 
m¥oc
 *
rmc
;

39 
i
, 
chûd_ƒ
, 
t
;

40 
phys_˛icks
 
¥og_˛icks
, 
chûd_ba£
 = 0;

41 
phys_byãs
 
¥og_byãs
, 
∑ª¡_abs
, 
chûd_abs
;

46 
rmp
 = 
mp
;

47 i‡(
¥ocs_ö_u£
 =
NR_PROCS
Ë(
EAGAIN
);

48 i‡(
¥ocs_ö_u£
 >
NR_PROCS
-
LAST_FEW
 && 
rmp
->
mp_effuid
 !0)(
EAGAIN
);

53 
¥og_˛icks
 = (
phys_˛icks
Ë
rmp
->
mp_£g
[
S
].
mem_Àn
;

54 
¥og_˛icks
 +(
rmp
->
mp_£g
[
S
].
mem_vú
 -Ñmp->mp_£g[
D
].mem_vir);

55 #i‡(
SHADOWING
 == 0)

56 
¥og_byãs
 = (
phys_byãs
Ë
¥og_˛icks
 << 
CLICK_SHIFT
;

58 i‡–(
chûd_ba£
 = 
	`Æloc_mem
(
¥og_˛icks
)Ë=
NO_MEM
Ë(
ENOMEM
);

60 #i‡(
SHADOWING
 == 0)

62 
chûd_abs
 = (
phys_byãs
Ë
chûd_ba£
 << 
CLICK_SHIFT
;

63 
∑ª¡_abs
 = (
phys_byãs
Ë
rmp
->
mp_£g
[
D
].
mem_phys
 << 
CLICK_SHIFT
;

64 
i
 = 
	`sys_c›y
(
ABS
, 0, 
∑ª¡_abs
, ABS, 0, 
chûd_abs
, 
¥og_byãs
);

65 i‡(
i
 < 0Ë
	`∑nic
("do_fork can't copy", i);

69 
rmc
 = &
m¥oc
[0];Ñm¯< &m¥oc[
NR_PROCS
];Ñmc++)

70 i‡–(
rmc
->
mp_Êags
 & 
IN_USE
) == 0) ;

73 
chûd_ƒ
 = ()(
rmc
 - 
m¥oc
);

74 
¥ocs_ö_u£
++;

75 *
rmc
 = *
rmp
;

77 
rmc
->
mp_∑ª¡
 = 
who
;

78 
rmc
->
mp_Êags
 &~
TRACED
;

79 #i‡(
SHADOWING
 == 0)

83 i‡(!(
rmc
->
mp_Êags
 & 
SEPARATE
)Ërmc->
mp_£g
[
T
].
mem_phys
 = 
chûd_ba£
;

84 
rmc
->
mp_£g
[
D
].
mem_phys
 = 
chûd_ba£
;

85 
rmc
->
mp_£g
[
S
].
mem_phys
 =Ñmc->mp_£g[
D
].mem_phys +

86 (
rmp
->
mp_£g
[
S
].
mem_vú
 -Ñmp->mp_£g[
D
].mem_vir);

88 
rmc
->
mp_exô°©us
 = 0;

89 
rmc
->
mp_sig°©us
 = 0;

93 
t
 = 0;

94 
√xt_pid
 = (√xt_pid < 30000 ?Çext_pid + 1 : 
INIT_PID
 + 1);

95 
rmp
 = &
m¥oc
[0];Ñm∞< &m¥oc[
NR_PROCS
];Ñmp++)

96 i‡(
rmp
->
mp_pid
 =
√xt_pid
 ||Ñmp->
mp_¥ocgΩ
 ==Çext_pid) {

97 
t
 = 1;

100 
rmc
->
mp_pid
 = 
√xt_pid
;

101 } 
t
);

104 
	`sys_f‹k
(
who
, 
chûd_ƒ
, 
rmc
->
mp_pid
, 
chûd_ba£
);

105 
	`ãŒ_fs
(
FORK
, 
who
, 
chûd_ƒ
, 
rmc
->
mp_pid
);

107 #i‡(
SHADOWING
 == 0)

109 
	`sys_√wm≠
(
chûd_ƒ
, 
rmc
->
mp_£g
);

113 
	`ª∂y
(
chûd_ƒ
, 0, 0, 
NIL_PTR
);

114 (
√xt_pid
);

115 
	}
}

121 
PUBLIC
 
	$do_mm_exô
()

127 
	`mm_exô
(
mp
, 
°©us
);

128 
d⁄t_ª∂y
 = 
TRUE
;

129 (
OK
);

130 
	}
}

136 
PUBLIC
 
	$mm_exô
(
rmp
, 
exô_°©us
)

137 
m¥oc
 *
rmp
;

138 
exô_°©us
;

144 
¥oc_ƒ
;

145 
∑ª¡_waôög
, 
right_chûd
;

146 
pid_t
 
pid¨g
, 
¥ocgΩ
;

147 
phys_˛icks
 
ba£
, 
size
, 
s
;

149 
¥oc_ƒ
 = (Ë(
rmp
 - 
m¥oc
);

152 
¥ocgΩ
 = (
rmp
->
mp_pid
 =
mp
->
mp_¥ocgΩ
) ? mp->mp_procgrp : 0;

155 i‡(
rmp
->
mp_Êags
 & 
ALARM_ON
Ë
	`£t_Æ¨m
(
¥oc_ƒ
, () 0);

158 
	`ãŒ_fs
(
EXIT
, 
¥oc_ƒ
, 0, 0);

159 
	`sys_xô
(
rmp
->
mp_∑ª¡
, 
¥oc_ƒ
, &
ba£
, &
size
);

160 #i‡(
SHADOWING
 == 1)

161 
	`‰ì_mem
(
ba£
, 
size
);

164 #i‡(
SHADOWING
 == 0)

166 i‡(
	`föd_sh¨e
(
rmp
,Ñmp->
mp_öo
,Ñmp->
mp_dev
,Ñmp->
mp_˘ime
Ë=
NULL
) {

168 
	`‰ì_mem
(
rmp
->
mp_£g
[
T
].
mem_phys
,Ñmp->mp_£g[T].
mem_Àn
);

171 
	`‰ì_mem
(
rmp
->
mp_£g
[
D
].
mem_phys
,

172 
rmp
->
mp_£g
[
S
].
mem_vú
 +Ñmp->mp_£g[S].
mem_Àn
 -Ñmp->mp_£g[
D
].mem_vir);

176 
rmp
->
mp_exô°©us
 = (Ë
exô_°©us
;

177 
pid¨g
 = 
m¥oc
[
rmp
->
mp_∑ª¡
].
mp_wpid
;

178 
∑ª¡_waôög
 = 
m¥oc
[
rmp
->
mp_∑ª¡
].
mp_Êags
 & 
WAITING
;

179 i‡(
pid¨g
 =-1 ||Öid¨g =
rmp
->
mp_pid
 || -pid¨g =rmp->
mp_¥ocgΩ
)

180 
right_chûd
 = 
TRUE
;

182 
right_chûd
 = 
FALSE
;

183 i‡(
∑ª¡_waôög
 && 
right_chûd
)

184 
	`˛ónup
(
rmp
);

186 
rmp
->
mp_Êags
 |
HANGING
;

189 
rmp
 = &
m¥oc
[0];Ñm∞< &m¥oc[
NR_PROCS
];Ñmp++) {

190 i‡(
rmp
->
mp_Êags
 & 
IN_USE
 &&Ñmp->
mp_∑ª¡
 =
¥oc_ƒ
) {

192 
rmp
->
mp_∑ª¡
 = 
INIT_PROC_NR
;

193 
∑ª¡_waôög
 = 
m¥oc
[
INIT_PROC_NR
].
mp_Êags
 & 
WAITING
;

194 i‡(
∑ª¡_waôög
 && (
rmp
->
mp_Êags
 & 
HANGING
)Ë
	`˛ónup
(rmp);

199 i‡(
¥ocgΩ
 !0Ë
	`check_sig
(-¥ocgΩ, 
SIGHUP
);

200 
	}
}

206 
PUBLIC
 
	$do_waôpid
()

213 
m¥oc
 *
Ω
;

214 
pid¨g
, 
›ti⁄s
, 
chûdªn
, 
ªs2
;

223 
pid¨g
 = (
mm_ˇŒ
 =
WAIT
 ? -1 : 
pid
);

224 
›ti⁄s
 = (
mm_ˇŒ
 =
WAIT
 ? 0 : 
sig_ƒ
);

225 i‡(
pid¨g
 =0Ëpid¨g = -
mp
->
mp_¥ocgΩ
;

232 
chûdªn
 = 0;

233 
Ω
 = &
m¥oc
[0];Ñ∞< &m¥oc[
NR_PROCS
];Ñp++) {

234 i‡–(
Ω
->
mp_Êags
 & 
IN_USE
Ë&&Ñp->
mp_∑ª¡
 =
who
) {

236 i‡(
pid¨g
 > 0 &&Öid¨g !
Ω
->
mp_pid
) ;

237 i‡(
pid¨g
 < -1 && -pid¨g !
Ω
->
mp_¥ocgΩ
) ;

239 
chûdªn
++;

240 i‡(
Ω
->
mp_Êags
 & 
HANGING
) {

242 
	`˛ónup
(
Ω
);

243 
d⁄t_ª∂y
 = 
TRUE
;

244 (
OK
);

246 i‡((
Ω
->
mp_Êags
 & 
STOPPED
Ë&&Ñp->
mp_sig°©us
) {

248 
ªs2
 = 0177 | (
Ω
->
mp_sig°©us
 << 8);

249 
	`ª∂y
(
who
, 
Ω
->
mp_pid
, 
ªs2
, 
NIL_PTR
);

250 
d⁄t_ª∂y
 = 
TRUE
;

251 
Ω
->
mp_sig°©us
 = 0;

252 (
OK
);

258 i‡(
chûdªn
 > 0) {

260 i‡(
›ti⁄s
 & 
WNOHANG
) (0);

261 
mp
->
mp_Êags
 |
WAITING
;

262 
mp
->
mp_wpid
 = (
pid_t
Ë
pid¨g
;

263 
d⁄t_ª∂y
 = 
TRUE
;

264 (
OK
);

267 (
ECHILD
);

269 
	}
}

275 
PRIVATE
 
	$˛ónup
(
chûd
)

276 
m¥oc
 *
chûd
;

282 
exô°©us
;

285 
exô°©us
 = (
chûd
->
mp_exô°©us
 << 8Ë| (chûd->
mp_sig°©us
 & 0377);

286 
	`ª∂y
(
chûd
->
mp_∑ª¡
, chûd->
mp_pid
, 
exô°©us
, 
NIL_PTR
);

287 
m¥oc
[
chûd
->
mp_∑ª¡
].
mp_Êags
 &~
WAITING
;

290 
chûd
->
mp_Êags
 = 0;

291 
¥ocs_ö_u£
--;

292 
	}
}

	@fphook.c

6 #i‚def 
NOFLOAT


7 
	~<°rög.h
>

8 
	~<°d¨g.h
>

9 
	~"../°dio/loc_ö˛.h
"

10 
	g_Â_hook
 = 1;

13 
	$_pÊﬂt
(
r
, *
s
, 
n
, 
Êags
)

15 *
s1
;

16 
sign
, 
dp
;

17 
i
;

19 
s1
 = 
	`_fcvt
(
r
, 
n
, &
dp
, &
sign
);

20 i‡(
sign
)

21 *
s
++ = '-';

22 i‡(
Êags
 & 
FL_SIGN
)

23 *
s
++ = '+';

24 i‡(
Êags
 & 
FL_SPACE
)

25 *
s
++ = ' ';

27 i‡(
dp
<=0)

28 *
s
++ = '0';

29 
i
=
dp
; i>0; i--)

30 i‡(*
s1
Ë*
s
++ = *s1++;

31 *
s
++ = '0';

32 i‡(((
i
=
n
Ë> 0Ë|| (
Êags
 & 
FL_ALT
))

33 *
s
++ = '.';

34 ++
dp
 <= 0) {

35 i‡(--
i
<0)

37 *
s
++ = '0';

39 --
i
 >= 0)

40 i‡(*
s1
Ë*
s
++ = *s1++;

41 *
s
++ = '0';

42  
s
;

43 
	}
}

46 
	$_pscõn
(
r
, *
s
, 
n
, 
Êags
)

48 
sign
, 
dp
;

49 *
s1
;

51 
s1
 = 
	`_ecvt
(
r
, 
n
 + 1, &
dp
, &
sign
);

52 i‡(
sign
)

53 *
s
++ = '-';

54 i‡(
Êags
 & 
FL_SIGN
)

55 *
s
++ = '+';

56 i‡(
Êags
 & 
FL_SPACE
)

57 *
s
++ = ' ';

59 *
s
++ = *
s1
++;

60 i‡((
n
 > 0Ë|| (
Êags
 & 
FL_ALT
))

61 *
s
++ = '.';

62 --
n
 >= 0)

63 i‡(*
s1
Ë*
s
++ = *s1++;

64 *
s
++ = '0';

65 *
s
++ = 'e';

66 i‡–
r
 !0 ) --
dp
 ;

67 i‡–
dp
<0 ) {

68 *
s
++ = '-' ; 
dp
= -dp ;

70 *
s
++ = '+' ;

72 i‡(
dp
 >= 100) {

73 *
s
++ = '0' + (
dp
 / 100);

74 
dp
 %= 100;

76 *
s
++ = '0' + (
dp
/10);

77 *
s
++ = '0' + (
dp
%10);

78  
s
;

79 
	}
}

81 
	#NDIGINEXP
(
exp
Ë((”xpË>100 || (expË<-100Ë? 3 : 2)

	)

82 
	#LOW_EXP
 -4

	)

83 
	#USE_EXP
(
exp
, 
ndigôs
Ë((”xpË< 
LOW_EXP
 + 1Ë|| (ex∞>ndigô†+ 1))

	)

86 
	$_gcvt
(
vÆue
, 
ndigô
, *
s
, 
Êags
)

88 
sign
, 
dp
;

89 *
s1
, *
s2
;

90 
i
;

91 
¬digô
 = 
ndigô
;

93 
s1
 = 
	`_ecvt
(
vÆue
, 
ndigô
, &
dp
, &
sign
);

94 
s2
 = 
s
;

95 i‡(
sign
Ë*
s2
++ = '-';

96 i‡(
Êags
 & 
FL_SIGN
)

97 *
s2
++ = '+';

98 i‡(
Êags
 & 
FL_SPACE
)

99 *
s2
++ = ' ';

101 i‡(!(
Êags
 & 
FL_ALT
))

102 
i
 = 
¬digô
 - 1; i > 0 && 
s1
[i] == '0'; i--)

103 
¬digô
--;

105 i‡(
	`USE_EXP
(
dp
,
ndigô
)) {

107 
dp
--;

108 *
s2
++ = *
s1
++;

109 i‡((
¬digô
 > 1Ë|| (
Êags
 & 
FL_ALT
)Ë*
s2
++ = '.';

110 --
¬digô
 > 0Ë*
s2
++ = *
s1
++;

111 *
s2
++ = 'e';

112 i‡(
dp
 < 0) {

113 *
s2
++ = '-';

114 
dp
 = -dp;

116 *
s2
++ = '+';

117 
s2
 +
	`NDIGINEXP
(
dp
);

118 *
s2
 = 0;

119 
i
 = 
	`NDIGINEXP
(
dp
); i > 0; i--) {

120 *--
s2
 = 
dp
 % 10 + '0';

121 
dp
 /= 10;

123  
s
;

126 i‡(
dp
 <= 0) {

127 i‡(*
s1
 != '0') {

129 *
s2
++ = '0';

130 *
s2
++ = '.';

132 
dp
 < 0) {

133 
dp
++;

134 *
s2
++ = '0';

137 
i
 = 1; i <
¬digô
; i++) {

138 *
s2
++ = *
s1
++;

139 i‡(
i
 =
dp
Ë*
s2
++ = '.';

141 i‡(
i
 <
dp
) {

142 
i
++ <
dp
Ë*
s2
++ = '0';

143 *
s2
++ = '.';

145 i‡((
s2
[-1]=='.'Ë&& !(
Êags
 & 
FL_ALT
)) s2--;

146 *
s2
 = '\0';

147  
s
;

148 
	}
}

151 
	$_f_¥öt
(
va_li°
 *
≠
, 
Êags
, *
s
, 
c
, 
¥ecisi⁄
)

153 *
ﬁd_s
 = 
s
;

154 
ld_vÆ
;

156 i‡(
Êags
 & 
FL_LONGDOUBLE
Ë
ld_vÆ
 = 
	`va_¨g
(*
≠
, );

157 
ld_vÆ
 = (Ë
	`va_¨g
(*
≠
, );

159 
c
) {

161 
s
 = 
	`_pÊﬂt
(
ld_vÆ
, s, 
¥ecisi⁄
, 
Êags
);

165 
s
 = 
	`_pscõn
(
ld_vÆ
, s, 
¥ecisi⁄
 , 
Êags
);

169 
s
 = 
	`_gcvt
(
ld_vÆ
, 
¥ecisi⁄
, s, 
Êags
);

170 
s
 +
	`°æí
(s);

173 i‡–
c
 == 'E' || c == 'G') {

174 *
ﬁd_s
 && *old_s != 'e') old_s++;

175 i‡(*
ﬁd_s
 == 'e') *old_s = 'E';

177  
s
;

178 
	}
}

182 
	~<°dlib.h
>

183 
	~"../™si/ext_fmt.h
"

185 
_°r_ext_cvt
(c⁄° *
s
, **
ss
, 
EXTEND
 *
e
);

186 
_ext_dbl_cvt
(
EXTEND
 *
e
);

189 
	$°πod
(c⁄° *
p
, **
µ
)

191 
EXTEND
 
e
;

193 
	`_°r_ext_cvt
(
p
, 
µ
, &
e
);

194  
	`_ext_dbl_cvt
(&
e
);

195 
	}
}

	@fprintf.c

6 
	~<°dio.h
>

7 
	~<°d¨g.h
>

8 
	~"loc_ö˛.h
"

11 
	$Ârötf
(
FILE
 *
°ªam
, c⁄° *
f‹m©
, ...)

13 
va_li°
 
≠
;

14 
ªtvÆ
;

16 
	`va_°¨t
(
≠
, 
f‹m©
);

18 
ªtvÆ
 = 
	`_d›∫t
 (
f‹m©
, 
≠
, 
°ªam
);

20 
	`va_íd
(
≠
);

22  
ªtvÆ
;

23 
	}
}

	@fproc.h

7 
EXTERN
 
	sÂroc
 {

8 
mode_t
 
	mÂ_umask
;

9 
öode
 *
	mÂ_w‹kdú
;

10 
öode
 *
	mÂ_roŸdú
;

11 
fûp
 *
	mÂ_fûp
[
OPEN_MAX
];

12 
uid_t
 
	mÂ_ªÆuid
;

13 
uid_t
 
	mÂ_effuid
;

14 
gid_t
 
	mÂ_ªÆgid
;

15 
gid_t
 
	mÂ_effgid
;

16 
dev_t
 
	mÂ_ây
;

17 
	mÂ_fd
;

18 *
	mÂ_buf„r
;

19 
	mÂ_nbyãs
;

20 
	mÂ_cum_io_∑πül
;

21 
	mÂ_su•íded
;

22 
	mÂ_ªvived
;

23 
	mÂ_èsk
;

24 
	mÂ_£¶dr
;

25 
pid_t
 
	mÂ_pid
;

26 
	mÂ_˛€xec
;

27 } 
	gÂroc
[
NR_PROCS
];

30 
	#NOT_SUSPENDED
 0

	)

31 
	#SUSPENDED
 1

	)

32 
	#NOT_REVIVING
 0

	)

33 
	#REVIVING
 1

	)

	@fputc.c

6 
	~<°dio.h
>

9 
	$Âutc
(
c
, 
FILE
 *
°ªam
)

11  
	`putc
(
c
, 
°ªam
);

12 
	}
}

	@fputs.c

6 
	~<°dio.h
>

9 
	$Âuts
(c⁄° *
s
, 
FILE
 *
°ªam
)

11 
i
 = 0;

13 *
s
)

14 i‡(
	`putc
(*
s
++, 
°ªam
Ë=
EOF
)  EOF;

15 
i
++;

17  
i
;

18 
	}
}

	@fread.c

6 
	~<°dio.h
>

8 
size_t


9 
	$‰ód
(*
±r
, 
size_t
 
size
, size_à
nmemb
, 
FILE
 *
°ªam
)

11 *
˝
 = 
±r
;

12 
c
;

13 
size_t
 
nd⁄e
 = 0;

14 
size_t
 
s
;

16 i‡(
size
)

17  
nd⁄e
 < 
nmemb
 ) {

18 
s
 = 
size
;

20 i‡((
c
 = 
	`gëc
(
°ªam
)Ë!
EOF
)

21 *
˝
++ = 
c
;

23  
nd⁄e
;

24 } --
s
);

25 
nd⁄e
++;

28  
nd⁄e
;

29 
	}
}

	@freopen.c

6 #if 
deföed
(
_POSIX_SOURCE
)

7 
	~<sys/ty≥s.h
>

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~"loc_ö˛.h
"

13 
	#PMODE
 0666

	)

18 
	#O_RDONLY
 0

	)

19 
	#O_WRONLY
 1

	)

20 
	#O_RDWR
 2

	)

22 
	#O_CREAT
 0x010

	)

23 
	#O_TRUNC
 0x020

	)

24 
	#O_APPEND
 0x040

	)

26 
_›í
(c⁄° *
∑th
, 
Êags
);

27 
_¸ót
(c⁄° *
∑th
, 
Mode_t
 
mode
);

28 
_˛o£
(
d
);

30 
FILE
 *

31 
	$‰e›í
(c⁄° *
«me
, c⁄° *
mode
, 
FILE
 *
°ªam
)

33 
i
;

34 
rwmode
 = 0, 
rwÊags
 = 0;

35 
fd
, 
Êags
 = 
°ªam
->
_Êags
 & (
_IONBF
 | 
_IOFBF
 | 
_IOLBF
 | 
_IOMYBUF
);

37 (Ë
	`fÊush
(
°ªam
);

38 (Ë
	`_˛o£
(
	`fûío
(
°ªam
));

40 *
mode
++) {

42 
Êags
 |
_IOREAD
;

43 
rwmode
 = 
O_RDONLY
;

46 
Êags
 |
_IOWRITE
;

47 
rwmode
 = 
O_WRONLY
;

48 
rwÊags
 = 
O_CREAT
 | 
O_TRUNC
;

51 
Êags
 |
_IOWRITE
 | 
_IOAPPEND
;

52 
rwmode
 = 
O_WRONLY
;

53 
rwÊags
 |
O_APPEND
 | 
O_CREAT
;

56  (
FILE
 *)
NULL
;

59 *
mode
) {

60 *
mode
++) {

64 
rwmode
 = 
O_RDWR
;

65 
Êags
 |
_IOREAD
 | 
_IOWRITE
;

74 i‡((
rwÊags
 & 
O_TRUNC
)

75 || (((
fd
 = 
	`_›í
(
«me
, 
rwmode
)) < 0)

76 && (
rwÊags
 & 
O_CREAT
))) {

77 i‡(((
fd
 = 
	`_¸ót
(
«me
, 
PMODE
)Ë< 0Ë&& 
Êags
 | 
_IOREAD
) {

78 (Ë
	`_˛o£
(
fd
);

79 
fd
 = 
	`_›í
(
«me
, 
rwmode
);

83 i‡(
fd
 < 0) {

84  
i
 = 0; i < 
FOPEN_MAX
; i++) {

85 i‡(
°ªam
 =
__iŸab
[
i
]) {

86 
__iŸab
[
i
] = 0;

90 i‡(
°ªam
 !
°dö
 && såóm !
°dout
 && såóm !
°dîr
)

91 
	`‰ì
((*)
°ªam
);

92  (
FILE
 *)
NULL
;

95 
°ªam
->
_cou¡
 = 0;

96 
°ªam
->
_fd
 = 
fd
;

97 
°ªam
->
_Êags
 = 
Êags
;

98  
°ªam
;

99 
	}
}

	@fs.h

4 
	#_POSIX_SOURCE
 1

	)

5 
	#_MINIX
 1

	)

6 
	#_SYSTEM
 1

	)

9 
	~<möix/c⁄fig.h
>

10 
	~<™si.h
>

11 
	~<sys/ty≥s.h
>

12 
	~<möix/c⁄°.h
>

13 
	~<möix/ty≥.h
>

15 
	~<limôs.h
>

16 
	~<î∫o.h
>

18 
	~<möix/sy¶ib.h
>

20 
	~"c⁄°.h
"

21 
	~"ty≥.h
"

22 
	~"¥Ÿo.h
"

23 
	~"glo.h
"

	@fscanf.c

6 
	~<°dio.h
>

7 
	~<°d¨g.h
>

8 
	~"loc_ö˛.h
"

11 
	$fsˇnf
(
FILE
 *
°ªam
, c⁄° *
f‹m©
, ...)

13 
va_li°
 
≠
;

14 
ªtvÆ
;

16 
	`va_°¨t
(
≠
, 
f‹m©
);

18 
ªtvÆ
 = 
	`_dosˇn
(
°ªam
, 
f‹m©
, 
≠
);

20 
	`va_íd
(
≠
);

22  
ªtvÆ
;

23 
	}
}

	@fseek.c

6 
	~<°dio.h
>

8 #if (
SEEK_CUR
 !1Ë|| (
SEEK_END
 !2Ë|| (
SEEK_SET
 != 0)

9 #îr‹ 
SEEK_
* 
vÆues
 
¨e
 
wr⁄g


12 
	~"loc_ö˛.h
"

14 
	~<sys/ty≥s.h
>

16 
off_t
 
_l£ek
(
fûdes
, off_à
off£t
, 
whí˚
);

19 
	$f£ek
(
FILE
 *
°ªam
, 
off£t
, 
whí˚
)

21 
adju°
 = 0;

22 
pos
;

24 
°ªam
->
_Êags
 &~(
_IOEOF
 | 
_IOERR
);

27 i‡(
	`io_ã°Êag
(
°ªam
, 
_IOREADING
)) {

28 i‡(
whí˚
 =
SEEK_CUR


29 && 
°ªam
->
_buf


30 && !
	`io_ã°Êag
(
°ªam
,
_IONBF
))

31 
adju°
 = 
°ªam
->
_cou¡
;

32 
°ªam
->
_cou¡
 = 0;

33 } i‡(
	`io_ã°Êag
(
°ªam
,
_IOWRITING
)) {

34 
	`fÊush
(
°ªam
);

38 
pos
 = 
	`_l£ek
(
	`fûío
(
°ªam
), 
off£t
 - 
adju°
, 
whí˚
);

39 i‡(
	`io_ã°Êag
(
°ªam
, 
_IOREAD
Ë&& io_ã°Êag(°ªam, 
_IOWRITE
))

40 
°ªam
->
_Êags
 &~(
_IOREADING
 | 
_IOWRITING
);

42 
°ªam
->
_±r
 = såóm->
_buf
;

43  ((
pos
 == -1) ? -1 : 0);

44 
	}
}

	@fsetpos.c

6 
	~<°dio.h
>

9 
	$f£ços
(
FILE
 *
°ªam
, 
Âos_t
 *
pos
)

11  
	`f£ek
(
°ªam
, *
pos
, 
SEEK_SET
);

12 
	}
}

	@fslib.c

3 
	~<möix/c⁄fig.h
>

4 
	~<™si.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<möix/c⁄°.h
>

7 
	~<möix/ty≥.h
>

8 
	~"fs/c⁄°.h
"

9 
	~"fs/ty≥.h
"

10 
	~"fs/öode.h
"

11 
	~<möix/f¶ib.h
>

18 
	#BITMAPSHIFT
 13

	)

34 
PUBLIC
 
	$bôm≠size
(
ƒ_bôs
)

35 
bô_t
 
ƒ_bôs
;

37 
ƒ_blocks
;

39 
ƒ_blocks
 = (Ë(
ƒ_bôs
 >> 
BITMAPSHIFT
);

40 i‡(((
bô_t
Ë
ƒ_blocks
 << 
BITMAPSHIFT
Ë< 
ƒ_bôs
) ++nr_blocks;

41 (
ƒ_blocks
);

42 
	}
}

48 
PUBLIC
 
	$c⁄v2
(
n‹m
, 
w
)

49 
n‹m
;

50 
w
;

54 i‡(
n‹m
Ë–(Ë
w
 & 0xFFFF);

55 –((
w
&
BYTE
) << 8) | ( (w>>8) & BYTE));

56 
	}
}

62 
PUBLIC
 
	$c⁄v4
(
n‹m
, 
x
)

63 
n‹m
;

64 
x
;

68 
lo
, 
hi
;

69 
l
;

71 i‡(
n‹m
Ë(
x
);

72 
lo
 = 
	`c⁄v2
(
FALSE
, (Ë
x
 & 0xFFFF);

73 
hi
 = 
	`c⁄v2
(
FALSE
, (Ë(
x
>>16) & 0xFFFF);

74 
l
 = ( (Ë
lo
 <<16Ë| 
hi
;

75 (
l
);

76 
	}
}

82 
PUBLIC
 
	$c⁄v_öode
(
rù
, 
dù
, 
dù2
, 
rw_Êag
, 
magic
)

83 
öode
 *
rù
;

84 
d1_öode
 *
dù
;

85 
d2_öode
 *
dù2
;

86 
rw_Êag
;

87 
magic
;

92 
magic
) {

93 
SUPER_MAGIC
: 
	`ﬁd_ic›y
(
rù
, 
dù
, 
rw_Êag
, 
TRUE
); ;

94 
SUPER_REV
: 
	`ﬁd_ic›y
(
rù
, 
dù
, 
rw_Êag
, 
FALSE
); ;

95 
SUPER_V2
: 
	`√w_ic›y
(
rù
, 
dù2
, 
rw_Êag
, 
TRUE
); ;

96 
SUPER_V2_REV
: 
	`√w_ic›y
(
rù
, 
dù2
, 
rw_Êag
, 
FALSE
); ;

98 
	}
}

104 
PUBLIC
 
	$ﬁd_ic›y
(
rù
, 
dù
, 
dúe˘i⁄
, 
n‹m
)

105 
öode
 *
rù
;

106 
d1_öode
 *
dù
;

107 
dúe˘i⁄
;

108 
n‹m
;

118 
i
;

120 i‡(
dúe˘i⁄
 =
READING
) {

122 
rù
->
i_mode
 = 
	`c⁄v2
(
n‹m
, 
dù
->
d1_mode
);

123 
rù
->
i_uid
 = 
	`c⁄v2
(
n‹m
,
dù
->
d1_uid
 );

124 
rù
->
i_size
 = 
	`c⁄v4
(
n‹m
,
dù
->
d1_size
);

125 
rù
->
i_mtime
 = 
	`c⁄v4
(
n‹m
,
dù
->
d1_mtime
);

126 
rù
->
i_©ime
 = 0;

127 
rù
->
i_˘ime
 = 0;

128 
rù
->
i_∆öks
 = (
∆ök_t
Ë
dù
->
d1_∆öks
;

129 
rù
->
i_gid
 = (
gid_t
Ë
dù
->
d1_gid
;

130 
rù
->
i_ndz⁄es
 = 
V1_NR_DZONES
;

131 
rù
->
i_nödús
 = 
V1_INDIRECTS
;

132 
i
 = 0; i < 
V1_NR_TZONES
; i++)

133 
rù
->
i_z⁄e
[
i
] = 
	`c⁄v2
(
n‹m
, (Ë
dù
->
d1_z⁄e
[i]);

136 
dù
->
d1_mode
 = 
	`c⁄v2
(
n‹m
,
rù
->
i_mode
);

137 
dù
->
d1_uid
 = 
	`c⁄v2
(
n‹m
,
rù
->
i_uid
 );

138 
dù
->
d1_size
 = 
	`c⁄v4
(
n‹m
,
rù
->
i_size
);

139 
dù
->
d1_mtime
 = 
	`c⁄v4
(
n‹m
,
rù
->
i_mtime
);

140 
dù
->
d1_∆öks
 = (
∆ök_t
Ë
rù
->
i_∆öks
;

141 
dù
->
d1_gid
 = (
gid_t
Ë
rù
->
i_gid
;

142 
i
 = 0; i < 
V1_NR_TZONES
; i++)

143 
dù
->
d1_z⁄e
[
i
] = 
	`c⁄v2
(
n‹m
, (Ë
rù
->
i_z⁄e
[i]);

145 
	}
}

151 
PUBLIC
 
	$√w_ic›y
(
rù
, 
dù
, 
dúe˘i⁄
, 
n‹m
)

152 
öode
 *
rù
;

153 
d2_öode
 *
dù
;

154 
dúe˘i⁄
;

155 
n‹m
;

160 
i
;

162 i‡(
dúe˘i⁄
 =
READING
) {

164 
rù
->
i_mode
 = 
	`c⁄v2
(
n‹m
,
dù
->
d2_mode
);

165 
rù
->
i_uid
 = 
	`c⁄v2
(
n‹m
,
dù
->
d2_uid
 );

166 
rù
->
i_∆öks
 = 
	`c⁄v2
(
n‹m
,(Ë
dù
->
d2_∆öks
);

167 
rù
->
i_gid
 = 
	`c⁄v2
(
n‹m
,(Ë
dù
->
d2_gid
 );

168 
rù
->
i_size
 = 
	`c⁄v4
(
n‹m
,
dù
->
d2_size
);

169 
rù
->
i_©ime
 = 
	`c⁄v4
(
n‹m
,
dù
->
d2_©ime
);

170 
rù
->
i_˘ime
 = 
	`c⁄v4
(
n‹m
,
dù
->
d2_˘ime
);

171 
rù
->
i_mtime
 = 
	`c⁄v4
(
n‹m
,
dù
->
d2_mtime
);

172 
rù
->
i_ndz⁄es
 = 
V2_NR_DZONES
;

173 
rù
->
i_nödús
 = 
V2_INDIRECTS
;

174 
i
 = 0; i < 
V2_NR_TZONES
; i++)

175 
rù
->
i_z⁄e
[
i
] = 
	`c⁄v4
(
n‹m
, (Ë
dù
->
d2_z⁄e
[i]);

178 
dù
->
d2_mode
 = 
	`c⁄v2
(
n‹m
,
rù
->
i_mode
);

179 
dù
->
d2_uid
 = 
	`c⁄v2
(
n‹m
,
rù
->
i_uid
 );

180 
dù
->
d2_∆öks
 = 
	`c⁄v2
(
n‹m
,
rù
->
i_∆öks
);

181 
dù
->
d2_gid
 = 
	`c⁄v2
(
n‹m
,
rù
->
i_gid
 );

182 
dù
->
d2_size
 = 
	`c⁄v4
(
n‹m
,
rù
->
i_size
);

183 
dù
->
d2_©ime
 = 
	`c⁄v4
(
n‹m
,
rù
->
i_©ime
);

184 
dù
->
d2_˘ime
 = 
	`c⁄v4
(
n‹m
,
rù
->
i_˘ime
);

185 
dù
->
d2_mtime
 = 
	`c⁄v4
(
n‹m
,
rù
->
i_mtime
);

186 
i
 = 0; i < 
V2_NR_TZONES
; i++)

187 
dù
->
d2_z⁄e
[
i
] = 
	`c⁄v4
(
n‹m
, (Ë
rù
->
i_z⁄e
[i]);

189 
	}
}

	@fsversion.c

11 
	~<sys/ty≥s.h
>

12 
	~<möix/c⁄fig.h
>

13 
	~<möix/c⁄°.h
>

14 
	~<möix/mölib.h
>

15 
	~<möix/ty≥.h
>

16 
	~<f˙é.h
>

17 
	~<uni°d.h
>

18 
	~<°dio.h
>

20 
	~"../../fs/c⁄°.h
"

21 
	~"../../fs/ty≥.h
"

22 
	~"../../fs/su≥r.h
"

24 
su≥r_block
 
	gsu≥r
, *
	g•
;

26 
	$fsvîsi⁄
(
dev
, 
¥og
)

27 *
dev
, *
¥og
;

29 
fd
;

31 i‡((
fd
 = 
	`›í
(
dev
, 
O_RDONLY
)) < 0) {

32 
	`°d_îr
(
¥og
);

33 
	`°d_îr
(" cannot open ");

34 
	`≥º‹
(
dev
);

38 
	`l£ek
(
fd
, (
off_t
Ë
BLOCK_SIZE
, 
SEEK_SET
);

39 i‡(
	`ªad
(
fd
, (*Ë&
su≥r
, (Ë
SUPER_SIZE
) != SUPER_SIZE) {

40 
	`°d_îr
(
¥og
);

41 
	`°d_îr
(" cannotÑead super block on ");

42 
	`≥º‹
(
dev
);

43 
	`˛o£
(
fd
);

46 
	`˛o£
(
fd
);

47 
•
 = &
su≥r
;

48 i‡(
•
->
s_magic
 =
SUPER_MAGIC
) (1);

49 i‡(
•
->
s_magic
 =
SUPER_V2
) (2);

51 
	}
}

	@ftell.c

6 
	~<°dio.h
>

8 #if (
SEEK_CUR
 !1Ë|| (
SEEK_SET
 !0Ë|| (
SEEK_END
 != 2)

9 #îr‹ 
SEEK_
* 
vÆues
 
¨e
 
wr⁄g


12 
	~"loc_ö˛.h
"

14 
	~<sys/ty≥s.h
>

16 
off_t
 
_l£ek
(
fûdes
, off_à
off£t
, 
whí˚
);

18 
	$·ñl
(
FILE
 *
°ªam
)

20 
ªsu…
;

21 
adju°
 = 0;

23 i‡(
	`io_ã°Êag
(
°ªam
,
_IOREADING
))

24 
adju°
 = -
°ªam
->
_cou¡
;

25 i‡(
	`io_ã°Êag
(
°ªam
,
_IOWRITING
)

26 && 
°ªam
->
_buf


27 && !
	`io_ã°Êag
(
°ªam
,
_IONBF
))

28 
adju°
 = 
°ªam
->
_±r
 - såóm->
_buf
;

29 
adju°
 = 0;

31 
ªsu…
 = 
	`_l£ek
(
	`fûío
(
°ªam
), (
off_t
)0, 
SEEK_CUR
);

33 i‡–
ªsu…
 == -1 )

34  
ªsu…
;

36 
ªsu…
 +(Ë
adju°
;

37  
ªsu…
;

38 
	}
}

	@fwrite.c

6 
	~<°dio.h
>

8 
size_t


9 
	$fwrôe
(c⁄° *
±r
, 
size_t
 
size
, size_à
nmemb
,

10 
FILE
 *
°ªam
)

12 c⁄° *
˝
 = 
±r
;

13 
size_t
 
s
;

14 
size_t
 
nd⁄e
 = 0;

16 i‡(
size
)

17  
nd⁄e
 < 
nmemb
 ) {

18 
s
 = 
size
;

20 i‡(
	`putc
(()*
˝
, 
°ªam
)

21 =
EOF
)

22  
nd⁄e
;

23 
˝
++;

25 --
s
);

26 
nd⁄e
++;

28  
nd⁄e
;

29 
	}
}

	@genmap.c

3 
	~<sys/ty≥s.h
>

4 
	~<möix/keym≠.h
>

5 
	~<f˙é.h
>

6 
	~<uni°d.h
>

7 
	~<°dlib.h
>

8 
	~<°rög.h
>

9 
	~<î∫o.h
>

11 #ö˛udê
KEYSRC


13 
u8_t
 
	gcom¥m≠
[4 + 
NR_SCAN_CODES
 * 
MAP_COLS
 * 9/8 * 2 + 1];

15 
	$ãŒ
(c⁄° *
s
)

17 
	`wrôe
(2, 
s
, 
	`°æí
(s));

18 
	}
}

20 
	$maö
()

22 
u8_t
 *
cm
, *
fb
;

23 
u16_t
 *
km
;

24 
n
;

27 
	`mem˝y
(
com¥m≠
, 
KEY_MAGIC
, 4);

28 
cm
 = 
com¥m≠
 + 4;

29 
n
 = 8;

30 
km
 = 
keym≠
; km < keym≠ + 
NR_SCAN_CODES
 * 
MAP_COLS
; km++) {

31 i‡(
n
 == 8) {

33 
fb
 = 
cm
;

34 *
cm
++ = 0;

35 
n
= 0;

37 *
cm
++ = (*
km
 & 0x00FF);

38 i‡(*
km
 & 0xFF00) {

39 *
cm
++ = (*
km
 >> 8);

40 *
fb
 |(1 << 
n
);

42 
n
++;

46 
cm
 > 
com¥m≠
 && cm[-1] == 0) cm--;

49 i‡(
	`wrôe
(1, 
com¥m≠
, 
cm
 - comprmap) < 0) {

50 
îr
 = 
î∫o
;

52 
	`ãŒ
("genmap: ");

53 
	`ãŒ
(
	`°ªº‹
(
îr
));

54 
	`ãŒ
("\n");

55 
	`exô
(1);

57 
	`exô
(0);

58 
	}
}

	@get_put.h

8 
	~<byã_‹dî.h
>

10 #i‡
CHAR_UNSIGNED


11 
	#Xch¨
(
ch
Ë(ch)

	)

13 
	#Xch¨
(
ch
Ë((chË& 0377)

	)

16 
	#BYTES_REVERSED
 (
MSB_AT_LOW_ADDRESS
 !
FL_MSB_AT_LOW_ADDRESS
)

	)

17 
	#WORDS_REVERSED
 (
MSW_AT_LOW_ADDRESS
 !
FL_MSW_AT_LOW_ADDRESS
)

	)

18 
	#LONGS_REVERSED
 (
FL_MSL_AT_LOW_ADDRESS
)

	)

20 #i‡
BYTES_REVERSED


21 
	#ugë2
(
c
Ë(
	`Xch¨
((c)[1]Ë| ((ËXch¨((c)[0]Ë<< 8))

	)

22 
	#Xput2
(
i
, 
c
Ë(((c)[1] = (i)), ((c)[0] = (iË>> 8))

	)

23 
	#put2
(
i
, 
c
Ë{ 
j
 = (i); 
	`Xput2
(j, c); }

	)

25 
	#ugë2
(
c
Ë(* ((*Ë(c)))

	)

26 
	#Xput2
(
i
, 
c
Ë(* ((*Ë(c)Ë(i))

	)

27 
	#put2
(
i
, 
c
Ë
	`Xput2
(i, c)

	)

30 
	#gë2
(
c
Ë((Ë
	`ugë2
(c))

	)

32 #i‡
WORDS_REVERSED
 || 
BYTES_REVERSED


33 
	#gë4
(
c
Ë(
	`ugë2
((c)+2Ë| ((Ëugë2(cË<< 16))

	)

34 
	#put4
(
l
, 
c
Ë{ 
x
=÷); \

	)

35 
Xput2
(()
x
,(
c
)+2); \

36 
Xput2
(()(
x
>>16),(
c
)); \

39 
	#gë4
(
c
Ë(* ((*Ë(c)))

	)

40 
	#put4
(
l
, 
c
Ë(* ((*Ë(c)Ë÷))

	)

	@getc.c

6 
	~<°dio.h
>

9 (
	ggëc
)(
FILE
 *
	g°ªam
)

11  
gëc
(
°ªam
);

	@getchar.c

6 
	~<°dio.h
>

9 (
	ggëch¨
)()

11  
gëch¨
();

	@getdomain.c

4 
	#nû
 0

	)

5 
	~<sys/ty≥s.h
>

6 
	~<sys/ut¢ame.h
>

7 
	~<uni°d.h
>

8 
	~<°rög.h
>

10 
	$gëdomaö«me
(*
domaö
, 
size_t
 
size
)

12 
nodíame
[256];

13 *
dŸ
;

15 i‡(
	`gëho°«me
(
nodíame
, (nodename)) < 0)

17 
nodíame
[(nodename)-1]= 0;

18 i‡((
dŸ

	`°rchr
(
nodíame
, '.')Ë=
nû
) dot= ".";

20 
	`°∫˝y
(
domaö
, 
dŸ
+1, 
size
);

21 i‡(
size
 > 0Ë
domaö
[size-1]= 0;

23 
	}
}

	@getenv.c

7 
	~<°dlib.h
>

9 c⁄° **
_≥nvp
;

12 
	$gëív
(c⁄° *
«me
)

14 c⁄° **
v
 = 
_≥nvp
;

15 c⁄° *
p
, *
q
;

17 i‡(
v
 =
NULL
 || 
«me
 == NULL)

18  (*)
NULL
;

19 (
p
 = *
v
++Ë!
NULL
) {

20 
q
 = 
«me
;

21 *
q
 && (*q =*
p
++))

22 
q
++;

23 i‡(*
q
 || (*
p
 != '='))

25  (*)
p
 + 1;

27  (*)
NULL
;

28 
	}
}

	@getgrent.c

6 
	#nû
 0

	)

7 
	#›í
 
_›í


	)

8 
	#f˙é
 
_f˙é


	)

9 
	#ªad
 
_ªad


	)

10 
	#˛o£
 
_˛o£


	)

11 
	~<sys/ty≥s.h
>

12 
	~<gΩ.h
>

13 
	~<°rög.h
>

14 
	~<°dlib.h
>

15 
	~<uni°d.h
>

16 
	~<f˙é.h
>

18 
	#¨øysize
(
a
Ë(◊Ë/ (◊)[0]))

	)

19 
	#¨øylimô
(
a
Ë(◊Ë+ 
	`¨øysize
◊))

	)

21 
	gGROUP
[]= "/etc/group";

22 c⁄° *
	ggrfûe
;

24 
	gbuf
[1024];

25 
	ggæöe
[512];

26 
group
 
	gíåy
;

27 *
	gmembîs
[64];

28 
	ggrfd
= -1;

29 *
	gbuÂå
;

30 
ssize_t
 
	gbuÊí
= 0;

31 *
	glöïå
;

33 
	$ídgª¡
()

36 i‡(
grfd
 >= 0) {

37 (Ë
	`˛o£
(
grfd
);

38 
grfd
= -1;

39 
buÊí
= 0;

41 
	}
}

43 
	$£tgª¡
()

46 i‡(
grfd
 >0Ë
	`ídgª¡
();

48 i‡(
grfûe
 =
nû
Ëgrfûe
GROUP
;

50 i‡((
grfd

	`›í
(
grfûe
, 
O_RDONLY
)) < 0)  -1;

51 (Ë
	`f˙é
(
grfd
, 
F_SETFD
, f˙é(grfd, 
F_GETFD
Ë| 
FD_CLOEXEC
);

53 
	}
}

55 
	$£tgrfûe
(c⁄° *
fûe
)

58 
	`ídgª¡
();

59 
grfûe

fûe
;

60 
	}
}

62 
	$gëlöe
()

65 
löïå

gæöe
;

68 i‡(
buÊí
 == 0) {

69 i‡((
buÊí

	`ªad
(
grfd
, 
buf
, (buf))) <= 0)

71 
buÂå

buf
;

74 i‡(
löïå
 =
	`¨øylimô
(
gæöe
))  0;

75 
buÊí
--;

76 } (*
löïå
++ = *
buÂå
++) != '\n');

78 
löïå

gæöe
;

80 
	}
}

82 *
	$sˇn_pun˘
(
pun˘
)

85 *
fõld

löïå
;

86 *
œ°
;

89 
œ°

löïå
;

90 i‡(*
löïå
 =0Ë 
nû
;

91 i‡(*
löïå
 == '\n') ;

92 i‡(*
löïå
++ =
pun˘
) ;

93 i‡(
löïå
[-1] =':'Ë 
nû
;

95 *
œ°
= 0;

96  
fõld
;

97 
	}
}

99 
group
 *
	$gëgª¡
()

102 *
p
;

103 **
mem
;

106 i‡(
grfd
 < 0 && 
	`£tgª¡
(Ë< 0Ë 
nû
;

110 i‡(!
	`gëlöe
()Ë 
nû
;

112 i‡((
íåy
.
gr_«me

	`sˇn_pun˘
(':')Ë=
nû
) ;

113 i‡((
íåy
.
gr_∑sswd

	`sˇn_pun˘
(':')Ë=
nû
) ;

114 i‡((
p

	`sˇn_pun˘
(':')Ë=
nû
) ;

115 
íåy
.
gr_gid

	`°πﬁ
(
p
, 
nû
, 0);

117 
íåy
.
gr_mem

mem

membîs
;

118 i‡(*
löïå
 != '\n') {

120 i‡((*
mem

	`sˇn_pun˘
(',')Ë=
nû
Ë
agaö
;

121 i‡(
mem
 < 
	`¨øylimô
(
membîs
) - 1) mem++;

122 } *
löïå
 != 0);

124 *
mem

nû
;

125  &
íåy
;

126 
agaö
:;

128 
	}
}

130 
group
 *
	$gëgrgid
(
Gid_t
 
gid
)

133 
group
 *
gr
;

135 
	`ídgª¡
();

136 (
gr

	`gëgª¡
()Ë!
nû
 && gr->
gr_gid
 !
gid
) {}

137 
	`ídgª¡
();

138  
gr
;

139 
	}
}

141 
group
 *
	$gëg∫am
(c⁄° *
«me
)

144 
group
 *
gr
;

146 
	`ídgª¡
();

147 (
gr

	`gëgª¡
()Ë!
nû
 && 
	`°rcmp
(gr->
gr_«me
, 
«me
) != 0) {}

148 
	`ídgª¡
();

149  
gr
;

150 
	}
}

	@gethnmadr.c

20 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

21 
	gsccsid
[] = "@(#)gethostnamadr.c 6.41 (Berkeley) 6/1/90";

24 #ifde‡
_MINIX


25 
	~<sys/ty≥s.h
>

26 
	~<˘y≥.h
>

27 
	~<î∫o.h
>

28 
	~<°dio.h
>

29 
	~<°rög.h
>

31 
	~<√t/ht⁄.h
>

32 
	~<√t/gí/«me£r.h
>

33 
	~<√t/gí/√tdb.h
>

34 
	~<√t/gí/ö.h
>

35 
	~<√t/gí/öë.h
>

36 
	~<√t/gí/ªsﬁv.h
>

37 
	~<√t/gí/sockë.h
>

39 
	~<sys/∑øm.h
>

40 
	~<sys/sockë.h
>

41 
	~<√töë/ö.h
>

42 
	~<˘y≥.h
>

43 
	~<√tdb.h
>

44 
	~<°dio.h
>

45 
	~<î∫o.h
>

46 
	~<¨∑/öë.h
>

47 
	~<¨∑/«me£r.h
>

48 
	~<ªsﬁv.h
>

51 
	#MAXALIASES
 35

	)

52 
	#MAXADDRS
 35

	)

54 *
	gh_addr_±rs
[
MAXADDRS
 + 1];

56 #ifde‡
_MINIX


57 
	sö_addr


59 
ùaddr_t
 
	ms_addr
;

61 
u32_t
 
	tu_l⁄g
;

62 
u16_t
 
	tu_sh‹t
;

63 
u8_t
 
	tu_ch¨
;

64 
	gquîybuf
;

66 
dn_skù«me
 
_ARGS
(–c⁄° 
u_ch¨
 *
comp_dn
, c⁄° u_ch¨ *
eom
 ));

67 
	#gësh‹t
 
_gësh‹t


	)

68 
ho°ít
 *
gë™swî
 
_ARGS
(–
quîybuf
 *
™swî
, 
™¶í
,

69 
iquîy
 ));

70 
	#bcmp
 
memcmp


	)

71 
	#bc›y
(
s
, 
d
, 
l
Ë
	`mem˝y
(d, s,Ü)

	)

74 
ho°ít
 
	gho°
;

75 *
	gho°_Æü£s
[
MAXALIASES
];

76 
	gho°buf
[
BUFSIZ
+1];

77 
ö_addr
 
	gho°_addr
;

79 #i‚de‡
_MINIX


80 *
°Ωbrk
();

83 #i‡
PACKETSZ
 > 1024

84 
	#MAXPACKET
 
PACKETSZ


	)

86 
	#MAXPACKET
 1024

	)

89 
	uquîybuf


91 
dns_hdr_t
 
	mhdr
;

92 
u_ch¨
 
	mbuf
[
MAXPACKET
];

93 } 
	tquîybuf_t
;

95 
	uÆign
 {

96 
	mÆ
;

97 
	mac
;

98 } 
	tÆign_t
;

100 
ho°ít
 *

101 
	$gë™swî
(
™swî
, 
™¶í
, 
iquîy
)

102 
quîybuf_t
 *
™swî
;

103 
™¶í
;

104 
iquîy
;

106 
dns_hdr_t
 *
hp
;

107 
u_ch¨
 *
˝
;

108 
n
;

109 
u_ch¨
 *
eom
;

110 *
bp
, **
≠
;

111 
ty≥
, 
˛ass
, 
buÊí
, 
™cou¡
, 
qdcou¡
;

112 
havónswî
, 
gë˛ass
 = 
C_ANY
;

113 **
h≠
;

115 
eom
 = 
™swî
->
buf
 + 
™¶í
;

119 
hp
 = &
™swî
->
hdr
;

120 
™cou¡
 = 
	`¡ohs
(
hp
->
dh_™cou¡
);

121 
qdcou¡
 = 
	`¡ohs
(
hp
->
dh_qdcou¡
);

122 
bp
 = 
ho°buf
;

123 
buÊí
 = (
ho°buf
);

124 
˝
 = 
™swî
->
buf
 + (
dns_hdr_t
);

125 i‡(
qdcou¡
) {

126 i‡(
iquîy
) {

127 i‡((
n
 = 
	`dn_ex∑nd
((
u_ch¨
 *)
™swî
->
buf
, 
eom
,

128 
˝
, (
u_ch¨
 *)
bp
, 
buÊí
)) < 0) {

129 
h_î∫o
 = 
NO_RECOVERY
;

130  ((
ho°ít
 *Ë
NULL
);

132 
˝
 +
n
 + 
QFIXEDSZ
;

133 
ho°
.
h_«me
 = 
bp
;

134 
n
 = 
	`°æí
(
bp
) + 1;

135 
bp
 +
n
;

136 
buÊí
 -
n
;

138 
˝
 +
	`dn_skù«me
(˝, 
eom
Ë+ 
QFIXEDSZ
;

139 --
qdcou¡
 > 0)

140 
˝
 +
	`dn_skù«me
(˝, 
eom
Ë+ 
QFIXEDSZ
;

141 } i‡(
iquîy
) {

142 i‡(
hp
->
dh_Êag1
 & 
DHF_AA
)

143 
h_î∫o
 = 
HOST_NOT_FOUND
;

145 
h_î∫o
 = 
TRY_AGAIN
;

146  ((
ho°ít
 *Ë
NULL
);

148 
≠
 = 
ho°_Æü£s
;

149 *
≠
 = 
NULL
;

150 
ho°
.
h_Æü£s
 = 
ho°_Æü£s
;

151 
h≠
 = 
h_addr_±rs
;

152 *
h≠
 = 
NULL
;

153 #i‡
BSD
 >43 || 
	`deföed
(
h_addr
)

154 
ho°
.
h_addr_li°
 = 
h_addr_±rs
;

156 
havónswî
 = 0;

157 --
™cou¡
 >0 && 
˝
 < 
eom
) {

158 i‡((
n
 = 
	`dn_ex∑nd
((
u_ch¨
 *)
™swî
->
buf
, 
eom
, 
˝
, (u_ch¨ *)
bp
,

159 
buÊí
)) < 0)

161 
˝
 +
n
;

162 
ty≥
 = 
	`gësh‹t
(
˝
);

163 
˝
 +(
u_sh‹t
);

164 
˛ass
 = 
	`gësh‹t
(
˝
);

165 
˝
 +(
u_sh‹t
Ë+ (
u_l⁄g
);

166 
n
 = 
	`gësh‹t
(
˝
);

167 
˝
 +(
u_sh‹t
);

168 i‡(
ty≥
 =
T_CNAME
) {

169 
˝
 +
n
;

170 i‡(
≠
 >&
ho°_Æü£s
[
MAXALIASES
-1])

172 *
≠
++ = 
bp
;

173 
n
 = 
	`°æí
(
bp
) + 1;

174 
bp
 +
n
;

175 
buÊí
 -
n
;

178 i‡(
iquîy
 && 
ty≥
 =
T_PTR
) {

179 i‡((
n
 = 
	`dn_ex∑nd
((
u8_t
 *)
™swî
->
buf
, 
eom
,

180 
˝
, (
u8_t
 *)
bp
, 
buÊí
)) < 0) {

181 
˝
 +
n
;

184 
˝
 +
n
;

185 
ho°
.
h_«me
 = 
bp
;

186 (&
ho°
);

188 i‡(
iquîy
 || 
ty≥
 !
T_A
) {

189 #ifde‡
DEBUG


190 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

191 
	`¥ötf
("unexpectedánswerÅype %d, size %d\n",

192 
ty≥
, 
n
);

194 
˝
 +
n
;

197 i‡(
havónswî
) {

198 i‡(
n
 !
ho°
.
h_Àngth
) {

199 
˝
 +
n
;

202 i‡(
˛ass
 !
gë˛ass
) {

203 
˝
 +
n
;

207 
ho°
.
h_Àngth
 = 
n
;

208 
gë˛ass
 = 
˛ass
;

209 
ho°
.
h_addπy≥
 = (
˛ass
 =
C_IN
Ë? 
AF_INET
 : 
AF_UNSPEC
;

210 i‡(!
iquîy
) {

211 
ho°
.
h_«me
 = 
bp
;

212 
bp
 +
	`°æí
(bp) + 1;

216 
bp
 +(
size_t
)((
Æign_t
) -

217 ((
u_l⁄g
)
bp
 % (
Æign_t
)));

219 i‡(
bp
 + 
n
 >&
ho°buf
[(hostbuf)]) {

220 #ifde‡
DEBUG


221 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

222 
	`¥ötf
("sizê(%dËtoÿbig\n", 
n
);

226 
	`bc›y
(
˝
, *
h≠
++ = 
bp
, 
n
);

227 
bp
 +=
n
;

228 
˝
 +
n
;

229 
havónswî
++;

231 i‡(
havónswî
) {

232 *
≠
 = 
NULL
;

233 #i‡
BSD
 >43 || 
	`deföed
(
h_addr
)

234 *
h≠
 = 
NULL
;

236 
ho°
.
h_addr
 = 
h_addr_±rs
[0];

238  (&
ho°
);

240 
h_î∫o
 = 
TRY_AGAIN
;

241  ((
ho°ít
 *Ë
NULL
);

243 
	}
}

245 
ho°ít
 *

246 
	$gëho°by«me
(
«me
)

247 *
«me
;

249 
quîybuf_t
 
buf
;

250 *
˝
;

251 
n
;

257 i‡(
	`isdigô
(
«me
[0]))

258 
˝
 = 
«me
;; ++cp) {

259 i‡(!*
˝
) {

260 i‡(*--
˝
 == '.')

269 i‡((
ho°_addr
.
s_addr
 = 
	`öë_addr
(
«me
)) == -1) {

270 
h_î∫o
 = 
HOST_NOT_FOUND
;

271 ((
ho°ít
 *Ë
NULL
);

273 
ho°
.
h_«me
 = 
«me
;

274 
ho°
.
h_Æü£s
 = 
ho°_Æü£s
;

275 
ho°_Æü£s
[0] = 
NULL
;

276 
ho°
.
h_addπy≥
 = 
AF_INET
;

277 
ho°
.
h_Àngth
 = (
u_l⁄g
);

278 
h_addr_±rs
[0] = (*)&
ho°_addr
;

279 
h_addr_±rs
[1] = (*)0;

280 #i‡
BSD
 >43 || 
	`deföed
(
h_addr
)

281 
ho°
.
h_addr_li°
 = 
h_addr_±rs
;

283 
ho°
.
h_addr
 = 
h_addr_±rs
[0];

285  (&
ho°
);

287 i‡(!
	`isdigô
(*
˝
) && *cp != '.')

291 i‡((
n
 = 
	`ªs_£¨ch
(
«me
, 
C_IN
, 
T_A
, 
buf
.buf, (buf))) < 0) {

292 #ifde‡
DEBUG


293 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

294 
	`¥ötf
("res_search failed\n");

296  ((
ho°ít
 *Ë
NULL
);

298  (
	`gë™swî
(&
buf
, 
n
, 0));

299 
	}
}

301 
ho°ít
 *

302 
	$gëho°byaddr
(
addr
, 
Àn
, 
ty≥
)

303 c⁄° *
addr
;

304 
Àn
, 
ty≥
;

306 
n
;

307 
quîybuf_t
 
buf
;

308 
ho°ít
 *
hp
;

309 
qbuf
[
MAXDNAME
];

311 i‡(
ty≥
 !
AF_INET
)

312  ((
ho°ít
 *Ë
NULL
);

313 ()
	`•rötf
(
qbuf
, "%u.%u.%u.%u.in-addr.arpa",

314 (()
addr
[3] & 0xff),

315 (()
addr
[2] & 0xff),

316 (()
addr
[1] & 0xff),

317 (()
addr
[0] & 0xff));

318 
n
 = 
	`ªs_quîy
(
qbuf
, 
C_IN
, 
T_PTR
, (
u8_t
 *)&
buf
, (buf));

319 i‡(
n
 < 0) {

320 #ifde‡
DEBUG


321 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

322 
	`¥ötf
("res_query failed\n");

324  ((
ho°ít
 *Ë
NULL
);

326 
hp
 = 
	`gë™swî
(&
buf
, 
n
, 1);

327 i‡(
hp
 =
NULL
)

328  ((
ho°ít
 *Ë
NULL
);

329 
hp
->
h_addπy≥
 = 
ty≥
;

330 
hp
->
h_Àngth
 = 
Àn
;

331 
h_addr_±rs
[0] = (*)&
ho°_addr
;

332 
h_addr_±rs
[1] = (*)0;

333 
ho°_addr
 = *(
ö_addr
 *)
addr
;

334 #i‡
BSD
 < 43 && !
	`deföed
(
h_addr
)

335 
hp
->
h_addr
 = 
h_addr_±rs
[0];

337 (
hp
);

338 
	}
}

	@gethostent.c

20 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

21 
	gsccsid
[] = "@(#)gethostnamadr.c 6.41 (Berkeley) 6/1/90";

27 
	#£tho°ít
 
_£tho°ít


	)

28 
	#ídho°ít
 
_ídho°ít


	)

29 
	#gëho°ít
 
_gëho°ít


	)

30 
	#gëho°by«me
 
_gëho°by«me


	)

31 
	#gëho°byaddr
 
_gëho°byaddr


	)

33 #ifde‡
_MINIX


34 
	~<sys/ty≥s.h
>

35 
	~<˘y≥.h
>

36 
	~<î∫o.h
>

37 
	~<°dio.h
>

38 
	~<°rög.h
>

40 
	~<√t/ht⁄.h
>

41 
	~<√t/gí/«me£r.h
>

42 
	~<√t/gí/√tdb.h
>

43 
	~<√t/gí/ö.h
>

44 
	~<√t/gí/öë.h
>

45 
	~<√t/gí/ªsﬁv.h
>

46 
	~<√t/gí/sockë.h
>

48 
	~<sys/∑øm.h
>

49 
	~<sys/sockë.h
>

50 
	~<√töë/ö.h
>

51 
	~<˘y≥.h
>

52 
	~<√tdb.h
>

53 
	~<°dio.h
>

54 
	~<î∫o.h
>

55 
	~<¨∑/öë.h
>

56 
	~<¨∑/«me£r.h
>

57 
	~<ªsﬁv.h
>

60 
	#MAXALIASES
 35

	)

61 
	#MAXADDRS
 35

	)

63 #ifde‡
_MINIX


64 
u32_t
 
	tu_l⁄g
;

65 
u16_t
 
	tu_sh‹t
;

66 
u8_t
 
	tu_ch¨
;

68 
	#bcmp
 
memcmp


	)

71 
ho°ít
 
	gho°
;

72 *
	gho°_Æü£s
[
MAXALIASES
];

73 
	gho°buf
[
BUFSIZ
+1];

74 
FILE
 *
	gho°f
 = 
NULL
;

75 
u_l⁄g
 
	gho°addr
[(
MAXADDRS
+(u_long)-1)/(u_long)];

76 *
	gho°_addrs
[2];

77 
	g°ay›í
 = 0;

79 #i‚de‡
_MINIX


80 *
°Ωbrk
();

84 
	$£tho°ít
(
f
)

85 
f
;

87 i‡(
ho°f
 =
NULL
)

88 
ho°f
 = 
	`f›í
(
_PATH_HOSTS
, "r" );

90 
	`ªwöd
(
ho°f
);

91 
°ay›í
 |
f
;

92 
	}
}

95 
	$ídho°ít
()

97 i‡(
ho°f
 && !
°ay›í
) {

98 (Ë
	`f˛o£
(
ho°f
);

99 
ho°f
 = 
NULL
;

101 
	}
}

103 
ho°ít
 *

104 
	$gëho°ít
()

106 *
p
;

107 *
˝
, **
q
;

109 i‡(
ho°f
 =
NULL
 && (ho°‡
	`f›í
(
_PATH_HOSTS
, "r" )) == NULL)

110  (
NULL
);

111 
agaö
:

112 i‡((
p
 = 
	`fgës
(
ho°buf
, 
BUFSIZ
, 
ho°f
)Ë=
NULL
)

113  (
NULL
);

114 i‡(*
p
 == '#')

115 
agaö
;

116 
˝
 = 
	`°Ωbrk
(
p
, "#\n");

117 i‡(
˝
 =
NULL
)

118 
agaö
;

119 *
˝
 = '\0';

120 
˝
 = 
	`°Ωbrk
(
p
, " \t");

121 i‡(
˝
 =
NULL
)

122 
agaö
;

123 *
˝
++ = '\0';

125 #i‡
BSD
 >43 || 
	`deföed
(
h_addr
)

126 
ho°
.
h_addr_li°
 = 
ho°_addrs
;

128 
ho°
.
h_addr
 = (*Ë
ho°addr
;

129 *((
u_l⁄g
 *)
ho°
.
h_addr
Ë
	`öë_addr
(
p
);

130 
ho°
.
h_Àngth
 =  (
u_l⁄g
);

131 
ho°
.
h_addπy≥
 = 
AF_INET
;

132 *
˝
 == ' ' || *cp == '\t')

133 
˝
++;

134 
ho°
.
h_«me
 = 
˝
;

135 
q
 = 
ho°
.
h_Æü£s
 = 
ho°_Æü£s
;

136 
˝
 = 
	`°Ωbrk
(cp, " \t");

137 i‡(
˝
 !
NULL
)

138 *
˝
++ = '\0';

139 
˝
 && *cp) {

140 i‡(*
˝
 == ' ' || *cp == '\t') {

141 
˝
++;

144 i‡(
q
 < &
ho°_Æü£s
[
MAXALIASES
 - 1])

145 *
q
++ = 
˝
;

146 
˝
 = 
	`°Ωbrk
(cp, " \t");

147 i‡(
˝
 !
NULL
)

148 *
˝
++ = '\0';

150 *
q
 = 
NULL
;

151  (&
ho°
);

152 
	}
}

154 
ho°ít
 *

155 
	$gëho°by«me
(
«me
)

156 *
«me
;

158 
ho°ít
 *
p
;

159 **
˝
;

161 
	`£tho°ít
(0);

162 
p
 = 
	`gëho°ít
()) {

163 i‡(
	`°rˇ£cmp
(
p
->
h_«me
, 
«me
) == 0)

165 
˝
 = 
p
->
h_Æü£s
; *cp != 0; cp++)

166 i‡(
	`°rˇ£cmp
(*
˝
, 
«me
) == 0)

167 
found
;

169 
found
:

170 
	`ídho°ít
();

171  (
p
);

172 
	}
}

174 
ho°ít
 *

175 
	$gëho°byaddr
(
addr
, 
Àn
, 
ty≥
)

176 c⁄° *
addr
;

177 
Àn
, 
ty≥
;

179 
ho°ít
 *
p
;

181 
	`£tho°ít
(0);

182 
p
 = 
	`gëho°ít
())

183 i‡(
p
->
h_addπy≥
 =
ty≥
 && !
	`bcmp
’->
h_addr
, 
addr
, 
Àn
))

185 
	`ídho°ít
();

186  (
p
);

187 
	}
}

	@gethostname.c

3 
	~<sys/ty≥s.h
>

4 
	~<f˙é.h
>

5 
	~<°dlib.h
>

6 
	~<°rög.h
>

7 
	~<uni°d.h
>

8 
	~<√t/gí/√tdb.h
>

10 
	#HOSTNAME_FILE
 "/ëc/ho°«me.fûe"

	)

12 
	$gëho°«me
(*
buf
, 
size_t
 
Àn
)

14 
fd
;

15 
r
;

16 *
∆
;

18 i‡((
fd

	`›í
(
HOSTNAME_FILE
, 
O_RDONLY
)) < 0)  -1;

20 
r

	`ªad
(
fd
, 
buf
, 
Àn
);

21 
	`˛o£
(
fd
);

22 i‡(
r
 == -1)  -1;

24 
buf
[
Àn
-1]= '\0';

25 i‡((
∆

	`°rchr
(
buf
, '\n')Ë!
NULL
) *nl= '\0';

27 
	}
}

	@getlogin.c

6 
	~<lib.h
>

7 
	~<pwd.h
>

8 
	~<uni°d.h
>

9 
	~<°rög.h
>

10 
	~<°dio.h
>

12 #i‚de‡ 
L_cu£rid


13 
	#L_cu£rid
 9

	)

16 *
	$gëlogö
()

18 
PRIVATE
 
u£rid
[
L_cu£rid
];

19 
∑sswd
 *
pw_íåy
;

21 
pw_íåy
 = 
	`gëpwuid
(
	`gëuid
());

23 i‡(
pw_íåy
 =(
∑sswd
 *)
NULL
) ((*)NULL);

25 
	`°r˝y
(
u£rid
, 
pw_íåy
->
pw_«me
);

27 (
u£rid
);

28 
	}
}

	@getopt.c

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

8 
	~<°dio.h
>

10 
	#ERR
(
s
, 
c
Ëif(
›ãº
){\

	)

11 
Âuts
(
¨gv
[0], 
°dîr
);\

12 
Âuts
(
s
, 
°dîr
);\

13 
Âutc
(
c
, 
°dîr
);\

14 
Âutc
('\n', 
°dîr
);}

16 
	g›ãº
 = 1;

17 
	g›töd
 = 1;

18 
	g›t›t
;

19 *
	g›èrg
;

22 
	$gë›t
(
¨gc
, 
¨gv
, 
›ts
)

23 
¨gc
;

24 **
¨gv
;

25 *
›ts
;

27 
•
 = 1;

28 
c
;

29 *
˝
;

31 i‡(
•
 == 1)

32 i‡(
›töd
 >
¨gc
 ||

33 
¨gv
[
›töd
][0] != '-' ||árgv[optind][1] == '\0')

34  
EOF
;

35 i‡(!
	`°rcmp
(
¨gv
[
›töd
], "--")) {

36 
›töd
++;

37  
EOF
;

39 
›t›t
 = 
c
 = 
¨gv
[
›töd
][
•
];

40 i‡(
c
 =':' || (
˝
=
	`°rchr
(
›ts
, c)Ë=
NULL
) {

41 
	`ERR
 (": iŒegÆ o±i⁄ -- ", 
c
);

42 i‡(
¨gv
[
›töd
][++
•
] == '\0') {

43 
›töd
++;

44 
•
 = 1;

48 i‡(*++
˝
 == ':') {

49 i‡(
¨gv
[
›töd
][
•
+1] != '\0')

50 
›èrg
 = &
¨gv
[
›töd
++][
•
+1];

51 i‡(++
›töd
 >
¨gc
) {

52 
	`ERR
 (": o±i⁄Ñequúe†™árgumíà-- ", 
c
);

53 
•
 = 1;

56 
›èrg
 = 
¨gv
[
›töd
++];

57 
•
 = 1;

59 i‡(
¨gv
[
›töd
][++
•
] == '\0') {

60 
•
 = 1;

61 
›töd
++;

63 
›èrg
 = 
NULL
;

65  
c
;

66 
	}
}

	@getpass.c

4 
	#›í
 
_›í


	)

5 
	#siga˘i⁄
 
_siga˘i⁄


	)

6 
	#sigem±y£t
 
_sigem±y£t


	)

7 
	#tcgë©å
 
_tcgë©å


	)

8 
	#tc£èâr
 
_tc£èâr


	)

9 
	#wrôe
 
_wrôe


	)

10 
	#ªad
 
_ªad


	)

11 
	#˛o£
 
_˛o£


	)

12 
	~<sys/ty≥s.h
>

13 
	~<f˙é.h
>

14 
	~<uni°d.h
>

15 
	~<sig«l.h
>

16 
	~<ãrmios.h
>

17 
	~<°rög.h
>

19 
	göå
;

21 
	$ˇtch
(
sig
)

23 
öå
= 1;

24 
	}
}

26 *
	$gë∑ss
(c⁄° *
¥om±
)

28 
siga˘i⁄
 
oß
, 
ß
;

29 
ãrmios
 
cooked
, 
øw
;

30 
∑ssw‹d
[32+1];

31 
fd
, 
n
= 0;

34 i‡((
fd

	`›í
("/dev/ây", 
O_RDONLY
)Ë< 0Ë 
NULL
;

37 
öå
= 0;

38 
	`siga˘i⁄
(
SIGINT
, 
NULL
, &
oß
);

39 i‡(
oß
.
ß_h™dÀr
 !
SIG_IGN
) {

40 
	`sigem±y£t
(&
ß
.
ß_mask
);

41 
ß
.
ß_Êags
= 0;

42 
ß
.
ß_h™dÀr

ˇtch
;

43 
	`siga˘i⁄
(
SIGINT
, &
ß
, &
oß
);

47 
	`tcgë©å
(
fd
, &
cooked
);

48 
øw

cooked
;

49 
øw
.
c_iÊag
|
ICRNL
;

50 
øw
.
c_lÊag
&~
ECHO
;

51 
øw
.
c_lÊag
|
ECHONL
;

52 
øw
.
c_oÊag
|
OPOST
 | 
ONLCR
;

53 
	`tc£èâr
(
fd
, 
TCSANOW
, &
øw
);

56 
	`wrôe
(2, 
¥om±
, 
	`°æí
(prompt));

59 
	`ªad
(
fd
, 
∑ssw‹d
+
n
, 1) > 0) {

60 i‡(
∑ssw‹d
[
n
] == '\n') ;

61 i‡(
n
 < 32)Ç++;

63 
∑ssw‹d
[
n
]= 0;

66 
	`tc£èâr
(
fd
, 
TCSANOW
, &
cooked
);

68 
	`˛o£
(
fd
);

71 
	`siga˘i⁄
(
SIGINT
, &
oß
, 
NULL
);

72 i‡(
öå
Ë
	`øi£
(
SIGINT
);

74  
∑ssw‹d
;

75 
	}
}

	@getproto.c

20 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

21 
	gsccsid
[] = "@(#)getproto.c 5.6 (Berkeley) 6/1/90";

24 
	~<°ddef.h
>

26 #ifde‡
_MINIX


27 
	~<™si.h
>

28 
	~<√t/gí/√tdb.h
>

31 
_¥Ÿo_°ay›í
;

33 
¥Ÿ€¡
 *

34 
	$gë¥Ÿobynumbî
(
¥Ÿo
)

35 
¥Ÿo
;

37 
¥Ÿ€¡
 *
p
;

39 
	`£çrŸ€¡
(
_¥Ÿo_°ay›í
);

40 
p
 = 
	`gë¥Ÿ€¡
())

41 i‡(
p
->
p_¥Ÿo
 =
¥Ÿo
)

43 i‡(!
_¥Ÿo_°ay›í
)

44 
	`íd¥Ÿ€¡
();

45  (
p
);

46 
	}
}

	@getprotoent.c

20 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

21 
	gsccsid
[] = "@(#)getprotoent.c 5.7 (Berkeley) 6/1/90";

24 
	~<˘y≥.h
>

25 
	~<°dio.h
>

26 
	~<°dlib.h
>

28 #ifde‡
_MINIX


29 
	~<√t/gí/√tdb.h
>

31 *
™y
 
_ARGS
(–*
˝
, *
m©ch
 ));

34 
	#MAXALIASES
 35

	)

36 
FILE
 *
	g¥Ÿof
 = 
NULL
;

37 
	glöe
[
BUFSIZ
+1];

38 
¥Ÿ€¡
 
	g¥Ÿo
;

39 *
	g¥Ÿo_Æü£s
[
MAXALIASES
];

40 
	g_¥Ÿo_°ay›í
;

43 
	$£çrŸ€¡
(
f
)

44 
f
;

46 i‡(
¥Ÿof
 =
NULL
)

47 
¥Ÿof
 = 
	`f›í
(
_PATH_PROTOCOLS
, "r" );

49 
	`ªwöd
(
¥Ÿof
);

50 
_¥Ÿo_°ay›í
 |
f
;

51 
	}
}

54 
	$íd¥Ÿ€¡
()

56 i‡(
¥Ÿof
) {

57 
	`f˛o£
(
¥Ÿof
);

58 
¥Ÿof
 = 
NULL
;

60 
_¥Ÿo_°ay›í
 = 0;

61 
	}
}

63 
¥Ÿ€¡
 *

64 
	$gë¥Ÿ€¡
()

66 *
p
;

67 *
˝
, **
q
;

69 i‡(
¥Ÿof
 =
NULL
 && (¥Ÿo‡
	`f›í
(
_PATH_PROTOCOLS
, "r" )) == NULL)

70  (
NULL
);

71 
agaö
:

72 i‡((
p
 = 
	`fgës
(
löe
, 
BUFSIZ
, 
¥Ÿof
)Ë=
NULL
)

73  (
NULL
);

74 i‡(*
p
 == '#')

75 
agaö
;

76 
˝
 = 
	`™y
(
p
, "#\n");

77 i‡(
˝
 =
NULL
)

78 
agaö
;

79 *
˝
 = '\0';

80 
¥Ÿo
.
p_«me
 = 
p
;

81 
˝
 = 
	`™y
(
p
, " \t");

82 i‡(
˝
 =
NULL
)

83 
agaö
;

84 *
˝
++ = '\0';

85 *
˝
 == ' ' || *cp == '\t')

86 
˝
++;

87 
p
 = 
	`™y
(
˝
, " \t");

88 i‡(
p
 !
NULL
)

89 *
p
++ = '\0';

90 
¥Ÿo
.
p_¥Ÿo
 = 
	`©oi
(
˝
);

91 
q
 = 
¥Ÿo
.
p_Æü£s
 = 
¥Ÿo_Æü£s
;

92 i‡(
p
 !
NULL
) {

93 
˝
 = 
p
;

94 
˝
 && *cp) {

95 i‡(*
˝
 == ' ' || *cp == '\t') {

96 
˝
++;

99 i‡(
q
 < &
¥Ÿo_Æü£s
[
MAXALIASES
 - 1])

100 *
q
++ = 
˝
;

101 
˝
 = 
	`™y
(cp, " \t");

102 i‡(
˝
 !
NULL
)

103 *
˝
++ = '\0';

106 *
q
 = 
NULL
;

107  (&
¥Ÿo
);

108 
	}
}

111 
	$™y
(
˝
, 
m©ch
)

112 *
˝
;

113 *
m©ch
;

115 *
mp
, 
c
;

117 
c
 = *
˝
) {

118 
mp
 = 
m©ch
; *mp; mp++)

119 i‡(*
mp
 =
c
)

120  (
˝
);

121 
˝
++;

124 
	}
}

	@getpwent.c

6 
	#nû
 0

	)

7 
	#›í
 
_›í


	)

8 
	#f˙é
 
_f˙é


	)

9 
	#ªad
 
_ªad


	)

10 
	#˛o£
 
_˛o£


	)

11 
	~<sys/ty≥s.h
>

12 
	~<pwd.h
>

13 
	~<°rög.h
>

14 
	~<°dlib.h
>

15 
	~<uni°d.h
>

16 
	~<f˙é.h
>

18 
	#¨øysize
(
a
Ë(◊Ë/ (◊)[0]))

	)

19 
	#¨øylimô
(
a
Ë(◊Ë+ 
	`¨øysize
◊))

	)

21 
	gPASSWD
[]= "/etc/passwd";

22 c⁄° *
	gpwfûe
;

24 
	gbuf
[1024];

25 
	gpwlöe
[256];

26 
∑sswd
 
	gíåy
;

27 
	gpwfd
= -1;

28 *
	gbuÂå
;

29 
ssize_t
 
	gbuÊí
= 0;

30 *
	glöïå
;

32 
	$ídpwít
()

35 i‡(
pwfd
 >= 0) {

36 (Ë
	`˛o£
(
pwfd
);

37 
pwfd
= -1;

38 
buÊí
= 0;

40 
	}
}

42 
	$£çwít
()

45 i‡(
pwfd
 >0Ë
	`ídpwít
();

47 i‡(
pwfûe
 =
nû
Ëpwfûe
PASSWD
;

49 i‡((
pwfd

	`›í
(
pwfûe
, 
O_RDONLY
)) < 0)  -1;

50 (Ë
	`f˙é
(
pwfd
, 
F_SETFD
, f˙é’wfd, 
F_GETFD
Ë| 
FD_CLOEXEC
);

52 
	}
}

54 
	$£çwfûe
(c⁄° *
fûe
)

57 
	`ídpwít
();

58 
pwfûe

fûe
;

59 
	}
}

61 
	$gëlöe
()

64 
löïå

pwlöe
;

67 i‡(
buÊí
 == 0) {

68 i‡((
buÊí

	`ªad
(
pwfd
, 
buf
, (buf))) <= 0)

70 
buÂå

buf
;

73 i‡(
löïå
 =
	`¨øylimô
(
pwlöe
))  0;

74 
buÊí
--;

75 } (*
löïå
++ = *
buÂå
++) != '\n');

77 
löïå

pwlöe
;

79 
	}
}

81 *
	$sˇn_cﬁ⁄
()

84 *
fõld

löïå
;

85 *
œ°
;

88 
œ°

löïå
;

89 i‡(*
löïå
 =0Ë 
nû
;

90 i‡(*
löïå
 == '\n') ;

91 i‡(*
löïå
++ == ':') ;

93 *
œ°
= 0;

94  
fõld
;

95 
	}
}

97 
∑sswd
 *
	$gëpwít
()

100 *
p
;

103 i‡(
pwfd
 < 0 && 
	`£çwít
(Ë< 0Ë 
nû
;

107 i‡(!
	`gëlöe
()Ë 
nû
;

109 i‡((
íåy
.
pw_«me

	`sˇn_cﬁ⁄
()Ë=
nû
) ;

110 i‡((
íåy
.
pw_∑sswd

	`sˇn_cﬁ⁄
()Ë=
nû
) ;

111 i‡((
p

	`sˇn_cﬁ⁄
()Ë=
nû
) ;

112 
íåy
.
pw_uid

	`°πﬁ
(
p
, 
nû
, 0);

113 i‡((
p

	`sˇn_cﬁ⁄
()Ë=
nû
) ;

114 
íåy
.
pw_gid

	`°πﬁ
(
p
, 
nû
, 0);

115 i‡((
íåy
.
pw_gecos

	`sˇn_cﬁ⁄
()Ë=
nû
) ;

116 i‡((
íåy
.
pw_dú

	`sˇn_cﬁ⁄
()Ë=
nû
) ;

117 i‡((
íåy
.
pw_shñl

	`sˇn_cﬁ⁄
()Ë=
nû
) ;

119 i‡(*
löïå
 =0Ë &
íåy
;

121 
	}
}

123 
∑sswd
 *
	$gëpwuid
(
Uid_t
 
uid
)

126 
∑sswd
 *
pw
;

128 
	`ídpwít
();

129 (
pw

	`gëpwít
()Ë!
nû
 &&Öw->
pw_uid
 !
uid
) {}

130 
	`ídpwít
();

131  
pw
;

132 
	}
}

134 
∑sswd
 *
	$gëpw«m
(c⁄° *
«me
)

137 
∑sswd
 *
pw
;

139 
	`ídpwít
();

140 (
pw

	`gëpwít
()Ë!
nû
 && 
	`°rcmp
’w->
pw_«me
, 
«me
) != 0) {}

141 
	`ídpwít
();

142  
pw
;

143 
	}
}

	@gets.c

6 
	~<°dio.h
>

9 
	$gës
(*
s
)

11 
FILE
 *
°ªam
 = 
°dö
;

12 
ch
;

13 *
±r
;

15 
±r
 = 
s
;

16 (
ch
 = 
	`gëc
(
°ªam
)Ë!
EOF
 && ch != '\n')

17 *
±r
++ = 
ch
;

19 i‡(
ch
 =
EOF
) {

20 i‡(
	`„of
(
°ªam
)) {

21 i‡(
±r
 =
s
Ë 
NULL
;

22 }  
NULL
;

25 *
±r
 = '\0';

26  
s
;

27 
	}
}

	@getservent.c

20 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

21 
	gsccsid
[] = "@(#)getservent.c 5.8 (Berkeley) 6/1/90";

24 
	~<sys/ty≥s.h
>

25 
	~<˘y≥.h
>

26 
	~<°dio.h
>

27 
	~<°dlib.h
>

29 
	~<√t/ht⁄.h
>

30 
	~<√t/gí/√tdb.h
>

32 
	#MAXALIASES
 35

	)

34 
FILE
 *
	g£rvf
 = 
NULL
;

35 
	glöe
[
BUFSIZ
+1];

36 
£rvít
 
	g£rv
;

37 *
	g£rv_Æü£s
[
MAXALIASES
];

38 
	g_£rv_°ay›í
;

40 *
™y
 
_ARGS
(–*
˝
, *
m©ch
 ));

43 
	$£t£rvít
(
f
)

44 
f
;

46 i‡(
£rvf
 =
NULL
)

47 
£rvf
 = 
	`f›í
(
_PATH_SERVICES
, "r" );

49 
	`ªwöd
(
£rvf
);

50 
_£rv_°ay›í
 |
f
;

51 
	}
}

54 
	$íd£rvít
()

56 i‡(
£rvf
) {

57 
	`f˛o£
(
£rvf
);

58 
£rvf
 = 
NULL
;

60 
_£rv_°ay›í
 = 0;

61 
	}
}

63 
£rvít
 *

64 
	$gë£rvít
()

66 *
p
;

67 *
˝
, **
q
;

69 i‡(
£rvf
 =
NULL
 && (£rv‡
	`f›í
(
_PATH_SERVICES
, "r" )) == NULL)

70  (
NULL
);

71 
agaö
:

72 i‡((
p
 = 
	`fgës
(
löe
, 
BUFSIZ
, 
£rvf
)Ë=
NULL
)

73  (
NULL
);

74 i‡(*
p
 == '#')

75 
agaö
;

76 
˝
 = 
	`™y
(
p
, "#\n");

77 i‡(
˝
 =
NULL
)

78 
agaö
;

79 *
˝
 = '\0';

80 
£rv
.
s_«me
 = 
p
;

81 
p
 = 
	`™y
(p, " \t");

82 i‡(
p
 =
NULL
)

83 
agaö
;

84 *
p
++ = '\0';

85 *
p
 == ' ' || *p == '\t')

86 
p
++;

87 
˝
 = 
	`™y
(
p
, ",/");

88 i‡(
˝
 =
NULL
)

89 
agaö
;

90 *
˝
++ = '\0';

91 
£rv
.
s_p‹t
 = 
	`ht⁄s
((
u16_t
)
	`©oi
(
p
));

92 
£rv
.
s_¥Ÿo
 = 
˝
;

93 
q
 = 
£rv
.
s_Æü£s
 = 
£rv_Æü£s
;

94 
˝
 = 
	`™y
(cp, " \t");

95 i‡(
˝
 !
NULL
)

96 *
˝
++ = '\0';

97 
˝
 && *cp) {

98 i‡(*
˝
 == ' ' || *cp == '\t') {

99 
˝
++;

102 i‡(
q
 < &
£rv_Æü£s
[
MAXALIASES
 - 1])

103 *
q
++ = 
˝
;

104 
˝
 = 
	`™y
(cp, " \t");

105 i‡(
˝
 !
NULL
)

106 *
˝
++ = '\0';

108 *
q
 = 
NULL
;

109  (&
£rv
);

110 
	}
}

113 
	$™y
(
˝
, 
m©ch
)

114 *
˝
;

115 *
m©ch
;

117 *
mp
, 
c
;

119 
c
 = *
˝
) {

120 
mp
 = 
m©ch
; *mp; mp++)

121 i‡(*
mp
 =
c
)

122  (
˝
);

123 
˝
++;

126 
	}
}

	@getset.c

7 
	~"mm.h
"

8 
	~<möix/ˇŒƒ.h
>

9 
	~<sig«l.h
>

10 
	~"m¥oc.h
"

11 
	~"∑øm.h
"

16 
PUBLIC
 
	$do_gë£t
()

24 
m¥oc
 *
rmp
 = 
mp
;

25 
r
;

27 
mm_ˇŒ
) {

28 
GETUID
:

29 
r
 = 
rmp
->
mp_ªÆuid
;

30 
ªsu…2
 = 
rmp
->
mp_effuid
;

33 
GETGID
:

34 
r
 = 
rmp
->
mp_ªÆgid
;

35 
ªsu…2
 = 
rmp
->
mp_effgid
;

38 
GETPID
:

39 
r
 = 
m¥oc
[
who
].
mp_pid
;

40 
ªsu…2
 = 
m¥oc
[
rmp
->
mp_∑ª¡
].
mp_pid
;

43 
SETUID
:

44 i‡(
rmp
->
mp_ªÆuid
 !
u§_id
 &&Ñmp->
mp_effuid
 !
SUPER_USER
)

45 (
EPERM
);

46 
rmp
->
mp_ªÆuid
 = 
u§_id
;

47 
rmp
->
mp_effuid
 = 
u§_id
;

48 
	`ãŒ_fs
(
SETUID
, 
who
, 
u§_id
, usr_id);

49 
r
 = 
OK
;

52 
SETGID
:

53 i‡(
rmp
->
mp_ªÆgid
 !
gΩid
 &&Ñmp->
mp_effuid
 !
SUPER_USER
)

54 (
EPERM
);

55 
rmp
->
mp_ªÆgid
 = 
gΩid
;

56 
rmp
->
mp_effgid
 = 
gΩid
;

57 
	`ãŒ_fs
(
SETGID
, 
who
, 
gΩid
, grpid);

58 
r
 = 
OK
;

61 
SETSID
:

62 i‡(
rmp
->
mp_¥ocgΩ
 =rmp->
mp_pid
Ë(
EPERM
);

63 
rmp
->
mp_¥ocgΩ
 =Ñmp->
mp_pid
;

64 
	`ãŒ_fs
(
SETSID
, 
who
, 0, 0);

67 
GETPGRP
:

68 
r
 = 
rmp
->
mp_¥ocgΩ
;

72 
r
 = 
EINVAL
;

75 (
r
);

76 
	}
}

	@getsrvbyname.c

20 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

21 
	gsccsid
[] = "@(#)getservbyname.c 5.6 (Berkeley) 6/1/90";

24 
	~<°rög.h
>

26 
	~<√t/gí/√tdb.h
>

28 
_£rv_°ay›í
;

30 
£rvít
 *

31 
	$gë£rvby«me
(
«me
, 
¥Ÿo
)

32 c⁄° *
«me
, *
¥Ÿo
;

34 
£rvít
 *
p
;

35 **
˝
;

37 
	`£t£rvít
(
_£rv_°ay›í
);

38 
p
 = 
	`gë£rvít
()) {

39 i‡(
	`°rcmp
(
«me
, 
p
->
s_«me
) == 0)

40 
gŸ«me
;

41 
˝
 = 
p
->
s_Æü£s
; *cp; cp++)

42 i‡(
	`°rcmp
(
«me
, *
˝
) == 0)

43 
gŸ«me
;

45 
gŸ«me
:

46 i‡(
¥Ÿo
 =0 || 
	`°rcmp
(
p
->
s_¥Ÿo
,Öroto) == 0)

49 i‡(!
_£rv_°ay›í
)

50 
	`íd£rvít
();

51  (
p
);

52 
	}
}

	@getsrvbyport.c

20 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

21 
	gsccsid
[] = "@(#)getservbyport.c 5.6 (Berkeley) 6/1/90";

24 
	~<°ddef.h
>

25 
	~<°rög.h
>

27 #ifde‡
_MINIX


28 
	~<√t/gí/√tdb.h
>

31 
_£rv_°ay›í
;

33 
£rvít
 *

34 
	$gë£rvbyp‹t
(
p‹t
, 
¥Ÿo
)

35 
p‹t
;

36 c⁄° *
¥Ÿo
;

38 
£rvít
 *
p
;

40 
	`£t£rvít
(
_£rv_°ay›í
);

41 
p
 = 
	`gë£rvít
()) {

42 i‡(
p
->
s_p‹t
 !
p‹t
)

44 i‡(
¥Ÿo
 =0 || 
	`°rcmp
(
p
->
s_¥Ÿo
,Öroto) == 0)

47 i‡(!
_£rv_°ay›í
)

48 
	`íd£rvít
();

49  (
p
);

50 
	}
}

	@getttyent.c

4 
	#nû
 0

	)

5 
	#›í
 
_›í


	)

6 
	#˛o£
 
_˛o£


	)

7 
	#f˙é
 
_f˙é


	)

8 
	#ªad
 
_ªad


	)

9 
	~<°rög.h
>

10 
	~<sys/ty≥s.h
>

11 
	~<âyít.h
>

12 
	~<uni°d.h
>

13 
	~<f˙é.h
>

15 
	#¨øysize
(
a
Ë(◊Ë/ (◊)[0]))

	)

16 
	#¨øylimô
(
a
Ë(◊Ë+ 
	`¨øysize
◊))

	)

18 
	gTTYTAB
[]= "/etc/ttytab";

20 
	gbuf
[512];

21 
	gâlöe
[256];

22 *
	gâ¨gv
[32];

23 
âyít
 
	gíåy
;

24 
	gâfd
= -1;

25 *
	gbuÂå
;

26 
ssize_t
 
	gbuÊí
= 0;

27 *
	glöïå
;

28 **
	g¨gv±r
;

30 
	$ídâyít
()

33 i‡(
âfd
 >= 0) {

34 (Ë
	`˛o£
(
âfd
);

35 
âfd
= -1;

36 
buÊí
= 0;

38 
	}
}

40 
	$£âtyít
()

43 i‡(
âfd
 >0Ë
	`ídâyít
();

45 i‡((
âfd

	`›í
(
TTYTAB
, 
O_RDONLY
)) < 0)  -1;

46 (Ë
	`f˙é
(
âfd
, 
F_SETFD
, f˙é—tfd, 
F_GETFD
Ë| 
FD_CLOEXEC
);

48 
	}
}

50 
	$gëlöe
()

53 
löïå

âlöe
;

54 
¨gv±r

â¨gv
;

57 i‡(
buÊí
 == 0) {

58 i‡((
buÊí

	`ªad
(
âfd
, 
buf
, (buf))) <= 0)

60 
buÂå

buf
;

63 i‡(
löïå
 =
	`¨øylimô
(
âlöe
))  0;

64 
buÊí
--;

65 } (*
löïå
++ = *
buÂå
++) != '\n');

67 
löïå

âlöe
;

69 
	}
}

71 
	$whôe
(
c
)

74  
c
 == ' ' || c == '\t';

75 
	}
}

77 *
	$sˇn_whôe
(
quŸed
)

82 *
fõld
, *
œ°
;

84 
	`whôe
(*
löïå
))Üineptr++;

85 i‡(!
quŸed
 && *
löïå
 ='#'Ë 
nû
;

87 
fõld

löïå
;

89 
œ°

löïå
;

90 i‡(*
löïå
 =0Ë 
nû
;

91 i‡(*
löïå
 == '\n') ;

92 i‡(
quŸed
 && *
löïå
 ='"'Ë 
fõld
;

93 i‡(
	`whôe
(*
löïå
++)) ;

95 *
œ°
= 0;

96  *
fõld
 =0 ? 
nû
 : field;

97 
	}
}

99 **
	$sˇn_quŸed
()

102 *
p
, **
fõld

¨gv±r
;

104 
	`whôe
(*
löïå
))Üineptr++;

106 i‡(*
löïå
 == '"') {

108 
löïå
++;

109 (
p

	`sˇn_whôe
(1)Ë!
nû
 && *p != '"') {

110 i‡(
¨gv±r
 =
	`¨øylimô
(
â¨gv
)Ë 
nû
;

111 *
¨gv±r
++
p
;

113 i‡(*
löïå
 == '"') *lineptr++= 0;

116 i‡((
p

	`sˇn_whôe
(0)Ë=
nû
) Çil;

117 i‡(
¨gv±r
 =
	`¨øylimô
(
â¨gv
)Ë 
nû
;

118 *
¨gv±r
++
p
;

120 i‡(
¨gv±r
 =
	`¨øylimô
(
â¨gv
)Ë 
nû
;

121 *
¨gv±r
++
nû
;

122  
fõld
;

123 
	}
}

125 
âyít
 *
	$gëâyít
()

129 i‡(
âfd
 < 0 && 
	`£âtyít
(Ë< 0Ë 
nû
;

133 i‡(!
	`gëlöe
()Ë 
nû
;

135 i‡((
íåy
.
ty_«me

	`sˇn_whôe
(0)Ë=
nû
) ;

136 
íåy
.
ty_ty≥

	`sˇn_whôe
(0);

137 
íåy
.
ty_gëty

	`sˇn_quŸed
();

138 
íåy
.
ty_öô

	`sˇn_quŸed
();

140  &
íåy
;

142 
	}
}

144 
âyít
 *
	$gëây«m
(c⁄° *
«me
)

147 
âyít
 *
ây
;

149 
	`ídâyít
();

150 (
ây

	`gëâyít
()Ë!
nû
 && 
	`°rcmp
—ty->
ty_«me
, 
«me
) != 0) {}

151 
	`ídâyít
();

152  
ây
;

153 
	}
}

	@getw.c

6 
	~<°dio.h
>

8 
_PROTOTYPE
(
gëw
, (
FILE
 *
°ªam
 ));

10 
	$gëw
(
°ªam
)

11 
FILE
 *
°ªam
;

13 
˙t
 = ();

14 
w
;

15 *
p
 = (*Ë&
w
;

17 
˙t
--) {

18 *
p
++ = 
	`gëc
(
°ªam
);

20 i‡(
	`„of
(
°ªam
Ë|| 
	`„º‹
(°ªam)Ë 
EOF
;

21  
w
;

22 
	}
}

	@glo.h

4 #ifde‡
_TABLE


5 #unde‡
EXTERN


6 
	#EXTERN


	)

10 
EXTERN
 
phys_byãs
 
	gcode_ba£
;

11 
EXTERN
 
phys_byãs
 
	gd©a_ba£
;

14 
EXTERN
 
¥oc
 *
	ghñd_hód
;

15 
EXTERN
 
¥oc
 *
	ghñd_èû
;

16 
EXTERN
 
	gk_ªíãr
;

19 
EXTERN
 
¥oc
 *
	g¥oc_±r
;

22 
EXTERN
 
	gsig_¥ocs
;

25 
EXTERN
 
mem‹y
 
	gmem
[
NR_MEMS
];

26 
EXTERN
 
phys_˛icks
 
	gtŸ_mem_size
;

29 
u16_t
 
sizes
[];

30 
èskèb
Åasktab[];

31 *
t_°ack
[];

32 
EXTERN
 
	glo°_ticks
;

33 
EXTERN
 
˛ock_t
 
	gây_timeout
;

34 
EXTERN
 
	gcuºít
;

36 #i‡(
CHIP
 =
INTEL
)

39 
EXTERN
 
	gpc_©
;

40 
EXTERN
 
	gps_mˇ
;

41 
EXTERN
 
	g¥o˚ss‹
;

42 #i‡
_WORD_SIZE
 == 2

43 
EXTERN
 
	g¥Ÿe˘ed_mode
;

45 
	#¥Ÿe˘ed_mode
 1

	)

49 
EXTERN
 
	gega
;

50 
EXTERN
 
	gvga
;

53 
EXTERN
 
	gext_memsize
;

54 
EXTERN
 
	glow_memsize
;

57 
EXTERN
 
úq_h™dÀr_t
 
	gúq_èbÀ
[
NR_IRQ_VECTORS
];

58 
EXTERN
 
	gúq_u£
;

59 
EXTERN
 
ªg_t
 
	gm⁄_ss
, 
	gm⁄_•
;

60 
EXTERN
 
	gm⁄_ªtu∫
;

61 
EXTERN
 
phys_byãs
 
	gªboŸ_code
;

64 
£gdesc_s
 
gdt
[];

66 
EXTERN
 
_PROTOTYPE
–(*
Àvñ0_func
), () );

69 #i‡(
CHIP
 =
M68000
)

71 
key∑d
;

72 
≠p_mode
;

73 
STdebKey
;

74 
ây
 *
cur_c⁄s
;

75 
f⁄t8
[];

76 
f⁄t12
[];

77 
f⁄t16
[];

78 
ªsﬁuti⁄
;

	@gmtime.c

6 
	~<time.h
>

7 
	~<limôs.h
>

8 
	~"loc_time.h
"

10 
tm
 *

11 
	$gmtime
(c⁄° 
time_t
 *
timî
)

13 
tm
 
br_time
;

14 
tm
 *
timï
 = &
br_time
;

15 
time_t
 
time
 = *
timî
;

16 
day˛ock
, 
dayno
;

17 
yór
 = 
EPOCH_YR
;

19 
day˛ock
 = ()
time
 % 
SECS_DAY
;

20 
dayno
 = ()
time
 / 
SECS_DAY
;

22 
timï
->
tm_£c
 = 
day˛ock
 % 60;

23 
timï
->
tm_mö
 = (
day˛ock
 % 3600) / 60;

24 
timï
->
tm_hour
 = 
day˛ock
 / 3600;

25 
timï
->
tm_wday
 = (
dayno
 + 4) % 7;

26 
dayno
 >
	`YEARSIZE
(
yór
)) {

27 
dayno
 -
	`YEARSIZE
(
yór
);

28 
yór
++;

30 
timï
->
tm_yór
 = 
yór
 - 
YEAR0
;

31 
timï
->
tm_yday
 = 
dayno
;

32 
timï
->
tm_m⁄
 = 0;

33 
dayno
 >
_yèb
[
	`LEAPYEAR
(
yór
)][
timï
->
tm_m⁄
]) {

34 
dayno
 -
_yèb
[
	`LEAPYEAR
(
yór
)][
timï
->
tm_m⁄
];

35 
timï
->
tm_m⁄
++;

37 
timï
->
tm_mday
 = 
dayno
 + 1;

38 
timï
->
tm_isd°
 = 0;

40  
timï
;

41 
	}
}

	@hton.c

5 
	~<sys/ty≥s.h
>

6 
	~<möix/c⁄fig.h
>

7 
	~<√t/ht⁄.h
>

9 
u16_t
 
	g_tmp
;

10 
u32_t
 
	g_tmp_l
;

	@hugeval.c

8 
	~<m©h.h
>

11 
	$__huge_vÆ
()

14 
	}
}

	@hypot.c

8 
	~<m©h.h
>

10 
	scom∂ex
 {

11 
	mr
,
	mi
;

14 
_PROTOTYPE
(
hypŸ
, (
x
, 
y
 ));

15 
_PROTOTYPE
(
ˇbs
, (
com∂ex
 
p_com∂
 ));

20 
	$hypŸ
(
x
, 
y
)

21 
x
, 
y
;

25 i‡(
x
 < 0) x = -x;

26 i‡(
y
 < 0) y = -y;

27 i‡(
x
 > 
y
) {

28 
t
 = 
y
;

29 
y
 = 
x
;

30 
x
 = 
t
;

33 i‡(
y
 == 0.0)  0.0;

34 
x
 /
y
;

35  
y
*
	`sqπ
(
x
*x+1.0);

36 
	}
}

39 
	$ˇbs
(
p_com∂
)

40 
com∂ex
 
p_com∂
;

42  
	`hypŸ
(
p_com∂
.
r
,Ö_com∂.
i
);

43 
	}
}

	@i8259.c

7 
	~"kî√l.h
"

9 
	#ICW1_AT
 0x11

	)

10 
	#ICW1_PC
 0x13

	)

11 
	#ICW1_PS
 0x19

	)

12 
	#ICW4_AT
 0x01

	)

13 
	#ICW4_PC
 0x09

	)

15 
FORWARD
 
_PROTOTYPE
–
•urious_úq
, (
úq
) );

17 #i‡
_WORD_SIZE
 == 2

18 
_PROTOTYPE
–(*
	tveˇddr_t
), () );

20 
FORWARD
 
_PROTOTYPE
–
£t_vec
, (
vec_ƒ
, 
veˇddr_t
 
addr
) );

22 
PRIVATE
 
veˇddr_t
 
	göt_vec
[] = {

23 
öt00
, 
öt01
, 
öt02
, 
öt03
, 
öt04
, 
öt05
, 
öt06
, 
öt07
,

26 
PRIVATE
 
veˇddr_t
 
	gúq_vec
[] = {

27 
hwöt00
, 
hwöt01
, 
hwöt02
, 
hwöt03
, 
hwöt04
, 
hwöt05
, 
hwöt06
, 
hwöt07
,

28 
hwöt08
, 
hwöt09
, 
hwöt10
, 
hwöt11
, 
hwöt12
, 
hwöt13
, 
hwöt14
, 
hwöt15
,

31 
	#£t_vec
(
ƒ
, 
addr
Ë(()0)

	)

38 
PUBLIC
 
	$öå_öô
(
möe
)

39 
möe
;

47 
i
;

49 
	`lock
();

50 i‡(
¥Ÿe˘ed_mode
) {

55 
	`out_byã
(
INT_CTL
, 
ps_mˇ
 ? 
ICW1_PS
 : 
ICW1_AT
);

56 
	`out_byã
(
INT_CTLMASK
, 
möe
 ? 
IRQ0_VECTOR
 : 
BIOS_IRQ0_VEC
);

58 
	`out_byã
(
INT_CTLMASK
, (1 << 
CASCADE_IRQ
));

59 
	`out_byã
(
INT_CTLMASK
, 
ICW4_AT
);

60 
	`out_byã
(
INT_CTLMASK
, ~(1 << 
CASCADE_IRQ
));

61 
	`out_byã
(
INT2_CTL
, 
ps_mˇ
 ? 
ICW1_PS
 : 
ICW1_AT
);

62 
	`out_byã
(
INT2_CTLMASK
, 
möe
 ? 
IRQ8_VECTOR
 : 
BIOS_IRQ8_VEC
);

64 
	`out_byã
(
INT2_CTLMASK
, 
CASCADE_IRQ
);

65 
	`out_byã
(
INT2_CTLMASK
, 
ICW4_AT
);

66 
	`out_byã
(
INT2_CTLMASK
, ~0);

72 
i
 = 0; i < 8; i++Ë
	`£t_vec
(i, 
öt_vec
[i]);

73 
	`£t_vec
(
SYS_VECTOR
, 
s_ˇŒ
);

77 
i
 = 0; i < 
NR_IRQ_VECTORS
; i++Ë
úq_èbÀ
[i] = 
•urious_úq
;

78 
	}
}

83 
PRIVATE
 
	$•urious_úq
(
úq
)

84 
úq
;

88 i‡(
úq
 < 0 || irq >
NR_IRQ_VECTORS
)

89 
	`∑nic
("övÆid cÆ»tÿ•urious_úq", 
úq
);

91 
	`¥ötf
("•uriou†úq %d\n", 
úq
);

94 
	}
}

99 
PUBLIC
 
	$put_úq_h™dÀr
(
úq
, 
h™dÀr
)

100 
úq
;

101 
úq_h™dÀr_t
 
h™dÀr
;

105 i‡(
úq
 < 0 || irq >
NR_IRQ_VECTORS
)

106 
	`∑nic
("övÆid cÆ»tÿput_úq_h™dÀr", 
úq
);

108 i‡(
úq_èbÀ
[
úq
] =
h™dÀr
)

111 i‡(
úq_èbÀ
[
úq
] !
•urious_úq
)

112 
	`∑nic
("©ãm±Åÿªgi°î sec⁄d irq h™dÀ∏f‹ irq", 
úq
);

114 
	`dißbÀ_úq
(
úq
);

115 i‡(!
¥Ÿe˘ed_mode
Ë
	`£t_vec
(
	`BIOS_VECTOR
(
úq
), 
úq_vec
[irq]);

116 
úq_èbÀ
[
úq
]
h™dÀr
;

117 
úq_u£
 |1 << 
úq
;

118 
	}
}

121 #i‡
_WORD_SIZE
 == 2

125 
PRIVATE
 
	$£t_vec
(
vec_ƒ
, 
addr
)

126 
vec_ƒ
;

127 
veˇddr_t
 
addr
;

131 
u16_t
 
vec
[2];

134 
vec
[0] = (
u16_t
Ë
addr
;

135 
vec
[1] = (
u16_t
Ë
	`physb_to_h˛ick
(
code_ba£
);

138 
	`phys_c›y
(
	`vú2phys
(
vec
), 
vec_ƒ
 * 4L, 4L);

139 
	}
}

	@icmp.c

5 
	~"öë.h
"

6 
	~"buf.h
"

7 
	~"ty≥.h
"

9 
	~"as£π.h
"

10 
	~"˛ock.h
"

11 
	~"icmp.h
"

12 
	~"icmp_lib.h
"

13 
	~"io.h
"

14 
	~"ù.h
"

15 
	~"ù_öt.h
"

16 
	~"ùr.h
"

18 
INIT_PANIC
();

20 
	sicmp_p‹t


22 
	mi˝_Êags
;

23 
	mi˝_°©e
;

24 
	mi˝_ùp‹t
;

25 
	mi˝_ùfd
;

26 
acc_t
 *
	mi˝_hód_queue
;

27 
acc_t
 *
	mi˝_èû_queue
;

28 
acc_t
 *
	mi˝_wrôe_∑ck
;

29 } 
	ticmp_p‹t_t
;

31 
	#ICPF_EMPTY
 0x0

	)

32 
	#ICPF_SUSPEND
 0x1

	)

33 
	#ICPF_READ_IP
 0x2

	)

34 
	#ICPF_READ_SP
 0x4

	)

35 
	#ICPF_WRITE_IP
 0x8

	)

36 
	#ICPF_WRITE_SP
 0x10

	)

38 
	#ICPS_BEGIN
 0

	)

39 
	#ICPS_IPOPT
 1

	)

40 
	#ICPS_MAIN
 2

	)

41 
	#ICPS_ERROR
 3

	)

43 
	#ICMP_PORT_NR
 
IP_PORT_NR


	)

45 
PRIVATE
 
icmp_p‹t_t
 
	gicmp_p‹t_èbÀ
[
ICMP_PORT_NR
];

47 
FORWARD
 
icmp_maö
 
ARGS
(–
icmp_p‹t_t
 *
icmp_p‹t
 ));

48 
FORWARD
 
acc_t
 *
icmp_gëd©a
 
ARGS
(–
p‹t
, 
size_t
 
off£t
,

49 
size_t
 
cou¡
, 
f‹_io˘l
 ));

50 
FORWARD
 
icmp_putd©a
 
ARGS
(–
p‹t
, 
size_t
 
off£t
,

51 
acc_t
 *
d©a
, 
f‹_io˘l
 ));

52 
FORWARD
 
icmp_ªad
 
ARGS
(–
icmp_p‹t_t
 *
icmp_p‹t
 ));

53 
FORWARD
 
¥o˚ss_d©a
 
ARGS
(–
icmp_p‹t_t
 *
icmp_p‹t
,

54 
acc_t
 *
d©a
 ));

55 
FORWARD
 
u16_t
 
icmp_∑ck_⁄eCsum
 
ARGS
(–
acc_t
 *
ù_∑ck
 ));

56 
FORWARD
 
icmp_echo_ªque°
 
ARGS
(–
icmp_p‹t_t
 *
icmp_p‹t
,

57 
acc_t
 *
ù_∑ck
, 
ù_hdr_Àn
, 
ù_hdr_t
 *
ù_hdr
,

58 
acc_t
 *
icmp_∑ck
, 
icmp_Àn
, 
icmp_hdr_t
 *
icmp_hdr
 ));

59 
FORWARD
 
icmp_d°_uƒóch
 
ARGS
(–
icmp_p‹t_t
 *
icmp_p‹t
,

60 
acc_t
 *
ù_∑ck
, 
ù_hdr_Àn
, 
ù_hdr_t
 *
ù_hdr
,

61 
acc_t
 *
icmp_∑ck
, 
icmp_Àn
, 
icmp_hdr_t
 *
icmp_hdr
 ));

62 
FORWARD
 
icmp_time_ex˚eded
 
ARGS
(–
icmp_p‹t_t
 *
icmp_p‹t
,

63 
acc_t
 *
ù_∑ck
, 
ù_hdr_Àn
, 
ù_hdr_t
 *
ù_hdr
,

64 
acc_t
 *
icmp_∑ck
, 
icmp_Àn
, 
icmp_hdr_t
 *
icmp_hdr
 ));

65 
FORWARD
 
icmp_rouãr_advîti£mít
 
ARGS
(–
icmp_p‹t_t
 *
icmp_p‹t
,

66 
acc_t
 *
icmp_∑ck
, 
icmp_Àn
, 
icmp_hdr_t
 *
icmp_hdr
 ));

67 
FORWARD
 
icmp_ªdúe˘
 
ARGS
(–
icmp_p‹t_t
 *
icmp_p‹t
,

68 
ù_hdr_t
 *
ù_hdr
, 
acc_t
 *
icmp_∑ck
, 
icmp_Àn
,

69 
icmp_hdr_t
 *
icmp_hdr
 ));

70 
FORWARD
 
acc_t
 *
make_ª∂_ù
 
ARGS
(–
ù_hdr_t
 *
ù_hdr
,

71 
ù_Àn
 ));

72 
FORWARD
 
íqueue_∑ck
 
ARGS
(–
icmp_p‹t_t
 *
icmp_p‹t
,

73 
acc_t
 *
ª∂y_ù_hdr
 ));

74 
FORWARD
 
icmp_wrôe
 
ARGS
(–
icmp_p‹t_t
 *
icmp_p‹t
 ));

75 
FORWARD
 
icmp_buf‰ì
 
ARGS
(–
¥i‹ôy
, 
size_t
 
ªqsize
 ));

77 
PUBLIC
 
	$icmp_öô
()

79 
i
;

80 
icmp_p‹t_t
 *
icmp_p‹t
;

82 
	`as£π
 (
BUF_S
 > (
nwio_ù›t_t
));

84 
i
0, 
icmp_p‹t

icmp_p‹t_èbÀ
; i<
ICMP_PORT_NR
; i++,

85 
icmp_p‹t
++)

87 
icmp_p‹t
->
i˝_Êags

ICPF_EMPTY
;

88 
icmp_p‹t
->
i˝_°©e

ICPS_BEGIN
;

89 
icmp_p‹t
->
i˝_ùp‹t

i
;

92 
	`bf_log⁄
(
icmp_buf‰ì
);

94 
i
0, 
icmp_p‹t

icmp_p‹t_èbÀ
; i<
ICMP_PORT_NR
; i++,

95 
icmp_p‹t
++)

97 
	`icmp_maö
 (
icmp_p‹t
);

99 
	}
}

101 
PRIVATE
 
	$icmp_maö
(
icmp_p‹t
)

102 
icmp_p‹t_t
 *
icmp_p‹t
;

104 
ªsu…
;

105 
icmp_p‹t
->
i˝_°©e
)

107 
ICPS_BEGIN
:

108 
icmp_p‹t
->
i˝_hód_queue
= 0;

109 
icmp_p‹t
->
i˝_ùfd

	`ù_›í
 (icmp_p‹t->
i˝_ùp‹t
,

110 
icmp_p‹t
-
icmp_p‹t_èbÀ
, 
icmp_gëd©a
,

111 
icmp_putd©a
);

112 i‡(
icmp_p‹t
->
i˝_ùfd
<0)

114 
	`whîe
();

115 
	`¥ötf
("unableÅo open ip_port %d\n",

116 
icmp_p‹t
->
i˝_ùp‹t
);

119 
icmp_p‹t
->
i˝_°©e

ICPS_IPOPT
;

120 
icmp_p‹t
->
i˝_Êags
 &~
ICPF_SUSPEND
;

121 
ªsu…

	`ù_io˘l
 (
icmp_p‹t
->
i˝_ùfd
, 
NWIOSIPOPT
);

122 i‡(
ªsu…
 =
NW_SUSPEND
)

124 
icmp_p‹t
->
i˝_Êags
 |
ICPF_SUSPEND
;

127 i‡(
ªsu…
<0)

129 
	`whîe
();

130 
	`¥ötf
("ip_ioctl (.., NWIOSIPOPT)= %d\n",

131 
ªsu…
);

135 
ICPS_IPOPT
:

136 
icmp_p‹t
->
i˝_°©e

ICPS_MAIN
;

137 
icmp_p‹t
->
i˝_Êags
 &~
ICPF_SUSPEND
;

138 
	`icmp_ªad
(
icmp_p‹t
);

141 
	`whîe
();

142 
	`¥ötf
("unknow¿°©ê%d\n", 
icmp_p‹t
->
i˝_°©e
);

145 
	}
}

147 
PRIVATE
 
acc_t
 *
	$icmp_gëd©a
(
p‹t
, 
off£t
, 
cou¡
, 
f‹_io˘l
)

148 
p‹t
;

149 
size_t
 
off£t
, 
cou¡
;

150 
f‹_io˘l
;

152 
icmp_p‹t_t
 *
icmp_p‹t
;

153 
nwio_ù›t_t
 *
ù›t
;

154 
acc_t
 *
d©a
;

155 
ªsu…
;

157 
icmp_p‹t
&
icmp_p‹t_èbÀ
[
p‹t
];

159 i‡(
icmp_p‹t
->
i˝_Êags
 & 
ICPF_WRITE_IP
)

161 i‡(!
cou¡
)

163 
	`bf_a‰ì
(
icmp_p‹t
->
i˝_wrôe_∑ck
);

164 
icmp_p‹t
->
i˝_wrôe_∑ck
= 0;

166 
ªsu…
()
off£t
;

167 i‡(
ªsu…
<0)

169 
	`whîe
();

170 
	`¥ötf
("gŸ wrôêîr‹ %d\n", 
ªsu…
);

172 #i‡
DEBUG
 & 256

173 { 
	`whîe
(); 
	`¥ötf
("ip_write completed\n"); }

175 i‡(
icmp_p‹t
->
i˝_Êags
 & 
ICPF_WRITE_SP
)

177 
icmp_p‹t
->
i˝_Êags
 &=

178 ~(
ICPF_WRITE_IP
|
ICPF_WRITE_SP
);

179 
	`icmp_wrôe
 (
icmp_p‹t
);

181  
NW_OK
;

183  
	`bf_cut
(
icmp_p‹t
->
i˝_wrôe_∑ck
, 
off£t
, 
cou¡
);

185 
icmp_p‹t
->
i˝_°©e
)

187 
ICPS_IPOPT
:

188 i‡(!
cou¡
)

190 
ªsu…
()
off£t
;

191 i‡(
ªsu…
 < 0)

193 
icmp_p‹t
->
i˝_°©e

ICPS_ERROR
;

196 i‡(
icmp_p‹t
->
i˝_Êags
 & 
ICPF_SUSPEND
)

197 
	`icmp_maö
(
icmp_p‹t
);

198  
NW_OK
;

201 
	`as£π
 (
cou¡
 = (*
ù›t
));

202 
d©a

	`bf_memªq
 ( (*
ù›t
));

203 
	`as£π
 (
d©a
->
acc_Àngth
 =(*
ù›t
));

204 
ù›t
(
nwio_ù›t_t
 *)
	`±r2acc_d©a
(
d©a
);

205 
ù›t
->
nwio_Êags

NWIO_COPY
 | 
NWIO_EN_LOC
 |

206 
NWIO_EN_BROAD
 | 
NWIO_REMANY
 | 
NWIO_PROTOSPEC
 |

207 
NWIO_HDR_O_ANY
 | 
NWIO_RWDATALL
;

208 
ù›t
->
nwio_¥Ÿo

IPPROTO_ICMP
;

209  
d©a
;

211 
	`whîe
();

212 
	`¥ötf
("unknow¿°©ê%d\n", 
icmp_p‹t
->
i˝_°©e
);

215 
	}
}

217 
PRIVATE
 
	$icmp_putd©a
(
p‹t
, 
off£t
, 
d©a
, 
f‹_io˘l
)

218 
p‹t
;

219 
size_t
 
off£t
;

220 
acc_t
 *
d©a
;

221 
f‹_io˘l
;

223 
icmp_p‹t_t
 *
icmp_p‹t
;

224 
ªsu…
;

226 
icmp_p‹t
&
icmp_p‹t_èbÀ
[
p‹t
];

228 i‡(
icmp_p‹t
->
i˝_Êags
 & 
ICPF_READ_IP
)

230 
	`as£π
 (!
f‹_io˘l
);

231 i‡(!
d©a
)

233 
ªsu…
()
off£t
;

234 i‡(
ªsu…
<0)

236 
	`whîe
();

237 
	`¥ötf
("gŸÑódÉº‹ %d\n", 
ªsu…
);

239 i‡(
icmp_p‹t
->
i˝_Êags
 & 
ICPF_READ_SP
)

241 
icmp_p‹t
->
i˝_Êags
 &=

242 ~(
ICPF_READ_IP
|
ICPF_READ_SP
);

243 
	`icmp_ªad
 (
icmp_p‹t
);

245  
NW_OK
;

247 
	`¥o˚ss_d©a
(
icmp_p‹t
, 
d©a
);

248  
NW_OK
;

250 
icmp_p‹t
->
i˝_°©e
)

253 
	`whîe
();

254 
	`¥ötf
("unknow¿°©ê%d\n", 
icmp_p‹t
->
i˝_°©e
);

257 
	}
}

259 
PRIVATE
 
	$icmp_ªad
(
icmp_p‹t
)

260 
icmp_p‹t_t
 *
icmp_p‹t
;

262 
ªsu…
;

264 
	`as£π
 (!(
icmp_p‹t
->
i˝_Êags
 & (
ICPF_READ_IP
|
ICPF_READ_SP
) ||

265 (
icmp_p‹t
->
i˝_Êags
 & (
ICPF_READ_IP
|
ICPF_READ_SP
)) ==

266 (
ICPF_READ_IP
|
ICPF_READ_SP
)));

270 
icmp_p‹t
->
i˝_Êags
 |
ICPF_READ_IP
;

271 
icmp_p‹t
->
i˝_Êags
 &~
ICPF_READ_SP
;

273 
ªsu…

	`ù_ªad
(
icmp_p‹t
->
i˝_ùfd
, 
ICMP_MAX_DATAGRAM
);

274 i‡(
ªsu…
 =
NW_SUSPEND
)

276 
icmp_p‹t
->
i˝_Êags
 |
ICPF_READ_SP
;

280 
	}
}

282 
PUBLIC
 
	$icmp_‰ag_ass_tim
(
∑ck
)

283 
acc_t
 *
∑ck
;

285 
	`ù_w¨nög
(( "icmp_frag_ass() called" ));

286 
	`bf_a‰ì
(
∑ck
);

287 
	}
}

289 
PUBLIC
 
	$icmp_gë√tmask
(
ù_p‹t
)

290 
ù_p‹t
;

292 
ù_p‹t_t
 *
p‹t
;

294 #i‡
DEBUG
 & 256

295 { 
	`whîe
(); 
	`¥ötf
("icmp.c: icmp_gë√tmask(ù_p‹t%d)\n", 
ù_p‹t
); }

297 
p‹t
&
ù_p‹t_èbÀ
[
ù_p‹t
];

298 #i‡
DEBUG
 & 2

299 { 
	`whîe
(); 
	`¥ötf
 ("icmp_getnetmask() NOT implemented\n"); }

302 
p‹t
->
ù_√tmask

	`HTONL
(0xffffff00L);

303 
p‹t
->
ù_Êags
 |
IPF_NETMASKSET
;

304 #i‡
DEBUG
 & 256

305 { 
	`whîe
(); 
	`¥ötf
("icmp.c: settingÇetmaskÅo ");

306 
	`wrôeIpAddr
(
p‹t
->
ù_√tmask
); 
	`¥ötf
("\n"); }

308 
	}
}

310 
PUBLIC
 
	$icmp_d⁄t_‰ag
(
∑ck
)

311 
acc_t
 *
∑ck
;

313 
	`¥ötf
 ("icmp_dont_frag() called\n");

314 
	`bf_a‰ì
(
∑ck
);

315 
	}
}

317 
PUBLIC
 
	$icmp_âl_ex˚ded
(
∑ck
)

318 
acc_t
 *
∑ck
;

320 
	`¥ötf
 ("icmp_ttl_execeded() called\n");

321 
	`bf_a‰ì
(
∑ck
);

322 
	}
}

324 
PRIVATE
 
	$¥o˚ss_d©a
(
icmp_p‹t
, 
d©a
)

325 
icmp_p‹t_t
 *
icmp_p‹t
;

326 
acc_t
 *
d©a
;

328 
ù_hdr_t
 *
ù_hdr
;

329 
icmp_hdr_t
 *
icmp_hdr
;

330 
acc_t
 *
icmp_d©a
;

331 
ù_hdr_Àn
;

332 
size_t
 
∑ck_Àn
;

334 #i‡
DEBUG
 & 256

335 { 
	`whîe
(); 
	`¥ötf
("gotán icmpÖacket\n"); }

337 
d©a

	`bf_∑ckIffLess
(d©a, 
IP_MIN_HDR_SIZE
);

338 
ù_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
d©a
);

339 
ù_hdr_Àn
(
ù_hdr
->
ih_vîs_ihl
 & 
IH_IHL_MASK
) << 2;

341 i‡(
ù_hdr_Àn
>
IP_MIN_HDR_SIZE
)

343 
d©a

	`bf_∑ckIffLess
(d©a, 
ù_hdr_Àn
);

344 
ù_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
d©a
);

347 
∑ck_Àn

	`bf_bufsize
(
d©a
);

348 
∑ck_Àn
 -
ù_hdr_Àn
;

349 i‡(
∑ck_Àn
 < 
ICMP_MIN_HDR_LEN
)

351 #i‡
DEBUG


352 { 
	`whîe
(); 
	`¥ötf
("gotán incomplete icmpÖacket\n"); }

354 
	`bf_a‰ì
(
d©a
);

358 
icmp_d©a

	`bf_cut
(
d©a
, 
ù_hdr_Àn
, 
∑ck_Àn
);

360 
icmp_d©a

	`bf_∑ckIffLess
 (icmp_d©a, 
ICMP_MIN_HDR_LEN
);

361 
icmp_hdr
(
icmp_hdr_t
 *)
	`±r2acc_d©a
(
icmp_d©a
);

364 i‡((
u16_t
)~
	`icmp_∑ck_⁄eCsum
(
icmp_d©a
))

366 #i‡
DEBUG


367 { 
	`whîe
(); 
	`¥ötf
("gotÖacket with bad checksum (= 0x%x)\n",

368 (
u16_t
)~
	`icmp_∑ck_⁄eCsum
(
icmp_d©a
)); }

370 
	`bf_a‰ì
(
d©a
);

371 
	`bf_a‰ì
(
icmp_d©a
);

374 
icmp_hdr
->
ih_ty≥
)

376 
ICMP_TYPE_ECHO_REPL
:

377 #i‡
DEBUG


378 { 
	`whîe
(); 
	`¥ötf
("gotán icmpÉchoÑeply\n"); }

381 
ICMP_TYPE_DST_UNRCH
:

382 
	`icmp_d°_uƒóch
 (
icmp_p‹t
, 
d©a
, 
ù_hdr_Àn
, 
ù_hdr
,

383 
icmp_d©a
, 
∑ck_Àn
, 
icmp_hdr
);

385 
ICMP_TYPE_REDIRECT
:

386 
	`icmp_ªdúe˘
 (
icmp_p‹t
, 
ù_hdr
, 
icmp_d©a
, 
∑ck_Àn
,

387 
icmp_hdr
);

389 
ICMP_TYPE_ECHO_REQ
:

390 
	`icmp_echo_ªque°
(
icmp_p‹t
, 
d©a
, 
ù_hdr_Àn
, 
ù_hdr
,

391 
icmp_d©a
, 
∑ck_Àn
, 
icmp_hdr
);

393 
ICMP_TYPE_ROUTER_ADVER
:

394 
	`icmp_rouãr_advîti£mít
(
icmp_p‹t
, 
icmp_d©a
, 
∑ck_Àn
,

395 
icmp_hdr
);

397 
ICMP_TYPE_TIME_EXCEEDED
:

398 
	`icmp_time_ex˚eded
 (
icmp_p‹t
, 
d©a
, 
ù_hdr_Àn
, 
ù_hdr
,

399 
icmp_d©a
, 
∑ck_Àn
, 
icmp_hdr
);

402 #i‡
DEBUG


403 { 
	`whîe
(); 
	`¥ötf
("gŸá¿unknow¿icm∞(%dË‰om ", 
icmp_hdr
->
ih_ty≥
);

404 
	`wrôeIpAddr
(
ù_hdr
->
ih_§c
); 
	`¥ötf
("\n"); }

408 
	`bf_a‰ì
(
d©a
);

409 
	`bf_a‰ì
(
icmp_d©a
);

410 
	}
}

412 
PRIVATE
 
	$icmp_echo_ªque°
(
icmp_p‹t
, 
ù_d©a
, 
ù_Àn
, 
ù_hdr
,

413 
icmp_d©a
, 
icmp_Àn
, 
icmp_hdr
)

414 
icmp_p‹t_t
 *
icmp_p‹t
;

415 
acc_t
 *
ù_d©a
, *
icmp_d©a
;

416 
ù_Àn
, 
icmp_Àn
;

417 
ù_hdr_t
 *
ù_hdr
;

418 
icmp_hdr_t
 *
icmp_hdr
;

420 
acc_t
 *
ª∂_ù_hdr
, *
ª∂_icmp
;

421 
icmp_hdr_t
 *
ª∂_icmp_hdr
;

422 
u32_t
 
tmp_chksum
;

423 
u16_t
 
u16
;

425 i‡(
icmp_hdr
->
ih_code
 != 0)

427 #i‡
DEBUG


428 { 
	`whîe
(); 
	`¥ötf
("gotán icmpÉchoÑequest with unknown code (%d)\n",

429 
icmp_hdr
->
ih_code
); }

431 
	`bf_a‰ì
(
ù_d©a
);

432 
	`bf_a‰ì
(
icmp_d©a
);

435 i‡(
icmp_Àn
 < 
ICMP_MIN_HDR_LEN
 + (
icmp_id_£q_t
))

437 #i‡
DEBUG


438 { 
	`whîe
(); 
	`¥ötf
("gotán incomplete icmpÉchoÑequest\n"); }

440 
	`bf_a‰ì
(
ù_d©a
);

441 
	`bf_a‰ì
(
icmp_d©a
);

444 #i‡
DEBUG
 & 256

445 { 
	`whîe
(); 
	`¥ötf
("gotán icmpÉchoÑequest, ident= %u, seq= %u\n",

446 
	`¡ohs
(
icmp_hdr
->
ih_hun
.
ihh_id£q
.
iis_id
),

447 
	`¡ohs
(
icmp_hdr
->
ih_hun
.
ihh_id£q
.
iis_£q
)); }

449 
ª∂_ù_hdr

	`make_ª∂_ù
(
ù_hdr
, 
ù_Àn
);

450 
ª∂_icmp

	`bf_memªq
 (
ICMP_MIN_HDR_LEN
);

451 
	`as£π
 (
ª∂_icmp
->
acc_Àngth
 =
ICMP_MIN_HDR_LEN
);

452 
ª∂_icmp_hdr
(
icmp_hdr_t
 *)
	`±r2acc_d©a
(
ª∂_icmp
);

453 
ª∂_icmp_hdr
->
ih_ty≥

ICMP_TYPE_ECHO_REPL
;

454 
ª∂_icmp_hdr
->
ih_code
= 0;

456 
tmp_chksum
~
icmp_hdr
->
ih_chksum
 - *(
u16_t
 *)&icmp_hdr->
ih_ty≥
+

457 *(
u16_t
 *)&
ª∂_icmp_hdr
->
ih_ty≥
;

458 
tmp_chksum
= (tmp_chksum >> 16) + (tmp_chksum & 0xffff);

459 
tmp_chksum
= (tmp_chksum >> 16) + (tmp_chksum & 0xffff);

460 
ª∂_icmp_hdr
->
ih_chksum
~
tmp_chksum
;

462 
ª∂_ù_hdr
->
acc_√xt

ª∂_icmp
;

463 
ª∂_icmp
->
acc_√xt

	`bf_cut
 (
icmp_d©a
, 
ICMP_MIN_HDR_LEN
,

464 
icmp_Àn
 - 
ICMP_MIN_HDR_LEN
);

466 
	`bf_a‰ì
(
ù_d©a
);

467 
	`bf_a‰ì
(
icmp_d©a
);

469 
	`íqueue_∑ck
(
icmp_p‹t
, 
ª∂_ù_hdr
);

470 
	}
}

472 
PRIVATE
 
u16_t
 
	$icmp_∑ck_⁄eCsum
(
icmp_∑ck
)

473 
acc_t
 *
icmp_∑ck
;

475 
u16_t
 
¥ev
;

476 
odd_byã
;

477 *
d©a_±r
;

478 
Àngth
;

479 
byã_buf
[2];

481 
	`as£π
 (
icmp_∑ck
);

483 
¥ev
= 0;

485 
odd_byã

FALSE
;

486 ; 
icmp_∑ck
; icmp_∑ckicmp_∑ck->
acc_√xt
)

489 
d©a_±r

	`±r2acc_d©a
(
icmp_∑ck
);

490 
Àngth

icmp_∑ck
->
acc_Àngth
;

492 i‡(!
Àngth
)

494 i‡(
odd_byã
)

496 
byã_buf
[1]*
d©a_±r
;

497 
¥ev

	`⁄eC_sum
’ªv, (
u16_t
 *)
byã_buf
, 2);

498 
d©a_±r
++;

499 
Àngth
--;

500 
odd_byã

FALSE
;

502 i‡(
Àngth
 & 1)

504 
odd_byã

TRUE
;

505 
Àngth
--;

506 
byã_buf
[0]
d©a_±r
[
Àngth
];

508 i‡(!
Àngth
)

510 
¥ev

	`⁄eC_sum
 (¥ev, (
u16_t
 *)
d©a_±r
, 
Àngth
);

512 i‡(
odd_byã
)

513 
¥ev

	`⁄eC_sum
 (¥ev, (
u16_t
 *)
byã_buf
, 1);

514  
¥ev
;

515 
	}
}

517 
PRIVATE
 
acc_t
 *
	$make_ª∂_ù
(
ù_hdr
, 
ù_Àn
)

518 
ù_hdr_t
 *
ù_hdr
;

519 
ù_Àn
;

521 
ù_hdr_t
 *
ª∂_ù_hdr
;

522 
acc_t
 *
ª∂
;

523 
ª∂_hdr_Àn
;

525 i‡(
ù_Àn
>
IP_MIN_HDR_SIZE
)

527 #i‡
DEBUG


528 { 
	`whîe
(); 
	`¥ötf
("ip_hdr options NOT supported (yet?)\n"); }

530 
ù_Àn

IP_MIN_HDR_SIZE
;

533 
ª∂_hdr_Àn

IP_MIN_HDR_SIZE
;

535 
ª∂

	`bf_memªq
(
ª∂_hdr_Àn
);

536 
	`as£π
 (
ª∂
->
acc_Àngth
 =
ª∂_hdr_Àn
);

538 
ª∂_ù_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
ª∂
);

540 
ª∂_ù_hdr
->
ih_vîs_ihl

ª∂_hdr_Àn
 >> 2;

541 
ª∂_ù_hdr
->
ih_tos

ù_hdr
->ih_tos;

542 
ª∂_ù_hdr
->
ih_âl

ICMP_DEF_TTL
;

543 
ª∂_ù_hdr
->
ih_¥Ÿo

IPPROTO_ICMP
;

544 
ª∂_ù_hdr
->
ih_d°

ù_hdr
->
ih_§c
;

545 
ª∂_ù_hdr
->
ih_Êags_‰agoff
= 0;

547  
ª∂
;

548 
	}
}

550 
PRIVATE
 
	$íqueue_∑ck
(
icmp_p‹t
, 
ª∂y_ù_hdr
)

551 
icmp_p‹t_t
 *
icmp_p‹t
;

552 
acc_t
 *
ª∂y_ù_hdr
;

554 
ª∂y_ù_hdr
->
acc_ext_lök
= 0;

556 i‡(
icmp_p‹t
->
i˝_hód_queue
)

558 
icmp_p‹t
->
i˝_èû_queue
->
acc_ext_lök
=

559 
ª∂y_ù_hdr
;

563 
icmp_p‹t
->
i˝_hód_queue

ª∂y_ù_hdr
;

564 
icmp_p‹t
->
i˝_èû_queue

ª∂y_ù_hdr
;

567 i‡(!(
icmp_p‹t
->
i˝_Êags
 & 
ICPF_WRITE_IP
))

568 
	`icmp_wrôe
(
icmp_p‹t
);

569 
	}
}

571 
PRIVATE
 
	$icmp_wrôe
(
icmp_p‹t
)

572 
icmp_p‹t_t
 *
icmp_p‹t
;

574 
ªsu…
;

576 
	`as£π
 (!(
icmp_p‹t
->
i˝_Êags
 & (
ICPF_WRITE_IP
|
ICPF_WRITE_SP
) ||

577 (
icmp_p‹t
->
i˝_Êags
 & (
ICPF_WRITE_IP
|
ICPF_WRITE_SP
)) ==

578 (
ICPF_WRITE_IP
|
ICPF_WRITE_SP
)));

580 ;
icmp_p‹t
->
i˝_hód_queue
;)

582 
icmp_p‹t
->
i˝_wrôe_∑ck
icmp_p‹t->
i˝_hód_queue
;

583 
icmp_p‹t
->
i˝_hód_queue
= icmp_port->icp_head_queue->

584 
acc_ext_lök
;

586 
icmp_p‹t
->
i˝_Êags
 |
ICPF_WRITE_IP
;

587 
icmp_p‹t
->
i˝_Êags
 &~
ICPF_WRITE_SP
;

589 #i‡
DEBUG
 & 256

590 { 
	`whîe
(); 
	`¥ötf
("calling ip_write\n"); }

592 
ªsu…

	`ù_wrôe
(
icmp_p‹t
->
i˝_ùfd
,

593 
	`bf_bufsize
(
icmp_p‹t
->
i˝_wrôe_∑ck
));

594 i‡(
ªsu…
 =
NW_SUSPEND
)

596 #i‡
DEBUG
 & 256

597 { 
	`whîe
(); 
	`¥ötf
("ip_writeÑeplied NW_SUSPEND\n"); }

599 
icmp_p‹t
->
i˝_Êags
 |
ICPF_WRITE_SP
;

602 #i‡
DEBUG
 & 256

603 { 
	`whîe
(); 
	`¥ötf
("ip_write done\n"); }

606 
icmp_p‹t
->
i˝_Êags
 &~
ICPF_WRITE_IP
;

607 
	}
}

609 
PRIVATE
 
	$icmp_buf‰ì
(
¥i‹ôy
, 
ªqsize
)

610 
¥i‹ôy
;

611 
size_t
 
ªqsize
;

613 
acc_t
 *
tmp_acc
;

614 
d⁄esomëhög
,
i
;

615 
icmp_p‹t_t
 *
icmp_p‹t
;

617 
d⁄esomëhög
= 0;

619 i‡(
¥i‹ôy
 < 
ICMP_PRI_QUEUE
)

622 
bf_‰ì_buffsize
 < 
ªqsize
)

624 
i
=0, 
icmp_p‹t

icmp_p‹t_èbÀ
; i<
ICMP_PORT_NR
;

625 
i
++, 
icmp_p‹t
++)

627 i‡(
icmp_p‹t
->
i˝_hód_queue
)

629 
tmp_acc

icmp_p‹t
->
i˝_hód_queue
;

630 
icmp_p‹t
->
i˝_hód_queue

tmp_acc
->

631 
acc_ext_lök
;

632 
	`bf_a‰ì
(
tmp_acc
);

633 i‡(
bf_‰ì_buffsize
 >
ªqsize
)

635 
d⁄esomëhög
= 1;

638 i‡(!
d⁄esomëhög
)

641 
	}
}

643 
	$icmp_d°_uƒóch
(
icmp_p‹t
, 
ù_∑ck
, 
ù_hdr_Àn
, 
ù_hdr
, 
icmp_∑ck
,

644 
icmp_Àn
, 
icmp_hdr
)

645 
icmp_p‹t_t
 *
icmp_p‹t
;

646 
acc_t
 *
ù_∑ck
;

647 
ù_hdr_Àn
;

648 
ù_hdr_t
 *
ù_hdr
;

649 
acc_t
 *
icmp_∑ck
;

650 
icmp_Àn
;

651 
icmp_hdr_t
 *
icmp_hdr
;

653 
acc_t
 *
ﬁd_ù_∑ck
;

654 
ù_hdr_t
 *
ﬁd_ù_hdr
;

656 i‡(
icmp_Àn
 < 8 + 
IP_MIN_HDR_SIZE
)

658 #i‡
DEBUG


659 { 
	`whîe
(); 
	`¥ötf
("dest unrch with wrong size\n"); }

663 
ﬁd_ù_∑ck

	`bf_cut
 (
icmp_∑ck
, 8, 
icmp_Àn
-8);

664 
ﬁd_ù_∑ck

	`bf_∑ckIffLess
(ﬁd_ù_∑ck, 
IP_MIN_HDR_SIZE
);

665 
ﬁd_ù_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
ﬁd_ù_∑ck
);

667 i‡(
ﬁd_ù_hdr
->
ih_§c
 !
ù_hdr
->
ih_d°
)

669 #i‡
DEBUG


670 { 
	`whîe
(); 
	`¥ötf
("dest unrch based on wrongÖacket\n"); }

672 
	`bf_a‰ì
(
ﬁd_ù_∑ck
);

676 
icmp_hdr
->
ih_code
)

678 
ICMP_NET_UNRCH
:

679 
	`ùr_de°uƒch
 (
ﬁd_ù_hdr
->
ih_d°
,

680 
	`ù_gë_√tmask
(
ﬁd_ù_hdr
->
ih_d°
), 
IPR_UNRCH_TIMEOUT
);

682 
ICMP_HOST_UNRCH
:

683 
	`ùr_de°uƒch
 (
ﬁd_ù_hdr
->
ih_d°
, (
ùaddr_t
)-1,

684 
IPR_UNRCH_TIMEOUT
);

687 #i‡
DEBUG


688 { 
	`whîe
(); 
	`¥ötf
("gŸ så™gêcode: %d\n", 
icmp_hdr
->
ih_code
); }

692 
	`bf_a‰ì
(
ﬁd_ù_∑ck
);

693 
	}
}

695 
	$icmp_time_ex˚eded
(
icmp_p‹t
, 
ù_∑ck
, 
ù_hdr_Àn
, 
ù_hdr
,

696 
icmp_∑ck
, 
icmp_Àn
, 
icmp_hdr
)

697 
icmp_p‹t_t
 *
icmp_p‹t
;

698 
acc_t
 *
ù_∑ck
;

699 
ù_hdr_Àn
;

700 
ù_hdr_t
 *
ù_hdr
;

701 
acc_t
 *
icmp_∑ck
;

702 
icmp_Àn
;

703 
icmp_hdr_t
 *
icmp_hdr
;

705 
acc_t
 *
ﬁd_ù_∑ck
;

706 
ù_hdr_t
 *
ﬁd_ù_hdr
;

708 i‡(
icmp_Àn
 < 8 + 
IP_MIN_HDR_SIZE
)

710 #i‡
DEBUG


711 { 
	`whîe
(); 
	`¥ötf
("timeÉxceeded with wrong size\n"); }

715 
ﬁd_ù_∑ck

	`bf_cut
 (
icmp_∑ck
, 8, 
icmp_Àn
-8);

716 
ﬁd_ù_∑ck

	`bf_∑ckIffLess
(ﬁd_ù_∑ck, 
IP_MIN_HDR_SIZE
);

717 
ﬁd_ù_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
ﬁd_ù_∑ck
);

719 i‡(
ﬁd_ù_hdr
->
ih_§c
 !
ù_hdr
->
ih_d°
)

721 #i‡
DEBUG


722 { 
	`whîe
(); 
	`¥ötf
("timeÉxceeded based on wrongÖacket\n"); }

724 
	`bf_a‰ì
(
ﬁd_ù_∑ck
);

728 
icmp_hdr
->
ih_code
)

730 
ICMP_TTL_EXC
:

731 
	`ùr_âl_exc
 (
ﬁd_ù_hdr
->
ih_d°
, (
ùaddr_t
)-1,

732 
IPR_TTL_TIMEOUT
);

735 
	`whîe
();

736 
	`¥ötf
("gŸ så™gêcode: %d\n", 
icmp_hdr
->
ih_code
);

739 
	`bf_a‰ì
(
ﬁd_ù_∑ck
);

740 
	}
}

742 
	$icmp_rouãr_advîti£mít
(
icmp_p‹t
, 
icmp_∑ck
, 
icmp_Àn
, 
icmp_hdr
)

743 
icmp_p‹t_t
 *
icmp_p‹t
;

744 
acc_t
 *
icmp_∑ck
;

745 
icmp_Àn
;

746 
icmp_hdr_t
 *
icmp_hdr
;

748 
íåõs
;

749 
íåy_size
;

750 
u16_t
 
li„time
;

751 
i
;

752 *
buÂ
;

754 i‡(
icmp_Àn
 < 8)

756 #i‡
DEBUG


757 { 
	`whîe
(); 
	`¥ötf
("rouã∏advîti£míàwôh wr⁄g sizê(%d)\n", 
icmp_Àn
); }

761 i‡(
icmp_hdr
->
ih_code
 != 0)

763 #i‡
DEBUG


764 { 
	`whîe
(); 
	`¥ötf
("routerádvertisement with wrong code (%d)\n",

765 
icmp_hdr
->
ih_code
); }

769 
íåõs

icmp_hdr
->
ih_hun
.
ihh_øm
.
úam_«
;

770 
íåy_size

icmp_hdr
->
ih_hun
.
ihh_øm
.
úam_´s
 * 4;

771 i‡(
íåõs
 < 1)

773 #i‡
DEBUG


774 { 
	`whîe
(); 
	`¥ötf
("routerádvertisement with wrongÇumber ofÉntries (%d)\n",

775 
íåõs
); }

779 i‡(
íåy_size
 < 8)

781 #i‡
DEBUG


782 { 
	`whîe
(); 
	`¥ötf
("routerádvertisement with wrongÉntry size (%d)\n",

783 
íåy_size
); }

787 i‡(
icmp_Àn
 < 8 + 
íåõs
 * 
íåy_size
)

789 #i‡
DEBUG


790 { 
	`whîe
(); 
	`¥ötf
("routerádvertisement with wrong size\n");

791 
	`¥ötf
("\t”¡rõs%d,É¡ry_size%d, icmp_Àn%d)\n", 
íåõs
,

792 
íåy_size
, 
icmp_Àn
); }

796 
li„time

	`¡ohs
(
icmp_hdr
->
ih_hun
.
ihh_øm
.
úam_…
);

797 i‡(
li„time
 > 9000)

799 #i‡
DEBUG


800 { 
	`whîe
(); 
	`¥ötf
("routerádvertisement with wrongÜifetime (%d)\n",

801 
li„time
); }

805 
i
0, 
buÂ
(*)&
icmp_hdr
->
ih_dun
.
uhd_d©a
[0]; i< 
íåõs
; i++,

806 
buÂ
 +
íåy_size
)

808 
	`ùr_add_rouã
(
	`HTONL
(0L), HTONL(0L), *(
ùaddr_t
 *)
buÂ
,

809 
icmp_p‹t
->
i˝_ùp‹t
, 
li„time
 * 
HZ
, 1, 0,

810 
	`¡ohl
(*(
i32_t
 *)(
buÂ
+4)));

812 
	}
}

814 
	$icmp_ªdúe˘
(
icmp_p‹t
, 
ù_hdr
, 
icmp_∑ck
, 
icmp_Àn
, 
icmp_hdr
)

815 
icmp_p‹t_t
 *
icmp_p‹t
;

816 
ù_hdr_t
 *
ù_hdr
;

817 
acc_t
 *
icmp_∑ck
;

818 
icmp_Àn
;

819 
icmp_hdr_t
 *
icmp_hdr
;

821 
acc_t
 *
ﬁd_ù_∑ck
;

822 
ù_hdr_t
 *
ﬁd_ù_hdr
;

823 
p‹t
;

825 i‡(
icmp_Àn
 < 8 + 
IP_MIN_HDR_SIZE
)

827 #i‡
DEBUG


828 { 
	`whîe
(); 
	`¥ötf
("redirect with wrong size\n"); }

832 
ﬁd_ù_∑ck

	`bf_cut
 (
icmp_∑ck
, 8, 
icmp_Àn
-8);

833 
ﬁd_ù_∑ck

	`bf_∑ckIffLess
(ﬁd_ù_∑ck, 
IP_MIN_HDR_SIZE
);

834 
ﬁd_ù_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
ﬁd_ù_∑ck
);

836 
p‹t

icmp_p‹t
->
i˝_ùp‹t
;

838 
icmp_hdr
->
ih_code
)

840 
ICMP_REDIRECT_NET
:

841 
	`ùr_ªdúe˘
 (
ﬁd_ù_hdr
->
ih_d°
,

842 
	`ù_gë_√tmask
(
ﬁd_ù_hdr
->
ih_d°
),

843 
ù_hdr
->
ih_§c
, 
icmp_hdr
->
ih_hun
.
ihh_g©eway
, 
p‹t
,

844 
IPR_REDIRECT_TIMEOUT
);

846 
ICMP_REDIRECT_HOST
:

847 
	`ùr_ªdúe˘
 (
ﬁd_ù_hdr
->
ih_d°
, (
ùaddr_t
)-1,

848 
ù_hdr
->
ih_§c
, 
icmp_hdr
->
ih_hun
.
ihh_g©eway
, 
p‹t
,

849 
IPR_REDIRECT_TIMEOUT
);

852 
	`whîe
();

853 
	`¥ötf
("gŸ så™gêcode: %d\n", 
icmp_hdr
->
ih_code
);

856 
	`bf_a‰ì
(
ﬁd_ù_∑ck
);

857 
	}
}

	@icmp.h

5 #i‚de‡
ICMP_H


6 
	#ICMP_H


	)

8 
	#ICMP_MAX_DATAGRAM
 8196

	)

9 
	#ICMP_DEF_TTL
 60

	)

13 
icmp_öô
 
ARGS
(( ));

	@icmp_lib.h

7 #i‚de‡
ICMP_LIB_H


8 
	#ICMP_LIB_H


	)

12 
icmp_gë√tmask
 
ARGS
(–
ù_p‹t
 ));

13 
icmp_∑rm¥obÀm
 
ARGS
(–
acc_t
 *
∑ck
 ));

14 
icmp_‰ag_ass_tim
 
ARGS
(–
acc_t
 *
∑ck
 ));

15 
icmp_d⁄t_‰ag
 
ARGS
(–
acc_t
 *
∑ck
 ));

16 
icmp_âl_ex˚ded
 
ARGS
(–
acc_t
 *
∑ck
 ));

	@icompute.c

6 
	~"loc_ö˛.h
"

11 
	$_i_compuã
(
vÆ
, 
ba£
, *
s
, 
ƒdigôs
)

13 
c
;

15 
c

vÆ
 % 
ba£
 ;

16 
vÆ
 /
ba£
 ;

17 i‡(
vÆ
 || 
ƒdigôs
 > 1)

18 
s
 = 
	`_i_compuã
(
vÆ
, 
ba£
, s, 
ƒdigôs
 - 1);

19 *
s
++ = (
c
>9 ? c-10+'a' : c+'0');

20  
s
;

21 
	}
}

	@image.h

4 
	#IM_NAME_MAX
 63

	)

6 
	simage_hódî
 {

7 
	m«me
[
IM_NAME_MAX
 + 1];

8 
exec
 
	m¥o˚ss
;

	@index.c

1 
	~<lib.h
>

4 
	~<°rög.h
>

6 *
	$ödex
(
s
, 
ch¨w™ãd
)

7 
_CONST
 *
s
;

8 
ch¨w™ãd
;

10 (
	`°rchr
(
s
, 
ch¨w™ãd
));

11 
	}
}

	@inet.c

43 
	~"öë.h
"

44 
	~<uni°d.h
>

45 
	~"mq.h
"

46 
	~"¥Ÿo.h
"

47 
	~"gíîic/as£π.h
"

48 
	~"gíîic/¨p.h
"

49 
	~"gíîic/buf.h
"

50 
	~"gíîic/˛ock.h
"

51 
	~"gíîic/ëh.h
"

52 
	~"gíîic/ù.h
"

53 
	~"gíîic/§.h
"

54 
	~"gíîic/t˝.h
"

55 
	~"gíîic/ty≥.h
"

56 
	~"gíîic/udp.h
"

57 
	~"c⁄fig.h
"

59 
INIT_PANIC
();

61 
_PROTOTYPE
–
maö
, () );

63 
FORWARD
 
_PROTOTYPE
–
nw_öô
, () );

65 
PUBLIC
 
	$maö
()

67 
mq_t
 *
mq
;

68 
ªsu…
;

70 
	`nw_öô
();

71 
TRUE
)

73 
mq

	`mq_gë
();

74 i‡(!
mq
)

75 
	`ù_∑nic
(("out of messages"));

77 
ªsu…

	`ª˚ive
 (
ANY
, &
mq
->
mq_mess
);

78 i‡(
ªsu…
<0)

80 
	`ù_∑nic
(("u«bÀÅÿª˚ive: %d", 
ªsu…
));

82 
	`ª£t_time
();

83 #i‡
DEBUG
 & 256

84 { 
	`whîe
(); 
	`¥ötf
("got message from %d,Åype %d\n",

85 
mq
->
mq_mess
.
m_sour˚
, mq->mq_mess.
m_ty≥
); }

87 
mq
->
mq_mess
.
m_sour˚
)

89 
FS_PROC_NR
:

90 #i‡
DEBUG
 & 256

91 { 
	`whîe
(); 
	`¥ötf
("gŸ mesßgê‰om fs,Åy≥ %d\n", 
mq
->
mq_mess
.
m_ty≥
); }

93 
	`§_ªc
(
mq
);

95 
DL_ETH
:

96 #i‡
DEBUG
 & 256

97 { 
	`whîe
(); 
	`¥ötf
("callingÉth_rec\n"); }

99 
	`ëh_ªc
(&
mq
->
mq_mess
);

100 
	`mq_‰ì
(
mq
);

102 
SYN_ALRM_TASK
:

103 
	`˛ck_tick
 (&
mq
->
mq_mess
);

104 
	`mq_‰ì
(
mq
);

107 
	`ù_∑nic
(("message from unknown source: %d",

108 
mq
->
mq_mess
.
m_sour˚
));

111 
	`ù_∑nic
(("task isÇotállowedÅoÅerminate"));

112 
	}
}

114 
PRIVATE
 
	$nw_öô
()

116 #i‡
DEBUG
 & 256

117 { 
	`whîe
(); 
	`¥ötf
("starting mq_init()\n"); }

119 
	`mq_öô
();

120 #i‡
DEBUG
 & 256

121 { 
	`whîe
(); 
	`¥ötf
("starting bf_init()\n"); }

123 
	`bf_öô
();

124 #i‡
DEBUG
 & 256

125 { 
	`whîe
(); 
	`¥ötf
("starting clck_init()\n"); }

127 
	`˛ck_öô
();

128 #i‡
DEBUG
 & 256

129 { 
	`whîe
(); 
	`¥ötf
("starting sr_init()\n"); }

131 
	`§_öô
();

132 #i‡
DEBUG
 & 256

133 { 
	`whîe
(); 
	`¥ötf
("startingÉth_init()\n"); }

135 
	`ëh_öô
();

136 #i‡
DEBUG
 & 256

137 { 
	`whîe
(); 
	`¥ötf
("startingárp_init()\n"); }

139 #i‡
ENABLE_ARP


140 
	`¨p_öô
();

142 #i‡
DEBUG
 & 256

143 { 
	`whîe
(); 
	`¥ötf
("starting ip_init()\n"); }

145 #i‡
ENABLE_IP


146 
	`ù_öô
();

148 #i‡
DEBUG
 & 256

149 { 
	`whîe
(); 
	`¥ötf
("startingÅcp_init()\n"); }

151 #i‡
ENABLE_TCP


152 
	`t˝_öô
();

154 #i‡
DEBUG
 & 256

155 { 
	`whîe
(); 
	`¥ötf
("starting udp_init()\n"); }

157 #i‡
ENABLE_UDP


158 
	`udp_öô
();

160 
	}
}

162 
	$ab‹t
()

164 
	`sys_ab‹t
(
RBT_PANIC
);

165 
	}
}

	@inet.h

7 #i‚de‡
INET__NW_TASK_H


8 
	#INET__NW_TASK_H


	)

10 
	#_MINIX
 1

	)

11 
	#_SYSTEM
 1

	)

13 
	~<sys/ty≥s.h
>

14 
	~<î∫o.h
>

15 
	~<°ddef.h
>

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

19 
	~<™si.h
>

20 
	~<möix/c⁄fig.h
>

21 
	~<möix/ty≥.h
>

23 
	~<möix/com.h
>

24 
	~<möix/c⁄°.h
>

25 
	~<möix/sy¶ib.h
>

26 
	~<√t/ht⁄.h
>

27 
	~<√t/gí/ëhî.h
>

28 
	~<√t/gí/ëh_hdr.h
>

29 
	~<√t/gí/ëh_io.h
>

30 
	~<√t/gí/ö.h
>

31 
	~<√t/gí/ù_hdr.h
>

32 
	~<√t/gí/ù_io.h
>

33 
	~<√t/gí/icmp.h
>

34 
	~<√t/gí/icmp_hdr.h
>

35 
	~<√t/gí/⁄eCsum.h
>

36 
	~<√t/gí/rouã.h
>

37 
	~<√t/gí/t˝.h
>

38 
	~<√t/gí/t˝_hdr.h
>

39 
	~<√t/gí/t˝_io.h
>

40 
	~<√t/gí/udp.h
>

41 
	~<√t/gí/udp_hdr.h
>

42 
	~<√t/gí/udp_io.h
>

43 
	~<sys/io˘l.h
>

46 #ifde‡
_IOCTYPE_MASK


47 
	#IOCTYPE_MASK
 
_IOCTYPE_MASK


	)

48 
	#IOCPARM_MASK
 
_IOCPARM_MASK


	)

50 
	#IOCTYPE_MASK
 0xFFFF

	)

53 
	~"c⁄°.h
"

55 
	#PUBLIC


	)

56 
	#EXTERN
 

	)

57 
	#PRIVATE
 

	)

58 
	#FORWARD
 

	)

60 
	#INIT_PANIC
(Ë*
ù_∑nic_w¨nög_fûe

__FILE__


	)

62 
	#ù_∑nic
(
¥öt_li°
Ë\

	)

64 
¥ötf
("∑ni¯© %s, %d: ", 
ù_∑nic_w¨nög_fûe
, 
__LINE__
), \

65 
¥ötf
 
¥öt_li°
, \

66 
¥ötf
("\n"), \

67 
ab‹t
(), \

71 
	#ù_w¨nög
(
¥öt_li°
Ë\

	)

73 
¥ötf
("w¨nögáà%s, %d: ", 
ù_∑nic_w¨nög_fûe
, \

74 
__LINE__
), \

75 
¥ötf
 
¥öt_li°
, \

76 
¥ötf
("\n"), \

80 #i‡
_ANSI


81 
	#ARGS
(
x
Ë
	)
x

83 
	#ARGS
(
x
Ë()

	)

	@inet_addr.c

20 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

21 
	gsccsid
[] = "@(#)inet_addr.c 5.8 (Berkeley) 6/23/90";

24 #i‡
_MINIX


25 
	~<sys/ty≥s.h
>

26 
	~<˘y≥.h
>

27 
	~<î∫o.h
>

29 
	~<√t/ht⁄.h
>

30 
	~<√t/gí/ö.h
>

31 
	~<√t/gí/öë.h
>

34 #ifde‡
__STDC__


35 
	#_CONST
 c⁄°

	)

37 
	#_CONST


	)

44 
ùaddr_t


45 
	$öë_addr
(
˝
)

46 
_CONST
 *
˝
;

48 
ùaddr_t
 
vÆ
;

50 i‡(
	`öë_©⁄
(
˝
, &
vÆ
))

51  (
vÆ
);

52 
î∫o

EINVAL
;

53  (
ùaddr_t
)-1;

54 
	}
}

65 
	$öë_©⁄
(
˝
, 
addr
)

66 
_CONST
 *
˝
;

67 
ùaddr_t
 *
addr
;

69 
u32_t
 
vÆ
, 
ba£
, 
n
;

70 
c
;

71 
u32_t
 
∑πs
[4], *
µ
 =Öarts;

79 
vÆ
 = 0; 
ba£
 = 10;

80 i‡(*
˝
 == '0') {

81 i‡(*++
˝
 == 'x' || *cp == 'X')

82 
ba£
 = 16, 
˝
++;

84 
ba£
 = 8;

86 (
c
 = *
˝
) != '\0') {

87 i‡(
	`ißscii
(
c
Ë&& 
	`isdigô
(c)) {

88 
vÆ
 = (vÆ * 
ba£
Ë+ (
c
 - '0');

89 
˝
++;

92 i‡(
ba£
 =16 && 
	`ißscii
(
c
Ë&& 
	`isxdigô
(c)) {

93 
vÆ
 = (val << 4) +

94 (
c
 + 10 - (
	`i¶owî
(c) ? 'a' : 'A'));

95 
˝
++;

100 i‡(*
˝
 == '.') {

107 i‡(
µ
 >
∑πs
 + 3 || 
vÆ
 > 0xff)

109 *
µ
++ = 
vÆ
, 
˝
++;

116 i‡(*
˝
 && (!
	`ißscii
(*˝Ë|| !
	`is•a˚
(*cp)))

122 
n
 = 
µ
 - 
∑πs
 + 1;

123 
n
) {

129 i‡(
vÆ
 > 0xffffff)

131 
vÆ
 |
∑πs
[0] << 24;

135 i‡(
vÆ
 > 0xffff)

137 
vÆ
 |(
∑πs
[0] << 24) | (parts[1] << 16);

141 i‡(
vÆ
 > 0xff)

143 
vÆ
 |(
∑πs
[0] << 24) | (parts[1] << 16) | (parts[2] << 8);

146 i‡(
addr
)

147 *
addr
 = 
	`ht⁄l
(
vÆ
);

149 
	}
}

	@inet_ntoa.c

20 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

21 
	gsccsid
[] = "@(#)inet_ntoa.c 5.5 (Berkeley) 6/1/90";

29 
	~<sys/ty≥s.h
>

30 
	~<°dio.h
>

32 
	~<√t/gí/ö.h
>

33 
	~<√t/gí/öë.h
>

36 
	$öë_¡ﬂ
(
ö
)

37 
ùaddr_t
 
ö
;

39 
b
[18];

40 
u8_t
 *
p
;

42 
p
 = (
u8_t
 *)&
ö
;

43 
	`•rötf
(
b
, "%d.%d.%d.%d", 
p
[0],Ö[1],Ö[2],Ö[3]);

44  (
b
);

45 
	}
}

	@init.c

16 
	~<sys/ty≥s.h
>

17 
	~<sys/waô.h
>

18 
	~<sys/°©.h
>

19 
	~<âyít.h
>

20 
	~<î∫o.h
>

21 
	~<f˙é.h
>

22 
	~<limôs.h
>

23 
	~<sig«l.h
>

24 
	~<°rög.h
>

25 
	~<time.h
>

26 
	~<°dlib.h
>

27 
	~<uni°d.h
>

28 
	~<utmp.h
>

31 *
	gREBOOT_CMD
[] = { "shutdown", "now", "CTRL-ALT-DEL", 
NULL
 };

34 
âyít
 
	gTT_REBOOT
 = { "c⁄sﬁe", "-", 
REBOOT_CMD
, 
NULL
 };

36 
	gPATH_UTMP
[] = "/etc/utmp";

37 
	gPATH_WTMP
[] = "/usr/adm/wtmp";

39 
	#PIDSLOTS
 32

	)

41 
	s¶Ÿít
 {

42 
	mîr˘
;

43 
pid_t
 
	mpid
;

46 
	#ERRCT_DISABLE
 10

	)

47 
	#NO_PID
 0

	)

49 
¶Ÿít
 
	g¶Ÿs
[
PIDSLOTS
];

51 
	ggŸhup
 = 0;

52 
	ggŸabπ
 = 0;

53 
	g•awn
 = 1;

55 
ãŒ
(
fd
, *
s
);

56 
ªp‹t
(
fd
, *
œbñ
);

57 
wtmp
(
ty≥
, 
löír
, *
löe
, 
pid_t
 
pid
);

58 
°¨tup
(
löír
, 
âyít
 *
âyp
);

59 
execuã
(**
cmd
);

60 
⁄hup
(
sig
);

61 
⁄ãrm
(
sig
);

62 
⁄abπ
(
sig
);

64 
	$maö
()

66 
pid_t
 
pid
;

67 
fd
;

68 
löír
;

69 
check
;

70 
¶Ÿít
 *
¶Ÿp
;

71 
âyít
 *
âyp
;

72 
siga˘i⁄
 
ß
;

73 
°©
 
°b
;

75 i‡(
	`f°©
(0, &
°b
) < 0) {

77 (Ë
	`›í
("/dev/nuŒ", 
O_RDONLY
);

78 (Ë
	`›í
("/dev/log", 
O_WRONLY
);

79 
	`dup
(1);

82 
	`sigem±y£t
(&
ß
.
ß_mask
);

83 
ß
.
ß_Êags
 = 0;

86 
ß
.
ß_h™dÀr
 = 
⁄hup
;

87 
	`siga˘i⁄
(
SIGHUP
, &
ß
, 
NULL
);

90 
ß
.
ß_h™dÀr
 = 
⁄ãrm
;

91 
	`siga˘i⁄
(
SIGTERM
, &
ß
, 
NULL
);

94 
ß
.
ß_h™dÀr
 = 
⁄abπ
;

95 
	`siga˘i⁄
(
SIGABRT
, &
ß
, 
NULL
);

98 i‡((
pid
 = 
	`f‹k
()) != 0) {

100 
	`waô
(
NULL
Ë!
pid
) {

101 i‡(
gŸabπ
Ë
	`ªboŸ
(
RBT_HALT
);

104 *
rc_comm™d
[] = { "sh", "/ëc/rc", 
NULL
, NULL };

106 #i‡
__möix_vmd


108 
rc_comm™d
[2] = 
	`gëív
("bootopts");

111 
	`˛o£
(0);

112 (Ë
	`›í
("/dev/c⁄sﬁe", 
O_RDONLY
);

115 
	`execuã
(
rc_comm™d
);

116 
	`ªp‹t
(2, "sh /etc/rc");

117 
	`_exô
(1);

121 i‡((
fd
 = 
	`›í
(
PATH_UTMP
, 
O_WRONLY
 | 
O_TRUNC
)Ë>0Ë
	`˛o£
(fd);

124 
	`wtmp
(
BOOT_TIME
, 0, 
NULL
, 0);

133 
check
 = 1;

135 (
pid
 = 
	`waôpid
(-1, 
NULL
, 
check
 ? 
WNOHANG
 : 0)) > 0) {

137 
löír
 = 0;Üöí∏< 
PIDSLOTS
;Üinenr++) {

138 
¶Ÿp
 = &
¶Ÿs
[
löír
];

139 i‡(
¶Ÿp
->
pid
 ==Öid) {

141 
	`wtmp
(
DEAD_PROCESS
, 
löír
, 
NULL
, 
pid
);

142 
¶Ÿp
->
pid
 = 
NO_PID
;

143 
check
 = 1;

149 i‡(
gŸhup
) {

150 
gŸhup
 = 0;

151 
löír
 = 0;Üöí∏< 
PIDSLOTS
;Üinenr++) {

152 
¶Ÿs
[
löír
].
îr˘
 = 0;

154 
check
 = 1;

158 i‡(
gŸabπ
) {

159 
gŸabπ
 = 0;

160 
	`°¨tup
(0, &
TT_REBOOT
);

163 i‡(
•awn
 && 
check
) {

165 
löír
 = 0;Üöí∏< 
PIDSLOTS
;Üinenr++) {

166 
¶Ÿp
 = &
¶Ÿs
[
löír
];

167 i‡((
âyp
 = 
	`gëâyít
()Ë=
NULL
) ;

169 i‡(
âyp
->
ty_gëty
 !
NULL


170 && 
âyp
->
ty_gëty
[0] !
NULL


171 && 
¶Ÿp
->
pid
 =
NO_PID


172 && 
¶Ÿp
->
îr˘
 < 
ERRCT_DISABLE
)

174 
	`°¨tup
(
löír
, 
âyp
);

177 
	`ídâyít
();

179 
check
 = 0;

181 
	}
}

183 
	$⁄hup
(
sig
)

185 
gŸhup
 = 1;

186 
•awn
 = 1;

187 
	}
}

189 
	$⁄ãrm
(
sig
)

191 
•awn
 = 0;

192 
	}
}

194 
	$⁄abπ
(
sig
)

196 
cou¡
;

198 i‡(++
cou¡
 =2Ë
	`ªboŸ
(
RBT_HALT
);

199 
gŸabπ
 = 1;

200 
	}
}

202 
	$°¨tup
(
löír
, 
âyít
 *
âyp
)

206 
¶Ÿít
 *
¶Ÿp
;

207 
pid_t
 
pid
;

208 
îr
[2];

209 
löe
[32];

210 
°©us
;

212 
¶Ÿp
 = &
¶Ÿs
[
löír
];

215 i‡(
	`pùe
(
îr
) < 0)Érr[0] =Érr[1] = -1;

217 i‡((
pid
 = 
	`f‹k
()) == -1 ) {

218 
	`ªp‹t
(2, "fork()");

219 
	`¶ìp
(10);

223 i‡(
pid
 == 0) {

225 
	`˛o£
(
îr
[0]);

226 
	`f˙é
(
îr
[1], 
F_SETFD
, f˙é”º[1], 
F_GETFD
Ë| 
FD_CLOEXEC
);

229 
	`£tsid
();

232 
	`°r˝y
(
löe
, "/dev/");

233 
	`°∫ˇt
(
löe
, 
âyp
->
ty_«me
, (line) - 6);

236 
	`˛o£
(0);

237 
	`˛o£
(1);

238 i‡(
	`›í
(
löe
, 
O_RDWR
Ë< 0 || 
	`dup
(0) < 0) {

239 
	`wrôe
(
îr
[1], &
î∫o
, (errno));

240 
	`_exô
(1);

243 i‡(
âyp
->
ty_öô
 !
NULL
 &&Åtyp->ty_init[0] != NULL) {

246 i‡((
pid
 = 
	`f‹k
()) == -1) {

247 
	`ªp‹t
(2, "fork()");

248 
î∫o
= 0;

249 
	`wrôe
(
îr
[1], &
î∫o
, (errno));

250 
	`_exô
(1);

253 i‡(
pid
 == 0) {

254 
	`Æ¨m
(10);

255 
	`execuã
(
âyp
->
ty_öô
);

256 
	`ªp‹t
(2, 
âyp
->
ty_öô
[0]);

257 
	`_exô
(1);

260 
	`waôpid
(
pid
, &
°©us
, 0) !=Öid) {}

261 i‡(
°©us
 != 0) {

262 
	`ãŒ
(2, "init: ");

263 
	`ãŒ
(2, 
âyp
->
ty_«me
);

264 
	`ãŒ
(2, ": ");

265 
	`ãŒ
(2, 
âyp
->
ty_öô
[0]);

266 
	`ãŒ
(2, ": badÉxit status\n");

267 
î∫o
 = 0;

268 
	`wrôe
(
îr
[1], &
î∫o
, (errno));

269 
	`_exô
(1);

274 
	`dup2
(0, 2);

277 
	`execuã
(
âyp
->
ty_gëty
);

280 
	`f˙é
(2, 
F_SETFL
, f˙é(2, 
F_GETFL
Ë| 
O_NONBLOCK
);

281 i‡(
löír
 !0Ë
	`ªp‹t
(2, 
âyp
->
ty_gëty
[0]);

282 
	`wrôe
(
îr
[1], &
î∫o
, (errno));

283 
	`_exô
(1);

287 i‡(
âyp
 !&
TT_REBOOT
Ë
¶Ÿp
->
pid
 =Öid;

289 
	`˛o£
(
îr
[1]);

290 i‡(
	`ªad
(
îr
[0], &
î∫o
, (errno)) != 0) {

293 
î∫o
) {

294 
ENOENT
:

295 
ENODEV
:

296 
ENXIO
:

298 
¶Ÿp
->
îr˘
 = 
ERRCT_DISABLE
;

299 
	`˛o£
(
îr
[0]);

306 
	`ªp‹t
(2, 
âyp
->
ty_«me
);

308 
	`˛o£
(
îr
[0]);

310 i‡(++
¶Ÿp
->
îr˘
 >
ERRCT_DISABLE
) {

311 
	`ãŒ
(2, "init: ");

312 
	`ãŒ
(2, 
âyp
->
ty_«me
);

313 
	`ãŒ
(2, ":ÉxcessiveÉrrors, shutting down\n");

315 
	`¶ìp
(5);

319 
	`˛o£
(
îr
[0]);

321 i‡(
âyp
 !&
TT_REBOOT
Ë
	`wtmp
(
LOGIN_PROCESS
, 
löír
,Åtyp->
ty_«me
, 
pid
);

322 
¶Ÿp
->
îr˘
 = 0;

323 
	}
}

326 
	$execuã
(**
cmd
)

330 *
nuŒív
[] = { 
NULL
 };

331 
comm™d
[128];

332 *
∑th
[] = { "/sbin", "/bin", "/usr/sbin", "/usr/bin" };

333 
i
;

335 i‡(
cmd
[0][0] == '/') {

337  
	`execve
(
cmd
[0], cmd, 
nuŒív
);

341 
i
 = 0; i < 4; i++) {

342 i‡(
	`°æí
(
∑th
[
i
]Ë+ 1 + såÀn(
cmd
[0]Ë+ 1 > (
comm™d
)) {

343 
î∫o

ENAMETOOLONG
;

346 
	`°r˝y
(
comm™d
, 
∑th
[
i
]);

347 
	`°rˇt
(
comm™d
, "/");

348 
	`°rˇt
(
comm™d
, 
cmd
[0]);

349 
	`execve
(
comm™d
, 
cmd
, 
nuŒív
);

350 i‡(
î∫o
 !
ENOENT
) ;

353 
	}
}

356 
	$wtmp
(
ty≥
, 
löír
, 
löe
, 
pid
)

357 
ty≥
;

358 
löír
;

359 *
löe
;

360 
pid_t
 
pid
;

364 
utmp
 utmp;

365 
fd
;

368 
	`mem£t
((*Ë&
utmp
, 0, (utmp));

371 
ty≥
) {

372 
BOOT_TIME
:

374 
	`°r˝y
(
utmp
.
ut_«me
, "reboot");

375 
	`°r˝y
(
utmp
.
ut_löe
, "~");

378 
LOGIN_PROCESS
:

380 
	`°∫˝y
(
utmp
.
ut_löe
, 
löe
, (utmp.ut_line));

383 
DEAD_PROCESS
:

387 i‡((
fd
 = 
	`›í
(
PATH_UTMP
, 
O_RDONLY
)) < 0) {

388 i‡(
î∫o
 !
ENOENT
Ë
	`ªp‹t
(2, 
PATH_UTMP
);

391 i‡(
	`l£ek
(
fd
, (
off_t
Ë(
löír
+1Ë* (
utmp
), 
SEEK_SET
) == -1

392 || 
	`ªad
(
fd
, &
utmp
, (utmp)) == -1

394 
	`ªp‹t
(2, 
PATH_UTMP
);

395 
	`˛o£
(
fd
);

398 
	`˛o£
(
fd
);

399 i‡(
utmp
.
ut_ty≥
 !
USER_PROCESS
) ;

400 
	`°∫˝y
(
utmp
.
ut_«me
, "", (utmp.ut_name));

405 
utmp
.
ut_pid
 = 
pid
;

406 
utmp
.
ut_ty≥
 = 
ty≥
;

407 
utmp
.
ut_time
 = 
	`time
((
time_t
 *) 0);

409 
ty≥
) {

410 
LOGIN_PROCESS
:

411 
DEAD_PROCESS
:

413 i‡((
fd
 = 
	`›í
(
PATH_UTMP
, 
O_WRONLY
)) < 0

414 || 
	`l£ek
(
fd
, (
off_t
Ë(
löír
+1Ë* (
utmp
), 
SEEK_SET
) == -1

415 || 
	`wrôe
(
fd
, &
utmp
, (utmp)) == -1

417 i‡(
î∫o
 !
ENOENT
Ë
	`ªp‹t
(2, 
PATH_UTMP
);

419 i‡(
fd
 !-1Ë
	`˛o£
(fd);

423 
ty≥
) {

424 
BOOT_TIME
:

425 
DEAD_PROCESS
:

427 i‡((
fd
 = 
	`›í
(
PATH_WTMP
, 
O_WRONLY
 | 
O_APPEND
)) < 0

428 || 
	`wrôe
(
fd
, &
utmp
, (utmp)) == -1

430 i‡(
î∫o
 !
ENOENT
Ë
	`ªp‹t
(2, 
PATH_WTMP
);

432 i‡(
fd
 !-1Ë
	`˛o£
(fd);

435 
	}
}

437 
	$ãŒ
(
fd
, 
s
)

438 
fd
;

439 *
s
;

441 
	`wrôe
(
fd
, 
s
, 
	`°æí
(s));

442 
	}
}

444 
	$ªp‹t
(
fd
, 
œbñ
)

445 
fd
;

446 *
œbñ
;

448 
îr
 = 
î∫o
;

450 
	`ãŒ
(
fd
, "init: ");

451 
	`ãŒ
(
fd
, 
œbñ
);

452 
	`ãŒ
(
fd
, ": ");

453 
	`ãŒ
(
fd
, 
	`°ªº‹
(
îr
));

454 
	`ãŒ
(
fd
, "\n");

455 
î∫o

îr
;

456 
	}
}

	@initscr.c

3 
	~<°dlib.h
>

4 
	~<cur£s.h
>

5 
	~"cur•riv.h
"

7 
WINDOW
 *
	$öôs¸
()

9 *
ãrm
;

11 i‡((
ãrm
 = 
	`gëív
("TERM")Ë=
NULL
)  NULL;

12 
	`£âîm
(
ãrm
);

13 
	`gëtmode
();

14 i‡((
_cursv¨
.
tmpwö
 = 
	`√wwö
(
LINES
, 
COLS
, 0, 0)Ë=
NULL
)  NULL;

15 i‡((
curs¸
 = 
	`√wwö
(
LINES
, 
COLS
, 0, 0)Ë=
NULL
)  NULL;

16 i‡((
°ds¸
 = 
	`√wwö
(
LINES
, 
COLS
, 0, 0)Ë=
NULL
)  NULL;

17 
	`˛órok
(
curs¸
, 
TRUE
);

18 (
°ds¸
);

19 
	}
}

	@inode.c

18 
	~"fs.h
"

19 
	~<möix/boŸ.h
>

20 
	~"buf.h
"

21 
	~"fûe.h
"

22 
	~"Âroc.h
"

23 
	~"öode.h
"

24 
	~"su≥r.h
"

26 
FORWARD
 
_PROTOTYPE
–
ﬁd_ic›y
, (
öode
 *
rù
, 
d1_öode
 *
dù
,

27 
dúe˘i⁄
, 
n‹m
));

28 
FORWARD
 
_PROTOTYPE
–
√w_ic›y
, (
öode
 *
rù
, 
d2_öode
 *
dù
,

29 
dúe˘i⁄
, 
n‹m
));

35 
PUBLIC
 
öode
 *
	$gë_öode
(
dev
, 
numb
)

36 
dev_t
 
dev
;

37 
numb
;

43 
öode
 *
rù
, *
xp
;

46 
xp
 = 
NIL_INODE
;

47 
rù
 = &
öode
[0];Ñù < &öode[
NR_INODES
];Ñip++) {

48 i‡(
rù
->
i_cou¡
 > 0) {

49 i‡(
rù
->
i_dev
 =
dev
 &&Ñù->
i_num
 =
numb
) {

51 
rù
->
i_cou¡
++;

52 (
rù
);

55 
xp
 = 
rù
;

60 i‡(
xp
 =
NIL_INODE
) {

61 
îr_code
 = 
ENFILE
;

62 (
NIL_INODE
);

66 
xp
->
i_dev
 = 
dev
;

67 
xp
->
i_num
 = 
numb
;

68 
xp
->
i_cou¡
 = 1;

69 i‡(
dev
 !
NO_DEV
Ë
	`rw_öode
(
xp
, 
READING
);

70 
xp
->
i_upd©e
 = 0;

72 (
xp
);

73 
	}
}

79 
PUBLIC
 
	$put_öode
(
rù
)

80 
öode
 *
rù
;

87 i‡(
rù
 =
NIL_INODE
) ;

88 i‡(--
rù
->
i_cou¡
 == 0) {

89 i‡((
rù
->
i_∆öks
 & 
BYTE
) == 0) {

91 
	`åunˇã
(
rù
);

92 
rù
->
i_mode
 = 
I_NOT_ALLOC
;

93 
rù
->
i_dút
 = 
DIRTY
;

94 
	`‰ì_öode
(
rù
->
i_dev
,Ñù->
i_num
);

96 i‡(
rù
->
i_pùe
 =
I_PIPE
Ë
	`åunˇã
(rip);

98 
rù
->
i_pùe
 = 
NO_PIPE
;

99 i‡(
rù
->
i_dút
 =
DIRTY
Ë
	`rw_öode
‘ù, 
WRITING
);

101 
	}
}

106 
PUBLIC
 
öode
 *
	$Æloc_öode
(
dev
, 
bôs
)

107 
dev_t
 
dev
;

108 
mode_t
 
bôs
;

112 
öode
 *
rù
;

113 
su≥r_block
 *
•
;

114 
maj‹
, 
mö‹
, 
öumb
;

115 
bô_t
 
b
;

117 
•
 = 
	`gë_su≥r
(
dev
);

118 i‡(
•
->
s_rd_⁄ly
) {

119 
îr_code
 = 
EROFS
;

120 (
NIL_INODE
);

124 
b
 = 
	`Æloc_bô
(
•
, 
IMAP
, sp->
s_i£¨ch
);

125 i‡(
b
 =
NO_BIT
) {

126 
îr_code
 = 
ENFILE
;

127 
maj‹
 = (Ë(
•
->
s_dev
 >> 
MAJOR
Ë& 
BYTE
;

128 
mö‹
 = (Ë(
•
->
s_dev
 >> 
MINOR
Ë& 
BYTE
;

129 
	`¥ötf
("Out of i-nodes on %sdevice %d/%d\n",

130 
•
->
s_dev
 =
ROOT_DEV
 ? "roŸ " : "", 
maj‹
, 
mö‹
);

131 (
NIL_INODE
);

133 
•
->
s_i£¨ch
 = 
b
;

134 
öumb
 = (Ë
b
;

137 i‡((
rù
 = 
	`gë_öode
(
NO_DEV
, 
öumb
)Ë=
NIL_INODE
) {

139 
	`‰ì_bô
(
•
, 
IMAP
, 
b
);

142 
rù
->
i_mode
 = 
bôs
;

143 
rù
->
i_∆öks
 = (
∆ök_t
) 0;

144 
rù
->
i_uid
 = 
Â
->
Â_effuid
;

145 
rù
->
i_gid
 = 
Â
->
Â_effgid
;

146 
rù
->
i_dev
 = 
dev
;

147 
rù
->
i_ndz⁄es
 = 
•
->
s_ndz⁄es
;

148 
rù
->
i_nödús
 = 
•
->
s_nödús
;

149 
rù
->
i_•
 = 
•
;

156 
	`wùe_öode
(
rù
);

159 (
rù
);

160 
	}
}

165 
PUBLIC
 
	$wùe_öode
(
rù
)

166 
öode
 *
rù
;

173 
i
;

175 
rù
->
i_size
 = 0;

176 
rù
->
i_upd©e
 = 
ATIME
 | 
CTIME
 | 
MTIME
;

177 
rù
->
i_dút
 = 
DIRTY
;

178 
i
 = 0; i < 
V2_NR_TZONES
; i++Ë
rù
->
i_z⁄e
[i] = 
NO_ZONE
;

179 
	}
}

185 
PUBLIC
 
	$‰ì_öode
(
dev
, 
öumb
)

186 
dev_t
 
dev
;

187 
öo_t
 
öumb
;

191 
su≥r_block
 *
•
;

192 
bô_t
 
b
;

195 
•
 = 
	`gë_su≥r
(
dev
);

196 i‡(
öumb
 <0 || inumb > 
•
->
s_nöodes
) ;

197 
b
 = 
öumb
;

198 
	`‰ì_bô
(
•
, 
IMAP
, 
b
);

199 i‡(
b
 < 
•
->
s_i£¨ch
) sp->s_isearch = b;

200 
	}
}

205 
PUBLIC
 
	$upd©e_times
(
rù
)

206 
öode
 *
rù
;

215 
time_t
 
cur_time
;

216 
su≥r_block
 *
•
;

218 
•
 = 
rù
->
i_•
;

219 i‡(
•
->
s_rd_⁄ly
) ;

221 
cur_time
 = 
	`˛ock_time
();

222 i‡(
rù
->
i_upd©e
 & 
ATIME
Ërù->
i_©ime
 = 
cur_time
;

223 i‡(
rù
->
i_upd©e
 & 
CTIME
Ërù->
i_˘ime
 = 
cur_time
;

224 i‡(
rù
->
i_upd©e
 & 
MTIME
Ërù->
i_mtime
 = 
cur_time
;

225 
rù
->
i_upd©e
 = 0;

226 
	}
}

232 
PUBLIC
 
	$rw_öode
(
rù
, 
rw_Êag
)

233 
öode
 *
rù
;

234 
rw_Êag
;

238 
buf
 *
bp
;

239 
su≥r_block
 *
•
;

240 
d1_öode
 *
dù
;

241 
d2_öode
 *
dù2
;

242 
block_t
 
b
, 
off£t
;

245 
•
 = 
	`gë_su≥r
(
rù
->
i_dev
);

246 
rù
->
i_•
 = 
•
;

247 
off£t
 = 
•
->
s_im≠_blocks
 + sp->
s_zm≠_blocks
 + 2;

248 
b
 = (
block_t
Ë(
rù
->
i_num
 - 1)/
•
->
s_öodes_≥r_block
 + 
off£t
;

249 
bp
 = 
	`gë_block
(
rù
->
i_dev
, 
b
, 
NORMAL
);

250 
dù
 = 
bp
->
b_v1_öo
 + (
rù
->
i_num
 - 1Ë% 
V1_INODES_PER_BLOCK
;

251 
dù2
 = 
bp
->
b_v2_öo
 + (
rù
->
i_num
 - 1Ë% 
V2_INODES_PER_BLOCK
;

254 i‡(
rw_Êag
 =
WRITING
) {

255 i‡(
rù
->
i_upd©e
Ë
	`upd©e_times
(rip);

256 i‡(
•
->
s_rd_⁄ly
 =
FALSE
Ë
bp
->
b_dút
 = 
DIRTY
;

262 i‡(
•
->
s_vîsi⁄
 =
V1
)

263 
	`ﬁd_ic›y
(
rù
, 
dù
, 
rw_Êag
, 
•
->
s_«tive
);

265 
	`√w_ic›y
(
rù
, 
dù2
, 
rw_Êag
, 
•
->
s_«tive
);

267 
	`put_block
(
bp
, 
INODE_BLOCK
);

268 
rù
->
i_dút
 = 
CLEAN
;

269 
	}
}

275 
PRIVATE
 
	$ﬁd_ic›y
(
rù
, 
dù
, 
dúe˘i⁄
, 
n‹m
)

276 
öode
 *
rù
;

277 
d1_öode
 *
dù
;

278 
dúe˘i⁄
;

279 
n‹m
;

289 
i
;

291 i‡(
dúe˘i⁄
 =
READING
) {

293 
rù
->
i_mode
 = 
	`c⁄v2
(
n‹m
, (Ë
dù
->
d1_mode
);

294 
rù
->
i_uid
 = 
	`c⁄v2
(
n‹m
, (Ë
dù
->
d1_uid
 );

295 
rù
->
i_size
 = 
	`c⁄v4
(
n‹m
, 
dù
->
d1_size
);

296 
rù
->
i_mtime
 = 
	`c⁄v4
(
n‹m
, 
dù
->
d1_mtime
);

297 
rù
->
i_©ime
 =Ñù->
i_mtime
;

298 
rù
->
i_˘ime
 =Ñù->
i_mtime
;

299 
rù
->
i_∆öks
 = (
∆ök_t
Ë
dù
->
d1_∆öks
;

300 
rù
->
i_gid
 = (
gid_t
Ë
dù
->
d1_gid
;

301 
rù
->
i_ndz⁄es
 = 
V1_NR_DZONES
;

302 
rù
->
i_nödús
 = 
V1_INDIRECTS
;

303 
i
 = 0; i < 
V1_NR_TZONES
; i++)

304 
rù
->
i_z⁄e
[
i
] = 
	`c⁄v2
(
n‹m
, (Ë
dù
->
d1_z⁄e
[i]);

307 
dù
->
d1_mode
 = 
	`c⁄v2
(
n‹m
, (Ë
rù
->
i_mode
);

308 
dù
->
d1_uid
 = 
	`c⁄v2
(
n‹m
, (Ë
rù
->
i_uid
 );

309 
dù
->
d1_size
 = 
	`c⁄v4
(
n‹m
, 
rù
->
i_size
);

310 
dù
->
d1_mtime
 = 
	`c⁄v4
(
n‹m
, 
rù
->
i_mtime
);

311 
dù
->
d1_∆öks
 = (
∆ök_t
Ë
rù
->
i_∆öks
;

312 
dù
->
d1_gid
 = (
gid_t
Ë
rù
->
i_gid
;

313 
i
 = 0; i < 
V1_NR_TZONES
; i++)

314 
dù
->
d1_z⁄e
[
i
] = 
	`c⁄v2
(
n‹m
, (Ë
rù
->
i_z⁄e
[i]);

316 
	}
}

322 
PRIVATE
 
	$√w_ic›y
(
rù
, 
dù
, 
dúe˘i⁄
, 
n‹m
)

323 
öode
 *
rù
;

324 
d2_öode
 *
dù
;

325 
dúe˘i⁄
;

326 
n‹m
;

331 
i
;

333 i‡(
dúe˘i⁄
 =
READING
) {

335 
rù
->
i_mode
 = 
	`c⁄v2
(
n‹m
,
dù
->
d2_mode
);

336 
rù
->
i_uid
 = 
	`c⁄v2
(
n‹m
,
dù
->
d2_uid
 );

337 
rù
->
i_∆öks
 = 
	`c⁄v2
(
n‹m
,(Ë
dù
->
d2_∆öks
);

338 
rù
->
i_gid
 = 
	`c⁄v2
(
n‹m
,(Ë
dù
->
d2_gid
 );

339 
rù
->
i_size
 = 
	`c⁄v4
(
n‹m
,
dù
->
d2_size
);

340 
rù
->
i_©ime
 = 
	`c⁄v4
(
n‹m
,
dù
->
d2_©ime
);

341 
rù
->
i_˘ime
 = 
	`c⁄v4
(
n‹m
,
dù
->
d2_˘ime
);

342 
rù
->
i_mtime
 = 
	`c⁄v4
(
n‹m
,
dù
->
d2_mtime
);

343 
rù
->
i_ndz⁄es
 = 
V2_NR_DZONES
;

344 
rù
->
i_nödús
 = 
V2_INDIRECTS
;

345 
i
 = 0; i < 
V2_NR_TZONES
; i++)

346 
rù
->
i_z⁄e
[
i
] = 
	`c⁄v4
(
n‹m
, (Ë
dù
->
d2_z⁄e
[i]);

349 
dù
->
d2_mode
 = 
	`c⁄v2
(
n‹m
,
rù
->
i_mode
);

350 
dù
->
d2_uid
 = 
	`c⁄v2
(
n‹m
,
rù
->
i_uid
 );

351 
dù
->
d2_∆öks
 = 
	`c⁄v2
(
n‹m
,
rù
->
i_∆öks
);

352 
dù
->
d2_gid
 = 
	`c⁄v2
(
n‹m
,
rù
->
i_gid
 );

353 
dù
->
d2_size
 = 
	`c⁄v4
(
n‹m
,
rù
->
i_size
);

354 
dù
->
d2_©ime
 = 
	`c⁄v4
(
n‹m
,
rù
->
i_©ime
);

355 
dù
->
d2_˘ime
 = 
	`c⁄v4
(
n‹m
,
rù
->
i_˘ime
);

356 
dù
->
d2_mtime
 = 
	`c⁄v4
(
n‹m
,
rù
->
i_mtime
);

357 
i
 = 0; i < 
V2_NR_TZONES
; i++)

358 
dù
->
d2_z⁄e
[
i
] = 
	`c⁄v4
(
n‹m
, (Ë
rù
->
i_z⁄e
[i]);

360 
	}
}

366 
PUBLIC
 
	$dup_öode
(
ù
)

367 
öode
 *
ù
;

373 
ù
->
i_cou¡
++;

374 
	}
}

	@inode.h

11 
EXTERN
 
	söode
 {

12 
mode_t
 
	mi_mode
;

13 
∆ök_t
 
	mi_∆öks
;

14 
uid_t
 
	mi_uid
;

15 
gid_t
 
	mi_gid
;

16 
off_t
 
	mi_size
;

17 
time_t
 
	mi_©ime
;

18 
time_t
 
	mi_mtime
;

19 
time_t
 
	mi_˘ime
;

20 
z⁄e_t
 
	mi_z⁄e
[
V2_NR_TZONES
];

23 
dev_t
 
	mi_dev
;

24 
öo_t
 
	mi_num
;

25 
	mi_cou¡
;

26 
	mi_ndz⁄es
;

27 
	mi_nödús
;

28 
su≥r_block
 *
	mi_•
;

29 
	mi_dút
;

30 
	mi_pùe
;

31 
	mi_mou¡
;

32 
	mi_£ek
;

33 
	mi_upd©e
;

34 } 
	göode
[
NR_INODES
];

37 
	#NIL_INODE
 (
öode
 *Ë0

	)

40 
	#NO_PIPE
 0

	)

41 
	#I_PIPE
 1

	)

42 
	#NO_MOUNT
 0

	)

43 
	#I_MOUNT
 1

	)

44 
	#NO_SEEK
 0

	)

45 
	#ISEEK
 1

	)

	@installboot.c

6 
	#nû
 0

	)

7 
	#_POSIX_SOURCE
 1

	)

8 
	#_MINIX
 1

	)

9 
	~<°dio.h
>

10 
	~<°ddef.h
>

11 
	~<sys/ty≥s.h
>

12 
	~<sys/°©.h
>

13 
	~<sys/io˘l.h
>

14 
	~<°dlib.h
>

15 
	~<uni°d.h
>

16 
	~<f˙é.h
>

17 
	~<°rög.h
>

18 
	~<î∫o.h
>

19 
	~<a.out.h
>

20 
	~<möix/c⁄fig.h
>

21 
	~<möix/c⁄°.h
>

22 
	~<möix/∑πôi⁄.h
>

23 
	~"øwfs.h
"

24 
	~"image.h
"

26 
	#BOOTBLOCK
 0

	)

27 
	#SECTOR_SIZE
 512

	)

28 
	#RATIO
 (
BLOCK_SIZE
/
SECTOR_SIZE
)

	)

29 
	#SIGNATURE
 0xAA55

	)

30 
	#BOOT_MAX
 64

	)

31 
	#JMP
 0xEB

	)

32 
	#JMPOFFM
 0x01

	)

33 
	#JMPOFFE
 0x02

	)

34 
	#XOR
 0x31

	)

35 
	#SIGPOS
 510

	)

36 
	#PARTPOS
 446

	)

40 
	#bëwìn
(
a
, 
c
, 
z
Ë((Ë((cË- (a)Ë<((zË- (a)))

	)

41 
	#c⁄åﬁ
(
c
Ë
	`bëwìn
('\0', (c), '\37')

	)

43 #i‡!
__möix_vmd


44 
	#cv64ul
(
i
Ë(i)

	)

47 
	$ªp‹t
(*
œbñ
)

50 
	`Ârötf
(
°dîr
, "ö°ÆlboŸ: %s: %s\n", 
œbñ
, 
	`°ªº‹
(
î∫o
));

51 
	}
}

53 
	$Áèl
(*
œbñ
)

55 
	`ªp‹t
(
œbñ
);

56 
	`exô
(1);

57 
	}
}

59 *
	$ba£«me
(*
«me
)

65 
ba£
[
IM_NAME_MAX
];

66 *
p
, *
bp

ba£
;

68 i‡((
p

	`°rchr
(
«me
, ':')Ë!
nû
) {

69 
«me
 <
p
 && 
bp
 < 
ba£
 + 
IM_NAME_MAX
 - 1)

70 *
bp
++ = *
«me
++;

73 i‡((
p

	`°ºchr
(
«me
, '/')Ë=
nû
) {Ö=Çame; ; }

74 i‡(*++
p
 != 0) ;

75 *--
p
= 0;

77 *
p
 !0 && 
bp
 < 
ba£
 + 
IM_NAME_MAX
 - 1) *bp++ = *p++;

78 *
bp
= 0;

79  
ba£
;

80 
	}
}

82 
	$bªad
(
FILE
 *
f
, *
«me
, *
buf
, 
size_t
 
Àn
)

85 i‡(
Àn
 > 0 && 
	`‰ód
(
buf
,Üí, 1, 
f
) != 1) {

86 i‡(
	`„º‹
(
f
)Ë
	`Áèl
(
«me
);

87 
	`Ârötf
(
°dîr
, "ö°ÆlboŸ: Unsu•e˘ed EOF o¿%s\n", 
«me
);

88 
	`exô
(1);

90 
	}
}

92 
	$bwrôe
(
FILE
 *
f
, *
«me
, *
buf
, 
size_t
 
Àn
)

94 i‡(
Àn
 > 0 && 
	`fwrôe
(
buf
,Üí, 1, 
f
Ë!1Ë
	`Áèl
(
«me
);

95 
	}
}

97 
	gtŸÆ_ãxt
0, 
	gtŸÆ_d©a
0, 
	gtŸÆ_bss
= 0;

98 
	gmakög_image
= 0;

100 
	$ªad_hódî
(
èlk
, *
¥oc
, 
FILE
 *
¥ocf
, 
image_hódî
 *
ihdr
)

105 
n
, 
big
= 0;

106 
b™√r
= 0;

107 
exec
 *
phdr
&
ihdr
->
¥o˚ss
;

109 i‡(
¥ocf
 =
nû
) {

111 
n

phdr
->
a_hdæí
;

113 
	`mem£t
(
ihdr
, 0, (*ihdr));

116 
	`°∫˝y
(
ihdr
->
«me
, 
	`ba£«me
(
¥oc
), 
IM_NAME_MAX
);

119 
n

	`‰ód
(
phdr
, (), 
A_MINHDR
, 
¥ocf
);

120 i‡(
	`„º‹
(
¥ocf
)Ë
	`Áèl
(
¥oc
);

123 i‡(
n
 < 
A_MINHDR
 || 
	`BADMAG
(*
phdr
)) {

124 
	`Ârötf
(
°dîr
, "ö°ÆlboŸ: %†i†nŸá¿execuèbÀ\n", 
¥oc
);

125 
	`exô
(1);

129 i‡(
¥ocf
 !
nû
) {

130 
	`bªad
(
¥ocf
, 
¥oc
, ((*Ë
phdr
Ë+ 
A_MINHDR
,

131 
phdr
->
a_hdæí
 - 
A_MINHDR
);

134 i‡(
èlk
 && !
b™√r
) {

135 
	`¥ötf
("Åext data bss size\n");

136 
b™√r
= 1;

139 i‡(
èlk
) {

140 
	`¥ötf
("%8ld%8ld%8ld%9ld %s\n",

141 
phdr
->
a_ãxt
,Öhdr->
a_d©a
,Öhdr->
a_bss
,

142 
phdr
->
a_ãxt
 +Öhdr->
a_d©a
 +Öhdr->
a_bss
, 
¥oc
);

144 
tŸÆ_ãxt
+
phdr
->
a_ãxt
;

145 
tŸÆ_d©a
+
phdr
->
a_d©a
;

146 
tŸÆ_bss
+
phdr
->
a_bss
;

148 i‡(
phdr
->
a_˝u
 =
A_I8086
) {

149 
d©a

phdr
->
a_d©a
 +Öhdr->
a_bss
;

151 i‡(!(
phdr
->
a_Êags
 & 
A_SEP
)Ë
d©a
+phdr->
a_ãxt
;

153 i‡(
phdr
->
a_ãxt
 >65536Ë
big
|= 1;

154 i‡(
d©a
 >65536Ë
big
|= 2;

156 i‡(
big
) {

157 
	`Ârötf
(
°dîr
,

159 
¥oc
,

160 
big
 & 1 ? "text" : "",

161 
big
 == 3 ? "ánd " : "",

162 
big
 & 2 ? "data" : "",

163 
big
 == 3 ? "sáre" : " is");

165 
	}
}

167 
	$∑dimage
(*
image
, 
FILE
 *
imagef
, 
n
)

170 
n
 > 0) {

171 i‡(
	`putc
(0, 
imagef
Ë=
EOF
Ë
	`Áèl
(
image
);

172 
n
--;

174 
	}
}

176 
	#Æign
(
n
Ë((“Ë+ ((
SECTOR_SIZE
Ë- 1)Ë& ~((SECTOR_SIZEË- 1))

	)

178 
	$c›yexec
(*
¥oc
, 
FILE
 *
¥ocf
, *
image
, FILE *
imagef
, 
n
)

181 
∑d
, 
c
;

184 
∑d

	`Æign
(
n
) -Ç;

186 
n
 > 0) {

187 i‡((
c

	`gëc
(
¥ocf
)Ë=
EOF
) {

188 i‡(
	`„º‹
(
¥ocf
)Ë
	`Áèl
(
¥oc
);

189 
	`Ârötf
(
°dîr
, "installboot:Öremature EOF on %s\n",

190 
¥oc
);

191 
	`exô
(1);

193 i‡(
	`putc
(
c
, 
imagef
Ë=
EOF
Ë
	`Áèl
(
image
);

194 
n
--;

196 
	`∑dimage
(
image
, 
imagef
, 
∑d
);

197 
	}
}

199 
	$make_image
(*
image
, **
¥ocv
)

204 
FILE
 *
imagef
, *
¥ocf
;

205 *
¥oc
, *
fûe
;

206 
¥o˙
;

207 
image_hódî
 
ihdr
;

208 
exec
 
phdr
;

209 
°©
 
°
;

211 
makög_image
= 1;

213 i‡((
imagef

	`f›í
(
image
, "w")Ë=
nû
Ë
	`Áèl
(image);

215 
¥o˙
0; (
¥oc
*
¥ocv
++Ë!
nû
;Örocn++) {

217 i‡((
fûe

	`°rchr
(
¥oc
, ':')Ë!
nû
) file++; file=Öroc;

220 i‡(
	`°©
(
fûe
, &
°
) < 0

221 || (
î∫o

EISDIR
, !
	`S_ISREG
(
°
.
°_mode
))

222 || (
¥ocf

	`f›í
(
fûe
, "r")Ë=
nû


223 Ë
	`Áèl
(
¥oc
);

226 
	`ªad_hódî
(1, 
¥oc
, 
¥ocf
, &
ihdr
);

229 
phdr

ihdr
.
¥o˚ss
;

232 
ihdr
.
¥o˚ss
.
a_syms
= 0;

233 
ihdr
.
¥o˚ss
.
a_Êags
 &~
A_NSYM
;

236 
	`bwrôe
(
imagef
, 
image
, &
ihdr
, (ihdr));

238 
	`∑dimage
(
image
, 
imagef
, 
SECTOR_SIZE
 - (
ihdr
));

241 i‡(
phdr
.
a_Êags
 & 
A_PAL
) {

242 
	`ªwöd
(
¥ocf
);

243 
phdr
.
a_ãxt
+phdr.
a_hdæí
;

247 i‡(
phdr
.
a_Êags
 & 
A_SEP
) {

250 
	`c›yexec
(
¥oc
, 
¥ocf
, 
image
, 
imagef
, 
phdr
.
a_ãxt
);

251 
	`c›yexec
(
¥oc
, 
¥ocf
, 
image
, 
imagef
, 
phdr
.
a_d©a
);

255 
	`c›yexec
(
¥oc
, 
¥ocf
, 
image
, 
imagef
,

256 
phdr
.
a_ãxt
 +Öhdr.
a_d©a
);

260 (Ë
	`f˛o£
(
¥ocf
);

264 i‡(
	`f˛o£
(
imagef
Ë=
EOF
Ë
	`Áèl
(
image
);

266 
	`¥ötf
(" ------ ------ ------ -------\n");

267 
	`¥ötf
("%8ld%8ld%8ld%9ldÅotal\n",

268 
tŸÆ_ãxt
, 
tŸÆ_d©a
, 
tŸÆ_bss
,

269 
tŸÆ_ãxt
 + 
tŸÆ_d©a
 + 
tŸÆ_bss
);

270 
	}
}

272 
	$exåa˘exec
(
FILE
 *
imagef
, *
image
, FILE *
¥ocf
, *
¥oc
,

273 
cou¡
, 
off_t
 *
Æí
)

276 
buf
[
SECTOR_SIZE
];

278 
cou¡
 > 0) {

279 
	`bªad
(
imagef
, 
image
, 
buf
, (buf));

280 *
Æí
-(
buf
);

282 
	`bwrôe
(
¥ocf
, 
¥oc
, 
buf
,

283 
cou¡
 < (
buf
Ë? (
size_t
) count : (buf));

284 
cou¡
-(
buf
);

286 
	}
}

288 
	$exåa˘_image
(*
image
)

291 
FILE
 *
imagef
, *
¥ocf
;

292 
off_t
 
Àn
;

293 
°©
 
°
;

294 
image_hódî
 
ihdr
;

295 
exec
 
phdr
;

296 
buf
[
SECTOR_SIZE
];

298 i‡(
	`°©
(
image
, &
°
Ë< 0Ë
	`Áèl
(image);

301 
Àn

	`S_ISREG
(
°
.
°_mode
Ë? st.
°_size
 : -1;

303 i‡((
imagef

	`f›í
(
image
, "r")Ë=
nû
Ë
	`Áèl
(image);

305 
Àn
 != 0) {

307 
	`bªad
(
imagef
, 
image
, 
buf
, (buf));

308 
Àn
-(
buf
);

310 
	`mem˝y
(&
ihdr
, 
buf
, (ihdr));

311 
phdr

ihdr
.
¥o˚ss
;

314 
	`ªad_hódî
(1, 
ihdr
.
«me
, 
nû
, &ihdr);

316 i‡((
¥ocf

	`f›í
(
ihdr
.
«me
, "w")Ë=
nû
Ë
	`Áèl
(ihdr.name);

318 i‡(
phdr
.
a_Êags
 & 
A_PAL
) {

320 
phdr
.
a_ãxt
+phdr.
a_hdæí
;

322 
	`bwrôe
(
¥ocf
, 
ihdr
.
«me
, &ihdr.
¥o˚ss
, 
phdr
.
a_hdæí
);

326 i‡(
phdr
.
a_Êags
 & 
A_SEP
) {

327 
	`exåa˘exec
(
imagef
, 
image
, 
¥ocf
, 
ihdr
.
«me
,

328 
phdr
.
a_ãxt
, &
Àn
);

329 
	`exåa˘exec
(
imagef
, 
image
, 
¥ocf
, 
ihdr
.
«me
,

330 
phdr
.
a_d©a
, &
Àn
);

332 
	`exåa˘exec
(
imagef
, 
image
, 
¥ocf
, 
ihdr
.
«me
,

333 
phdr
.
a_ãxt
 +Öhdr.
a_d©a
, &
Àn
);

336 i‡(
	`f˛o£
(
¥ocf
Ë=
EOF
Ë
	`Áèl
(
ihdr
.
«me
);

338 
	}
}

340 
	gøwfd
;

341 *
	gøwdev
;

343 
	$ªadblock
(
off_t
 
blk
, *
buf
)

346 
n
;

348 i‡(
	`l£ek
(
øwfd
, 
blk
 * 
BLOCK_SIZE
, 
SEEK_SET
) < 0

349 || (
n

	`ªad
(
øwfd
, 
buf
, 
BLOCK_SIZE
)) < 0

350 Ë
	`Áèl
(
øwdev
);

352 i‡(
n
 < 
BLOCK_SIZE
) {

353 
	`Ârötf
(
°dîr
, "ö°ÆlboŸ: u√x≥˘ed EOF o¿%s\n", 
øwdev
);

354 
	`exô
(1);

356 
	}
}

358 
	$wrôeblock
(
off_t
 
blk
, *
buf
)

361 i‡(
	`l£ek
(
øwfd
, 
blk
 * 
BLOCK_SIZE
, 
SEEK_SET
) < 0

362 || 
	`wrôe
(
øwfd
, 
buf
, 
BLOCK_SIZE
) < 0

363 Ë
	`Áèl
(
øwdev
);

364 
	}
}

366 
	$øw_ö°Æl
(*
fûe
, 
off_t
 *
°¨t
, off_à*
Àn
)

374 
buf
[
BLOCK_SIZE
];

375 
FILE
 *
f
;

376 
off_t
 
£c
;

377 
devsize
;

378 
b™√r
= 0;

379 
∑πôi⁄
 
íåy
;

382 
devsize
= -1;

383 i‡(
	`io˘l
(
øwfd
, 
DIOCGETP
, &
íåy
Ë=0Ë
devsize

	`cv64ul
”¡ry.
size
);

385 i‡((
f

	`f›í
(
fûe
, "r")Ë=
nû
Ë
	`Áèl
(file);

388 
£c
*
°¨t
;

390 
off

£c
 % 
RATIO
;

392 i‡(
	`‰ód
(
buf
 + 
off
 * 
SECTOR_SIZE
, 1, SECTOR_SIZE, 
f
) == 0)

395 i‡(
£c
 >
devsize
) {

396 
	`Ârötf
(
°dîr
,

398 
fûe
, 
øwdev
);

402 i‡(
off
 =
RATIO
 - 1Ë
	`wrôeblock
(
£c
 / RATIO, 
buf
);

403 } ++
£c
 !*
°¨t
 + *
Àn
);

405 i‡(
	`„º‹
(
f
)Ë
	`Áèl
(
fûe
);

406 (Ë
	`f˛o£
(
f
);

409 i‡(
£c
 % 
RATIO
 !0Ë
	`wrôeblock
(£¯/ RATIO, 
buf
);

411 i‡(!
b™√r
) {

412 
	`¥ötf
(" sectorÜength\n");

413 
b™√r
= 1;

415 *
Àn

£c
 - *
°¨t
;

416 
	`¥ötf
("%8ld%8ld %s\n", *
°¨t
, *
Àn
, 
fûe
);

417 *
°¨t

£c
;

419 
	}
}

421 
	ehowto
 { 
	mFS
, 
	mBOOT
 };

423 
	$make_boŸabÀ
(
howto
 
how
, *
devi˚
, *
boŸblock
,

424 *
boŸcode
, **
imagev
)

431 
buf
[
BLOCK_SIZE
 + 256], *
adΩ
, *
∑rmp
;

432 
	sfûóddr
 {

433 
off_t
 
addªss
;

434 
cou¡
;

435 } 
boŸaddr
[
BOOT_MAX
 + 1], *
b≠
= bootaddr;

436 
exec
 
boŸhdr
;

437 
image_hódî
 
dummy
;

438 
°©
 
°
;

439 
öo_t
 
öo
;

440 
off_t
 
£˘‹
, 
max_£˘‹
;

441 
FILE
 *
boŸf
;

442 
off_t
 
addr
, 
fssize
, 
pos
, 
Àn
;

443 *
œbñs
, *
œbñ
, *
image
;

444 
nﬁabñ
;

447 i‡((
øwfd

	`›í
(
øwdev

devi˚
, 
O_RDWR
)Ë< 0Ë
	`Áèl
(device);

450 
fssize

	`r_su≥r
();

452 
how
) {

453 
FS
:

454 i‡(
fssize
 == 0) {

455 
	`Ârötf
(
°dîr
,

457 
devi˚
);

458 
	`exô
(1);

461 
BOOT
:

462 i‡(
fssize
 != 0) {

463 
s
;

464 
	`¥ötf
("%†c⁄èö†®fûêsy°em!\n", 
devi˚
);

465 
	`¥ötf
("Scribbling in 10 seconds");

466 
s
= 0; s < 10; s++) {

467 
	`Âutc
('.', 
°dout
);

468 
	`fÊush
(
°dout
);

469 
	`¶ìp
(1);

471 
	`Âutc
('\n', 
°dout
);

473 
fssize
= 1;

476 i‡(
how
 =
FS
) {

478 i‡((
öo

	`r_lookup
(
ROOT_INO
, 
boŸcode
)) == 0) {

479 i‡(
î∫o
 !
ENOENT
Ë
	`Áèl
(
boŸcode
);

483 
öo
= 0;

486 i‡(
öo
 == 0) {

490 i‡(
	`°©
(
boŸcode
, &
°
Ë< 0Ë
	`Áèl
(bootcode);

492 i‡((
boŸf

	`f›í
(
boŸcode
, "r")Ë=
nû
Ë
	`Áèl
(bootcode);

495 
	`r_°©
(
öo
, &
°
);

498 i‡((
addr

	`r_vú2abs
((
off_t
) 0)) == 0) {

499 
boŸhdr
.
a_magic
[0]!
A_MAGIC0
;

501 
	`ªadblock
(
addr
, 
buf
);

502 
	`mem˝y
(&
boŸhdr
, 
buf
, (
exec
));

504 
boŸf

nû
;

505 
dummy
.
¥o˚ss

boŸhdr
;

508 
	`ªad_hódî
(0, 
boŸcode
, 
boŸf
, &
dummy
);

509 
boŸhdr

dummy
.
¥o˚ss
;

511 i‡(
boŸf
 !
nû
Ë
	`f˛o£
(bootf);

514 
max_£˘‹
(
boŸhdr
.
a_hdæí
 + boŸhdr.
a_ãxt


515 + 
boŸhdr
.
a_d©a
 + 
SECTOR_SIZE
 - 1) / SECTOR_SIZE;

517 i‡(
max_£˘‹
 > 
BOOT_MAX
 * 
RATIO
) {

518 
	`Ârötf
(
°dîr
, "ö°ÆlboŸ: %†i†wayÅoÿbig\n", 
boŸcode
);

519 
	`exô
(0);

525 
b≠
->
cou¡
= 0;

527 
£˘‹
0; se˘‹ < 
max_£˘‹
; sector++) {

528 i‡(
öo
 == 0) {

529 
addr

fssize
 + (
£˘‹
 / 
RATIO
);

531 i‡((
addr

	`r_vú2abs
(
£˘‹
 / 
RATIO
)) == 0) {

532 
	`Ârötf
(
°dîr
, "installboot: %s has holes!\n",

533 
boŸcode
);

534 
	`exô
(1);

536 
addr
◊dd∏* 
RATIO
Ë+ (
£˘‹
 % RATIO);

539 i‡(
b≠
->
cou¡
 =0Ëb≠->
addªss

addr
;

542 i‡(
b≠
->
addªss
 + b≠->
cou¡
 =
addr
)

543 
b≠
->
cou¡
++;

546 
b≠
++;

547 
b≠
->
addªss

addr
;

548 
b≠
->
cou¡
= 1;

551 (++
b≠
)->
cou¡
= 0;

554 
	`ªadblock
(
BOOTBLOCK
, 
buf
);

556 i‡((
boŸf

	`f›í
(
boŸblock
, "r")Ë=
nû
Ë
	`Áèl
(bootblock);

558 
	`ªad_hódî
(0, 
boŸblock
, 
boŸf
, &
dummy
);

559 
boŸhdr

dummy
.
¥o˚ss
;

561 i‡(
boŸhdr
.
a_ãxt
 + boŸhdr.
a_d©a
 +

562 4 * (
b≠
 - 
boŸaddr
Ë+ 1 > 
SIGPOS
) {

563 
	`Ârötf
(
°dîr
,

565 
boŸblock
, 
boŸcode
);

566 
	`Ârötf
(
°dîr
,

568 
boŸcode
);

569 
	`exô
(1);

573 
	`bªad
(
boŸf
, 
boŸblock
, 
buf
, 
boŸhdr
.
a_ãxt
 + boŸhdr.
a_d©a
);

574 (Ë
	`f˛o£
(
boŸf
);

577 
adΩ

buf
 + (Ë(
boŸhdr
.
a_ãxt
 + boŸhdr.
a_d©a
);

578 
b≠

boŸaddr
; b≠->
cou¡
 != 0; bap++) {

579 *
adΩ
++
b≠
->
cou¡
;

580 *
adΩ
++(
b≠
->
addªss
 >> 0) & 0xFF;

581 *
adΩ
++(
b≠
->
addªss
 >> 8) & 0xFF;

582 *
adΩ
++(
b≠
->
addªss
 >> 16) & 0xFF;

585 *
adΩ
++= 0;

587 i‡(
b≠
 > 
boŸaddr
+1) {

588 
	`¥ötf
("%sánd %dáddressesÅo %sÖatched into %s\n",

589 
boŸblock
, ()(
b≠
 - 
boŸaddr
), 
boŸcode
, 
devi˚
);

593 
adΩ

buf
 + 
SIGPOS
;

594 *
adΩ
++(
SIGNATURE
 >> 0) & 0xFF;

595 *
adΩ
++(
SIGNATURE
 >> 8) & 0xFF;

601 
∑rmp

buf
 + 
SECTOR_SIZE
;Öarmp < buf + 2*SECTOR_SIZE;Öarmp++) {

602 i‡(*
imagev
 !
nû
 || (
	`c⁄åﬁ
(*
∑rmp
) && *parmp != '\n')) {

604 
	`mem£t
(
buf
 + 
SECTOR_SIZE
, '\n', SECTOR_SIZE);

610 
pos

fssize
 * 
RATIO
;

612 i‡(
öo
 == 0) {

614 
Àn

max_£˘‹
;

615 i‡(!
	`øw_ö°Æl
(
boŸcode
, &
pos
, &
Àn
)) {

616 i‡(
how
 =
FS
) {

617 
	`Ârötf
(
°dîr
,

619 
boŸcode
, 
devi˚
);

621 
	`exô
(1);

625 
∑rmp

buf
 + 
SECTOR_SIZE
;

626 
nﬁabñ
= 0;

628 i‡(
how
 =
BOOT
) {

630 
	`°r˝y
(
∑rmp
, "delay=swap\n");

631 
∑rmp
+
	`°æí
(parmp);

634 (
œbñs
*
imagev
++Ë!
nû
) {

637 i‡((
image

	`°rchr
(
œbñs
, ':')Ë!
nû
)

638 *
image
++= 0;

640 i‡(
nﬁabñ
) {

641 
	`Ârötf
(
°dîr
,

643 
	`exô
(1);

645 
nﬁabñ
= 1;

646 
image

œbñs
;

647 
œbñs

nû
;

649 
Àn
= 0;

650 i‡(!
	`øw_ö°Æl
(
image
, &
pos
, &
Àn
)Ë
	`exô
(1);

652 i‡(
œbñs
 =
nû
) {

654 
	`•rötf
(
∑rmp
, "image=%ld:%ld\n", 
pos
-
Àn
,Üen);

655 
∑rmp
+
	`°æí
(parmp);

658 
œbñs
 !
nû
) {

662 
œbñ

œbñs
;

663 i‡((
œbñs

	`°rchr
÷abñs, ',')Ë!
nû
) *labels++ = 0;

665 
	`•rötf
(
∑rmp
,

667 
œbñ
,

668 
	`bëwìn
('A', 
œbñ
[0], 'Z')

669 ? 
œbñ
[0]-'A'+'a' :Üabel[0],

670 
œbñ
, 
pos
-
Àn
,Üen,Üabel);

671 
∑rmp
+
	`°æí
(parmp);

674 i‡(
∑rmp
 > 
buf
 + 
BLOCK_SIZE
) {

675 
	`Ârötf
(
°dîr
,

677 
	`exô
(1);

681 
	`wrôeblock
((
off_t
Ë
BOOTBLOCK
, 
buf
);

683 i‡(
pos
 > 
fssize
 * 
RATIO
) {

685 
	`¥ötf
("%16ld (%ld kbËtŸÆ\n", 
pos
,

686 (
pos
 + 
RATIO
 - 1) / RATIO);

688 
	}
}

690 
	$ö°Æl_ma°î
(*
devi˚
, *
ma°îboŸ
, *
fix
)

698 
FILE
 *
masf
;

699 
size
;

700 
°©
 
°
;

701 
buf
[
BLOCK_SIZE
];

704 i‡((
øwfd

	`›í
(
øwdev

devi˚
, 
O_RDWR
)Ë< 0Ë
	`Áèl
(device);

707 i‡((
masf

	`f›í
(
ma°îboŸ
, "r")Ë=
nû
Ë
	`Áèl
(masterboot);

710 i‡(
	`f°©
(
	`fûío
(
masf
), &
°
Ë>=0 && 
	`S_ISBLK
(°.
°_mode
))

711 
size

PARTPOS
;

714 
image_hódî
 
ihdr
;

716 
	`ªad_hódî
(1, 
ma°îboŸ
, 
masf
, &
ihdr
);

717 
size

ihdr
.
¥o˚ss
.
a_ãxt
 + ihdr.¥o˚ss.
a_d©a
;

719 i‡(
size
 > 
PARTPOS
) {

720 
	`Ârötf
(
°dîr
, "ö°ÆlboŸ: %†i†toÿbig\n", 
ma°îboŸ
);

721 
	`exô
(1);

724 
	`ªadblock
(
BOOTBLOCK
, 
buf
);

726 (Ë
	`bªad
(
masf
, 
ma°îboŸ
, 
buf
, 
size
);

728 i‡(
fix
 !
nû
) {

730 
devi˚
0, 
logiˇl
= 0;

731 *
pf

fix
;

733 
	`bëwìn
('0', *
pf
, '9')) {

734 
devi˚
10 * devi˚ + (*
pf
 - '0');

735 i‡(
devi˚
 >= 40) ;

736 
pf
++;

738 i‡(
	`bëwìn
('a', *
pf
, 'd')) {

739 
logiˇl
1 + (*
pf
 - 'a');

740 
pf
++;

742 i‡(*
pf
 != 0) {

743 
	`Ârötf
(
°dîr
, "ö°ÆlboŸ: bad fix key '%s'\n", 
fix
);

744 
	`exô
(1);

747 i‡(
buf
[0] =(Ë
JMP
 && buf[1] =(Ë
JMPOFFM


748 && 
buf
[3] =(Ë
XOR
 && 
logiˇl
 == 0) {

750 
buf
[2]
devi˚
;

752 i‡(
buf
[0] =(Ë
JMP
 && buf[1] =(Ë
JMPOFFE


753 && 
buf
[4] =(Ë
XOR
 && 
logiˇl
 != 0) {

755 
buf
[2]
devi˚
;

756 
buf
[3]
logiˇl
;

758 
	`Ârötf
(
°dîr
,

760 
fix
, 
ma°îboŸ
);

761 
	`exô
(1);

766 
buf
[
SIGPOS
+0](
SIGNATURE
 >> 0) & 0xFF;

767 
buf
[
SIGPOS
+1](
SIGNATURE
 >> 8) & 0xFF;

769 
	`wrôeblock
(
BOOTBLOCK
, 
buf
);

770 
	}
}

772 
	$ußge
()

774 
	`Ârötf
(
°dîr
,

776 
	`Ârötf
(
°dîr
,

778 
	`Ârötf
(
°dîr
,

780 
	`Ârötf
(
°dîr
,

782 
	`Ârötf
(
°dîr
,

784 
	`exô
(1);

785 
	}
}

787 
	$is›ti⁄
(*
›ti⁄
, *
ã°
)

792 i‡(
	`°rcmp
(
›ti⁄
, 
ã°
) == 0)  1;

793 i‡(
›ti⁄
[0] !'-' && 
	`°æí
(option) != 2)  0;

794 i‡(
›ti⁄
[1] =
ã°
[1])  1;

795 i‡(
›ti⁄
[1] ='x' && 
ã°
[1] == 'e')  1;

797 
	}
}

799 
	$maö
(
¨gc
, **
¨gv
)

801 i‡(
¨gc
 < 2Ë
	`ußge
();

803 i‡(
¨gc
 >4 && 
	`is›ti⁄
(
¨gv
[1], "-image")) {

804 
	`make_image
(
¨gv
[2],árgv + 3);

806 i‡(
¨gc
 =3 && 
	`is›ti⁄
(
¨gv
[1], "-extract")) {

807 
	`exåa˘_image
(
¨gv
[2]);

809 i‡(
¨gc
 >5 && 
	`is›ti⁄
(
¨gv
[1], "-device")) {

810 
	`make_boŸabÀ
(
FS
, 
¨gv
[2],árgv[3],árgv[4],árgv + 5);

812 i‡(
¨gc
 >6 && 
	`is›ti⁄
(
¨gv
[1], "-boot")) {

813 
	`make_boŸabÀ
(
BOOT
, 
¨gv
[2],árgv[3],árgv[4],árgv + 5);

815 i‡(
¨gc
 =4 && 
	`is›ti⁄
(
¨gv
[1], "-master")) {

816 
	`ö°Æl_ma°î
(
¨gv
[2],árgv[3], 
nû
);

818 i‡(
¨gc
 =5 && 
	`is›ti⁄
(
¨gv
[1], "-master")

819 && 
	`bëwìn
('0', 
¨gv
[2][0], '9')) {

820 
	`ö°Æl_ma°î
(
¨gv
[3],árgv[4],árgv[2]);

822 
	`ußge
();

824 
	`exô
(0);

825 
	}
}

	@io.c

5 
	~<°dlib.h
>

7 
	~"öë.h
"

8 
	~"io.h
"

10 
PUBLIC
 
	$wrôeIpAddr
(
addr
)

11 
ùaddr_t
 
addr
;

13 
u8_t
 *
addrInByãs
;

15 
addrInByãs
(
u8_t
 *)&
addr
;

16 
	`¥ötf
("%d.%d.%d.%d", 
addrInByãs
[0],áddrInBytes[1],

17 
addrInByãs
[2],áddrInBytes[3]);

18 
	}
}

20 
PUBLIC
 
	$wrôeEthîAddr
(
addr
)

21 
ëhî_addr_t
 *
addr
;

23 
u8_t
 *
addrInByãs
;

25 
addrInByãs
(
u8_t
 *)(
addr
->
ó_addr
);

26 
	`¥ötf
("%x:%x:%x:%x:%x:%x", 
addrInByãs
[0],áddrInBytes[1],

27 
addrInByãs
[2],áddrInBytes[3],áddrInBytes[4],áddrInBytes[5]);

28 
	}
}

	@io.h

7 #i‚de‡
IO_H


8 
	#IO_H


	)

12 
wrôeIpAddr
 
ARGS
(–
ùaddr_t
 
addr
 ));

13 
wrôeEthîAddr
 
ARGS
(–
ëhî_addr_t
 *
addr
 ));

	@ip.c

5 
	~"öë.h
"

6 
	~"buf.h
"

7 
	~"ty≥.h
"

9 
	~"¨p.h
"

10 
	~"as£π.h
"

11 
	~"˛ock.h
"

12 
	~"ëh.h
"

13 
	~"icmp.h
"

14 
	~"icmp_lib.h
"

15 
	~"io.h
"

16 
	~"ù.h
"

17 
	~"ù_öt.h
"

18 
	~"ùr.h
"

19 
	~"§.h
"

21 
INIT_PANIC
();

23 
FORWARD
 
ù_ëh_maö
 
ARGS
(–
ù_p‹t_t
 *
p‹t
 ));

24 
FORWARD
 
ù_˛o£
 
ARGS
(–
fd
 ));

25 
FORWARD
 
ù_ˇn˚l
 
ARGS
(–
fd
, 
which_›î©i⁄
 ));

26 
FORWARD
 
acc_t
 *
gë_ëh_d©a
 
ARGS
(–
fd
, 
size_t
 
off£t
,

27 
size_t
 
cou¡
, 
f‹_io˘l
 ));

28 
FORWARD
 
put_ëh_d©a
 
ARGS
(–
fd
, 
size_t
 
off£t
,

29 
acc_t
 *
d©a
, 
f‹_io˘l
 ));

30 
FORWARD
 
øΩ_func
 
ARGS
(–
fd
, 
ùaddr_t
 
ùaddr
 ));

31 
FORWARD
 
do_ëh_ªad
 
ARGS
(–
ù_p‹t_t
 *
p‹t
 ));

33 #i‡
IP_ROUTER


34 
FORWARD
 
ù_rouã
 
ARGS
(–
ù_p‹t_t
 *
p‹t
, 
acc_t
 *
∑ck
 ));

37 
PUBLIC
 
ù_p‹t_t
 
	gù_p‹t_èbÀ
[
IP_PORT_NR
];

38 
PUBLIC
 
ù_fd_t
 
	gù_fd_èbÀ
[
IP_FD_NR
];

39 
PUBLIC
 
ù_ass_t
 
	gù_ass_èbÀ
[
IP_ASS_NR
];

42 
PRIVATE
 
	$ù_ˇn˚l
 (
fd
, 
which_›î©i⁄
)

43 
fd
;

44 
which_›î©i⁄
;

46 
ù_fd_t
 *
ù_fd
;

47 
acc_t
 *
ª∂_ªs
;

48 
ªsu…
;

50 
ù_fd
&
ù_fd_èbÀ
[
fd
];

52 
which_›î©i⁄
)

54 
SR_CANCEL_IOCTL
:

55 
	`as£π
 (
ù_fd
->
if_Êags
 & 
IFF_GIPCONF_IP
);

56 
ù_fd
->
if_Êags
 &~
IFF_GIPCONF_IP
;

57 
ª∂_ªs
(*
ù_fd
->
if_gë_u£rd©a
)(ù_fd->
if_§fd
,

58 (
size_t
)
EINTR
, (size_t)0, 
TRUE
);

59 
	`as£π
 (!
ª∂_ªs
);

61 
SR_CANCEL_READ
:

62 
	`as£π
 (
ù_fd
->
if_Êags
 & 
IFF_READ_IP
);

63 
ù_fd
->
if_Êags
 &~
IFF_READ_IP
;

64 
ªsu…
(*
ù_fd
->
if_put_u£rd©a
)(ù_fd->
if_§fd
,

65 (
size_t
)
EINTR
, (
acc_t
 *)0, 
FALSE
);

66 
	`as£π
 (!
ªsu…
);

68 
SR_CANCEL_WRITE
:

69 
	`as£π
 (
ù_fd
->
if_Êags
 & 
IFF_WRITE_MASK
);

70 
ù_fd
->
if_Êags
 &~
IFF_WRITE_MASK
;

71 
ª∂_ªs
(*
ù_fd
->
if_gë_u£rd©a
)(ù_fd->
if_§fd
,

72 (
size_t
)
EINTR
, (size_t)0, 
FALSE
);

73 
	`as£π
 (!
ª∂_ªs
);

76 
	`ù_∑nic
(( "unknown cancelÑequest" ));

79  
NW_OK
;

80 
	}
}

83 
PUBLIC
 
	$ù_öô
()

85 
i
, 
ªsu…
;

86 
ù_ass_t
 *
ù_ass
;

87 
ù_fd_t
 *
ù_fd
;

88 
ù_p‹t_t
 *
ù_p‹t
;

90 
	`as£π
 (
BUF_S
 >(
nwio_ëh›t
));

91 
	`as£π
 (
BUF_S
 >
IP_MAX_HDR_SIZE
 + 
ETH_HDR_SIZE
);

92 
	`as£π
 (
BUF_S
 >(
nwio_ù›t_t
));

93 
	`as£π
 (
BUF_S
 >(
nwio_rouã_t
));

95 
ù_p‹t_èbÀ
[0].
ù_dl
.
dl_ëh
.
de_p‹t

ETH0
;

96 
ù_p‹t_èbÀ
[0].
ù_dl_ty≥

IPDL_ETH
;

97 
ù_p‹t_èbÀ
[0].
ù_mö‹

IP_DEV0
;

99 
i
=0, 
ù_ass

ù_ass_èbÀ
; i<
IP_ASS_NR
; i++, ip_ass++)

101 
ù_ass
->
ü_‰ags
= 0;

102 
ù_ass
->
ü_fú°_time
= 0;

103 
ù_ass
->
ü_p‹t
= 0;

106 
i
=0, 
ù_fd

ù_fd_èbÀ
; i<
IP_FD_NR
; i++, ip_fd++)

108 
ù_fd
->
if_Êags

IFF_EMPTY
;

111 
i
=0, 
ù_p‹t

ù_p‹t_èbÀ
; i<
IP_PORT_NR
; i++, ip_port++)

113 
ù_p‹t
->
ù_Êags

IPF_EMPTY
;

114 
ù_p‹t
->
ù_dl_ty≥
)

116 
IPDL_ETH
:

117 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_°©e

IES_EMPTY
;

118 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags

IEF_EMPTY
;

121 
	`ù_∑nic
(( "unknown ip_dl_type" ));

126 
	`icmp_öô
();

127 
	`ùr_öô
();

129 
i
=0, 
ù_p‹t

ù_p‹t_èbÀ
; i<
IP_PORT_NR
; i++, ip_port++)

131 
ù_p‹t
->
ù_‰ame_id
(
u16_t
)
	`gë_time
();

133 
ªsu…

	`§_add_mö‹
(
ù_p‹t
->
ù_mö‹
,

134 
ù_p‹t
-
ù_p‹t_èbÀ
, 
ù_›í
, 
ù_˛o£
,

135 
ù_ªad
, 
ù_wrôe
, 
ù_io˘l
, 
ù_ˇn˚l
);

136 
	`as£π
 (
ªsu…
>=0);

138 
ù_p‹t
->
ù_dl_ty≥
)

140 
IPDL_ETH
:

141 
	`ù_ëh_maö
(
ù_p‹t
);

144 
	`ù_∑nic
(( "unknown ip_dl_type" ));

147 
	}
}

149 
PRIVATE
 
	$ù_ëh_maö
(
ù_p‹t
)

150 
ù_p‹t_t
 *
ù_p‹t
;

152 
ªsu…
, 
i
;

153 
ù_fd_t
 *
ù_fd
;

155 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_°©e
)

157 
IES_EMPTY
:

158 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_ùaddr
(
ùaddr_t
)0;

159 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_°©e

IES_SETPROTO
;

160 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_fd

	`ëh_›í
(ip_port->

161 
ù_dl
.
dl_ëh
.
de_p‹t
, 
ù_p‹t
-
ù_p‹t_èbÀ
,

162 
gë_ëh_d©a
, 
put_ëh_d©a
);

163 i‡(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_fd
 < 0)

165 
	`¥ötf
("ip.c: unableÅo openÉthÖort\n");

169 
ªsu…

	`ëh_io˘l
(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_fd
,

170 
NWIOSETHOPT
);

171 i‡(
ªsu…
 =
NW_SUSPEND
)

172 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 |
IEF_SUSPEND
;

173 i‡(
ªsu…
<0)

175 #i‡
DEBUG


176 { 
	`whîe
(); 
	`¥ötf
("ëh_io˘l(..,%lx)=%d\n", 
NWIOSETHOPT
, 
ªsu…
); }

180 i‡(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_°©e
 !
IES_SETPROTO
)

183 
IES_SETPROTO
:

184 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_°©e

IES_GETIPADDR
;

186 
ªsu…

	`øΩ_ªq
 (
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_p‹t
,

187 
ù_p‹t
-
ù_p‹t_èbÀ
, 
øΩ_func
);

189 i‡(
ªsu…
 =
NW_SUSPEND
)

190 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 |
IEF_SUSPEND
;

191 i‡(
ªsu…
<0)

193 #i‡
DEBUG
 & 256

194 { 
	`whîe
(); 
	`¥ötf
("øΩ_ªq(...)=%d\n", 
ªsu…
); }

198 i‡(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_°©e
 !
IES_GETIPADDR
)

201 
IES_GETIPADDR
:

202 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_°©e

IES_MAIN
;

203 
i
=0, 
ù_fd

ù_fd_èbÀ
; i<
IP_FD_NR
; i++, ip_fd++)

205 i‡(!(
ù_fd
->
if_Êags
 & 
IFF_INUSE
))

207 #i‡
DEBUG
 & 256

208 { 
	`whîe
(); 
	`¥ötf
("%dÇŸ inu£\n", 
i
); }

212 i‡(
ù_fd
->
if_p‹t
 !
ù_p‹t
)

214 #i‡
DEBUG


215 { 
	`whîe
(); 
	`¥ötf
("%d wr⁄gÖ‹t\n", 
i
); }

219 #i‡
DEBUG
 & 256

220 { 
	`whîe
(); 
	`¥ötf
("(ù_fd_à*)0x%x->if_Êags0x%x\n", 
ù_fd
,

221 
ù_fd
->
if_Êags
); }

223 i‡(
ù_fd
->
if_Êags
 & 
IFF_WRITE_IP
)

225 #i‡
DEBUG


226 { 
	`whîe
(); 
	`¥ötf
("%d wrôêù\n", 
i
); }

228 
ù_fd
->
if_Êags
 &~
IFF_WRITE_IP
;

229 
	`ù_wrôe
 (
i
, 
ù_fd
->
if_wr_cou¡
);

231 i‡(
ù_fd
->
if_Êags
 & 
IFF_GIPCONF_IP
)

233 #i‡
DEBUG
 & 256

234 { 
	`whîe
(); 
	`¥ötf
("restarting ip_ioctl (.., NWIOGIPCONF)\n"); }

236 
	`ù_io˘l
 (
i
, 
NWIOGIPCONF
);

239 #i‡
DEBUG
 & 256

240 { 
	`whîe
(); 
	`¥ötf
("ù_p‹t->ù_ùaddr"); 
	`wrôeIpAddr
(
ù_p‹t
->
ù_ùaddr
);

241 
	`¥ötf
("\n"); }

243 
	`icmp_gë√tmask
(
ù_p‹t
-
ù_p‹t_èbÀ
);

244 
	`do_ëh_ªad
(
ù_p‹t
);

247 
	`ù_∑nic
(( "unknown state" ));

249 
	}
}

251 
PRIVATE
 
acc_t
 *
	$gë_ëh_d©a
 (
fd
, 
off£t
, 
cou¡
, 
f‹_io˘l
)

252 
fd
;

253 
size_t
 
off£t
;

254 
size_t
 
cou¡
;

255 
f‹_io˘l
;

257 
ù_p‹t_t
 *
p‹t
;

258 
acc_t
 *
d©a
;

259 
ªsu…
;

261 #i‡
DEBUG
 & 256

262 { 
	`whîe
(); 
	`¥ötf
("get_eth_data(fd= %d, offset= %d, count= %u) called\n",

263 
fd
, 
off£t
, 
cou¡
); }

265 
p‹t
&
ù_p‹t_èbÀ
[
fd
];

267 
p‹t
->
ù_dl
.
dl_ëh
.
de_°©e
)

269 
IES_SETPROTO
:

270 i‡(!
cou¡
)

272 
ªsu…
()
off£t
;

273 i‡(
ªsu…
<0)

275 
p‹t
->
ù_dl
.
dl_ëh
.
de_°©e

IES_ERROR
;

278 i‡(
p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 & 
IEF_SUSPEND
)

279 
	`ù_ëh_maö
(
p‹t
);

280  
NW_OK
;

282 
	`as£π
 ((!
off£t
Ë&& (
cou¡
 =(
nwio_ëh›t
)));

284 
nwio_ëh›t
 *
ëh›t
;

285 
acc_t
 *
acc
;

287 
acc

	`bf_memªq
((*
ëh›t
));

288 
ëh›t
(
nwio_ëh›t
 *)
	`±r2acc_d©a
(
acc
);

289 
ëh›t
->
nweo_Êags

NWEO_COPY
|
NWEO_EN_BROAD
|

290 
NWEO_TYPESPEC
;

291 
ëh›t
->
nweo_ty≥

	`ht⁄s
(
ETH_IP_PROTO
);

292  
acc
;

295 
IES_MAIN
:

296 
	`as£π
 (
p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 & 
IEF_WRITE_IP
);

297 i‡(!
cou¡
)

300 
ªsu…
()
off£t
;

301 #i‡
DEBUG
 & 256

302 { 
	`whîe
(); 
	`¥ötf
("gë_ëh_d©a:Ñesu…%d\n", 
ªsu…
); }

304 i‡(
ªsu…
<0)

305 
	`¥ötf
("ip.c:Érror on write: %d\n",

306 
ªsu…
);

307 
	`bf_a‰ì
 (
p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ame
);

308 
p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ame
= 0;

309 #i‡
DEBUG
 & 256

310 { 
	`whîe
(); 
	`¥ötf
("eth_write completed\n"); }

312 i‡(
p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 & 
IEF_WRITE_SP
)

314 #i‡
DEBUG
 & 256

315 { 
	`whîe
(); 
	`¥ötf
("calling dl_eth_write_frame\n"); }

317 
p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 &=

318 ~(
IEF_WRITE_SP
|
IEF_WRITE_IP
);

319 
	`dŒ_ëh_wrôe_‰ame
(
p‹t
);

321 #i‡
DEBUG
 & 256

322 { 
	`whîe
(); 
	`¥ötf
("not calling dl_eth_write_frame\n"); }

324  
NW_OK
;

326 #i‡
DEBUG
 & 256

327 { 
	`whîe
(); 
	`¥ötf
("supplying data forÉth\n"); }

329 
d©a

	`bf_cut
 (
p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ame
, 
off£t
,

330 
cou¡
);

331 
	`as£π
 (
d©a
);

332  
d©a
;

335 
	`¥ötf
("get_eth_data(%d, 0x%d, 0x%d) called but ip_state=0x%x\n",

336 
fd
, 
off£t
, 
cou¡
, 
p‹t
->
ù_dl
.
dl_ëh
.
de_°©e
);

340 
	}
}

342 
PRIVATE
 
	$øΩ_func
 (
p‹t
, 
ùaddr
)

343 
p‹t
;

344 
ùaddr_t
 
ùaddr
;

346 
ù_p‹t_t
 *
ù_p‹t
;

348 #i‡
DEBUG
 & 256

349 { 
	`whîe
(); 
	`¥ötf
("rarp_func\n"); }

351 
ù_p‹t
&
ù_p‹t_èbÀ
[
p‹t
];

353 i‡(!(
ù_p‹t
->
ù_Êags
 & 
IPF_IPADDRSET
))

355 
ù_p‹t
->
ù_ùaddr

ùaddr
;

356 
ù_p‹t
->
ù_Êags
 |
IPF_IPADDRSET
;

358 
ù_p‹t
->
ù_dl_ty≥
)

360 
IPDL_ETH
:

361 i‡(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 & 
IEF_SUSPEND
)

362 
	`ù_ëh_maö
(
ù_p‹t
);

365 
	`ù_∑nic
(( "unknown dl_type" ));

367 
	}
}

369 
PRIVATE
 
	$do_ëh_ªad
(
p‹t
)

370 
ù_p‹t_t
 *
p‹t
;

372 
ªsu…
;

374 !(
p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 & 
IEF_READ_IP
))

376 
p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 &~
IEF_READ_SP
;

377 
p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 |
IEF_READ_IP
;

378 
ªsu…

	`ëh_ªad
 (
p‹t
->
ù_dl
.
dl_ëh
.
de_fd
,

379 
ETH_MAX_PACK_SIZE
);

380 i‡(
ªsu…
 =
NW_SUSPEND
)

381 
p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 |
IEF_READ_SP
;

382 i‡(
ªsu…
<0)

384 #i‡
DEBUG
 & 256

385 { 
	`whîe
(); 
	`¥ötf
("ëh_ªad(%d, ...)%d\n", 
p‹t
->
ù_dl
.
dl_ëh
.
de_fd
,

386 
ªsu…
); }

390 
p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 &~
IEF_READ_IP
;

392 
	}
}

394 
PRIVATE
 
	$put_ëh_d©a
 (
p‹t
, 
off£t
, 
d©a
, 
f‹_io˘l
)

395 
p‹t
;

396 
size_t
 
off£t
;

397 
acc_t
 *
d©a
;

398 
f‹_io˘l
;

400 
ù_p‹t_t
 *
ù_p‹t
;

401 
acc_t
 *
∑ck
;

402 
ªsu…
;

404 #i‡
DEBUG
 & 256

405 { 
	`whîe
(); 
	`¥ötf
("put_eth_data() called\n"); }

407 
ù_p‹t
&
ù_p‹t_èbÀ
[
p‹t
];

409 i‡(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 & 
IEF_READ_IP
)

411 i‡(!
d©a
)

413 
ªsu…
()
off£t
;

414 i‡(
ªsu…
<0)

416 #i‡
DEBUG


417 { 
	`whîe
(); 
	`¥ötf
("ù.c:Öut_ëh_d©a(..,%d,..)\n", 
ªsu…
); }

419  
NW_OK
;

421 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 &~
IEF_READ_IP
;

422 i‡(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 &

423 
IEF_READ_SP
)

425 
	`do_ëh_ªad
(
ù_p‹t
);

427  
NW_OK
;

429 
	`as£π
 (!
off£t
);

434 
	`ù_ëh_¨rived
(
ù_p‹t
, 
d©a
);

435  
NW_OK
;

437 
	`¥ötf
("ip_port->ip_dl.dl_eth.de_state= 0x%x",

438 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_°©e
);

439 
	`ù_∑nic
 (( "strange status" ));

440 
	}
}

442 
PUBLIC
 
	$ù_›í
 (
p‹t
, 
§fd
, 
gë_u£rd©a
, 
put_u£rd©a
)

443 
p‹t
;

444 
§fd
;

445 
gë_u£rd©a_t
 
gë_u£rd©a
;

446 
put_u£rd©a_t
 
put_u£rd©a
;

448 
i
;

449 
ù_fd_t
 *
ù_fd
;

451 
i
=0; i<
IP_FD_NR
 && (
ù_fd_èbÀ
[i].
if_Êags
 & 
IFF_INUSE
);

452 
i
++);

454 i‡(
i
>=
IP_FD_NR
)

456 #i‡
DEBUG


457 { 
	`whîe
(); 
	`¥ötf
("out of fds\n"); }

459  
EOUTOFBUFS
;

462 
ù_fd
&
ù_fd_èbÀ
[
i
];

464 
ù_fd
->
if_Êags

IFF_INUSE
;

466 
ù_fd
->
if_ù›t
.
nwio_Êags

NWIO_DEFAULT
;

467 
ù_fd
->
if_ù›t
.
nwio_tos
= 0;

468 
ù_fd
->
if_ù›t
.
nwio_df

FALSE
;

469 
ù_fd
->
if_ù›t
.
nwio_âl
= 255;

470 
ù_fd
->
if_ù›t
.
nwio_hdr›t
.
iho_›t_siz
= 0;

472 
ù_fd
->
if_p‹t
&
ù_p‹t_èbÀ
[
p‹t
];

473 
ù_fd
->
if_§fd

§fd
;

474 
ù_fd
->
if_rd_buf
= 0;

475 
ù_fd
->
if_gë_u£rd©a

gë_u£rd©a
;

476 
ù_fd
->
if_put_u£rd©a

put_u£rd©a
;

477  
i
;

478 
	}
}

480 
PRIVATE
 
	$ù_˛o£
 (
fd
)

481 
fd
;

483 
ù_fd_t
 *
ù_fd
;

485 
ù_fd
&
ù_fd_èbÀ
[
fd
];

487 
	`as£π
 ((
ù_fd
->
if_Êags
 & 
IFF_INUSE
) &&

488 !(
ù_fd
->
if_Êags
 & 
IFF_BUSY
));

490 
ù_fd
->
if_Êags

IFF_EMPTY
;

491 i‡(
ù_fd
->
if_rd_buf
)

493 
	`bf_a‰ì
(
ù_fd
->
if_rd_buf
);

494 
ù_fd
->
if_rd_buf
= 0;

496 
	}
}

	@ip.h

5 #i‚de‡
INET_IP_H


6 
	#INET_IP_H


	)

8 
	#IP0
 0

	)

12 
	gacc
;

14 
ù_öô
 
ARGS
(( ));

15 
ù_›í
 
ARGS
(–
p‹t
, 
§fd
,

16 
acc
 *(*
gë_u£rd©a
Ë(
fd
, 
size_t
 
off£t
, size_à
cou¡
,

17 
f‹_io˘l
),

18 (*
put_u£rd©a
Ë(
fd
, 
size_t
 
off£t
, 
acc
 *
d©a
,

19 
f‹_io˘l
) ));

20 
ù_io˘l
 
	`ARGS
(–
fd
, 
ªq
 ));

21 
ù_ªad
 
	`ARGS
(–
fd
, 
size_t
 
cou¡
 ));

22 
ù_wrôe
 
	`ARGS
(–
fd
, 
size_t
 
cou¡
 ));

	@ip_int.h

5 #i‚de‡
INET_IP_INT_H


6 
	#INET_IP_INT_H


	)

19 
	#IP_FD_NR
 32

	)

20 
	#IP_PORT_NR
 1

	)

21 
	#IP_ASS_NR
 3

	)

23 
	#IP_SUN_BROADCAST
 1

	)

25 
	#IP_ROUTER
 0

	)

28 
	sù_p‹t


30 
	mù_Êags
, 
	mù_dl_ty≥
;

35 
	mde_°©e
;

36 
	mde_Êags
;

37 
	mde_p‹t
;

38 
	mde_fd
;

39 
acc_t
 *
	mde_wr_‰ag
;

40 
acc_t
 *
	mde_wr_‰ame
;

41 
ëhî_addr_t
 
	mde_wr_ëhaddr
;

42 
ùaddr_t
 
	mde_wr_ùaddr
;

43 
acc_t
 *
	mde_¨p_∑ck
;

44 
ëhî_addr_t
 
	mde_¨p_ëhaddr
;

45 } 
	mdl_ëh
;

46 } 
	mù_dl
;

47 
	mù_mö‹
;

48 
ùaddr_t
 
	mù_ùaddr
, 
	mù_√tmask
;

49 
u16_t
 
	mù_‰ame_id
;

50 } 
	tù_p‹t_t
;

52 
	#IES_EMPTY
 0x0

	)

53 
	#IES_SETPROTO
 0x1

	)

54 
	#IES_GETIPADDR
 0x2

	)

55 
	#IES_MAIN
 0x3

	)

56 
	#IES_ERROR
 0x4

	)

58 
	#IEF_EMPTY
 0x1

	)

59 
	#IEF_WRITE_IP
 0x2

	)

60 
	#IEF_WRITE_SP
 0x4

	)

61 
	#IEF_SUSPEND
 0x8

	)

62 
	#IEF_READ_IP
 0x10

	)

63 
	#IEF_READ_SP
 0x20

	)

64 
	#IEF_ARP_MASK
 0x1c0

	)

65 
	#IEF_ARP_IP
 0x40

	)

66 
	#IEF_ARP_SP
 0x80

	)

67 
	#IEF_ARP_COMPL
 0x100

	)

69 
	#IPF_EMPTY
 0x0

	)

70 
	#IPF_IPADDRSET
 0x1

	)

71 
	#IPF_NETMASKSET
 0x2

	)

73 
	#IPDL_ETH
 0

	)

75 
	sù_ass


77 
acc_t
 *
	mü_‰ags
;

78 
	mü_mö_âl
;

79 
ù_p‹t_t
 *
	mü_p‹t
;

80 
time_t
 
	mü_fú°_time
;

81 
ùaddr_t
 
	mü_§ˇddr
, 
	mü_d°addr
;

82 
	mü_¥Ÿo
, 
	mü_id
;

83 } 
	tù_ass_t
;

85 
	sù_fd


87 
	mif_Êags
;

88 
nwio_ù›t
 
	mif_ù›t
;

89 
ù_p‹t_t
 *
	mif_p‹t
;

90 
	mif_§fd
;

91 
acc_t
 *
	mif_rd_buf
;

92 
gë_u£rd©a_t
 
	mif_gë_u£rd©a
;

93 
put_u£rd©a_t
 
	mif_put_u£rd©a
;

94 
time_t
 
	mif_exp_tim
;

95 
size_t
 
	mif_rd_cou¡
;

96 
ùaddr_t
 
	mif_wr_d°addr
;

97 
size_t
 
	mif_wr_cou¡
;

98 
ù_p‹t_t
 *
	mif_wr_p‹t
;

99 } 
	tù_fd_t
;

101 
	#IFF_EMPTY
 0x0

	)

102 
	#IFF_INUSE
 0x1

	)

103 
	#IFF_OPTSET
 0x2

	)

104 
	#IFF_BUSY
 0x7f4

	)

105 
	#IFF_READ_IP
 0x4

	)

106 
	#IFF_WRITE_MASK
 0x3f0

	)

107 
	#IFF_WRITE_IP
 0x10

	)

108 
	#IFF_DLL_WR_IP
 0x20

	)

109 
	#IFF_ROUTED
 0x40

	)

110 
	#IFF_NETBROAD_IP
 0x200

	)

111 
	#IFF_GIPCONF_IP
 0x400

	)

115 
ùaddr_t
 
ù_gë_√tmask
 
ARGS
(–ùaddr_à
ho°addr
 ));

116 
ù_chk_hdr›t
 
ARGS
(–
u8_t
 *
›t
, 
›éí
 ));

117 
ù_¥öt_‰ags
 
ARGS
(–
acc_t
 *
acc
 ));

120 
ù_p‹t_¨rive
 
ARGS
(–
ù_p‹t_t
 *
p‹t
, 
acc_t
 *
∑ck
, 
ù_hdr_t
 *
ù_hdr
 ));

121 
ù_ëh_¨rived
 
ARGS
(–
ù_p‹t_t
 *
p‹t
, 
acc_t
 *
∑ck
 ));

122 
ù_ok_f‹_fd
 
ARGS
(–
ù_fd_t
 *
ù_fd
, 
acc_t
 *
∑ck
 ));

123 
ù_∑ckë2u£r
 
ARGS
(–
ù_fd_t
 *
ù_fd
 ));

126 
dŒ_ëh_wrôe_‰ame
 
ARGS
(–
ù_p‹t_t
 *
p‹t
 ));

128 
ù_fd_t
 
ù_fd_èbÀ
[
IP_FD_NR
];

129 
ù_p‹t_t
 
ù_p‹t_èbÀ
[
IP_PORT_NR
];

130 
ù_ass_t
 
ù_ass_èbÀ
[
IP_ASS_NR
];

133 
	#NWIO_DEFAULT
 (
NWIO_EN_LOC
 | 
NWIO_EN_BROAD
 | 
NWIO_REMANY
 | \

	)

134 
	gNWIO_RWDATALL
 | 
	gNWIO_HDR_O_SPEC
)

	@ip_ioctl.c

5 
	~"öë.h
"

6 
	~"buf.h
"

7 
	~"ty≥.h
"

9 
	~"¨p.h
"

10 
	~"as£π.h
"

11 
	~"˛ock.h
"

12 
	~"icmp_lib.h
"

13 
	~"ù.h
"

14 
	~"ù_öt.h
"

15 
	~"ùr.h
"

17 
INIT_PANIC
();

19 
FORWARD
 
ù_check›t
 
ARGS
(–
ù_fd_t
 *
ù_fd
 ));

20 
FORWARD
 
ª∂y_thr_gë
 
ARGS
(–
ù_fd_t
 *
ù_fd
, 
size_t


21 
ª∂y
, 
f‹_io˘l
 ));

23 
PUBLIC
 
	$ù_io˘l
 (
fd
, 
ªq
)

24 
fd
;

25 
ªq
;

27 
ù_fd_t
 *
ù_fd
;

28 
ty≥
;

30 
	`as£π
 (
fd
>=0 && fd<=
IP_FD_NR
);

31 
ù_fd
&
ù_fd_èbÀ
[
fd
];

32 
ty≥

ªq
 & 
IOCTYPE_MASK
;

34 
	`as£π
 (
ù_fd
->
if_Êags
 & 
IFF_INUSE
);

36 
ty≥
)

38 
NWIOSIPOPT
 & 
IOCTYPE_MASK
:

40 
nwio_ù›t_t
 *
ù›t
;

41 
nwio_ù›t_t
 
ﬁd›t
, 
√w›t
;

42 
acc_t
 *
d©a
;

43 
ªsu…
;

44 
√w_í_Êags
, 
√w_di_Êags
,

45 
ﬁd_í_Êags
, 
ﬁd_di_Êags
;

46 
√w_Êags
;

48 i‡(
ªq
 !
NWIOSIPOPT
)

51 
d©a
(*
ù_fd
->
if_gë_u£rd©a
)(ù_fd->
if_§fd
, 0,

52 (
nwio_ù›t_t
), 
TRUE
);

54 
d©a

	`bf_∑ckIffLess
 (d©a, (
nwio_ù›t_t
));

55 
	`as£π
 (
d©a
->
acc_Àngth
 =(
nwio_ù›t_t
));

57 
ù›t
(
nwio_ù›t_t
 *)
	`±r2acc_d©a
(
d©a
);

58 
ﬁd›t

ù_fd
->
if_ù›t
;

59 
√w›t
*
ù›t
;

61 
ﬁd_í_Êags

ﬁd›t
.
nwio_Êags
 & 0xffff;

62 
ﬁd_di_Êags
(
ﬁd›t
.
nwio_Êags
 >> 16) & 0xffff;

63 
√w_í_Êags

√w›t
.
nwio_Êags
 & 0xffff;

64 
√w_di_Êags
(
√w›t
.
nwio_Êags
 >> 16) &

66 i‡(
√w_í_Êags
 & 
√w_di_Êags
)

68 
	`ª∂y_thr_gë
 (
ù_fd
, 
EBADMODE
, 
TRUE
);

69  
NW_OK
;

73 i‡(
√w_di_Êags
 & 
NWIO_ACC_MASK
)

75 
	`ª∂y_thr_gë
 (
ù_fd
, 
EBADMODE
, 
TRUE
);

76  
NW_OK
;

80 i‡(!(
√w_í_Êags
 & 
NWIO_ACC_MASK
))

81 
√w_í_Êags
 |(
ﬁd_í_Êags
 &

82 
NWIO_ACC_MASK
);

85 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
) &

86 
NWIO_LOC_MASK
))

88 
√w_í_Êags
 |(
ﬁd_í_Êags
 &

89 
NWIO_LOC_MASK
);

90 
√w_di_Êags
 |(
ﬁd_di_Êags
 &

91 
NWIO_LOC_MASK
);

95 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
) &

96 
NWIO_BROAD_MASK
))

98 
√w_í_Êags
 |(
ﬁd_í_Êags
 &

99 
NWIO_BROAD_MASK
);

100 
√w_di_Êags
 |(
ﬁd_di_Êags
 &

101 
NWIO_BROAD_MASK
);

105 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
) &

106 
NWIO_REM_MASK
))

108 
√w_í_Êags
 |(
ﬁd_í_Êags
 &

109 
NWIO_REM_MASK
);

110 
√w_di_Êags
 |(
ﬁd_di_Êags
 &

111 
NWIO_REM_MASK
);

112 
√w›t
.
nwio_ªm

ﬁd›t
.nwio_rem;

116 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
) &

117 
NWIO_PROTO_MASK
))

119 
√w_í_Êags
 |(
ﬁd_í_Êags
 &

120 
NWIO_PROTO_MASK
);

121 
√w_di_Êags
 |(
ﬁd_di_Êags
 &

122 
NWIO_PROTO_MASK
);

123 
√w›t
.
nwio_¥Ÿo

ﬁd›t
.nwio_proto;

127 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
) &

128 
NWIO_HDR_O_MASK
))

130 
√w_í_Êags
 |(
ﬁd_í_Êags
 &

131 
NWIO_HDR_O_MASK
);

132 
√w_di_Êags
 |(
ﬁd_di_Êags
 &

133 
NWIO_HDR_O_MASK
);

134 
√w›t
.
nwio_tos

ﬁd›t
.nwio_tos;

135 
√w›t
.
nwio_âl

ﬁd›t
.nwio_ttl;

136 
√w›t
.
nwio_df

ﬁd›t
.nwio_df;

137 
√w›t
.
nwio_hdr›t

ﬁd›t
.nwio_hdropt;

141 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
) &

142 
NWIO_RW_MASK
))

144 
√w_í_Êags
 |(
ﬁd_í_Êags
 &

145 
NWIO_RW_MASK
);

146 
√w_di_Êags
 |(
ﬁd_di_Êags
 &

147 
NWIO_RW_MASK
);

150 
√w_Êags
(()
√w_di_Êags
 << 16) |

151 
√w_í_Êags
;

153 i‡((
√w_Êags
 & 
NWIO_RWDATONLY
) && (new_flags &

154 (
NWIO_REMANY
|
NWIO_PROTOANY
|
NWIO_HDR_O_ANY
)))

156 
	`ª∂y_thr_gë
(
ù_fd
, 
EBADMODE
, 
TRUE
);

157  
NW_OK
;

160 
√w›t
.
nwio_Êags

√w_Êags
;

161 
ù_fd
->
if_ù›t

√w›t
;

163 
ªsu…

	`ù_check›t
(
ù_fd
);

165 i‡(
ªsu…
<0)

166 
ù_fd
->
if_ù›t

ﬁd›t
;

168 
	`bf_a‰ì
(
d©a
);

169 
	`ª∂y_thr_gë
 (
ù_fd
, 
ªsu…
, 
TRUE
);

170  
NW_OK
;

173 
NWIOGIPOPT
 & 
IOCTYPE_MASK
:

175 
nwio_ù›t_t
 *
ù›t
;

176 
acc_t
 *
acc
;

177 
ªsu…
;

179 i‡(
ªq
 !
NWIOGIPOPT
)

181 
acc

	`bf_memªq
((
nwio_ù›t_t
));

183 
ù›t
(
nwio_ù›t_t
 *)
	`±r2acc_d©a
(
acc
);

185 *
ù›t

ù_fd
->
if_ù›t
;

187 
ªsu…
(*
ù_fd
->
if_put_u£rd©a
)(ip_fd->

188 
if_§fd
, 0, 
acc
, 
TRUE
);

189  (*
ù_fd
->
if_put_u£rd©a
)(ip_fd->

190 
if_§fd
, 
ªsu…
, (
acc_t
 *)0, 
TRUE
);

192 
NWIOSIPCONF
 & 
IOCTYPE_MASK
:

194 
nwio_ùc⁄f_t
 *
ùc⁄f
;

195 
ù_p‹t_t
 *
ù_p‹t
;

196 
acc_t
 *
d©a
;

197 
ﬁd_ù_Êags
;

199 
ù_p‹t

ù_fd
->
if_p‹t
;

201 i‡(
ªq
 !
NWIOSIPCONF
)

204 
d©a
(*
ù_fd
->
if_gë_u£rd©a
)(ù_fd->
if_§fd
,

205 0, (
nwio_ùc⁄f_t
), 
TRUE
);

207 
d©a

	`bf_∑ckIffLess
 (data,

208 (
nwio_ùc⁄f_t
));

209 
	`as£π
 (
d©a
->
acc_Àngth
 =(
nwio_ùc⁄f_t
));

211 
ﬁd_ù_Êags

ù_p‹t
->
ù_Êags
;

213 
ùc⁄f
(
nwio_ùc⁄f_t
 *)
	`±r2acc_d©a
(
d©a
);

215 i‡(
ùc⁄f
->
nwic_Êags
 & ~
NWIC_FLAGS
)

216  (*
ù_fd
->
if_put_u£rd©a
)(ip_fd->

217 
if_§fd
, 
EBADMODE
, (
acc_t
 *)0, 
TRUE
);

218 i‡(
ùc⁄f
->
nwic_Êags
 & 
NWIC_IPADDR_SET
)

220 
ù_p‹t
->
ù_ùaddr

ùc⁄f
->
nwic_ùaddr
;

221 
ù_p‹t
->
ù_Êags
 |
IPF_IPADDRSET
;

222 
ù_p‹t
->
ù_dl_ty≥
)

224 
IPDL_ETH
:

225 
	`£t_ùaddr
 (
ù_p‹t
->
ù_dl
.

226 
dl_ëh
.
de_p‹t
,

227 
ù_p‹t
->
ù_ùaddr
);

230 
	`ù_∑nic
(( "unknown dl_type" ));

233 i‡(
ùc⁄f
->
nwic_Êags
 & 
NWIC_NETMASK_SET
)

235 
ù_p‹t
->
ù_√tmask
=

236 
ùc⁄f
->
nwic_√tmask
;

237 
ù_p‹t
->
ù_Êags
 |
IPF_NETMASKSET
;

239 i‡(!(
ﬁd_ù_Êags
 & 
IPF_IPADDRSET
) &&

240 (
ù_p‹t
->
ù_Êags
 & 
IPF_IPADDRSET
) &&

241 !(
ù_p‹t
->
ù_Êags
 & 
IPF_NETMASKSET
))

243 
	`icmp_gë√tmask
(
ù_p‹t
-
ù_p‹t_èbÀ
);

246 
	`bf_a‰ì
(
d©a
);

247  (*
ù_fd
->
if_put_u£rd©a
)(ip_fd->

248 
if_§fd
, 
NW_OK
, (
acc_t
 *)0, 
TRUE
);

250 
NWIOGIPCONF
 & 
IOCTYPE_MASK
:

252 
nwio_ùc⁄f_t
 *
ùc⁄f
;

253 
ù_p‹t_t
 *
ù_p‹t
;

254 
acc_t
 *
d©a
;

255 
ªsu…
;

257 
ù_p‹t

ù_fd
->
if_p‹t
;

259 i‡(
ªq
 !
NWIOGIPCONF
)

262 i‡(!(
ù_p‹t
->
ù_Êags
 & 
IPF_IPADDRSET
))

264 
ù_fd
->
if_Êags
 |
IFF_GIPCONF_IP
;

265 #i‡
DEBUG
 & 256

266 { 
	`whîe
(); 
	`¥ötf
("(ù_fd_à*)0x%x->if_Êags0x%x\n", 
ù_fd
,

267 
ù_fd
->
if_Êags
); }

269  
NW_SUSPEND
;

271 
ù_fd
->
if_Êags
 &~
IFF_GIPCONF_IP
;

272 
d©a

	`bf_memªq
((
nwio_ùc⁄f_t
));

273 
ùc⁄f
(
nwio_ùc⁄f_t
 *)
	`±r2acc_d©a
(
d©a
);

274 
ùc⁄f
->
nwic_Êags

NWIC_IPADDR_SET
;

275 
ùc⁄f
->
nwic_ùaddr

ù_p‹t
->
ù_ùaddr
;

276 
ùc⁄f
->
nwic_√tmask

ù_p‹t
->
ù_√tmask
;

277 i‡(
ù_p‹t
->
ù_Êags
 & 
IPF_NETMASKSET
)

278 
ùc⁄f
->
nwic_Êags
 |
NWIC_NETMASK_SET
;

280 
ªsu…
(*
ù_fd
->
if_put_u£rd©a
)(ip_fd->

281 
if_§fd
, 0, 
d©a
, 
TRUE
);

282  (*
ù_fd
->
if_put_u£rd©a
)(ip_fd->

283 
if_§fd
, 
ªsu…
, (
acc_t
 *)0, 
TRUE
);

285 
NWIOIPGROUTE
 & 
IOCTYPE_MASK
:

287 
acc_t
 *
d©a
;

288 
nwio_rouã_t
 *
rouã_ít
;

289 
ªsu…
;

291 i‡(
ªq
 !
NWIOIPGROUTE
)

294 
d©a
(*
ù_fd
->
if_gë_u£rd©a
)(ù_fd->
if_§fd
,

295 0, (
nwio_rouã_t
), 
TRUE
);

297 
d©a

	`bf_∑ckIffLess
 (d©a, (
nwio_rouã_t
) );

298 
rouã_ít
(
nwio_rouã_t
 *)
	`±r2acc_d©a
(
d©a
);

300 
ªsu…

	`ùr_gë_rouã
(
rouã_ít
->
nwr_ít_no
,Ñoute_ent);

301 i‡(
ªsu…
>=0)

302 (*
ù_fd
->
if_put_u£rd©a
)(ù_fd->
if_§fd
, 0,

303 
d©a
, 
TRUE
);

304  (*
ù_fd
->
if_put_u£rd©a
)(ù_fd->
if_§fd
,

305 
ªsu…
, (
acc_t
 *)0, 
TRUE
);

307 
NWIOIPSROUTE
 & 
IOCTYPE_MASK
:

309 
acc_t
 *
d©a
;

310 
nwio_rouã_t
 *
rouã_ít
;

311 
rouã_t
 *
rouã
;

312 
ªsu…
;

314 i‡(
ªq
 !
NWIOIPSROUTE
)

317 
d©a
(*
ù_fd
->
if_gë_u£rd©a
)(ù_fd->
if_§fd
,

318 0, (
nwio_rouã_t
), 
TRUE
);

320 
d©a

	`bf_∑ckIffLess
 (d©a, (
nwio_rouã_t
) );

321 
rouã_ít
(
nwio_rouã_t
 *)
	`±r2acc_d©a
(
d©a
);

322 
rouã

	`ùr_add_rouã
(
rouã_ít
->
nwr_de°
,

323 
rouã_ít
->
nwr_√tmask
,Ñouã_ít->
nwr_g©eway
,

324 
ù_fd
->
if_p‹t
-
ù_p‹t_èbÀ
, (
time_t
)0,

325 
rouã_ít
->
nwr_di°
, !!‘ouã_ít->
nwr_Êags
 &

326 
NWRF_FIXED
), 
rouã_ít
->
nwr_¥ef
);

327 
	`bf_a‰ì
(
d©a
);

328 i‡(
rouã
)

329 
ªsu…

NW_OK
;

332 #i‡
DEBUG


333 { 
	`whîe
(); 
	`¥ötf
("out ofÑoutingÅableÉntries\n"); }

335 
ªsu…

ENOMEM
;

337  (*
ù_fd
->
if_put_u£rd©a
)(ù_fd->
if_§fd
,

338 
ªsu…
, (
acc_t
 *)0, 
TRUE
);

343 #i‡
DEBUG


344 { 
	`whîe
(); 
	`¥ötf
("replying EBADIOCTL\n"); }

346  (*
ù_fd
->
if_put_u£rd©a
)(ù_fd-> 
if_§fd
, 
EBADIOCTL
,

347 (
acc_t
 *)0, 
TRUE
);

348 
	}
}

350 
PRIVATE
 
	$ù_check›t
 (
ù_fd
)

351 
ù_fd_t
 *
ù_fd
;

355 
Êags
;

356 
í_di_Êags
;

357 
ù_p‹t_t
 *
p‹t
;

358 
ªsu…
;

360 
Êags

ù_fd
->
if_ù›t
.
nwio_Êags
;

361 
í_di_Êags
(
Êags
 >>16) | (flags & 0xffff);

363 i‡(
Êags
 & 
NWIO_HDR_O_SPEC
)

365 
ªsu…

	`ù_chk_hdr›t
 (
ù_fd
->
if_ù›t
.
nwio_hdr›t
.
iho_d©a
,

366 
ù_fd
->
if_ù›t
.
nwio_hdr›t
.
iho_›t_siz
);

367 i‡(
ªsu…
<0)

368  
ªsu…
;

370 i‡((
í_di_Êags
 & 
NWIO_ACC_MASK
) &&

371 (
í_di_Êags
 & 
NWIO_LOC_MASK
) &&

372 (
í_di_Êags
 & 
NWIO_BROAD_MASK
) &&

373 (
í_di_Êags
 & 
NWIO_REM_MASK
) &&

374 (
í_di_Êags
 & 
NWIO_PROTO_MASK
) &&

375 (
í_di_Êags
 & 
NWIO_HDR_O_MASK
) &&

376 (
í_di_Êags
 & 
NWIO_RW_MASK
))

378 
ù_fd
->
if_Êags
 |
IFF_OPTSET
;

380 i‡(
ù_fd
->
if_rd_buf
)

381 i‡(
	`gë_time
(Ë> 
ù_fd
->
if_exp_tim
 ||

382 !
	`ù_ok_f‹_fd
(
ù_fd
, ip_fd->
if_rd_buf
))

384 
	`bf_a‰ì
(
ù_fd
->
if_rd_buf
);

385 
ù_fd
->
if_rd_buf
= 0;

391 
ù_fd
->
if_Êags
 &~
IFF_OPTSET
;

392 i‡(
ù_fd
->
if_rd_buf
)

394 
	`bf_a‰ì
(
ù_fd
->
if_rd_buf
);

395 
ù_fd
->
if_rd_buf
= 0;

399  
NW_OK
;

400 
	}
}

402 
PRIVATE
 
	$ª∂y_thr_gë
(
ù_fd
, 
ª∂y
, 
f‹_io˘l
)

403 
ù_fd_t
 *
ù_fd
;

404 
size_t
 
ª∂y
;

405 
f‹_io˘l
;

407 
acc_t
 *
ªsu…
;

408 
ªsu…
(
ù_fd
->
if_gë_u£rd©a
)(ù_fd->
if_§fd
, 
ª∂y
,

409 (
size_t
)0, 
f‹_io˘l
);

410 
	`as£π
 (!
ªsu…
);

411 
	}
}

	@ip_lib.c

5 
	~"öë.h
"

6 
	~"buf.h
"

7 
	~"ty≥.h
"

9 
	~"as£π.h
"

10 
	~"io.h
"

11 
	~"ù_öt.h
"

13 
INIT_PANIC
();

15 
PUBLIC
 
ùaddr_t
 
	$ù_gë_√tmask
 (
ho°addr
)

16 
ùaddr_t
 
ho°addr
;

18 
ùaddr_t
 
ho°
, 
mask
;

20 #i‡
DEBUG
 & 256

21 { 
	`whîe
(); 
	`¥ötf
("ip_lib.c: ip_get_netmask(hostaddr= ");

22 
	`wrôeIpAddr
(
ho°addr
); 
	`¥ötf
(")\n"); }

24 
ho°

	`¡ohl
(
ho°addr
);

25 i‡(!(
ho°
 & 0x80000000L))

26 
mask
= 0xff000000L;

27 i‡(!(
ho°
 & 0x40000000L))

28 
mask
= 0xffff0000L;

29 i‡(!(
ho°
 & 0x20000000L))

30 
mask
= 0xffffff00L;

33 #i‡
DEBUG


34 { 
	`whîe
(); 
	`¥ötf
("ù.c: m¨sü¿addªss: "); 
	`wrôeIpAddr
 (
ho°addr
);

35 
	`¥ötf
("\n"); }

37 
mask
= 0xffffffffL;

39  
	`ht⁄l
(
mask
);

40 
	}
}

42 
PUBLIC
 
	$ù_chk_hdr›t
 (
›t
, 
›éí
)

43 
u8_t
 *
›t
;

44 
›éí
;

46 
i
, 
£curôy_¥e£¡

FALSE
, 
lo£_sour˚_¥e£¡
= FALSE,

47 
°ri˘_sour˚_¥e£¡

FALSE
, 
ªc‹d_rouã_¥e£¡
= FALSE,

48 
time°amp_¥e£¡

FALSE
;

50 #i‡
DEBUG


51 { 
	`whîe
(); 
	`¥ötf
("ù_chk_hdr›t(..., %dËˇŒed\n", 
›éí
); }

54 
	`as£π
 (!(
›éí
 & 3));

55 
i
= 0;

56 
i
<
›éí
)

58 #i‡
DEBUG


59 { 
	`whîe
(); 
	`¥ötf
("*›t%d\n", *
›t
); }

61 *
›t
)

64  
NW_OK
;

66 
i
++;

67 
›t
++;

70 i‡(
£curôy_¥e£¡
)

71  
EINVAL
;

72 
£curôy_¥e£¡

TRUE
;

73 i‡(
›t
[1] != 11)

74  
EINVAL
;

75 
i
 +
›t
[1];

76 
›t
 += opt[1];

79 i‡(
lo£_sour˚_¥e£¡
)

81 #i‡
DEBUG


82 { 
	`whîe
(); 
	`¥ötf
("sndÜose soruceÑoute\n"); }

84  
EINVAL
;

86 
lo£_sour˚_¥e£¡

TRUE
;

87 i‡(
›t
[1]<3)

89 #i‡
DEBUG


90 { 
	`whîe
(); 
	`¥ötf
("wrongÜength in sourceÑoute\n"); }

92  
EINVAL
;

94 
i
 +
›t
[1];

95 
›t
 += opt[1];

98 i‡(
°ri˘_sour˚_¥e£¡
)

99  
EINVAL
;

100 
°ri˘_sour˚_¥e£¡

TRUE
;

101 i‡(
›t
[1]<3)

102  
EINVAL
;

103 
i
 +
›t
[1];

104 
›t
 += opt[1];

107 i‡(
ªc‹d_rouã_¥e£¡
)

108  
EINVAL
;

109 
ªc‹d_rouã_¥e£¡

TRUE
;

110 i‡(
›t
[1]<3)

111  
EINVAL
;

112 
i
 +
›t
[1];

113 
›t
 += opt[1];

116 i‡(
time°amp_¥e£¡
)

117  
EINVAL
;

118 
time°amp_¥e£¡

TRUE
;

119 i‡(
›t
[1] != 4)

120  
EINVAL
;

121 
›t
[3] & 0xff)

128  
EINVAL
;

130 
i
 +
›t
[1];

131 
›t
 += opt[1];

134  
EINVAL
;

137 i‡(
i
 > 
›éí
)

139 #i‡
DEBUG


140 { 
	`whîe
(); 
	`¥ötf
("option of wrongÜength\n"); }

142  
EINVAL
;

144  
NW_OK
;

145 
	}
}

147 
	$ù_¥öt_‰ags
(
acc
)

148 
acc_t
 *
acc
;

150 
ù_hdr_t
 *
ù_hdr
;

151 
fú°
;

153 i‡(!
acc
)

154 
	`¥ötf
("(null)");

156 
fú°
1; 
acc
;áccacc->
acc_ext_lök
, first= 0)

158 
	`as£π
 (
acc
->
acc_Àngth
 >
IP_MIN_HDR_SIZE
);

159 
ù_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
acc
);

160 i‡(
fú°
)

162 
	`wrôeIpAddr
(
ù_hdr
->
ih_§c
);

163 
	`¥ötf
(" > ");

164 
	`wrôeIpAddr
(
ù_hdr
->
ih_d°
);

166 
	`¥ötf
(" {%x:%d@%d%c}", 
ù_hdr
->
ih_id
,

167 
	`¡ohs
(
ù_hdr
->
ih_Àngth
),

168 (
	`¡ohs
(
ù_hdr
->
ih_Êags_‰agoff
Ë& 
IH_FRAGOFF_MASK
)*8,

169 (
	`¡ohs
(
ù_hdr
->
ih_Êags_‰agoff
Ë& 
IH_MORE_FRAGS
) ?

172 
	}
}

	@ip_read.c

5 
	~"öë.h
"

6 
	~"buf.h
"

7 
	~"˛ock.h
"

8 
	~"ty≥.h
"

10 
	~"as£π.h
"

11 
	~"icmp_lib.h
"

12 
	~"io.h
"

13 
	~"ù.h
"

14 
	~"ù_öt.h
"

16 
INIT_PANIC
();

18 
FORWARD
 
ù_ass_t
 *
föd_ass_ít
 
ARGS
(–
ù_p‹t_t
 *
p‹t
, 
U16_t
 
id
,

19 
¥Ÿo
, 
ùaddr_t
 
§c
, i∑ddr_à
d°
 ));

20 
FORWARD
 
acc_t
 *
mîge_‰ags
 
ARGS
(–acc_à*
fú°
,ácc_à*
£c⁄d
 ));

21 
FORWARD
 
√t_brﬂd
 
ARGS
(–
ùaddr_t
 
hﬂddr
, i∑ddr_à
√èddr
,

22 
ùaddr_t
 
√tmask
 ));

23 
FORWARD
 
ù_‰ag_chk
 
ARGS
(–
acc_t
 *
∑ck
 ));

24 
FORWARD
 
acc_t
 *
ªas£mbÀ
 
ARGS
(–
ù_p‹t_t
 *
p‹t
,ácc_à*
∑ck
,

25 
ù_hdr_t
 *
ù_hdr
 ));

26 
FORWARD
 
ok_f‹_p‹t
 
ARGS
(–
ù_p‹t_t
 *
p‹t
, 
ùaddr_t
 
ùaddr
,

27 *
ªf_brﬂd_Æl
 ));

29 
PUBLIC
 
	$ù_ªad
 (
fd
, 
cou¡
)

30 
fd
;

31 
size_t
 
cou¡
;

33 
ù_fd_t
 *
ù_fd
;

35 
ù_fd
&
ù_fd_èbÀ
[
fd
];

36 i‡(!(
ù_fd
->
if_Êags
 & 
IFF_OPTSET
))

37  (*
ù_fd
->
if_put_u£rd©a
)(ù_fd->
if_§fd
, 
EBADMODE
,

38 (
acc_t
 *)0, 
FALSE
);

40 
ù_fd
->
if_rd_cou¡

cou¡
;

42 i‡(
ù_fd
->
if_rd_buf
)

44 i‡(
	`gë_time
(Ë<
ù_fd
->
if_exp_tim
)

45  
	`ù_∑ckë2u£r
 (
ù_fd
);

46 
	`whîe
();

47 
	`bf_a‰ì
(
ù_fd
->
if_rd_buf
);

48 
	`whîe
();

49 
ù_fd
->
if_rd_buf
= 0;

51 
ù_fd
->
if_Êags
 |
IFF_READ_IP
;

52 #i‡
DEBUG
 & 256

53 { 
	`whîe
(); 
	`¥ötf
("ip_fd_table[%d].if_flags= 0x%x\n",

54 
ù_fd
-
ù_fd_èbÀ
, ip_fd->
if_Êags
); }

56  
NW_SUSPEND
;

57 
	}
}

59 
PRIVATE
 
acc_t
 *
	$ªas£mbÀ
 (
p‹t
, 
∑ck
, 
∑ck_hdr
)

60 
ù_p‹t_t
 *
p‹t
;

61 
acc_t
 *
∑ck
;

62 
ù_hdr_t
 *
∑ck_hdr
;

64 
ù_ass_t
 *
ass_ít
;

65 
size_t
 
∑ck_hdr_Àn
, 
∑ck_d©a_Àn
, 
∑ck_off£t
, 
tmp_off£t
;

66 
u16_t
 
∑ck_Êags_‰agoff
;

67 
acc_t
 *
¥ev_hód
, *
√w_hód
, *
√w_èû
, *
tmp_acc
;

68 
acc_t
 
sw≠_acc
;

69 
ù_hdr_t
 *
tmp_hdr
;

70 
time_t
 
fú°_time
;

72 #i‡
DEBUG
 & 256

73 { 
	`whîe
(); 
	`¥ötf
("inÑeassemble()\n"); }

75 
ass_ít

	`föd_ass_ít
 (
p‹t
, 
∑ck_hdr
->
ih_id
,

76 
∑ck_hdr
->
ih_¥Ÿo
,Öack_hdr->
ih_§c
,Öack_hdr->
ih_d°
);

77 #i‡
DEBUG
 & 256

78 { 
	`whîe
(); 
	`ù_¥öt_‰ags
(
ass_ít
->
ü_‰ags
); 
	`¥ötf
("\n"); }

81 
∑ck_Êags_‰agoff

	`¡ohs
(
∑ck_hdr
->
ih_Êags_‰agoff
);

82 
∑ck_hdr_Àn
(
∑ck_hdr
->
ih_vîs_ihl
 & 
IH_IHL_MASK
) * 4;

83 
∑ck_d©a_Àn

	`¡ohs
(
∑ck_hdr
->
ih_Àngth
)-
∑ck_hdr_Àn
;

84 
∑ck_off£t
(
∑ck_Êags_‰agoff
 & 
IH_FRAGOFF_MASK
)*8;

85 
∑ck
->
acc_ext_lök

NULL
;

86 #i‡
DEBUG
 & 256

87 { 
	`whîe
(); 
	`ù_¥öt_‰ags
(
∑ck
); 
	`¥ötf
("\n"); }

90 
√w_hód
= 0;

92 
¥ev_hód

ass_ít
->
ü_‰ags
,áss_ít->ü_‰ags
NULL
;Örev_head;

93 
¥ev_hód
¥ev_hód->
acc_ext_lök
)

95 
tmp_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
¥ev_hód
);

96 
tmp_off£t
(
	`¡ohs
(
tmp_hdr
->
ih_Êags_‰agoff
) &

97 
IH_FRAGOFF_MASK
)*8;

98 #i‡
DEBUG
 & 256

99 { 
	`whîe
(); 
	`¥ötf
("tmp_off£t%d,Öack_off£t%d\n", 
tmp_off£t
,

100 
∑ck_off£t
); }

104 i‡(
tmp_off£t
 >
∑ck_off£t
)

107 i‡(
√w_hód
)

108 
√w_èû
->
acc_ext_lök

¥ev_hód
;

110 
√w_hód

¥ev_hód
;

111 
√w_èû

¥ev_hód
;

113 i‡(
¥ev_hód
)

115 
	`whîe
();

116 
∑ck

	`mîge_‰ags
’ack, 
¥ev_hód
);

118 i‡(
√w_hód
)

120 
∑ck

	`mîge_‰ags
(
√w_èû
,Öack);

121 i‡(
∑ck
 !
√w_èû
)

123 
sw≠_acc
*
∑ck
;

124 *
∑ck
*
√w_èû
;

125 *
√w_èû

sw≠_acc
;

130 
√w_hód

∑ck
;

131 
√w_èû

∑ck
;

133 
ass_ít
->
ü_‰ags

√w_hód
;

134 #i‡
DEBUG
 & 256

135 { 
	`whîe
(); 
	`ù_¥öt_‰ags
(
ass_ít
->
ü_‰ags
); 
	`¥ötf
("\n"); }

138 
∑ck

ass_ít
->
ü_‰ags
;

139 
∑ck_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
∑ck
);

140 
∑ck_Êags_‰agoff

	`¡ohs
(
∑ck_hdr
->
ih_Êags_‰agoff
);

141 #i‡
DEBUG
 & 256

142 { 
	`whîe
(); 
	`¥ötf
(

144 
∑ck_Êags_‰agoff
, 
∑ck_hdr
->
ih_vîs_ihl
,

145 
	`¡ohs
(
∑ck_hdr
->
ih_Àngth
)); }

148 i‡(!(
∑ck_Êags_‰agoff
 & (
IH_FRAGOFF_MASK
|
IH_MORE_FRAGS
)))

151 #i‡
DEBUG
 & 256

152 { 
	`whîe
(); 
	`¥ötf
("gotá completeÖacketÇow\n"); }

154 
fú°_time

ass_ít
->
ü_fú°_time
;

156 
ass_ít
->
ü_‰ags
= 0;

157 
ass_ít
->
ü_fú°_time
= 0;

159 
∑ck
->
acc_ext_lök
)

161 { 
	`whîe
(); 
	`¥ötf
("strange\n"); }

162 
tmp_acc

∑ck
->
acc_ext_lök
;

163 
∑ck
->
acc_ext_lök

tmp_acc
->acc_ext_link;

164 
	`bf_a‰ì
(
tmp_acc
);

166 i‡((
ass_ít
->
ü_mö_âl
Ë* 
HZ
 + 
fú°_time
 <

167 
	`gë_time
())

168 
	`icmp_‰ag_ass_tim
(
∑ck
);

170  
∑ck
;

172  
NULL
;

173 
	}
}

175 
PRIVATE
 
acc_t
 *
	$mîge_‰ags
 (
fú°
, 
£c⁄d
)

176 
acc_t
 *
fú°
, *
£c⁄d
;

178 
ù_hdr_t
 *
fú°_hdr
, *
£c⁄d_hdr
;

179 
size_t
 
fú°_hdr_size
, 
£c⁄d_hdr_size
, 
fú°_d©asize
, 
£c⁄d_d©asize
,

180 
fú°_off£t
, 
£c⁄d_off£t
;

181 
acc_t
 *
cut_£c⁄d
, *
tmp_acc
;

183 #i‡
DEBUG
 & 256

184 { 
	`whîe
(); 
	`ù_¥öt_‰ags
(
fú°
); 
	`¥ötf
(" , "); ip_¥öt_‰ags(
£c⁄d
); }

186 i‡(!
£c⁄d
)

188 
fú°
->
acc_ext_lök

NULL
;

189  
fú°
;

192 
	`as£π
 (
fú°
->
acc_Àngth
 >
IP_MIN_HDR_SIZE
);

193 
	`as£π
 (
£c⁄d
->
acc_Àngth
 >
IP_MIN_HDR_SIZE
);

195 
fú°_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
fú°
);

196 
fú°_off£t
(
	`¡ohs
(
fú°_hdr
->
ih_Êags_‰agoff
) &

197 
IH_FRAGOFF_MASK
) * 8;

198 
fú°_hdr_size
(
fú°_hdr
->
ih_vîs_ihl
 & 
IH_IHL_MASK
) * 4;

199 
fú°_d©asize

	`¡ohs
(
fú°_hdr
->
ih_Àngth
Ë- 
fú°_hdr_size
;

203 
£c⁄d_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
£c⁄d
);

204 
£c⁄d_off£t
(
	`¡ohs
(
£c⁄d_hdr
->
ih_Êags_‰agoff
) &

205 
IH_FRAGOFF_MASK
) * 8;

206 
£c⁄d_hdr_size
(
£c⁄d_hdr
->
ih_vîs_ihl
 & 
IH_IHL_MASK
) * 4;

207 
£c⁄d_d©asize

	`¡ohs
(
£c⁄d_hdr
->
ih_Àngth
Ë- 
£c⁄d_hdr_size
;

209 #i‡
DEBUG


210 i‡(
£c⁄d_off£t
 <
fú°_off£t
)

211 { 
	`whîe
(); 
	`¥ötf
 ("first_offset= %u, second_offset= %u\n",

212 
fú°_off£t
, 
£c⁄d_off£t
);

213 
	`¥ötf
 ("first_hdr_size= %u, second_hdr_size= %u\n",

214 
fú°_hdr_size
, 
£c⁄d_hdr_size
);

215 
	`¥ötf
 ("first_datasize= %u, second_datasize= %u\n",

216 
fú°_d©asize
, 
£c⁄d_d©asize
); }

218 
	`as£π
 (
fú°_hdr_size
 + 
fú°_d©asize
 =
	`bf_bufsize
(
fú°
));

219 
	`as£π
 (
£c⁄d_hdr_size
 + 
£c⁄d_d©asize
 =
	`bf_bufsize
(
£c⁄d
));

220 
	`as£π
 (
£c⁄d_off£t
 > 
fú°_off£t
);

222 i‡(
£c⁄d_off£t
 > 
fú°_off£t
+
fú°_d©asize
)

224 
fú°
->
acc_ext_lök

£c⁄d
;

225  
fú°
;

228 i‡(
£c⁄d_off£t
 + 
£c⁄d_d©asize
 <
fú°_off£t
 +

229 
fú°_d©asize
)

231 
fú°
->
acc_ext_lök

£c⁄d
->acc_ext_link;

232 
	`bf_a‰ì
(
£c⁄d
);

236 i‡(!(
£c⁄d_hdr
->
ih_Êags_‰agoff
 & 
	`HTONS
(
IH_MORE_FRAGS
)))

237 
fú°_hdr
->
ih_Êags_‰agoff
 &~
	`HTONS
(
IH_MORE_FRAGS
);

239 
£c⁄d_d©asize

£c⁄d_off£t
+£c⁄d_d©asize-(
fú°_off£t
+

240 
fú°_d©asize
);

241 
cut_£c⁄d

	`bf_cut
(
£c⁄d
, 
£c⁄d_hdr_size
 + 
fú°_off£t
+

242 
fú°_d©asize
-
£c⁄d_off£t
, 
£c⁄d_d©asize
);

243 
tmp_acc

£c⁄d
->
acc_ext_lök
;

244 
	`bf_a‰ì
(
£c⁄d
);

245 
£c⁄d

tmp_acc
;

247 
fú°_d©asize
 +
£c⁄d_d©asize
;

248 
fú°_hdr
->
ih_Àngth

	`ht⁄s
(
fú°_hdr_size
 + 
fú°_d©asize
);

250 
fú°

	`bf_≠≥nd
 (fú°, 
cut_£c⁄d
);

251 i‡(!
£c⁄d
)

253 
fú°
->
acc_ext_lök

NULL
;

256 
	`as£π
 (
fú°
->
acc_Àngth
 >
IP_MIN_HDR_SIZE
);

257 
fú°_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
fú°
);

259 
	`as£π
 (
fú°_hdr_size
 + 
fú°_d©asize
 =
	`bf_bufsize
(
fú°
));

260  
fú°
;

261 
	}
}

263 
PRIVATE
 
ù_ass_t
 *
	$föd_ass_ít
 (
p‹t
, 
id
, 
¥Ÿo
, 
§c
, 
d°
)

264 
ù_p‹t_t
 *
p‹t
;

265 
u16_t
 
id
;

266 
ù¥Ÿo_t
 
¥Ÿo
;

267 
ùaddr_t
 
§c
;

268 
ùaddr_t
 
d°
;

270 
ù_ass_t
 *
√w_ass_ít
, *
tmp_ass_ít
;

271 
i
;

272 
acc_t
 *
tmp_acc
, *
cuº_acc
;

274 #i‡
DEBUG
 & 256

275 { 
	`whîe
(); 
	`¥ötf
("find_ass_ent (.., id= %u,Öroto= %u, src= ",

276 
id
, 
	`¡ohs
(
¥Ÿo
)); 
	`wrôeIpAddr
(
§c
); 
	`¥ötf
(" dst= ");

277 
	`wrôeIpAddr
(
d°
); 
	`¥ötf
(")\n"); }

279 
√w_ass_ít
= 0;

281 
i
=0, 
tmp_ass_ít

ù_ass_èbÀ
; i<
IP_ASS_NR
; i++,

282 
tmp_ass_ít
++)

284 i‡(!
tmp_ass_ít
->
ü_‰ags
 &&Åmp_ass_ent->

285 
ü_fú°_time
)

287 #i‡
DEBUG


288 { 
	`whîe
(); 
	`¥ötf
("ip.c: strange ip_assÉntry (can beáÑace condition)\n"); }

293 i‡((
tmp_ass_ít
->
ü_§ˇddr
 =
§c
) &&

294 (
tmp_ass_ít
->
ü_d°addr
 =
d°
) &&

295 (
tmp_ass_ít
->
ü_¥Ÿo
 =
¥Ÿo
) &&

296 (
tmp_ass_ít
->
ü_id
 =
id
) &&

297 (
tmp_ass_ít
->
ü_p‹t
 =
p‹t
))

299 #i‡
DEBUG
 & 256

300 { 
	`whîe
(); 
	`¥ötf
("foundánáss_ent\n"); }

302  
tmp_ass_ít
;

304 i‡(!
√w_ass_ít
 || 
tmp_ass_ít
->
ü_fú°_time
 <

305 
√w_ass_ít
->
ü_fú°_time
)

306 
√w_ass_ít

tmp_ass_ít
;

308 #i‡
DEBUG
 & 256

309 { 
	`whîe
(); 
	`¥ötf
("madeánáss_ent\n"); }

311 
√w_ass_ít
->
ü_mö_âl

IP_MAX_TTL
;

312 
√w_ass_ít
->
ü_p‹t

p‹t
;

313 
√w_ass_ít
->
ü_fú°_time

	`gë_time
();

314 
√w_ass_ít
->
ü_§ˇddr

§c
;

315 
√w_ass_ít
->
ü_d°addr

d°
;

316 
√w_ass_ít
->
ü_¥Ÿo

¥Ÿo
;

317 
√w_ass_ít
->
ü_id

id
;

319 i‡(
√w_ass_ít
->
ü_‰ags
)

321 
cuº_acc

√w_ass_ít
->
ü_‰ags
->
acc_ext_lök
;

322 
cuº_acc
)

324 
tmp_acc

cuº_acc
->
acc_ext_lök
;

325 
	`bf_a‰ì
(
cuº_acc
);

326 
cuº_acc

tmp_acc
;

328 
cuº_acc

√w_ass_ít
->
ü_‰ags
;

329 
√w_ass_ít
->
ü_‰ags
= 0;

330 
	`icmp_‰ag_ass_tim
(
cuº_acc
);

332  
√w_ass_ít
;

333 
	}
}

335 
PUBLIC
 
	$ù_ëh_¨rived
(
ù_p‹t
, 
∑ck
)

336 
ù_p‹t_t
 *
ù_p‹t
;

337 
acc_t
 *
∑ck
;

339 
ù_hdr_t
 *
ù_hdr
;

340 
f‹_this_p‹t
, 
brﬂdˇ°_Ælowed
, 
brﬂdˇ°_∑ck
;

341 
ù_‰ag_Àn
, 
ù_hdr_Àn
;

342 
acc_t
 *
ù_acc
, *
ëh_acc
;

343 
ëhî_addr_t
 
ëh_d°
, 
ëh_§c
;

344 
ëh_hdr_t
 *
ëh_hdr
;

345 
size_t
 
∑ck_size
;

347 #i‡
DEBUG
 & 256

348 { 
	`whîe
(); 
	`¥ötf
("ip_eth_arrived(&ip_port_table[%d],Öacket_length= %d)\n",

349 
ù_p‹t
-
ù_p‹t_èbÀ
, 
	`bf_bufsize
(
∑ck
)); }

351 
∑ck

	`bf_∑ckIffLess
’ack, 
ETH_HDR_SIZE
);

352 
	`as£π
 (
∑ck
->
acc_Àngth
 >
ETH_HDR_SIZE
);

354 
ëh_hdr
(
ëh_hdr_t
 *)
	`±r2acc_d©a
(
∑ck
);

355 
ëh_d°

ëh_hdr
->
eh_d°
;

356 
ëh_§c

ëh_hdr
->
eh_§c
;

357 i‡(
ëh_d°
.
ó_addr
[0] & 0x01)

358 
brﬂdˇ°_∑ck

TRUE
;

360 
brﬂdˇ°_∑ck

FALSE
;

362 
∑ck_size

	`bf_bufsize
(
∑ck
);

363 
ëh_acc

	`bf_cut
(
∑ck
, 0, 
ETH_HDR_SIZE
);

364 
ù_acc

	`bf_cut
(
∑ck
, 
ETH_HDR_SIZE
, 
∑ck_size
-ETH_HDR_SIZE);

365 
∑ck_size
 -
ETH_HDR_SIZE
;

366 #i‡
DEBUG
 & 256

367 { 
	`whîe
(); 
	`¥ötf
("∑ckë_Àngth%d\n", 
	`bf_bufsize
(
ù_acc
)); }

369 
	`bf_a‰ì
(
∑ck
);

371 i‡(
∑ck_size
 < 
IP_MIN_HDR_SIZE
)

373 #i‡
DEBUG


374 { 
	`whîe
(); 
	`¥ötf
("wrongácc_length\n"); }

376 
	`bf_a‰ì
(
ù_acc
);

377 
	`bf_a‰ì
(
ëh_acc
);

380 
ù_acc

	`bf_∑ckIffLess
(ù_acc, 
IP_MIN_HDR_SIZE
);

381 
	`as£π
 (
ù_acc
->
acc_Àngth
 >
IP_MIN_HDR_SIZE
);

383 
ù_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
ù_acc
);

384 
ù_hdr_Àn
(
ù_hdr
->
ih_vîs_ihl
 & 
IH_IHL_MASK
) << 2;

385 i‡(
ù_hdr_Àn
>
IP_MIN_HDR_SIZE
)

387 
ù_acc

	`bf_∑ckIffLess
(ù_acc, 
ù_hdr_Àn
);

388 
ù_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
ù_acc
);

390 #i‡
DEBUG
 & 256

391 { 
	`whîe
(); 
	`¥ötf
("ih_vîs_ihl0x%x\n", 
ù_hdr
->
ih_vîs_ihl
); }

393 
ù_‰ag_Àn

	`¡ohs
(
ù_hdr
->
ih_Àngth
);

394 i‡(
ù_‰ag_Àn
<
∑ck_size
)

396 
∑ck

ù_acc
;

397 
ù_acc

	`bf_cut
(
∑ck
, 0, 
ù_‰ag_Àn
);

398 
	`bf_a‰ì
(
∑ck
);

401 #i‡
DEBUG
 & 256

402 { 
	`whîe
(); 
	`¥ötf
("ù_‰ag_Àn%d,ÖackëÜígth%d\n", 
ù_‰ag_Àn
, 
	`bf_bufsize
(
ù_acc
)); }

404 i‡(!
	`ù_‰ag_chk
(
ù_acc
))

406 #i‡
DEBUG


407 { 
	`whîe
(); whîe(); 
	`¥ötf
("fragmentÇotállright\n"); }

409 
	`bf_a‰ì
(
ù_acc
);

410 
	`bf_a‰ì
(
ëh_acc
);

413 
f‹_this_p‹t

	`ok_f‹_p‹t
(
ù_p‹t
, 
ù_hdr
->
ih_d°
,

414 &
brﬂdˇ°_Ælowed
);

416 i‡(!
brﬂdˇ°_Ælowed
 && 
brﬂdˇ°_∑ck
)

418 
	`¥ötf
("gotÉth-broadcastÖack for ip-nonbroadcastáddr, src=");

419 
	`wrôeIpAddr
(
ù_hdr
->
ih_§c
);

420 
	`¥ötf
(" dst=");

421 
	`wrôeIpAddr
(
ù_hdr
->
ih_d°
);

422 
	`¥ötf
("\n");

423 
	`bf_a‰ì
(
ù_acc
);

424 
	`bf_a‰ì
(
ëh_acc
);

427 #i‡!
IP_ROUTER


428 i‡(!
f‹_this_p‹t
)

430 #i‡
DEBUG


431 { 
	`whîe
(); 
	`¥ötf
("ip.c: got strangeÖacket, src=");

432 
	`wrôeIpAddr
(
ù_hdr
->
ih_§c
); 
	`¥ötf
(" d°="); wrôeIpAddr(ù_hdr->
ih_d°
);

433 
	`¥ötf
(" src_ëh"); 
	`wrôeEthîAddr
(&
ëh_§c
);Örintf(" dst_eth= ");

434 
	`wrôeEthîAddr
(&
ëh_d°
); 
	`¥ötf
("\n"); }

436 
	`bf_a‰ì
(
ù_acc
);

437 
	`bf_a‰ì
(
ëh_acc
);

441 i‡(!
f‹_this_p‹t
)

443 
	`bf_a‰ì
(
ëh_acc
);

444 
	`ù_rouã
(
ù_p‹t
, 
ù_acc
);

448 
	`bf_a‰ì
(
ëh_acc
);

449 i‡(
	`¡ohs
(
ù_hdr
->
ih_Êags_‰agoff
Ë& (
IH_FRAGOFF_MASK
|
IH_MORE_FRAGS
))

451 #i‡
DEBUG
 & 256

452 { 
	`whîe
(); 
	`¥ötf
("reassembling\n"); }

454 
ù_acc

	`ªas£mbÀ
 (
ù_p‹t
, ip_acc, 
ù_hdr
);

455 i‡(!
ù_acc
)

457 
	`as£π
 (
ù_acc
->
acc_Àngth
 >
IP_MIN_HDR_SIZE
);

458 
ù_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
ù_acc
);

459 
	`as£π
 (!(
	`¡ohs
(
ù_hdr
->
ih_Êags_‰agoff
Ë& (
IH_FRAGOFF_MASK
|
IH_MORE_FRAGS
)));

461 
	`ù_p‹t_¨rive
 (
ù_p‹t
, 
ù_acc
, 
ù_hdr
);

462 
	}
}

464 
PRIVATE
 
	$ok_f‹_p‹t
 (
ù_p‹t
, 
ùaddr
, 
ªf_brﬂd_Æl
)

465 
ù_p‹t_t
 *
ù_p‹t
;

466 
ùaddr_t
 
ùaddr
;

467 *
ªf_brﬂd_Æl
;

469 
ùaddr_t
 
√tmask
;

471 #i‡
DEBUG
 & 256

472 { 
	`whîe
(); 
	`¥ötf
("ok_f‹_p‹t–.., "); 
	`wrôeIpAddr
(
ùaddr
);

473 
	`¥ötf
(", ..)\nip_port->ip_ipaddr= ");

474 
	`wrôeIpAddr
(
ù_p‹t
->
ù_ùaddr
); 
	`¥ötf
("\n"); }

476 i‡(
ùaddr
 =
ù_p‹t
->
ù_ùaddr
)

477 *
ªf_brﬂd_Æl

FALSE
;

478 i‡(
ùaddr
 =(
ùaddr_t
)-1)

479 *
ªf_brﬂd_Æl

TRUE
;

480 i‡(
	`√t_brﬂd
 (
ùaddr
, 
ù_p‹t
->
ù_ùaddr
 &

481 
ù_p‹t
->
ù_√tmask
, ip_port->ip_netmask))

482 *
ªf_brﬂd_Æl

TRUE
;

485 
√tmask

	`ù_gë_√tmask
(
ùaddr
);

486 i‡(!
	`√t_brﬂd
 (
ùaddr
, 
ù_p‹t
->
ù_ùaddr
 & 
√tmask
,

487 
√tmask
))

488  
FALSE
;

489 *
ªf_brﬂd_Æl

TRUE
;

491  
TRUE
;

492 
	}
}

494 
PRIVATE
 
	$ù_‰ag_chk
(
∑ck
)

495 
acc_t
 *
∑ck
;

497 
ù_hdr_t
 *
ù_hdr
;

498 
hdr_Àn
;

500 i‡(
∑ck
->
acc_Àngth
 < (
ù_hdr_t
))

502 #i‡
DEBUG


503 { 
	`whîe
(); 
	`¥ötf
("wrongÜength\n"); }

505  
FALSE
;

508 
ù_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
∑ck
);

510 
hdr_Àn
(
ù_hdr
->
ih_vîs_ihl
 & 
IH_IHL_MASK
) * 4;

511 i‡(
∑ck
->
acc_Àngth
 < 
hdr_Àn
)

513 #i‡
DEBUG


514 { 
	`whîe
(); 
	`¥ötf
("wrongÜength\n"); }

516  
FALSE
;

519 i‡(((
ù_hdr
->
ih_vîs_ihl
 >> 4Ë& 
IH_VERSION_MASK
) !=

520 
IP_VERSION
)

522 #i‡
DEBUG


523 { 
	`whîe
(); 
	`¥ötf
("wr⁄g vîsi⁄ (ih_vîs_ihl=0x%x)\n",
ù_hdr
->
ih_vîs_ihl
); }

525  
FALSE
;

527 i‡(
	`¡ohs
(
ù_hdr
->
ih_Àngth
Ë!
	`bf_bufsize
(
∑ck
))

529 #i‡
DEBUG


530 { 
	`whîe
(); 
	`¥ötf
("wrong size\n"); }

532  
FALSE
;

534 i‡((
u16_t
)~
	`⁄eC_sum
(0, (u16_à*)
ù_hdr
, 
hdr_Àn
))

536 #i‡
DEBUG


537 { 
	`whîe
(); 
	`¥ötf
("packet with wrong checksum (= %x)\n",

538 (
u16_t
)~
	`⁄eC_sum
(0, (u16_à*)
ù_hdr
, 
hdr_Àn
)); }

540  
FALSE
;

542 i‡(
hdr_Àn
>
IP_MIN_HDR_SIZE
 && 
	`ù_chk_hdr›t
((
u8_t
 *)

543 (
	`±r2acc_d©a
(
∑ck
Ë+ 
IP_MIN_HDR_SIZE
),

544 
hdr_Àn
-
IP_MIN_HDR_SIZE
))

546 #i‡
DEBUG


547 { 
	`whîe
(); 
	`¥ötf
("packet with wrong options\n"); }

549  
FALSE
;

551  
TRUE
;

552 
	}
}

554 
PRIVATE
 
	$√t_brﬂd
 (
ho°addr
, 
√èddr
, 
√tmask
)

555 
ùaddr_t
 
ho°addr
, 
√èddr
, 
√tmask
;

557 i‡((
ho°addr
 & 
√tmask
Ë!(
√èddr
 &Çetmask))

558  
FALSE
;

559 i‡((
ho°addr
 & ~
√tmask
) == ~netmask)

560  
TRUE
;

561 #i‡
IP_SUN_BROADCAST


562 i‡((
ho°addr
 & ~
√tmask
) == 0)

563  
TRUE
;

565  
FALSE
;

566 
	}
}

568 
PUBLIC
 
	$ù_∑ckë2u£r
 (
ù_fd
)

569 
ù_fd_t
 *
ù_fd
;

571 
acc_t
 *
∑ck
, *
tmp_∑ck
;

572 
ù_hdr_t
 *
hdr
;

573 
ªsu…
, 
hdr_Àn
;

574 
size_t
 
size
, 
å™sf_size
;

576 
∑ck

ù_fd
->
if_rd_buf
;

577 
ù_fd
->
if_rd_buf
= 0;

579 
size

	`bf_bufsize
 (
∑ck
);

581 i‡(
ù_fd
->
if_ù›t
.
nwio_Êags
 & 
NWIO_RWDATONLY
)

584 
∑ck

	`bf_∑ckIffLess
 (∑ck, 
IP_MIN_HDR_SIZE
);

585 
	`as£π
 (
∑ck
->
acc_Àngth
 >
IP_MIN_HDR_SIZE
);

587 
hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
∑ck
);

588 
hdr_Àn
(
hdr
->
ih_vîs_ihl
 & 
IH_IHL_MASK
) * 4;

590 
	`as£π
 (
size
>
hdr_Àn
);

591 
size
 -
hdr_Àn
;

592 
tmp_∑ck

	`bf_cut
(
∑ck
, 
hdr_Àn
, 
size
);

593 
	`bf_a‰ì
(
∑ck
);

594 
∑ck

tmp_∑ck
;

597 i‡(
size
>
ù_fd
->
if_rd_cou¡
)

599 
tmp_∑ck

	`bf_cut
 (
∑ck
, 0, 
ù_fd
->
if_rd_cou¡
);

600 
	`bf_a‰ì
(
∑ck
);

601 
∑ck

tmp_∑ck
;

602 
å™sf_size

ù_fd
->
if_rd_cou¡
;

605 
å™sf_size

size
;

607 
ªsu…
(*
ù_fd
->
if_put_u£rd©a
)(ù_fd->
if_§fd
,

608 (
size_t
)0, 
∑ck
, 
FALSE
);

609 i‡(
ªsu…
 >= 0)

610 i‡(
size
 > 
å™sf_size
)

611 
ªsu…

EPACKSIZE
;

613 
ªsu…

å™sf_size
;

615 #i‡
DEBUG
 & 256

616 { 
	`whîe
(); 
	`¥ötf
("packet2user cleared IFF_READ_IP\n"); }

618 
ù_fd
->
if_Êags
 &~
IFF_READ_IP
;

619 
ªsu…
(*
ù_fd
->
if_put_u£rd©a
)(ù_fd->
if_§fd
,Ñesult,

620 (
acc_t
 *)0, 
FALSE
);

621 
	`as£π
 (
ªsu…
 >= 0);

623  
ªsu…
;

624 
	}
}

626 
PUBLIC
 
	$ù_ok_f‹_fd
 (
ù_fd
, 
∑ck
)

627 
ù_fd_t
 *
ù_fd
;

628 
acc_t
 *
∑ck
;

630 
ù_p‹t_t
 *
ù_p‹t
;

631 
ù_hdr_t
 *
hdr
;

632 
ùaddr_t
 
d°
;

633 
∑ck_köd
, 
nwio_Êags
;

636 
	`as£π
 (
∑ck
->
acc_Àngth
 >
IP_MIN_HDR_SIZE
);

638 
ù_p‹t

ù_fd
->
if_p‹t
;

640 
hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
∑ck
);

641 
d°

hdr
->
ih_d°
;

642 i‡(
d°
 =
ù_p‹t
->
ù_ùaddr
)

643 
∑ck_köd

NWIO_EN_LOC
;

645 
∑ck_köd

NWIO_DI_LOC
;

647 
nwio_Êags

ù_fd
->
if_ù›t
.nwio_flags;

648 i‡(!(
∑ck_köd
 & 
nwio_Êags
))

649  
FALSE
;

651 i‡((
nwio_Êags
 & 
NWIO_PROTOSPEC
) &&

652 (
hdr
->
ih_¥Ÿo
 !
ù_fd
->
if_ù›t
.
nwio_¥Ÿo
))

653  
FALSE
;

655 i‡((
nwio_Êags
 & 
NWIO_REMSPEC
) &&

656 (
hdr
->
ih_§c
 !
ù_fd
->
if_ù›t
.
nwio_ªm
))

657  
FALSE
;

659  
TRUE
;

660 
	}
}

662 
PUBLIC
 
	$ù_p‹t_¨rive
 (
ù_p‹t
, 
∑ck
, 
ù_hdr
)

663 
ù_p‹t_t
 *
ù_p‹t
;

664 
acc_t
 *
∑ck
;

665 
ù_hdr_t
 *
ù_hdr
;

667 
ù_fd_t
 *
ù_fd
, *
sh¨e_fd
;

668 
ù_hdr_t
 *
hdr
;

669 
p‹t_ƒ
;

670 
ù_∑ck_°©
;

671 
i
;

672 
ù¥Ÿo_t
 
¥Ÿo
;

673 
time_t
 
exp_tim
;

675 
	`as£π
 (
∑ck
->
acc_lökC
>0);

677 #i‡
DEBUG
 & 256

678 { 
	`whîe
(); 
	`¥ötf
 ("in ip_port_arrive()\n"); }

680 
	`as£π
 (
∑ck
->
acc_Àngth
 >
IP_MIN_HDR_SIZE
);

682 
exp_tim

	`gë_time
(Ë+ (
ù_hdr
->
ih_âl
+1Ë* 
HZ
;

684 i‡(
ù_hdr
->
ih_d°
 =
ù_p‹t
->
ù_ùaddr
)

685 
ù_∑ck_°©

NWIO_EN_LOC
;

687 
ù_∑ck_°©

NWIO_EN_BROAD
;

689 
¥Ÿo

ù_hdr
->
ih_¥Ÿo
;

691 #i‡
DEBUG
 & 256

692 { 
	`whîe
(); 
	`¥ötf
("¥Ÿo%d\n", 
¥Ÿo
); }

695 
sh¨e_fd
= 0;

696 
i
=0, 
ù_fd
=
ù_fd_èbÀ
; i<
IP_FD_NR
; i++, ip_fd++)

698 i‡(!(
ù_fd
->
if_Êags
 & 
IFF_INUSE
))

702 #i‡
DEBUG
 & 256

703 { 
	`whîe
(); 
	`¥ötf
("ip_fd_table[%d].if_flags= 0x%x\n",

704 
ù_fd
-
ù_fd_èbÀ
, ip_fd->
if_Êags
); }

706 i‡(!(
ù_fd
->
if_Êags
 & 
IFF_OPTSET
))

708 #i‡
DEBUG
 & 256

709 { 
	`whîe
(); 
	`¥ötf
("%d o±i⁄†nŸ së\n", 
i
); }

713 i‡(
ù_fd
->
if_p‹t
 !
ù_p‹t
)

715 #i‡
DEBUG


716 { 
	`whîe
(); 
	`¥ötf
("%d wr⁄gÖ‹t\n", 
i
); }

720 i‡(!(
ù_fd
->
if_ù›t
.
nwio_Êags
 & 
ù_∑ck_°©
))

722 #i‡
DEBUG
 & 256

723 { 
	`whîe
(); 
	`¥ötf
("%d wr⁄g ip_∑ck_°©\n", 
i
); }

727 i‡((
ù_fd
->
if_ù›t
.
nwio_Êags
 & 
NWIO_PROTOSPEC
) &&

728 
¥Ÿo
 !
ù_fd
->
if_ù›t
.
nwio_¥Ÿo
)

730 #i‡
DEBUG
 & 256

731 { 
	`whîe
(); 
	`¥ötf
("%d wr⁄gÖrŸo\n", 
i
); }

735 i‡((
ù_fd
->
if_ù›t
.
nwio_Êags
 & 
NWIO_REMSPEC
) &&

736 
ù_hdr
->
ih_§c
 !
ù_fd
->
if_ù›t
.
nwio_ªm
)

738 #i‡
DEBUG


739 { 
	`whîe
(); 
	`¥ötf
("%d wr⁄g sr¯add∏(REMSPEC)\n", 
i
); }

743 i‡(
ù_fd
->
if_rd_buf
)

745 i‡((
ù_fd
->
if_ù›t
.
nwio_Êags
 &

746 
NWIO_ACC_MASK
Ë=
NWIO_SHARED
)

748 #i‡
DEBUG


749 { 
	`whîe
(); 
	`¥ötf
("%d sh¨edÖackë\n", 
i
); }

751 
sh¨e_fd

ù_fd
;

754 #i‡
DEBUG


755 { 
	`whîe
(); 
	`¥ötf
("throwingáwayÖacket\n"); }

757 
	`bf_a‰ì
(
ù_fd
->
if_rd_buf
);

759 
ù_fd
->
if_rd_buf

∑ck
;

760 
∑ck
->
acc_lökC
++;

761 
ù_fd
->
if_exp_tim

exp_tim
;

763 i‡((
ù_fd
->
if_ù›t
.
nwio_Êags
 & 
NWIO_ACC_MASK
) ==

764 
NWIO_SHARED
 || (
ù_fd
->
if_ù›t
.
nwio_Êags
 &

765 
NWIO_ACC_MASK
Ë=
NWIO_EXCL
)

767 #i‡
DEBUG


768 { 
	`whîe
(); 
	`¥ötf
("exclusiveÖacket\n"); }

770 
	`bf_a‰ì
(
∑ck
);

771 
∑ck
= 0;

775 i‡(
ù_fd
->
if_Êags
 & 
IFF_READ_IP
)

777 #i‡
DEBUG
 & 256

778 { 
	`whîe
(); 
	`¥ötf
("%d cÆlögÖackë2u£r\n", 
i
); }

780 
	`ù_∑ckë2u£r
(
ù_fd
);

784 #i‡
DEBUG


785 { 
	`whîe
(); 
	`¥ötf
("%dÇŸ READ_IP\n", 
i
); }

789 i‡(
sh¨e_fd
 && 
∑ck
)

791 #i‡
DEBUG


792 { 
	`whîe
(); 
	`¥ötf
("exclusiveÖacket\n"); }

794 
	`bf_a‰ì
(
sh¨e_fd
->
if_rd_buf
);

795 
sh¨e_fd
->
if_rd_buf

∑ck
;

796 
sh¨e_fd
->
if_exp_tim

exp_tim
;

800 #i‡
DEBUG
 & 256

801 { 
	`whîe
(); 
	`¥ötf
("throwingáwayÖacket\n"); }

803 i‡(
∑ck
)

804 
	`bf_a‰ì
(
∑ck
);

806 
	}
}

	@ip_write.c

5 
	~"öë.h
"

6 
	~"buf.h
"

7 
	~"ty≥.h
"

9 
	~"¨p.h
"

10 
	~"as£π.h
"

11 
	~"˛ock.h
"

12 
	~"ëh.h
"

13 
	~"icmp_lib.h
"

14 
	~"io.h
"

15 
	~"ù.h
"

16 
	~"ù_öt.h
"

17 
	~"ùr.h
"

19 
INIT_PANIC
();

21 
FORWARD
 
acc_t
 *
gë_∑ckë
 
ARGS
(–
ù_fd_t
 *
ù_fd
,

22 
U16_t
 
id
 ));

23 
FORWARD
 
dŒ_ªady
 
ARGS
(–
ù_p‹t_t
 *
p‹t
, 
ùaddr_t
 
d°
 ));

24 
FORWARD
 
dŒ_wrôe
 
ARGS
(–
ù_p‹t_t
 *
p‹t
, 
ùaddr_t
 
d°
,

25 
acc_t
 *
∑ck
 ));

26 
FORWARD
 
dŒ_ëh_ªady
 
ARGS
(–
ù_p‹t_t
 *
p‹t
, 
ùaddr_t
 
d°
 ));

27 
FORWARD
 
dŒ_ëh_wrôe
 
ARGS
(–
ù_p‹t_t
 *
p‹t
, 
ùaddr_t
 
d°
,

28 
acc_t
 *
∑ck
 ));

29 
FORWARD
 
dŒ_ëh_¨p_func
 
ARGS
(–
fd
,

30 
ëhî_addr_t
 *
ëhaddr
 ));

31 
FORWARD
 
acc_t
 *
ù_•lô_∑ck
 
ARGS
(–acc_à**
ªf_œ°
,

32 
fú°_size
 ));

33 
FORWARD
 
îr‹_ª∂y
 
ARGS
(–
ù_fd_t
 *
fd
, 
îr‹
 ));

34 
FORWARD
 
chk_d°addr
 
ARGS
(–
ùaddr_t
 
d°
 ));

35 
FORWARD
 
ª°¨t_√tbrﬂdˇ°
 
ARGS
(( ));

36 
FORWARD
 
ù_loˇÃouã_addr
 
ARGS
(–
ù_fd_t
 *
ù_fd
 ));

37 
FORWARD
 
ù_ªmrouã_addr
 
ARGS
(–
ù_fd_t
 *
ù_fd
, 
U8_t
 
âl
 ));

38 
FORWARD
 
ª°¨t_fd_wrôe
 
ARGS
(–
ù_fd_t
 *
ù_fd
 ));

39 
FORWARD
 
ª°¨t_√tbrﬂd_fd
 
ARGS
(–
ù_fd_t
 *
t˝_fd
 ));

40 
FORWARD
 
dŒ_ëh_gë_w‹k
 
ARGS
(–
ù_p‹t_t
 *
ù_p‹t
 ));

42 
	#NF_EMPTY
 0

	)

43 
	#NF_INUSE
 1

	)

44 
	#NF_SUSPENDED
 2

	)

46 
PRIVATE
 
	g√tbrﬂd_Êags

NF_EMPTY
;

47 
PRIVATE
 
acc_t
 *
	g√tbrﬂd_∑ck
;

48 
PRIVATE
 
ùaddr_t
 
	g√tbrﬂd_d°
;

49 
PRIVATE
 
ùaddr_t
 
	g√tbrﬂd_√tmask
;

50 
PRIVATE
 
ù_p‹t_t
 *
	g√tbrﬂd_p‹t
;

52 
PUBLIC
 
	$ù_wrôe
 (
fd
, 
cou¡
)

53 
fd
;

54 
size_t
 
cou¡
;

56 
ù_fd_t
 *
ù_fd
;

57 
acc_t
 *
d©a
;

58 
ªsu…
;

59 
âl
;

61 #i‡
DEBUG
 & 256

62 { 
	`whîe
(); 
	`¥ötf
("ù_wrôe.c: ip_wrôe(fd%d, cou¡%d\n", 
fd
,

63 
cou¡
); }

65 
ù_fd
&
ù_fd_èbÀ
[
fd
];

67 i‡(!(
ù_fd
->
if_Êags
 & 
IFF_OPTSET
))

69 
	`îr‹_ª∂y
 (
ù_fd
, 
EBADMODE
);

70  
NW_OK
;

72 i‡(
ù_fd
->
if_ù›t
.
nwio_Êags
 & 
NWIO_RWDATALL
)

74 i‡(
cou¡
 < 
IP_MIN_HDR_SIZE
 || cou¡ > 
IP_MAX_PACKSIZE
)

76 
	`îr‹_ª∂y
 (
ù_fd
, 
EPACKSIZE
);

77  
NW_OK
;

82 
	`as£π
 (
ù_fd
->
if_ù›t
.
nwio_Êags
 & 
NWIO_RWDATONLY
);

83 i‡(
cou¡
 < 0 || cou¡ > 
IP_MAX_PACKSIZE
-
IP_MIN_HDR_SIZE
)

85 
	`îr‹_ª∂y
 (
ù_fd
, 
EPACKSIZE
);

86  
NW_OK
;

89 
ù_fd
->
if_wr_cou¡

cou¡
;

91 
	`as£π
 (!(
ù_fd
->
if_Êags
 & 
IFF_WRITE_IP
));

93 
ù_fd
->
if_Êags
 &~
IFF_WRITE_MASK
;

94 
ù_fd
->
if_Êags
 |
IFF_WRITE_IP
;

96 i‡(!(
ù_fd
->
if_p‹t
->
ù_Êags
 & 
IPF_IPADDRSET
))

97  
NW_SUSPEND
;

99 i‡(
ù_fd
->
if_ù›t
.
nwio_Êags
 & 
NWIO_REMSPEC
)

100 
ù_fd
->
if_wr_d°addr
ù_fd->
if_ù›t
.
nwio_ªm
;

103 
d©a
(*
ù_fd
->
if_gë_u£rd©a
)(ù_fd->
if_§fd
,

104 (
size_t
)(
	`off£tof
 (
ù_hdr
, 
ih_d°
)),

105 (
ùaddr_t
), 
FALSE
);

106 i‡(!
d©a
)

108 
ù_fd
->
if_Êags
 &~
IFF_WRITE_IP
;

109  
NW_OK
;

111 
d©a

	`bf_∑ckIffLess
 (d©a, (
ùaddr_t
));

112 
ù_fd
->
if_wr_d°addr
*(
ùaddr_t
 *)
	`±r2acc_d©a
(
d©a
);

113 
	`bf_a‰ì
(
d©a
);

114 
d©a
= 0;

116 i‡(
ù_fd
->
if_ù›t
.
nwio_Êags
 & 
NWIO_HDR_O_SPEC
)

117 
âl
= 255;

120 
d©a
(*
ù_fd
->
if_gë_u£rd©a
)(ù_fd->
if_§fd
,

121 (
size_t
)(
	`off£tof
 (
ù_hdr
, 
ih_âl
)),

122 (
u8_t
), 
FALSE
);

123 i‡(!
d©a
)

125 
ù_fd
->
if_Êags
 &~
IFF_WRITE_IP
;

126  
NW_OK
;

128 
d©a

	`bf_∑ckIffLess
 (d©a, (
u8_t
));

129 
âl
*(
u8_t
 *)
	`±r2acc_d©a
(
d©a
);

130 
	`bf_a‰ì
(
d©a
);

131 
d©a
= 0;

133 
ªsu…

	`ù_loˇÃouã_addr
(
ù_fd
);

134 i‡(!
ªsu…
)

135 
	`ù_ªmrouã_addr
(
ù_fd
, 
âl
);

136 i‡(
ù_fd
->
if_Êags
 & 
IFF_WRITE_IP
)

137  
NW_SUSPEND
;

139  
NW_OK
;

140 
	}
}

142 
PRIVATE
 
	$ù_loˇÃouã_addr
 (
ù_fd
)

143 
ù_fd_t
 *
ù_fd
;

145 
ùaddr_t
 
d°addr
, 
√tmask
;

146 
u8_t
 *
addrInByãs
;

147 
acc_t
 *
∑ck
;

148 
ù_hdr_t
 *
hdr_±r
;

149 
ù_p‹t_t
 *
ù_p‹t
;

150 
ªsu…
, 
i
;

152 #i‡
DEBUG
 & 256

153 { 
	`whîe
(); 
	`¥ötf
("ip_write.c: ip_route_addr(...)Åo ");

154 
	`wrôeIpAddr
(
ù_fd
->
if_wr_d°addr
); 
	`¥ötf
("\n"); }

156 
d°addr

ù_fd
->
if_wr_d°addr
;

157 
addrInByãs
(
u8_t
 *)&
d°addr
;

158 
ù_p‹t

ù_fd
->
if_p‹t
;

160 i‡((
addrInByãs
[0] & 0xff) == 0x7f)

162 
∑ck

	`gë_∑ckë
(
ù_fd
, (
u16_t
)0);

163 i‡(!
∑ck
)

165 
ù_fd
->
if_Êags
 &~
IFF_WRITE_IP
;

166  
TRUE
;

169 
	`as£π
 (
∑ck
->
acc_Àngth
 >
IP_MIN_HDR_SIZE
);

170 
	`as£π
 (
∑ck
->
acc_lökC
 == 1);

171 
hdr_±r
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
∑ck
);

172 
d°addr

hdr_±r
->
ih_d°
;

174 
hdr_±r
->
ih_d°
hdr_±r->
ih_§c
;

175 
hdr_±r
->
ih_§c

d°addr
;

176 
	`ù_p‹t_¨rive
 (
ù_p‹t
, 
∑ck
, 
hdr_±r
);

177 
ù_fd
->
if_Êags
 &~
IFF_WRITE_IP
;

178 
	`îr‹_ª∂y
 (
ù_fd
, ip_fd->
if_wr_cou¡
);

179  
TRUE
;

181 i‡(
d°addr
 =(
ùaddr_t
)-1)

183 
ù_fd
->
if_Êags
 |
IFF_DLL_WR_IP
;

184 
ù_fd
->
if_wr_p‹t

ù_p‹t
;

186 #i‡
DEBUG


187 { 
	`whîe
(); 
	`¥ötf
("callingÑestart_fd_write\n"); }

189 
	`ª°¨t_fd_wrôe
(
ù_fd
);

190  
TRUE
;

192 
√tmask

	`ù_gë_√tmask
(
d°addr
);

194 
i
=0, 
ù_p‹t

ù_p‹t_èbÀ
; i<
IP_PORT_NR
; i++, ip_port++)

196 i‡(!(
ù_p‹t
->
ù_Êags
 & 
IPF_IPADDRSET
))

198 #i‡
DEBUG


199 { 
	`whîe
(); 
	`¥ötf
("!(ip_port_table[%d].ip_flags & IPF_IPADDRSET)\n",

200 
ù_p‹t
-
ù_p‹t_èbÀ
); }

204 #i‡
DEBUG
 & 256

205 { 
	`whîe
(); 
	`¥ötf
("ù_p‹t_èbÀ[%d].ù_ùaddr ", 
ù_p‹t
-
ù_p‹t_èbÀ
);

206 
	`wrôeIpAddr
(
ù_p‹t
->
ù_ùaddr
); 
	`¥ötf
("\n"); }

208 i‡(
ù_p‹t
->
ù_ùaddr
 =
d°addr
)

210 
∑ck

	`gë_∑ckë
(
ù_fd
, (
u16_t
)0);

211 i‡(!
∑ck
)

213 
ù_fd
->
if_Êags
 &~
IFF_WRITE_IP
;

214  
TRUE
;

217 
	`as£π
 (
∑ck
->
acc_Àngth
 >
IP_MIN_HDR_SIZE
);

218 
	`as£π
 (
∑ck
->
acc_lökC
 == 1);

219 
	`ù_p‹t_¨rive
 (
ù_p‹t
, 
∑ck
,

220 (
ù_hdr_t
 *)
	`±r2acc_d©a
(
∑ck
));

221 
ù_fd
->
if_Êags
 &~
IFF_WRITE_IP
;

222 
	`îr‹_ª∂y
 (
ù_fd
, ip_fd->
if_wr_cou¡
);

223  
TRUE
;

225 i‡((
d°addr
 & 
ù_p‹t
->
ù_√tmask
) ==

226 (
ù_p‹t
->
ù_ùaddr
 & ip_p‹t->
ù_√tmask
))

228 
ù_fd
->
if_wr_p‹t

ù_p‹t
;

230 i‡((
d°addr
 & ~
ù_p‹t
->
ù_√tmask
) ==

231 ~
ù_p‹t
->
ù_√tmask
)

232 
ù_fd
->
if_wr_d°addr
(
ùaddr_t
)-1;

233 
ù_fd
->
if_Êags
 |
IFF_DLL_WR_IP
;

235 #i‡
DEBUG
 & 256

236 { 
	`whîe
(); 
	`¥ötf
("callingÑestart_fd_write\n"); }

238 
	`ª°¨t_fd_wrôe
(
ù_fd
);

239  
TRUE
;

241 i‡(((
d°addr
 & 
√tmask
Ë=(
ù_p‹t
->
ù_ùaddr
 &

242 
√tmask
)Ë&& ((
d°addr
 & ~netmask) == ~netmask))

244 i‡(!(
√tbrﬂd_Êags
 & 
NF_INUSE
))

245 
	`ª°¨t_√tbrﬂd_fd
(
ù_fd
);

247 
ù_fd
->
if_Êags
 |
IFF_NETBROAD_IP
;

248  
TRUE
;

251  
FALSE
;

252 
	}
}

254 
PRIVATE
 
	$dŒ_ªady
(
p‹t
, 
d°
)

255 
ù_p‹t_t
 *
p‹t
;

256 
ùaddr_t
 
d°
;

258 
p‹t
->
ù_dl_ty≥
)

260 
IPDL_ETH
:

261  
	`dŒ_ëh_ªady
 (
p‹t
, 
d°
);

263 
	`ù_∑nic
(( "strange dll_type" ));

265  
NW_OK
;

266 
	}
}

268 
PRIVATE
 
	$dŒ_ëh_ªady
 (
p‹t
, 
d°
)

269 
ù_p‹t_t
 *
p‹t
;

270 
ùaddr_t
 
d°
;

272 
ªsu…
;

274 i‡(
p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ame
 ||Öort->ip_dl.dl_eth.

275 
de_wr_‰ag
)

277 #i‡
DEBUG
 & 256

278 { 
	`whîe
(); 
	`¥ötf
("dll_eth_ready: frame or fragÖresent\n"); }

280  
NW_SUSPEND
;

282 i‡(
d°
 =(
ùaddr_t
)-1)

284 #i‡
DEBUG
 & 256

285 { 
	`whîe
(); 
	`¥ötf
("dll_eth_ready: broadcast\n"); }

287 
p‹t
->
ù_dl
.
dl_ëh
.
de_wr_ùaddr

d°
;

288 
p‹t
->
ù_dl
.
dl_ëh
.
de_wr_ëhaddr
.
ó_addr
[0]= 0xff;

289 
p‹t
->
ù_dl
.
dl_ëh
.
de_wr_ëhaddr
.
ó_addr
[1]= 0xff;

290 
p‹t
->
ù_dl
.
dl_ëh
.
de_wr_ëhaddr
.
ó_addr
[2]= 0xff;

291 
p‹t
->
ù_dl
.
dl_ëh
.
de_wr_ëhaddr
.
ó_addr
[3]= 0xff;

292 
p‹t
->
ù_dl
.
dl_ëh
.
de_wr_ëhaddr
.
ó_addr
[4]= 0xff;

293 
p‹t
->
ù_dl
.
dl_ëh
.
de_wr_ëhaddr
.
ó_addr
[5]= 0xff;

294  
NW_OK
;

296 #i‡
DEBUG
 & 256

297 { 
	`whîe
(); 
	`¥ötf
("ip_write.c: callingárp_ip_eth_nonbl(...)\n"); }

299 
ªsu…

	`¨p_ù_ëh_n⁄bl
 (
p‹t
->
ù_dl
.
dl_ëh
.
de_p‹t
,

300 
d°
, &
p‹t
->
ù_dl
.
dl_ëh
.
de_wr_ëhaddr
);

301 #i‡
DEBUG
 & 256

302 { 
	`whîe
(); 
	`¥ötf
("ù_wrôe.c:áΩ_ù_ëh_n⁄bl(...)%d\n", 
ªsu…
); }

304 i‡(
ªsu…
<0)

305 
p‹t
->
ù_dl
.
dl_ëh
.
de_wr_ùaddr
(
ùaddr_t
)0;

307 i‡(
ªsu…
 =
EDSTNOTRCH
)

308  
EDSTNOTRCH
;

310 i‡(
ªsu…
 >= 0)

312 
p‹t
->
ù_dl
.
dl_ëh
.
de_wr_ùaddr

d°
;

313  
NW_OK
;

315 
	`as£π
 (
ªsu…
 =
NW_SUSPEND
);

317 i‡(!(
p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 & 
IEF_ARP_IP
))

319 #i‡
DEBUG
 & 256

320 { 
	`whîe
(); 
	`¥ötf
("dll_eth_ready:Ço ARP_IP\n"); }

322  
NW_OK
;

324 #i‡
DEBUG


325 { 
	`whîe
(); 
	`¥ötf
("dll_eth_ready: ARP_IP\n"); }

327  
NW_SUSPEND
;

328 
	}
}

330 
PRIVATE
 
	$dŒ_wrôe
 (
p‹t
, 
d°
, 
∑ck
)

331 
ù_p‹t_t
 *
p‹t
;

332 
ùaddr_t
 
d°
;

333 
acc_t
 *
∑ck
;

335 
p‹t
->
ù_dl_ty≥
)

337 
IPDL_ETH
:

338 
	`dŒ_ëh_wrôe
 (
p‹t
, 
d°
, 
∑ck
);

341 
	`ù_∑nic
(( "wrong dl_type" ));

344 
	}
}

346 
PRIVATE
 
	$dŒ_ëh_wrôe
 (
ù_p‹t
, 
d°
, 
∑ck
)

347 
ù_p‹t_t
 *
ù_p‹t
;

348 
ùaddr_t
 
d°
;

349 
acc_t
 *
∑ck
;

351 
ªsu…
;

353 i‡(!
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ag
)

355 i‡(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_ùaddr
 =
d°
)

357 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ag

∑ck
;

358 i‡(!(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 &

359 
IEF_WRITE_IP
))

361 
	`dŒ_ëh_wrôe_‰ame
(
ù_p‹t
);

365 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_ùaddr
(
ùaddr_t
)0;

366 #i‡
DEBUG
 & 256

367 { 
	`whîe
(); 
	`¥ötf
("ip_write.c: callingárp_ip_eth_nonbl(...)\n"); }

369 
ªsu…

	`¨p_ù_ëh_n⁄bl
 (
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_p‹t
,

370 
d°
, &
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_ëhaddr
);

371 #i‡
DEBUG
 & 256

372 { 
	`whîe
(); 
	`¥ötf
("ù_wrôe.c:áΩ_ù_ëh_n⁄bl(...)%d\n", 
ªsu…
); }

374 i‡(
ªsu…
 =
NW_OK
)

376 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ag

∑ck
;

377 i‡(!(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 &

378 
IEF_WRITE_IP
))

379 
	`dŒ_ëh_wrôe_‰ame
(
ù_p‹t
);

383 
	`as£π
 (!(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 & 
IEF_ARP_MASK
));

384 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_¨p_∑ck

∑ck
;

385 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 |
IEF_ARP_IP
;

386 #i‡
DEBUG
 & 256

387 { 
	`whîe
(); 
	`¥ötf
("ip_write.c: callingárp_ip_eth(...)\n"); }

389 
ªsu…

	`¨p_ù_ëh
 (
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_p‹t
,

390 
ù_p‹t
-
ù_p‹t_èbÀ
, 
d°
, 
dŒ_ëh_¨p_func
);

391 #i‡
DEBUG
 & 256

392 { 
	`whîe
(); 
	`¥ötf
("ù_wrôe.c:áΩ_ù_ëh(...)%d\n", 
ªsu…
); }

394 i‡(
ªsu…
 =
NW_SUSPEND
)

395 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 |
IEF_ARP_SP
;

396 i‡(
ªsu…
 =
EDSTNOTRCH
)

398 i‡(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_¨p_∑ck
)

400 
	`bf_a‰ì
(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_¨p_∑ck
);

401 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_¨p_∑ck
= 0;

403 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 &~
IEF_ARP_MASK
;

407 
	`as£π
 (
ªsu…
 =
NW_OK
);

408 
	`as£π
 (
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 & 
IEF_WRITE_IP
);

410 
	}
}

412 
PUBLIC
 
	$dŒ_ëh_wrôe_‰ame
 (
ù_p‹t
)

413 
ù_p‹t_t
 *
ù_p‹t
;

415 
acc_t
 *
‰ag
, *
‰ame
, *
hdr
, *
èû
;

416 
ëh_hdr_t
 *
ëh_hdr
;

417 
size_t
 
∑ck_size
;

418 
ªsu…
;

420 #i‡
DEBUG
 & 256

421 { 
	`whîe
(); 
	`¥ötf
("ip_write.c: dll_eth_write_frame(...)\n"); }

424 
	`as£π
 (!(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 & 
IEF_WRITE_IP
));

425 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 |
IEF_WRITE_IP
;

429 i‡(!
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ag
)

431 
	`dŒ_ëh_gë_w‹k
 (
ù_p‹t
);

432 i‡(!
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ag
)

434 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 &=

435 ~
IEF_WRITE_IP
;

439 
	`as£π
 (!
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ame
);

440 
	`as£π
 (
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ag
);

442 
‰ag

ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ag
;

443 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ag
= 0;

444 
‰ame

	`ù_•lô_∑ck
(&
‰ag
, 
ETH_MAX_PACK_SIZE
-

445 
ETH_HDR_SIZE
);

446 i‡(!
‰ame
)

448 
	`as£π
 (!
‰ag
);

451 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ag

‰ag
;

452 
hdr

	`bf_memªq
(
ETH_HDR_SIZE
);

453 
ëh_hdr
(
ëh_hdr_t
 *)
	`±r2acc_d©a
(
hdr
);

454 
ëh_hdr
->
eh_d°

ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_ëhaddr
;

455 
hdr
->
acc_√xt

‰ame
;

456 
‰ame

hdr
;

457 
hdr
= 0;

458 
∑ck_size

	`bf_bufsize
(
‰ame
);

459 i‡(
∑ck_size
<
ETH_MIN_PACK_SIZE
)

461 #i‡
DEBUG
 & 256

462 { 
	`whîe
(); 
	`¥ötf
("∑ck_size%d\n", 
∑ck_size
); }

464 
èû

	`bf_memªq
(
ETH_MIN_PACK_SIZE
-
∑ck_size
);

465 
‰ame

	`bf_≠≥nd
(‰ame, 
èû
);

467 #i‡
DEBUG
 & 256

468 { 
	`whîe
(); 
	`¥ötf
("∑ckë size%d\n", 
	`bf_bufsize
(
ù_p‹t
->
ù_dl
.

469 
dl_ëh
.
de_wr_‰ame
)); }

471 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ame

‰ame
;

472 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 &~
IEF_WRITE_SP
;

473 #i‡
DEBUG
 & 256

474 { 
	`whîe
(); 
	`¥ötf
("ip_write.c: callingÉth_write(...)\n"); }

476 
ªsu…

	`ëh_wrôe
 (
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_fd
,

477 
	`bf_bufsize
(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ame
));

478 #i‡
DEBUG
 & 256

479 { 
	`whîe
(); 
	`¥ötf
("ù_wrôe.c:Éth_wrôe(...)%d\n", 
ªsu…
); }

481 i‡(
ªsu…
 =
NW_SUSPEND
)

483 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 |
IEF_WRITE_SP
;

486 } !
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ame
);

487 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 &~
IEF_WRITE_IP
;

488 
	}
}

490 
PRIVATE
 
	$dŒ_ëh_¨p_func
 (
p‹t
, 
ëhaddr
)

491 
p‹t
;

492 
ëhî_addr_t
 *
ëhaddr
;

494 
ù_p‹t_t
 *
ù_p‹t
;

496 #i‡
DEBUG
 & 256

497 { 
	`whîe
(); 
	`¥ötf
("ip_write.c: dll_eth_arp_func(port= %d, ...)\n",

498 
p‹t
); }

500 
ù_p‹t
&
ù_p‹t_èbÀ
[
p‹t
];

502 i‡(
ëhaddr
 && 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_¨p_∑ck
)

504 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_¨p_ëhaddr
*
ëhaddr
;

505 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 |
IEF_ARP_COMPL
;

509 i‡(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_¨p_∑ck
)

511 
	`bf_a‰ì
(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_¨p_∑ck
);

512 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_¨p_∑ck
= 0;

514 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 &~
IEF_ARP_MASK
;

516 i‡(!(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 & 
IEF_WRITE_IP
))

517 
	`dŒ_ëh_wrôe_‰ame
(
ù_p‹t
);

518 
	}
}

520 
PRIVATE
 
	$dŒ_ëh_gë_w‹k
(
ù_p‹t
)

521 
ù_p‹t_t
 *
ù_p‹t
;

523 
i
;

524 
ù_fd_t
 *
ù_fd
;

526 i‡(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ag
)

529 i‡((
√tbrﬂd_Êags
 & 
NF_INUSE
Ë&& 
√tbrﬂd_p‹t
 =
ù_p‹t
)

531 
	`ª°¨t_√tbrﬂdˇ°
();

532 i‡(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ag
)

535 i‡(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 & 
IEF_ARP_COMPL
)

537 #i‡
DEBUG
 & 256

538 { 
	`whîe
(); 
	`¥ötf
("processingárp_pack\n"); }

540 
	`as£π
 (
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_¨p_∑ck
);

541 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_ùaddr
(
ùaddr_t
)0;

542 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_ëhaddr
= ip_port->ip_dl.

543 
dl_ëh
.
de_¨p_ëhaddr
;

544 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ag
= ip_port->ip_dl.dl_eth.

545 
de_¨p_∑ck
;

546 
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_Êags
 &~
IEF_ARP_MASK
;

549 
i
=0, 
ù_fd

ù_fd_èbÀ
; i<
IP_FD_NR
; i++, ip_fd++)

551 i‡(!(
ù_fd
->
if_Êags
 & 
IFF_INUSE
))

553 i‡(!(
ù_fd
->
if_Êags
 & 
IFF_DLL_WR_IP
))

555 i‡(
ù_fd
->
if_wr_p‹t
 !
ù_p‹t
)

557 #i‡
DEBUG
 & 256

558 { 
	`whîe
(); 
	`¥ötf
("callingÑestart_fd_write\n"); }

560 
	`ª°¨t_fd_wrôe
(
ù_fd
);

561 i‡(
ù_p‹t
->
ù_dl
.
dl_ëh
.
de_wr_‰ag
)

564 
	}
}

567 
PRIVATE
 
	$ª°¨t_√tbrﬂd_fd
(
ù_fd
)

568 
ù_fd_t
 *
ù_fd
;

570 
	`as£π
 (!(
√tbrﬂd_Êags
 & 
NF_INUSE
));

571 
	`as£π
 (
ù_fd
->
if_Êags
 & 
IFF_NETBROAD_IP
);

572 
ù_fd
->
if_Êags
 &~
IFF_NETBROAD_IP
;

573 
√tbrﬂd_Êags
 |
NF_INUSE
;

574 
√tbrﬂd_d°

ù_fd
->
if_wr_d°addr
;

575 
√tbrﬂd_√tmask

	`ù_gë_√tmask
(
√tbrﬂd_d°
);

576 
√tbrﬂd_∑ck

	`gë_∑ckë
(
ù_fd
, ()
	`gë_time
());

577 i‡(!
√tbrﬂd_∑ck
)

579 
√tbrﬂd_Êags
 &~
NF_INUSE
;

582 
√tbrﬂd_p‹t

ù_p‹t_èbÀ
;

583 
	`ª°¨t_√tbrﬂdˇ°
();

585 
	`îr‹_ª∂y
(
ù_fd
, ip_fd->
if_wr_cou¡
);

586 
	}
}

588 
PRIVATE
 
	$ª°¨t_fd_wrôe
(
ù_fd
)

589 
ù_fd_t
 *
ù_fd
;

591 
ù_p‹t_t
 *
ù_p‹t
;

592 
ùaddr_t
 
d°addr
;

593 
acc_t
 *
∑ck
;

594 
ªsu…
;

596 
	`as£π
 (
ù_fd
->
if_Êags
 & 
IFF_DLL_WR_IP
);

598 
ù_p‹t

ù_fd
->
if_wr_p‹t
;

599 
d°addr

ù_fd
->
if_wr_d°addr
;

600 
ªsu…

	`dŒ_ªady
(
ù_p‹t
, 
d°addr
);

601 i‡(
ªsu…
 =
NW_SUSPEND
)

605 i‡(
ªsu…
 =
EDSTNOTRCH
)

607 #i‡
DEBUG


608 { 
	`whîe
(); 
	`¥ötf
("dll_readyÑeturned EDSTNOTRCH, gateway= ");

609 
	`wrôeIpAddr
(
ù_fd
->
if_wr_d°addr
); 
	`¥ötf
(",ÅheÖacket was %s\n",

610 (
ù_fd
->
if_Êags
 & 
IFF_ROUTED
) ? "routed" : "notÑouted"); }

612 i‡(!(
ù_fd
->
if_Êags
 & 
IFF_ROUTED
))

614 
	`îr‹_ª∂y
 (
ù_fd
, 
ªsu…
);

619 
	`ùr_g©eway_down
 (
ù_fd
->
if_wr_d°addr
,

620 
IPR_GW_DOWN_TIMEOUT
);

621 
	`îr‹_ª∂y
(
ù_fd
, 
NW_OK
);

625 
	`as£π
 (
ªsu…
 =
NW_OK
);

627 
ù_fd
->
if_Êags
 &~
IFF_DLL_WR_IP
;

629 
ù_p‹t
->
ù_‰ame_id
++;

630 
∑ck

	`gë_∑ckë
(
ù_fd
, 
ù_p‹t
->
ù_‰ame_id
);

631 i‡(!
∑ck
)

635 
	`dŒ_wrôe
(
ù_p‹t
, 
d°addr
, 
∑ck
);

636 
	`îr‹_ª∂y
(
ù_fd
, ip_fd->
if_wr_cou¡
);

637 
	}
}

639 
PRIVATE
 
	$ù_ªmrouã_addr
(
ù_fd
, 
âl
)

640 
ù_fd_t
 *
ù_fd
;

641 
u8_t
 
âl
;

643 
ùaddr_t
 
d°addr
, 
√xth›
;

644 
ù_p‹t_t
 *
ù_p‹t
;

645 
ªsu…
, 
p‹t
;

647 
d°addr

ù_fd
->
if_wr_d°addr
;

648 
ªsu…

	`ùrouã_‰ag
 (
d°addr
, 
âl
, &
√xth›
, &
p‹t
);

649 #i‡
DEBUG
 & 256

650 { 
	`whîe
(); 
	`¥ötf
("ù_ªmrouã_addr("); 
	`wrôeIpAddr
(
d°addr
);

651 
	`¥ötf
(", %d)%d\n", 
âl
, 
ªsu…
); }

653 i‡(
ªsu…
>0)

655 
ù_p‹t
&
ù_p‹t_èbÀ
[
p‹t
];

656 
ù_fd
->
if_Êags
 |
IFF_DLL_WR_IP
|
IFF_ROUTED
;

657 
ù_fd
->
if_wr_d°addr

√xth›
;

658 
ù_fd
->
if_wr_p‹t

ù_p‹t
;

659 #i‡
DEBUG
 & 256

660 { 
	`whîe
(); 
	`¥ötf
("callingÑestart_fd_write\n"); }

662 
	`ª°¨t_fd_wrôe
(
ù_fd
);

665 i‡(
ªsu…
<0)

667 
	`îr‹_ª∂y
 (
ù_fd
, 
ªsu…
);

670 #i‡
IP_ROUTER


671 
	`ù_∑nic
(( "not implemented" ));

673 
	`ù_∑nic
(( "shouldn't be here" ));

675 
	}
}

677 
PRIVATE
 
acc_t
 *
	$ù_•lô_∑ck
 (
ªf_œ°
, 
fú°_size
)

678 
acc_t
 **
ªf_œ°
;

679 
fú°_size
;

681 
∑ck_siz
;

682 
ù_hdr_t
 *
fú°_hdr
, *
£c⁄d_hdr
;

683 
fú°_hdr_Àn
, 
£c⁄d_hdr_Àn
;

684 
fú°_d©a_Àn
, 
£c⁄d_d©a_Àn
;

685 
√w_fú°_d©a_Àn
;

686 
fú°_›t_size
, 
£c⁄d_›t_size
;

687 
acc_t
 *
fú°_∑ck
, *
£c⁄d_∑ck
, *
tmp_∑ck
, *
tmp_∑ck1
;

688 
u8_t
 *
fú°_›çå
, *
£c⁄d_›çå
;

689 
i
, 
›éí
;

691 
fú°_∑ck
*
ªf_œ°
;

692 *
ªf_œ°
= 0;

693 
£c⁄d_∑ck
= 0;

695 
fú°_∑ck

	`bf_∑ckIffLess
(fú°_∑ck, 
IP_MIN_HDR_SIZE
);

696 
	`as£π
 (
fú°_∑ck
->
acc_Àngth
 >
IP_MIN_HDR_SIZE
);

698 
fú°_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
fú°_∑ck
);

699 #i‡
DEBUG
 & 256

700 { 
	`whîe
(); 
	`wrôeIpAddr
(
fú°_hdr
->
ih_d°
); 
	`¥ötf
("\n"); }

702 
fú°_hdr_Àn
(
fú°_hdr
->
ih_vîs_ihl
 & 
IH_IHL_MASK
) * 4;

703 #i‡
DEBUG
 & 256

704 { 
	`whîe
(); 
	`¥ötf
("fi°_hdr_Àn%d\n", 
fú°_hdr_Àn
); }

706 
∑ck_siz

	`bf_bufsize
(
fú°_∑ck
);

707 i‡(
∑ck_siz
 > 
fú°_size
)

709 #i‡
DEBUG
 & 256

710 { 
	`whîe
(); 
	`¥ötf
("splittingÖack\n"); }

712 i‡(
fú°_hdr
->
ih_Êags_‰agoff
 & 
	`HTONS
(
IH_DONT_FRAG
))

714 
	`as£π
 (!(
fú°_hdr
->
ih_Êags_‰agoff
Ë& 
	`HTONS
(
IH_FRAGOFF_MASK
));

715 
	`icmp_d⁄t_‰ag
(
fú°_∑ck
);

718 
fú°_d©a_Àn

	`¡ohs
(
fú°_hdr
->
ih_Àngth
Ë- 
fú°_hdr_Àn
;

719 
√w_fú°_d©a_Àn
(
fú°_size
- 
fú°_hdr_Àn
) & ~7;

721 
£c⁄d_d©a_Àn

fú°_d©a_Àn
-
√w_fú°_d©a_Àn
;

722 
£c⁄d_∑ck

	`bf_cut
(
fú°_∑ck
, 
fú°_hdr_Àn
+

723 
√w_fú°_d©a_Àn
, 
£c⁄d_d©a_Àn
);

724 
tmp_∑ck

fú°_∑ck
;

725 
fú°_d©a_Àn

√w_fú°_d©a_Àn
;

726 
fú°_∑ck

	`bf_cut
 (
tmp_∑ck
, 0, 
fú°_hdr_Àn
+
fú°_d©a_Àn
);

727 
	`bf_a‰ì
(
tmp_∑ck
);

728 
tmp_∑ck

	`bf_memªq
(
fú°_hdr_Àn
);

729 
tmp_∑ck
->
acc_√xt

£c⁄d_∑ck
;

730 
£c⁄d_∑ck

tmp_∑ck
;

731 
£c⁄d_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
£c⁄d_∑ck
);

732 *
£c⁄d_hdr
*
fú°_hdr
;

733 
£c⁄d_hdr
->
ih_Êags_‰agoff

	`ht⁄s
(

734 
	`¡ohs
(
fú°_hdr
->
ih_Êags_‰agoff
)+(
fú°_d©a_Àn
/8));

736 
fú°_›t_size

fú°_hdr_Àn
-
IP_MIN_HDR_SIZE
;

737 
£c⁄d_›t_size
= 0;

738 i‡(
fú°_›t_size
)

740 
fú°_∑ck

	`bf_∑ckIffLess
 (first_pack,

741 
fú°_hdr_Àn
);

742 
fú°_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
fú°_∑ck
);

743 
	`as£π
 (
fú°_∑ck
->
acc_Àngth
>=
fú°_hdr_Àn
);

744 
fú°_›çå
(
u8_t
 *)
	`±r2acc_d©a
(
fú°_∑ck
)+

745 
IP_MIN_HDR_SIZE
;

746 
£c⁄d_›çå
(
u8_t
 *)
	`±r2acc_d©a
(

747 
£c⁄d_∑ck
)+
IP_MIN_HDR_SIZE
;

748 
i
= 0;

749 
i
<
fú°_›t_size
)

751 *
fú°_›çå
 & 
IP_OPT_NUMBER
)

755 
›éí
= 1;

758 
›éí

fú°_›çå
[1];

761 
	`as£π
 (
i
 + 
›éí
 <
fú°_›t_size
);

762 
i
 +
›éí
;

763 i‡(*
fú°_›çå
 & 
IP_OPT_COPIED
)

765 
£c⁄d_›t_size
 +
›éí
;

766 
›éí
--)

767 *
£c⁄d_›çå
++=

768 *
fú°_›çå
++;

771 
fú°_›çå
 +
›éí
;

773 
£c⁄d_›t_size
 & 3)

775 *
£c⁄d_›çå
++= 0;

776 
£c⁄d_›t_size
++;

779 
£c⁄d_hdr_Àn

IP_MIN_HDR_SIZE
 + 
£c⁄d_›t_size
;

780 #i‡
DEBUG
 & 256

781 { 
	`whîe
(); 
	`¥ötf
("second_opt_size= %d, second_hdr_len= %d\n",

782 
£c⁄d_›t_size
, 
£c⁄d_hdr_Àn
); }

784 
£c⁄d_hdr
->
ih_vîs_ihl
= second_hdr->ih_vers_ihl & 0xf0

785 + (
£c⁄d_hdr_Àn
/4);

786 
£c⁄d_hdr
->
ih_Àngth

	`ht⁄s
(
£c⁄d_d©a_Àn
+

787 
£c⁄d_hdr_Àn
);

788 
£c⁄d_∑ck
->
acc_Àngth

£c⁄d_hdr_Àn
;

789 i‡(
fú°_∑ck
->
acc_buf„r
->
buf_lökC
>1)

791 
tmp_∑ck

	`bf_cut
(
fú°_∑ck
, 0,

792 
IP_MIN_HDR_SIZE
);

793 
tmp_∑ck1

	`bf_cut
(
fú°_∑ck
, 
IP_MIN_HDR_SIZE
,

794 
	`bf_bufsize
(
fú°_∑ck
)-

795 
IP_MIN_HDR_SIZE
);

796 
	`bf_a‰ì
(
fú°_∑ck
);

797 #i‡
DEBUG


798 { 
	`whîe
(); 
	`¥ötf
("calling bf_pack\n"); }

800 
fú°_∑ck

	`bf_∑ck
(
tmp_∑ck
);

801 
fú°_∑ck
->
acc_√xt

tmp_∑ck1
;

802 
fú°_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(

803 
fú°_∑ck
);

805 
	`as£π
 (
fú°_∑ck
->
acc_buf„r
->
buf_lökC
 == 1);

806 
fú°_hdr
->
ih_Êags_‰agoff
 |
	`HTONS
(
IH_MORE_FRAGS
);

807 
fú°_hdr
->
ih_Àngth

	`ht⁄s
(
fú°_d©a_Àn
+

808 
fú°_hdr_Àn
);

809 
	`as£π
 (!(
£c⁄d_hdr
->
ih_Êags_‰agoff
 & 
	`HTONS
(
IH_DONT_FRAG
)));

811 i‡(
fú°_∑ck
->
acc_buf„r
->
buf_lökC
>1)

813 
tmp_∑ck

	`bf_cut
(
fú°_∑ck
, 0, 
IP_MIN_HDR_SIZE
);

814 
tmp_∑ck1

	`bf_cut
(
fú°_∑ck
, 
IP_MIN_HDR_SIZE
,

815 
	`bf_bufsize
(
fú°_∑ck
)-
IP_MIN_HDR_SIZE
);

816 
	`bf_a‰ì
(
fú°_∑ck
);

817 #i‡
DEBUG


818 { 
	`whîe
(); 
	`¥ötf
("calling bf_pack\n"); }

820 
fú°_∑ck

	`bf_∑ck
(
tmp_∑ck
);

821 
fú°_∑ck
->
acc_√xt

tmp_∑ck1
;

822 
fú°_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
fú°_∑ck
);

824 
	`as£π
 (
fú°_hdr
->
ih_âl
);

825 #i‡
DEBUG
 & 256

826 { 
	`whîe
(); 
	`¥ötf
("ip_write.c: ip_split_pack: first_hdr_len= %d\n",

827 
fú°_hdr_Àn
); }

829 
fú°_hdr
->
ih_hdr_chk
= 0;

830 
fú°_hdr
->
ih_hdr_chk
~
	`⁄eC_sum
 (0, (
u16_t
 *)first_hdr,

831 
fú°_hdr_Àn
);

832 *
ªf_œ°

£c⁄d_∑ck
;

833  
fú°_∑ck
;

834 
	}
}

836 
PRIVATE
 
	$ª°¨t_√tbrﬂdˇ°
()

838 
was_su•íded
, 
ªsu…
, 
i
;

839 
ù_p‹t_t
 *
ù_p‹t
, *
hi_p‹t
;

840 
ù_fd_t
 *
ù_fd
;

842 
	`as£π
 (
√tbrﬂd_Êags
 & 
NF_INUSE
);

843 
was_su•íded
!!(
√tbrﬂd_Êags
 & 
NF_SUSPENDED
);

844 
hi_p‹t
&
ù_p‹t_èbÀ
[
IP_PORT_NR
];

846 ; 
√tbrﬂd_p‹t
 < 
hi_p‹t
;Çetbroad_port++)

848 i‡(!(
√tbrﬂd_p‹t
->
ù_Êags
 & 
IPF_IPADDRSET
))

850 i‡(!((
√tbrﬂd_d°
 ^ 
√tbrﬂd_p‹t
->
ù_ùaddr
) &

851 
√tbrﬂd_√tmask
))

853 
ªsu…

	`dŒ_ªady
 (
√tbrﬂd_p‹t
, (
ùaddr_t
)-1);

854 i‡(
ªsu…
 =
NW_SUSPEND
)

856 
√tbrﬂd_Êags
 |
NF_SUSPENDED
;

859 
	`as£π
 (
ªsu…
 >= 0);

861 
√tbrﬂd_∑ck
->
acc_lökC
++;

862 #i‡
DEBUG


863 { 
	`whîe
(); 
	`¥ötf
("calling dll_write\n"); }

865 
	`dŒ_wrôe
 (
√tbrﬂd_p‹t
, (
ùaddr_t
)(-1),

866 
√tbrﬂd_∑ck
);

868 
√tbrﬂd_Êags
 &~
NF_INUSE
;

869 
	`bf_a‰ì
(
√tbrﬂd_∑ck
);

870 
√tbrﬂd_∑ck
= 0;

871 i‡(!
was_su•íded
)

874 
i
=0, 
ù_fd

ù_fd_èbÀ
; i<
IP_FD_NR
; i++, ip_fd++)

876 i‡(!(
ù_fd
->
if_Êags
 & 
IFF_INUSE
) ||

877 !(
ù_fd
->
if_Êags
 & 
IFF_NETBROAD_IP
))

879 
	`ª°¨t_√tbrﬂd_fd
(
ù_fd
);

880 i‡(
√tbrﬂd_Êags
 & 
NF_INUSE
)

883 
	}
}

885 
PRIVATE
 
	$îr‹_ª∂y
 (
ù_fd
, 
îr‹
)

886 
ù_fd_t
 *
ù_fd
;

887 
îr‹
;

889 
ù_fd
->
if_Êags
 &~
IFF_WRITE_MASK
;

890 i‡((*
ù_fd
->
if_gë_u£rd©a
)(ù_fd->
if_§fd
, (
size_t
)
îr‹
,

891 (
size_t
)0, 
FALSE
))

892 
	`ù_∑nic
(( "can'tÉrror_reply" ));

893 
	}
}

895 
PRIVATE
 
acc_t
 *
	$gë_∑ckë
 (
ù_fd
, 
id
)

896 
ù_fd_t
 *
ù_fd
;

897 
u16_t
 
id
;

899 
acc_t
 *
∑ck
, *
tmp_∑ck
, *
tmp_∑ck1
;

900 
ù_hdr_t
 *
hdr
, *
tmp_hdr
;

901 
∑ck_Àn
, 
hdr_Àn
, 
hdr_›t_Àn
, 
îr‹
;

903 
∑ck_Àn

ù_fd
->
if_wr_cou¡
;

904 
∑ck
(*
ù_fd
->
if_gë_u£rd©a
)(ù_fd->
if_§fd
, (
size_t
)0,

905 
∑ck_Àn
, 
FALSE
);

906 i‡(!
∑ck
)

907  
∑ck
;

908 
	`as£π
(
∑ck_Àn
 =
	`bf_bufsize
(
∑ck
));

909 i‡(
ù_fd
->
if_ù›t
.
nwio_Êags
 & 
NWIO_RWDATONLY
)

911 
tmp_∑ck

	`bf_memªq
 (
IP_MIN_HDR_SIZE
);

912 
tmp_∑ck
->
acc_√xt

∑ck
;

913 
∑ck

tmp_∑ck
;

914 
∑ck_Àn
 +
IP_MIN_HDR_SIZE
;

916 i‡(
∑ck_Àn
<
IP_MIN_HDR_SIZE
)

918 
	`bf_a‰ì
(
∑ck
);

919 
	`îr‹_ª∂y
(
ù_fd
, 
EPACKSIZE
);

922 
∑ck

	`bf_∑ckIffLess
’ack, 
IP_MIN_HDR_SIZE
);

923 
	`as£π
 (
∑ck
->
acc_Àngth
 >
IP_MIN_HDR_SIZE
);

924 
hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
∑ck
);

925 i‡(
∑ck
->
acc_lökC
 !1 ||Öack->
acc_buf„r
->
buf_lökC
 != 1)

927 
tmp_∑ck

	`bf_memªq
(
IP_MIN_HDR_SIZE
);

928 
tmp_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
tmp_∑ck
);

929 *
tmp_hdr
*
hdr
;

930 
tmp_∑ck
->
acc_√xt

	`bf_cut
(
∑ck
, 
IP_MIN_HDR_SIZE
,

931 
∑ck_Àn
-
IP_MIN_HDR_SIZE
);

932 
	`bf_a‰ì
(
∑ck
);

933 
hdr

tmp_hdr
;

934 #i‡
DEBUG
 & 256

935 { 
	`whîe
(); 
	`¥ötf
("ih_vîs_ihl0x%x\n", 
hdr
->
ih_vîs_ihl
); }

937 
∑ck

tmp_∑ck
;

938 
	`as£π
 (
∑ck
->
acc_Àngth
 >
IP_MIN_HDR_SIZE
);

940 
	`as£π
 (
∑ck
->
acc_lökC
 =1 &&Öack->
acc_buf„r
->
buf_lökC
 == 1);

942 i‡(
ù_fd
->
if_ù›t
.
nwio_Êags
 & 
NWIO_HDR_O_SPEC
)

944 #i‡
DEBUG
 & 256

945 { 
	`whîe
(); 
	`¥ötf
("ih_vîs_ihl0x%x\n", 
hdr
->
ih_vîs_ihl
); }

947 
hdr_›t_Àn

ù_fd
->
if_ù›t
.
nwio_hdr›t
.
iho_›t_siz
;

948 i‡(
hdr_›t_Àn
)

950 
tmp_∑ck

	`bf_cut
(
∑ck
, 0, 
IP_MIN_HDR_SIZE
);

951 
tmp_∑ck1

	`bf_cut
 (
∑ck
, 
IP_MIN_HDR_SIZE
,

952 
∑ck_Àn
-
IP_MIN_HDR_SIZE
);

953 
	`bf_a‰ì
(
∑ck
);

954 
∑ck

	`bf_∑ckIffLess
(
tmp_∑ck
, 
IP_MIN_HDR_SIZE
);

955 
hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
∑ck
);

956 { 
	`whîe
(); 
	`¥ötf
("ih_vîs_ihl0x%x\n", 
hdr
->
ih_vîs_ihl
); }

957 
tmp_∑ck

	`bf_memªq
 (
hdr_›t_Àn
);

958 
	`mem˝y
 (
	`±r2acc_d©a
(
tmp_∑ck
), 
ù_fd
->
if_ù›t
.

959 
nwio_hdr›t
.
iho_d©a
, 
hdr_›t_Àn
);

960 { 
	`whîe
(); 
	`¥ötf
("ih_vîs_ihl0x%x\n", 
hdr
->
ih_vîs_ihl
); }

961 
∑ck
->
acc_√xt

tmp_∑ck
;

962 
tmp_∑ck
->
acc_√xt

tmp_∑ck1
;

963 
hdr_Àn

IP_MIN_HDR_SIZE
+
hdr_›t_Àn
;

966 
hdr_Àn

IP_MIN_HDR_SIZE
;

967 
hdr
->
ih_vîs_ihl

hdr_Àn
/4;

968 #i‡
DEBUG
 & 256

969 { 
	`whîe
(); 
	`¥ötf
("ih_vîs_ihl0x%x\n", 
hdr
->
ih_vîs_ihl
); }

971 
hdr
->
ih_tos

ù_fd
->
if_ù›t
.
nwio_tos
;

972 
hdr
->
ih_Êags_‰agoff
= 0;

973 i‡(
ù_fd
->
if_ù›t
.
nwio_df
)

974 
hdr
->
ih_Êags_‰agoff
 |
	`HTONS
(
IH_DONT_FRAG
);

975 
hdr
->
ih_âl

ù_fd
->
if_ù›t
.
nwio_âl
;

976 #i‡
DEBUG
 & 256

977 { 
	`whîe
(); 
	`¥ötf
("ih_vîs_ihl0x%x\n", 
hdr
->
ih_vîs_ihl
); }

982 
	`as£π
 (
ù_fd
->
if_ù›t
.
nwio_Êags
 & 
NWIO_HDR_O_ANY
);

983 
hdr_Àn
(
hdr
->
ih_vîs_ihl
 & 
IH_IHL_MASK
)*4;

984 #i‡
DEBUG
 & 256

985 { 
	`whîe
(); 
	`¥ötf
("ih_vîs_ihl0x%x\n", 
hdr
->
ih_vîs_ihl
); }

987 
îr‹

NW_OK
;

988 i‡(
hdr_Àn
<
IP_MIN_HDR_SIZE
)

989 
îr‹

EINVAL
;

990 i‡(
hdr_Àn
>
∑ck_Àn
)

991 
îr‹

EPACKSIZE
;

992 i‡(!
hdr
->
ih_âl
)

993 
îr‹

EINVAL
;

994 i‡(
îr‹
<0)

996 
	`bf_a‰ì
(
∑ck
);

997 
	`îr‹_ª∂y
 (
ù_fd
, 
îr‹
);

1000 
∑ck

	`bf_∑ckIffLess
’ack, 
hdr_Àn
);

1001 
hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
∑ck
);

1002 #i‡
DEBUG
 & 256

1003 { 
	`whîe
(); 
	`¥ötf
("ih_vîs_ihl0x%x\n", 
hdr
->
ih_vîs_ihl
); }

1005 i‡(
hdr_Àn
 !
IP_MIN_HDR_SIZE
)

1007 
îr‹

	`ù_chk_hdr›t
((
u8_t
 *)(
	`±r2acc_d©a
(
∑ck
) +

1008 
IP_MIN_HDR_SIZE
),

1009 
hdr_Àn
-
IP_MIN_HDR_SIZE
);

1010 i‡(
îr‹
<0)

1012 
	`bf_a‰ì
(
∑ck
);

1013 
	`îr‹_ª∂y
 (
ù_fd
, 
îr‹
);

1017 #i‡
DEBUG
 & 256

1018 { 
	`whîe
(); 
	`¥ötf
("ih_vîs_ihl0x%x\n", 
hdr
->
ih_vîs_ihl
); }

1021 #i‡
DEBUG
 & 256

1022 i‡(
hdr
->
ih_Êags_‰agoff
 & 
	`HTONS
(
IH_DONT_FRAG
))

1023 { 
	`whîe
(); 
	`¥ötf
("¥Ÿo%d\n", 
hdr
->
ih_¥Ÿo
); }

1025 
	`as£π
 (!(
hdr
->
ih_Êags_‰agoff
 & 
	`HTONS
(
IH_DONT_FRAG
)));

1026 #i‡
DEBUG
 & 256

1027 { 
	`whîe
(); 
	`¥ötf
("ih_vîs_ihl0x%x\n", 
hdr
->
ih_vîs_ihl
); }

1029 
hdr
->
ih_vîs_ihl
(hdr->ih_vîs_ih»& 
IH_IHL_MASK
) |

1030 (
IP_VERSION
 << 4);

1031 #i‡
DEBUG
 & 256

1032 { 
	`whîe
(); 
	`¥ötf
("ih_vîs_ihl0x%x\n", 
hdr
->
ih_vîs_ihl
); }

1034 
hdr
->
ih_Àngth

	`ht⁄s
(
∑ck_Àn
);

1035 
hdr
->
ih_Êags_‰agoff
 &~
	`HTONS
(
IH_FRAGOFF_MASK
 |

1036 
IH_FLAGS_UNUSED
 | 
IH_MORE_FRAGS
);

1037 i‡(
ù_fd
->
if_ù›t
.
nwio_Êags
 & 
NWIO_PROTOSPEC
)

1038 
hdr
->
ih_¥Ÿo

ù_fd
->
if_ù›t
.
nwio_¥Ÿo
;

1039 
hdr
->
ih_id

	`ht⁄s
(
id
);

1040 
hdr
->
ih_§c

ù_fd
->
if_p‹t
->
ù_ùaddr
;

1041 i‡(
ù_fd
->
if_ù›t
.
nwio_Êags
 & 
NWIO_REMSPEC
)

1042 
hdr
->
ih_d°

ù_fd
->
if_ù›t
.
nwio_ªm
;

1045 
	`as£π
 (
ù_fd
->
if_ù›t
.
nwio_Êags
 & 
NWIO_REMANY
);

1046 
îr‹

	`chk_d°addr
(
hdr
->
ih_d°
);

1047 i‡(
îr‹
<0)

1049 
	`bf_a‰ì
(
∑ck
);

1050 
	`îr‹_ª∂y
(
ù_fd
, 
îr‹
);

1054  
∑ck
;

1055 
	}
}

1057 
PRIVATE
 
	$chk_d°addr
 (
d°
)

1058 
ùaddr_t
 
d°
;

1060 
ùaddr_t
 
ho°ªp_d°
, 
√tmask
;

1062 
ho°ªp_d°

	`¡ohl
(
d°
);

1063 i‡(
ho°ªp_d°
 =(
ùaddr_t
)-1)

1064  
NW_OK
;

1065 i‡((
ho°ªp_d°
 & 0xe0000000l) == 0xe0000000l)

1066  
EBADDEST
;

1067 
√tmask

	`ù_gë_√tmask
(
d°
);

1068 i‡(!(
d°
 & ~
√tmask
))

1069  
EBADDEST
;

1070  
NW_OK
;

1071 
	}
}

	@ipr.c

5 
	~"öë.h
"

6 
	~"˛ock.h
"

8 
	~"as£π.h
"

9 
	~"io.h
"

10 
	~"ùr.h
"

12 
INIT_PANIC
();

14 
	#ROUTE_NR
 32

	)

15 
	#DIST_UNREACHABLE
 512

	)

17 
PRIVATE
 
rouã_t
 
	grouã_èbÀ
[
ROUTE_NR
];

18 
PRIVATE
 
	gfixed_rouãs
;

20 
FORWARD
 
rouã_t
 *
gë_rouã_ít
 
ARGS
(–
ùaddr_t
 
de°
 ));

22 
PUBLIC
 
	$ùr_öô
()

24 
i
;

25 
rouã_t
 *
rouã_öd
;

27 
i
0, 
rouã_öd

rouã_èbÀ
; i<
ROUTE_NR
; i++,Ñoute_ind++)

28 
rouã_öd
->
π_Êags

RTF_EMPTY
;

29 
fixed_rouãs
= 0;

30 
	}
}

32 
PUBLIC
 
	$ùrouã_‰ag
(
de°
, 
âl
, 
√xth›
, 
p‹t
)

33 
ùaddr_t
 
de°
;

34 
âl
;

35 
ùaddr_t
 *
√xth›
;

36 *
p‹t
;

38 
rouã_t
 *
rouã_ít
;

40 
rouã_ít

	`gë_rouã_ít
(
de°
);

41 i‡(!
rouã_ít
 ||Ñouã_ít->
π_di°
 > 
âl
)

42  
EDSTNOTRCH
;

44 *
√xth›

rouã_ít
->
π_g©eway
;

45 *
p‹t

rouã_ít
->
π_p‹t
;

47 
	}
}

49 
PRIVATE
 
rouã_t
 *
	$gë_rouã_ít
(
de°
)

50 
ùaddr_t
 
de°
;

52 
rouã_t
 *
rouã_öd
, *
rouã_hi
;

53 
rouã_t
 *
be°rouã
, *
£c_be°rouã
, 
tm¥ouã
;

54 
time_t
 
cuºtim
;

56 
cuºtim

	`gë_time
();

58 
rouã_hi
&
rouã_èbÀ
[
ROUTE_NR
];

59 
be°rouã
= 0;

60 
rouã_öd

rouã_èbÀ
;Ñouã_öd<
rouã_hi
;Ñoute_ind++)

62 i‡(!(
rouã_öd
->
π_Êags
 & 
RTF_INUSE
))

64 i‡(
rouã_öd
->
π_exp_tim
 &&Ñouã_öd->π_exp_tim<
cuºtim
)

66 
rouã_öd
->
π_Êags
 &~
RTF_INUSE
;

69 i‡((
de°
 ^ 
rouã_öd
->
π_de°
Ë&Ñouã_öd->
π_√tmask
)

72 i‡(!
be°rouã
)

74 
be°rouã

rouã_öd
;

77 i‡(
be°rouã
->
π_√tmask
 !
rouã_öd
->rt_netmask)

79 i‡(
rouã_öd
->
π_di°
 > 
be°rouã
->rt_dist ||

80 (
rouã_öd
->
π_di°
 =
be°rouã
->

81 
π_di°
 && 
	`¡ohl
(
rouã_öd
->
π_√tmask
)>

82 
	`¡ohl
(
be°rouã
->
π_√tmask
)))

83 
be°rouã

rouã_öd
;

86 
£c_be°rouã

be°rouã
;

87 i‡(
be°rouã
->
π_g©eway
 =
rouã_öd
->rt_gateway)

89 i‡(
rouã_öd
->
π_time°amp
 >

90 
be°rouã
->
π_time°amp
)

91 
be°rouã

rouã_öd
;

95 i‡(
rouã_öd
->
π_di°
 < 
be°rouã
->rt_dist)

96 
be°rouã

rouã_öd
;

98 i‡(
be°rouã
->
π_di°
 > 
£c_be°rouã
->rt_dist)

100 
tm¥ouã
*
be°rouã
;

101 *
be°rouã
*
£c_be°rouã
;

102 *
£c_be°rouã

tm¥ouã
;

103 
rouã_öd

be°rouã

£c_be°rouã
;

106 #i‡
DEBUG
 & 256

107 { 
	`whîe
(); i‡(!
be°rouã
){ 
	`¥ötf
("nÿrouãÅÿ"); 
	`wrôeIpAddr
(
de°
);

108 
	`¥ötf
("\n"); } {Örintf ("routeÅo ");

109 
	`wrôeIpAddr
(
be°rouã
->
π_de°
); 
	`¥ötf
(" via ");

110 
	`wrôeIpAddr
(
be°rouã
->
π_g©eway
); 
	`¥ötf
("át distance %d\n",

111 
be°rouã
->
π_di°
); } }

113  
be°rouã
;

114 
	}
}

116 
PUBLIC
 
rouã_t
 *
	$ùr_add_rouã
(
de°
, 
√tmask
, 
g©eway
, 
p‹t
, 
timeout
, 
di°
,

117 
fixed
, 
¥e„ªn˚
)

118 
ùaddr_t
 
de°
;

119 
ùaddr_t
 
√tmask
;

120 
ùaddr_t
 
g©eway
;

121 
p‹t
;

122 
time_t
 
timeout
;

123 
di°
;

124 
fixed
;

125 
i32_t
 
¥e„ªn˚
;

127 
i
;

128 
rouã_t
 *
rouã_öd
;

129 
rouã_t
 *
ﬁde°_rouã
;

130 
time_t
 
cuºtim
;

132 #i‡
DEBUG
 & 256

133 { 
	`whîe
(); 
	`¥ötf
("ùr_add_rouã(de°"); 
	`wrôeIpAddr
(
de°
);

134 
	`¥ötf
(",Çëmask"); 
	`wrôeIpAddr
(
√tmask
);

135 
	`¥ötf
(", g©eway"); 
	`wrôeIpAddr
(
g©eway
);

136 
	`¥ötf
(",Öort= %d,Åimeout= %ld, dist= %d, fixed= %d,Öref= %d\n",

137 
p‹t
, 
timeout
, 
di°
, 
fixed
, 
¥e„ªn˚
); }

139 i‡(
fixed
)

141 i‡(
fixed_rouãs
 >
IPR_MAX_FIXED_ROUTES
)

143 
fixed_rouãs
++;

145 
ﬁde°_rouã
= 0;

146 
cuºtim

	`gë_time
();

147 
i
0, 
rouã_öd

rouã_èbÀ
; i<
ROUTE_NR
; i++,Ñoute_ind++)

149 i‡(!(
rouã_öd
->
π_Êags
 & 
RTF_INUSE
))

151 
ﬁde°_rouã

rouã_öd
;

154 i‡(
rouã_öd
->
π_exp_tim
 &&Ñouã_öd->π_exp_tim < 
cuºtim
)

156 
ﬁde°_rouã

rouã_öd
;

159 i‡(
rouã_öd
->
π_de°
 =
de°
 &&

160 
rouã_öd
->
π_√tmask
 =
√tmask
 &&

161 
rouã_öd
->
π_g©eway
 =
g©eway
)

163 i‡(!
fixed
 && (
rouã_öd
->
π_Êags
 & 
RTF_FIXED
))

165 
ﬁde°_rouã

rouã_öd
;

168 i‡(
rouã_öd
->
π_Êags
 & 
RTF_FIXED
)

170 i‡(!
ﬁde°_rouã
)

172 
ﬁde°_rouã

rouã_öd
;

175 i‡(
rouã_öd
->
π_time°amp
 < 
ﬁde°_rouã
->rt_timestamp)

176 
ﬁde°_rouã

rouã_öd
;

178 
	`as£π
 (
ﬁde°_rouã
);

179 
ﬁde°_rouã
->
π_de°

de°
;

180 
ﬁde°_rouã
->
π_g©eway

g©eway
;

181 
ﬁde°_rouã
->
π_√tmask

√tmask
;

182 i‡(
timeout
)

183 
ﬁde°_rouã
->
π_exp_tim

cuºtim
 + 
timeout
;

185 
ﬁde°_rouã
->
π_exp_tim
= 0;

186 
ﬁde°_rouã
->
π_time°amp

cuºtim
;

187 
ﬁde°_rouã
->
π_di°

di°
;

188 
ﬁde°_rouã
->
π_p‹t

p‹t
;

189 
ﬁde°_rouã
->
π_Êags

RTF_INUSE
;

190 
ﬁde°_rouã
->
π_¥ef

¥e„ªn˚
;

191 i‡(
fixed
)

192 
ﬁde°_rouã
->
π_Êags
 |
RTF_FIXED
;

193  
ﬁde°_rouã
;

194 
	}
}

196 
PUBLIC
 
	$ùr_g©eway_down
(
g©eway
, 
timeout
)

197 
ùaddr_t
 
g©eway
;

198 
time_t
 
timeout
;

200 
rouã_t
 *
rouã_öd
, *
rouã
;

201 
time_t
 
cuºtim
;

202 
i
;

204 
cuºtim

	`gë_time
();

205 
i
0, 
rouã_öd

rouã_èbÀ
; i<
ROUTE_NR
; i++,Ñoute_ind++)

207 i‡(!(
rouã_öd
->
π_Êags
 & 
RTF_INUSE
))

209 i‡(
rouã_öd
->
π_g©eway
 !
g©eway
)

211 i‡(
rouã_öd
->
π_exp_tim
 &&Ñouã_öd->π_exp_tim < 
cuºtim
)

213 
rouã_öd
->
π_Êags
 &~
RTF_INUSE
;

216 i‡(!(
rouã_öd
->
π_Êags
 & 
RTF_FIXED
))

218 
rouã_öd
->
π_time°amp

cuºtim
;

219 i‡(
timeout
)

220 
rouã_öd
->
π_exp_tim

cuºtim
+
timeout
;

222 
rouã_öd
->
π_exp_tim
= 0;

223 
rouã_öd
->
π_di°

DIST_UNREACHABLE
;

226 #i‡
DEBUG


227 { 
	`whîe
(); 
	`¥ötf
("addingÑoute\n"); }

229 
rouã

	`ùr_add_rouã
(
rouã_öd
->
π_de°
,Ñouã_öd->
π_√tmask
,

230 
g©eway
, 
rouã_öd
->
π_p‹t
, 
timeout
, 
DIST_UNREACHABLE
,

231 
FALSE
, 0);

232 
	`as£π
 (
rouã
);

234 
	}
}

236 
PUBLIC
 
	$ùr_de°uƒch
(
de°
, 
√tmask
, 
timeout
)

237 
ùaddr_t
 
de°
;

238 
ùaddr_t
 
√tmask
;

239 
time_t
 
timeout
;

241 
rouã_t
 *
rouã
;

243 
rouã

	`gë_rouã_ít
(
de°
);

245 i‡(!
rouã
)

247 #i‡
DEBUG


248 { 
	`whîe
(); 
	`¥ötf
("gŸá de° uƒóchabÀ f‹ "); 
	`wrôeIpAddr
(
de°
);

249 
	`¥ötf
("butÇoÑouteÖresent\n"); }

253 #i‡
DEBUG


254 { 
	`whîe
(); 
	`¥ötf
("addingÑoute\n"); }

256 
rouã

	`ùr_add_rouã
(
de°
, 
√tmask
,Ñouã->
π_g©eway
,Ñouã->
π_p‹t
,

257 
timeout
, 
DIST_UNREACHABLE
, 
FALSE
, 0);

258 
	`as£π
 (
rouã
);

259 
	}
}

261 
PUBLIC
 
	$ùr_ªdúe˘
(
de°
, 
√tmask
, 
ﬁd_g©eway
, 
√w_g©eway
, 
√w_p‹t
,

262 
timeout
)

263 
ùaddr_t
 
de°
;

264 
ùaddr_t
 
√tmask
;

265 
ùaddr_t
 
ﬁd_g©eway
;

266 
ùaddr_t
 
√w_g©eway
;

267 
√w_p‹t
;

268 
time_t
 
timeout
;

270 
rouã_t
 *
rouã
;

272 
rouã

	`gë_rouã_ít
(
de°
);

274 i‡(!
rouã
)

276 #i‡
DEBUG


277 { 
	`whîe
(); 
	`¥ötf
("gŸáÑedúe˘ f‹ "); 
	`wrôeIpAddr
(
de°
);

278 
	`¥ötf
("butÇoÑouteÖresent\n"); }

282 i‡(
rouã
->
π_g©eway
 !
ﬁd_g©eway
)

284 #i‡
DEBUG


285 { 
	`whîe
(); 
	`¥ötf
("gŸáÑedúe˘ from "); 
	`wrôeIpAddr
(
ﬁd_g©eway
);

286 
	`¥ötf
(" f‹ "); 
	`wrôeIpAddr
(
de°
);Örintf(" but curr gateway is ");

287 
	`wrôeIpAddr
(
rouã
->
π_g©eway
); 
	`¥ötf
("\n"); }

291 i‡(
rouã
->
π_Êags
 & 
RTF_FIXED
)

293 i‡–
rouã
->
π_de°
 =
de°
)

295 #i‡
DEBUG


296 { 
	`whîe
(); 
	`¥ötf
("gŸáÑedúe˘ f‹ "); 
	`wrôeIpAddr
(
de°
);

297 
	`¥ötf
("butÑoute is fixed\n"); }

304 #i‡
DEBUG


305 { 
	`whîe
(); 
	`¥ötf
("addingÑoute\n"); }

307 
rouã

	`ùr_add_rouã
(
de°
, 
√tmask
,Ñouã->
π_g©eway
,

308 
rouã
->
π_p‹t
, 
timeout
, 
DIST_UNREACHABLE
, 
FALSE
, 0);

309 
	`as£π
(
rouã
);

311 #i‡
DEBUG


312 { 
	`whîe
(); 
	`¥ötf
("addingÑoute\n"); }

314 
rouã

	`ùr_add_rouã
(
de°
, 
√tmask
, 
√w_g©eway
, 
√w_p‹t
,

315 
timeout
, 1, 
FALSE
, 0);

316 
	`as£π
 (
rouã
);

317 
	}
}

319 
PUBLIC
 
	$ùr_âl_exc
(
de°
, 
√tmask
, 
timeout
)

320 
ùaddr_t
 
de°
;

321 
ùaddr_t
 
√tmask
;

322 
time_t
 
timeout
;

324 
rouã_t
 *
rouã
;

325 
√w_di°
;

327 
rouã

	`gë_rouã_ít
(
de°
);

329 i‡(!
rouã
)

331 #i‡
DEBUG


332 { 
	`whîe
(); 
	`¥ötf
("gŸáÅéÉx˚eded f‹ "); 
	`wrôeIpAddr
(
de°
);

333 
	`¥ötf
("butÇoÑouteÖresent\n"); }

338 
√w_di°

rouã
->
π_di°
 * 2;

339 i‡(
√w_di°
>
IP_MAX_TTL
)

341 
√w_di°

rouã
->
π_di°
+1;

342 i‡(
√w_di°
>
IP_MAX_TTL
)

344 #i‡
DEBUG


345 { 
	`whîe
(); 
	`¥ötf
("gŸáÅéÉx˚eded f‹ "); 
	`wrôeIpAddr
(
de°
);

346 
	`¥ötf
(" buàdi° i†%d\n", 
rouã
->
π_di°
); }

352 #i‡
DEBUG


353 { 
	`whîe
(); 
	`¥ötf
("addingÑoute\n"); }

355 
rouã

	`ùr_add_rouã
(
de°
, 
√tmask
,Ñouã->
π_g©eway
,Ñouã->
π_p‹t
,

356 
timeout
, 
√w_di°
, 
FALSE
, 0);

357 
	`as£π
 (
rouã
);

358 
	}
}

360 
	$ùr_gë_rouã
(
ít_no
, 
rouã_ít
)

361 
ít_no
;

362 
nwio_rouã_t
 *
rouã_ít
;

364 
rouã_t
 *
rouã
;

366 i‡(
ít_no
<0 ||É¡_no>
ROUTE_NR
)

367  
ENOENT
;

369 
rouã
&
rouã_èbÀ
[
ít_no
];

370 i‡(
rouã
->
π_exp_tim
 &&Ñouã->π_exp_tim < 
	`gë_time
())

371 
rouã
->
π_Êags
 &~
RTF_INUSE
;

373 
rouã_ít
->
nwr_ít_cou¡

ROUTE_NR
;

374 
rouã_ít
->
nwr_de°

rouã
->
π_de°
;

375 
rouã_ít
->
nwr_√tmask

rouã
->
π_√tmask
;

376 
rouã_ít
->
nwr_g©eway

rouã
->
π_g©eway
;

377 
rouã_ít
->
nwr_di°

rouã
->
π_di°
;

378 
rouã_ít
->
nwr_Êags

NWRF_EMPTY
;

379 i‡(
rouã
->
π_Êags
 & 
RTF_INUSE
)

381 
rouã_ít
->
nwr_Êags
 |
NWRF_INUSE
;

382 i‡(
rouã
->
π_Êags
 & 
RTF_FIXED
)

383 
rouã_ít
->
nwr_Êags
 |
NWRF_FIXED
;

385 
rouã_ít
->
nwr_¥ef

rouã
->
π_¥ef
;

387 
	}
}

	@ipr.h

5 #i‚de‡
IPR_H


6 
	#IPR_H


	)

8 
	srouã


10 
ùaddr_t
 
	mπ_de°
;

11 
ùaddr_t
 
	mπ_g©eway
;

12 
ùaddr_t
 
	mπ_√tmask
;

13 
time_t
 
	mπ_exp_tim
;

14 
time_t
 
	mπ_time°amp
;

15 
	mπ_di°
;

16 
	mπ_p‹t
;

17 
	mπ_Êags
;

18 
i32_t
 
	mπ_¥ef
;

19 } 
	trouã_t
;

21 
	#RTF_EMPTY
 0

	)

22 
	#RTF_INUSE
 1

	)

23 
	#RTF_FIXED
 2

	)

25 
	#IPR_MAX_FIXED_ROUTES
 16

	)

27 
	#IPR_UNRCH_TIMEOUT
 (60L * 
HZ
)

	)

28 
	#IPR_TTL_TIMEOUT
 (60L * 
HZ
)

	)

29 
	#IPR_REDIRECT_TIMEOUT
 (20 * 60L * 
HZ
)

	)

30 
	#IPR_GW_DOWN_TIMEOUT
 (60L * 
HZ
)

	)

34 
ùrouã_‰ag
 
ARGS
(–
ùaddr_t
 
de°
, 
âl
, i∑ddr_à*
√xth›
,

35 *
p‹t
 ));

36 
ùr_öô
 
ARGS
(( ));

37 
rouã_t
 *
ùr_add_rouã
 
ARGS
(–
ùaddr_t
 
de°
, i∑ddr_à
√tmask
,

38 
ùaddr_t
 
g©eway
, 
p‹t
, 
time_t
 
timeout
, 
di°
, 
fixed
,

39 
i32_t
 
‰e„ªn˚
 ));

40 
ùr_g©eway_down
 
ARGS
(–
ùaddr_t
 
g©eway
, 
time_t
 
timeout
 ));

41 
ùr_ªdúe˘
 
ARGS
(–
ùaddr_t
 
de°
, i∑ddr_à
√tmask
,

42 
ùaddr_t
 
ﬁd_g©eway
, i∑ddr_à
√w_g©eway
, 
√w_p‹t
,

43 
time_t
 
timeout
 ));

44 
ùr_de°uƒch
 
ARGS
(–
ùaddr_t
 
de°
, i∑ddr_à
√tmask
,

45 
time_t
 
timeout
 ));

46 
ùr_âl_exc
 
ARGS
(–
ùaddr_t
 
de°
, i∑ddr_à
√tmask
,

47 
time_t
 
timeout
 ));

48 
ùr_gë_rouã
 
ARGS
(–
ít_no
, 
nwio_rouã_t
 *
rouã_ít
 ));

	@isalnum.c

1 
	~<˘y≥.h
>

3 (
iß um
)(
c
) {

4  
	`iß um
(
c
);

5 
	}
}

	@isalpha.c

1 
	~<˘y≥.h
>

3 (
ißÕha
)(
c
) {

4  
	`ißÕha
(
c
);

5 
	}
}

	@isascii.c

1 
	~<˘y≥.h
>

3 (
ißscii
)(
c
) {

4  
	`ißscii
(
c
);

5 
	}
}

	@iscntrl.c

1 
	~<˘y≥.h
>

3 (
is˙ål
)(
c
) {

4  
	`is˙ål
(
c
);

5 
	}
}

	@isdigit.c

1 
	~<˘y≥.h
>

3 (
isdigô
)(
c
) {

4  
	`isdigô
(
c
);

5 
	}
}

	@isgraph.c

1 
	~<˘y≥.h
>

3 (
isgøph
)(
c
) {

4  
	`isgøph
(
c
);

5 
	}
}

	@islower.c

1 
	~<˘y≥.h
>

3 (
i¶owî
)(
c
) {

4  
	`i¶owî
(
c
);

5 
	}
}

	@isnan.c

1 
	$__IsN™
(
d
)

3 #i‡
	`deföed
(
vax
Ë|| deföed(
pdp
)

5 
f
 = 
d
;

7 i‡((*((*Ë&
f
) & 0x7f800000) == 0x7f800000 &&

8 (*((*Ë&
f
) & 0x007fffff) != 0)  1;

11 
	}
}

	@isprint.c

1 
	~<˘y≥.h
>

3 (
i•röt
)(
c
) {

4  
	`i•röt
(
c
);

5 
	}
}

	@ispunct.c

1 
	~<˘y≥.h
>

3 (
i•un˘
)(
c
) {

4  
	`i•un˘
(
c
);

5 
	}
}

	@isspace.c

1 
	~<˘y≥.h
>

3 (
is•a˚
)(
c
) {

4  
	`is•a˚
(
c
);

5 
	}
}

	@isupper.c

1 
	~<˘y≥.h
>

3 (
isuµî
)(
c
) {

4  
	`isuµî
(
c
);

5 
	}
}

	@isxdigit.c

1 
	~<˘y≥.h
>

3 (
isxdigô
)(
c
) {

4  
	`isxdigô
(
c
);

5 
	}
}

	@itoa.c

1 
	~<lib.h
>

4 
PRIVATE
 
	g√xt
;

5 
PRIVATE
 
	gqbuf
[8];

7 
_PROTOTYPE
–*
ôﬂ
, (
n
));

9 *
	$ôﬂ
(
n
)

10 
n
;

12 
r
, 
k
;

13 
Êag
 = 0;

15 
√xt
 = 0;

16 i‡(
n
 < 0) {

17 
qbuf
[
√xt
++] = '-';

18 
n
 = -n;

20 i‡(
n
 == 0) {

21 
qbuf
[
√xt
++] = '0';

23 
k
 = 10000;

24 
k
 > 0) {

25 
r
 = 
n
 / 
k
;

26 i‡(
Êag
 || 
r
 > 0) {

27 
qbuf
[
√xt
++] = '0' + 
r
;

28 
Êag
 = 1;

30 
n
 -
r
 * 
k
;

31 
k
 = k / 10;

34 
qbuf
[
√xt
] = 0;

35 (
qbuf
);

36 
	}
}

	@kernel.h

4 
	#_POSIX_SOURCE
 1

	)

5 
	#_MINIX
 1

	)

6 
	#_SYSTEM
 1

	)

9 
	~<möix/c⁄fig.h
>

10 
	~<™si.h
>

11 
	~<sys/ty≥s.h
>

12 
	~<möix/c⁄°.h
>

13 
	~<möix/ty≥.h
>

14 
	~<möix/sy¶ib.h
>

16 
	~<°rög.h
>

17 
	~<limôs.h
>

18 
	~<î∫o.h
>

20 
	~"c⁄°.h
"

21 
	~"ty≥.h
"

22 
	~"¥Ÿo.h
"

23 
	~"glo.h
"

	@keyboard.c

7 
	~"kî√l.h
"

8 
	~<ãrmios.h
>

9 
	~<sig«l.h
>

10 
	~<uni°d.h
>

11 
	~<möix/ˇŒƒ.h
>

12 
	~<möix/com.h
>

13 
	~<möix/keym≠.h
>

14 
	~"ây.h
"

15 
	~"keym≠s/us-°d.§c
"

18 
	#KEYBD
 0x60

	)

21 
	#KB_COMMAND
 0x64

	)

22 
	#KB_GATE_A20
 0x02

	)

23 
	#KB_PULSE_OUTPUT
 0xF0

	)

24 
	#KB_RESET
 0x01

	)

25 
	#KB_STATUS
 0x64

	)

26 
	#KB_ACK
 0xFA

	)

27 
	#KB_BUSY
 0x02

	)

28 
	#LED_CODE
 0xED

	)

29 
	#MAX_KB_ACK_RETRIES
 0x1000

	)

30 
	#MAX_KB_BUSY_RETRIES
 0x1000

	)

31 
	#KBIT
 0x80

	)

34 
	#ESC_SCAN
 1

	)

35 
	#SLASH_SCAN
 53

	)

36 
	#HOME_SCAN
 71

	)

37 
	#DEL_SCAN
 83

	)

38 
	#CONSOLE
 0

	)

39 
	#MEMCHECK_ADR
 0x472

	)

40 
	#MEMCHECK_MAG
 0x1234

	)

42 
	#kb_addr
(Ë(&
kb_löes
[0]Ë

	)

43 
	#KB_IN_BYTES
 32

	)

45 
PRIVATE
 
	gÆt1
;

46 
PRIVATE
 
	gÆt2
;

47 
PRIVATE
 
	gˇp¶ock
;

48 
PRIVATE
 
	gesc
;

49 
PRIVATE
 
	gc⁄åﬁ
;

50 
PRIVATE
 
	gˇps_off
;

51 
PRIVATE
 
	gnumlock
;

52 
PRIVATE
 
	gnum_off
;

53 
PRIVATE
 
	g¶ock
;

54 
PRIVATE
 
	g¶ock_off
;

55 
PRIVATE
 
	gshi·
;

57 
PRIVATE
 
	gnum∑d_m≠
[] =

61 
	skb_s
 {

62 *
	mihód
;

63 *
	môaû
;

64 
	micou¡
;

65 
	mibuf
[
KB_IN_BYTES
];

68 
PRIVATE
 
kb_s
 
	gkb_löes
[
NR_CONS
];

70 
FORWARD
 
_PROTOTYPE
–
kb_ack
, () );

71 
FORWARD
 
_PROTOTYPE
–
kb_waô
, () );

72 
FORWARD
 
_PROTOTYPE
–
func_key
, (
scode
) );

73 
FORWARD
 
_PROTOTYPE
–
sˇn_keybﬂrd
, () );

74 
FORWARD
 
_PROTOTYPE
–
make_bªak
, (
scode
) );

75 
FORWARD
 
_PROTOTYPE
–
£t_Àds
, () );

76 
FORWARD
 
_PROTOTYPE
–
kbd_hw_öt
, (
úq
) );

77 
FORWARD
 
_PROTOTYPE
–
kb_ªad
, (
ây
 *
ç
) );

78 
FORWARD
 
_PROTOTYPE
–
m≠_key
, (
scode
) );

85 
	#m≠_key0
(
scode
Ë\

	)

86 ((Ë
	gkeym≠
[(
scode
Ë* 
MAP_COLS
])

92 
PRIVATE
 
	$m≠_key
(
scode
)

93 
scode
;

97 
ˇps
, 
cﬁumn
;

98 
u16_t
 *
keyrow
;

100 i‡(
scode
 =
SLASH_SCAN
 && 
esc
)  '/';

102 
keyrow
 = &
keym≠
[
scode
 * 
MAP_COLS
];

104 
ˇps
 = 
shi·
;

105 i‡(
numlock
 && 
HOME_SCAN
 <
scode
 && scodê<
DEL_SCAN
Ë
ˇps
 = !caps;

106 i‡(
ˇp¶ock
 && (
keyrow
[0] & 
HASCAPS
)Ë
ˇps
 = !caps;

108 i‡(
Æt1
 || 
Æt2
) {

109 
cﬁumn
 = 2;

110 i‡(
c⁄åﬁ
 || 
Æt2
Ë
cﬁumn
 = 3;

111 i‡(
ˇps
Ë
cﬁumn
 = 4;

113 
cﬁumn
 = 0;

114 i‡(
ˇps
Ë
cﬁumn
 = 1;

115 i‡(
c⁄åﬁ
Ë
cﬁumn
 = 5;

117  
keyrow
[
cﬁumn
] & ~
HASCAPS
;

118 
	}
}

124 
PRIVATE
 
	$kbd_hw_öt
(
úq
)

125 
úq
;

129 
code
;

130 
km
;

131 
kb_s
 *
kb
;

134 
code
 = 
	`sˇn_keybﬂrd
();

141 i‡(
code
 & 0200) {

143 
km
 = 
	`m≠_key0
(
code
 & 0177);

144 i‡(
km
 !
CTRL
 && km !
SHIFT
 && km !
ALT
 && km !
CALOCK


145 && 
km
 !
NLOCK
 && km !
SLOCK
 && km !
EXTKEY
)

150 
kb
 = 
	`kb_addr
();

151 i‡(
kb
->
icou¡
 < 
KB_IN_BYTES
) {

152 *
kb
->
ihód
++ = 
code
;

153 i‡(
kb
->
ihód
 =kb->
ibuf
 + 
KB_IN_BYTES
) kb->ihead = kb->ibuf;

154 
kb
->
icou¡
++;

155 
ây_èbÀ
[
cuºít
].
ây_evíts
 = 1;

156 
	`f‹˚_timeout
();

160 
	}
}

166 
PRIVATE
 
	$kb_ªad
(
ç
)

167 
ây_t
 *
ç
;

171 
kb_s
 *
kb
;

172 
buf
[3];

173 
scode
;

174 
ch
;

176 
kb
 = 
	`kb_addr
();

177 
ç
 = &
ây_èbÀ
[
cuºít
];

179 
kb
->
icou¡
 > 0) {

180 
scode
 = *
kb
->
ôaû
++;

181 i‡(
kb
->
ôaû
 =kb->
ibuf
 + 
KB_IN_BYTES
) kb->itail = kb->ibuf;

182 
	`lock
();

183 
kb
->
icou¡
--;

184 
	`u∆ock
();

187 i‡(
	`func_key
(
scode
)) ;

190 
ch
 = 
	`make_bªak
(
scode
);

192 i‡(
ch
 <= 0xFF) {

194 
buf
[0] = 
ch
;

195 (Ë
	`ö_¥o˚ss
(
ç
, 
buf
, 1);

197 i‡(
HOME
 <
ch
 && ch <
INSRT
) {

199 
buf
[0] = 
ESC
;

200 
buf
[1] = '[';

201 
buf
[2] = 
num∑d_m≠
[
ch
 - 
HOME
];

202 (Ë
	`ö_¥o˚ss
(
ç
, 
buf
, 3);

204 i‡(
ch
 =
ALEFT
) {

206 
	`£À˘_c⁄sﬁe
(
cuºít
 - 1);

208 i‡(
ch
 =
ARIGHT
) {

210 
	`£À˘_c⁄sﬁe
(
cuºít
 + 1);

212 i‡(
AF1
 <
ch
 && ch <
AF12
) {

214 
	`£À˘_c⁄sﬁe
(
ch
 - 
AF1
);

217 
	}
}

223 
PRIVATE
 
	$make_bªak
(
scode
)

224 
scode
;

230 
ch
, 
make
;

231 
CAD_cou¡
 = 0;

237 i‡(
c⁄åﬁ
 && (
Æt1
 || 
Æt2
Ë&& 
scode
 =
DEL_SCAN
)

239 i‡(++
CAD_cou¡
 =3Ë
	`wªboŸ
(
RBT_HALT
);

240 
	`ˇu£_sig
(
INIT_PROC_NR
, 
SIGABRT
);

245 
make
 = (
scode
 & 0200 ? 0 : 1);

247 
ch
 = 
	`m≠_key
(
scode
 & 0177);

249 
ch
) {

250 
CTRL
:

251 
c⁄åﬁ
 = 
make
;

252 
ch
 = -1;

254 
SHIFT
:

255 
shi·
 = 
make
;

256 
ch
 = -1;

258 
ALT
:

259 i‡(
make
) {

260 i‡(
esc
Ë
Æt2
 = 1; 
Æt1
 = 1;

262 
Æt1
 = 
Æt2
 = 0;

264 
ch
 = -1;

266 
CALOCK
:

267 i‡(
make
 && 
ˇps_off
) {

268 
ˇp¶ock
 = 1 - capslock;

269 
	`£t_Àds
();

271 
ˇps_off
 = 1 - 
make
;

272 
ch
 = -1;

274 
NLOCK
:

275 i‡(
make
 && 
num_off
) {

276 
numlock
 = 1 -Çumlock;

277 
	`£t_Àds
();

279 
num_off
 = 1 - 
make
;

280 
ch
 = -1;

282 
SLOCK
:

283 i‡(
make
 & 
¶ock_off
) {

284 
¶ock
 = 1 - slock;

285 
	`£t_Àds
();

287 
¶ock_off
 = 1 - 
make
;

288 
ch
 = -1;

290 
EXTKEY
:

291 
esc
 = 1;

294 i‡(!
make
Ë
ch
 = -1;

296 
esc
 = 0;

297 (
ch
);

298 
	}
}

304 
PRIVATE
 
	$£t_Àds
()

308 
Àds
;

310 i‡(!
pc_©
) ;

313 
Àds
 = (
¶ock
 << 0Ë| (
numlock
 << 1Ë| (
ˇp¶ock
 << 2);

315 
	`kb_waô
();

316 
	`out_byã
(
KEYBD
, 
LED_CODE
);

317 
	`kb_ack
();

319 
	`kb_waô
();

320 
	`out_byã
(
KEYBD
, 
Àds
);

321 
	`kb_ack
();

322 
	}
}

328 
PRIVATE
 
	$kb_waô
()

332 
ªåõs
;

334 
ªåõs
 = 
MAX_KB_BUSY_RETRIES
 + 1;

335 --
ªåõs
 !0 && 
	`ö_byã
(
KB_STATUS
Ë& 
KB_BUSY
)

337 (
ªåõs
);

338 
	}
}

344 
PRIVATE
 
	$kb_ack
()

348 
ªåõs
;

350 
ªåõs
 = 
MAX_KB_ACK_RETRIES
 + 1;

351 --
ªåõs
 !0 && 
	`ö_byã
(
KEYBD
Ë!
KB_ACK
)

353 (
ªåõs
);

354 
	}
}

359 
PUBLIC
 
	$kb_öô
(
ç
)

360 
ây_t
 *
ç
;

364 
kb_s
 *
kb
;

367 
ç
->
ây_devªad
 = 
kb_ªad
;

369 
kb
 = 
	`kb_addr
();

372 
kb
->
ihód
 = kb->
ôaû
 = kb->
ibuf
;

375 
ˇps_off
 = 1;

376 
num_off
 = 1;

377 
¶ock_off
 = 1;

378 
esc
 = 0;

380 
	`£t_Àds
();

382 
	`sˇn_keybﬂrd
();

384 
	`put_úq_h™dÀr
(
KEYBOARD_IRQ
, 
kbd_hw_öt
);

385 
	`íabÀ_úq
(
KEYBOARD_IRQ
);

386 
	}
}

392 
PUBLIC
 
	$kbd_lﬂdm≠
(
u£r_phys
)

393 
phys_byãs
 
u£r_phys
;

397 
	`phys_c›y
(
u£r_phys
, 
	`vú2phys
(
keym≠
), (
phys_byãs
) (keymap));

398 (
OK
);

399 
	}
}

405 
PRIVATE
 
	$func_key
(
scode
)

406 
scode
;

410 
code
;

412 
code
 = 
	`m≠_key0
(
scode
);

413 i‡(
code
 < 
F1
 || codê> 
F12
Ë(
FALSE
);

415 
	`m≠_key
(
scode
)) {

417 
F1
: 
	`p_dmp
(); ;

418 
F2
: 
	`m≠_dmp
(); ;

419 
F3
: 
	`toggÀ_s¸ﬁl
(); ;

421 #i‡
ENABLE_NETWORKING


422 
F5
: 
	`dp_dump
(); ;

424 
CF7
: 
	`sigch¨
(&
ây_èbÀ
[
CONSOLE
], 
SIGQUIT
); ;

425 
CF8
: 
	`sigch¨
(&
ây_èbÀ
[
CONSOLE
], 
SIGINT
); ;

426 
CF9
: 
	`sigch¨
(&
ây_èbÀ
[
CONSOLE
], 
SIGKILL
); ;

427 : (
FALSE
);

429 (
TRUE
);

430 
	}
}

436 
PRIVATE
 
	$sˇn_keybﬂrd
()

440 
code
;

441 
vÆ
;

443 
code
 = 
	`ö_byã
(
KEYBD
);

444 
vÆ
 = 
	`ö_byã
(
PORT_B
);

445 
	`out_byã
(
PORT_B
, 
vÆ
 | 
KBIT
);

446 
	`out_byã
(
PORT_B
, 
vÆ
);

447  
code
;

448 
	}
}

454 
PUBLIC
 
	$wªboŸ
(
how
)

455 
how
;

459 
quõt
, 
code
;

460 
u16_t
 
magic
 = 
MEMCHECK_MAG
;

461 
èskèb
 *
âp
;

464 
	`out_byã
(
INT_CTLMASK
, ~0);

467 
	`c⁄s_°›
();

468 #i‡
ENABLE_NETWORKING


469 
	`dp8390_°›
();

471 
	`Ê›py_°›
();

472 
	`˛ock_°›
();

474 i‡(
how
 =
RBT_HALT
) {

475 
	`¥ötf
("System Halted\n");

476 i‡(!
m⁄_ªtu∫
Ë
how
 = 
RBT_PANIC
;

479 i‡(
how
 =
RBT_PANIC
) {

481 
	`¥ötf
("Hit ESCÅoÑeboot, F-keys for debug dumps\n");

483 (Ë
	`sˇn_keybﬂrd
();

484 
quõt
 = 
	`sˇn_keybﬂrd
();

486 
	`mûli_dñay
(100);

487 
code
 = 
	`sˇn_keybﬂrd
();

488 i‡(
code
 !
quõt
) {

490 i‡(
code
 =
ESC_SCAN
) ;

491 (Ë
	`func_key
(
code
);

492 
quõt
 = 
	`sˇn_keybﬂrd
();

495 
how
 = 
RBT_REBOOT
;

498 i‡(
how
 =
RBT_REBOOT
Ë
	`¥ötf
("Rebooting\n");

500 i‡(
m⁄_ªtu∫
 && 
how
 !
RBT_RESET
) {

502 
	`öå_öô
(0);

503 
	`out_byã
(
INT_CTLMASK
, 0);

504 
	`out_byã
(
INT2_CTLMASK
, 0);

507 i‡(
how
 =
RBT_HALT
) {

508 
ªboŸ_code
 = 
	`vú2phys
("");

510 i‡(
how
 =
RBT_REBOOT
) {

511 
ªboŸ_code
 = 
	`vú2phys
("delay;boot");

513 
	`Àvñ0
(
m⁄ô‹
);

517 
	`phys_c›y
(
	`vú2phys
(&
magic
), (
phys_byãs
Ë
MEMCHECK_ADR
,

518 (
phys_byãs
Ë(
magic
));

520 i‡(
¥Ÿe˘ed_mode
) {

529 
	`kb_waô
();

530 
	`out_byã
(
KB_COMMAND
,

531 
KB_PULSE_OUTPUT
 | (0x0F & ~(
KB_GATE_A20
 | 
KB_RESET
)));

532 
	`mûli_dñay
(10);

537 
	`¥ötf
("HardÑeset...\n");

538 
	`mûli_dñay
(250);

541 
	`Àvñ0
(
ª£t
);

542 
	}
}

	@labs.c

7 
	~<°dlib.h
>

10 
	$œbs
(
l
)

12  
l
 >= 0 ?Ü : -l;

13 
	}
}

	@ldexp.c

7 
	~<m©h.h
>

8 
	~<Êﬂt.h
>

9 
	~<î∫o.h
>

12 
	$ldexp
(
Ê
, 
exp
)

14 
sign
 = 1;

15 
cuºexp
;

17 i‡(
	`__IsN™
(
Ê
)) {

18 
î∫o
 = 
EDOM
;

19  
Ê
;

21 i‡(
Ê
 == 0.0)  0.0;

22 i‡(
Ê
<0) {

23 
Ê
 = -fl;

24 
sign
 = -1;

26 i‡(
Ê
 > 
DBL_MAX
) {

27 
î∫o
 = 
ERANGE
;

28  
sign
 * 
Ê
;

30 
Ê
 = 
	`‰exp
(Ê,&
cuºexp
);

31 
exp
 +
cuºexp
;

32 i‡(
exp
 > 0) {

33 i‡(
exp
 > 
DBL_MAX_EXP
) {

34 
î∫o
 = 
ERANGE
;

35  
sign
 * 
HUGE_VAL
;

37 
exp
>30) {

38 
Ê
 *= () (1L << 30);

39 
exp
 -= 30;

41 
Ê
 *(Ë(1L << 
exp
);

45 i‡(
exp
 < 
DBL_MIN_EXP
 - 
DBL_MANT_DIG
) {

48 
exp
<-30) {

49 
Ê
 /= () (1L << 30);

50 
exp
 += 30;

52 
Ê
 /(Ë(1L << -
exp
);

54  
sign
 * 
Ê
;

55 
	}
}

	@ldiv.c

7 
	~<°dlib.h
>

9 
	gtmp
 = -1;

11 
ldiv_t


12 
	$ldiv
(
numî
, 
díom
)

14 
ldiv_t
 
r
;

17 i‡(
tmp
 == -1) {

18 
tmp
 = (tmp / 2 == 0);

20 i‡(
numî
 == 0) {

21 
r
.
quŸ
 = 
numî
 / 
díom
;

22 
r
.
ªm
 = 
numî
 % 
díom
;

23 } i‡–!
tmp
 && ((
numî
 < 0Ë!(
díom
 < 0))) {

24 
r
.
quŸ
 = (
numî
 / 
díom
) + 1;

25 
r
.
ªm
 = 
numî
 - (numî / 
díom
 + 1) * denom;

27 
r
.
quŸ
 = 
numî
 / 
díom
;

28 
r
.
ªm
 = 
numî
 % 
díom
;

30  
r
;

31 
	}
}

	@link.c

12 
	~"fs.h
"

13 
	~<sys/°©.h
>

14 
	~<°rög.h
>

15 
	~<möix/ˇŒƒ.h
>

16 
	~"buf.h
"

17 
	~"fûe.h
"

18 
	~"Âroc.h
"

19 
	~"öode.h
"

20 
	~"∑øm.h
"

21 
	~"su≥r.h
"

23 
	#SAME
 1000

	)

25 
FORWARD
 
_PROTOTYPE
–
ªmove_dú
, (
öode
 *
ædúp
, öodê*
rù
,

26 
dú_«me
[
NAME_MAX
]) );

28 
FORWARD
 
_PROTOTYPE
–
u∆ök_fûe
, (
öode
 *
dúp
, öodê*
rù
,

29 
fûe_«me
[
NAME_MAX
]) );

35 
PUBLIC
 
	$do_lök
()

39 
öode
 *
ù
, *
rù
;

40 
r
;

41 
°rög
[
NAME_MAX
];

42 
öode
 *
√w_ù
;

45 i‡(
	`„tch_«me
(
«me1
, 
«me1_Àngth
, 
M1
Ë!
OK
Ë(
îr_code
);

46 i‡–(
rù
 = 
	`ót_∑th
(
u£r_∑th
)Ë=
NIL_INODE
Ë(
îr_code
);

49 
r
 = 
OK
;

50 i‡–(
rù
->
i_∆öks
 & 
BYTE
Ë>
LINK_MAX
Ë
r
 = 
EMLINK
;

53 i‡(
r
 =
OK
)

54 i‡–(
rù
->
i_mode
 & 
I_TYPE
Ë=
I_DIRECTORY
 && !
su≥r_u£r
Ë
r
 = 
EPERM
;

57 i‡(
r
 !
OK
) {

58 
	`put_öode
(
rù
);

59 (
r
);

63 i‡(
	`„tch_«me
(
«me2
, 
«me2_Àngth
, 
M1
Ë!
OK
) {

64 
	`put_öode
(
rù
);

65 (
îr_code
);

67 i‡–(
ù
 = 
	`œ°_dú
(
u£r_∑th
, 
°rög
)Ë=
NIL_INODE
Ë
r
 = 
îr_code
;

70 i‡(
r
 =
OK
) {

71 i‡–(
√w_ù
 = 
	`adv™˚
(
ù
, 
°rög
)Ë=
NIL_INODE
) {

72 
r
 = 
îr_code
;

73 i‡(
r
 =
ENOENT
Ë∏
OK
;

75 
	`put_öode
(
√w_ù
);

76 
r
 = 
EEXIST
;

81 i‡(
r
 =
OK
)

82 i‡(
rù
->
i_dev
 !
ù
->i_devË
r
 = 
EXDEV
;

85 i‡(
r
 =
OK
)

86 
r
 = 
	`£¨ch_dú
(
ù
, 
°rög
, &
rù
->
i_num
, 
ENTER
);

89 i‡(
r
 =
OK
) {

90 
rù
->
i_∆öks
++;

91 
rù
->
i_upd©e
 |
CTIME
;

92 
rù
->
i_dút
 = 
DIRTY
;

96 
	`put_öode
(
rù
);

97 
	`put_öode
(
ù
);

98 (
r
);

99 
	}
}

105 
PUBLIC
 
	$do_u∆ök
()

112 
öode
 *
rù
;

113 
öode
 *
ædúp
;

114 
r
;

115 
°rög
[
NAME_MAX
];

118 i‡(
	`„tch_«me
(
«me
, 
«me_Àngth
, 
M3
Ë!
OK
Ë(
îr_code
);

119 i‡–(
ædúp
 = 
	`œ°_dú
(
u£r_∑th
, 
°rög
)Ë=
NIL_INODE
)

120 (
îr_code
);

123 
r
 = 
OK
;

124 i‡–(
rù
 = 
	`adv™˚
(
ædúp
, 
°rög
)Ë=
NIL_INODE
Ë
r
 = 
îr_code
;

127 i‡(
r
 !
OK
) {

128 
	`put_öode
(
ædúp
);

129 (
r
);

133 i‡(
rù
->
i_num
 =
ROOT_INODE
) {

134 
	`put_öode
(
ædúp
);

135 
	`put_öode
(
rù
);

136 (
EBUSY
);

140 i‡(
fs_ˇŒ
 =
UNLINK
) {

142 i‡–(
rù
->
i_mode
 & 
I_TYPE
Ë=
I_DIRECTORY
 && !
su≥r_u£r
Ë
r
 = 
EPERM
;

145 i‡(
rù
->
i_num
 =
ROOT_INODE
Ë
r
 = 
EBUSY
;

148 i‡(
r
 =
OK
Ë∏
	`u∆ök_fûe
(
ædúp
, 
rù
, 
°rög
);

151 
r
 = 
	`ªmove_dú
(
ædúp
, 
rù
, 
°rög
);

155 
	`put_öode
(
rù
);

156 
	`put_öode
(
ædúp
);

157 (
r
);

158 
	}
}

164 
PUBLIC
 
	$do_ª«me
()

168 
öode
 *
ﬁd_dúp
, *
ﬁd_ù
;

169 
öode
 *
√w_dúp
, *
√w_ù
;

170 
öode
 *
√w_su≥rdúp
, *
√xt_√w_su≥rdúp
;

171 
r
 = 
OK
;

172 
odú
, 
ndú
;

173 
ßme_pdú
;

174 
ﬁd_«me
[
NAME_MAX
], 
√w_«me
[NAME_MAX];

175 
öo_t
 
numb
;

176 
r1
;

179 i‡(
	`„tch_«me
(
«me1
, 
«me1_Àngth
, 
M1
Ë!
OK
Ë(
îr_code
);

180 i‡–(
ﬁd_dúp
 = 
	`œ°_dú
(
u£r_∑th
, 
ﬁd_«me
))==
NIL_INODE
Ë(
îr_code
);

182 i‡–(
ﬁd_ù
 = 
	`adv™˚
(
ﬁd_dúp
, 
ﬁd_«me
)Ë=
NIL_INODE
Ë
r
 = 
îr_code
;

185 i‡(
	`„tch_«me
(
«me2
, 
«me2_Àngth
, 
M1
Ë!
OK
Ë
r
 = 
îr_code
;

186 i‡–(
√w_dúp
 = 
	`œ°_dú
(
u£r_∑th
, 
√w_«me
)Ë=
NIL_INODE
Ë
r
 = 
îr_code
;

187 
√w_ù
 = 
	`adv™˚
(
√w_dúp
, 
√w_«me
);

189 i‡(
ﬁd_ù
 !
NIL_INODE
)

190 
odú
 = ((
ﬁd_ù
->
i_mode
 & 
I_TYPE
Ë=
I_DIRECTORY
);

193 i‡(
r
 =
OK
) {

194 
ßme_pdú
 = (
ﬁd_dúp
 =
√w_dúp
);

197 i‡(
odú
 && !
ßme_pdú
) {

198 
	`dup_öode
(
√w_su≥rdúp
 = 
√w_dúp
);

199 
TRUE
) {

200 i‡(
√w_su≥rdúp
 =
ﬁd_ù
) {

201 
r
 = 
EINVAL
;

204 
√xt_√w_su≥rdúp
 = 
	`adv™˚
(
√w_su≥rdúp
, 
dŸ2
);

205 
	`put_öode
(
√w_su≥rdúp
);

206 i‡(
√xt_√w_su≥rdúp
 =
√w_su≥rdúp
)

208 
√w_su≥rdúp
 = 
√xt_√w_su≥rdúp
;

209 i‡(
√w_su≥rdúp
 =
NIL_INODE
) {

211 
r
 = 
EINVAL
;

215 
	`put_öode
(
√w_su≥rdúp
);

219 i‡(
	`°rcmp
(
ﬁd_«me
, ".")==0 || strcmp(old_name, "..")==0 ||

220 
	`°rcmp
(
√w_«me
, ".")==0 || såcmp“ew_«me, "..")==0Ë
r
 = 
EINVAL
;

223 i‡(
ﬁd_dúp
->
i_dev
 !
√w_dúp
->i_devË
r
 = 
EXDEV
;

226 i‡((
r1
 = 
	`f‹biddí
(
ﬁd_dúp
, 
W_BIT
 | 
X_BIT
)Ë!
OK
 ||

227 (
r1
 = 
	`f‹biddí
(
√w_dúp
, 
W_BIT
 | 
X_BIT
)Ë!
OK
Ë
r
 =Ñ1;

230 i‡(
√w_ù
 =
NIL_INODE
) {

232 i‡(
ﬁd_ù
->
i_dev
 !
ﬁd_dúp
->i_devË
r
 = 
EXDEV
;

233 i‡(
odú
 && (
√w_dúp
->
i_∆öks
 & 
BYTE
Ë>
LINK_MAX
 &&

234 !
ßme_pdú
 && 
r
 =
OK
Ë∏
EMLINK
;

236 i‡(
ﬁd_ù
 =
√w_ù
Ë
r
 = 
SAME
;

239 i‡(
ﬁd_ù
->
i_dev
 !
√w_ù
->i_devË
r
 = 
EXDEV
;

241 
ndú
 = ((
√w_ù
->
i_mode
 & 
I_TYPE
Ë=
I_DIRECTORY
);

242 i‡(
odú
 =
TRUE
 && 
ndú
 =
FALSE
Ë
r
 = 
ENOTDIR
;

243 i‡(
odú
 =
FALSE
 && 
ndú
 =
TRUE
Ë
r
 = 
EISDIR
;

260 i‡(
r
 =
OK
) {

261 i‡(
√w_ù
 !
NIL_INODE
) {

263 i‡(
odú
)

264 
r
 = 
	`ªmove_dú
(
√w_dúp
, 
√w_ù
, 
√w_«me
);

266 
r
 = 
	`u∆ök_fûe
(
√w_dúp
, 
√w_ù
, 
√w_«me
);

273 i‡(
r
 =
OK
) {

279 
numb
 = 
ﬁd_ù
->
i_num
;

281 i‡(
ßme_pdú
) {

282 
r
 = 
	`£¨ch_dú
(
ﬁd_dúp
, 
ﬁd_«me
, (
öo_t
 *Ë0, 
DELETE
);

284 i‡(
r
==
OK
Ë(Ë
	`£¨ch_dú
(
ﬁd_dúp
, 
√w_«me
, &
numb
, 
ENTER
);

286 
r
 = 
	`£¨ch_dú
(
√w_dúp
, 
√w_«me
, &
numb
, 
ENTER
);

287 i‡(
r
 =
OK
)

288 (Ë
	`£¨ch_dú
(
ﬁd_dúp
, 
ﬁd_«me
, (
öo_t
 *Ë0, 
DELETE
);

295 i‡(
r
 =
OK
 && 
odú
 && !
ßme_pdú
) {

297 
numb
 = 
√w_dúp
->
i_num
;

298 (Ë
	`u∆ök_fûe
(
ﬁd_ù
, 
NIL_INODE
, 
dŸ2
);

299 i‡(
	`£¨ch_dú
(
ﬁd_ù
, 
dŸ2
, &
numb
, 
ENTER
Ë=
OK
) {

301 
√w_dúp
->
i_∆öks
++;

302 
√w_dúp
->
i_dút
 = 
DIRTY
;

307 
	`put_öode
(
ﬁd_dúp
);

308 
	`put_öode
(
ﬁd_ù
);

309 
	`put_öode
(
√w_dúp
);

310 
	`put_öode
(
√w_ù
);

311 (
r
 =
SAME
 ? 
OK
 :Ñ);

312 
	}
}

318 
PUBLIC
 
	$åunˇã
(
rù
)

319 
öode
 *
rù
;

323 
block_t
 
b
;

324 
z⁄e_t
 
z
, 
z⁄e_size
, 
z1
;

325 
off_t
 
posôi⁄
;

326 
i
, 
sˇÀ
, 
fûe_ty≥
, 
wa•ùe
, 
sögÀ
, 
ƒ_ödúe˘s
;

327 
buf
 *
bp
;

328 
dev_t
 
dev
;

330 
fûe_ty≥
 = 
rù
->
i_mode
 & 
I_TYPE
;

331 i‡(
fûe_ty≥
 =
I_CHAR_SPECIAL
 || fûe_ty≥ =
I_BLOCK_SPECIAL
) ;

332 
dev
 = 
rù
->
i_dev
;

333 
sˇÀ
 = 
rù
->
i_•
->
s_log_z⁄e_size
;

334 
z⁄e_size
 = (
z⁄e_t
Ë
BLOCK_SIZE
 << 
sˇÀ
;

335 
ƒ_ödúe˘s
 = 
rù
->
i_nödús
;

338 
wa•ùe
 = 
rù
->
i_pùe
 =
I_PIPE
;

339 i‡(
wa•ùe
Ë
rù
->
i_size
 = 
PIPE_SIZE
;

342 
posôi⁄
 = 0;Öosôi⁄ < 
rù
->
i_size
;Öosôi⁄ +
z⁄e_size
) {

343 i‡–(
b
 = 
	`ªad_m≠
(
rù
, 
posôi⁄
)Ë!
NO_BLOCK
) {

344 
z
 = (
z⁄e_t
Ë
b
 >> 
sˇÀ
;

345 
	`‰ì_z⁄e
(
dev
, 
z
);

350 
rù
->
i_dút
 = 
DIRTY
;

351 i‡(
wa•ùe
) {

352 
	`wùe_öode
(
rù
);

355 
sögÀ
 = 
rù
->
i_ndz⁄es
;

356 
	`‰ì_z⁄e
(
dev
, 
rù
->
i_z⁄e
[
sögÀ
]);

357 i‡–(
z
 = 
rù
->
i_z⁄e
[
sögÀ
+1]Ë!
NO_ZONE
) {

359 
b
 = (
block_t
Ë
z
 << 
sˇÀ
;

360 
bp
 = 
	`gë_block
(
dev
, 
b
, 
NORMAL
);

361 
i
 = 0; i < 
ƒ_ödúe˘s
; i++) {

362 
z1
 = 
	`rd_ödú
(
bp
, 
i
);

363 
	`‰ì_z⁄e
(
dev
, 
z1
);

367 
	`put_block
(
bp
, 
INDIRECT_BLOCK
);

368 
	`‰ì_z⁄e
(
dev
, 
z
);

372 
	}
}

378 
PRIVATE
 
	$ªmove_dú
(
ædúp
, 
rù
, 
dú_«me
)

379 
öode
 *
ædúp
;

380 
öode
 *
rù
;

381 
dú_«me
[
NAME_MAX
];

391 
r
;

392 
Âroc
 *
rÂ
;

395 i‡((
r
 = 
	`£¨ch_dú
(
rù
, "", (
öo_t
 *Ë0, 
IS_EMPTY
)Ë!
OK
) Ñ;

397 i‡(
	`°rcmp
(
dú_«me
, "."Ë=0 || såcmp(dú_«me, ".."Ë=0)(
EINVAL
);

398 i‡(
rù
->
i_num
 =
ROOT_INODE
Ë(
EBUSY
);

400 
rÂ
 = &
Âroc
[
INIT_PROC_NR
 + 1];ÑÂ < &Âroc[
NR_PROCS
];Ñfp++)

401 i‡(
rÂ
->
Â_w‹kdú
 =
rù
 ||ÑÂ->
Â_roŸdú
 =rùË(
EBUSY
);

405 i‡((
r
 = 
	`u∆ök_fûe
(
ædúp
, 
rù
, 
dú_«me
)Ë!
OK
) Ñ;

410 (Ë
	`u∆ök_fûe
(
rù
, 
NIL_INODE
, 
dŸ1
);

411 (Ë
	`u∆ök_fûe
(
rù
, 
NIL_INODE
, 
dŸ2
);

412 (
OK
);

413 
	}
}

419 
PRIVATE
 
	$u∆ök_fûe
(
dúp
, 
rù
, 
fûe_«me
)

420 
öode
 *
dúp
;

421 
öode
 *
rù
;

422 
fûe_«me
[
NAME_MAX
];

426 
öo_t
 
numb
;

427 
r
;

430 i‡(
rù
 =
NIL_INODE
) {

432 
îr_code
 = 
	`£¨ch_dú
(
dúp
, 
fûe_«me
, &
numb
, 
LOOK_UP
);

433 i‡(
îr_code
 =
OK
Ë
rù
 = 
	`gë_öode
(
dúp
->
i_dev
, (Ë
numb
);

434 i‡(
îr_code
 !
OK
 || 
rù
 =
NIL_INODE
) (err_code);

436 
	`dup_öode
(
rù
);

439 
r
 = 
	`£¨ch_dú
(
dúp
, 
fûe_«me
, (
öo_t
 *Ë0, 
DELETE
);

441 i‡(
r
 =
OK
) {

442 
rù
->
i_∆öks
--;

443 
rù
->
i_upd©e
 |
CTIME
;

444 
rù
->
i_dút
 = 
DIRTY
;

447 
	`put_öode
(
rù
);

448 (
r
);

449 
	}
}

	@loadname.c

1 
	~<lib.h
>

2 
	~<°rög.h
>

4 
PUBLIC
 
	$_lﬂd«me
(
«me
, 
msg±r
)

5 
_CONST
 *
«me
;

6 
mesßge
 *
msg±r
;

13 
size_t
 
k
;

15 
k
 = 
	`°æí
(
«me
) + 1;

16 
msg±r
->
m3_i1
 = 
k
;

17 
msg±r
->
m3_p1
 = (*Ë
«me
;

18 i‡(
k
 < 
msg±r
->
m3_ˇ1
Ë
	`°r˝y
(msg±r->m3_ˇ1, 
«me
);

19 
	}
}

	@loc_incl.h

6 
	~<°dio.h
>

8 
	#io_ã°Êag
(
p
,
x
Ë(’)->
_Êags
 & (x))

	)

10 
	~<°d¨g.h
>

12 #ifde‡
_ANSI


13 
_d›∫t
(c⁄° *
f‹m©
, 
va_li°
 
≠
, 
FILE
 *
°ªam
);

14 
_dosˇn
(
FILE
 * 
°ªam
, c⁄° *
f‹m©
, 
va_li°
 
≠
);

15 *
_i_compuã
(
vÆ
, 
ba£
, *
s
, 
ƒdigôs
);

16 *
_f_¥öt
(
va_li°
 *
≠
, 
Êags
, *
s
, 
c
, 
¥ecisi⁄
);

17 
__˛ónup
();

19 
FILE
 *
p›í
(c⁄° *
comm™d
, c⁄° *
ty≥
);

20 
FILE
 *
fd›í
(
fd
, c⁄° *
mode
);

22 #i‚def 
NOFLOAT


23 *
_ecvt
(
vÆue
, 
ndigô
, *
de˝t
, *
sign
);

24 *
_fcvt
(
vÆue
, 
ndigô
, *
de˝t
, *
sign
);

28 
	#FL_LJUST
 0x0001

	)

29 
	#FL_SIGN
 0x0002

	)

30 
	#FL_SPACE
 0x0004

	)

31 
	#FL_ALT
 0x0008

	)

32 
	#FL_ZEROFILL
 0x0010

	)

33 
	#FL_SHORT
 0x0020

	)

34 
	#FL_LONG
 0x0040

	)

35 
	#FL_LONGDOUBLE
 0x0080

	)

36 
	#FL_WIDTHSPEC
 0x0100

	)

37 
	#FL_PRECSPEC
 0x0200

	)

38 
	#FL_SIGNEDCONV
 0x0400

	)

39 
	#FL_NOASSIGN
 0x0800

	)

40 
	#FL_NOMORE
 0x1000

	)

	@loc_time.h

6 
	#YEAR0
 1900

	)

7 
	#EPOCH_YR
 1970

	)

8 
	#SECS_DAY
 (24L * 60L * 60L)

	)

9 
	#LEAPYEAR
(
yór
Ë(!((yórË% 4Ë&& (((yórË% 100Ë|| !((yórË% 400)))

	)

10 
	#YEARSIZE
(
yór
Ë(
	`LEAPYEAR
(yórË? 366 : 365)

	)

11 
	#FIRSTSUNDAY
(
timp
Ë((—imp)->
tm_yday
 - (timp)->
tm_wday
 + 420Ë% 7)

	)

12 
	#FIRSTDAYOF
(
timp
Ë((—imp)->
tm_wday
 - (timp)->
tm_yday
 + 420Ë% 7)

	)

13 
	#TIME_MAX
 
ULONG_MAX


	)

14 
	#ABB_LEN
 3

	)

16 c⁄° 
_yèb
[2][12];

17 c⁄° *
_days
[];

18 c⁄° *
_m⁄ths
[];

20 
_tz£t
();

21 
_d°gë
(
tm
 *
timï
);

23 
_timez⁄e
;

24 
_d°_off
;

25 
_daylight
;

26 *
_tz«me
[2];

	@localeconv.c

6 
	~<limôs.h
>

7 
	~<loˇÀ.h
>

9 
lc⁄v
 
_lc
;

11 
lc⁄v
 *

12 
	$loˇÀc⁄v
()

14 
lc⁄v
 *
l˝
 = &
_lc
;

16 
l˝
->
decimÆ_poöt
 = ".";

17 
l˝
->
thoußnds_£p
 = "";

18 
l˝
->
groupög
 = "";

19 
l˝
->
öt_cuº_symbﬁ
 = "";

20 
l˝
->
cuºícy_symbﬁ
 = "";

21 
l˝
->
m⁄_decimÆ_poöt
 = "";

22 
l˝
->
m⁄_thoußnds_£p
 = "";

23 
l˝
->
m⁄_groupög
 = "";

24 
l˝
->
posôive_sign
 = "";

25 
l˝
->
√g©ive_sign
 = "";

26 
l˝
->
öt_‰ac_digôs
 = 
CHAR_MAX
;

27 
l˝
->
‰ac_digôs
 = 
CHAR_MAX
;

28 
l˝
->
p_cs_¥e˚des
 = 
CHAR_MAX
;

29 
l˝
->
p_£p_by_•a˚
 = 
CHAR_MAX
;

30 
l˝
->
n_cs_¥e˚des
 = 
CHAR_MAX
;

31 
l˝
->
n_£p_by_•a˚
 = 
CHAR_MAX
;

32 
l˝
->
p_sign_po¢
 = 
CHAR_MAX
;

33 
l˝
->
n_sign_po¢
 = 
CHAR_MAX
;

35  
l˝
;

36 
	}
}

	@localmath.h

7 
	#M_PI
 3.14159265358979323846264338327950288

	)

8 
	#M_2PI
 6.28318530717958647692528676655900576

	)

9 
	#M_3PI_4
 2.35619449019234492884698253745962716

	)

10 
	#M_PI_2
 1.57079632679489661923132169163975144

	)

11 
	#M_3PI_8
 1.17809724509617246442349126872981358

	)

12 
	#M_PI_4
 0.78539816339744830961566084581987572

	)

13 
	#M_PI_8
 0.39269908169872415480783042290993786

	)

14 
	#M_1_PI
 0.31830988618379067153776752674502872

	)

15 
	#M_2_PI
 0.63661977236758134307553505349005744

	)

16 
	#M_4_PI
 1.27323954473516268615107010698011488

	)

17 
	#M_E
 2.71828182845904523536028747135266250

	)

18 
	#M_LOG2E
 1.44269504088896340735992468100189213

	)

19 
	#M_LOG10E
 0.43429448190325182765112891891660508

	)

20 
	#M_LN2
 0.69314718055994530941723212145817657

	)

21 
	#M_LN10
 2.30258509299404568401799145468436421

	)

22 
	#M_SQRT2
 1.41421356237309504880168872420969808

	)

23 
	#M_1_SQRT2
 0.70710678118654752440084436210484904

	)

24 
	#M_EULER
 0.57721566490153286060651209008240243

	)

27 
	#POLYNOM1
(
x
, 
a
Ë(◊)[1]*(x)+◊)[0])

	)

28 
	#POLYNOM2
(
x
, 
a
Ë(
	`POLYNOM1
((x),◊)+1)*(x)+◊)[0])

	)

29 
	#POLYNOM3
(
x
, 
a
Ë(
	`POLYNOM2
((x),◊)+1)*(x)+◊)[0])

	)

30 
	#POLYNOM4
(
x
, 
a
Ë(
	`POLYNOM3
((x),◊)+1)*(x)+◊)[0])

	)

31 
	#POLYNOM5
(
x
, 
a
Ë(
	`POLYNOM4
((x),◊)+1)*(x)+◊)[0])

	)

32 
	#POLYNOM6
(
x
, 
a
Ë(
	`POLYNOM5
((x),◊)+1)*(x)+◊)[0])

	)

33 
	#POLYNOM7
(
x
, 
a
Ë(
	`POLYNOM6
((x),◊)+1)*(x)+◊)[0])

	)

34 
	#POLYNOM8
(
x
, 
a
Ë(
	`POLYNOM7
((x),◊)+1)*(x)+◊)[0])

	)

35 
	#POLYNOM9
(
x
, 
a
Ë(
	`POLYNOM8
((x),◊)+1)*(x)+◊)[0])

	)

36 
	#POLYNOM10
(
x
, 
a
Ë(
	`POLYNOM9
((x),◊)+1)*(x)+◊)[0])

	)

37 
	#POLYNOM11
(
x
, 
a
Ë(
	`POLYNOM10
((x),◊)+1)*(x)+◊)[0])

	)

38 
	#POLYNOM12
(
x
, 
a
Ë(
	`POLYNOM11
((x),◊)+1)*(x)+◊)[0])

	)

39 
	#POLYNOM13
(
x
, 
a
Ë(
	`POLYNOM12
((x),◊)+1)*(x)+◊)[0])

	)

41 
	#M_LN_MAX_D
 (
M_LN2
 * 
DBL_MAX_EXP
)

	)

42 
	#M_LN_MIN_D
 (
M_LN2
 * (
DBL_MIN_EXP
 - 1))

	)

	@localtime.c

6 
	~<time.h
>

7 
	~"loc_time.h
"

15 
tm
 *

16 
	$loˇ…ime
(c⁄° 
time_t
 *
timî
)

18 
tm
 *
timï
;

19 
d°
;

21 
	`_tz£t
();

22 
timï
 = 
	`gmtime
(
timî
);

23 
timï
->
tm_mö
 -
_timez⁄e
 / 60;

24 
timï
->
tm_£c
 -
_timez⁄e
 % 60;

25 
	`mktime
(
timï
);

27 
d°
 = 
	`_d°gë
(
timï
);

28 i‡(
d°
) {

29 
timï
->
tm_mö
 +
d°
 / 60;

30 
timï
->
tm_£c
 +
d°
 % 60;

31 
	`mktime
(
timï
);

33  
timï
;

34 
	}
}

	@lock.c

8 
	~"fs.h
"

9 
	~<f˙é.h
>

10 
	~<uni°d.h
>

11 
	~"fûe.h
"

12 
	~"Âroc.h
"

13 
	~"öode.h
"

14 
	~"lock.h
"

15 
	~"∑øm.h
"

20 
PUBLIC
 
	$lock_›
(
f
, 
ªq
)

21 
fûp
 *
f
;

22 
ªq
;

26 
r
, 
…y≥
, 
i
, 
c⁄Êi˘
 = 0, 
u∆ockög
 = 0;

27 
mode_t
 
mo
;

28 
off_t
 
fú°
, 
œ°
;

29 
Êock
 flock;

30 
vú_byãs
 
u£r_Êock
;

31 
fûe_lock
 *
Êp
, *
Êp2
, *
em±y
;

34 
u£r_Êock
 = (
vú_byãs
Ë
«me1
;

35 
r
 = 
	`sys_c›y
(
who
, 
D
, (
phys_byãs
Ë
u£r_Êock
,

36 
FS_PROC_NR
, 
D
, (
phys_byãs
Ë&
Êock
, (phys_bytes) (flock));

37 i‡(
r
 !
OK
Ë(
EINVAL
);

40 
…y≥
 = 
Êock
.
l_ty≥
;

41 
mo
 = 
f
->
fûp_mode
;

42 i‡(
…y≥
 !
F_UNLCK
 &&Üty≥ !
F_RDLCK
 &&Üty≥ !
F_WRLCK
Ë(
EINVAL
);

43 i‡(
ªq
 =
F_GETLK
 && 
…y≥
 =
F_UNLCK
Ë(
EINVAL
);

44 i‡–(
f
->
fûp_öo
->
i_mode
 & 
I_TYPE
Ë!
I_REGULAR
Ë(
EINVAL
);

45 i‡(
ªq
 !
F_GETLK
 && 
…y≥
 =
F_RDLCK
 && (
mo
 & 
R_BIT
Ë=0Ë(
EBADF
);

46 i‡(
ªq
 !
F_GETLK
 && 
…y≥
 =
F_WRLCK
 && (
mo
 & 
W_BIT
Ë=0Ë(
EBADF
);

49 
Êock
.
l_whí˚
) {

50 
SEEK_SET
: 
fú°
 = 0; ;

51 
SEEK_CUR
: 
fú°
 = 
f
->
fûp_pos
; ;

52 
SEEK_END
: 
fú°
 = 
f
->
fûp_öo
->
i_size
; ;

53 : (
EINVAL
);

56 i‡((()
Êock
.
l_°¨t
 > 0Ë&& ((
fú°
 + flock.l_start) < first))

57 (
EINVAL
);

58 i‡((()
Êock
.
l_°¨t
 < 0Ë&& ((
fú°
 + flock.l_start) > first))

59 (
EINVAL
);

60 
fú°
 = fú° + 
Êock
.
l_°¨t
;

61 
œ°
 = 
fú°
 + 
Êock
.
l_Àn
 - 1;

62 i‡(
Êock
.
l_Àn
 =0Ë
œ°
 = 
MAX_FILE_POS
;

63 i‡(
œ°
 < 
fú°
Ë(
EINVAL
);

66 
em±y
 = (
fûe_lock
 *) 0;

67 
Êp
 = &
fûe_lock
[0]; fÕ < & fûe_lock[
NR_LOCKS
]; flp++) {

68 i‡(
Êp
->
lock_ty≥
 == 0) {

69 i‡(
em±y
 =(
fûe_lock
 *Ë0Ëem±y = 
Êp
;

72 i‡(
Êp
->
lock_öode
 !
f
->
fûp_öo
) ;

73 i‡(
œ°
 < 
Êp
->
lock_fú°
) ;

74 i‡(
fú°
 > 
Êp
->
lock_œ°
) ;

75 i‡(
…y≥
 =
F_RDLCK
 && 
Êp
->
lock_ty≥
 == F_RDLCK) ;

76 i‡(
…y≥
 !
F_UNLCK
 && 
Êp
->
lock_pid
 =
Â
->
Â_pid
) ;

79 
c⁄Êi˘
 = 1;

80 i‡(
ªq
 =
F_GETLK
) ;

83 i‡(
…y≥
 =
F_RDLCK
 ||Üty≥ =
F_WRLCK
) {

84 i‡(
ªq
 =
F_SETLK
) {

86 (
EAGAIN
);

89 
	`su•íd
(
XLOCK
);

95 
u∆ockög
 = 1;

96 i‡(
fú°
 <
Êp
->
lock_fú°
 && 
œ°
 >Êp->
lock_œ°
) {

97 
Êp
->
lock_ty≥
 = 0;

98 
ƒ_locks
--;

103 i‡(
fú°
 <
Êp
->
lock_fú°
) {

104 
Êp
->
lock_fú°
 = 
œ°
 + 1;

108 i‡(
œ°
 >
Êp
->
lock_œ°
) {

109 
Êp
->
lock_œ°
 = 
fú°
 - 1;

114 i‡(
ƒ_locks
 =
NR_LOCKS
Ë(
ENOLCK
);

115 
i
 = 0; i < 
NR_LOCKS
; i++)

116 i‡(
fûe_lock
[
i
].
lock_ty≥
 == 0) ;

117 
Êp2
 = &
fûe_lock
[
i
];

118 
Êp2
->
lock_ty≥
 = 
Êp
->lock_type;

119 
Êp2
->
lock_pid
 = 
Êp
->lock_pid;

120 
Êp2
->
lock_öode
 = 
Êp
->lock_inode;

121 
Êp2
->
lock_fú°
 = 
œ°
 + 1;

122 
Êp2
->
lock_œ°
 = 
Êp
->lock_last;

123 
Êp
->
lock_œ°
 = 
fú°
 - 1;

124 
ƒ_locks
++;

126 i‡(
u∆ockög
Ë
	`lock_ªvive
();

128 i‡(
ªq
 =
F_GETLK
) {

129 i‡(
c⁄Êi˘
) {

131 
Êock
.
l_ty≥
 = 
Êp
->
lock_ty≥
;

132 
Êock
.
l_whí˚
 = 
SEEK_SET
;

133 
Êock
.
l_°¨t
 = 
Êp
->
lock_fú°
;

134 
Êock
.
l_Àn
 = 
Êp
->
lock_œ°
 - fÕ->
lock_fú°
 + 1;

135 
Êock
.
l_pid
 = 
Êp
->
lock_pid
;

139 
Êock
.
l_ty≥
 = 
F_UNLCK
;

143 
r
 = 
	`sys_c›y
(
FS_PROC_NR
, 
D
, (
phys_byãs
Ë&
Êock
,

144 
who
, 
D
, (
phys_byãs
Ë
u£r_Êock
, (phys_byãsË(
Êock
));

145 (
r
);

148 i‡(
…y≥
 =
F_UNLCK
Ë(
OK
);

151 i‡(
em±y
 =(
fûe_lock
 *Ë0Ë(
ENOLCK
);

152 
em±y
->
lock_ty≥
 = 
…y≥
;

153 
em±y
->
lock_pid
 = 
Â
->
Â_pid
;

154 
em±y
->
lock_öode
 = 
f
->
fûp_öo
;

155 
em±y
->
lock_fú°
 = 
fú°
;

156 
em±y
->
lock_œ°
 = 
œ°
;

157 
ƒ_locks
++;

158 (
OK
);

159 
	}
}

164 
PUBLIC
 
	$lock_ªvive
()

175 
èsk
;

176 
Âroc
 *
Âå
;

178 
Âå
 = &
Âroc
[
INIT_PROC_NR
 + 1]; f±∏< &Âroc[
NR_PROCS
]; fptr++){

179 
èsk
 = -
Âå
->
Â_èsk
;

180 i‡(
Âå
->
Â_su•íded
 =
SUSPENDED
 && 
èsk
 =
XLOCK
) {

181 
	`ªvive
–(Ë(
Âå
 - 
Âroc
), 0);

184 
	}
}

	@lock.h

4 
EXTERN
 
	sfûe_lock
 {

5 
	mlock_ty≥
;

6 
pid_t
 
	mlock_pid
;

7 
öode
 *
	mlock_öode
;

8 
off_t
 
	mlock_fú°
;

9 
off_t
 
	mlock_œ°
;

10 } 
	gfûe_lock
[
NR_LOCKS
];

	@log.c

9 
	~<m©h.h
>

10 
	~<Êﬂt.h
>

11 
	~<î∫o.h
>

12 
	~"loˇlm©h.h
"

15 
	$log
(
x
)

21 
a
[] = {

26 
b
[] = {

33 
znum
, 
zdí
, 
z
, 
w
;

34 
exp⁄ít
;

36 i‡(
	`__IsN™
(
x
)) {

37 
î∫o
 = 
EDOM
;

38  
x
;

40 i‡(
x
 < 0) {

41 
î∫o
 = 
EDOM
;

42  -
HUGE_VAL
;

44 i‡(
x
 == 0) {

45 
î∫o
 = 
ERANGE
;

46  -
HUGE_VAL
;

49 i‡(
x
 <
DBL_MAX
) {

51  
x
;

52 
x
 = 
	`‰exp
(x, &
exp⁄ít
);

53 i‡(
x
 > 
M_1_SQRT2
) {

54 
znum
 = (
x
 - 0.5) - 0.5;

55 
zdí
 = 
x
 * 0.5 + 0.5;

58 
znum
 = 
x
 - 0.5;

59 
zdí
 = 
znum
 * 0.5 + 0.5;

60 
exp⁄ít
--;

62 
z
 = 
znum
/
zdí
; 
w
 = z * z;

63 
x
 = 
z
 + z * 
w
 * (
	`POLYNOM2
(w,
a
)/
	`POLYNOM3
(w,
b
));

64 
z
 = 
exp⁄ít
;

65 
x
 +
z
 * (-2.121944400546905827679e-4);

66  
x
 + 
z
 * 0.693359375;

67 
	}
}

	@log10.c

9 
	~<m©h.h
>

10 
	~<î∫o.h
>

11 
	~"loˇlm©h.h
"

14 
	$log10
(
x
)

16 i‡(
	`__IsN™
(
x
)) {

17 
î∫o
 = 
EDOM
;

18  
x
;

20 i‡(
x
 < 0) {

21 
î∫o
 = 
EDOM
;

22  -
HUGE_VAL
;

24 i‡(
x
 == 0) {

25 
î∫o
 = 
ERANGE
;

26  -
HUGE_VAL
;

29  
	`log
(
x
Ë/ 
M_LN10
;

30 
	}
}

	@longname.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

9 *
	$l⁄g«me
()

12 
	}
}

	@lrand.c

23 
	~<lib.h
>

25 
_PROTOTYPE
–
£ed
, (
l£ed
));

26 
_PROTOTYPE
–
Ã™d
, ());

28 
	#A
 16807L

	)

29 
	#M
 2147483647L

	)

30 
	#Q
 127773L

	)

31 
	#R
 2836L

	)

33 
PRIVATE
 
	g_l£ed
 = 1L;

35 
	$£ed
(
l£ed
)

36 
l£ed
;

38 
¥evious_£ed
 = 
_l£ed
;

40 
_l£ed
 = 
l£ed
;

42 (
¥evious_£ed
);

43 
	}
}

46 
	$Ã™d
()

48 
_l£ed
 = 
A
 * (_l£ed % 
Q
Ë- 
R
 * (_lseed / Q);

50 i‡(
_l£ed
 < 0Ë_l£ed +
M
;

52 (
_l£ed
);

53 
	}
}

	@lsearch.c

1 
	~<lib.h
>

2 
	~<°rög.h
>

8 
	~<°ddef.h
>

10 
_PROTOTYPE
–*
l£¨ch
, (*
key
, *
ba£
,

11 *
cou¡
, 
width
,

12 (*
keycmp
)(const *, const *)));

13 
	`_PROTOTYPE
–*
lföd
, (*
key
, *
ba£
,

14 *
cou¡
, 
width
,

15 (*
keycmp
)(const *, const *)));

17 *
	$l£¨ch
(
key
, 
ba£
, 
cou¡
, 
width
, 
keycmp
)

18 *
key
;

19 *
ba£
;

20 *
cou¡
;

21 
width
;

22 
	`_PROTOTYPE
–(*
keycmp
), (const *, const *));

24 *
íåy
;

25 *
œ°
 = 
ba£
 + *
cou¡
 * 
width
;

27 
íåy
 = 
ba£
;É¡ry < 
œ°
;É¡ry +
width
)

28 i‡(
	`keycmp
(
key
, 
íåy
) == 0) (entry);

30 
	`bc›y
(
key
, 
œ°
, 
width
);

31 *
cou¡
 += 1;

32 (
œ°
);

33 
	}
}

36 *
	$lföd
(
key
, 
ba£
, 
cou¡
, 
width
, 
keycmp
)

37 *
key
;

38 *
ba£
;

39 *
cou¡
;

40 
width
;

41 
	`_PROTOTYPE
–(*
keycmp
), (const *, const *));

43 *
íåy
;

44 *
œ°
 = 
ba£
 + *
cou¡
 * 
width
;

46 
íåy
 = 
ba£
;É¡ry < 
œ°
;É¡ry +
width
)

47 i‡(
	`keycmp
(
key
, 
íåy
) == 0) (entry);

49 ((*)
NULL
);

50 
	}
}

	@main.c

10 
	gsu≥r_block
;

12 
	~"fs.h
"

13 
	~<f˙é.h
>

14 
	~<°rög.h
>

15 
	~<sys/io˘l.h
>

16 
	~<möix/ˇŒƒ.h
>

17 
	~<möix/com.h
>

18 
	~<möix/boŸ.h
>

19 
	~"buf.h
"

20 
	~"dev.h
"

21 
	~"fûe.h
"

22 
	~"Âroc.h
"

23 
	~"öode.h
"

24 
	~"∑øm.h
"

25 
	~"su≥r.h
"

27 
FORWARD
 
_PROTOTYPE
–
buf_poﬁ
, () );

28 
FORWARD
 
_PROTOTYPE
–
fs_öô
, () );

29 
FORWARD
 
_PROTOTYPE
–
gë_boŸ_∑ømëîs
, () );

30 
FORWARD
 
_PROTOTYPE
–
gë_w‹k
, () );

31 
FORWARD
 
_PROTOTYPE
–
lﬂd_øm
, () );

32 
FORWARD
 
_PROTOTYPE
–
lﬂd_su≥r
, (
Dev_t
 
su≥r_dev
) );

38 
PUBLIC
 
	$maö
()

44 
îr‹
;

46 
	`fs_öô
();

49 
TRUE
) {

50 
	`gë_w‹k
();

52 
Â
 = &
Âroc
[
who
];

53 
su≥r_u£r
 = (
Â
->
Â_effuid
 =
SU_UID
 ? 
TRUE
 : 
FALSE
);

54 
d⁄t_ª∂y
 = 
FALSE
;

57 i‡(
fs_ˇŒ
 < 0 || fs_ˇŒ >
NCALLS
)

58 
îr‹
 = 
EBADCALL
;

60 
îr‹
 = (*
ˇŒ_ve˘‹
[
fs_ˇŒ
])();

63 i‡(
d⁄t_ª∂y
) ;

64 
	`ª∂y
(
who
, 
îr‹
);

65 i‡(
rdahed_öode
 !
NIL_INODE
Ë
	`ªad_ahód
();

67 
	}
}

73 
PRIVATE
 
	$gë_w‹k
()

79 
Âroc
 *
Ω
;

81 i‡(
ªvivög
 != 0) {

83 
Ω
 = &
Âroc
[0];Ñ∞< &Âroc[
NR_PROCS
];Ñp++)

84 i‡(
Ω
->
Â_ªvived
 =
REVIVING
) {

85 
who
 = ()(
Ω
 - 
Âroc
);

86 
fs_ˇŒ
 = 
Ω
->
Â_fd
 & 
BYTE
;

87 
fd
 = (
Ω
->
Â_fd
 >>8Ë& 
BYTE
;

88 
buf„r
 = 
Ω
->
Â_buf„r
;

89 
nbyãs
 = 
Ω
->
Â_nbyãs
;

90 
Ω
->
Â_su•íded
 = 
NOT_SUSPENDED
;

91 
Ω
->
Â_ªvived
 = 
NOT_REVIVING
;

92 
ªvivög
--;

95 
	`∑nic
("gë_w‹k couldn'àªvivê™y⁄e", 
NO_NUM
);

99 i‡(
	`ª˚ive
(
ANY
, &
m
Ë!
OK
Ë
	`∑nic
("f†ª˚ivêîr‹", 
NO_NUM
);

101 
who
 = 
m
.
m_sour˚
;

102 
fs_ˇŒ
 = 
m
.
m_ty≥
;

103 
	}
}

109 
PUBLIC
 
	$ª∂y
(
whom
, 
ªsu…
)

110 
whom
;

111 
ªsu…
;

118 
ª∂y_ty≥
 = 
ªsu…
;

119 
	`£nd
(
whom
, &
m1
);

120 
	}
}

126 
PRIVATE
 
	$fs_öô
()

130 
öode
 *
rù
;

131 
i
;

132 
mesßge
 
mess
;

135 
Â
 = (
Âroc
 *Ë
NULL
;

136 
who
 = 
FS_PROC_NR
;

138 
	`buf_poﬁ
();

139 
	`gë_boŸ_∑ømëîs
();

140 
	`lﬂd_øm
();

141 
	`lﬂd_su≥r
(
ROOT_DEV
);

144 
i
 = 0; i <
LOW_USER
; i+= 1) {

145 i‡(
i
 =
FS_PROC_NR
) ;

146 
Â
 = &
Âroc
[
i
];

147 
rù
 = 
	`gë_öode
(
ROOT_DEV
, 
ROOT_INODE
);

148 
Â
->
Â_roŸdú
 = 
rù
;

149 
	`dup_öode
(
rù
);

150 
Â
->
Â_w‹kdú
 = 
rù
;

151 
Â
->
Â_ªÆuid
 = (
uid_t
Ë
SYS_UID
;

152 
Â
->
Â_effuid
 = (
uid_t
Ë
SYS_UID
;

153 
Â
->
Â_ªÆgid
 = (
gid_t
Ë
SYS_GID
;

154 
Â
->
Â_effgid
 = (
gid_t
Ë
SYS_GID
;

155 
Â
->
Â_umask
 = ~0;

159 i‡(
SUPER_SIZE
 > 
BLOCK_SIZE
Ë
	`∑nic
("SUPER_SIZE > BLOCK_SIZE", 
NO_NUM
);

160 i‡(
BLOCK_SIZE
 % 
V2_INODE_SIZE
 != 0)

161 
	`∑nic
("BLOCK_SIZE % V2_INODE_SIZE !0", 
NO_NUM
);

162 i‡(
OPEN_MAX
 > 127Ë
	`∑nic
("OPEN_MAX > 127", 
NO_NUM
);

163 i‡(
NR_BUFS
 < 6Ë
	`∑nic
("NR_BUFS < 6", 
NO_NUM
);

164 i‡(
V1_INODE_SIZE
 !32Ë
	`∑nic
("V1 inodêsizê!32", 
NO_NUM
);

165 i‡(
V2_INODE_SIZE
 !64Ë
	`∑nic
("V2 inodêsizê!64", 
NO_NUM
);

166 i‡(
OPEN_MAX
 > 8 * ()Ë
	`∑nic
("Toÿ„w bô†ö fp_˛€xec", 
NO_NUM
);

169 
mess
.
m_ty≥
 = 
DEV_IOCTL
;

170 
mess
.
PROC_NR
 = 
FS_PROC_NR
;

171 
mess
.
REQUEST
 = 
MIOCSPSINFO
;

172 
mess
.
ADDRESS
 = (*Ë
Âroc
;

173 (Ë
	`£ndªc
(
MEM
, &
mess
);

174 
	}
}

180 
PRIVATE
 
	$buf_poﬁ
()

184 
buf
 *
bp
;

186 
bufs_ö_u£
 = 0;

187 
‰⁄t
 = &
buf
[0];

188 
ª¨
 = &
buf
[
NR_BUFS
 - 1];

190 
bp
 = &
buf
[0]; b∞< &buf[
NR_BUFS
]; bp++) {

191 
bp
->
b_blockƒ
 = 
NO_BLOCK
;

192 
bp
->
b_dev
 = 
NO_DEV
;

193 
bp
->
b_√xt
 = bp + 1;

194 
bp
->
b_¥ev
 = bp - 1;

196 
buf
[0].
b_¥ev
 = 
NIL_BUF
;

197 
buf
[
NR_BUFS
 - 1].
b_√xt
 = 
NIL_BUF
;

199 
bp
 = &
buf
[0]; b∞< &buf[
NR_BUFS
]; bp++Ëbp->
b_hash
 = bp->
b_√xt
;

200 
buf_hash
[0] = 
‰⁄t
;

201 
	}
}

207 
PUBLIC
 
b∑øm_s
 
	gboŸ_∑ømëîs
;

209 
PRIVATE
 
	$gë_boŸ_∑ømëîs
()

213 
m1
.
m_ty≥
 = 
SYS_GBOOT
;

214 
m1
.
PROC1
 = 
FS_PROC_NR
;

215 
m1
.
MEM_PTR
 = (*Ë&
boŸ_∑ømëîs
;

216 (Ë
	`£ndªc
(
SYSTASK
, &
m1
);

217 
	}
}

223 
PRIVATE
 
	$lﬂd_øm
()

230 
buf
 *
bp
, *
bp1
;

231 
k_lﬂded
, 
lcou¡
;

232 
u32_t
 
øm_size
, 
fsmax
;

233 
z⁄e_t
 
z⁄es
;

234 
su≥r_block
 *
•
, *
d•
;

235 
block_t
 
b
;

236 
maj‹
, 
èsk
;

237 
mesßge
 
dev_mess
;

239 
øm_size
 = 
boŸ_∑ømëîs
.
bp_ømsize
;

242 
maj‹
 = (
ROOT_DEV
 >> 
MAJOR
Ë& 
BYTE
;

243 
èsk
 = 
dm≠
[
maj‹
].
dm≠_èsk
;

244 
dev_mess
.
m_ty≥
 = 
DEV_OPEN
;

245 
dev_mess
.
DEVICE
 = 
ROOT_DEV
;

246 
dev_mess
.
COUNT
 = 
R_BIT
|
W_BIT
;

247 (*
dm≠
[
maj‹
].
dm≠_›í
)(
èsk
, &
dev_mess
);

248 i‡(
dev_mess
.
REP_STATUS
 !
OK
Ë
	`∑nic
("C™nŸ o≥¿roŸ devi˚",
NO_NUM
);

251 i‡(
ROOT_DEV
 =
DEV_RAM
) {

252 
maj‹
 = (
IMAGE_DEV
 >> 
MAJOR
Ë& 
BYTE
;

253 
èsk
 = 
dm≠
[
maj‹
].
dm≠_èsk
;

254 
dev_mess
.
m_ty≥
 = 
DEV_OPEN
;

255 
dev_mess
.
DEVICE
 = 
IMAGE_DEV
;

256 
dev_mess
.
COUNT
 = 
R_BIT
;

257 (*
dm≠
[
maj‹
].
dm≠_›í
)(
èsk
, &
dev_mess
);

258 i‡(
dev_mess
.
REP_STATUS
 !
OK
Ë
	`∑nic
("C™nŸ o≥¿roŸ devi˚", 
NO_NUM
);

261 
•
 = &
su≥r_block
[0];

262 
•
->
s_dev
 = 
IMAGE_DEV
;

263 i‡(
	`ªad_su≥r
(
•
Ë!
OK
Ë
	`∑nic
("BadÑoŸ fûêsy°em", 
NO_NUM
);

265 
lcou¡
 = 
•
->
s_z⁄es
 << sp->
s_log_z⁄e_size
;

270 i‡(
øm_size
 < 
lcou¡
)Ñam_size =Ücount;

271 
fsmax
 = (
u32_t
Ë
•
->
s_zm≠_blocks
 * 
CHAR_BIT
 * 
BLOCK_SIZE
;

272 
fsmax
 = (fsmax + (
•
->
s_fú°d©az⁄e
-1)Ë<< sp->
s_log_z⁄e_size
;

273 i‡(
øm_size
 > 
fsmax
)Ñam_size = fsmax;

277 
m1
.
m_ty≥
 = 
DEV_IOCTL
;

278 
m1
.
PROC_NR
 = 
FS_PROC_NR
;

279 
m1
.
REQUEST
 = 
MIOCRAMSIZE
;

280 
m1
.
POSITION
 = 
øm_size
;

281 i‡(
	`£ndªc
(
MEM
, &
m1
Ë!
OK
 || m1.
REP_STATUS
 != OK)

282 
	`∑nic
("C™'à£àRAM disk size", 
NO_NUM
);

285 
m1
.
m1_i1
 = ((Ë
øm_size
 * 
BLOCK_SIZE
Ë>> 
CLICK_SHIFT
;

286 i‡(
	`£ndªc
(
MM_PROC_NR
, &
m1
Ë!
OK
)

287 
	`∑nic
("FS c™'àsyn¯u∞wôh MM", 
NO_NUM
);

289 #i‡
ENABLE_CACHE2


291 
	`öô_ˇche2
(
øm_size
);

295 i‡(
ROOT_DEV
 !
DEV_RAM
) ;

298 
	`¥ötf
("Loading RAM disk.\33[23CLoaded: 0K ");

300 
öode
[0].
i_mode
 = 
I_BLOCK_SPECIAL
;

301 
öode
[0].
i_size
 = 
LONG_MAX
;

302 
öode
[0].
i_dev
 = 
IMAGE_DEV
;

303 
öode
[0].
i_z⁄e
[0] = 
IMAGE_DEV
;

305 
b
 = 0; b < (
block_t
Ë
lcou¡
; b++) {

306 
bp
 = 
	`øhód
(&
öode
[0], 
b
, (
off_t
)
BLOCK_SIZE
 * b, BLOCK_SIZE);

307 
bp1
 = 
	`gë_block
(
ROOT_DEV
, 
b
, 
NO_READ
);

308 
	`mem˝y
(
bp1
->
b_d©a
, 
bp
->b_d©a, (
size_t
Ë
BLOCK_SIZE
);

309 
bp1
->
b_dút
 = 
DIRTY
;

310 
	`put_block
(
bp
, 
FULL_DATA_BLOCK
);

311 
	`put_block
(
bp1
, 
FULL_DATA_BLOCK
);

312 
k_lﬂded
 = ( (Ë
b
 * 
BLOCK_SIZE
)/1024L;

313 i‡(
k_lﬂded
 % 5 =0Ë
	`¥ötf
("\b\b\b\b\b\b\b%5ldK ", k_loaded);

316 
	`¥ötf
("\rRAM diskÜoaded.\33[K\n\n");

319 
dev_mess
.
m_ty≥
 = 
DEV_CLOSE
;

320 
dev_mess
.
DEVICE
 = 
IMAGE_DEV
;

321 (*
dm≠
[
maj‹
].
dm≠_˛o£
)(
èsk
, &
dev_mess
);

322 
	`övÆid©e
(
IMAGE_DEV
);

325 
bp
 = 
	`gë_block
(
ROOT_DEV
, 
SUPER_BLOCK
, 
NORMAL
);

326 
d•
 = (
su≥r_block
 *Ë
bp
->
b_d©a
;

327 
z⁄es
 = 
øm_size
 >> 
•
->
s_log_z⁄e_size
;

328 
d•
->
s_nz⁄es
 = 
	`c⁄v2
(
•
->
s_«tive
, (
u16_t
Ë
z⁄es
);

329 
d•
->
s_z⁄es
 = 
	`c⁄v4
(
•
->
s_«tive
, 
z⁄es
);

330 
bp
->
b_dút
 = 
DIRTY
;

331 
	`put_block
(
bp
, 
ZUPER_BLOCK
);

332 
	}
}

338 
PRIVATE
 
	$lﬂd_su≥r
(
su≥r_dev
)

339 
dev_t
 
su≥r_dev
;

341 
bad
;

342 
su≥r_block
 *
•
;

343 
öode
 *
rù
;

346 
•
 = &
su≥r_block
[0]; s∞< &su≥r_block[
NR_SUPERS
]; sp++)

347 
•
->
s_dev
 = 
NO_DEV
;

350 
•
 = &
su≥r_block
[0];

351 
•
->
s_dev
 = 
su≥r_dev
;

354 
bad
 = (
	`ªad_su≥r
(
•
Ë!
OK
);

355 i‡(!
bad
) {

356 
rù
 = 
	`gë_öode
(
su≥r_dev
, 
ROOT_INODE
);

357 i‡–(
rù
->
i_mode
 & 
I_TYPE
Ë!
I_DIRECTORY
 ||Ñù->
i_∆öks
 < 3Ë
bad
++;

359 i‡(
bad
)
	`∑nic
("InvÆidÑoŸ fûêsy°em. Possibly wr⁄g diskëã.",
NO_NUM
);

361 
•
->
s_imou¡
 = 
rù
;

362 
	`dup_öode
(
rù
);

363 
•
->
s_isup
 = 
rù
;

364 
•
->
s_rd_⁄ly
 = 0;

366 
	}
}

	@malloc.c

4 #unde‡
DEBUG


5 #unde‡
SLOWDEBUG


7 
	~<°dlib.h
>

8 
	~<°rög.h
>

9 
	~<î∫o.h
>

11 #ifde‡
DEBUG


12 
	#ASSERT
(
b
Ëi‡(!(b)Ë
	`as£π_Áûed
();

	)

14 
	#ASSERT
(
b
Ë

	)

17 #i‡
_EM_WSIZE
 =
_EM_PSIZE


18 
	#±röt
 

	)

20 
	#±röt
 

	)

23 #if 
_EM_PSIZE
 == 2

24 
	#BRKSIZE
 1024

	)

26 
	#BRKSIZE
 4096

	)

28 
	#PTRSIZE
 ((Ë(*))

	)

29 
	#Align
(
x
,
a
Ë(((xË+ (®- 1)Ë& ~◊ - 1))

	)

30 
	#NextSlŸ
(
p
Ë(* (**Ë(’Ë- 
PTRSIZE
))

	)

31 
	#NextFªe
(
p
Ë(* (**Ë’))

	)

47 *
_sbrk
();

48 
_brk
(*);

49 *
	g_bŸtom
, *
	g_t›
, *
	g_em±y
;

51 
	$grow
(
size_t
 
Àn
)

53 *
p
;

55 
	`ASSERT
(
	`NextSlŸ
((*)
_t›
) == 0);

56 
î∫o
 = 
ENOMEM
;

57 i‡((*Ë
_t›
 + 
Àn
 < (*) _top

58 || (
p
 = (*)
	`Align
((
±röt
)
_t›
 + 
Àn
, 
BRKSIZE
)) < (*) _top

59 || 
	`_brk
(
p
) != 0)

61 
	`NextSlŸ
((*)
_t›
Ë
p
;

62 
	`NextSlŸ
(
p
) = 0;

63 
	`‰ì
(
_t›
);

64 
_t›
 = 
p
;

66 
	}
}

69 
	$mÆloc
(
size_t
 
size
)

71 *
¥ev
, *
p
, *
√xt
, *
√w
;

72 
Àn
, 
¡rõs
;

74 i‡(
size
 =0Ë 
NULL
;

75 
î∫o
 = 
ENOMEM
;

76 
¡rõs
 = 0;Çtries < 2;Çtries++) {

77 i‡((
Àn
 = 
	`Align
(
size
, 
PTRSIZE
) + PTRSIZE) < 2 * PTRSIZE)

78  
NULL
;

79 i‡(
_bŸtom
 == 0) {

80 i‡((
p
 = 
	`_sbrk
(2 * 
PTRSIZE
)) == (*) -1)

81  
NULL
;

82 
p
 = (*Ë
	`Align
((
±röt
Ì, 
PTRSIZE
);

83 
p
 +
PTRSIZE
;

84 
_t›
 = 
_bŸtom
 = 
p
;

85 
	`NextSlŸ
(
p
) = 0;

87 #ifde‡
SLOWDEBUG


88 
p
 = 
_bŸtom
; (
√xt
 = 
	`NextSlŸ
(p)) != 0;Ö =Çext)

89 
	`ASSERT
(
√xt
 > 
p
);

90 
	`ASSERT
(
p
 =
_t›
);

92 
¥ev
 = 0, 
p
 = 
_em±y
;Ö !0;Öªv =Ö,Ö = 
	`NextFªe
(p)) {

93 
√xt
 = 
	`NextSlŸ
(
p
);

94 
√w
 = 
p
 + 
Àn
;

95 i‡(
√w
 > 
√xt
 ||Çew <
p
)

97 i‡(
√w
 + 
PTRSIZE
 < 
√xt
) {

99 
	`NextSlŸ
(
√w
Ë
√xt
;

100 
	`NextSlŸ
(
p
Ë
√w
;

101 
	`NextFªe
(
√w
ËNextFªe(
p
);

102 
	`NextFªe
(
p
Ë
√w
;

104 i‡(
¥ev
)

105 
	`NextFªe
(
¥ev
ËNextFªe(
p
);

107 
_em±y
 = 
	`NextFªe
(
p
);

108  
p
;

110 i‡(
	`grow
(
Àn
) == 0)

113 
	`ASSERT
(
¡rõs
 != 2);

114  
NULL
;

115 
	}
}

118 
	$ªÆloc
(*
ﬁdp
, 
size_t
 
size
)

120 *
¥ev
, *
p
, *
√xt
, *
√w
;

121 *
ﬁd
 = 
ﬁdp
;

122 
size_t
 
Àn
, 
n
;

124 i‡(!
ﬁd
Ë 
	`mÆloc
(
size
);

125 i‡(!
size
) {

126 
	`‰ì
(
ﬁdp
);

127  
NULL
;

129 
Àn
 = 
	`Align
(
size
, 
PTRSIZE
) + PTRSIZE;

130 
√xt
 = 
	`NextSlŸ
(
ﬁd
);

131 
n
 = ()(
√xt
 - 
ﬁd
);

135 
¥ev
 = 0, 
p
 = 
_em±y
;Ö !0;Öªv =Ö,Ö = 
	`NextFªe
(p)) {

136 i‡(
p
 > 
√xt
)

138 i‡(
p
 =
√xt
) {

139 
	`NextSlŸ
(
ﬁd
ËNextSlŸ(
p
);

140 i‡(
¥ev
)

141 
	`NextFªe
(
¥ev
ËNextFªe(
p
);

143 
_em±y
 = 
	`NextFªe
(
p
);

144 
√xt
 = 
	`NextSlŸ
(
ﬁd
);

148 
√w
 = 
ﬁd
 + 
Àn
;

152 i‡(
√w
 <
√xt
 &&Çew >
ﬁd
) {

153 i‡(
√w
 + 
PTRSIZE
 < 
√xt
) {

155 
	`NextSlŸ
(
√w
Ë
√xt
;

156 
	`NextSlŸ
(
ﬁd
Ë
√w
;

157 
	`‰ì
(
√w
);

159  
ﬁd
;

161 i‡((
√w
 = 
	`mÆloc
(
size
)Ë=
NULL
)

162  
NULL
;

163 
	`mem˝y
(
√w
, 
ﬁd
, 
n
);

164 
	`‰ì
(
ﬁd
);

165  
√w
;

166 
	}
}

169 
	$‰ì
(*
±r
)

171 *
¥ev
, *
√xt
;

172 *
p
 = 
±r
;

174 i‡(!
p
) ;

176 
	`ASSERT
(
	`NextSlŸ
(
p
) >Ö);

177 
¥ev
 = 0, 
√xt
 = 
_em±y
;Çexà!0;Öªv =Çext,Çexà
	`NextFªe
(next))

178 i‡(
p
 < 
√xt
)

180 
	`NextFªe
(
p
Ë
√xt
;

181 i‡(
¥ev
)

182 
	`NextFªe
(
¥ev
Ë
p
;

184 
_em±y
 = 
p
;

185 i‡(
√xt
) {

186 
	`ASSERT
(
	`NextSlŸ
(
p
Ë<
√xt
);

187 i‡(
	`NextSlŸ
(
p
Ë=
√xt
) {

188 
	`NextSlŸ
(
p
ËNextSlŸ(
√xt
);

189 
	`NextFªe
(
p
ËNextFªe(
√xt
);

192 i‡(
¥ev
) {

193 
	`ASSERT
(
	`NextSlŸ
(
¥ev
Ë<
p
);

194 i‡(
	`NextSlŸ
(
¥ev
Ë=
p
) {

195 
	`NextSlŸ
(
¥ev
ËNextSlŸ(
p
);

196 
	`NextFªe
(
¥ev
ËNextFªe(
p
);

199 
	}
}

201 #ifde‡
DEBUG


202 
	$as£π_Áûed
()

204 
	`wrôe
(2, "assert failed inÜib/malloc.c\n", 30);

205 
	`ab‹t
();

206 
	}
}

	@mblen.c

7 
	~<°dlib.h
>

8 
	~<limôs.h
>

10 
	#CHAR_SHIFT
 8

	)

13 
	$mbÀn
(c⁄° *
s
, 
size_t
 
n
)

15 i‡(
s
 =(c⁄° *)
NULL
)  0;

16 i‡(
n
 <= 0)  0;

17  (*
s
 != 0);

18 
	}
}

	@mbstowcs.c

7 
	~<°dlib.h
>

9 
size_t


10 
	$mb°owcs
(
wch¨_t
 *
pwcs
, c⁄° *
s
, 
size_t
 
n
)

12 
i
 = 
n
;

14 --
i
 >= 0) {

15 i‡(!(*
pwcs
++ = *
s
++))

16  
n
 - 
i
 - 1;

18  
n
 - 
i
;

19 
	}
}

	@mbtowc.c

7 
	~<°dlib.h
>

8 
	~<limôs.h
>

11 
	$mbtowc
(
wch¨_t
 *
pwc
, c⁄° *
s
, 
size_t
 
n
)

13 i‡(
s
 =(c⁄° *)
NULL
)  0;

14 i‡(
n
 <= 0)  0;

15 i‡(
pwc
Ë*pw¯*
s
;

16  (*
s
 != 0);

17 
	}
}

	@mcd.c

11 
	~"kî√l.h
"

12 
	~"drivî.h
"

13 
	~"drvlib.h
"

14 
	~<möix/cdrom.h
>

15 
	~<sys/io˘l.h
>

17 #i‡
ENABLE_MITSUMI_CDROM


19 
	#MCD_DEBUG
 0

	)

22 
	#MCD_IRQ
 10

	)

25 
	#MCD_IO_BASE_ADDRESS
 0x300

	)

26 
	#MCD_DATA_PORT
 (
mcd_io_ba£
+0)

	)

27 
	#MCD_FLAG_PORT
 (
mcd_io_ba£
+1)

	)

28 
	#MCD_CONTROL_PORT
 (
mcd_io_ba£
+2)

	)

32 
	#MCD_SKIP
 150

	)

33 
	#MCD_BLOCK_SIZE
 2048

	)

34 
	#MCD_BLOCK_SHIFT
 11

	)

35 
	#MCD_BLOCK_MASK
 2047

	)

36 
	#BYTES_PER_SECTOR
 2048

	)

37 
	#SECTORS_PER_SECOND
 75

	)

38 
	#SECONDS_PER_MINUTE
 60

	)

39 
	#MCD_RETRIES
 2

	)

40 
	#REPLY_DELAY
 5000

	)

41 
	#MAX_TRACKS
 104

	)

42 
	#LEAD_OUT
 0xAA

	)

43 
	#SUB_PER_DRIVE
 (
NR_PARTITIONS
 * NR_PARTITIONS)

	)

47 
	#MCD_GET_VOL_INFO
 0x10

	)

48 
	#MCD_GET_Q_CHANNEL
 0x20

	)

49 
	#MCD_GET_STATUS
 0x40

	)

50 
	#MCD_SET_MODE
 0x50

	)

51 
	#MCD_RESET
 0x60

	)

52 
	#MCD_STOP_AUDIO
 0x70

	)

53 
	#MCD_SET_DRIVE_MODE
 0xA0

	)

54 
	#MCD_READ_FROM_TO
 0xC0

	)

55 
	#MCD_GET_VERSION
 0xDC

	)

56 
	#MCD_STOP
 0xF0

	)

57 
	#MCD_EJECT
 0xF6

	)

58 
	#MCD_PICKLE
 0x04

	)

62 
	#MCD_MUTE_DATA
 0x01

	)

63 
	#MCD_GET_TOC
 0x04

	)

64 
	#MCD_ECC_MODE
 0x20

	)

65 
	#MCD_DATALENGTH
 0x40

	)

66 
	#MCD_COOKED
 (
MCD_MUTE_DATA
)

	)

67 
	#MCD_TOC
 (
MCD_MUTE_DATA
 | 
MCD_GET_TOC
)

	)

71 
	#MCD_CMD_ERROR
 0x01

	)

72 
	#MCD_AUDIO_BUSY
 0x02

	)

73 
	#MCD_READ_ERROR
 0x04

	)

74 
	#MCD_AUDIO_DISK
 0x08

	)

75 
	#MCD_SPINNING
 0x10

	)

76 
	#MCD_DISK_CHANGED
 0x20

	)

77 
	#MCD_DISK_IN
 0x40

	)

78 
	#MCD_DOOR_OPEN
 0x80

	)

81 
	#MCD_DATA_AVAILABLE
 0x02

	)

82 
	#MCD_BUSY
 0x04

	)

85 
FORWARD
 
_PROTOTYPE
 ( 
mcd_öô
, ());

86 
FORWARD
 
_PROTOTYPE
 ( 
c_h™dÀr
, (
úq
));

87 
FORWARD
 
_PROTOTYPE
 ( 
mcd_∂ay_mss
, (
cd_∂ay_mss
));

88 
FORWARD
 
_PROTOTYPE
 ( 
mcd_∂ay_åacks
, (
cd_∂ay_åack
 
åacks
));

89 
FORWARD
 
_PROTOTYPE
 ( 
mcd_°›
, ());

90 
FORWARD
 
_PROTOTYPE
 ( 
mcd_eje˘
, ());

91 
FORWARD
 
_PROTOTYPE
 ( 
mcd_∑u£
, ());

92 
FORWARD
 
_PROTOTYPE
 ( 
mcd_ªsume
, ());

93 
FORWARD
 
_PROTOTYPE
 ( 
u8_t
 
bö2bcd
, (u8_à
b
));

94 
FORWARD
 
_PROTOTYPE
 ( 
bcd2bö
, (
u8_t
 *
bcd
));

95 
FORWARD
 
_PROTOTYPE
 ( 
mss2block
, (
u8_t
 *
mss
));

96 
FORWARD
 
_PROTOTYPE
 ( 
block2mss
, (
block
, 
u8_t
 *
mss
));

97 
FORWARD
 
_PROTOTYPE
 ( 
mcd_gë_ª∂y
, (
u8_t
 *
ª∂y
, 
dñay
));

98 
FORWARD
 
_PROTOTYPE
 ( 
mcd_gë_°©us
, (
f
));

99 
FORWARD
 
_PROTOTYPE
 ( 
mcd_ªady
, (
dñay
));

100 
FORWARD
 
_PROTOTYPE
 ( 
mcd_d©a_ªady
, (
dñay
));

101 
FORWARD
 
_PROTOTYPE
 ( 
mcd_£t_mode
, (
mode
));

102 
FORWARD
 
_PROTOTYPE
 ( 
mcd_£nd_comm™d
, (
comm™d
));

103 
FORWARD
 
_PROTOTYPE
 ( 
mcd_gë_disk_öfo
, ());

104 
FORWARD
 
_PROTOTYPE
 ( 
mcd_ªad_q_ch™√l
, (
cd_toc_íåy
 *
qc
));

105 
FORWARD
 
_PROTOTYPE
 ( 
mcd_ªad_toc
, ());

106 
FORWARD
 
_PROTOTYPE
 ( 
io˘l_ªad_toc
, (
mesßge
 *
m_±r
));

107 
FORWARD
 
_PROTOTYPE
 ( 
io˘l_disk_öfo
, (
mesßge
 *
m_±r
));

108 
FORWARD
 
_PROTOTYPE
 ( 
io˘l_ªad_sub
, (
mesßge
 *
m_±r
));

109 
FORWARD
 
_PROTOTYPE
 ( 
io˘l_disk_öfo
, (
mesßge
 *
m_±r
));

110 
FORWARD
 
_PROTOTYPE
 ( 
io˘l_∂ay_mss
, (
mesßge
 *
m_±r
));

111 
FORWARD
 
_PROTOTYPE
 ( 
io˘l_∂ay_ti
, (
mesßge
 *
m_±r
));

112 
FORWARD
 
_PROTOTYPE
 ( 
mcd_›í
, (
drivî
 *
dp
, 
mesßge
 *
m_±r
));

113 
FORWARD
 
_PROTOTYPE
 ( 
mcd_˛o£
, (
drivî
 *
dp
, 
mesßge
 *
m_±r
));

114 
FORWARD
 
_PROTOTYPE
 ( 
mcd_io˘l
, (
drivî
 *
dp
, 
mesßge
 *
m_±r
));

115 
FORWARD
 
_PROTOTYPE
 ( *
mcd_«me
, ());

116 
FORWARD
 
_PROTOTYPE
 ( 
devi˚
 *
mcd_¥ï¨e
, (
dev
));

117 
FORWARD
 
_PROTOTYPE
 ( 
mcd_scheduÀ
, (
¥oc_ƒ
, 
i‹eque°_s
 *
i›
));

118 
FORWARD
 
_PROTOTYPE
 ( 
mcd_föish
, ());

119 
FORWARD
 
_PROTOTYPE
 ( 
mcd_geomëry
, (
∑πôi⁄
 *
íåy
));

123 
	#TOC_UPTODATE
 0x001

	)

124 
	#INFO_UPTODATE
 0x002

	)

125 
	#DISK_CHANGED
 0x004

	)

126 
	#AUDIO_PLAYING
 0x008

	)

127 
	#AUDIO_PAUSED
 0x010

	)

128 
	#AUDIO_DISK
 0x020

	)

129 
	#DISK_ERROR
 0x040

	)

130 
	#NO_DISK
 0x080

	)

133 
PRIVATE
 
drivî
 
	gmcd_dèb
 =

135 #i‡
__möix_vmd


136 
NULL
,

138 
mcd_«me
,

139 
mcd_›í
,

140 
mcd_˛o£
,

141 
mcd_io˘l
,

142 
mcd_¥ï¨e
,

143 
mcd_scheduÀ
,

144 
mcd_föish
,

145 
n›_˛ónup
,

146 
mcd_geomëry


150 
PRIVATE
 
	så™s


152 
i‹eque°_s
 *
	må_i›
;

153 
	må_pos
;

154 
	må_cou¡
;

155 
phys_byãs
 
	må_phys
;

156 } 
	gmcd_å™s
[
NR_IOREQS
];

160 #i‡
__möix_vmd


161 
PRIVATE
 
	gmcd_èskƒ
 = 
ANY
;

163 
PRIVATE
 
	gmcd_avaû
;

164 
PRIVATE
 
	gmcd_úq
;

165 
PRIVATE
 
	gmcd_io_ba£
;

166 
PRIVATE
 
devi˚
 *
	gmcd_dv
;

167 
PRIVATE
 
å™s
 *
	gmcd_ç
;

168 
PRIVATE
 
	gmcd_cou¡
;

169 
PRIVATE
 
	gmcd_√xços
;

170 
PRIVATE
 
devi˚
 
	gmcd_∑π
[
DEV_PER_DRIVE
];

172 
PRIVATE
 
devi˚
 
	gmcd_sub∑π
[
SUB_PER_DRIVE
];

174 
PRIVATE
 
	gmcd_›í_˘
;

175 
PRIVATE
 
	gMcdSètus
 = 
NO_DISK
;

176 
PRIVATE
 
cd_∂ay_mss
 
	gPœyMss
;

178 
PRIVATE
 
cd_disk_öfo
 
	gDiskInfo
;

179 
PRIVATE
 
cd_toc_íåy
 
	gToc
[
MAX_TRACKS
];

186 
PUBLIC
 
	$mcd_èsk
()

188 
v
;

189 
v¨
[] = "MCD";

190 
fmt
[] = "x:d";

192 #i‡
__möix_vmd


193 
mcd_èskƒ
 = 
	`¥oc_numbî
(
¥oc_±r
);

197 
v
 = 
MCD_IO_BASE_ADDRESS
;

198 (Ë
	`ív_∑r£
(
v¨
, 
fmt
, 0, &
v
, 0x000L, 0x3FFL);

199 
mcd_io_ba£
 = 
v
;

201 
v
 = 
MCD_IRQ
;

202 (Ë
	`ív_∑r£
(
v¨
, 
fmt
, 0, &
v
, 0L, (Ë
NR_IRQ_VECTORS
 - 1);

203 
mcd_úq
 = 
v
;

205 
	`drivî_èsk
(&
mcd_dèb
);

206 
	}
}

212 
PRIVATE
 
	$mcd_›í
(
dp
, 
m_±r
)

213 
drivî
 *
dp
;

214 
mesßge
 *
m_±r
;

216 
i
, 
°©us
;

218 i‡(!
mcd_avaû
 && 
	`mcd_öô
(Ë!
OK
Ë 
EIO
;

220 i‡(
	`mcd_¥ï¨e
(
m_±r
->
DEVICE
Ë=
NIL_DEV
Ë 
ENXIO
;

223 i‡(
m_±r
->
COUNT
 & 
W_BIT
Ë 
EACCES
;

225 i‡(
mcd_›í_˘
 == 0)

227 
i
 = 20;

229 i‡(
	`mcd_gë_°©us
(1Ë=-1Ë 
EIO
;

230 i‡(!(
McdSètus
 & 
NO_DISK
)) ;

231 i‡(--
i
 =0Ë 
EIO
;

232 
	`mûli_dñay
(100);

236 i‡((
°©us
 = 
	`mcd_ªad_toc
()Ë!
OK
)

237  
°©us
;

239 
mcd_›í_˘
++;

242 
mcd_∑π
[0].
dv_ba£
 = 0;

243 
mcd_∑π
[0].
dv_size
 =

244 (((()
DiskInfo
.
disk_Àngth_mss
[
MINUTES
] * 
SECONDS_PER_MINUTE


245 + ()
DiskInfo
.
disk_Àngth_mss
[
SECONDS
]Ë* 
SECTORS_PER_SECOND
)

246 + ()
DiskInfo
.
disk_Àngth_mss
[
SECTOR
]Ë* 
BYTES_PER_SECTOR
;

248 #i‡
MCD_DEBUG
 >= 1

249 
	`¥ötf
("cd size: %lu\n", 
mcd_∑π
[0].
dv_size
);

253 
	`∑πôi⁄
(&
mcd_dèb
, 0, 
P_PRIMARY
);

255  
OK
;

256 
	}
}

262 
PRIVATE
 
	$mcd_˛o£
(
dp
, 
m_±r
)

263 
drivî
 *
dp
;

264 
mesßge
 *
m_±r
;

268 
mcd_›í_˘
--;

269  
OK
;

270 
	}
}

276 
PRIVATE
 *
	$mcd_«me
()

281 
	}
}

287 
PRIVATE
 
	$mcd_io˘l
(
dp
, 
m_±r
)

288 
drivî
 *
dp
;

289 
mesßge
 *
m_±r
;

293 
°©us
;

295 i‡(
	`mcd_¥ï¨e
(
m_±r
->
DEVICE
Ë=
NIL_DEV
Ë(
ENXIO
);

297 
	`mcd_gë_°©us
(1);

298 i‡((
McdSètus
 & 
NO_DISK
Ë&& 
m_±r
->
REQUEST
 !
CDIOEJECT
)

299  
EIO
;

301 
m_±r
->
REQUEST
)

303 
CDIOPLAYMSS
: 
°©us
 = 
	`io˘l_∂ay_mss
(
m_±r
);;

304 
CDIOPLAYTI
: 
°©us
 = 
	`io˘l_∂ay_ti
(
m_±r
);;

305 
CDIOREADTOCHDR
: 
°©us
 = 
	`io˘l_disk_öfo
(
m_±r
);;

306 
CDIOREADTOC
: 
°©us
 = 
	`io˘l_ªad_toc
(
m_±r
);;

307 
CDIOREADSUBCH
: 
°©us
 = 
	`io˘l_ªad_sub
(
m_±r
);;

308 
CDIOSTOP
: 
°©us
 = 
	`mcd_°›
();;

309 
CDIOPAUSE
: 
°©us
 = 
	`mcd_∑u£
();;

310 
CDIORESUME
: 
°©us
 = 
	`mcd_ªsume
();;

311 
CDIOEJECT
: 
°©us
 = 
	`mcd_eje˘
();;

312 : 
°©us
 = 
	`do_dio˙é
(
dp
, 
m_±r
);

314  
°©us
;

315 
	}
}

321 
PRIVATE
 
	$mcd_gë_ª∂y
(
ª∂y
, 
dñay
)

322 
u8_t
 *
ª∂y
;

323 
dñay
;

327 i‡(
	`mcd_ªady
(
dñay
Ë!
OK
Ë 
EIO
;

329 *
ª∂y
 = 
	`ö_byã
(
MCD_DATA_PORT
);

330  
OK
;

331 
	}
}

337 
PRIVATE
 
	$mcd_ªady
(
dñay
)

338 
dñay
;

342 
mûli_°©e
 
ms
;

344 
	`mûli_°¨t
(&
ms
);

347 i‡(!(
	`ö_byã
(
MCD_FLAG_PORT
Ë& 
MCD_BUSY
)Ë 
OK
;

348 } 
	`mûli_ñ≠£d
(&
ms
Ë< 
dñay
);

350  
EIO
;

351 
	}
}

357 
PRIVATE
 
	$mcd_d©a_ªady
(
dñay
)

358 
dñay
;

362 
mûli_°©e
 
ms
;

364 
	`mûli_°¨t
(&
ms
);

367 i‡(!(
	`ö_byã
(
MCD_FLAG_PORT
Ë& 2)Ë 
OK
;

368 } 
	`mûli_ñ≠£d
(&
ms
Ë< 
dñay
);

370  
EIO
;

371 
	}
}

377 
PRIVATE
 
	$mcd_gë_°©us
(
f
)

378 
f
;

382 
u8_t
 
°©us
;

387 i‡(
f
Ë
	`out_byã
(
MCD_DATA_PORT
, 
MCD_GET_STATUS
);

388 i‡(
	`mcd_gë_ª∂y
(&
°©us
,
REPLY_DELAY
Ë!
OK
)  -1;

390 
McdSètus
 &~(
NO_DISK
 | 
DISK_CHANGED
 | 
DISK_ERROR
);

393 i‡(
°©us
 & 
MCD_DOOR_OPEN
 ||

394 !(
°©us
 & 
MCD_DISK_IN
)Ë
McdSètus
 = 
NO_DISK
;

395 i‡(
°©us
 & 
MCD_DISK_CHANGED
Ë
McdSètus
 = 
DISK_CHANGED
;

396 i‡(
°©us
 & 
MCD_READ_ERROR
 ||

397 
°©us
 & 
MCD_CMD_ERROR
Ë
McdSètus
 = 
DISK_ERROR
;

400 i‡(
°©us
 & 
MCD_AUDIO_DISK
)

402 
McdSètus
 |
AUDIO_DISK
;

403 i‡(!(
°©us
 & 
MCD_AUDIO_BUSY
)Ë
McdSètus
 &~(
AUDIO_PLAYING
);

404 
McdSètus
 |
AUDIO_PLAYING
;

407 #i‡
MCD_DEBUG
 >= 3

408 
	`¥ötf
("mcd_get_status(%d) = %02x, McdStatus = %02x\n",

409 
f
, 
°©us
, 
McdSètus
);

411  
°©us
;

412 
	}
}

418 
PRIVATE
 
	$mcd_£t_mode
(
mode
)

419 
mode
;

423 
i
;

425 
i
 = 0; i < 
MCD_RETRIES
; i++)

427 
	`out_byã
(
MCD_DATA_PORT
, 
MCD_SET_MODE
);

428 
	`out_byã
(
MCD_DATA_PORT
, 
mode
);

429 i‡(
	`mcd_gë_°©us
(0) != -1 &&

430 !(
McdSètus
 & 
DISK_ERROR
)) ;

432 i‡(
i
 =
MCD_RETRIES
Ë 
EIO
;

434  
OK
;

435 
	}
}

441 
PRIVATE
 
	$mcd_£nd_comm™d
(
comm™d
)

442 
comm™d
;

444 
i
;

446 
i
 = 0; i < 
MCD_RETRIES
; i++)

448 
	`out_byã
(
MCD_DATA_PORT
, 
comm™d
);

449 i‡(
	`mcd_gë_°©us
(0) != -1 &&

450 !(
McdSètus
 & 
DISK_ERROR
)) ;

452 i‡(
i
 =
MCD_RETRIES
Ë 
EIO
;

454  
OK
;

455 
	}
}

461 
PRIVATE
 
	$mcd_öô
()

468 
u8_t
 
vîsi⁄
[3];

469 
i
;

470 
u32_t
 
n
;

471 
mûli_°©e
 
ms
;

476 
	`out_byã
(
MCD_FLAG_PORT
, 0x00);

477 
n
 = 0;Ç < 1000000;Ç++)

478 (Ë
	`ö_byã
(
MCD_FLAG_PORT
);

481 i‡(
	`mcd_gë_°©us
(1) == -1)

484 
	`¥ötf
("%s: inô faûed,ÇÿMôsumòcdromÖª£¡\n", 
	`mcd_«me
());

489 
	`out_byã
(
MCD_DATA_PORT
, 
MCD_GET_VERSION
);

490 
	`mûli_°¨t
(&
ms
);

491 
i
 = 0; i < 3; i++)

493 
	`ö_byã
(
MCD_FLAG_PORT
Ë& 
MCD_BUSY
)

495 i‡(
	`mûli_ñ≠£d
(&
ms
) >= 1000)

497 
	`¥ötf
("%s: c™'àgë vîsi⁄ o‡Môsumòcdrom\n", 
	`mcd_«me
());

501 
vîsi⁄
[
i
] = 
	`ö_byã
(
MCD_DATA_PORT
);

504 i‡(
vîsi⁄
[1] == 'D')

505 
	`¥ötf
("%s: MôsumòFX001D CD-ROM\n", 
	`mcd_«me
());

507 
	`¥ötf
("%s: MôsumòCD-ROM vîsi⁄ %02x%02x%02x\n", 
	`mcd_«me
(),

508 
vîsi⁄
[0], version[1], version[2]);

511 i‡(
vîsi⁄
[1] >4Ë
	`out_byã
(
MCD_CONTROL_PORT
, 
MCD_PICKLE
);

517 
	`put_úq_h™dÀr
(
mcd_úq
, 
c_h™dÀr
);

518 
	`íabÀ_úq
(
mcd_úq
);

520 
mcd_avaû
 = 1;

521  
OK
;

522 
	}
}

528 
PRIVATE
 
	$c_h™dÀr
(
úq
)

529 
úq
;

536 #i‡
XXX


537 #i‡
__möix_vmd


538 
	`öãºu±
(
mcd_èskƒ
);

540 
	`öãºu±
(
CDROM
);

545 
	}
}

551 
PRIVATE
 
	$mcd_∂ay_mss
(
mss
)

552 
cd_∂ay_mss
 
mss
;

556 
i
;

558 #i‡
MCD_DEBUG
 >= 1

559 
	`¥ötf
("Play_mss: begin: %02d:%02d.%02dÉnd: %02d:%02d.%02d\n",

560 
mss
.
begö_mss
[
MINUTES
], mss.begö_mss[
SECONDS
],

561 
mss
.
begö_mss
[
SECTOR
], mss.
íd_mss
[
MINUTES
],

562 
mss
.
íd_mss
[
SECONDS
], mss.íd_mss[
SECTOR
]);

565 
i
=0; i < 
MCD_RETRIES
; i++)

567 
	`lock
();

570 
	`out_byã
(
MCD_DATA_PORT
, 
MCD_READ_FROM_TO
);

571 
	`out_byã
(
MCD_DATA_PORT
, 
	`bö2bcd
(
mss
.
begö_mss
[
MINUTES
]));

572 
	`out_byã
(
MCD_DATA_PORT
, 
	`bö2bcd
(
mss
.
begö_mss
[
SECONDS
]));

573 
	`out_byã
(
MCD_DATA_PORT
, 
	`bö2bcd
(
mss
.
begö_mss
[
SECTOR
]));

574 
	`out_byã
(
MCD_DATA_PORT
, 
	`bö2bcd
(
mss
.
íd_mss
[
MINUTES
]));

575 
	`out_byã
(
MCD_DATA_PORT
, 
	`bö2bcd
(
mss
.
íd_mss
[
SECONDS
]));

576 
	`out_byã
(
MCD_DATA_PORT
, 
	`bö2bcd
(
mss
.
íd_mss
[
SECTOR
]));

578 
	`u∆ock
();

580 
	`mcd_gë_°©us
(0);

581 i‡(
McdSètus
 & 
AUDIO_PLAYING
) ;

584 i‡(
i
 =
MCD_RETRIES
Ë 
EIO
;

587 
PœyMss
.
íd_mss
[
MINUTES
] = 
mss
.end_mss[MINUTES];

588 
PœyMss
.
íd_mss
[
SECONDS
] = 
mss
.end_mss[SECONDS];

589 
PœyMss
.
íd_mss
[
SECTOR
] = 
mss
.end_mss[SECTOR];

591 
McdSètus
 &~(
AUDIO_PAUSED
);

593 (
OK
);

594 
	}
}

600 
PRIVATE
 
	$mcd_∂ay_åacks
(
åacks
)

601 
cd_∂ay_åack
 
åacks
;

605 
i
, 
îr
;

606 
cd_∂ay_mss
 
mss
;

608 #i‡
MCD_DEBUG
 >= 1

609 
	`¥ötf
("PlayÅracks: begin: %02dÉnd: %02d\n",

610 
åacks
.
begö_åack
,Åøcks.
íd_åack
);

614 i‡((
îr
 = 
	`mcd_ªad_toc
()Ë!
OK
) Érr;

617 i‡(
åacks
.
begö_åack
 < 
DiskInfo
.
fú°_åack
 ||

618 
åacks
.
íd_åack
 > 
DiskInfo
.
œ°_åack
 ||

619 
åacks
.
begö_åack
 >Åøcks.
íd_åack
)

620  
EINVAL
;

624 
i
=0; i<3; i++)

626 
mss
.
begö_mss
[
i
] = 
Toc
[
åacks
.
begö_åack
].
posôi⁄_mss
[i];

627 
mss
.
íd_mss
[
i
] = 
Toc
[
åacks
.
íd_åack
+1].
posôi⁄_mss
[i];

630 (
	`mcd_∂ay_mss
(
mss
));

631 
	}
}

637 
PRIVATE
 
	$mcd_gë_disk_öfo
()

641 
i
, 
îr
;

643 i‡(
McdSètus
 & 
INFO_UPTODATE
Ë 
OK
;

646 i‡((
îr
 = 
	`mcd_£nd_comm™d
(
MCD_GET_VOL_INFO
)Ë!
OK
) Érr;

649 
i
=0; i < (
DiskInfo
); i++)

651 i‡((
îr
 = 
	`mcd_gë_ª∂y
((
u8_t
 *)(&
DiskInfo
Ë+ 
i
, 
REPLY_DELAY
)Ë!=
OK
)

652  
îr
;

653 
	`bcd2bö
((
u8_t
 *)(&
DiskInfo
Ë+ 
i
);

656 #i‡
MCD_DEBUG
 >= 1

657 
	`¥ötf
("Mitsumi disk info: first: %dÜast: %d first %02d:%02d.%02dÜength: %02d:%02d.%02d\n",

658 
DiskInfo
.
fú°_åack
,

659 
DiskInfo
.
œ°_åack
,

660 
DiskInfo
.
fú°_åack_mss
[
MINUTES
],

661 
DiskInfo
.
fú°_åack_mss
[
SECONDS
],

662 
DiskInfo
.
fú°_åack_mss
[
SECTOR
],

663 
DiskInfo
.
disk_Àngth_mss
[
MINUTES
],

664 
DiskInfo
.
disk_Àngth_mss
[
SECONDS
],

665 
DiskInfo
.
disk_Àngth_mss
[
SECTOR
]);

669 
McdSètus
 |
INFO_UPTODATE
;

670 
McdSètus
 &~
TOC_UPTODATE
;

672  
OK
;

673 
	}
}

680 
PRIVATE
 
	$mcd_ªad_q_ch™√l
(
qc
)

681 
cd_toc_íåy
 *
qc
;

689 
i
, 
îr
;

692 i‡((
îr
 = 
	`mcd_£nd_comm™d
(
MCD_GET_Q_CHANNEL
)Ë!
OK
) Érr;

695 
i
=0; i < (
cd_toc_íåy
); i++)

698 i‡((
îr
 = 
	`mcd_gë_ª∂y
((
u8_t
 *)
qc
 + 
i
, 
REPLY_DELAY
)Ë!
OK
)

699  
îr
;

701 
	`bcd2bö
((
u8_t
 *)
qc
 + 
i
);

704 #i‡
MCD_DEBUG
 >= 2

705 
	`¥ötf
("qchannel info: ctl_addr: %dÅrack: %d index: %dÜength %02d:%02d.%02dÖos: %02d:%02d.%02d\n",

706 
qc
->
c⁄åﬁ_addªss
,

707 
qc
->
åack_ƒ
,

708 
qc
->
ödex_ƒ
,

709 
qc
->
åack_time_mss
[
MINUTES
],

710 
qc
->
åack_time_mss
[
SECONDS
],

711 
qc
->
åack_time_mss
[
SECTOR
],

712 
qc
->
posôi⁄_mss
[
MINUTES
],

713 
qc
->
posôi⁄_mss
[
SECONDS
],

714 
qc
->
posôi⁄_mss
[
SECTOR
]);

717  
OK
;

718 
	}
}

724 
PRIVATE
 
	$mcd_ªad_toc
()

728 
cd_toc_íåy
 
q_öfo
;

729 
cuºít_åack
, 
cuºít_ödex
;

730 
îr
,
i
;

733 i‡(
McdSètus
 & 
TOC_UPTODATE
Ë 
OK
;

736 
i
 = 0; i < 
MAX_TRACKS
; i++Ë
Toc
[i].
ödex_ƒ
 = 0;

739 i‡((
îr
 = 
	`mcd_gë_disk_öfo
()Ë!
OK
) Érr;

742 
cuºít_åack
 = 
DiskInfo
.
œ°_åack
 - DiskInfo.
fú°_åack
 + 1;

745 i‡((
îr
 = 
	`mcd_£t_mode
(
MCD_TOC
)Ë!
OK
) Érr;

752 
i
 = 0; (ò< 600 && 
cuºít_åack
 > 0); i++)

755 i‡((
îr
 = 
	`mcd_ªad_q_ch™√l
(&
q_öfo
)Ë!
OK
) ;

758 
cuºít_ödex
 = 
q_öfo
.
ödex_ƒ
;

759 i‡(
cuºít_ödex
 >
DiskInfo
.
fú°_åack
 &&

760 
cuºít_ödex
 <
DiskInfo
.
œ°_åack
 &&

761 
q_öfo
.
åack_ƒ
 == 0)

764 i‡(
Toc
[
cuºít_ödex
].
ödex_ƒ
 == 0)

766 
Toc
[
cuºít_ödex
].
c⁄åﬁ_addªss
 = 
q_öfo
.control_address;

767 
Toc
[
cuºít_ödex
].
åack_ƒ
 = current_index;

768 
Toc
[
cuºít_ödex
].
ödex_ƒ
 = 1;

769 
Toc
[
cuºít_ödex
].
åack_time_mss
[
MINUTES
] = 
q_öfo
.track_time_mss[MINUTES];

770 
Toc
[
cuºít_ödex
].
åack_time_mss
[
SECONDS
] = 
q_öfo
.track_time_mss[SECONDS];

771 
Toc
[
cuºít_ödex
].
åack_time_mss
[
SECTOR
] = 
q_öfo
.track_time_mss[SECTOR];

772 
Toc
[
cuºít_ödex
].
posôi⁄_mss
[
MINUTES
] = 
q_öfo
.position_mss[MINUTES];

773 
Toc
[
cuºít_ödex
].
posôi⁄_mss
[
SECONDS
] = 
q_öfo
.position_mss[SECONDS];

774 
Toc
[
cuºít_ödex
].
posôi⁄_mss
[
SECTOR
] = 
q_öfo
.position_mss[SECTOR];

775 
cuºít_åack
--;

779 i‡(
îr
) Érr;

782 
cuºít_ödex
 = 
DiskInfo
.
œ°_åack
 + 1;

783 
Toc
[
cuºít_ödex
].
c⁄åﬁ_addªss
 =

784 
Toc
[
cuºít_ödex
-1].
c⁄åﬁ_addªss
;

785 
Toc
[
cuºít_ödex
].
åack_ƒ
 = 0;

786 
Toc
[
cuºít_ödex
].
ödex_ƒ
 = 
LEAD_OUT
;

787 
Toc
[
cuºít_ödex
].
posôi⁄_mss
[
MINUTES
] = 
DiskInfo
.
disk_Àngth_mss
[MINUTES];

788 
Toc
[
cuºít_ödex
].
posôi⁄_mss
[
SECONDS
] = 
DiskInfo
.
disk_Àngth_mss
[SECONDS];

789 
Toc
[
cuºít_ödex
].
posôi⁄_mss
[
SECTOR
] = 
DiskInfo
.
disk_Àngth_mss
[SECTOR];

792 i‡((
îr
 = 
	`mcd_£t_mode
(
MCD_COOKED
)Ë!
OK
) Érr;

795 
McdSètus
 |
TOC_UPTODATE
;

797 #i‡
MCD_DEBUG
 >= 1

798 
i
 = 
DiskInfo
.
fú°_åack
; i <
cuºít_ödex
; i++)

800 
	`¥ötf
("MitsumiÅoc %d:Årk %d index %dÅime %02d:%02d.%02dÖos: %02d:%02d.%02d\n",

801 
i
,

802 
Toc
[
i
].
åack_ƒ
,

803 
Toc
[
i
].
ödex_ƒ
,

804 
Toc
[
i
].
åack_time_mss
[
MINUTES
],

805 
Toc
[
i
].
åack_time_mss
[
SECONDS
],

806 
Toc
[
i
].
åack_time_mss
[
SECTOR
],

807 
Toc
[
i
].
posôi⁄_mss
[
MINUTES
],

808 
Toc
[
i
].
posôi⁄_mss
[
SECONDS
],

809 
Toc
[
i
].
posôi⁄_mss
[
SECTOR
]);

813  
OK
;

814 
	}
}

820 
PRIVATE
 
	$mcd_°›
()

822 
îr
;

824 i‡((
îr
 = 
	`mcd_£nd_comm™d
(
MCD_STOP
)Ë!
OK
 ) Érr;

826 
McdSètus
 &~(
AUDIO_PAUSED
);

828  
OK
;

829 
	}
}

835 
PRIVATE
 
	$mcd_eje˘
()

837 
îr
;

839 i‡((
îr
 = 
	`mcd_£nd_comm™d
(
MCD_EJECT
)Ë!
OK
) Érr;

840  
OK
;

841 
	}
}

847 
PRIVATE
 
	$mcd_∑u£
()

849 
îr
;

850 
cd_toc_íåy
 
qc
;

853 i‡(!(
McdSètus
 & 
AUDIO_PLAYING
)Ë 
EINVAL
;

856 i‡((
îr
 = 
	`mcd_ªad_q_ch™√l
(&
qc
)Ë!
OK
) Érr;

859 i‡((
îr
 = 
	`mcd_£nd_comm™d
(
MCD_STOP_AUDIO
)Ë!
OK
) Érr;

862 
PœyMss
.
begö_mss
[
MINUTES
] = 
qc
.
posôi⁄_mss
[MINUTES];

863 
PœyMss
.
begö_mss
[
SECONDS
] = 
qc
.
posôi⁄_mss
[SECONDS];

864 
PœyMss
.
begö_mss
[
SECTOR
] = 
qc
.
posôi⁄_mss
[SECTOR];

867 
McdSètus
 |
AUDIO_PAUSED
;

869 #i‡
MCD_DEBUG
 >= 1

870 
	`¥ötf
("Mcd_pausedát: %02d:%02d.%02d\n",

871 
PœyMss
.
begö_mss
[
MINUTES
],

872 
PœyMss
.
begö_mss
[
SECONDS
],

873 
PœyMss
.
begö_mss
[
SECTOR
]);

876  
OK
;

877 
	}
}

883 
PRIVATE
 
	$mcd_ªsume
()

885 
îr
;

888 i‡(!(
McdSètus
 & 
AUDIO_PAUSED
)Ë 
EINVAL
;

891 i‡((
îr
 = 
	`mcd_∂ay_mss
(
PœyMss
)Ë!
OK
) Érr;

893 
McdSètus
 &~(
AUDIO_PAUSED
);

895 #i‡
MCD_DEBUG
 >= 1

896 
	`¥ötf
("McdÑesumedát: %02d:%02d.%02d\n",

897 
PœyMss
.
begö_mss
[
MINUTES
],

898 
PœyMss
.
begö_mss
[
SECONDS
],

899 
PœyMss
.
begö_mss
[
SECTOR
]);

902  
OK
;

903 
	}
}

909 
PRIVATE
 
	$io˘l_ªad_sub
(
m_±r
)

910 
mesßge
 *
m_±r
;

912 
phys_byãs
 
u£r_phys
;

913 
cd_toc_íåy
 
sub
;

914 
îr
;

917 i‡(!(
McdSètus
 & 
AUDIO_PLAYING
)Ë 
EINVAL
;

920 i‡((
îr
 = 
	`mcd_ªad_q_ch™√l
(&
sub
)Ë!
OK
) Érr;

923 
u£r_phys
 = 
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
Ëm_±r->
ADDRESS
, (
sub
));

924 i‡(
u£r_phys
 =0Ë(
EFAULT
);

925 
	`phys_c›y
(
	`vú2phys
(&
sub
), 
u£r_phys
, (
phys_byãs
) (sub));

927  
OK
;

928 
	}
}

935 
PRIVATE
 
	$io˘l_ªad_toc
(
m_±r
)

936 
mesßge
 *
m_±r
;

938 
phys_byãs
 
u£r_phys
;

939 
îr
, 
toc_size
;

942 i‡((
îr
 = 
	`mcd_ªad_toc
()Ë!
OK
) Érr;

945 
toc_size
 = (
DiskInfo
.
œ°_åack
 + 1Ë* (
cd_toc_íåy
);

948 
u£r_phys
 = 
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
Ëm_±r->
ADDRESS
, 
toc_size
);

949 i‡(
u£r_phys
 =0Ë(
EFAULT
);

950 
	`phys_c›y
(
	`vú2phys
(&
Toc
), 
u£r_phys
, (
phys_byãs
Ë
toc_size
);

952  
OK
;

953 
	}
}

959 
PRIVATE
 
	$io˘l_disk_öfo
(
m_±r
)

960 
mesßge
 *
m_±r
;

962 
phys_byãs
 
u£r_phys
;

963 
îr
;

966 i‡((
îr
 = 
	`mcd_gë_disk_öfo
()Ë!
OK
) Érr;

969 
u£r_phys
 = 
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
Ëm_±r->
ADDRESS
, (
DiskInfo
));

970 i‡(
u£r_phys
 =0Ë(
EFAULT
);

971 
	`phys_c›y
(
	`vú2phys
(&
DiskInfo
), 
u£r_phys
, (
phys_byãs
) (DiskInfo));

973  
OK
;

974 
	}
}

980 
PRIVATE
 
	$io˘l_∂ay_mss
(
m_±r
)

981 
mesßge
 *
m_±r
;

983 
phys_byãs
 
u£r_phys
;

984 
cd_∂ay_mss
 
mss
;

987 
u£r_phys
 = 
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
Ëm_±r->
ADDRESS
, (
mss
));

988 i‡(
u£r_phys
 =0Ë(
EFAULT
);

989 
	`phys_c›y
(
u£r_phys
, 
	`vú2phys
(&
mss
), (
phys_byãs
) (mss));

992  
	`mcd_∂ay_mss
(
mss
);

993 
	}
}

999 
PRIVATE
 
	$io˘l_∂ay_ti
(
m_±r
)

1000 
mesßge
 *
m_±r
;

1002 
phys_byãs
 
u£r_phys
;

1003 
cd_∂ay_åack
 
åacks
;

1006 
u£r_phys
 = 
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
Ëm_±r->
ADDRESS
, (
åacks
));

1007 i‡(
u£r_phys
 =0Ë(
EFAULT
);

1008 
	`phys_c›y
(
u£r_phys
, 
	`vú2phys
(&
åacks
), (
phys_byãs
) (tracks));

1011  
	`mcd_∂ay_åacks
(
åacks
);

1012 
	}
}

1018 
PRIVATE
 
devi˚
 *
	$mcd_¥ï¨e
(
devi˚
)

1019 
devi˚
;

1022 
mcd_cou¡
 = 0;

1025 i‡(
devi˚
 < 
DEV_PER_DRIVE
) {

1026 
mcd_dv
 = &
mcd_∑π
[
devi˚
];

1028 i‡((Ë(
devi˚
 -
MINOR_hd1a
Ë< 
SUB_PER_DRIVE
) {

1029 
mcd_dv
 = &
mcd_sub∑π
[
devi˚
];

1031  
NIL_DEV
;

1034  
mcd_dv
;

1035 
	}
}

1041 
PRIVATE
 
	$mcd_scheduÀ
(
¥oc_ƒ
, 
i›
)

1042 
¥oc_ƒ
;

1043 
i‹eque°_s
 *
i›
;

1049 
r
, 
›code
;

1050 
pos
;

1051 
nbyãs
;

1052 
phys_byãs
 
u£r_phys
;

1055 
nbyãs
 = 
i›
->
io_nbyãs
;

1058 
pos
 = 
i›
->
io_posôi⁄
;

1061 
u£r_phys
 = 
	`num≠
(
¥oc_ƒ
, (
vú_byãs
Ë
i›
->
io_buf
, 
nbyãs
);

1062 i‡(
u£r_phys
 =0Ë(
i›
->
io_nbyãs
 = 
EINVAL
);

1065 
›code
 = 
i›
->
io_ªque°
 & ~
OPTIONAL_IO
;

1068 i‡(
›code
 !
DEV_READ
Ë 
EIO
;

1071 i‡(
pos
 >
mcd_dv
->
dv_size
Ë(
OK
);

1072 i‡(
pos
 + 
nbyãs
 > 
mcd_dv
->
dv_size
)Çbytes = mcd_dv->dv_size -Öos;

1073 
pos
 +
mcd_dv
->
dv_ba£
;

1075 i‡(
mcd_cou¡
 > 0 && 
pos
 !
mcd_√xços
) {

1077 i‡((
r
 = 
	`mcd_föish
()Ë!
OK
) (r);

1081 
mcd_√xços
 = 
pos
 + 
nbyãs
;

1083 i‡(
mcd_cou¡
 == 0)

1086 
mcd_ç
 = 
mcd_å™s
;

1090 
mcd_ç
->
å_i›
 = 
i›
;

1091 
mcd_ç
->
å_pos
 = 
pos
;

1092 
mcd_ç
->
å_cou¡
 = 
nbyãs
;

1093 
mcd_ç
->
å_phys
 = 
u£r_phys
;

1096 
mcd_ç
++;

1097 
mcd_cou¡
 +
nbyãs
;

1098 (
OK
);

1099 
	}
}

1105 
PRIVATE
 
	$mcd_föish
()

1109 
å™s
 *
ç
 = 
mcd_å™s
;

1110 
îr
, 
îr‹s
;

1111 
u8_t
 
mss
[3];

1112 
pos
;

1113 
cou¡
, 
n
;

1115 i‡(
mcd_cou¡
 =0Ë(
OK
);

1118 
	`mcd_gë_°©us
(1);

1119 i‡(
McdSètus
 & (
AUDIO_DISK
 | 
NO_DISK
))

1120 (
ç
->
å_i›
->
io_nbyãs
 = 
EIO
);

1123 i‡((
îr
 = 
	`mcd_£t_mode
(
MCD_COOKED
)Ë!
OK
)

1124 (
ç
->
å_i›
->
io_nbyãs
 = 
îr
);

1126 
mcd_cou¡
 > 0)

1129 
pos
 = 
ç
->
å_pos
 & ~
MCD_BLOCK_MASK
;

1132 
cou¡
 = (
pos
 - 
ç
->
å_pos
Ë+ 
mcd_cou¡
;

1133 
cou¡
 = (cou¡ + 
MCD_BLOCK_SIZE
 - 1Ë& ~
MCD_BLOCK_MASK
;

1136 i‡(
cou¡
 > 
MCD_BLOCK_SIZE
) count = MCD_BLOCK_SIZE;

1139 
	`block2mss
(
pos
 >> 
MCD_BLOCK_SHIFT
, 
mss
);

1142 
îr‹s
 = 0;

1143 
îr‹s
 < 
MCD_RETRIES
)

1145 
	`lock
();

1146 
	`out_byã
(
MCD_DATA_PORT
, 
MCD_READ_FROM_TO
);

1147 
	`out_byã
(
MCD_DATA_PORT
, 
	`bö2bcd
(
mss
[
MINUTES
]));

1148 
	`out_byã
(
MCD_DATA_PORT
, 
	`bö2bcd
(
mss
[
SECONDS
]));

1149 
	`out_byã
(
MCD_DATA_PORT
, 
	`bö2bcd
(
mss
[
SECTOR
]));

1150 
	`out_byã
(
MCD_DATA_PORT
, 0);

1151 
	`out_byã
(
MCD_DATA_PORT
, 0);

1152 
	`out_byã
(
MCD_DATA_PORT
, 1);

1153 
	`u∆ock
();

1156 i‡(
	`mcd_d©a_ªady
(
REPLY_DELAY
Ë=
OK
) ;

1157 
	`¥ötf
("Mcd: dataÅime out\n");

1158 
îr‹s
++;

1160 i‡(
îr‹s
 =
MCD_RETRIES
Ë(
ç
->
å_i›
->
io_nbyãs
 = 
EIO
);

1163 
	`out_byã
(
MCD_CONTROL_PORT
, 0x04);

1165 
pos
 < 
ç
->
å_pos
)

1168 
n
 = 
ç
->
å_pos
 - 
pos
;

1169 i‡(
n
 > 
DMA_BUF_SIZE
)Ç = DMA_BUF_SIZE;

1170 
	`p‹t_ªad_byã
(
MCD_DATA_PORT
, 
tmp_phys
, 
n
);

1171 #i‡
XXX


1172 
	`¥ötf
("count = %u,Ç = %u,År_pos = %lu, io_nbytes = %u,År_count = %u, mcd_count = %u\n",

1173 
cou¡
, 
n
, 0, 0, 0, 
mcd_cou¡
);

1175 
pos
 +
n
;

1176 
cou¡
 -
n
;

1179 
mcd_cou¡
 > 0 && 
cou¡
 > 0)

1182 
n
 = 
ç
->
å_cou¡
;

1183 i‡(
n
 > 
cou¡
)Ç = count;

1184 
	`p‹t_ªad_byã
(
MCD_DATA_PORT
, 
ç
->
å_phys
, 
n
);

1185 #i‡
XXX


1186 
	`¥ötf
("count = %u,Ç = %u,År_pos = %lu, io_nbytes = %u,År_count = %u, mcd_count = %u\n",

1187 
cou¡
, 
n
, 
ç
->
å_pos
,Åp->
å_i›
->
io_nbyãs
,Åp->
å_cou¡
, 
mcd_cou¡
);

1189 
ç
->
å_phys
 +
n
;

1190 
ç
->
å_pos
 +
n
;

1191 
ç
->
å_i›
->
io_nbyãs
 -
n
;

1192 i‡((
ç
->
å_cou¡
 -
n
) == 0)Åp++;

1193 
cou¡
 -
n
;

1194 
mcd_cou¡
 -
n
;

1197 
cou¡
 > 0)

1200 
n
 = 
cou¡
;

1201 i‡(
n
 > 
DMA_BUF_SIZE
)Ç = DMA_BUF_SIZE;

1202 
	`p‹t_ªad_byã
(
MCD_DATA_PORT
, 
tmp_phys
, 
n
);

1203 #i‡
XXX


1204 
	`¥ötf
("count = %u,Ç = %u,År_pos = %lu, io_nbytes = %u,År_count = %u, mcd_count = %u\n",

1205 
cou¡
, 
n
, 0, 0, 0, 
mcd_cou¡
);

1207 
cou¡
 -
n
;

1211 
	`out_byã
(
MCD_CONTROL_PORT
, 0x0c);

1213 
	`mcd_gë_°©us
(1);

1214 i‡(!(
McdSètus
 & 
DISK_ERROR
)Ë
d⁄e
 = 1;

1218  
OK
;

1219 
	}
}

1225 
PRIVATE
 
	$mcd_geomëry
(
íåy
)

1226 
∑πôi⁄
 *
íåy
;

1231 
íåy
->
cylödîs
 = (
mcd_∑π
[0].
dv_size
 >> 
SECTOR_SHIFT
) / (64 * 32);

1232 
íåy
->
hóds
 = 64;

1233 
íåy
->
£˘‹s
 = 32;

1234 
	}
}

1240 
PRIVATE
 
u8_t
 
	$bö2bcd
(
u8_t
 
b
)

1243 
u
,
t
;

1245 
u
 = 
b
%10;

1246 
t
 = 
b
/10;

1247  (
u8_t
)(
u
 | (
t
 << 4));

1248 
	}
}

1251 
PRIVATE
 
	$bcd2bö
(
u8_t
 *
bcd
)

1255 *
bcd
 = (*bcd >> 4) * 10 + (*bcd & 0xf);

1256 
	}
}

1259 
PRIVATE
 
	$block2mss
(
block
, 
mss
)

1260 
block
;

1261 
u8_t
 *
mss
;

1265 
block
 +
MCD_SKIP
;

1266 
mss
[
MINUTES
] = 
block
/(
SECONDS_PER_MINUTE
 * 
SECTORS_PER_SECOND
);

1267 
block
 %(
SECONDS_PER_MINUTE
 * 
SECTORS_PER_SECOND
);

1268 
mss
[
SECONDS
] = 
block
/(
SECTORS_PER_SECOND
);

1269 
mss
[
SECTOR
] = 
block
%(
SECTORS_PER_SECOND
);

1270 
	}
}

1273 
PRIVATE
 
	$mss2block
(
u8_t
 *
mss
)

1279  ((((Ë
mss
[
MINUTES
] * 
SECONDS_PER_MINUTE


1280 + (Ë
mss
[
SECONDS
]Ë* 
SECTORS_PER_SECOND
)

1281 + (Ë
mss
[
SECTOR
]Ë- 
MCD_SKIP
;

1282 
	}
}

	@memccpy.c

1 
	~<lib.h
>

8 
	~<™si.h
>

9 
	~<°ddef.h
>

11 
_PROTOTYPE
–*
memc˝y
, (*
d°
, c⁄° *
§c
,

12 
uch¨°›
, 
size_t
 
size
));

13 #i‚de‡
CHARBITS


14 
	#UNSCHAR
(
c
Ë(()(c))

	)

16 
	#UNSCHAR
(
c
Ë((c)&
CHARBITS
)

	)

19 *
	$memc˝y
(
d°
, 
§c
, 
uch¨°›
, 
size
)

20 * 
d°
;

21 
_CONST
 * 
§c
;

22 
uch¨°›
;

23 
_SIZET
 
size
;

25 *
d
;

26 
_CONST
 *
s
;

27 
_SIZET
 
n
;

28 
uc
;

30 i‡(
size
 <0Ë–(*Ë
NULL
);

32 
s
 = (*Ë
§c
;

33 
d
 = (*Ë
d°
;

34 
uc
 = 
	`UNSCHAR
(
uch¨°›
);

35 
n
 = 
size
;Ç > 0;Ç--)

36 i‡(
	`UNSCHAR
(*
d
++ = *
s
++Ë=(Ë
uc
) ( (*) d);

38 –(*Ë
NULL
);

39 
	}
}

	@memchr.c

7 
	~<°rög.h
>

10 
	$memchr
(c⁄° *
s
, 
c
, 
size_t
 
n
)

12 c⁄° *
s1
 = 
s
;

14 
c
 = () c;

15 i‡(
n
) {

16 
n
++;

17 --
n
 > 0) {

18 i‡(*
s1
++ !
c
) ;

19  (*Ë--
s1
;

22  
NULL
;

23 
	}
}

	@memcmp.c

7 
	~<°rög.h
>

10 
	$memcmp
(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
n
)

12 c⁄° *
p1
 = 
s1
, *
p2
 = 
s2
;

14 i‡(
n
) {

15 
n
++;

16 --
n
 > 0) {

17 i‡(*
p1
++ =*
p2
++) ;

18  *--
p1
 - *--
p2
;

22 
	}
}

	@memcpy.c

7 
	~<°rög.h
>

10 
	$mem˝y
(*
s1
, c⁄° *
s2
, 
size_t
 
n
)

12 *
p1
 = 
s1
;

13 c⁄° *
p2
 = 
s2
;

16 i‡(
n
) {

17 
n
++;

18 --
n
 > 0) {

19 *
p1
++ = *
p2
++;

22  
s1
;

23 
	}
}

	@memcspn.c

7 
	~<°rög.h
>

9 
size_t


10 
	$memc•n
(c⁄° *
°rög
, 
size_t
 
°æí
, c⁄° *
nŸö
, size_à
nŸöÀn
)

12 c⁄° *
s1
, *
s2
;

13 
i
,
j
;

15 
s1
 = 
°rög
, 
i
 = 0; i<
°æí
; s1++, i++) {

16 
s2
 = 
nŸö
, 
j
 = 0; *s2 !*
s1
 && j < 
nŸöÀn
; s2++, j++)

18 i‡(
j
 !
nŸöÀn
)

21  
s1
 - 
°rög
;

22 
	}
}

	@memmove.c

7 
	~<°rög.h
>

10 
	$memmove
(*
s1
, c⁄° *
s2
, 
size_t
 
n
)

12 *
p1
 = 
s1
;

13 c⁄° *
p2
 = 
s2
;

15 i‡(
n
>0) {

16 i‡(
p2
 <
p1
 &&Ö2 + 
n
 >Ö1) {

18 
p1
 +
n
;

19 
p2
 +
n
;

20 
n
++;

21 --
n
 > 0) {

22 *--
p1
 = *--
p2
;

25 
n
++;

26 --
n
 > 0) {

27 *
p1
++ = *
p2
++;

31  
s1
;

32 
	}
}

	@memory.c

16 
	~"kî√l.h
"

17 
	~"drivî.h
"

18 
	~<sys/io˘l.h
>

20 
	#NR_RAMS
 4

	)

22 
PRIVATE
 
devi˚
 
	gm_geom
[
NR_RAMS
];

23 
PRIVATE
 
	gm_devi˚
;

25 
FORWARD
 
_PROTOTYPE
–
devi˚
 *
m_¥ï¨e
, (device) );

26 
FORWARD
 
_PROTOTYPE
–
m_scheduÀ
, (
¥oc_ƒ
, 
i‹eque°_s
 *
i›
) );

27 
FORWARD
 
_PROTOTYPE
–
m_do_›í
, (
drivî
 *
dp
, 
mesßge
 *
m_±r
) );

28 
FORWARD
 
_PROTOTYPE
–
m_öô
, () );

29 
FORWARD
 
_PROTOTYPE
–
m_io˘l
, (
drivî
 *
dp
, 
mesßge
 *
m_±r
) );

30 
FORWARD
 
_PROTOTYPE
–
m_geomëry
, (
∑πôi⁄
 *
íåy
) );

34 
PRIVATE
 
drivî
 
	gm_dèb
 = {

35 
no_«me
,

36 
m_do_›í
,

37 
do_n›
,

38 
m_io˘l
,

39 
m_¥ï¨e
,

40 
m_scheduÀ
,

41 
n›_föish
,

42 
n›_˛ónup
,

43 
m_geomëry
,

50 
PUBLIC
 
	$mem_èsk
()

52 
	`m_öô
();

53 
	`drivî_èsk
(&
m_dèb
);

54 
	}
}

60 
PRIVATE
 
devi˚
 *
	$m_¥ï¨e
(
devi˚
)

61 
devi˚
;

65 i‡(
devi˚
 < 0 || devi˚ >
NR_RAMS
Ë(
NIL_DEV
);

66 
m_devi˚
 = 
devi˚
;

68 (&
m_geom
[
devi˚
]);

69 
	}
}

75 
PRIVATE
 
	$m_scheduÀ
(
¥oc_ƒ
, 
i›
)

76 
¥oc_ƒ
;

77 
i‹eque°_s
 *
i›
;

81 
devi˚
, 
cou¡
, 
›code
;

82 
phys_byãs
 
mem_phys
, 
u£r_phys
;

83 
devi˚
 *
dv
;

86 
›code
 = 
i›
->
io_ªque°
 & ~
OPTIONAL_IO
;

89 
devi˚
 = 
m_devi˚
;

90 
dv
 = &
m_geom
[
devi˚
];

93 
u£r_phys
 = 
	`num≠
(
¥oc_ƒ
, (
vú_byãs
Ë
i›
->
io_buf
,

94 (
vú_byãs
Ë
i›
->
io_nbyãs
);

95 i‡(
u£r_phys
 =0Ë(
i›
->
io_nbyãs
 = 
EINVAL
);

97 i‡(
devi˚
 =
NULL_DEV
) {

99 i‡(
›code
 =
DEV_WRITE
Ë
i›
->
io_nbyãs
 = 0;

100 
cou¡
 = 0;

103 i‡(
i›
->
io_posôi⁄
 >
dv
->
dv_size
Ë(
OK
);

104 
cou¡
 = 
i›
->
io_nbyãs
;

105 i‡(
i›
->
io_posôi⁄
 + 
cou¡
 > 
dv
->
dv_size
)

106 
cou¡
 = 
dv
->
dv_size
 - 
i›
->
io_posôi⁄
;

110 
mem_phys
 = 
dv
->
dv_ba£
 + 
i›
->
io_posôi⁄
;

113 
i›
->
io_nbyãs
 -
cou¡
;

115 i‡(
cou¡
 =0Ë(
OK
);

118 i‡(
›code
 =
DEV_READ
)

119 
	`phys_c›y
(
mem_phys
, 
u£r_phys
, (
phys_byãs
Ë
cou¡
);

121 
	`phys_c›y
(
u£r_phys
, 
mem_phys
, (
phys_byãs
Ë
cou¡
);

123 (
OK
);

124 
	}
}

130 
PRIVATE
 
	$m_do_›í
(
dp
, 
m_±r
)

131 
drivî
 *
dp
;

132 
mesßge
 *
m_±r
;

138 i‡(
	`m_¥ï¨e
(
m_±r
->
DEVICE
Ë=
NIL_DEV
Ë(
ENXIO
);

140 #i‡(
CHIP
 =
INTEL
)

141 i‡(
m_devi˚
 =
MEM_DEV
 || m_devi˚ =
KMEM_DEV
)

142 
	`íabÀ_i›
(
	`¥oc_addr
(
m_±r
->
PROC_NR
));

145 (
OK
);

146 
	}
}

152 
PRIVATE
 
	$m_öô
()

155 
_íd
;

157 
m_geom
[
KMEM_DEV
].
dv_ba£
 = 
	`vú2phys
(0);

158 
m_geom
[
KMEM_DEV
].
dv_size
 = 
	`vú2phys
(&
_íd
);

160 #i‡(
CHIP
 =
INTEL
)

161 i‡(!
¥Ÿe˘ed_mode
) {

162 
m_geom
[
MEM_DEV
].
dv_size
 = 0x100000;

164 #i‡
_WORD_SIZE
 == 2

165 
m_geom
[
MEM_DEV
].
dv_size
 = 0x1000000;

167 
m_geom
[
MEM_DEV
].
dv_size
 = 0xFFFFFFFF;

171 #i‡(
CHIP
 =
M68000
)

172 
m_geom
[
MEM_DEV
].
dv_size
 = 
MEM_BYTES
;

177 
	}
}

183 
PRIVATE
 
	$m_io˘l
(
dp
, 
m_±r
)

184 
drivî
 *
dp
;

185 
mesßge
 *
m_±r
;

189 
byãsize
;

190 
ba£
, 
size
;

191 
mem‹y
 *
memp
;

192 
psöfo
Ösöfÿ{ 
NR_TASKS
, 
NR_PROCS
, (
vú_byãs
Ë
¥oc
, 0, 0 };

193 
phys_byãs
 
psöfo_phys
;

195 
m_±r
->
REQUEST
) {

196 
MIOCRAMSIZE
:

198 i‡(
m_±r
->
PROC_NR
 !
FS_PROC_NR
Ë(
EPERM
);

200 
byãsize
 = 
m_±r
->
POSITION
 * 
BLOCK_SIZE
;

201 
size
 = (
byãsize
 + 
CLICK_SHIFT
-1) >> CLICK_SHIFT;

204 
memp
&
mem
[
NR_MEMS
];

205 (--
memp
)->
size
 < size) {

206 i‡(
memp
 =
mem
Ë
	`∑nic
("RAM disk i†toÿbig", 
NO_NUM
);

208 
ba£
 = 
memp
->base;

209 
memp
->
ba£
 +
size
;

210 
memp
->
size
 -= size;

212 
m_geom
[
RAM_DEV
].
dv_ba£
 = (Ë
ba£
 << 
CLICK_SHIFT
;

213 
m_geom
[
RAM_DEV
].
dv_size
 = 
byãsize
;

215 
MIOCSPSINFO
:

217 i‡(
m_±r
->
PROC_NR
 =
MM_PROC_NR
) {

218 
psöfo
.
m¥oc
 = (
vú_byãs
Ë
m_±r
->
ADDRESS
;

220 i‡(
m_±r
->
PROC_NR
 =
FS_PROC_NR
) {

221 
psöfo
.
Âroc
 = (
vú_byãs
Ë
m_±r
->
ADDRESS
;

223 (
EPERM
);

226 
MIOCGPSINFO
:

228 
psöfo_phys
 = 
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
Ëm_±r->
ADDRESS
,

229 (
psöfo
));

230 i‡(
psöfo_phys
 =0Ë(
EFAULT
);

231 
	`phys_c›y
(
	`vú2phys
(&
psöfo
), 
psöfo_phys
, (
phys_byãs
) (psinfo));

234 (
	`do_dio˙é
(&
m_dèb
, 
m_±r
));

236 (
OK
);

237 
	}
}

243 
PRIVATE
 
	$m_geomëry
(
íåy
)

244 
∑πôi⁄
 *
íåy
;

247 
íåy
->
cylödîs
 = (
m_geom
[
m_devi˚
].
dv_size
 >> 
SECTOR_SHIFT
) / (64 * 32);

248 
íåy
->
hóds
 = 64;

249 
íåy
->
£˘‹s
 = 32;

250 
	}
}

	@memset.c

7 
	~<°rög.h
>

10 
	$mem£t
(*
s
, 
c
, 
size_t
 
n
)

12 *
s1
 = 
s
;

14 i‡(
n
>0) {

15 
n
++;

16 --
n
 > 0) {

17 *
s1
++ = 
c
;

20  
s
;

21 
	}
}

	@misc.c

6 
	~<˘y≥.h
>

7 
	~<time.h
>

8 
	~<°dlib.h
>

9 
	~<°rög.h
>

11 #if 
deföed
(
__BSD4_2
)

13 
	stimevÆ
 {

14 
	mtv_£c
;

15 
	mtv_u£c
;

18 
	stimez⁄e
 {

19 
	mtz_möuãswe°
;

20 
	mtz_d°time
;

23 
_gëtimeofday
(
timevÆ
 *
ç
, 
timez⁄e
 *
tzp
);

25 #ñif !
deföed
(
_POSIX_SOURCE
Ë&& !deföed(
__USG
)

26 #if !
deföed
(
_MINIX
)

27 
	stimeb
 {

28 
	mtime
;

29 
	mmûlôm
;

30 
	mtimez⁄e
;

31 
	md°Êag
;

33 
_·ime
(
timeb
 *
bp
);

37 
	~"loc_time.h
"

39 
	#RULE_LEN
 120

	)

40 
	#TZ_LEN
 10

	)

46 
	g¡°r
[
TZ_LEN
 + 1] = "GMT";

47 
	gd°°r
[
TZ_LEN
 + 1] = "GDT";

49 
	g_timez⁄e
 = 0;

50 
	g_d°_off
 = 60 * 60;

51 
	g_daylight
 = 0;

52 *
	g_tz«me
[2] = {
¡°r
, 
d°°r
};

54 #if 
deföed
(
__USG
Ë|| deföed(
_POSIX_SOURCE
)

55 *
	gtz«me
[2] = {
¡°r
, 
d°°r
};

57 #if 
deföed
(
__USG
)

58 
	gtimez⁄e
 = 0;

59 
	gdaylight
 = 0;

63 
	sd°ty≥
 {

64 
	mds_ty≥
;

65 
	mds_d©e
[3];

66 
	mds_£c
;

67 } 
	gd°°¨t
 = { 'U', { 0, 0, 0 }, 2 * 60 * 60 }

68 , 
	gd°íd
 = { 'U', { 0, 0, 0 }, 2 * 60 * 60 };

70 c⁄° *
	g_days
[] = {

75 c⁄° *
	g_m⁄ths
[] = {

82 c⁄° 
	g_yèb
[2][12] = {

87 #if !
deföed
(
_POSIX_SOURCE
Ë&& !deföed(
__USG
)

88 
	#USE_TABLE
 1

	)

91 #if 
USE_TABLE


92 
	gu£èbÀ
 = 1;

94 
	sèbÀ
 {

95 c⁄° *
	mtz_«me
;

96 c⁄° 
	mdaylight
;

97 c⁄° 
	mz⁄eoff£t
;

98 } 
	tTABLE
;

100 
	#HOUR
(
x
Ë((xË* 60*60)

	)

102 
TABLE
 
	gTimez⁄eTabÀ
[] = {

103 {"GMT", 0, 
HOUR
(0) },

104 {"BST", 60*60, 
HOUR
(0) },

105 {"WAT", 0, 
HOUR
(1) },

106 {"AT", 0, 
HOUR
(2) },

107 {"BST", 0, 
HOUR
(3) },

108 {"NFT", 0, 
HOUR
(3.5) },

109 {"NDT", 60*60, 
HOUR
(3.5) },

110 {"AST", 0, 
HOUR
(4) },

111 {"ADT", 60*60, 
HOUR
(4) },

112 {"EST", 0, 
HOUR
(5) },

113 {"EDT", 60*60, 
HOUR
(5) },

114 {"CST", 0, 
HOUR
(6) },

115 {"CDT", 60*60, 
HOUR
(6) },

116 {"MST", 0, 
HOUR
(7) },

117 {"MDT", 60*60, 
HOUR
(7) },

118 {"PST", 0, 
HOUR
(8) },

119 {"PDT", 60*60, 
HOUR
(8) },

120 {"YST", 0, 
HOUR
(9) },

121 {"YDT", 60*60, 
HOUR
(9) },

122 {"HST", 0, 
HOUR
(10) },

123 {"HDT", 60*60, 
HOUR
(10) },

124 {"NT", 0, 
HOUR
(11) },

125 {"IDLW", 0, 
HOUR
(12) },

126 {"MET", 0, -
HOUR
(1) },

127 {"MDT", 60*60, -
HOUR
(1) },

128 {"EET", 0, -
HOUR
(2) },

129 {"BT", 0, -
HOUR
(3) },

130 {"IT", 0, -
HOUR
(3.5) },

131 {"ZP4", 0, -
HOUR
(4) },

132 {"ZP5", 0, -
HOUR
(5) },

133 {"IST", 0, -
HOUR
(5.5) },

134 {"ZP6", 0, -
HOUR
(6) },

135 {"NST", 0, -
HOUR
(6.5) },

136 {"SST", 0, -
HOUR
(7) },

137 {"WAST", 0, -
HOUR
(7) },

138 {"WADT", 60*60, -
HOUR
(7) },

139 {"JT", 0, -
HOUR
(7.5) },

140 {"CCT", 0, -
HOUR
(8) },

141 {"JST", 0, -
HOUR
(9) },

142 {"CAST", 0, -
HOUR
(9.5) },

143 {"CADT", 60*60, -
HOUR
(9.5) },

144 {"EAST", 0, -
HOUR
(10) },

145 {"EADT", 60*60, -
HOUR
(10) },

146 {"NZT", 0, -
HOUR
(12) },

147 {"NZDT", 60*60, -
HOUR
(12) },

148 { 
NULL
, 0, 0 }

158 
	$Z⁄eFromTabÀ
(
timez⁄e
)

160 
TABLE
 *
çå
 = 
Timez⁄eTabÀ
;

162 
çå
->
tz_«me
 !
NULL
) {

163 i‡(
çå
->
z⁄eoff£t
 =
timez⁄e
) {

164 i‡(
çå
->
daylight
 == 0) {

165 
	`°∫˝y
(
¡°r
,
çå
->
tz_«me
, 
TZ_LEN
);

166 
¡°r
[
TZ_LEN
] = '\0';

168 
	`°∫˝y
(
d°°r
,
çå
->
tz_«me
, 
TZ_LEN
);

169 
d°°r
[
TZ_LEN
] = '\0';

172 
çå
++;

174 
	}
}

178 
	$∑r£Z⁄eName
(*
buf
, c⁄° *
p
)

180 
n
 = 0;

182 i‡(*
p
 =':'Ë 
NULL
;

183 *
p
 && !
	`isdigô
(*p) && *p != ',' && *p != '-' && *p != '+') {

184 i‡(
n
 < 
TZ_LEN
)

185 *
buf
++ = *
p
;

186 
p
++;

187 
n
++;

189 i‡(
n
 < 3Ë 
NULL
;

190 *
buf
 = '\0';

191  
p
;

192 
	}
}

195 
	$∑r£Time
(*
tm
, c⁄° *
p
, 
d°ty≥
 *
d°
)

197 
n
 = 0;

198 c⁄° *
q
 = 
p
;

199 
ds_ty≥
 = (
d°
 ? dst->ds_type : '\0');

201 i‡(
d°
Ëd°->
ds_ty≥
 = 'U';

203 *
tm
 = 0;

204 *
p
 >= '0' && *p <= '9') {

205 
n
 = 10 *Ç + (*
p
++ - '0');

207 i‡(
q
 =
p
Ë 
NULL
;

208 i‡(
n
 < 0 ||Ç >24Ë 
NULL
;

209 *
tm
 = 
n
 * 60 * 60;

210 i‡(*
p
 == ':') {

211 
p
++;

212 
n
 = 0;

213 *
p
 >= '0' && *p <= '9') {

214 
n
 = 10 *Ç + (*
p
++ - '0');

216 i‡(
q
 =
p
Ë 
NULL
;

217 i‡(
n
 < 0 ||Ç >60Ë 
NULL
;

218 *
tm
 +
n
 * 60;

219 i‡(*
p
 == ':') {

220 
p
++;

221 
n
 = 0;

222 *
p
 >= '0' && *p <= '9') {

223 
n
 = 10 *Ç + (*
p
++ - '0');

225 i‡(
q
 =
p
Ë 
NULL
;

226 i‡(
n
 < 0 ||Ç >60Ë 
NULL
;

227 *
tm
 +
n
;

230 i‡(
d°
) {

231 
d°
->
ds_ty≥
 = ds_type;

232 
d°
->
ds_£c
 = *
tm
;

234  
p
;

235 
	}
}

238 
	$∑r£D©e
(*
buf
, c⁄° *
p
, 
d°ty≥
 *
d°öfo
)

240 c⁄° *
q
;

241 
n
 = 0;

242 
˙t
 = 0;

243 c⁄° 
bnds
[3][2] = { { 1, 12 },

247 
ds_ty≥
;

249 i‡(*
p
 != 'M') {

250 i‡(*
p
 == 'J') {

251 *
buf
++ = *
p
++;

252 
ds_ty≥
 = 'J';

254 
ds_ty≥
 = 'Z';

255 
q
 = 
p
;

256 *
p
 >= '0' && *p <= '9') {

257 
n
 = 10 *Ç + (*
p
 - '0');

258 *
buf
++ = *
p
++;

260 i‡(
q
 =
p
Ë 
NULL
;

261 i‡(
n
 < (
ds_ty≥
 ='J'Ë||Ç > 365Ë 
NULL
;

262 
d°öfo
->
ds_ty≥
 = ds_type;

263 
d°öfo
->
ds_d©e
[0] = 
n
;

264  
p
;

266 
ds_ty≥
 = 'M';

268 *
buf
++ = *
p
++;

269 
q
 = 
p
;

270 
n
 = 0;

271 *
p
 >= '0' && *p <= '9') {

272 
n
 = 10 *Ç + (*
p
 - '0');

273 *
buf
++ = *
p
++;

275 i‡(
q
 =
p
Ë 
NULL
;

276 i‡(
n
 < 
bnds
[
˙t
][0] ||Ç > bnds[˙t][1]Ë 
NULL
;

277 
d°öfo
->
ds_d©e
[
˙t
] = 
n
;

278 
˙t
++;

279 } 
˙t
 < 3 && *
p
 == '.');

280 i‡(
˙t
 !3Ë 
NULL
;

281 *
buf
 = '\0';

282 
d°öfo
->
ds_ty≥
 = ds_type;

283  
p
;

284 
	}
}

287 
	$∑r£RuÀ
(*
buf
, c⁄° *
p
)

289 
time
;

290 c⁄° *
q
;

292 i‡(!(
p
 = 
	`∑r£D©e
(
buf
,Ö, &
d°°¨t
))Ë 
NULL
;

293 
buf
 +
	`°æí
(buf);

294 i‡(*
p
 == '/') {

295 
q
 = ++
p
;

296 i‡(!(
p
 = 
	`∑r£Time
(&
time
,Ö, &
d°°¨t
))Ë 
NULL
;

297  
p
 !
q
Ë*
buf
++ = *q++;

299 i‡(*
p
 !','Ë 
NULL
;

300 
p
++;

301 i‡(!(
p
 = 
	`∑r£D©e
(
buf
,Ö, &
d°íd
))Ë 
NULL
;

302 
buf
 +
	`°æí
(buf);

303 i‡(*
p
 == '/') {

304 
q
 = ++
p
;

305 i‡(!(
p
 = 
	`∑r£Time
(&
time
,Ö, &
d°íd
))Ë 
NULL
;

306 *
buf
++ = *
q
++);

308 i‡(*
p
Ë 
NULL
;

309  
p
;

310 
	}
}

317 
	$∑r£TZ
(c⁄° *
p
)

319 
tz
, 
d°
 = 60 * 60, 
sign
 = 1;

320 
œ°TZ
[2 * 
RULE_LEN
];

321 
buf„r
[
RULE_LEN
];

323 i‡(!
p
) ;

325 #if 
USE_TABLE


326 
u£èbÀ
 = 0;

328 i‡(*
p
 == ':') {

337 i‡(!
	`°rcmp
(
œ°TZ
, 
p
)) ;

339 *
_tz«me
[0] = '\0';

340 *
_tz«me
[1] = '\0';

341 
d°°¨t
.
ds_ty≥
 = 'U';

342 
d°°¨t
.
ds_£c
 = 2 * 60 * 60;

343 
d°íd
.
ds_ty≥
 = 'U';

344 
d°íd
.
ds_£c
 = 2 * 60 * 60;

346 i‡(
	`°æí
(
p
Ë> 2 * 
RULE_LEN
) ;

347 
	`°r˝y
(
œ°TZ
, 
p
);

349 i‡(!(
p
 = 
	`∑r£Z⁄eName
(
buf„r
,Ö))) ;

351 i‡(*
p
 == '-') {

352 
sign
 = -1;

353 
p
++;

354 } i‡(*
p
 == '+')Ö++;

356 i‡(!(
p
 = 
	`∑r£Time
(&
tz
,Ö, 
NULL
))) ;

357 
tz
 *
sign
;

358 
_timez⁄e
 = 
tz
;

359 
	`°∫˝y
(
_tz«me
[0], 
buf„r
, 
TZ_LEN
);

361 i‡(!(
_daylight
 = (*
p
 != '\0'))) ;

363 
buf„r
[0] = '\0';

364 i‡(!(
p
 = 
	`∑r£Z⁄eName
(
buf„r
,Ö))) ;

365 
	`°∫˝y
(
_tz«me
[1], 
buf„r
, 
TZ_LEN
);

367 
buf„r
[0] = '\0';

368 i‡(*
p
 && (*p != ','))

369 i‡(!(
p
 = 
	`∑r£Time
(&
d°
,Ö, 
NULL
))) ;

370 
_d°_off
 = 
d°
;

371 i‡(*
p
) {

372 i‡(*
p
 != ',') ;

373 
p
++;

374 i‡(
	`°æí
(
p
Ë> 
RULE_LEN
) ;

375 i‡(!(
p
 = 
	`∑r£RuÀ
(
buf„r
,Ö))) ;

377 
	}
}

380 
	$_tz£t
()

382 #if 
	`deföed
(
__BSD4_2
)

384 
timevÆ
 
tv
;

385 
timez⁄e
 
tz
;

387 
	`_gëtimeofday
(&
tv
, &
tz
);

388 
_daylight
 = 
tz
.
tz_d°time
;

389 
_timez⁄e
 = 
tz
.
tz_möuãswe°
 * 60L;

391 #ñif !
	`deföed
(
_POSIX_SOURCE
Ë&& !deföed(
__USG
)

393 #if !
	`deföed
(
_MINIX
)

394 
timeb
 
time
;

396 
	`_·ime
(&
time
);

397 
_timez⁄e
 = 
time
.
timez⁄e
 * 60L;

398 
_daylight
 = 
time
.
d°Êag
;

403 
	`∑r£TZ
(
	`gëív
("TZ"));

405 #if 
	`deföed
(
__USG
Ë|| deföed(
_POSIX_SOURCE
)

406 
tz«me
[0] = 
_tz«me
[0];

407 
tz«me
[1] = 
_tz«me
[1];

408 #if 
	`deföed
(
__USG
)

409 
timez⁄e
 = 
_timez⁄e
;

410 
daylight
 = 
_daylight
;

413 
	}
}

416 
	$œ°_sunday
(
day
, 
tm
 *
timï
)

418 
fú°
 = 
	`FIRSTSUNDAY
(
timï
);

420 i‡(
day
 >58 && 
	`LEAPYEAR
(
YEAR0
 + 
timï
->
tm_yór
)) day++;

421 i‡(
day
 < 
fú°
)  first;

422  
day
 - (day - 
fú°
) % 7;

423 
	}
}

426 
	$d©e_of
(
d°ty≥
 *
d°
, 
tm
 *
timï
)

428 
À≠
 = 
	`LEAPYEAR
(
YEAR0
 + 
timï
->
tm_yór
);

429 
fú°day
, 
tmpday
;

430 
day
, 
m⁄th
;

432 i‡(
d°
->
ds_ty≥
 != 'M') {

433  
d°
->
ds_d©e
[0] -

434 (
d°
->
ds_ty≥
 == 'J'

435 && 
À≠


436 && 
d°
->
ds_d©e
[0] < 58);

438 
day
 = 0;

439 
m⁄th
 = 1;

440 
m⁄th
 < 
d°
->
ds_d©e
[0]) {

441 
day
 +
_yèb
[
À≠
][
m⁄th
 - 1];

442 
m⁄th
++;

444 
fú°day
 = (
day
 + 
	`FIRSTDAYOF
(
timï
)) % 7;

445 
tmpday
 = 
day
;

446 
day
 +(
d°
->
ds_d©e
[2] - 
fú°day
 + 7) % 7

447 + 7 * (
d°
->
ds_d©e
[1] - 1);

448 i‡(
day
 >
tmpday
 + 
_yèb
[
À≠
][
m⁄th
]) day -= 7;

449  
day
;

450 
	}
}

457 
	$_d°gë
(
tm
 *
timï
)

459 
begöd°
, 
ídd°
;

460 
d°ty≥
 *
d°s
 = &
d°°¨t
, *
d°e
 = &
d°íd
;

461 
do_d°
 = 0;

463 i‡(
_daylight
 == -1)

464 
	`_tz£t
();

466 
timï
->
tm_isd°
 = 
_daylight
;

467 i‡(!
_daylight
)  0;

469 i‡(
d°s
->
ds_ty≥
 != 'U')

470 
begöd°
 = 
	`d©e_of
(
d°s
, 
timï
);

471 
begöd°
 = 
	`œ°_sunday
(89, 
timï
);

472 i‡(
d°e
->
ds_ty≥
 != 'U')

473 
ídd°
 = 
	`d©e_of
(
d°e
, 
timï
);

474 
ídd°
 = 
	`œ°_sunday
(272, 
timï
);

477 i‡(
begöd°
 < 
ídd°
) {

478 i‡(
timï
->
tm_yday
 > 
begöd°
 &&Åimï->tm_yday < 
ídd°
)

479 
do_d°
 = 1;

481 i‡(
timï
->
tm_yday
 > 
begöd°
 ||Åimï->tm_yday < 
ídd°
)

482 
do_d°
 = 1;

485 i‡(!
do_d°


486 && (
timï
->
tm_yday
 =
begöd°
 ||Åimï->tm_yday =
ídd°
)) {

487 
d°å™s£c
;

488 
cur£c
;

490 i‡(
timï
->
tm_yday
 =
begöd°
)

491 
d°å™s£c
 = 
d°s
->
ds_£c
;

492 
d°å™s£c
 = 
d°e
->
ds_£c
;

493 
cur£c
 = ((
timï
->
tm_hour
 * 60Ë+Åimï->
tm_mö
) * 60L

494 + 
timï
->
tm_£c
;

496 i‡((
timï
->
tm_yday
 =
begöd°
 && 
cur£c
 >
d°å™s£c
)

497 || (
timï
->
tm_yday
 =
ídd°
 && 
cur£c
 < 
d°å™s£c
))

498 
do_d°
 = 1;

500 #i‡
USE_TABLE


501 i‡(
u£èbÀ
Ë
	`Z⁄eFromTabÀ
(
_timez⁄e
);

503 i‡(
do_d°
Ë 
_d°_off
;

504 
timï
->
tm_isd°
 = 0;

506 
	}
}

	@mktime.c

9 
	~<time.h
>

10 
	~<limôs.h
>

11 
	~"loc_time.h
"

17 
time_t


18 
	$mktime
(
tm
 *
timï
)

20 
day
, 
yór
;

21 
tm_yór
;

22 
yday
, 
m⁄th
;

23 
£c⁄ds
;

24 
ovîÊow
;

25 
d°
;

27 
timï
->
tm_mö
 +timï->
tm_£c
 / 60;

28 
timï
->
tm_£c
 %= 60;

29 i‡(
timï
->
tm_£c
 < 0) {

30 
timï
->
tm_£c
 += 60;

31 
timï
->
tm_mö
--;

33 
timï
->
tm_hour
 +timï->
tm_mö
 / 60;

34 
timï
->
tm_mö
 =Åimep->tm_min % 60;

35 i‡(
timï
->
tm_mö
 < 0) {

36 
timï
->
tm_mö
 += 60;

37 
timï
->
tm_hour
--;

39 
day
 = 
timï
->
tm_hour
 / 24;

40 
timï
->
tm_hour
=Åimep->tm_hour % 24;

41 i‡(
timï
->
tm_hour
 < 0) {

42 
timï
->
tm_hour
 += 24;

43 
day
--;

45 
timï
->
tm_yór
 +timï->
tm_m⁄
 / 12;

46 
timï
->
tm_m⁄
 %= 12;

47 i‡(
timï
->
tm_m⁄
 < 0) {

48 
timï
->
tm_m⁄
 += 12;

49 
timï
->
tm_yór
--;

51 
day
 +(
timï
->
tm_mday
 - 1);

52 
day
 < 0) {

53 if(--
timï
->
tm_m⁄
 < 0) {

54 
timï
->
tm_yór
--;

55 
timï
->
tm_m⁄
 = 11;

57 
day
 +
_yèb
[
	`LEAPYEAR
(
YEAR0
 + 
timï
->
tm_yór
)][timï->
tm_m⁄
];

59 
day
 >
_yèb
[
	`LEAPYEAR
(
YEAR0
 + 
timï
->
tm_yór
)][timï->
tm_m⁄
]) {

60 
day
 -
_yèb
[
	`LEAPYEAR
(
YEAR0
 + 
timï
->
tm_yór
)][timï->
tm_m⁄
];

61 i‡(++(
timï
->
tm_m⁄
) == 12) {

62 
timï
->
tm_m⁄
 = 0;

63 
timï
->
tm_yór
++;

66 
timï
->
tm_mday
 = 
day
 + 1;

67 
	`_tz£t
();

68 
yór
 = 
EPOCH_YR
;

69 i‡(
timï
->
tm_yór
 < 
yór
 - 
YEAR0
Ë (
time_t
)-1;

70 
£c⁄ds
 = 0;

71 
day
 = 0;

72 
ovîÊow
 = 0;

80 #if 
EPOCH_YR
 != 1970

81 #îr‹ 
EPOCH_YR
 != 1970

83 
tm_yór
 = 
timï
->tm_yó∏+ 
YEAR0
;

85 i‡(
LONG_MAX
 / 365 < 
tm_yór
 - 
yór
Ë
ovîÊow
++;

86 
day
 = (
tm_yór
 - 
yór
) * 365;

87 i‡(
LONG_MAX
 - 
day
 < (
tm_yór
 - 
yór
Ë/ 4 + 1Ë
ovîÊow
++;

88 
day
 +(
tm_yór
 - 
yór
) / 4

89 + ((
tm_yór
 % 4Ë&&Åm_yó∏% 4 < 
yór
 % 4);

90 
day
 -(
tm_yór
 - 
yór
) / 100

91 + ((
tm_yór
 % 100Ë&&Åm_yó∏% 100 < 
yór
 % 100);

92 
day
 +(
tm_yór
 - 
yór
) / 400

93 + ((
tm_yór
 % 400Ë&&Åm_yó∏% 400 < 
yór
 % 400);

95 
yday
 = 
m⁄th
 = 0;

96 
m⁄th
 < 
timï
->
tm_m⁄
) {

97 
yday
 +
_yèb
[
	`LEAPYEAR
(
tm_yór
)][
m⁄th
];

98 
m⁄th
++;

100 
yday
 +(
timï
->
tm_mday
 - 1);

101 i‡(
day
 + 
yday
 < 0Ë
ovîÊow
++;

102 
day
 +
yday
;

104 
timï
->
tm_yday
 = 
yday
;

105 
timï
->
tm_wday
 = (
day
 + 4) % 7;

107 
£c⁄ds
 = ((
timï
->
tm_hour
 * 60LË+Åimï->
tm_mö
Ë* 60L +Åimï->
tm_£c
;

109 i‡((
TIME_MAX
 - 
£c⁄ds
Ë/ 
SECS_DAY
 < 
day
Ë
ovîÊow
++;

110 
£c⁄ds
 +
day
 * 
SECS_DAY
;

114 i‡(((
_timez⁄e
 > 0Ë&& (
TIME_MAX
 - _timez⁄ê< 
£c⁄ds
))

115 || ((
_timez⁄e
 < 0Ë&& (
£c⁄ds
 < -_timezone)))

116 
ovîÊow
++;

117 
£c⁄ds
 +
_timez⁄e
;

119 i‡(
timï
->
tm_isd°
 < 0)

120 
d°
 = 
	`_d°gë
(
timï
);

121 i‡(
timï
->
tm_isd°
)

122 
d°
 = 
_d°_off
;

123 
d°
 = 0;

125 i‡(
d°
 > 
£c⁄ds
Ë
ovîÊow
++;

126 
£c⁄ds
 -
d°
;

128 i‡(
ovîÊow
Ë (
time_t
)-1;

130 i‡((
time_t
)
£c⁄ds
 != seconds)  (time_t)-1;

131  (
time_t
)
£c⁄ds
;

132 
	}
}

	@mlf4.c

12 
	~"FP_ty≥s.h
"

15 
	$mlf4
(
s2
,
s1
)

16 
SINGLE
 
s1
,
s2
;

18 
EXTEND
 
e1
,
e2
;

20 
	`exãnd
(&
s1
,&
e1
,(
SINGLE
));

21 
	`exãnd
(&
s2
,&
e2
,(
SINGLE
));

23 
	`mul_ext
(&
e1
,&
e2
);

24 
	`com∑˘
(&
e1
,&
s1
,(
SINGLE
));

25 
	}
}

	@mlf8.c

12 
	~"FP_ty≥s.h
"

15 
	$mlf8
(
s2
,
s1
)

16 
DOUBLE
 
s1
,
s2
;

18 
EXTEND
 
e1
,
e2
;

20 
	`exãnd
(&
s1
.
d
[0],&
e1
,(
DOUBLE
));

21 
	`exãnd
(&
s2
.
d
[0],&
e2
,(
DOUBLE
));

23 
	`mul_ext
(&
e1
,&
e2
);

24 
	`com∑˘
(&
e1
,&
s1
.
d
[0],(
DOUBLE
));

25 
	}
}

	@mm.h

4 
	#_POSIX_SOURCE
 1

	)

5 
	#_MINIX
 1

	)

6 
	#_SYSTEM
 1

	)

9 
	~<möix/c⁄fig.h
>

10 
	~<™si.h
>

11 
	~<sys/ty≥s.h
>

12 
	~<möix/c⁄°.h
>

13 
	~<möix/ty≥.h
>

15 
	~<f˙é.h
>

16 
	~<uni°d.h
>

17 
	~<möix/sy¶ib.h
>

19 
	~<limôs.h
>

20 
	~<î∫o.h
>

22 
	~"c⁄°.h
"

23 
	~"ty≥.h
"

24 
	~"¥Ÿo.h
"

25 
	~"glo.h
"

	@mnx_eth.c

7 
	~"öë.h
"

8 
	~"¥Ÿo.h
"

9 
	~"gíîic/as£π.h
"

10 
	~"gíîic/buf.h
"

11 
	~"osdï_ëh.h
"

12 
	~"gíîic/˛ock.h
"

13 
	~"gíîic/ëh.h
"

14 
	~"gíîic/ëh_öt.h
"

15 
	~"gíîic/§.h
"

17 
INIT_PANIC
();

19 
FORWARD
 
_PROTOTYPE
–
£tup_ªad
, (
ëh_p‹t_t
 *
ëh_p‹t
) );

20 
FORWARD
 
_PROTOTYPE
–
do_£ndªc
, (
èsk
, 
mesßge
 *
m1
, mesßgê*
m2
) );

21 
FORWARD
 
_PROTOTYPE
–
ªad_öt
, (
ëh_p‹t_t
 *
ëh_p‹t
, 
cou¡
) );

22 
FORWARD
 
_PROTOTYPE
–
wrôe_öt
, (
ëh_p‹t_t
 *
ëh_p‹t
) );

24 
PUBLIC
 
	$ëh_öô0
()

26 
ªsu…
;

27 
ëh_p‹t_t
 *
ëh_p‹t
;

28 
mesßge
 
mess
, 
ª∂_mess
;

30 
ëh_p‹t
&
ëh_p‹t_èbÀ
[0];

32 
ëh_p‹t
->
ëp_osdï
.
ëp_p‹t
= 0;

33 
ëh_p‹t
->
ëp_osdï
.
ëp_èsk

DL_ETH
;

34 
ëh_p‹t
->
ëp_osdï
.
ëp_mö‹

ETH_DEV
;

36 #i‡
XXX


37 
mess
.
m_ty≥

DL_STOP
;

38 
mess
.
DL_PORT

ëh_p‹t
->
ëp_osdï
.
ëp_p‹t
;

39 #i‡
DEBUG
 & 256

40 { 
	`whîe
(); 
	`¥ötf
("sending DL_STOP\n"); }

42 
	`as£π
 (
ëh_p‹t
->
ëp_osdï
.
ëp_èsk
 !
MM_PROC_NR
);

43 
ªsu…

	`£nd
(
ëh_p‹t
->
ëp_osdï
.
ëp_èsk
, &
mess
);

44 i‡(
ªsu…
 < 0)

46 
	`¥ötf
("£nd faûed wôhÉº‹ %d\n",
ªsu…
);

47 
	`¥ötf
("eth_init0: unableÅo stopÉthernetÅask\n");

52 #i‡
DEBUG
 & 256

53 { 
	`whîe
(); 
	`¥ötf
("sending DL_INIT\n"); }

55 
mess
.
m_ty≥

DL_INIT
;

56 
mess
.
DL_PORT

ëh_p‹t
->
ëp_osdï
.
ëp_p‹t
;

57 
mess
.
DL_PROC

THIS_PROC
;

58 
mess
.
DL_MODE

DL_NOMODE
;

59 
	`as£π
 (
ëh_p‹t
->
ëp_osdï
.
ëp_èsk
 !
MM_PROC_NR
);

60 
ªsu…

	`£nd
(
ëh_p‹t
->
ëp_osdï
.
ëp_èsk
, &
mess
);

61 i‡(
ªsu…
<0)

63 
	`¥ötf
(

65 
ªsu…
);

69 i‡(
	`ª˚ive
(
ëh_p‹t
->
ëp_osdï
.
ëp_èsk
, &
mess
)<0)

70 
	`ù_∑nic
(("unableÅoÑeceive"));

72 i‡(
mess
.
m3_i1
 !
ëh_p‹t
->
ëp_osdï
.
ëp_p‹t
)

74 
	`¥ötf
("eth_init0: gotÑeply for wrongÖort\n");

78 
ëh_p‹t
->
ëp_ëhaddr
*(
ëhî_addr_t
 *)
mess
.
m3_ˇ1
;

80 i‡(
	`§_add_mö‹
 (
ëh_p‹t
->
ëp_osdï
.
ëp_mö‹
,

81 
ëh_p‹t
- 
ëh_p‹t_èbÀ
, 
ëh_›í
, 
ëh_˛o£
, 
ëh_ªad
,

82 
ëh_wrôe
, 
ëh_io˘l
, 
ëh_ˇn˚l
)<0)

83 
	`ù_∑nic
(("can't sr_init"));

85 
ëh_p‹t
->
ëp_Êags
 |
EPF_ENABLED
;

86 
ëh_p‹t
->
ëp_wr_∑ck
= 0;

87 
ëh_p‹t
->
ëp_rd_∑ck
= 0;

88 
	`£tup_ªad
 (
ëh_p‹t
);

89 
	}
}

91 
PUBLIC
 
	$ëh_wrôe_p‹t
(
ëh_p‹t
)

92 
ëh_p‹t_t
 *
ëh_p‹t
;

94 
mesßge
 
mess1
, 
mess2
;

95 
i
, 
∑ck_size
, 
ªsu…
;

96 
acc_t
 *
∑ck
, *
∑ck_±r
;

97 
iovec_t
 *
iovec
;

99 #i‡
DEBUG
 & 256

100 { 
	`whîe
(); 
	`bf_check_Æl_bufs
(); }

102 #i‡
DEBUG
 & 256

103 { 
	`whîe
(); 
	`¥ötf
("send_packet(&eth_port_table[%d], ..) called\n",

104 
ëh_p‹t
-
ëh_p‹t_èbÀ
); }

106 
	`as£π
 (!(
ëh_p‹t
->
ëp_Êags
 & 
EPF_WRITE_IP
));

108 
ëh_p‹t
->
ëp_Êags
 |
EPF_WRITE_IP
;

110 
∑ck

ëh_p‹t
->
ëp_wr_∑ck
;

111 
ëh_p‹t
->
ëp_wr_∑ck
= 0;

113 
iovec

ëh_p‹t
->
ëp_osdï
.
ëp_wr_iovec
;

114 
∑ck_size
= 0;

115 #i‡
DEBUG
 & 256

116 { 
	`whîe
(); 
	`¥ötf
("bf_bufsize%d\n", 
	`bf_bufsize
(
∑ck
)); }

118 
i
=0, 
∑ck_±r

∑ck
; i<
IOVEC_NR
 &&Öack_ptr; i++,

119 
∑ck_±r
∑ck_±r->
acc_√xt
)

121 
iovec
[
i
].
iov_addr
(
vú_byãs
)
	`±r2acc_d©a
(

122 
∑ck_±r
);

123 
∑ck_size
 +
iovec
[
i
].
iov_size
=

124 
∑ck_±r
->
acc_Àngth
;

126 i‡(
i
>
IOVEC_NR
)

128 #i‡
DEBUG


129 { 
	`whîe
(); 
	`¥ötf
("compacting fragment\n"); }

131 
∑ck

	`bf_∑ck
(pack);

132 
∑ck_size
= 0;

133 
i
=0, 
∑ck_±r

∑ck
; i<
IOVEC_NR
 &&

134 
∑ck_±r
; 
i
++,Öack_ptr=Öack_ptr->

135 
acc_√xt
)

137 
iovec
[
i
].
iov_addr
(
vú_byãs
)

138 
	`±r2acc_d©a
(
∑ck_±r
);

139 
∑ck_size
 +
iovec
[
i
].
iov_size
=

140 
∑ck_±r
->
acc_Àngth
;

143 #i‡
DEBUG
 & 256

144 { 
	`whîe
(); 
	`¥ötf
("bf_bufsize%d\n", 
	`bf_bufsize
(
∑ck
));

145 
	`whîe
(); 
	`¥ötf
("i%d\n", 
i
); }

147 
	`as£π
 (
i
< 
IOVEC_NR
);

148 
	`as£π
 (
∑ck_size
 >
ETH_MIN_PACK_SIZE
);

150 i‡(
i
==1)

153 
mess1
.
DL_COUNT

iovec
[0].
iov_size
;

154 
mess1
.
DL_ADDR
(*)
iovec
[0].
iov_addr
;

155 
mess1
.
m_ty≥

DL_WRITE
;

159 
mess1
.
DL_COUNT

i
;

160 
mess1
.
DL_ADDR
(*)
iovec
;

161 
mess1
.
m_ty≥

DL_WRITEV
;

163 
mess1
.
DL_PORT

ëh_p‹t
->
ëp_osdï
.
ëp_p‹t
;

164 
mess1
.
DL_PROC

THIS_PROC
;

165 
mess1
.
DL_MODE

DL_NOMODE
;

167 #i‡
DEBUG
 & 256

168 { 
	`whîe
(); 
	`¥ötf
("calling do_sendrec\n"); }

170 
	`as£π
 (
ëh_p‹t
->
ëp_osdï
.
ëp_èsk
 !
MM_PROC_NR
);

171 
ªsu…

	`do_£ndªc
 (
ëh_p‹t
->
ëp_osdï
.
ëp_èsk
, &
mess1
, &
mess2
);

172 #i‡
DEBUG
 & 256

173 { 
	`whîe
(); 
	`¥ötf
("do_sendrec done\n"); }

176 #i‡
DEBUG
 & 256

177 { 
	`whîe
(); 
	`¥ötf
("gotÑeply from DLL\n"); }

179 #i‡
DEBUG


180 i‡(
mess1
.
m_ty≥
 !
DL_TASK_REPLY
)

181 { 
	`whîe
(); 
	`¥ötf
("wr⁄g m_ty≥ (=%d)\n", 
mess1
.
m_ty≥
); }

182 i‡(
mess1
.
DL_PORT
 !
ëh_p‹t
->
ëp_osdï
.
ëp_p‹t
)

183 { 
	`whîe
(); 
	`¥ötf
("wr⁄g DL_PORT (=%d)\n", 
mess1
.
DL_PORT
); }

184 i‡(
mess1
.
DL_PROC
 !
THIS_PROC
)

185 { 
	`whîe
(); 
	`¥ötf
("wr⁄g DL_PROC (=%d)\n", 
mess1
.
DL_PROC
); }

188 
	`as£π
 (
mess1
.
m_ty≥
 =
DL_TASK_REPLY
 && mess1.
DL_PORT
 == mess1.DL_PORT &&

189 
mess1
.
DL_PROC
 =
THIS_PROC
);

191 
	`as£π
((
mess1
.
DL_STAT
 >> 16Ë=
OK
);

193 i‡(!(
mess1
.
DL_STAT
 & 
DL_PACK_SEND
))

196 #i‡
DEBUG
 & 256

197 { 
	`whîe
(); 
	`¥ötf
("setting EPF_WRITE_SP\n"); }

199 
ëh_p‹t
->
ëp_Êags
 |
EPF_WRITE_SP
;

200 
ëh_p‹t
->
ëp_wr_∑ck

∑ck
;

205 
ëh_p‹t
->
ëp_Êags
 &~
EPF_WRITE_IP
;

206 
	`ëh_¨rive
(
ëh_p‹t
, 
∑ck
);

207 #i‡
DEBUG
 & 256

208 { 
	`whîe
(); 
	`¥ötf
("write done\n"); }

212 i‡(
ªsu…
 == 1)

214 
	`as£π
(
mess2
.
DL_STAT
 =
DL_PACK_RECV
);

215 
	`as£π
(!(
mess1
.
DL_STAT
 & 
DL_PACK_RECV
));

216 
	`com∑ª
(
mess2
.
DL_PORT
, ==, 
ëh_p‹t
->
ëp_osdï
.
ëp_p‹t
);

217 
	`com∑ª
(
mess2
.
DL_PROC
, ==, 
THIS_PROC
);

218 
	`ªad_öt
(
ëh_p‹t
, 
mess2
.
DL_COUNT
);

220 i‡(
mess1
.
DL_STAT
 & 
DL_PACK_RECV
)

222 
	`ªad_öt
(
ëh_p‹t
, 
mess1
.
DL_COUNT
);

224 
	}
}

226 
PUBLIC
 
	$ëh_ªc
(
m
)

227 
mesßge
 *
m
;

229 
i
;

230 
ëh_p‹t_t
 *
loc_p‹t
;

231 
°©
;

233 
	`as£π
 (
m
->
m_sour˚
 =
DL_ETH
);

235 
	`£t_time
 (
m
->
DL_CLCK
);

237 
i
=0, 
loc_p‹t

ëh_p‹t_èbÀ
; i<
ETH_PORT_NR
; i++,Üoc_port++)

239 i‡(
loc_p‹t
->
ëp_osdï
.
ëp_p‹t
 =
m
->
DL_PORT
 &&

240 
loc_p‹t
->
ëp_osdï
.
ëp_èsk
 =
m
->
m_sour˚
)

244 
	`as£π
 (
i
<
ETH_PORT_NR
);

246 
°©

m
->
DL_STAT
 & 0xffff;

248 
	`as£π
(
°©
 & (
DL_PACK_SEND
|
DL_PACK_RECV
));

249 i‡(
°©
 & 
DL_PACK_SEND
)

251 
	`wrôe_öt
(
loc_p‹t
);

253 i‡(
°©
 & 
DL_PACK_RECV
)

255 
	`ªad_öt
(
loc_p‹t
, 
m
->
DL_COUNT
);

257 
	}
}

259 
PUBLIC
 
	$ëh_gë_°©
(
ëh_p‹t
, 
ëh_°©
)

260 
ëh_p‹t_t
 *
ëh_p‹t
;

261 
ëh_°©_t
 *
ëh_°©
;

263 
acc_t
 *
acc
;

264 
ªsu…
;

265 
mesßge
 
mess
, 
mlocked
;

267 #i‡
DEBUG


268 { 
	`whîe
(); 
	`¥ötf
("eth_get_stat called\n"); }

270 
mess
.
m_ty≥

DL_GETSTAT
;

271 
mess
.
DL_PORT

ëh_p‹t
->
ëp_osdï
.
ëp_p‹t
;

272 
mess
.
DL_PROC

THIS_PROC
;

273 
mess
.
DL_ADDR
(*)
ëh_°©
;

277 
	`as£π
 (
ëh_p‹t
->
ëp_osdï
.
ëp_èsk
 !
MM_PROC_NR
);

278 
ªsu…

	`£nd
(
ëh_p‹t
->
ëp_osdï
.
ëp_èsk
, &
mess
);

279 i‡(
ªsu…
 !
ELOCKED
)

281 
ªsu…

	`ª˚ive
(
ëh_p‹t
->
ëp_osdï
.
ëp_èsk
, &
mlocked
);

282 
	`as£π
(
ªsu…
 =
OK
);

283 #i‡
DEBUG


284 { 
	`whîe
(); 
	`¥ötf
("callingÉth_rec()\n"); }

286 
	`ëh_ªc
(&
mlocked
);

288 
	`as£π
(
ªsu…
 =
OK
);

290 
ªsu…

	`ª˚ive
(
ëh_p‹t
->
ëp_osdï
.
ëp_èsk
, &
mess
);

291 
	`as£π
(
ªsu…
 =
OK
);

292 
	`as£π
(
mess
.
m_ty≥
 =
DL_TASK_REPLY
);

294 
ªsu…

mess
.
DL_STAT
 >> 16;

295 
	`as£π
 (
ªsu…
 == 0);

297 i‡(
mess
.
DL_STAT
)

299 #i‡
DEBUG


300 { 
	`whîe
(); 
	`¥ötf
("callingÉth_rec()\n"); }

302 
	`ëh_ªc
(&
mess
);

304  
OK
;

305 
	}
}

307 
PUBLIC
 
	$ëh_£t_ªc_c⁄f
 (
ëh_p‹t
, 
Êags
)

308 
ëh_p‹t_t
 *
ëh_p‹t
;

309 
u32_t
 
Êags
;

311 
ªsu…
;

312 
dl_Êags
;

313 
mesßge
 
mess
, 
ª∂_mess
;

315 #i‡
DEBUG


316 { 
	`whîe
(); 
	`¥ötf
("eth_chk_rec_conf(&eth_port_table[%d])\n",

317 
ëh_p‹t
-
ëh_p‹t_èbÀ
); }

319 
dl_Êags

DL_NOMODE
;

320 i‡(
Êags
 & 
NWEO_EN_BROAD
)

321 
dl_Êags
 |
DL_BROAD_REQ
;

322 i‡(
Êags
 & 
NWEO_EN_MULTI
)

323 
dl_Êags
 |
DL_MULTI_REQ
;

324 i‡(
Êags
 & 
NWEO_EN_PROMISC
)

325 
dl_Êags
 |
DL_PROMISC_REQ
;

327 
mess
.
m_ty≥

DL_INIT
;

328 
mess
.
DL_PORT

ëh_p‹t
->
ëp_osdï
.
ëp_p‹t
;

329 
mess
.
DL_PROC

THIS_PROC
;

330 
mess
.
DL_MODE

dl_Êags
;

334 
	`as£π
 (
ëh_p‹t
->
ëp_osdï
.
ëp_èsk
 !
MM_PROC_NR
);

335 
ªsu…

	`£nd
 (
ëh_p‹t
->
ëp_osdï
.
ëp_èsk
, &
mess
);

336 i‡(
ªsu…
 =
ELOCKED
)

339 i‡(
	`ª˚ive
 (
ëh_p‹t
->
ëp_osdï
.
ëp_èsk
,

340 &
ª∂_mess
)< 0)

341 
	`ù_∑nic
(("unableÅoÑeceive"));

342 #i‡
DEBUG


343 { 
	`whîe
(); 
	`¥ötf
("callingÉth_rec\n"); }

345 
	`ëh_ªc
(&
ª∂_mess
);

347 } 
ªsu…
 =
ELOCKED
);

349 i‡(
ªsu…
 < 0)

350 
	`ù_∑nic
(("u«bÀÅÿ£nd(%d)", 
ªsu…
));

352 i‡(
	`ª˚ive
 (
ëh_p‹t
->
ëp_osdï
.
ëp_èsk
, &
ª∂_mess
) < 0)

353 
	`ù_∑nic
(("unableÅoÑeceive"));

355 
	`as£π
 (
ª∂_mess
.
m_ty≥
 =
DL_INIT_REPLY
);

356 i‡(
ª∂_mess
.
m3_i1
 !
ëh_p‹t
->
ëp_osdï
.
ëp_p‹t
)

358 
	`ù_∑nic
(("gotÑeply for wrongÖort"));

361 
	}
}

363 
PRIVATE
 
	$do_£ndªc
 (
to‰om
, 
m±r1
, 
m±r2
)

364 
to‰om
;

365 
mesßge
 *
m±r1
;

366 
mesßge
 *
m±r2
;

368 
ªsu…
;

369 
exåa
;

371 
	`as£π
 (
to‰om
 !
MM_PROC_NR
);

372 
ªsu…

	`£nd
 (
to‰om
, 
m±r1
);

373 i‡(
ªsu…
 =
ELOCKED
)

376 
ªsu…

	`ª˚ive
(
to‰om
, 
m±r2
);

378 i‡(
ªsu…
 < 0)

379 
	`ù_∑nic
(("unableÅoÑeceive"));

380 
exåa
= 1;

381 
	`as£π
 (
to‰om
 !
MM_PROC_NR
);

382 
ªsu…

	`£nd
 (
to‰om
, 
m±r1
);

385 
exåa
= 0;

387 i‡(
ªsu…
 < 0)

388 
	`ù_∑nic
(("unableÅo send"));

390 
ªsu…

	`ª˚ive
 (
to‰om
, 
m±r1
);

391 i‡(
ªsu…
 < 0)

392 
	`ù_∑nic
(("unableÅoÑeceive"));

394 
	`as£π
 (
m±r1
->
m_ty≥
 =
DL_TASK_REPLY
);

395  
exåa
;

396 
	}
}

398 
PRIVATE
 
	$wrôe_öt
(
ëh_p‹t
)

399 
ëh_p‹t_t
 *
ëh_p‹t
;

401 
acc_t
 *
∑ck
;

403 #i‡
DEBUG
 & 256

404 { 
	`whîe
(); 
	`¥ötf
("write_int called\n"); }

407 
	`as£π
(
ëh_p‹t
->
ëp_Êags
 & (
EPF_WRITE_IP
|
EPF_WRITE_SP
) ==

408 (
EPF_WRITE_IP
|
EPF_WRITE_SP
));

410 
∑ck

ëh_p‹t
->
ëp_wr_∑ck
;

411 
ëh_p‹t
->
ëp_wr_∑ck

NULL
;

412 
	`ëh_¨rive
(
ëh_p‹t
, 
∑ck
);

413 
ëh_p‹t
->
ëp_Êags
 &~(
EPF_WRITE_IP
|
EPF_WRITE_SP
);

414 
	`ëh_gë_w‹k
(
ëh_p‹t
))

416 
	}
}

418 
PRIVATE
 
	$ªad_öt
(
ëh_p‹t
, 
cou¡
)

419 
ëh_p‹t_t
 *
ëh_p‹t
;

420 
cou¡
;

422 
acc_t
 *
∑ck
, *
cut_∑ck
;

424 
∑ck

ëh_p‹t
->
ëp_rd_∑ck
;

425 
ëh_p‹t
->
ëp_rd_∑ck

NULL
;

427 
cut_∑ck

	`bf_cut
(
∑ck
, 0, 
cou¡
);

428 
	`bf_a‰ì
(
∑ck
);

430 
	`ëh_¨rive
(
ëh_p‹t
, 
cut_∑ck
);

432 i‡(!(
ëh_p‹t
->
ëp_Êags
 & 
EPF_READ_SP
))

434 
ëh_p‹t
->
ëp_Êags
 &~
EPF_READ_IP
;

437 
ëh_p‹t
->
ëp_Êags
 &~(
EPF_READ_IP
|
EPF_READ_SP
);

438 
	`£tup_ªad
(
ëh_p‹t
);

439 
	}
}

441 
PRIVATE
 
	$£tup_ªad
(
ëh_p‹t
)

442 
ëh_p‹t_t
 *
ëh_p‹t
;

444 
acc_t
 *
∑ck
, *
∑ck_±r
;

445 
mesßge
 
mess1
, 
mess2
;

446 
iovec_t
 *
iovec
;

447 
i
, 
ªsu…
;

449 
	`as£π
(!(
ëh_p‹t
->
ëp_Êags
 & (
EPF_READ_IP
|
EPF_READ_SP
)));

454 
	`as£π
 (!
ëh_p‹t
->
ëp_rd_∑ck
);

456 
iovec

ëh_p‹t
->
ëp_osdï
.
ëp_rd_iovec
;

457 
∑ck

	`bf_memªq
 (
ETH_MAX_PACK_SIZE
);

459 
i
=0, 
∑ck_±r

∑ck
; i<
RD_IOVEC
 &&Öack_ptr;

460 
i
++, 
∑ck_±r
∑ck_±r->
acc_√xt
)

462 
iovec
[
i
].
iov_addr
(
vú_byãs
)
	`±r2acc_d©a
(
∑ck_±r
);

463 
iovec
[
i
].
iov_size
(
vú_byãs
)
∑ck_±r
->
acc_Àngth
;

464 #i‡
DEBUG
 & 256

465 { 
	`whîe
(); 
	`¥ötf
("filling iovec[%d] with iov_addr= %x, iov_size= %x\n",

466 
i
, 
iovec
[i].
iov_addr
, iovec[i].
iov_size
); }

470 
	`as£π
 (!
∑ck_±r
);

472 
mess1
.
m_ty≥

DL_READV
;

473 
mess1
.
DL_PORT

ëh_p‹t
->
ëp_osdï
.
ëp_p‹t
;

474 
mess1
.
DL_PROC

THIS_PROC
;

475 
mess1
.
DL_COUNT

i
;

476 
mess1
.
DL_ADDR
(*)
iovec
;

478 
ªsu…

	`do_£ndªc
 (
ëh_p‹t
->
ëp_osdï
.
ëp_èsk
, &
mess1
,

479 &
mess2
);

481 #i‡
DEBUG


482 i‡(
mess1
.
m_ty≥
 !
DL_TASK_REPLY
)

483 { 
	`whîe
(); 
	`¥ötf
("wr⁄g m_ty≥ (=%d)\n", 
mess1
.
m_ty≥
); }

484 i‡(
mess1
.
DL_PORT
 != mess1.DL_PORT)

485 { 
	`whîe
(); 
	`¥ötf
("wr⁄g DL_PORT (=%d)\n", 
mess1
.
DL_PORT
); }

486 i‡(
mess1
.
DL_PROC
 !
THIS_PROC
)

487 { 
	`whîe
(); 
	`¥ötf
("wr⁄g DL_PROC (=%d)\n", 
mess1
.
DL_PROC
); }

490 
	`as£π
 (
mess1
.
m_ty≥
 =
DL_TASK_REPLY
 && mess1.
DL_PORT
 == mess1.DL_PORT &&

491 
mess1
.
DL_PROC
 =
THIS_PROC
);

492 
	`com∑ª
((
mess1
.
DL_STAT
 >> 16), ==, 
OK
);

494 i‡(
mess1
.
DL_STAT
 & 
DL_PACK_RECV
)

497 
∑ck_±r

	`bf_cut
(
∑ck
, 0, 
mess1
.
DL_COUNT
);

498 
	`bf_a‰ì
(
∑ck
);

500 
	`as£π
(!(
ëh_p‹t
->
ëp_Êags
 & 
EPF_READ_IP
));

501 
	`ëh_¨rive
(
ëh_p‹t
, 
∑ck_±r
);

502 
	`as£π
(!(
ëh_p‹t
->
ëp_Êags
 & 
EPF_READ_IP
));

507 
ëh_p‹t
->
ëp_rd_∑ck

∑ck
;

508 
ëh_p‹t
->
ëp_Êags
 |
EPF_READ_IP
;

511 i‡(
ªsu…
 == 1)

513 
	`as£π
(
mess2
.
DL_STAT
 =
DL_PACK_SEND
);

514 
	`as£π
(!(
mess1
.
DL_STAT
 & 
DL_PACK_SEND
));

515 
	`as£π
 (
mess2
.
DL_PORT
 == mess2.DL_PORT &&

516 
mess2
.
DL_PROC
 =
THIS_PROC
);

517 
	`wrôe_öt
(
ëh_p‹t
);

519 i‡(
mess1
.
DL_STAT
 & 
DL_PACK_SEND
)

521 
	`wrôe_öt
(
ëh_p‹t
);

523 } !(
ëh_p‹t
->
ëp_Êags
 & 
EPF_READ_IP
));

524 
ëh_p‹t
->
ëp_Êags
 |
EPF_READ_SP
;

525 
	}
}

	@mount.c

8 
	~"fs.h
"

9 
	~<f˙é.h
>

10 
	~<möix/com.h
>

11 
	~<sys/°©.h
>

12 
	~"buf.h
"

13 
	~"dev.h
"

14 
	~"fûe.h
"

15 
	~"Âroc.h
"

16 
	~"öode.h
"

17 
	~"∑øm.h
"

18 
	~"su≥r.h
"

20 
PRIVATE
 
mesßge
 
	gdev_mess
;

22 
FORWARD
 
_PROTOTYPE
–
dev_t
 
«me_to_dev
, (*
∑th
) );

27 
PUBLIC
 
	$do_mou¡
()

31 
öode
 *
rù
, *
roŸ_ù
;

32 
su≥r_block
 *
xp
, *
•
;

33 
dev_t
 
dev
;

34 
mode_t
 
bôs
;

35 
rdú
, 
mdú
;

36 
r
, 
found
, 
maj‹
, 
èsk
;

39 i‡(!
su≥r_u£r
Ë(
EPERM
);

42 i‡(
	`„tch_«me
(
«me1
, 
«me1_Àngth
, 
M1
Ë!
OK
Ë(
îr_code
);

43 i‡–(
dev
 = 
	`«me_to_dev
(
u£r_∑th
)Ë=
NO_DEV
Ë(
îr_code
);

46 
•
 = 
NIL_SUPER
;

47 
found
 = 
FALSE
;

48 
xp
 = &
su≥r_block
[0]; x∞< &su≥r_block[
NR_SUPERS
]; xp++) {

49 i‡(
xp
->
s_dev
 =
dev
Ë
found
 = 
TRUE
;

50 i‡(
xp
->
s_dev
 =
NO_DEV
Ë
•
 = xp;

52 i‡(
found
Ë(
EBUSY
);

53 i‡(
•
 =
NIL_SUPER
Ë(
ENFILE
);

55 
dev_mess
.
m_ty≥
 = 
DEV_OPEN
;

56 
dev_mess
.
DEVICE
 = 
dev
;

57 i‡(
rd_⁄ly
Ë
dev_mess
.
COUNT
 = 
R_BIT
;

58 
dev_mess
.
COUNT
 = 
R_BIT
|
W_BIT
;

60 
maj‹
 = (
dev
 >> 
MAJOR
Ë& 
BYTE
;

61 i‡(
maj‹
 <0 || maj‹ >
max_maj‹
Ë(
ENODEV
);

62 
èsk
 = 
dm≠
[
maj‹
].
dm≠_èsk
;

63 (*
dm≠
[
maj‹
].
dm≠_›í
)(
èsk
, &
dev_mess
);

64 i‡(
dev_mess
.
REP_STATUS
 !
OK
Ë(
EINVAL
);

67 
•
->
s_dev
 = 
dev
;

68 
r
 = 
	`ªad_su≥r
(
•
);

71 i‡(
r
 !
OK
) {

72 
dev_mess
.
m_ty≥
 = 
DEV_CLOSE
;

73 
dev_mess
.
DEVICE
 = 
dev
;

74 (*
dm≠
[
maj‹
].
dm≠_˛o£
)(
èsk
, &
dev_mess
);

75 (
r
);

79 i‡(
	`„tch_«me
(
«me2
, 
«me2_Àngth
, 
M1
Ë!
OK
) {

80 
•
->
s_dev
 = 
NO_DEV
;

81 
dev_mess
.
m_ty≥
 = 
DEV_CLOSE
;

82 
dev_mess
.
DEVICE
 = 
dev
;

83 (*
dm≠
[
maj‹
].
dm≠_˛o£
)(
èsk
, &
dev_mess
);

84 (
îr_code
);

86 i‡–(
rù
 = 
	`ót_∑th
(
u£r_∑th
)Ë=
NIL_INODE
) {

87 
•
->
s_dev
 = 
NO_DEV
;

88 
dev_mess
.
m_ty≥
 = 
DEV_CLOSE
;

89 
dev_mess
.
DEVICE
 = 
dev
;

90 (*
dm≠
[
maj‹
].
dm≠_˛o£
)(
èsk
, &
dev_mess
);

91 (
îr_code
);

95 
r
 = 
OK
;

96 i‡(
rù
->
i_cou¡
 > 1Ë
r
 = 
EBUSY
;

99 
bôs
 = 
rù
->
i_mode
 & 
I_TYPE
;

100 i‡(
bôs
 =
I_BLOCK_SPECIAL
 || bô†=
I_CHAR_SPECIAL
Ë
r
 = 
ENOTDIR
;

103 
roŸ_ù
 = 
NIL_INODE
;

104 i‡(
r
 =
OK
) {

105 i‡–(
roŸ_ù
 = 
	`gë_öode
(
dev
, 
ROOT_INODE
)Ë=
NIL_INODE
Ë
r
 = 
îr_code
;

107 i‡(
roŸ_ù
 !
NIL_INODE
 &&ÑoŸ_ù->
i_mode
 =0Ë
r
 = 
EINVAL
;

110 i‡(
r
 =
OK
) {

111 
mdú
 = ((
rù
->
i_mode
 & 
I_TYPE
Ë=
I_DIRECTORY
);

112 
rdú
 = ((
roŸ_ù
->
i_mode
 & 
I_TYPE
Ë=
I_DIRECTORY
);

113 i‡(!
mdú
 && 
rdú
Ë
r
 = 
EISDIR
;

117 i‡(
r
 !
OK
) {

118 
	`put_öode
(
rù
);

119 
	`put_öode
(
roŸ_ù
);

120 (Ë
	`do_sync
();

121 
	`övÆid©e
(
dev
);

123 
•
->
s_dev
 = 
NO_DEV
;

124 
dev_mess
.
m_ty≥
 = 
DEV_CLOSE
;

125 
dev_mess
.
DEVICE
 = 
dev
;

126 (*
dm≠
[
maj‹
].
dm≠_˛o£
)(
èsk
, &
dev_mess
);

127 (
r
);

131 
rù
->
i_mou¡
 = 
I_MOUNT
;

132 
•
->
s_imou¡
 = 
rù
;

133 
•
->
s_isup
 = 
roŸ_ù
;

134 
•
->
s_rd_⁄ly
 = 
rd_⁄ly
;

135 (
OK
);

136 
	}
}

142 
PUBLIC
 
	$do_umou¡
()

146 
öode
 *
rù
;

147 
su≥r_block
 *
•
, *
•1
;

148 
dev_t
 
dev
;

149 
cou¡
;

150 
maj‹
, 
èsk
;

153 i‡(!
su≥r_u£r
Ë(
EPERM
);

156 i‡(
	`„tch_«me
(
«me
, 
«me_Àngth
, 
M3
Ë!
OK
Ë(
îr_code
);

157 i‡–(
dev
 = 
	`«me_to_dev
(
u£r_∑th
)Ë=
NO_DEV
Ë(
îr_code
);

162 
cou¡
 = 0;

163 
rù
 = &
öode
[0];Ñù< &öode[
NR_INODES
];Ñip++)

164 i‡(
rù
->
i_cou¡
 > 0 &&Ñù->
i_dev
 =
dev
Ë
cou¡
 +=Ñip->i_count;

165 i‡(
cou¡
 > 1Ë(
EBUSY
);

168 
•
 = 
NIL_SUPER
;

169 
•1
 = &
su≥r_block
[0]; sp1 < &su≥r_block[
NR_SUPERS
]; sp1++) {

170 i‡(
•1
->
s_dev
 =
dev
) {

171 
•
 = 
•1
;

177 (Ë
	`do_sync
();

178 
	`övÆid©e
(
dev
);

179 i‡(
•
 =
NIL_SUPER
Ë(
EINVAL
);

181 
maj‹
 = (
dev
 >> 
MAJOR
Ë& 
BYTE
;

182 
èsk
 = 
dm≠
[
maj‹
].
dm≠_èsk
;

183 
dev_mess
.
m_ty≥
 = 
DEV_CLOSE
;

184 
dev_mess
.
DEVICE
 = 
dev
;

185 (*
dm≠
[
maj‹
].
dm≠_˛o£
)(
èsk
, &
dev_mess
);

188 
•
->
s_imou¡
->
i_mou¡
 = 
NO_MOUNT
;

189 
	`put_öode
(
•
->
s_imou¡
);

190 
	`put_öode
(
•
->
s_isup
);

191 
•
->
s_imou¡
 = 
NIL_INODE
;

192 
•
->
s_dev
 = 
NO_DEV
;

193 (
OK
);

194 
	}
}

200 
PRIVATE
 
dev_t
 
	$«me_to_dev
(
∑th
)

201 *
∑th
;

207 
öode
 *
rù
;

208 
dev_t
 
dev
;

211 i‡–(
rù
 = 
	`ót_∑th
(
∑th
)Ë=
NIL_INODE
Ë(
NO_DEV
);

214 i‡–(
rù
->
i_mode
 & 
I_TYPE
Ë!
I_BLOCK_SPECIAL
) {

215 
îr_code
 = 
ENOTBLK
;

216 
	`put_öode
(
rù
);

217 (
NO_DEV
);

221 
dev
 = (
dev_t
Ë
rù
->
i_z⁄e
[0];

222 
	`put_öode
(
rù
);

223 (
dev
);

224 
	}
}

	@move.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

8 
	$wmove
(
wö
, 
y
, 
x
)

9 
WINDOW
 *
wö
;

10 
y
;

11 
x
;

13 i‡((
x
<0Ë|| (x>
wö
->
_maxx
Ë|| (
y
<wö->
_ªgt›
Ë|| (y>wö->
_ªgbŸtom
))

14 (
ERR
);

15 
wö
->
_curx
 = 
x
;

16 
wö
->
_cury
 = 
y
;

17 (
OK
);

18 
	}
}

	@mproc.h

8 
EXTERN
 
	sm¥oc
 {

9 
mem_m≠
 
	mmp_£g
[
NR_SEGS
];

10 
	mmp_exô°©us
;

11 
	mmp_sig°©us
;

12 
pid_t
 
	mmp_pid
;

13 
pid_t
 
	mmp_¥ocgΩ
;

14 
pid_t
 
	mmp_wpid
;

15 
	mmp_∑ª¡
;

18 
uid_t
 
	mmp_ªÆuid
;

19 
uid_t
 
	mmp_effuid
;

20 
gid_t
 
	mmp_ªÆgid
;

21 
gid_t
 
	mmp_effgid
;

24 
öo_t
 
	mmp_öo
;

25 
dev_t
 
	mmp_dev
;

26 
time_t
 
	mmp_˘ime
;

29 
sig£t_t
 
	mmp_ign‹e
;

30 
sig£t_t
 
	mmp_ˇtch
;

31 
sig£t_t
 
	mmp_sigmask
;

32 
sig£t_t
 
	mmp_sigmask2
;

33 
sig£t_t
 
	mmp_sig≥ndög
;

34 
siga˘i⁄
 
	mmp_siga˘
[
_NSIG
 + 1];

35 
vú_byãs
 
	mmp_sigªtu∫
;

38 
sigh™dÀr_t
 
	mmp_func
;

40 
	mmp_Êags
;

41 
vú_byãs
 
	mmp_¥oˇrgs
;

42 } 
	gm¥oc
[
NR_PROCS
];

45 
	#IN_USE
 001

	)

46 
	#WAITING
 002

	)

47 
	#HANGING
 004

	)

48 
	#PAUSED
 010

	)

49 
	#ALARM_ON
 020

	)

50 
	#SEPARATE
 040

	)

51 
	#TRACED
 0100

	)

52 
	#STOPPED
 0200

	)

53 
	#SIGSUSPENDED
 0400

	)

55 
	#NIL_MPROC
 ((
m¥oc
 *Ë0)

	)

	@mq.c

7 
	~"öë.h
"

8 
	~"mq.h
"

10 
	#MQ_SIZE
 64

	)

12 
PRIVATE
 
mq_t
 
	gmq_li°
[
MQ_SIZE
];

13 
PRIVATE
 
mq_t
 *
	gmq_‰ìli°
;

15 
	$mq_öô
()

17 
i
;

19 
mq_‰ìli°

NULL
;

20 
i
0; i<
MQ_SIZE
; i++)

22 
mq_li°
[
i
].
mq_√xt

mq_‰ìli°
;

23 
mq_‰ìli°
&
mq_li°
[
i
];

25 
	}
}

27 
mq_t
 *
	$mq_gë
()

29 
mq_t
 *
mq
;

31 
mq

mq_‰ìli°
;

32 i‡(
mq
)

34 
mq_‰ìli°

mq
->
mq_√xt
;

35 
mq
->
mq_√xt

NULL
;

37  
mq
;

38 
	}
}

40 
	$mq_‰ì
(
mq
)

41 
mq_t
 *
mq
;

43 
mq
->
mq_√xt

mq_‰ìli°
;

44 
mq_‰ìli°

mq
;

45 
	}
}

	@mq.h

7 #i‚de‡
INET__MQ_H


8 
	#INET__MQ_H


	)

10 
	smq


12 
mesßge
 
	mmq_mess
;

13 
mq
 *
	mmq_√xt
;

14 } 
	tmq_t
;

16 
_PROTOTYPE
–
mq_t
 *
mq_gë
, () );

17 
_PROTOTYPE
–
mq_‰ì
, (
mq_t
 *
mq
) );

18 
_PROTOTYPE
–
mq_öô
, () );

	@mtab.c

35 
	~<sys/ty≥s.h
>

36 
	~<möix/mölib.h
>

37 
	~<˘y≥.h
>

38 
	~<f˙é.h
>

39 
	~<°dlib.h
>

40 
	~<°rög.h
>

41 
	~<uni°d.h
>

42 
	~<°dio.h
>

44 
	#BUF_SIZE
 512

	)

46 *
	gëc_mèb
 = "/etc/mtab";

47 
	gmèb_ö
[
BUF_SIZE
+1];

48 
	gmèb_out
[
BUF_SIZE
+1];

49 *
	gùå
 = 
mèb_ö
;

50 *
	g›å
 = 
mèb_out
;

52 
_PROTOTYPE
(
lﬂd_mèb
, (*
¥og_«me
 ));

53 
_PROTOTYPE
(
ªwrôe_mèb
, (*
¥og_«me
 ));

54 
_PROTOTYPE
(
gë_mèb_íåy
, (*
•ecül
, *
mou¡ed_⁄
,

55 *
vîsi⁄
, *
rw_Êag
));

56 
_PROTOTYPE
(
put_mèb_íåy
, (*
•ecül
, *
mou¡ed_⁄
,

57 *
vîsi⁄
, *
rw_Êag
));

58 
_PROTOTYPE
(
îr
, (*
¥og_«me
, *
°r
 ));

61 
	$lﬂd_mèb
(
¥og_«me
)

62 *
¥og_«me
;

66 
fd
, 
n
;

67 *
±r
;

70 
fd
 = 
	`›í
(
ëc_mèb
, 
O_RDONLY
);

71 i‡(
fd
 < 0) {

72 
	`îr
(
¥og_«me
, ": cannot open ");

77 
n
 = 
	`ªad
(
fd
, 
mèb_ö
, 
BUF_SIZE
);

78 i‡(
n
 <= 0) {

80 
	`îr
(
¥og_«me
, ": cannotÑead ");

83 i‡(
n
 =
BUF_SIZE
) {

85 
	`°d_îr
(
¥og_«me
);

86 
	`°d_îr
(": fileÅooÜarge: ");

87 
	`°d_îr
(
ëc_mèb
);

91 
	`˛o£
(
fd
);

94 
±r
 = 
mèb_ö
;

95 *
±r
 != '\0') {

96 i‡(
	`is•a˚
(*
±r
)) *ptr = '\0';

97 
±r
++;

100 
	}
}

103 
	$ªwrôe_mèb
(
¥og_«me
)

104 *
¥og_«me
;

108 
fd
, 
n
;

111 
fd
 = 
	`¸ót
(
ëc_mèb
, 0777);

112 i‡(
fd
 < 0) {

113 
	`îr
(
¥og_«me
, ": cannot overwrite ");

118 
n
 = 
	`wrôe
(
fd
, 
mèb_out
, ()(
›å
 - mtab_out));

119 i‡(
n
 <= 0) {

121 
	`îr
(
¥og_«me
, " couldÇot write ");

125 
	`˛o£
(
fd
);

127 
	}
}

130 
	$gë_mèb_íåy
(
•ecül
, 
mou¡ed_⁄
, 
vîsi⁄
, 
rw_Êag
)

131 *
•ecül
;

132 *
mou¡ed_⁄
;

133 *
vîsi⁄
;

134 *
rw_Êag
;

138 i‡(
ùå
 >&
mèb_ö
[
BUF_SIZE
]) {

139 
•ecül
[0] = '\0';

143 
	`°r˝y
(
•ecül
, 
ùå
);

144 
	`i•röt
(*
ùå
)) iptr++;

145 *
ùå
 ='\0'&& i±∏< &
mèb_ö
[
BUF_SIZE
]) iptr++;

147 
	`°r˝y
(
mou¡ed_⁄
, 
ùå
);

148 
	`i•röt
(*
ùå
)) iptr++;

149 *
ùå
 ='\0'&& i±∏< &
mèb_ö
[
BUF_SIZE
]) iptr++;

151 
	`°r˝y
(
vîsi⁄
, 
ùå
);

152 
	`i•röt
(*
ùå
)) iptr++;

153 *
ùå
 ='\0'&& i±∏< &
mèb_ö
[
BUF_SIZE
]) iptr++;

155 
	`°r˝y
(
rw_Êag
, 
ùå
);

156 
	`i•röt
(*
ùå
)) iptr++;

157 *
ùå
 ='\0'&& i±∏< &
mèb_ö
[
BUF_SIZE
]) iptr++;

159 
	}
}

162 
	$put_mèb_íåy
(
•ecül
, 
mou¡ed_⁄
, 
vîsi⁄
, 
rw_Êag
)

163 *
•ecül
;

164 *
mou¡ed_⁄
;

165 *
vîsi⁄
;

166 *
rw_Êag
;

170 
n1
, 
n2
, 
n3
, 
n4
;

172 
n1
 = 
	`°æí
(
•ecül
);

173 
n2
 = 
	`°æí
(
mou¡ed_⁄
);

174 
n3
 = 
	`°æí
(
vîsi⁄
);

175 
n4
 = 
	`°æí
(
rw_Êag
);

177 i‡(
›å
 + 
n1
 + 
n2
 + 
n3
 + 
n4
 + 5 >&
mèb_out
[
BUF_SIZE
]) (-1);

178 
	`°r˝y
(
›å
, 
•ecül
);

179 
›å
 +
n1
;

180 *
›å
++ = ' ';

182 
	`°r˝y
(
›å
, 
mou¡ed_⁄
);

183 
›å
 +
n2
;

184 *
›å
++ = ' ';

186 
	`°r˝y
(
›å
, 
vîsi⁄
);

187 
›å
 +
n3
;

188 *
›å
++ = ' ';

190 
	`°r˝y
(
›å
, 
rw_Êag
);

191 
›å
 +
n4
;

192 *
›å
++ = '\n';

194 
	}
}

198 
	$îr
(
¥og_«me
, 
°r
)

199 *
¥og_«me
, *
°r
;

201 
	`°d_îr
(
¥og_«me
);

202 
	`°d_îr
(
°r
);

203 
	`°d_îr
(
ëc_mèb
);

204 
	`≥º‹
(" ");

205 
	}
}

	@mul_ext.c

12 
	~"FP_büs.h
"

13 
	~"FP_å≠.h
"

14 
	~"FP_ty≥s.h
"

15 
	~"FP_shi·.h
"

18 
	$mul_ext
(
e1
,
e2
)

19 
EXTEND
 *
e1
,*
e2
;

21 
i
,
j
;

22 
mp
[4];

23 
mc
[4];

24 
ªsu…
[8];

25 *
¥es
;

28 
e1
->
sign
 ^
e2
->sign;

31 
e1
->
exp
 +
e2
->exp + 1;

36 
mp
[0] = 
e1
->
m1
 >> 16;

37 
mp
[1] = (Ë
e1
->
m1
;

38 
mp
[2] = 
e1
->
m2
 >> 16;

39 
mp
[3] = (Ë
e1
->
m2
;

40 
mc
[0] = 
e2
->
m1
 >> 16;

41 
mc
[1] = (Ë
e2
->
m1
;

42 
mc
[2] = 
e2
->
m2
 >> 16;

43 
mc
[3] = (Ë
e2
->
m2
;

44 
i
 = 8; i--;) {

45 
ªsu…
[
i
] = 0;

50 
i
=4, 
¥es
 = &
ªsu…
[4];i--;¥es--Ëi‡(
mp
[i]) {

51 
k
 = 0;

52 
mpi
 = 
mp
[
i
];

53 
j
=4;j--;) {

54 
tmp
 = ()
¥es
[
j
] + 
k
;

55 i‡(
mc
[
j
]Ë
tmp
 +
mpi
 * mc[j];

56 
¥es
[
j
] = 
tmp
;

57 
k
 = 
tmp
 >> 16;

59 
¥es
[-1] = 
k
;

61 i‡(! (
ªsu…
[0] & 0x8000)) {

62 
e1
->
exp
--;

63 
i
 = 0; i <= 3; i++) {

64 
ªsu…
[
i
] <<= 1;

65 i‡(
ªsu…
[
i
+1]&0x8000)Ñesult[i] |= 1;

67 
ªsu…
[4] <<= 1;

73 
e1
->
m1
 = (()(
ªsu…
[0]) << 16) +Ñesult[1];

74 
e1
->
m2
 = (()(
ªsu…
[2]) << 16) +Ñesult[3];

75 i‡(
ªsu…
[4] & 0x8000) {

76 i‡(++
e1
->
m2
 == 0)

77 i‡(++
e1
->
m1
 == 0) {

78 
e1
->
m1
 = 
NORMBIT
;

79 
e1
->
exp
++;

84 i‡(
e1
->
exp
 >
EXT_MAX
) {

85 
	`å≠
(
EFOVFL
);

88 
e1
->
exp
 = 
EXT_MAX
;

89 
öföôy
: 
e1
->
m1
 =É1->
m2
 =0L;

93 i‡(
e1
->
exp
 < 
EXT_MIN
) {

94 
	`å≠
(
EFUNFL
);

95 
e1
->
exp
 = 
EXT_MIN
;

96 
öföôy
;

98 
	}
}

	@mvcursor.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

8 
	$mvcur
(
ﬁdy
, 
ﬁdx
, 
√wy
, 
√wx
)

9 
ﬁdy
;

10 
ﬁdx
;

11 
√wy
;

12 
√wx
;

14 i‡((
√wy
 >
LINES
Ë|| (
√wx
 >
COLS
) || (newy < 0) || (newx < 0))

15 (
ERR
);

16 
	`poscur
(
√wy
, 
√wx
);

17 
_cursv¨
.
cur§ow
 = 
√wy
;

18 
_cursv¨
.
curscﬁ
 = 
√wx
;

19 (
OK
);

20 
	}
}

	@ne2000.c

10 
	~"kî√l.h
"

11 
	~<√t/gí/ëhî.h
>

12 
	~<√t/gí/ëh_io.h
>

13 
	~"dp8390.h
"

14 
	~"√2000.h
"

16 #i‡
ENABLE_NETWORKING


18 #i‡!
__möix_vmd


19 
	#debug
 0

	)

22 
	#N
 100

	)

24 
_PROTOTYPE
–(*
	tã°f_t
), (
	td≥th_t
 *
	tdï
, 
	tpos
, 
	tu8_t
 *
	t∑t
) );

26 
u8_t
 
	g∑t0
[]= { 0x00, 0x00, 0x00, 0x00 };

27 
u8_t
 
	g∑t1
[]= { 0xFF, 0xFF, 0xFF, 0xFF };

28 
u8_t
 
	g∑t2
[]= { 0xA5, 0x5A, 0x69, 0x96 };

29 
u8_t
 
	g∑t3
[]= { 0x96, 0x69, 0x5A, 0xA5 };

31 
_PROTOTYPE
–
ã°_8
, (
d≥th_t
 *
dï
, 
pos
, 
u8_t
 *
∑t
) );

32 
_PROTOTYPE
–
ã°_16
, (
d≥th_t
 *
dï
, 
pos
, 
u8_t
 *
∑t
) );

33 
_PROTOTYPE
–
√_öô
, (
d≥th_t
 *
dï
) );

34 
_PROTOTYPE
–
√_°›
, (
d≥th_t
 *
dï
) );

39 
	$√_¥obe
(
dï
)

40 
d≥th_t
 *
dï
;

42 
byã
;

43 
i
;

44 
loc1
, 
loc2
;

45 
ã°f_t
 
f
;

47 
dï
->
de_dp8390_p‹t
dï->
de_ba£_p‹t
 + 
NE_DP8390
;

55 
dï
->
de_16bô
= 0; dep->de_16bit < 2; dep->de_16bit++)

58 
byã

	`öb_√
(
dï
, 
NE_RESET
);

59 
	`mûli_dñay
(2);

60 
	`outb_√
(
dï
, 
NE_RESET
, 
byã
);

61 
	`mûli_dñay
(2);

64 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_STP
 | 
CR_DM_ABORT
);

65 
i
0; i < 0x1000 && ((
	`öb_ªg0
(
dï
, 
DP_ISR
Ë& 
ISR_RST
) == 0); i++)

69 i‡((
	`öb_ªg0
(
dï
, 
DP_CR
Ë& (
CR_STP
|
CR_DM_ABORT
)) !=

70 (
CR_STP
|
CR_DM_ABORT
))

76 
	`outb_ªg0
(
dï
, 
DP_RCR
, 
RCR_MON
);

77 
	`outb_ªg0
(
dï
, 
DP_TCR
, 
TCR_NORMAL
);

78 i‡(
dï
->
de_16bô
)

80 
	`outb_ªg0
(
dï
, 
DP_DCR
, 
DCR_WORDWIDE
 | 
DCR_8BYTES
 |

81 
DCR_BMS
);

85 
	`outb_ªg0
(
dï
, 
DP_DCR
, 
DCR_BYTEWIDE
 | 
DCR_8BYTES
 |

86 
DCR_BMS
);

89 i‡(
dï
->
de_16bô
)

91 
loc1

NE2000_START
;

92 
loc2

NE2000_START
 + 
NE2000_SIZE
 - 4;

93 
f

ã°_16
;

97 
loc1

NE1000_START
;

98 
loc2

NE1000_START
 + 
NE1000_SIZE
 - 4;

99 
f

ã°_8
;

101 i‡(
	`f
(
dï
, 
loc1
, 
∑t0
Ë&& f(dï,Üoc1, 
∑t1
) &&

102 
	`f
(
dï
, 
loc1
, 
∑t2
Ë&& f(dï,Üoc1, 
∑t3
) &&

103 
	`f
(
dï
, 
loc2
, 
∑t0
Ë&& f(dï,Üoc2, 
∑t1
) &&

104 
	`f
(
dï
, 
loc2
, 
∑t2
Ë&& f(dï,Üoc2, 
∑t3
))

107 
dï
->
de_lömem
= 0;

108 
dï
->
de_öôf

√_öô
;

109 
dï
->
de_°›f

√_°›
;

110 
dï
->
de_¥og_IO
= 1;

115 
	}
}

121 
	$ã°_8
(
dï
, 
pos
, 
∑t
)

122 
d≥th_t
 *
dï
;

123 
pos
;

124 
u8_t
 *
∑t
;

126 
u8_t
 
buf
[4];

127 
i
;

128 
r
;

130 
	`outb_ªg0
(
dï
, 
DP_ISR
, 0xFF);

133 
	`outb_ªg0
(
dï
, 
DP_RBCR0
, 4);

134 
	`outb_ªg0
(
dï
, 
DP_RBCR1
, 0);

135 
	`outb_ªg0
(
dï
, 
DP_RSAR0
, 
pos
 & 0xFF);

136 
	`outb_ªg0
(
dï
, 
DP_RSAR1
, 
pos
 >> 8);

137 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_DM_RW
 | 
CR_PS_P0
 | 
CR_STA
);

139 
i
= 0; i<4; i++)

140 
	`outb_√
(
dï
, 
NE_DATA
, 
∑t
[
i
]);

142 
i
0; i<
N
; i++)

144 i‡(
	`öb_ªg0
(
dï
, 
DP_ISR
Ë& 
ISR_RDC
)

147 i‡(
i
 =
N
)

149 
	`¥ötf
("ne2000,Åest_8:Ñemote dma failedÅo complete\n");

153 
	`outb_ªg0
(
dï
, 
DP_RBCR0
, 4);

154 
	`outb_ªg0
(
dï
, 
DP_RBCR1
, 0);

155 
	`outb_ªg0
(
dï
, 
DP_RSAR0
, 
pos
 & 0xFF);

156 
	`outb_ªg0
(
dï
, 
DP_RSAR1
, 
pos
 >> 8);

157 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_DM_RR
 | 
CR_PS_P0
 | 
CR_STA
);

159 
i
= 0; i<4; i++)

160 
buf
[
i
]
	`öb_√
(
dï
, 
NE_DATA
);

162 
r
(
	`memcmp
(
buf
, 
∑t
, 4) == 0);

163  
r
;

164 
	}
}

170 
	$ã°_16
(
dï
, 
pos
, 
∑t
)

171 
d≥th_t
 *
dï
;

172 
pos
;

173 
u8_t
 *
∑t
;

175 
u8_t
 
buf
[4];

176 
i
;

177 
r
;

179 
	`outb_ªg0
(
dï
, 
DP_ISR
, 0xFF);

182 
	`outb_ªg0
(
dï
, 
DP_RBCR0
, 4);

183 
	`outb_ªg0
(
dï
, 
DP_RBCR1
, 0);

184 
	`outb_ªg0
(
dï
, 
DP_RSAR0
, 
pos
 & 0xFF);

185 
	`outb_ªg0
(
dï
, 
DP_RSAR1
, 
pos
 >> 8);

186 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_DM_RW
 | 
CR_PS_P0
 | 
CR_STA
);

188 
i
= 0; i<4; i += 2)

190 
	`outw_√
(
dï
, 
NE_DATA
, *(
u16_t
 *)(
∑t
+
i
));

193 
i
0; i<
N
; i++)

195 i‡(
	`öb_ªg0
(
dï
, 
DP_ISR
Ë& 
ISR_RDC
)

198 i‡(
i
 =
N
)

200 
	`¥ötf
("ne2000,Åest_16:Ñemote dma failedÅo complete\n");

204 
	`outb_ªg0
(
dï
, 
DP_RBCR0
, 4);

205 
	`outb_ªg0
(
dï
, 
DP_RBCR1
, 0);

206 
	`outb_ªg0
(
dï
, 
DP_RSAR0
, 
pos
 & 0xFF);

207 
	`outb_ªg0
(
dï
, 
DP_RSAR1
, 
pos
 >> 8);

208 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_DM_RR
 | 
CR_PS_P0
 | 
CR_STA
);

210 
i
= 0; i<4; i += 2)

212 *(
u16_t
 *)(
buf
+
i
)
	`öw_√
(
dï
, 
NE_DATA
);

215 
r
(
	`memcmp
(
buf
, 
∑t
, 4) == 0);

216  
r
;

217 
	}
}

223 
	$√_öô
(
dï
)

224 
d≥th_t
 *
dï
;

226 
i
;

227 
w‹d
, 
£ndq_ƒ
;

230 i‡(
dï
->
de_16bô
)

231 
	`outb_ªg0
(
dï
, 
DP_RBCR0
, 6*2);

233 
	`outb_ªg0
(
dï
, 
DP_RBCR0
, 6);

234 
	`outb_ªg0
(
dï
, 
DP_RBCR1
, 0);

235 
	`outb_ªg0
(
dï
, 
DP_RSAR0
, 0);

236 
	`outb_ªg0
(
dï
, 
DP_RSAR1
, 0);

237 
	`outb_ªg0
(
dï
, 
DP_CR
, 
CR_DM_RR
 | 
CR_PS_P0
 | 
CR_STA
);

239 
i
= 0; i<6; i++)

241 i‡(
dï
->
de_16bô
)

243 
w‹d

	`öw_√
(
dï
, 
NE_DATA
);

244 
dï
->
de_addªss
.
ó_addr
[
i
]
w‹d
;

248 
dï
->
de_addªss
.
ó_addr
[
i
] = 
	`öb_√
(dï, 
NE_DATA
);

251 
dï
->
de_d©a_p‹t
dï->
de_ba£_p‹t
 + 
NE_DATA
;

252 i‡(
dï
->
de_16bô
)

254 
dï
->
de_ømsize

NE2000_SIZE
;

255 
dï
->
de_off£t_∑ge

NE2000_START
 / 
DP_PAGESIZE
;

259 
dï
->
de_ømsize

NE1000_SIZE
;

260 
dï
->
de_off£t_∑ge

NE1000_START
 / 
DP_PAGESIZE
;

264 
£ndq_ƒ

dï
->
de_ømsize
 / 0x2000;

265 i‡(
£ndq_ƒ
 < 1)

266 
£ndq_ƒ
= 1;

267 i‡(
£ndq_ƒ
 > 
SENDQ_NR
)

268 
£ndq_ƒ

SENDQ_NR
;

269 
dï
->
de_£ndq_ƒ

£ndq_ƒ
;

270 
i
0; i<
£ndq_ƒ
; i++)

272 
dï
->
de_£ndq
[
i
].
sq_£nd∑ge
dï->
de_off£t_∑ge
 +

273 
i
*
SENDQ_PAGES
;

276 
dï
->
de_°¨çage
dï->
de_off£t_∑ge
 + 
i
*
SENDQ_PAGES
;

277 
dï
->
de_°›∑ge
dï->
de_off£t_∑ge
 + dï->
de_ømsize
 / 
DP_PAGESIZE
;

280 
dï
->
de_úq
 &~
DEI_DEFAULT
;

282 i‡(!
debug
)

284 
	`¥ötf
("ne2000: NE%d000át %X:%d\n",

285 
dï
->
de_16bô
 ? 2 : 1,

286 
dï
->
de_ba£_p‹t
, dï->
de_úq
);

290 
	`¥ötf
("ne2000: Novell %sÉthernet card ",

291 
dï
->
de_16bô
 ? "16-bit (ne2000)" : "8-bit (ne1000)");

292 
	`¥ötf
("at I/Oáddress 0x%X, memory size 0x%X, irq %d\n",

293 
dï
->
de_ba£_p‹t
, dï->
de_ømsize
, dï->
de_úq
);

295 
	}
}

301 
	$√_°›
(
dï
)

302 
d≥th_t
 *
dï
;

304 
byã
;

307 
byã

	`öb_√
(
dï
, 
NE_RESET
);

308 
	`mûli_dñay
(2);

309 
	`outb_√
(
dï
, 
NE_RESET
, 
byã
);

310 
	}
}

	@ne2000.h

7 #i‚de‡
NE2000_H


8 
	#NE2000_H


	)

10 
	#NE_DP8390
 0x00

	)

11 
	#NE_DATA
 0x10

	)

12 
	#NE_RESET
 0x1F

	)

14 
	#NE1000_START
 0x2000

	)

15 
	#NE1000_SIZE
 0x2000

	)

16 
	#NE2000_START
 0x4000

	)

17 
	#NE2000_SIZE
 0x4000

	)

19 
	#öb_√
(
dï
, 
ªg
Ë(
	`ö_byã
(dï->
de_ba£_p‹t
+ªg))

	)

20 
	#outb_√
(
dï
, 
ªg
, 
d©a
Ë(
	`out_byã
(dï->
de_ba£_p‹t
+ªg, d©a))

	)

21 
	#öw_√
(
dï
, 
ªg
Ë(
	`ö_w‹d
(dï->
de_ba£_p‹t
+ªg))

	)

22 
	#outw_√
(
dï
, 
ªg
, 
d©a
Ë(
	`out_w‹d
(dï->
de_ba£_p‹t
+ªg, d©a))

	)

	@newwin.c

1 
	~<°dlib.h
>

2 
	~<cur£s.h
>

3 
	~"cur•riv.h
"

10 
_PROTOTYPE
(
WINDOW
 *
makíew
, (
∆öes
, 
ncﬁs
, 
begy
,
begx
));

12 
WINDOW
 *
	$makíew
(
num_löes
, 
num_cﬁumns
, 
begy
, 
begx
)

13 
num_löes
, 
num_cﬁumns
, 
begy
, 
begx
;

15 
i
;

16 
WINDOW
 *
wö
;

19 i‡((
wö
 = (
WINDOW
 *Ë
	`mÆloc
((WINDOW))Ë=
NULL
)

20 ((
WINDOW
 *Ë
ERR
);

23 i‡((
wö
->
_löe
 = (**Ë
	`ˇŒoc
(
num_löes
, (*))Ë=
NULL
) {

24 
	`‰ì
(
wö
);

25 ((
WINDOW
 *Ë
ERR
);

29 i‡((
wö
->
_möchng
 = (*Ë
	`ˇŒoc
(
num_löes
, ())Ë=
NULL
) {

30 
	`‰ì
(
wö
);

31 
	`‰ì
(
wö
->
_löe
);

32 ((
WINDOW
 *Ë
ERR
);

34 i‡((
wö
->
_maxchng
 = (*Ë
	`ˇŒoc
(
num_löes
, ())Ë=
NULL
) {

35 
	`‰ì
(
wö
);

36 
	`‰ì
(
wö
->
_löe
);

37 
	`‰ì
(
wö
->
_möchng
);

38 ((
WINDOW
 *Ë
ERR
);

42 
wö
->
_curx
 = 0;

43 
wö
->
_cury
 = 0;

44 
wö
->
_maxy
 = 
num_löes
 - 1;

45 
wö
->
_maxx
 = 
num_cﬁumns
 - 1;

46 
wö
->
_begy
 = 
begy
;

47 
wö
->
_begx
 = 
begx
;

48 
wö
->
_Êags
 = 0;

49 
wö
->
_©ås
 = 
ATR_NRM
;

50 
wö
->
_èbsize
 = 8;

51 
wö
->
_˛ór
 = 
FALSE
;

52 
wö
->
_Àave
 = 
FALSE
;

53 
wö
->
_s¸ﬁl
 = 
FALSE
;

54 
wö
->
_nodñay
 = 
FALSE
;

55 
wö
->
_key∑d
 = 
FALSE
;

56 
wö
->
_ªgt›
 = 0;

57 
wö
->
_ªgbŸtom
 = 
num_löes
 - 1;

60 
i
 = 0; i < 
num_löes
; i++) {

61 
wö
->
_möchng
[
i
] = 0;

62 
wö
->
_maxchng
[
i
] = 
num_cﬁumns
 - 1;

66 i‡((
begy
 + 
num_löes
Ë=
LINES
) {

67 
wö
->
_Êags
 |
_ENDLINE
;

68 i‡((
begx
 =0Ë&& (
num_cﬁumns
 =
COLS
Ë&& (
begy
 == 0))

69 
wö
->
_Êags
 |
_FULLWIN
;

71 i‡(((
begy
 + 
num_löes
Ë=
LINES
Ë&& ((
begx
 + 
num_cﬁumns
Ë=
COLS
))

72 
wö
->
_Êags
 |
_SCROLLWIN
;

73 (
wö
);

74 
	}
}

83 
WINDOW
 *
	$√wwö
(
num_löes
, 
num_cﬁumns
, 
begy
, 
begx
)

84 
num_löes
, 
num_cﬁumns
, 
begy
, 
begx
;

86 
WINDOW
 *
wö
;

87 *
±r
;

88 
i
, 
j
;

90 i‡(
num_löes
 =0Ënum_löe†
LINES
 - 
begy
;

91 i‡(
num_cﬁumns
 =0Ënum_cﬁumn†
COLS
 - 
begx
;

92 i‡((
wö
 = 
	`makíew
(
num_löes
, 
num_cﬁumns
, 
begy
, 
begx
)Ë=(
WINDOW
 *Ë
ERR
)

93 ((
WINDOW
 *Ë
ERR
);

94 
i
 = 0; i < 
num_löes
; i++) {

95 i‡((
wö
->
_löe
[
i
] = (*)
	`ˇŒoc
(
num_cﬁumns
, ())Ë=
NULL
){

96 
j
 = 0; j < 
i
; j++)

97 
	`‰ì
(
wö
->
_löe
[
j
]);

98 
	`‰ì
(
wö
->
_möchng
);

99 
	`‰ì
(
wö
->
_maxchng
);

100 
	`‰ì
(
wö
->
_löe
);

101 
	`‰ì
(
wö
);

102 ((
WINDOW
 *Ë
ERR
);

104 
±r
 = 
wö
->
_löe
[
i
];Öå < wö->_löe[i] + 
num_cﬁumns
;)

105 *
±r
++ = ' ' | 
ATR_NRM
;

108 (
wö
);

109 
	}
}

120 
WINDOW
 *
	$subwö
(
‹ig
, 
num_löes
, 
num_cﬁumns
, 
begy
, 
begx
)

121 
WINDOW
 *
‹ig
;

122 
num_löes
, 
num_cﬁumns
, 
begy
, 
begx
;

124 
WINDOW
 *
wö
;

125 
i
, 
j
, 
k
;

128 i‡(
begy
 < 
‹ig
->
_begy
 || 
begx
 < orig->
_begx
 ||

129 (
begy
 + 
num_löes
Ë> (
‹ig
->
_begy
 + orig->
_maxy
) ||

130 (
begx
 + 
num_cﬁumns
Ë> (
‹ig
->
_begx
 + orig->
_maxx
) )

131 ((
WINDOW
 *Ë
ERR
);

133 i‡(
num_löes
 =0Ënum_löe†
‹ig
->
_maxy
 - (
begy
 - orig->
_begy
);

134 i‡(
num_cﬁumns
 =0Ënum_cﬁumn†
‹ig
->
_maxx
 - (
begx
 - orig->
_begx
);

135 i‡((
wö
 = 
	`makíew
(
num_löes
, 
num_cﬁumns
, 
begy
, 
begx
)Ë=(
WINDOW
 *Ë
ERR
)

136 ((
WINDOW
 *Ë
ERR
);

139 
j
 = 
begy
 - 
‹ig
->
_begy
;

140 
k
 = 
begx
 - 
‹ig
->
_begx
;

141 
i
 = 0; i < 
num_löes
; i++Ë
wö
->
_löe
[i] = (
‹ig
->_löe[
j
++]Ë+ 
k
;

142 
wö
->
_Êags
 |
_SUBWIN
;

143 (
wö
);

144 
	}
}

	@ngf4.c

13 
	~"FP_ty≥s.h
"

14 
	~"gë_put.h
"

16 
	#OFF
 ((
FL_MSW_AT_LOW_ADDRESS
 ? 0 : 2Ë+ (
FL_MSB_AT_LOW_ADDRESS
 ? 0 : 1))

	)

18 
	$ngf4
(
f
)

19 
SINGLE
 
f
;

21 *
p
;

23 i‡(
f
 !(
SINGLE
) 0) {

24 
p
 = (*Ë&
f
 + 
OFF
;

25 *
p
 ^= 0x80;

27 
	}
}

	@ngf8.c

13 
	~"FP_ty≥s.h
"

14 
	~"gë_put.h
"

16 
	#OFF
 ((
FL_MSL_AT_LOW_ADDRESS
 ? 0 : 4Ë+ (
FL_MSW_AT_LOW_ADDRESS
 ? 0 : 2Ë+ (
FL_MSB_AT_LOW_ADDRESS
 ? 0 : 1))

	)

19 
	$ngf8
(
f
)

20 
DOUBLE
 
f
;

22 *
p
;

24 i‡(
f
.
d
[0] != 0 || f.d[1] != 0) {

25 
p
 = (*Ë&
f
 + 
OFF
;

26 *
p
 ^= 0x80;

28 
	}
}

	@nlist.c

5 
	~<lib.h
>

6 
	~<°rög.h
>

7 
	~<a.out.h
>

8 
	~<sys/ty≥s.h
>

9 
	~<f˙é.h
>

10 
	~<uni°d.h
>

11 
	~<°dio.h
>

13 
	#Áû
(
Â
Ë(
	`f˛o£
(Â), -1Ë

	)

15 
_PROTOTYPE
–
∆i°
, (*
fûe
, ∆i° 
∆
[]));

23 
	$∆i°
(
fûe
, 
∆
)

24 *
fûe
;

25 
∆i°
 
∆
[];

27 
√¡s
, 
n§ch
, 
nfound
, 
i
;

28 
∆i°
 
∆ít
;

29 
FILE
 *
Â
;

30 
exec
 
hd
;

33 i‡((
Â
 = 
	`f›í
(
fûe
, "r")Ë=
NULL
)

37 i‡(
	`‰ód
((*Ë&
hd
, (
exec
), 1, 
Â
) != 1 ||

38 
	`BADMAG
(
hd
Ë|| 
	`f£ek
(
Â
, 
	`A_SYMPOS
(hd), 
SEEK_SET
) != 0)

39  
	`Áû
(
Â
);

42 
n§ch
 = 0;

43 
∆
[
n§ch
].
n_«me
 !
NULL
 && *(nl[nsrch].n_name) != '\0') {

44 
∆
[
n§ch
].
n_s˛ass
 = 0;

45 
∆
[
n§ch
].
n_vÆue
 = 0;

46 
∆
[
n§ch
].
n_ty≥
 = 0;

47 
n§ch
++;

51 
nfound
 = 0;

52 
√¡s
 = (
hd
.
a_syms
 & 0xFFFFË/ (
∆i°
);

53 
√¡s
 > 0;Çents--) {

54 i‡(
n§ch
 =
nfound
)

56 i‡(
	`‰ód
((*Ë&
∆ít
, (
∆i°
), 1, 
Â
) != 1)

57  
	`Áû
(
Â
);

58 
i
 = 0; i < 
n§ch
; i++)

59 i‡(
∆
[
i
].
n_s˛ass
 == 0 &&

60 
	`°∫cmp
(
∆
[
i
].
n_«me
, 
∆ít
.n_name,

61 (
∆ít
.
n_«me
)) == 0) {

62 
∆
[
i
] = 
∆ít
;

63 
nfound
++;

68 (Ë
	`f˛o£
(
Â
);

70  
n§ch
 - 
nfound
;

71 
	}
}

	@nrm_ext.c

14 
	~"FP_shi·.h
"

15 
	~"FP_ty≥s.h
"

18 
	$ƒm_ext
(
e1
)

19 
EXTEND
 *
e1
;

29 i‡((
e1
->
m1
 |É1->
m2
) == 0L)

34 i‡(
e1
->
m1
 == 0L) {

35 
e1
->
m1
 =É1->
m2
;

36 
e1
->
m2
 = 0L;

37 
e1
->
exp
 -= 32;

39 i‡((
e1
->
m1
 & 
NORMBIT
) == 0) {

40 
l
 = (()
NORMBIT
 >> 1);

41 
˙t
 = -1;

43 ! (
l
 & 
e1
->
m1
)) {

44 
l
 >>= 1;

45 
˙t
--;

47 
e1
->
exp
 +
˙t
;

48 
	`b64_s·
(&(
e1
->
m™tisß
), 
˙t
);

50 
	}
}

	@oneC_sum.c

6 
	~<sys/ty≥s.h
>

7 
	~<√t/gí/⁄eCsum.h
>

9 
u16_t
 
	$⁄eC_sum
(
U16_t
 
¥ev
, *
d©a
, 
size_t
 
size
)

11 
u8_t
 *
d±r
;

12 
size_t
 
n
;

13 
u16_t
 
w‹d
;

14 
u32_t
 
sum
;

15 
sw≠
= 0;

17 
sum

¥ev
;

18 
d±r

d©a
;

19 
n

size
;

21 
sw≠
((
size_t
Ë
d±r
 & 1);

22 i‡(
sw≠
) {

23 
sum
= ((sum & 0xFF) << 8) | ((sum & 0xFF00) >> 8);

24 i‡(
n
 > 0) {

25 ((
u8_t
 *Ë&
w‹d
)[0]= 0;

26 ((
u8_t
 *Ë&
w‹d
)[1]
d±r
[0];

27 
sum
+(
u32_t
Ë
w‹d
;

28 
d±r
+= 1;

29 
n
-= 1;

33 
n
 >= 8) {

34 
sum
+(
u32_t
Ë((
u16_t
 *Ë
d±r
)[0]

35 + (
u32_t
Ë((
u16_t
 *Ë
d±r
)[1]

36 + (
u32_t
Ë((
u16_t
 *Ë
d±r
)[2]

37 + (
u32_t
Ë((
u16_t
 *Ë
d±r
)[3];

38 
d±r
+= 8;

39 
n
-= 8;

42 
n
 >= 2) {

43 
sum
+(
u32_t
Ë((
u16_t
 *Ë
d±r
)[0];

44 
d±r
+= 2;

45 
n
-= 2;

48 i‡(
n
 > 0) {

49 ((
u8_t
 *Ë&
w‹d
)[0]
d±r
[0];

50 ((
u8_t
 *Ë&
w‹d
)[1]= 0;

51 
sum
+(
u32_t
Ë
w‹d
;

54 
sum
= (sum & 0xFFFF) + (sum >> 16);

55 i‡(
sum
 > 0xFFFF) sum++;

57 i‡(
sw≠
) {

58 
sum
= ((sum & 0xFF) << 8) | ((sum & 0xFF00) >> 8);

60  
sum
;

61 
	}
}

	@open.c

13 
	~"fs.h
"

14 
	~<sys/°©.h
>

15 
	~<f˙é.h
>

16 
	~<möix/ˇŒƒ.h
>

17 
	~<möix/com.h
>

18 
	~"buf.h
"

19 
	~"dev.h
"

20 
	~"fûe.h
"

21 
	~"Âroc.h
"

22 
	~"öode.h
"

23 
	~"lock.h
"

24 
	~"∑øm.h
"

26 
PRIVATE
 
mesßge
 
	gdev_mess
;

27 
PRIVATE
 
	gmode_m≠
[] = {
R_BIT
, 
W_BIT
, R_BIT|W_BIT, 0};

29 
FORWARD
 
_PROTOTYPE
–
comm⁄_›í
, (
oÊags
, 
Mode_t
 
omode
) );

30 
FORWARD
 
_PROTOTYPE
–
pùe_›í
, (
öode
 *
rù
,
Mode_t
 
bôs
,
oÊags
));

31 
FORWARD
 
_PROTOTYPE
–
öode
 *
√w_node
, (*
∑th
, 
Mode_t
 
bôs
,

32 
z⁄e_t
 
z0
) );

38 
PUBLIC
 
	$do_¸ót
()

41 
r
;

43 i‡(
	`„tch_«me
(
«me
, 
«me_Àngth
, 
M3
Ë!
OK
Ë(
îr_code
);

44 
r
 = 
	`comm⁄_›í
(
O_WRONLY
 | 
O_CREAT
 | 
O_TRUNC
, (
mode_t
Ë
mode
);

45 (
r
);

46 
	}
}

52 
PUBLIC
 
	$do_›í
()

56 
¸óã_mode
 = 0;

57 
r
;

60 i‡(
mode
 & 
O_CREAT
) {

61 
¸óã_mode
 = 
c_mode
;

62 
r
 = 
	`„tch_«me
(
c_«me
, 
«me1_Àngth
, 
M1
);

64 
r
 = 
	`„tch_«me
(
«me
, 
«me_Àngth
, 
M3
);

67 i‡(
r
 !
OK
Ë(
îr_code
);

68 
r
 = 
	`comm⁄_›í
(
mode
, 
¸óã_mode
);

69 (
r
);

70 
	}
}

76 
PRIVATE
 
	$comm⁄_›í
(
oÊags
, 
omode
)

77 
oÊags
;

78 
mode_t
 
omode
;

82 
öode
 *
rù
;

83 
r
, 
b
, 
maj‹
, 
èsk
, 
exi°
 = 
TRUE
;

84 
dev_t
 
dev
;

85 
mode_t
 
bôs
;

86 
off_t
 
pos
;

87 
fûp
 *
fû_±r
, *
fûp2
;

90 
bôs
 = (
mode_t
Ë
mode_m≠
[
oÊags
 & 
O_ACCMODE
];

93 i‡–(
r
 = 
	`gë_fd
(0, 
bôs
, &
fd
, &
fû_±r
)Ë!
OK
) (r);

96 i‡(
oÊags
 & 
O_CREAT
) {

98 
omode
 = 
I_REGULAR
 | (omodê& 
ALL_MODES
 & 
Â
->
Â_umask
);

99 
rù
 = 
	`√w_node
(
u£r_∑th
, 
omode
, 
NO_ZONE
);

100 
r
 = 
îr_code
;

101 i‡(
r
 =
OK
Ë
exi°
 = 
FALSE
;

102 i‡(
r
 !
EEXIST
) (r);

103 
exi°
 = !(
oÊags
 & 
O_EXCL
);

107 i‡–(
rù
 = 
	`ót_∑th
(
u£r_∑th
)Ë=
NIL_INODE
Ë(
îr_code
);

111 
Â
->
Â_fûp
[
fd
] = 
fû_±r
;

112 
fû_±r
->
fûp_cou¡
 = 1;

113 
fû_±r
->
fûp_öo
 = 
rù
;

114 
fû_±r
->
fûp_Êags
 = 
oÊags
;

117 i‡(
exi°
) {

119 i‡((
r
 = 
	`f‹biddí
(
rù
, 
bôs
)Ë=
OK
) {

121 
rù
->
i_mode
 & 
I_TYPE
) {

122 
I_REGULAR
:

124 i‡(
oÊags
 & 
O_TRUNC
) {

125 i‡((
r
 = 
	`f‹biddí
(
rù
, 
W_BIT
)Ë!=
OK
) ;

126 
	`åunˇã
(
rù
);

127 
	`wùe_öode
(
rù
);

132 
	`rw_öode
(
rù
, 
WRITING
);

136 
I_DIRECTORY
:

138 
r
 = (
bôs
 & 
W_BIT
 ? 
EISDIR
 : 
OK
);

141 
I_CHAR_SPECIAL
:

142 
I_BLOCK_SPECIAL
:

144 
dev_mess
.
m_ty≥
 = 
DEV_OPEN
;

145 
dev
 = (
dev_t
Ë
rù
->
i_z⁄e
[0];

146 
dev_mess
.
DEVICE
 = 
dev
;

147 
dev_mess
.
COUNT
 = 
bôs
 | (
oÊags
 & ~
O_ACCMODE
);

148 
maj‹
 = (
dev
 >> 
MAJOR
Ë& 
BYTE
;

149 i‡(
maj‹
 <0 || maj‹ >
max_maj‹
) {

150 
r
 = 
ENODEV
;

153 
èsk
 = 
dm≠
[
maj‹
].
dm≠_èsk
;

154 (*
dm≠
[
maj‹
].
dm≠_›í
)(
èsk
, &
dev_mess
);

155 
r
 = 
dev_mess
.
REP_STATUS
;

158 
I_NAMED_PIPE
:

159 
oÊags
 |
O_APPEND
;

160 
fû_±r
->
fûp_Êags
 = 
oÊags
;

161 
r
 = 
	`pùe_›í
(
rù
, 
bôs
, 
oÊags
);

162 i‡(
r
 =
OK
) {

167 
b
 = (
bôs
 & 
R_BIT
 ? R_BIT : 
W_BIT
);

168 
fû_±r
->
fûp_cou¡
 = 0;

169 i‡((
fûp2
 = 
	`föd_fûp
(
rù
, 
b
)Ë!
NIL_FILP
) {

171 
Â
->
Â_fûp
[
fd
] = 
fûp2
;

172 
fûp2
->
fûp_cou¡
++;

173 
fûp2
->
fûp_öo
 = 
rù
;

174 
fûp2
->
fûp_Êags
 = 
oÊags
;

181 
rù
->
i_cou¡
--;

184 
fû_±r
->
fûp_cou¡
 = 1;

185 i‡(
b
 =
R_BIT
)

186 
pos
 = 
rù
->
i_z⁄e
[
V2_NR_DZONES
+1];

188 
pos
 = 
rù
->
i_z⁄e
[
V2_NR_DZONES
+2];

189 
fû_±r
->
fûp_pos
 = 
pos
;

198 i‡(
r
 !
OK
) {

199 
Â
->
Â_fûp
[
fd
] = 
NIL_FILP
;

200 
fû_±r
->
fûp_cou¡
= 0;

201 
	`put_öode
(
rù
);

202 (
r
);

205 (
fd
);

206 
	}
}

212 
PRIVATE
 
öode
 *
	$√w_node
(
∑th
, 
bôs
, 
z0
)

213 *
∑th
;

214 
mode_t
 
bôs
;

215 
z⁄e_t
 
z0
;

224 
öode
 *
æa°_dú_±r
, *
rù
;

225 
r
;

226 
°rög
[
NAME_MAX
];

229 i‡((
æa°_dú_±r
 = 
	`œ°_dú
(
∑th
, 
°rög
)Ë=
NIL_INODE
) (NIL_INODE);

232 
rù
 = 
	`adv™˚
(
æa°_dú_±r
, 
°rög
);

233 i‡–
rù
 =
NIL_INODE
 && 
îr_code
 =
ENOENT
) {

235 i‡–(
rù
 = 
	`Æloc_öode
(
æa°_dú_±r
->
i_dev
, 
bôs
)Ë=
NIL_INODE
) {

237 
	`put_öode
(
æa°_dú_±r
);

238 (
NIL_INODE
);

245 
rù
->
i_∆öks
++;

246 
rù
->
i_z⁄e
[0] = 
z0
;

247 
	`rw_öode
(
rù
, 
WRITING
);

250 i‡((
r
 = 
	`£¨ch_dú
(
æa°_dú_±r
, 
°rög
, &
rù
->
i_num
,
ENTER
)Ë!
OK
) {

251 
	`put_öode
(
æa°_dú_±r
);

252 
rù
->
i_∆öks
--;

253 
rù
->
i_dút
 = 
DIRTY
;

254 
	`put_öode
(
rù
);

255 
îr_code
 = 
r
;

256 (
NIL_INODE
);

261 i‡(
rù
 !
NIL_INODE
)

262 
r
 = 
EEXIST
;

264 
r
 = 
îr_code
;

268 
	`put_öode
(
æa°_dú_±r
);

269 
îr_code
 = 
r
;

270 (
rù
);

271 
	}
}

277 
PRIVATE
 
	$pùe_›í
(
rù
, 
bôs
, 
oÊags
)

278 
öode
 *
rù
;

279 
mode_t
 
bôs
;

280 
oÊags
;

288 i‡(
	`föd_fûp
(
rù
, 
bôs
 & 
W_BIT
 ? 
R_BIT
 : W_BITË=
NIL_FILP
) {

289 i‡(
oÊags
 & 
O_NONBLOCK
) {

290 i‡(
bôs
 & 
W_BIT
Ë(
ENXIO
);

292 
	`su•íd
(
XPOPEN
);

293 } i‡(
su•_cou¡
 > 0) {

294 
	`ªÀa£
(
rù
, 
OPEN
, 
su•_cou¡
);

295 
	`ªÀa£
(
rù
, 
CREAT
, 
su•_cou¡
);

297 
rù
->
i_pùe
 = 
I_PIPE
;

299 (
OK
);

300 
	}
}

306 
PUBLIC
 
	$do_mknod
()

310 
mode_t
 
bôs
, 
mode_bôs
;

311 
öode
 *
ù
;

314 
mode_bôs
 = (
mode_t
Ë
m
.
m1_i2
;

315 i‡(!
su≥r_u£r
 && ((
mode_bôs
 & 
I_TYPE
Ë!
I_NAMED_PIPE
)Ë(
EPERM
);

316 i‡(
	`„tch_«me
(
m
.
m1_p1
, m.
m1_i1
, 
M1
Ë!
OK
Ë(
îr_code
);

317 
bôs
 = (
mode_bôs
 & 
I_TYPE
Ë| (mode_bô†& 
ALL_MODES
 & 
Â
->
Â_umask
);

318 
ù
 = 
	`√w_node
(
u£r_∑th
, 
bôs
, (
z⁄e_t
Ë
m
.
m1_i3
);

319 
	`put_öode
(
ù
);

320 (
îr_code
);

321 
	}
}

327 
PUBLIC
 
	$do_mkdú
()

331 
r1
, 
r2
;

332 
öo_t
 
dŸ
, 
dŸdŸ
;

333 
mode_t
 
bôs
;

334 
°rög
[
NAME_MAX
];

335 
öode
 *
rù
, *
ldúp
;

338 i‡(
	`„tch_«me
(
«me1
, 
«me1_Àngth
, 
M1
Ë!
OK
Ë(
îr_code
);

339 
ldúp
 = 
	`œ°_dú
(
u£r_∑th
, 
°rög
);

340 i‡(
ldúp
 =
NIL_INODE
Ë(
îr_code
);

341 i‡–(
ldúp
->
i_∆öks
 & 
BYTE
Ë>
LINK_MAX
) {

342 
	`put_öode
(
ldúp
);

343 (
EMLINK
);

347 
bôs
 = 
I_DIRECTORY
 | (
mode
 & 
RWX_MODES
 & 
Â
->
Â_umask
);

348 
rù
 = 
	`√w_node
(
u£r_∑th
, 
bôs
, (
z⁄e_t
) 0);

349 i‡(
rù
 =
NIL_INODE
 || 
îr_code
 =
EEXIST
) {

350 
	`put_öode
(
rù
);

351 
	`put_öode
(
ldúp
);

352 (
îr_code
);

356 
dŸdŸ
 = 
ldúp
->
i_num
;

357 
dŸ
 = 
rù
->
i_num
;

361 
rù
->
i_mode
 = 
bôs
;

362 
r1
 = 
	`£¨ch_dú
(
rù
, 
dŸ1
, &
dŸ
, 
ENTER
);

363 
r2
 = 
	`£¨ch_dú
(
rù
, 
dŸ2
, &
dŸdŸ
, 
ENTER
);

366 i‡(
r1
 =
OK
 && 
r2
 == OK) {

368 
rù
->
i_∆öks
++;

369 
ldúp
->
i_∆öks
++;

370 
ldúp
->
i_dút
 = 
DIRTY
;

373 (Ë
	`£¨ch_dú
(
ldúp
, 
°rög
, (
öo_t
 *Ë0, 
DELETE
);

374 
rù
->
i_∆öks
--;

376 
rù
->
i_dút
 = 
DIRTY
;

378 
	`put_öode
(
ldúp
);

379 
	`put_öode
(
rù
);

380 (
îr_code
);

381 
	}
}

387 
PUBLIC
 
	$do_˛o£
()

391 
fûp
 *
rfûp
;

392 
öode
 *
rù
;

393 
fûe_lock
 *
Êp
;

394 
rw
, 
mode_w‹d
, 
maj‹
, 
èsk
, 
lock_cou¡
;

395 
dev_t
 
dev
;

398 i‡–(
rfûp
 = 
	`gë_fûp
(
fd
)Ë=
NIL_FILP
Ë(
îr_code
);

399 
rù
 = 
rfûp
->
fûp_öo
;

401 i‡(
rfûp
->
fûp_cou¡
 - 1 =0 &&Ñfûp->
fûp_mode
 !
FILP_CLOSED
) {

403 
mode_w‹d
 = 
rù
->
i_mode
 & 
I_TYPE
;

404 i‡(
mode_w‹d
 =
I_CHAR_SPECIAL
 || mode_w‹d =
I_BLOCK_SPECIAL
) {

405 
dev
 = (
dev_t
Ë
rù
->
i_z⁄e
[0];

406 i‡(
mode_w‹d
 =
I_BLOCK_SPECIAL
) {

410 i‡(!
	`mou¡ed
(
rù
)) {

411 (Ë
	`do_sync
();

412 
	`övÆid©e
(
dev
);

418 
dev_mess
.
m_ty≥
 = 
DEV_CLOSE
;

419 
dev_mess
.
DEVICE
 = 
dev
;

420 
maj‹
 = (
dev
 >> 
MAJOR
Ë& 
BYTE
;

421 
èsk
 = 
dm≠
[
maj‹
].
dm≠_èsk
;

422 (*
dm≠
[
maj‹
].
dm≠_˛o£
)(
èsk
, &
dev_mess
);

427 i‡(
rù
->
i_pùe
 =
I_PIPE
) {

428 
rw
 = (
rfûp
->
fûp_mode
 & 
R_BIT
 ? 
WRITE
 : 
READ
);

429 
	`ªÀa£
(
rù
, 
rw
, 
NR_PROCS
);

433 i‡(--
rfûp
->
fûp_cou¡
 == 0) {

434 i‡(
rù
->
i_pùe
 =
I_PIPE
 &&Ñù->
i_cou¡
 > 1) {

439 i‡(
rfûp
->
fûp_mode
 =
R_BIT
)

440 
rù
->
i_z⁄e
[
V2_NR_DZONES
+1] = (
z⁄e_t
Ë
rfûp
->
fûp_pos
;

442 
rù
->
i_z⁄e
[
V2_NR_DZONES
+2] = (
z⁄e_t
Ë
rfûp
->
fûp_pos
;

444 
	`put_öode
(
rù
);

447 
Â
->
Â_˛€xec
 &~(1L << 
fd
);

448 
Â
->
Â_fûp
[
fd
] = 
NIL_FILP
;

451 i‡(
ƒ_locks
 =0Ë(
OK
);

452 
lock_cou¡
 = 
ƒ_locks
;

453 
Êp
 = &
fûe_lock
[0]; fÕ < &fûe_lock[
NR_LOCKS
]; flp++) {

454 i‡(
Êp
->
lock_ty≥
 == 0) ;

455 i‡(
Êp
->
lock_öode
 =
rù
 && fÕ->
lock_pid
 =
Â
->
Â_pid
) {

456 
Êp
->
lock_ty≥
 = 0;

457 
ƒ_locks
--;

460 i‡(
ƒ_locks
 < 
lock_cou¡
Ë
	`lock_ªvive
();

461 (
OK
);

462 
	}
}

468 
PUBLIC
 
	$do_l£ek
()

472 
fûp
 *
rfûp
;

473 
off_t
 
pos
;

476 i‡–(
rfûp
 = 
	`gë_fûp
(
ls_fd
)Ë=
NIL_FILP
Ë(
îr_code
);

479 i‡(
rfûp
->
fûp_öo
->
i_pùe
 =
I_PIPE
Ë(
ESPIPE
);

482 
whí˚
) {

483 0: 
pos
 = 0; ;

484 1: 
pos
 = 
rfûp
->
fûp_pos
; ;

485 2: 
pos
 = 
rfûp
->
fûp_öo
->
i_size
; ;

486 : (
EINVAL
);

490 i‡((()
off£t
 > 0Ë&& (()(
pos
 + off£tË< (Ìos)Ë(
EINVAL
);

491 i‡((()
off£t
 < 0Ë&& (()(
pos
 + off£tË> (Ìos)Ë(
EINVAL
);

492 
pos
 =Öo†+ 
off£t
;

494 i‡(
pos
 !
rfûp
->
fûp_pos
)

495 
rfûp
->
fûp_öo
->
i_£ek
 = 
ISEEK
;

496 
rfûp
->
fûp_pos
 = 
pos
;

497 
ª∂y_l1
 = 
pos
;

498 (
OK
);

499 
	}
}

	@options.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

4 
boﬁ
 
	ghasﬁd
 = 
FALSE
;

5 
	gﬁdmode
;

12 
	$idlok
(
wö
, 
Êag
)

13 
WINDOW
 *
wö
;

14 
boﬁ
 
Êag
;

16 
	}
}

22 
	$˛órok
(
wö
, 
Êag
)

23 
WINDOW
 *
wö
;

24 
boﬁ
 
Êag
;

26 i‡(
wö
 =
curs¸
)

27 
_cursv¨
.
tmpwö
->
_˛ór
 = 
Êag
;

29 
wö
->
_˛ór
 = 
Êag
;

30 
	}
}

38 
	$Àaveok
(
wö
, 
Êag
)

39 
WINDOW
 *
wö
;

40 
boﬁ
 
Êag
;

42 
wö
->
_Àave
 = 
Êag
;

43 
	}
}

49 
	$s¸ﬁlok
(
wö
, 
Êag
)

50 
WINDOW
 *
wö
;

51 
boﬁ
 
Êag
;

53 
wö
->
_s¸ﬁl
 = 
Êag
;

54 
	}
}

61 
	$nodñay
(
wö
, 
Êag
)

62 
WINDOW
 *
wö
;

63 
boﬁ
 
Êag
;

65 
wö
->
_nodñay
 = 
Êag
;

66 
	}
}

71 
	$key∑d
(
wö
, 
Êag
)

72 
WINDOW
 *
wö
;

73 
boﬁ
 
Êag
;

75 
wö
->
_key∑d
 = 
Êag
;

76 
	}
}

83 
	$mëa
(
wö
, 
Êag
)

84 
WINDOW
 *
wö
;

85 
boﬁ
 
Êag
;

87 
	}
}

	@os9.h

6 
	#CRLF
 "\r\l"

	)

7 
	#FORWARD
 

	)

9 
	~<dú.h
>

10 
dúe˘
 
	tDIRENTRY
;

	@osdep_eth.h

7 #i‚de‡
INET__OSDEP_ETH_H


8 
	#INET__OSDEP_ETH_H


	)

10 
	#IOVEC_NR
 16

	)

11 
	#RD_IOVEC
 ((
ETH_MAX_PACK_SIZE
 + 
BUF_S
 -1)/BUF_S)

	)

13 
	sosdï_ëh_p‹t


15 
	mëp_mö‹
;

16 
	mëp_èsk
;

17 
	mëp_p‹t
;

18 
iovec_t
 
	mëp_wr_iovec
[
IOVEC_NR
];

19 
iovec_t
 
	mëp_rd_iovec
[
RD_IOVEC
];

20 } 
	tosdï_ëh_p‹t_t
;

	@overlay.c

18 
	~<cur£s.h
>

19 
	~"cur•riv.h
"

26 
	$ovîœy
(
wö1
, 
wö2
)

27 
WINDOW
 *
wö1
, *
wö2
;

29 *
möchng
;

30 *
maxchng
;

31 *
w1±r
;

32 *
w2±r
;

33 
©ås
;

34 
cﬁ
;

35 
löe
;

36 
œ°_löe
;

37 
œ°_cﬁ
;

39 
œ°_cﬁ
 = 
	`mö
(
wö1
->
_maxx
, 
wö2
->_maxx);

40 
œ°_löe
 = 
	`mö
(
wö1
->
_maxy
, 
wö2
->_maxy);

41 
©ås
 = 
wö2
->
_©ås
 & 
ATR_MSK
;

42 
möchng
 = 
wö2
->
_möchng
;

43 
maxchng
 = 
wö2
->
_maxchng
;

45 
löe
 = 0;Üöê<
œ°_löe
;Üine++) {

46 
fc
, 
lc
 = 0;

47 
w1±r
 = 
wö1
->
_löe
[
löe
];

48 
w2±r
 = 
wö2
->
_löe
[
löe
];

49 
fc
 = 
_NO_CHANGE
;

50 
cﬁ
 = 0; cﬁ <
œ°_cﬁ
; col++) {

51 i‡((*
w1±r
 & 
CHR_MSK
) != ' ') {

52 *
w2±r
 = (*
w1±r
 & 
CHR_MSK
Ë| 
©ås
;

53 i‡(
fc
 =
_NO_CHANGE
Ëf¯
cﬁ
;

54 
lc
 = 
cﬁ
;

56 
w1±r
++;

57 
w2±r
++;

60 i‡(*
möchng
 =
_NO_CHANGE
) {

61 *
möchng
 = 
fc
;

62 *
maxchng
 = 
lc
;

63 } i‡(
fc
 !
_NO_CHANGE
) {

64 i‡(
fc
 < *
möchng
) *minchng = fc;

65 i‡(
lc
 > *
maxchng
) *maxchng =Üc;

67 
möchng
++;

68 
maxchng
++;

70 
	}
}

77 
	$ovîwrôe
(
wö1
, 
wö2
)

78 
WINDOW
 *
wö1
, *
wö2
;

80 *
möchng
;

81 *
maxchng
;

82 *
w1±r
;

83 *
w2±r
;

84 
©ås
;

85 
cﬁ
;

86 
löe
;

87 
œ°_löe
;

88 
œ°_cﬁ
;

90 
œ°_cﬁ
 = 
	`mö
(
wö1
->
_maxx
, 
wö2
->_maxx);

91 
œ°_löe
 = 
	`mö
(
wö1
->
_maxy
, 
wö2
->_maxy);

92 
©ås
 = 
wö2
->
_©ås
 & 
ATR_MSK
;

93 
möchng
 = 
wö2
->
_möchng
;

94 
maxchng
 = 
wö2
->
_maxchng
;

96 
löe
 = 0;Üöê<
œ°_löe
;Üine++) {

97 
fc
, 
lc
 = 0;

99 
w1±r
 = 
wö1
->
_löe
[
löe
];

100 
w2±r
 = 
wö2
->
_löe
[
löe
];

101 
fc
 = 
_NO_CHANGE
;

103 
cﬁ
 = 0; cﬁ <
œ°_cﬁ
; col++) {

104 i‡((*
w1±r
 & 
CHR_MSK
Ë!(*
w2±r
 & CHR_MSK)) {

105 *
w2±r
 = (*
w1±r
 & 
CHR_MSK
Ë| 
©ås
;

107 i‡(
fc
 =
_NO_CHANGE
Ëf¯
cﬁ
;

108 
lc
 = 
cﬁ
;

110 
w1±r
++;

111 
w2±r
++;

114 i‡(*
möchng
 =
_NO_CHANGE
) {

115 *
möchng
 = 
fc
;

116 *
maxchng
 = 
lc
;

117 } i‡(
fc
 !
_NO_CHANGE
) {

118 i‡(
fc
 < *
möchng
) *minchng = fc;

119 i‡(
lc
 > *
maxchng
) *maxchng =Üc;

121 
möchng
++;

122 
maxchng
++;

124 
	}
}

	@param.h

2 
	#acc_time
 
m
.
m2_l1


	)

3 
	#addr
 
m
.
m1_i3


	)

4 
	#buf„r
 
m
.
m1_p1


	)

5 
	#chûd
 
m
.
m1_i2


	)

6 
	#co_mode
 
m
.
m1_i1


	)

7 
	#eff_gΩ_id
 
m
.
m1_i3


	)

8 
	#eff_u£r_id
 
m
.
m1_i3


	)

9 
	#îki
 
m
.
m1_p1


	)

10 
	#fd
 
m
.
m1_i1


	)

11 
	#fd2
 
m
.
m1_i2


	)

12 
	#ioÊags
 
m
.
m1_i3


	)

13 
	#group
 
m
.
m1_i3


	)

14 
	#ªÆ_gΩ_id
 
m
.
m1_i2


	)

15 
	#ls_fd
 
m
.
m2_i1


	)

16 
	#mk_mode
 
m
.
m1_i2


	)

17 
	#mode
 
m
.
m3_i2


	)

18 
	#c_mode
 
m
.
m1_i3


	)

19 
	#c_«me
 
m
.
m1_p1


	)

20 
	#«me
 
m
.
m3_p1


	)

21 
	#«me1
 
m
.
m1_p1


	)

22 
	#«me2
 
m
.
m1_p2


	)

23 
	#«me_Àngth
 
m
.
m3_i1


	)

24 
	#«me1_Àngth
 
m
.
m1_i1


	)

25 
	#«me2_Àngth
 
m
.
m1_i2


	)

26 
	#nbyãs
 
m
.
m1_i2


	)

27 
	#off£t
 
m
.
m2_l1


	)

28 
	#ow√r
 
m
.
m1_i2


	)

29 
	#∑ª¡
 
m
.
m1_i1


	)

30 
	#∑th«me
 
m
.
m3_ˇ1


	)

31 
	#pid
 
m
.
m1_i3


	)

32 
	#¥o
 
m
.
m1_i1


	)

33 
	#rd_⁄ly
 
m
.
m1_i3


	)

34 
	#ªÆ_u£r_id
 
m
.
m1_i2


	)

35 
	#ªque°
 
m
.
m1_i2


	)

36 
	#sig
 
m
.
m1_i2


	)

37 
	#¶Ÿ1
 
m
.
m1_i1


	)

38 
	#ç
 
m
.
m2_l1


	)

39 
	#utime_a˘ime
 
m
.
m2_l1


	)

40 
	#utime_modtime
 
m
.
m2_l2


	)

41 
	#utime_fûe
 
m
.
m2_p1


	)

42 
	#utime_Àngth
 
m
.
m2_i1


	)

43 
	#whí˚
 
m
.
m2_i2


	)

46 
	#ª∂y_ty≥
 
m1
.
m_ty≥


	)

47 
	#ª∂y_l1
 
m1
.
m2_l1


	)

48 
	#ª∂y_i1
 
m1
.
m1_i1


	)

49 
	#ª∂y_i2
 
m1
.
m1_i2


	)

50 
	#ª∂y_t1
 
m1
.
m4_l1


	)

51 
	#ª∂y_t2
 
m1
.
m4_l2


	)

52 
	#ª∂y_t3
 
m1
.
m4_l3


	)

53 
	#ª∂y_t4
 
m1
.
m4_l4


	)

54 
	#ª∂y_t5
 
m1
.
m4_l5


	)

	@path.c

11 
	~"fs.h
"

12 
	~<°rög.h
>

13 
	~<möix/ˇŒƒ.h
>

14 
	~"buf.h
"

15 
	~"fûe.h
"

16 
	~"Âroc.h
"

17 
	~"öode.h
"

18 
	~"su≥r.h
"

20 
PUBLIC
 
	gdŸ1
[2] = ".";

21 
PUBLIC
 
	gdŸ2
[3] = "..";

23 
FORWARD
 
_PROTOTYPE
–*
gë_«me
, (*
ﬁd_«me
, 
°rög
 [
NAME_MAX
]) );

28 
PUBLIC
 
öode
 *
	$ót_∑th
(
∑th
)

29 *
∑th
;

35 
öode
 *
ldù
, *
rù
;

36 
°rög
[
NAME_MAX
];

39 i‡–(
ldù
 = 
	`œ°_dú
(
∑th
, 
°rög
)Ë=
NIL_INODE
)

40 (
NIL_INODE
);

43 i‡(
°rög
[0] ='\0'Ë(
ldù
);

46 
rù
 = 
	`adv™˚
(
ldù
, 
°rög
);

47 
	`put_öode
(
ldù
);

48 (
rù
);

49 
	}
}

55 
PUBLIC
 
öode
 *
	$œ°_dú
(
∑th
, 
°rög
)

56 *
∑th
;

57 
°rög
[
NAME_MAX
];

67 
öode
 *
rù
;

68 *
√w_«me
;

69 
öode
 *
√w_ù
;

72 
rù
 = (*
∑th
 ='/' ? 
Â
->
Â_roŸdú
 : fp->
Â_w‹kdú
);

75 i‡(
rù
->
i_∆öks
 =0 || *
∑th
 == '\0') {

76 
îr_code
 = 
ENOENT
;

77 (
NIL_INODE
);

80 
	`dup_öode
(
rù
);

83 
TRUE
) {

85 i‡–(
√w_«me
 = 
	`gë_«me
(
∑th
, 
°rög
)) == (*) 0) {

86 
	`put_öode
(
rù
);

87 (
NIL_INODE
);

89 i‡(*
√w_«me
 == '\0')

90 i‡–(
rù
->
i_mode
 & 
I_TYPE
Ë=
I_DIRECTORY
)

91 (
rù
);

94 
	`put_öode
(
rù
);

95 
îr_code
 = 
ENOTDIR
;

96 (
NIL_INODE
);

100 
√w_ù
 = 
	`adv™˚
(
rù
, 
°rög
);

101 
	`put_öode
(
rù
);

102 i‡(
√w_ù
 =
NIL_INODE
) (NIL_INODE);

105 
∑th
 = 
√w_«me
;

106 
rù
 = 
√w_ù
;

108 
	}
}

114 
PRIVATE
 *
	$gë_«me
(
ﬁd_«me
, 
°rög
)

115 *
ﬁd_«me
;

116 
°rög
[
NAME_MAX
];

127 
c
;

128 *
≈
, *
∫p
;

130 
≈
 = 
°rög
;

131 
∫p
 = 
ﬁd_«me
;

132  (
c
 = *
∫p
) == '/')Ñnp++;

135  
∫p
 < &
ﬁd_«me
[
PATH_MAX
] && 
c
 != '/' && c != '\0') {

136 i‡(
≈
 < &
°rög
[
NAME_MAX
]Ë*≈++ = 
c
;

137 
c
 = *++
∫p
;

141 
c
 ='/' && 
∫p
 < &
ﬁd_«me
[
PATH_MAX
]) c = *++rnp;

143 i‡(
≈
 < &
°rög
[
NAME_MAX
]) *np = '\0';

145 i‡(
∫p
 >&
ﬁd_«me
[
PATH_MAX
]) {

146 
îr_code
 = 
ENAMETOOLONG
;

149 (
∫p
);

150 
	}
}

156 
PUBLIC
 
öode
 *
	$adv™˚
(
dúp
, 
°rög
)

157 
öode
 *
dúp
;

158 
°rög
[
NAME_MAX
];

165 
öode
 *
rù
;

166 
öode
 *
rù2
;

167 
su≥r_block
 *
•
;

168 
r
, 
öumb
;

169 
dev_t
 
m¡_dev
;

170 
öo_t
 
numb
;

173 i‡(
°rög
[0] ='\0'Ë(
	`gë_öode
(
dúp
->
i_dev
, (Ëdúp->
i_num
));

176 i‡(
dúp
 =
NIL_INODE
) (NIL_INODE);

179 i‡–(
r
 = 
	`£¨ch_dú
(
dúp
, 
°rög
, &
numb
, 
LOOK_UP
)Ë!
OK
) {

180 
îr_code
 = 
r
;

181 (
NIL_INODE
);

185 i‡(
dúp
 =
Â
->
Â_roŸdú
 && 
	`°rcmp
(
°rög
, ".."Ë=0 && såög !
dŸ2
)

186 (
	`gë_öode
(
dúp
->
i_dev
, (Ëdúp->
i_num
));

189 i‡–(
rù
 = 
	`gë_öode
(
dúp
->
i_dev
, (Ë
numb
)Ë=
NIL_INODE
)

190 (
NIL_INODE
);

192 i‡(
rù
->
i_num
 =
ROOT_INODE
)

193 i‡(
dúp
->
i_num
 =
ROOT_INODE
) {

194 i‡(
°rög
[1] == '.') {

195 
•
 = &
su≥r_block
[1]; s∞< &su≥r_block[
NR_SUPERS
]; sp++){

196 i‡(
•
->
s_dev
 =
rù
->
i_dev
) {

200 
	`put_öode
(
rù
);

201 
m¡_dev
 = 
•
->
s_imou¡
->
i_dev
;

202 
öumb
 = (Ë
•
->
s_imou¡
->
i_num
;

203 
rù2
 = 
	`gë_öode
(
m¡_dev
, 
öumb
);

204 
rù
 = 
	`adv™˚
(
rù2
, 
°rög
);

205 
	`put_öode
(
rù2
);

211 i‡(
rù
 =
NIL_INODE
) (NIL_INODE);

217 
rù
 !
NIL_INODE
 &&Ñù->
i_mou¡
 =
I_MOUNT
) {

219 
•
 = &
su≥r_block
[0]; s∞< &su≥r_block[
NR_SUPERS
]; sp++) {

220 i‡(
•
->
s_imou¡
 =
rù
) {

224 
	`put_öode
(
rù
);

225 
rù
 = 
	`gë_öode
(
•
->
s_dev
, 
ROOT_INODE
);

230 (
rù
);

231 
	}
}

237 
PUBLIC
 
	$£¨ch_dú
(
ldú_±r
, 
°rög
, 
numb
, 
Êag
)

238 
öode
 *
ldú_±r
;

239 
°rög
[
NAME_MAX
];

240 
öo_t
 *
numb
;

241 
Êag
;

252 
dúe˘
 *
dp
;

253 
buf
 *
bp
;

254 
i
, 
r
, 
e_hô
, 
t
, 
m©ch
;

255 
mode_t
 
bôs
;

256 
off_t
 
pos
;

257 
√w_¶Ÿs
, 
ﬁd_¶Ÿs
;

258 
block_t
 
b
;

259 
su≥r_block
 *
•
;

260 
exãnded
 = 0;

263 i‡–(
ldú_±r
->
i_mode
 & 
I_TYPE
Ë!
I_DIRECTORY
Ë(
ENOTDIR
);

265 
r
 = 
OK
;

267 i‡(
Êag
 !
IS_EMPTY
) {

268 
bôs
 = (
Êag
 =
LOOK_UP
 ? 
X_BIT
 : 
W_BIT
 | X_BIT);

270 i‡(
°rög
 =
dŸ1
 || såög =
dŸ2
) {

271 i‡(
Êag
 !
LOOK_UP
Ë
r
 = 
	`ªad_⁄ly
(
ldú_±r
);

274 
r
 = 
	`f‹biddí
(
ldú_±r
, 
bôs
);

276 i‡(
r
 !
OK
) (r);

279 
ﬁd_¶Ÿs
 = (Ë(
ldú_±r
->
i_size
/
DIR_ENTRY_SIZE
);

280 
√w_¶Ÿs
 = 0;

281 
e_hô
 = 
FALSE
;

282 
m©ch
 = 0;

284 
pos
 = 0;Öo†< 
ldú_±r
->
i_size
;Öo†+
BLOCK_SIZE
) {

285 
b
 = 
	`ªad_m≠
(
ldú_±r
, 
pos
);

288 
bp
 = 
	`gë_block
(
ldú_±r
->
i_dev
, 
b
, 
NORMAL
);

291 
dp
 = &
bp
->
b_dú
[0]; d∞< &bp->b_dú[
NR_DIR_ENTRIES
]; dp++) {

292 i‡(++
√w_¶Ÿs
 > 
ﬁd_¶Ÿs
) {

293 i‡(
Êag
 =
ENTER
Ë
e_hô
 = 
TRUE
;

298 i‡(
Êag
 !
ENTER
 && 
dp
->
d_öo
 != 0) {

299 i‡(
Êag
 =
IS_EMPTY
) {

301 i‡(
	`°rcmp
(
dp
->
d_«me
, "." ) != 0 &&

302 
	`°rcmp
(
dp
->
d_«me
, ".."Ë!0Ë
m©ch
 = 1;

304 i‡(
	`°∫cmp
(
dp
->
d_«me
, 
°rög
, 
NAME_MAX
) == 0)

305 
m©ch
 = 1;

309 i‡(
m©ch
) {

311 
r
 = 
OK
;

312 i‡(
Êag
 =
IS_EMPTY
Ë
r
 = 
ENOTEMPTY
;

313 i‡(
Êag
 =
DELETE
) {

315 
t
 = 
NAME_MAX
 - (
öo_t
);

316 *((
öo_t
 *Ë&
dp
->
d_«me
[
t
]Ëdp->
d_öo
;

317 
dp
->
d_öo
 = 0;

318 
bp
->
b_dút
 = 
DIRTY
;

319 
ldú_±r
->
i_upd©e
 |
CTIME
 | 
MTIME
;

320 
ldú_±r
->
i_dút
 = 
DIRTY
;

322 
•
 = 
ldú_±r
->
i_•
;

323 *
numb
 = 
	`c⁄v2
(
•
->
s_«tive
, (Ë
dp
->
d_öo
);

325 
	`put_block
(
bp
, 
DIRECTORY_BLOCK
);

326 (
r
);

331 i‡(
Êag
 =
ENTER
 && 
dp
->
d_öo
 == 0) {

332 
e_hô
 = 
TRUE
;

338 i‡(
e_hô
) ;

339 
	`put_block
(
bp
, 
DIRECTORY_BLOCK
);

343 i‡(
Êag
 !
ENTER
Ë(Êag =
IS_EMPTY
 ? 
OK
 : 
ENOENT
);

348 i‡(
e_hô
 =
FALSE
) {

349 
√w_¶Ÿs
++;

350 i‡(
√w_¶Ÿs
 =0Ë(
EFBIG
);

351 i‡–(
bp
 = 
	`√w_block
(
ldú_±r
,Üdú_±r->
i_size
)Ë=
NIL_BUF
)

352 (
îr_code
);

353 
dp
 = &
bp
->
b_dú
[0];

354 
exãnded
 = 1;

358 (Ë
	`mem£t
(
dp
->
d_«me
, 0, (
size_t
Ë
NAME_MAX
);

359 
i
 = 0; 
°rög
[i] && i < 
NAME_MAX
; i++Ë
dp
->
d_«me
[i] = string[i];

360 
•
 = 
ldú_±r
->
i_•
;

361 
dp
->
d_öo
 = 
	`c⁄v2
(
•
->
s_«tive
, (Ë*
numb
);

362 
bp
->
b_dút
 = 
DIRTY
;

363 
	`put_block
(
bp
, 
DIRECTORY_BLOCK
);

364 
ldú_±r
->
i_upd©e
 |
CTIME
 | 
MTIME
;

365 
ldú_±r
->
i_dút
 = 
DIRTY
;

366 i‡(
√w_¶Ÿs
 > 
ﬁd_¶Ÿs
) {

367 
ldú_±r
->
i_size
 = (
off_t
Ë
√w_¶Ÿs
 * 
DIR_ENTRY_SIZE
;

369 i‡(
exãnded
Ë
	`rw_öode
(
ldú_±r
, 
WRITING
);

371 (
OK
);

372 
	}
}

	@peekpoke.c

10 
	~<sys/ty≥s.h
>

11 
	~<f˙é.h
>

12 
	~<uni°d.h
>

14 
_PROTOTYPE
–
≥ek
, (
£gmít
, 
off£t
));

15 
_PROTOTYPE
–
poke
, (
£gmít
, 
off£t
, 
vÆue
));

17 
	#SEGSIZE
 0x10

	)

19 
	$≥ek
(
£gmít
, 
off£t
)

20 
£gmít
;

21 
off£t
;

23 
chvÆue
;

24 
öfd
 = -1;

26 i‡(
öfd
 < 0Ëöfd = 
	`›í
("/dev/mem", 
O_RDONLY
);

27 i‡(
öfd
 < 0 ||

28 
	`l£ek
(
öfd
, (Ë
£gmít
 * 
SEGSIZE
 + 
off£t
, 
SEEK_SET
) < 0 ||

29 
	`ªad
(
öfd
, (*Ë&
chvÆue
, () 1) != 1)

31 (
chvÆue
);

32 
	}
}

34 
	$poke
(
£gmít
, 
off£t
, 
vÆue
)

35 
£gmít
;

36 
off£t
;

37 
vÆue
;

39 
chvÆue
;

40 
outfd
 = -1;

42 
chvÆue
 = 
vÆue
;

43 i‡(
outfd
 < 0Ëoutfd = 
	`›í
("/dev/mem", 
O_WRONLY
);

44 i‡(
outfd
 < 0 ||

45 
	`l£ek
(
outfd
, (Ë
£gmít
 * 
SEGSIZE
 + 
off£t
, 
SEEK_SET
) < 0 ||

46 
	`wrôe
(
outfd
, (*Ë&
chvÆue
, () 1) != 1)

48 (
chvÆue
);

49 
	}
}

	@perror.c

6 #if 
deföed
(
_POSIX_SOURCE
)

7 
	~<sys/ty≥s.h
>

9 
	~<°dio.h
>

10 
	~<î∫o.h
>

11 
	~<°dio.h
>

12 
	~<°rög.h
>

13 
	~"loc_ö˛.h
"

15 
ssize_t
 
_wrôe
(
d
, c⁄° *
buf
, 
size_t
 
nbyãs
);

18 
	$≥º‹
(c⁄° *
s
)

20 *
p
;

21 
fd
;

23 
p
 = 
	`°ªº‹
(
î∫o
);

24 
fd
 = 
	`fûío
(
°dîr
);

25 
	`fÊush
(
°dout
);

26 
	`fÊush
(
°dîr
);

27 i‡(
s
 && *s) {

28 
	`_wrôe
(
fd
, 
s
, 
	`°æí
(s));

29 
	`_wrôe
(
fd
, ": ", 2);

31 
	`_wrôe
(
fd
, 
p
, 
	`°æí
(p));

32 
	`_wrôe
(
fd
, "\n", 1);

33 
	}
}

	@pipe.c

16 
	~"fs.h
"

17 
	~<f˙é.h
>

18 
	~<sig«l.h
>

19 
	~<möix/boŸ.h
>

20 
	~<möix/ˇŒƒ.h
>

21 
	~<möix/com.h
>

22 
	~"dev.h
"

23 
	~"fûe.h
"

24 
	~"Âroc.h
"

25 
	~"öode.h
"

26 
	~"∑øm.h
"

28 
PRIVATE
 
mesßge
 
	gmess
;

33 
PUBLIC
 
	$do_pùe
()

37 
Âroc
 *
rÂ
;

38 
öode
 *
rù
;

39 
r
;

40 
fûp
 *
fû_±r0
, *
fû_±r1
;

41 
fû_des
[2];

44 
rÂ
 = 
Â
;

45 i‡–(
r
 = 
	`gë_fd
(0, 
R_BIT
, &
fû_des
[0], &
fû_±r0
)Ë!
OK
) (r);

46 
rÂ
->
Â_fûp
[
fû_des
[0]] = 
fû_±r0
;

47 
fû_±r0
->
fûp_cou¡
 = 1;

48 i‡–(
r
 = 
	`gë_fd
(0, 
W_BIT
, &
fû_des
[1], &
fû_±r1
)Ë!
OK
) {

49 
rÂ
->
Â_fûp
[
fû_des
[0]] = 
NIL_FILP
;

50 
fû_±r0
->
fûp_cou¡
 = 0;

51 (
r
);

53 
rÂ
->
Â_fûp
[
fû_des
[1]] = 
fû_±r1
;

54 
fû_±r1
->
fûp_cou¡
 = 1;

57 i‡–(
rù
 = 
	`Æloc_öode
(
PIPE_DEV
, 
I_REGULAR
ËË=
NIL_INODE
) {

58 
rÂ
->
Â_fûp
[
fû_des
[0]] = 
NIL_FILP
;

59 
fû_±r0
->
fûp_cou¡
 = 0;

60 
rÂ
->
Â_fûp
[
fû_des
[1]] = 
NIL_FILP
;

61 
fû_±r1
->
fûp_cou¡
 = 0;

62 (
îr_code
);

65 i‡(
	`ªad_⁄ly
(
rù
Ë!
OK
Ë
	`∑nic
("pùêdevi˚ i†ªad o∆y", 
NO_NUM
);

67 
rù
->
i_pùe
 = 
I_PIPE
;

68 
rù
->
i_mode
 &~
I_REGULAR
;

69 
rù
->
i_mode
 |
I_NAMED_PIPE
;

70 
fû_±r0
->
fûp_öo
 = 
rù
;

71 
fû_±r0
->
fûp_Êags
 = 
O_RDONLY
;

72 
	`dup_öode
(
rù
);

73 
fû_±r1
->
fûp_öo
 = 
rù
;

74 
fû_±r1
->
fûp_Êags
 = 
O_WRONLY
;

75 
	`rw_öode
(
rù
, 
WRITING
);

76 
ª∂y_i1
 = 
fû_des
[0];

77 
ª∂y_i2
 = 
fû_des
[1];

78 
rù
->
i_upd©e
 = 
ATIME
 | 
CTIME
 | 
MTIME
;

79 (
OK
);

80 
	}
}

86 
PUBLIC
 
	$pùe_check
(
rù
, 
rw_Êag
, 
oÊags
, 
byãs
, 
posôi⁄
, 
ˇnwrôe
)

87 
öode
 *
rù
;

88 
rw_Êag
;

89 
oÊags
;

90 
byãs
;

91 
off_t
 
posôi⁄
;

92 *
ˇnwrôe
;

100 
r
 = 0;

103 i‡(
rw_Êag
 =
READING
) {

104 i‡(
posôi⁄
 >
rù
->
i_size
) {

106 i‡(
	`föd_fûp
(
rù
, 
W_BIT
Ë!
NIL_FILP
) {

108 i‡(
oÊags
 & 
O_NONBLOCK
)

109 
r
 = 
EAGAIN
;

111 
	`su•íd
(
XPIPE
);

114 i‡(
su•_cou¡
 > 0Ë
	`ªÀa£
(
rù
, 
WRITE
, susp_count);

116 (
r
);

121 i‡(
	`föd_fûp
(
rù
, 
R_BIT
Ë=
NIL_FILP
) {

123 
	`sys_kûl
(()(
Â
 - 
Âroc
), 
SIGPIPE
);

124 (
EPIPE
);

127 i‡(
posôi⁄
 + 
byãs
 > 
PIPE_SIZE
) {

128 i‡((
oÊags
 & 
O_NONBLOCK
Ë&& 
byãs
 < 
PIPE_SIZE
)

129 (
EAGAIN
);

130 i‡((
oÊags
 & 
O_NONBLOCK
Ë&& 
byãs
 > 
PIPE_SIZE
) {

131 i‡–(*
ˇnwrôe
 = (
PIPE_SIZE
 - 
posôi⁄
)) > 0) {

133 
	`ªÀa£
(
rù
, 
READ
, 
su•_cou¡
);

136 (
EAGAIN
);

139 i‡(
byãs
 > 
PIPE_SIZE
) {

140 i‡((*
ˇnwrôe
 = 
PIPE_SIZE
 - 
posôi⁄
) > 0) {

144 
	`ªÀa£
(
rù
, 
READ
, 
su•_cou¡
);

148 
	`su•íd
(
XPIPE
);

153 i‡(
posôi⁄
 =0Ë
	`ªÀa£
(
rù
, 
READ
, 
su•_cou¡
);

156 *
ˇnwrôe
 = 0;

158 
	}
}

164 
PUBLIC
 
	$su•íd
(
èsk
)

165 
èsk
;

173 i‡(
èsk
 =
XPIPE
 ||Åask =
XPOPEN
Ë
su•_cou¡
++;

174 
Â
->
Â_su•íded
 = 
SUSPENDED
;

175 
Â
->
Â_fd
 = 
fd
 << 8 | 
fs_ˇŒ
;

176 
Â
->
Â_èsk
 = -
èsk
;

177 i‡(
èsk
 =
XLOCK
) {

178 
Â
->
Â_buf„r
 = (*Ë
«me1
;

179 
Â
->
Â_nbyãs
 =
ªque°
;

181 
Â
->
Â_buf„r
 = 
buf„r
;

182 
Â
->
Â_nbyãs
 = 
nbyãs
;

184 
d⁄t_ª∂y
 = 
TRUE
;

185 
	}
}

191 
PUBLIC
 
	$ªÀa£
(
ù
, 
ˇŒ_ƒ
, 
cou¡
)

192 
öode
 *
ù
;

193 
ˇŒ_ƒ
;

194 
cou¡
;

201 
Âroc
 *
Ω
;

204 
Ω
 = &
Âroc
[0];Ñ∞< &Âroc[
NR_PROCS
];Ñp++) {

205 i‡(
Ω
->
Â_su•íded
 =
SUSPENDED
 &&

206 
Ω
->
Â_ªvived
 =
NOT_REVIVING
 &&

207 (
Ω
->
Â_fd
 & 
BYTE
Ë=
ˇŒ_ƒ
 &&

208 
Ω
->
Â_fûp
[Ω->
Â_fd
>>8]->
fûp_öo
 =
ù
) {

209 
	`ªvive
(()(
Ω
 - 
Âroc
), 0);

210 
su•_cou¡
--;

211 i‡(--
cou¡
 == 0) ;

214 
	}
}

220 
PUBLIC
 
	$ªvive
(
¥oc_ƒ
, 
byãs
)

221 
¥oc_ƒ
;

222 
byãs
;

228 
Âroc
 *
rÂ
;

229 
èsk
;

231 i‡(
¥oc_ƒ
 < 0 ||Öroc_ƒ >
NR_PROCS
Ë
	`∑nic
("reviveÉrr",Öroc_nr);

232 
rÂ
 = &
Âroc
[
¥oc_ƒ
];

233 i‡(
rÂ
->
Â_su•íded
 =
NOT_SUSPENDED
 ||ÑÂ->
Â_ªvived
 =
REVIVING
);

240 
èsk
 = -
rÂ
->
Â_èsk
;

241 i‡(
èsk
 =
XPIPE
 ||Åask =
XLOCK
) {

243 
rÂ
->
Â_ªvived
 = 
REVIVING
;

244 
ªvivög
++;

246 
rÂ
->
Â_su•íded
 = 
NOT_SUSPENDED
;

247 i‡(
èsk
 =
XPOPEN
)

248 
	`ª∂y
(
¥oc_ƒ
, 
rÂ
->
Â_fd
>>8);

251 
rÂ
->
Â_nbyãs
 = 
byãs
;

252 
	`ª∂y
(
¥oc_ƒ
, 
byãs
);

255 
	}
}

261 
PUBLIC
 
	$do_u≈au£
()

267 
Âroc
 *
rÂ
;

268 
¥oc_ƒ
, 
èsk
, 
fûd
;

269 
fûp
 *
f
;

270 
dev_t
 
dev
;

272 i‡(
who
 > 
MM_PROC_NR
Ë(
EPERM
);

273 
¥oc_ƒ
 = 
¥o
;

274 i‡(
¥oc_ƒ
 < 0 ||Öroc_ƒ >
NR_PROCS
Ë
	`∑nic
("unpauseÉrr 1",Öroc_nr);

275 
rÂ
 = &
Âroc
[
¥oc_ƒ
];

276 i‡(
rÂ
->
Â_su•íded
 =
NOT_SUSPENDED
Ë(
OK
);

277 
èsk
 = -
rÂ
->
Â_èsk
;

279 
èsk
) {

280 
XPIPE
:

283 
XOPEN
:

284 
	`∑nic
 ("fs/do_u≈au£ cÆÀd wôh XOPEN\n", 
NO_NUM
);

286 
XLOCK
:

289 
XPOPEN
:

293 
fûd
 = (
rÂ
->
Â_fd
 >> 8Ë& 
BYTE
;

294 i‡(
fûd
 < 0 || fûd >
OPEN_MAX
)
	`∑nic
("u≈au£Éº 2",
NO_NUM
);

295 
f
 = 
rÂ
->
Â_fûp
[
fûd
];

296 
dev
 = (
dev_t
Ë
f
->
fûp_öo
->
i_z⁄e
[0];

297 
mess
.
TTY_LINE
 = (
dev
 >> 
MINOR
Ë& 
BYTE
;

298 
mess
.
PROC_NR
 = 
¥oc_ƒ
;

301 
mess
.
COUNT
 = (
rÂ
->
Â_fd
 & 
BYTE
Ë=
READ
 ? 
R_BIT
 : 
W_BIT
;

302 
mess
.
m_ty≥
 = 
CANCEL
;

303 
Â
 = 
rÂ
;

304 (*
dm≠
[(
dev
 >> 
MAJOR
Ë& 
BYTE
].
dm≠_rw
)(
èsk
, &
mess
);

307 
rÂ
->
Â_su•íded
 = 
NOT_SUSPENDED
;

308 
	`ª∂y
(
¥oc_ƒ
, 
EINTR
);

309 (
OK
);

310 
	}
}

	@popen.c

6 
	~<sys/ty≥s.h
>

7 
	~<limôs.h
>

8 
	~<î∫o.h
>

9 
	~<sig«l.h
>

10 
	~<°dio.h
>

12 #if 
deföed
(
__BSD4_2
)

13 
	uwaô
 {

14 
	mw_°©us
;

16 
waô
 
	twaô_¨g
;

18 
	twaô_¨g
;

21 
	~"../°dio/loc_ö˛.h
"

23 #ifde‡
_ANSI


24 
_˛o£
(
d
);

25 
_dup2
(
ﬁdd
, 
√wd
);

26 
_exe˛
(c⁄° *
«me
, c⁄° *
_¨g
, ... );

27 
pid_t
 
_f‹k
();

28 
_pùe
(
fûdes
[2]);

29 
pid_t
 
_waô
(
waô_¨g
 *
°©us
);

30 
_exô
(
°©us
);

33 
	gpids
[
OPEN_MAX
];

35 
FILE
 *

36 
	$p›í
(
comm™d
, 
ty≥
)

37 
_CONST
 *
comm™d
;

38 
_CONST
 *
ty≥
;

40 
pùed
[2];

41 
Xty≥
 = *
ty≥
 == 'r' ? 0 : *type == 'w' ? 1 : 2;

42 
pid
;

44 i‡(
Xty≥
 == 2 ||

45 
	`_pùe
(
pùed
) < 0 ||

46 (
pid
 = 
	`_f‹k
()) < 0)  0;

48 i‡(
pid
 == 0) {

50 *
p
;

52 
p
 = 
pids
;Ö < &pids[
OPEN_MAX
];Ö++) {

53 i‡(*
p
Ë
	`_˛o£
(()’ - 
pids
));

55 
	`_˛o£
(
pùed
[
Xty≥
]);

56 
	`_dup2
(
pùed
[!
Xty≥
], !Xtype);

57 
	`_˛o£
(
pùed
[!
Xty≥
]);

58 
	`_exe˛
("/bö/sh", "sh", "-c", 
comm™d
, (*) 0);

59 
	`_exô
(127);

62 
pids
[
pùed
[
Xty≥
]] = 
pid
;

63 
	`_˛o£
(
pùed
[!
Xty≥
]);

64  
	`fd›í
(
pùed
[
Xty≥
], 
ty≥
);

65 
	}
}

67 #if 
deföed
(
__BSD4_2
)

68 
	#ªt_vÆ
 
°©us
.
w_°©us


	)

70 
	#ªt_vÆ
 
°©us


	)

74 
	$p˛o£
(
°ªam
)

75 
FILE
 *
°ªam
;

77 
fd
 = 
	`fûío
(
°ªam
);

78 
waô_¨g
 
°©us
;

79 
wªt
;

81 #ifde‡
_ANSI


82 (*
ötßve
)(Ë
	`sig«l
(
SIGINT
, 
SIG_IGN
);

83 (*
quôßve
)(Ë
	`sig«l
(
SIGQUIT
, 
SIG_IGN
);

85 (*
ötßve
)(Ë
	`sig«l
(
SIGINT
, 
SIG_IGN
);

86 (*
quôßve
)(Ë
	`sig«l
(
SIGQUIT
, 
SIG_IGN
);

88 
	`f˛o£
(
°ªam
);

89 (
wªt
 = 
	`_waô
(&
°©us
)) != -1) {

90 i‡(
wªt
 =
pids
[
fd
]) ;

92 i‡(
wªt
 =-1Ë
ªt_vÆ
 = -1;

93 
	`sig«l
(
SIGINT
, 
ötßve
);

94 
	`sig«l
(
SIGQUIT
, 
quôßve
);

95 
pids
[
fd
] = 0;

96  
ªt_vÆ
;

97 
	}
}

99 #if 
deföed
(
__USG
)

100 
_dup
(
fûdes
);

103 
	$_dup2
(
ﬁdd
, 
√wd
)

104 
ﬁdd
, 
√wd
;

106 
i
 = 0, 
fd
, 
tmp
;

107 
fdbuf
[
_NFILES
];

110 
tmp
 = 
î∫o
; (Ë
	`_˛o£
(
√wd
);Érrno =Åmp;

111 (
fd
 = 
	`_dup
(
ﬁdd
)Ë!
√wd
) {

112 i‡(
fd
 == -1) ;

113 
fdbuf
[
i
++] = 
fd
;

115 
tmp
 = 
î∫o
;

116 --
i
 >= 0) {

117 
	`_˛o£
(
fdbuf
[
i
]);

119 
î∫o
 = 
tmp
;

120  -(
fd
 == -1);

121 
	}
}

	@pow.c

9 
	~<m©h.h
>

10 
	~<Êﬂt.h
>

11 
	~<î∫o.h
>

12 
	~"loˇlm©h.h
"

15 
	$pow
(
x
, 
y
)

22 
dummy
;

23 
ªsu…_√g
 = 0;

25 i‡((
x
 =0 && 
y
 == 0) ||

26 (
x
 < 0 && 
	`modf
(
y
, &
dummy
) != 0)) {

27 
î∫o
 = 
EDOM
;

31 i‡(
x
 == 0)  x;

33 i‡(
x
 < 0) {

34 i‡(
	`modf
(
y
/2.0, &
dummy
) != 0) {

36 
ªsu…_√g
 = 1;

38 
x
 = -x;

40 
x
 = 
	`log
(x);

42 i‡(
x
 < 0) {

43 
x
 = -x;

44 
y
 = -y;

47 i‡(
x
 > 1.0 && 
y
 > 
DBL_MAX
/x) {

48 
î∫o
 = 
ERANGE
;

49  
ªsu…_√g
 ? -
HUGE_VAL
 : HUGE_VAL;

52 
x
 = 
	`exp
(x * 
y
);

53  
ªsu…_√g
 ? -
x
 : x;

54 
	}
}

	@printer.c

23 
	~"kî√l.h
"

24 
	~<möix/ˇŒƒ.h
>

25 
	~<möix/com.h
>

26 
	~"¥oc.h
"

45 
	#ASSERT_STROBE
 0x1D

	)

46 
	#NEGATE_STROBE
 0x1C

	)

47 
	#SELECT
 0x0C

	)

48 
	#INIT_PRINTER
 0x08

	)

58 
	#BUSY_STATUS
 0x10

	)

59 
	#NO_PAPER
 0x20

	)

60 
	#NORMAL_STATUS
 0x90

	)

61 
	#ON_LINE
 0x10

	)

62 
	#STATUS_MASK
 0xB0

	)

77 
PRIVATE
 
	gˇŒî
;

78 
PRIVATE
 
	gd⁄e_°©us
;

79 
PRIVATE
 
	gﬁe·
;

80 
PRIVATE
 
	gobuf
[128];

81 
PRIVATE
 
	g›ídög
;

82 
PRIVATE
 *
	g›å
;

83 
PRIVATE
 
	g‹ig_cou¡
;

84 
PRIVATE
 
	gp‹t_ba£
;

85 
PRIVATE
 
	g¥oc_ƒ
;

86 
PRIVATE
 
	gu£r_À·
;

87 
PRIVATE
 
vú_byãs
 
	gu£r_vú
;

88 
PRIVATE
 
	gwrôög
;

90 
FORWARD
 
_PROTOTYPE
–
do_ˇn˚l
, (
mesßge
 *
m_±r
) );

91 
FORWARD
 
_PROTOTYPE
–
do_d⁄e
, () );

92 
FORWARD
 
_PROTOTYPE
–
do_wrôe
, (
mesßge
 *
m_±r
) );

93 
FORWARD
 
_PROTOTYPE
–
¥_°¨t
, () );

94 
FORWARD
 
_PROTOTYPE
–
¥öt_öô
, () );

95 
FORWARD
 
_PROTOTYPE
–
ª∂y
, (
code
, 
ª∂yì
, 
¥o˚ss
,

96 
°©us
) );

97 
FORWARD
 
_PROTOTYPE
–
¥_h™dÀr
, (
úq
) );

102 
PUBLIC
 
	$¥öãr_èsk
()

106 
mesßge
 
¥_mess
;

108 
	`¥öt_öô
();

110 
TRUE
) {

111 
	`ª˚ive
(
ANY
, &
¥_mess
);

112 
¥_mess
.
m_ty≥
) {

113 
DEV_OPEN
:

114 
DEV_CLOSE
:

115 
	`ª∂y
(
TASK_REPLY
, 
¥_mess
.
m_sour˚
,Ör_mess.
PROC_NR
, 
OK
);

117 
DEV_WRITE
: 
	`do_wrôe
(&
¥_mess
); ;

118 
CANCEL
 : 
	`do_ˇn˚l
(&
¥_mess
); ;

119 
HARD_INT
 : 
	`do_d⁄e
(); ;

121 
	`ª∂y
(
TASK_REPLY
, 
¥_mess
.
m_sour˚
,Ör_mess.
PROC_NR
, 
EINVAL
);

124 
	}
}

130 
PRIVATE
 
	$do_wrôe
(
m_±r
)

131 
mesßge
 *
m_±r
;

135 
r
;

140 i‡(
wrôög
) {

141 
r
 = 
EIO
;

143 i‡(
m_±r
->
COUNT
 <= 0) {

144 
r
 = 
EINVAL
;

146 i‡(
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
Ëm_±r->
ADDRESS
, m_±r->
COUNT
) == 0) {

147 
r
 = 
EFAULT
;

150 
ˇŒî
 = 
m_±r
->
m_sour˚
;

151 
¥oc_ƒ
 = 
m_±r
->
PROC_NR
;

152 
u£r_À·
 = 
m_±r
->
COUNT
;

153 
‹ig_cou¡
 = 
m_±r
->
COUNT
;

154 
u£r_vú
 = (
vú_byãs
Ë
m_±r
->
ADDRESS
;

155 
	`¥_°¨t
();

156 
wrôög
 = 
TRUE
;

157 
r
 = 
SUSPEND
;

161 
	`ª∂y
(
TASK_REPLY
, 
m_±r
->
m_sour˚
, m_±r->
PROC_NR
, 
r
);

162 
	}
}

168 
PRIVATE
 
	$do_d⁄e
()

174 
°©us
;

176 i‡(!
wrôög
) ;

177 i‡(
d⁄e_°©us
 !
OK
) {

179 
°©us
 = 
EIO
;

180 i‡((
d⁄e_°©us
 & 
ON_LINE
) == 0) {

181 
	`¥ötf
("Printer isÇot onÜine\n");

183 i‡(
d⁄e_°©us
 & 
NO_PAPER
) {

184 
°©us
 = 
EAGAIN
;

186 
	`¥ötf
("Pröã∏îr‹, sètu†i†0x%02X\n", 
d⁄e_°©us
);

188 i‡(
°©us
 =
EAGAIN
 && 
u£r_À·
 < 
‹ig_cou¡
) {

190 
°©us
 = 
‹ig_cou¡
 - 
u£r_À·
;

192 
ﬁe·
 = 0;

193 } i‡(
u£r_À·
 != 0) {

194 
	`¥_°¨t
();

197 
°©us
 = 
‹ig_cou¡
;

199 
	`ª∂y
(
REVIVE
, 
ˇŒî
, 
¥oc_ƒ
, 
°©us
);

200 
wrôög
 = 
FALSE
;

201 
	}
}

207 
PRIVATE
 
	$do_ˇn˚l
(
m_±r
)

208 
mesßge
 *
m_±r
;

216 i‡(
wrôög
 && 
m_±r
->
PROC_NR
 =
¥oc_ƒ
) {

217 
ﬁe·
 = 0;

218 
wrôög
 = 
FALSE
;

220 
	`ª∂y
(
TASK_REPLY
, 
m_±r
->
m_sour˚
, m_±r->
PROC_NR
, 
EINTR
);

221 
	}
}

227 
PRIVATE
 
	$ª∂y
(
code
, 
ª∂yì
, 
¥o˚ss
, 
°©us
)

228 
code
;

229 
ª∂yì
;

230 
¥o˚ss
;

231 
°©us
;

235 
mesßge
 
¥_mess
;

237 
¥_mess
.
m_ty≥
 = 
code
;

238 
¥_mess
.
REP_STATUS
 = 
°©us
;

239 
¥_mess
.
REP_PROC_NR
 = 
¥o˚ss
;

240 
	`£nd
(
ª∂yì
, &
¥_mess
);

241 
	}
}

247 
PRIVATE
 
	$¥öt_öô
()

253 
	`phys_c›y
(0x408L, 
	`vú2phys
(&
p‹t_ba£
), 2L);

254 
	`out_byã
(
p‹t_ba£
 + 2, 
INIT_PRINTER
);

255 
	`mûli_dñay
(2);

256 
	`out_byã
(
p‹t_ba£
 + 2, 
SELECT
);

257 
	`put_úq_h™dÀr
(
PRINTER_IRQ
, 
¥_h™dÀr
);

258 
	`íabÀ_úq
(
PRINTER_IRQ
);

259 
	}
}

265 
PRIVATE
 
	$¥_°¨t
()

269 
chunk
;

270 
phys_byãs
 
u£r_phys
;

272 i‡–(
chunk
 = 
u£r_À·
Ë>  
obuf
) chunk =  obuf;

273 
u£r_phys
 = 
	`¥oc_vú2phys
(
	`¥oc_addr
(
¥oc_ƒ
), 
u£r_vú
);

274 
	`phys_c›y
(
u£r_phys
, 
	`vú2phys
(
obuf
), (
phys_byãs
Ë
chunk
);

275 
›å
 = 
obuf
;

276 
›ídög
 = 
TRUE
;

277 
ﬁe·
 = 
chunk
;

278 
	}
}

284 
PRIVATE
 
	$¥_h™dÀr
(
úq
)

285 
úq
;

299 
°©us
;

301 i‡(
ﬁe·
 == 0) {

307 
	`out_byã
(
p‹t_ba£
 + 2, 
SELECT
);

315 
°©us
 = 
	`ö_byã
(
p‹t_ba£
 + 1);

316 i‡((
°©us
 & 
STATUS_MASK
Ë=
BUSY_STATUS
) {

325 i‡((
°©us
 & 
STATUS_MASK
Ë=
NORMAL_STATUS
) {

327 
	`out_byã
(
p‹t_ba£
, *
›å
++);

328 
	`lock
();

329 
	`out_byã
(
p‹t_ba£
 + 2, 
ASSERT_STROBE
);

330 
	`out_byã
(
p‹t_ba£
 + 2, 
NEGATE_STROBE
);

331 
	`u∆ock
();

332 
›ídög
 = 
FALSE
;

334 
u£r_vú
++;

335 
u£r_À·
--;

338 
d⁄e_°©us
 = 
°©us
;

339 
	`öãºu±
(
PRINTER
);

343 --
ﬁe·
 != 0);

346 
d⁄e_°©us
 = 
OK
;

347 
	`öãºu±
(
PRINTER
);

349 
	}
}

355 
PUBLIC
 
	$¥_ª°¨t
()

362 i‡(
ﬁe·
 != 0) {

363 i‡(
›ídög
 && 
	`dißbÀ_úq
(
PRINTER_IRQ
)) {

364 (Ë
	`¥_h™dÀr
(
PRINTER_IRQ
);

367 
	`íabÀ_úq
(
PRINTER_IRQ
);

369 
›ídög
 = 
TRUE
;

371 
	}
}

	@printf.c

6 
	~<°dio.h
>

7 
	~<°d¨g.h
>

8 
	~"loc_ö˛.h
"

11 
	$¥ötf
(c⁄° *
f‹m©
, ...)

13 
va_li°
 
≠
;

14 
ªtvÆ
;

16 
	`va_°¨t
(
≠
, 
f‹m©
);

18 
ªtvÆ
 = 
	`_d›∫t
(
f‹m©
, 
≠
, 
°dout
);

20 
	`va_íd
(
≠
);

22  
ªtvÆ
;

23 
	}
}

	@printk.c

4 
	#nû
 0

	)

5 
	~<°d¨g.h
>

6 
	~<limôs.h
>

8 
	#isdigô
(
c
Ë((Ë((cË- '0'Ë< (Ë10)

	)

10 #i‡!
__STDC__


12 
putk
();

13 
	$¥ötk
(
fmt
) *fmt;

17 
	`putk
(
c
);

19 
	$¥ötk
(c⁄° *
fmt
, ...)

22 
c
;

23 íum { 
LEFT
, 
RIGHT
 } 
adju°
;

24 íum { 
LONG
, 
INT
 } 
ötsize
;

25 
fûl
;

26 
width
, 
max
, 
Àn
, 
ba£
;

27 
X2C_èb
[]= "0123456789ABCDEF";

28 
x2c_èb
[]= "0123456789abcdef";

29 *
x2c
;

30 *
p
;

31 
i
;

32 
u
;

33 
ãmp
[8 * () / 3 + 2];

35 
va_li°
 
¨gp
;

37 
	`va_°¨t
(
¨gp
, 
fmt
);

39 (
c
*
fmt
++) != 0) {

40 i‡(
c
 != '%') {

42 
	`putk
(
c
);

49 
c
*
fmt
++;

51 
adju°

RIGHT
;

52 i‡(
c
 == '-') {

53 
adju°

LEFT
;

54 
c
*
fmt
++;

57 
fûl
= ' ';

58 i‡(
c
 == '0') {

59 
fûl
= '0';

60 
c
*
fmt
++;

63 
width
= 0;

64 i‡(
c
 == '*') {

66 
width

	`va_¨g
(
¨gp
, );

67 
c
*
fmt
++;

69 i‡(
	`isdigô
(
c
)) {

72 
width
width * 10 + (
c
 - '0');

73 } 
	`isdigô
(
c
*
fmt
++));

76 
max

INT_MAX
;

77 i‡(
c
 == '.') {

79 i‡((
c
*
fmt
++) == '*') {

80 
max

	`va_¨g
(
¨gp
, );

81 
c
*
fmt
++;

83 i‡(
	`isdigô
(
c
)) {

84 
max
= 0;

86 
max
max * 10 + (
c
 - '0');

87 } 
	`isdigô
(
c
*
fmt
++));

92 
x2c

x2c_èb
;

93 
i
= 0;

94 
ba£
= 10;

95 
ötsize

INT
;

96 i‡(
c
 == 'l' || c == 'L') {

98 
ötsize

LONG
;

99 
c
*
fmt
++;

101 i‡(
c
 == 0) ;

103 
c
) {

106 
ötsize

LONG
;

108 
i

ötsize
 =
LONG
 ? 
	`va_¨g
(
¨gp
, )

109 : 
	`va_¨g
(
¨gp
, );

110 
u

i
 < 0 ? -i : i;

111 
öt2ascii
;

115 
ötsize

LONG
;

117 
ba£
= 010;

118 
gëöt
;

122 
x2c

X2C_èb
;

124 
ba£
= 0x10;

125 
gëöt
;

129 
ötsize

LONG
;

131 
gëöt
:

132 
u

ötsize
 =
LONG
 ? 
	`va_¨g
(
¨gp
, )

133 : 
	`va_¨g
(
¨gp
, );

134 
öt2ascii
:

135 
p

ãmp
 + (temp)-1;

136 *
p
= 0;

138 *--
p

x2c
[
u
 % 
ba£
];

139 } (
u
 /
ba£
) > 0);

140 
°rög_Àngth
;

144 
p

ãmp
;

145 *
p

	`va_¨g
(
¨gp
, );

146 
Àn
= 1;

147 
°rög_¥öt
;

151 
p

ãmp
;

152 *
p
= '%';

153 
Àn
= 1;

154 
°rög_¥öt
;

158 
p

	`va_¨g
(
¨gp
, *);

160 
°rög_Àngth
:

161 
Àn
0; 
p
[Àn] !0 &&Üí < 
max
;Üen++) {}

163 
°rög_¥öt
:

164 
width
 -
Àn
;

165 i‡(
i
 < 0Ë
width
--;

166 i‡(
fûl
 ='0' && 
i
 < 0Ë
	`putk
('-');

167 i‡(
adju°
 =
RIGHT
) {

168 
width
 > 0Ë{ 
	`putk
(
fûl
); width--; }

170 i‡(
fûl
 =' ' && 
i
 < 0Ë
	`putk
('-');

171 
Àn
 > 0Ë{ 
	`putk
((Ë*
p
++);Üen--; }

172 
width
 > 0Ë{ 
	`putk
(
fûl
); width--; }

177 
	`putk
('%');

178 
	`putk
(
c
);

183 
	`putk
(0);

184 
	`va_íd
(
¨gp
);

185 
	}
}

	@prntscan.c

1 
	~<°rög.h
>

2 
	~<cur£s.h
>

3 
	~"cur•riv.h
"

5 
	g¥ötsˇnbuf
[513];

10 
	$w¥ötw
(
WINDOW
 *
wö
, c⁄° *
fmt
, ...)

12 
va_li°
 
¨gs
;

14 
	`va_°¨t
(
¨gs
, 
fmt
);

15 
	`v•rötf
(
¥ötsˇnbuf
, 
fmt
, 
¨gs
);

16 i‡(
	`wadd°r
(
wö
, 
¥ötsˇnbuf
Ë=
ERR
) (ERR);

17 (
	`°æí
(
¥ötsˇnbuf
));

18 
	}
}

23 
	$¥ötw
(c⁄° *
fmt
, ...)

25 
va_li°
 
¨gs
;

27 
	`va_°¨t
(
¨gs
, 
fmt
);

28 
	`v•rötf
(
¥ötsˇnbuf
, 
fmt
, 
¨gs
);

29 i‡(
	`wadd°r
(
°ds¸
, 
¥ötsˇnbuf
Ë=
ERR
) (ERR);

30 (
	`°æí
(
¥ötsˇnbuf
));

31 
	}
}

37 
	$mv¥ötw
(
y
, 
x
, c⁄° *
fmt
, ...)

39 
va_li°
 
¨gs
;

41 
	`va_°¨t
(
¨gs
, 
fmt
);

42 i‡(
	`wmove
(
°ds¸
, 
y
, 
x
Ë=
ERR
) (ERR);

43 
	`v•rötf
(
¥ötsˇnbuf
, 
fmt
, 
¨gs
);

44 i‡(
	`wadd°r
(
°ds¸
, 
¥ötsˇnbuf
Ë=
ERR
) (ERR);

45 (
	`°æí
(
¥ötsˇnbuf
));

46 
	}
}

52 
	$mvw¥ötw
(
WINDOW
 *
wö
, 
y
, 
x
, c⁄° *
fmt
, ...)

54 
va_li°
 
¨gs
;

56 
	`va_°¨t
(
¨gs
, 
fmt
);

57 i‡(
	`wmove
(
wö
, 
y
, 
x
Ë=
ERR
) (ERR);

58 
	`v•rötf
(
¥ötsˇnbuf
, 
fmt
, 
¨gs
);

59 i‡(
	`wadd°r
(
wö
, 
¥ötsˇnbuf
Ë=
ERR
) (ERR);

60 (
	`°æí
(
¥ötsˇnbuf
));

61 
	}
}

68 
	$wsˇnw
(
WINDOW
 *
wö
, c⁄° *
fmt
, ...)

70 
va_li°
 
¨gs
;

72 
	`va_°¨t
(
¨gs
, 
fmt
);

73 
	`wª‰esh
(
wö
);

74 i‡(
	`wgë°r
(
wö
, 
¥ötsˇnbuf
Ë=
ERR
)

75 (
ERR
);

76 (
	`vssˇnf
(
¥ötsˇnbuf
, 
fmt
, 
¨gs
));

77 
	}
}

84 
	$sˇnw
(c⁄° *
fmt
, ...)

86 
va_li°
 
¨gs
;

88 
	`va_°¨t
(
¨gs
, 
fmt
);

89 
	`wª‰esh
(
°ds¸
);

90 i‡(
	`wgë°r
(
°ds¸
, 
¥ötsˇnbuf
Ë=
ERR
)

91 (
ERR
);

92 (
	`vssˇnf
(
¥ötsˇnbuf
, 
fmt
, 
¨gs
));

93 
	}
}

101 
	$mvsˇnw
(
y
, 
x
, c⁄° *
fmt
, ...)

103 
va_li°
 
¨gs
;

105 
	`va_°¨t
(
¨gs
, 
fmt
);

106 i‡(
	`wmove
(
°ds¸
, 
y
, 
x
Ë=
ERR
) (ERR);

107 
	`wª‰esh
(
°ds¸
);

108 i‡(
	`wgë°r
(
°ds¸
, 
¥ötsˇnbuf
Ë=
ERR
)

109 (
ERR
);

110 (
	`vssˇnf
(
¥ötsˇnbuf
, 
fmt
, 
¨gs
));

111 
	}
}

119 
	$mvwsˇnw
(
WINDOW
 *
wö
, 
y
, 
x
, c⁄° *
fmt
, ...)

121 
va_li°
 
¨gs
;

123 
	`va_°¨t
(
¨gs
, 
fmt
);

124 i‡(
	`wmove
(
wö
, 
y
, 
x
Ë=
ERR
) (ERR);

125 
	`wª‰esh
(
wö
);

126 i‡(
	`wgë°r
(
wö
, 
¥ötsˇnbuf
Ë=
ERR
)

127 (
ERR
);

128 (
	`vssˇnf
(
¥ötsˇnbuf
, 
fmt
, 
¨gs
));

129 
	}
}

	@proc.c

17 
	~"kî√l.h
"

18 
	~<möix/ˇŒƒ.h
>

19 
	~<möix/com.h
>

20 
	~"¥oc.h
"

22 
PRIVATE
 
	gswôchög
;

24 
FORWARD
 
_PROTOTYPE
–
möi_£nd
, (
¥oc
 *
ˇŒî_±r
, 
de°
,

25 
mesßge
 *
m_±r
) );

26 
FORWARD
 
_PROTOTYPE
–
möi_ªc
, (
¥oc
 *
ˇŒî_±r
, 
§c
,

27 
mesßge
 *
m_±r
) );

28 
FORWARD
 
_PROTOTYPE
–
ªady
, (
¥oc
 *
Ω
) );

29 
FORWARD
 
_PROTOTYPE
–
sched
, () );

30 
FORWARD
 
_PROTOTYPE
–
uƒódy
, (
¥oc
 *
Ω
) );

31 
FORWARD
 
_PROTOTYPE
–
pick_¥oc
, () );

33 #i‡(
CHIP
 =
M68000
)

34 
FORWARD
 
_PROTOTYPE
–
˝_mess
, (
§c
, 
¥oc
 *
§c_p
, 
mesßge
 *
§c_m
,

35 
¥oc
 *
d°_p
, 
mesßge
 *
d°_m
) );

38 #i‡(
CHIP
 =
INTEL
)

39 
	#C›yMess
(
s
,
•
,
sm
,
dp
,
dm
Ë\

	)

40 
˝_mess
(
s
, (
•
)->
p_m≠
[
D
].
mem_phys
, (
vú_byãs
)
sm
, (
dp
)->p_m≠[D].mem_phys, (vú_byãs)
dm
)

43 #i‡(
CHIP
 =
M68000
)

44 
	#C›yMess
(
s
,
•
,
sm
,
dp
,
dm
Ë\

	)

45 
	$˝_mess
(
s
,
•
,
sm
,
dp
,
dm
)

51 
PUBLIC
 
	$öãºu±
(
èsk
)

52 
èsk
;

56 
¥oc
 *
Ω
;

58 
Ω
 = 
	`¥oc_addr
(
èsk
);

75 i‡(
k_ªíãr
 !0 || 
swôchög
) {

76 
	`lock
();

77 i‡(!
Ω
->
p_öt_hñd
) {

78 
Ω
->
p_öt_hñd
 = 
TRUE
;

79 i‡(
hñd_hód
 !
NIL_PROC
)

80 
hñd_èû
->
p_√xthñd
 = 
Ω
;

82 
hñd_hód
 = 
Ω
;

83 
hñd_èû
 = 
Ω
;

84 
Ω
->
p_√xthñd
 = 
NIL_PROC
;

86 
	`u∆ock
();

91 i‡–(
Ω
->
p_Êags
 & (
RECEIVING
 | 
SENDING
)) != RECEIVING ||

92 !
	`i§xh¨dw¨e
(
Ω
->
p_gë‰om
)) {

93 
Ω
->
p_öt_blocked
 = 
TRUE
;

102 
Ω
->
p_messbuf
->
m_sour˚
 = 
HARDWARE
;

103 
Ω
->
p_messbuf
->
m_ty≥
 = 
HARD_INT
;

104 
Ω
->
p_Êags
 &~
RECEIVING
;

105 
Ω
->
p_öt_blocked
 = 
FALSE
;

110 i‡(
rdy_hód
[
TASK_Q
] !
NIL_PROC
)

111 
rdy_èû
[
TASK_Q
]->
p_√xåódy
 = 
Ω
;

113 
¥oc_±r
 = 
rdy_hód
[
TASK_Q
] = 
Ω
;

114 
rdy_èû
[
TASK_Q
] = 
Ω
;

115 
Ω
->
p_√xåódy
 = 
NIL_PROC
;

116 
	}
}

121 
PUBLIC
 
	$sys_ˇŒ
(
fun˘i⁄
, 
§c_de°
, 
m_±r
)

122 
fun˘i⁄
;

123 
§c_de°
;

124 
mesßge
 *
m_±r
;

132 
¥oc
 *
Ω
;

133 
n
;

136 i‡(!
	`isok§c_de°
(
§c_de°
)Ë(
E_BAD_SRC
);

137 
Ω
 = 
¥oc_±r
;

139 i‡(
	`isu£Ω
(
Ω
Ë&& 
fun˘i⁄
 !
BOTH
Ë(
E_NO_PERM
);

142 i‡(
fun˘i⁄
 & 
SEND
) {

144 
n
 = 
	`möi_£nd
(
Ω
, 
§c_de°
, 
m_±r
);

145 i‡(
fun˘i⁄
 =
SEND
 || 
n
 !
OK
)

146 (
n
);

152 (
	`möi_ªc
(
Ω
, 
§c_de°
, 
m_±r
));

153 
	}
}

158 
PRIVATE
 
	$möi_£nd
(
ˇŒî_±r
, 
de°
, 
m_±r
)

159 
¥oc
 *
ˇŒî_±r
;

160 
de°
;

161 
mesßge
 *
m_±r
;

168 
¥oc
 *
de°_±r
, *
√xt_±r
;

169 
vú_byãs
 
vb
;

170 
vú_˛icks
 
vlo
, 
vhi
;

173 i‡(
	`isu£Ω
(
ˇŒî_±r
Ë&& !
	`issy£¡n
(
de°
)Ë(
E_BAD_DEST
);

174 
de°_±r
 = 
	`¥oc_addr
(
de°
);

175 i‡(
de°_±r
->
p_Êags
 & 
P_SLOT_FREE
Ë(
E_BAD_DEST
);

177 #i‡
ALLOW_GAP_MESSAGES


182 
vb
 = (
vú_byãs
Ë
m_±r
;

183 
vlo
 = 
vb
 >> 
CLICK_SHIFT
;

184 
vhi
 = (
vb
 + 
MESS_SIZE
 - 1Ë>> 
CLICK_SHIFT
;

185 i‡(
vlo
 < 
ˇŒî_±r
->
p_m≠
[
D
].
mem_vú
 || vlÿ> 
vhi
 ||

186 
vhi
 >
ˇŒî_±r
->
p_m≠
[
S
].
mem_vú
 + cÆÀr_±r->p_m≠[S].
mem_Àn
)

187 (
EFAULT
);

190 
vb
 = (
vú_byãs
Ë
m_±r
;

191 
vlo
 = 
vb
 >> 
CLICK_SHIFT
;

192 
vhi
 = (
vb
 + 
MESS_SIZE
 - 1Ë>> 
CLICK_SHIFT
;

193 i‡(
vhi
 < 
vlo
 ||

194 
vhi
 - 
ˇŒî_±r
->
p_m≠
[
D
].
mem_vú
 >ˇŒî_±r->p_m≠[D].
mem_Àn
)

195 (
EFAULT
);

199 i‡(
de°_±r
->
p_Êags
 & 
SENDING
) {

200 
√xt_±r
 = 
	`¥oc_addr
(
de°_±r
->
p_£ndto
);

201 
TRUE
) {

202 i‡(
√xt_±r
 =
ˇŒî_±r
Ë(
ELOCKED
);

203 i‡(
√xt_±r
->
p_Êags
 & 
SENDING
)

204 
√xt_±r
 = 
	`¥oc_addr
“ext_±r->
p_£ndto
);

211 i‡–(
de°_±r
->
p_Êags
 & (
RECEIVING
 | 
SENDING
)) == RECEIVING &&

212 (
de°_±r
->
p_gë‰om
 =
ANY
 ||

213 
de°_±r
->
p_gë‰om
 =
	`¥oc_numbî
(
ˇŒî_±r
))) {

215 
	`C›yMess
(
	`¥oc_numbî
(
ˇŒî_±r
), cÆÀr_±r, 
m_±r
, 
de°_±r
,

216 
de°_±r
->
p_messbuf
);

217 
de°_±r
->
p_Êags
 &~
RECEIVING
;

218 i‡(
de°_±r
->
p_Êags
 =0Ë
	`ªady
(dest_ptr);

221 
ˇŒî_±r
->
p_messbuf
 = 
m_±r
;

222 i‡(
ˇŒî_±r
->
p_Êags
 =0Ë
	`uƒódy
(caller_ptr);

223 
ˇŒî_±r
->
p_Êags
 |
SENDING
;

224 
ˇŒî_±r
->
p_£ndto

de°
;

227 i‡–(
√xt_±r
 = 
de°_±r
->
p_ˇŒîq
Ë=
NIL_PROC
)

228 
de°_±r
->
p_ˇŒîq
 = 
ˇŒî_±r
;

230 
√xt_±r
->
p_£ndlök
 !
NIL_PROC
)

231 
√xt_±r
 =Çext_±r->
p_£ndlök
;

232 
√xt_±r
->
p_£ndlök
 = 
ˇŒî_±r
;

234 
ˇŒî_±r
->
p_£ndlök
 = 
NIL_PROC
;

236 (
OK
);

237 
	}
}

242 
PRIVATE
 
	$möi_ªc
(
ˇŒî_±r
, 
§c
, 
m_±r
)

243 
¥oc
 *
ˇŒî_±r
;

244 
§c
;

245 
mesßge
 *
m_±r
;

254 
¥oc
 *
£ndî_±r
;

255 
¥oc
 *
¥evious_±r
;

258 i‡(!(
ˇŒî_±r
->
p_Êags
 & 
SENDING
)) {

260 
£ndî_±r
 = 
ˇŒî_±r
->
p_ˇŒîq
; sídî_±∏!
NIL_PROC
;

261 
¥evious_±r
 = 
£ndî_±r
, sídî_±∏£ndî_±r->
p_£ndlök
) {

262 i‡(
§c
 =
ANY
 || sr¯=
	`¥oc_numbî
(
£ndî_±r
)) {

264 
	`C›yMess
(
	`¥oc_numbî
(
£ndî_±r
), sender_ptr,

265 
£ndî_±r
->
p_messbuf
, 
ˇŒî_±r
, 
m_±r
);

266 i‡(
£ndî_±r
 =
ˇŒî_±r
->
p_ˇŒîq
)

267 
ˇŒî_±r
->
p_ˇŒîq
 = 
£ndî_±r
->
p_£ndlök
;

269 
¥evious_±r
->
p_£ndlök
 = 
£ndî_±r
->p_sendlink;

270 i‡((
£ndî_±r
->
p_Êags
 &~
SENDING
) == 0)

271 
	`ªady
(
£ndî_±r
);

272 (
OK
);

277 i‡(
ˇŒî_±r
->
p_öt_blocked
 && 
	`i§xh¨dw¨e
(
§c
)) {

278 
m_±r
->
m_sour˚
 = 
HARDWARE
;

279 
m_±r
->
m_ty≥
 = 
HARD_INT
;

280 
ˇŒî_±r
->
p_öt_blocked
 = 
FALSE
;

281 (
OK
);

286 
ˇŒî_±r
->
p_gë‰om
 = 
§c
;

287 
ˇŒî_±r
->
p_messbuf
 = 
m_±r
;

288 i‡(
ˇŒî_±r
->
p_Êags
 =0Ë
	`uƒódy
(caller_ptr);

289 
ˇŒî_±r
->
p_Êags
 |
RECEIVING
;

294 i‡(
sig_¥ocs
 > 0 && 
	`¥oc_numbî
(
ˇŒî_±r
Ë=
MM_PROC_NR
 && 
§c
 =
ANY
)

295 
	`öf‹m
();

296 (
OK
);

297 
	}
}

302 
PRIVATE
 
	$pick_¥oc
()

309 
¥oc
 *
Ω
;

311 i‡–(
Ω
 = 
rdy_hód
[
TASK_Q
]Ë!
NIL_PROC
) {

312 
¥oc_±r
 = 
Ω
;

315 i‡–(
Ω
 = 
rdy_hód
[
SERVER_Q
]Ë!
NIL_PROC
) {

316 
¥oc_±r
 = 
Ω
;

319 i‡–(
Ω
 = 
rdy_hód
[
USER_Q
]Ë!
NIL_PROC
) {

320 
¥oc_±r
 = 
Ω
;

321 
bûl_±r
 = 
Ω
;

327 
bûl_±r
 = 
¥oc_±r
 = 
	`¥oc_addr
(
IDLE
);

328 
	}
}

333 
PRIVATE
 
	$ªady
(
Ω
)

334 
¥oc
 *
Ω
;

343 i‡(
	`i°askp
(
Ω
)) {

344 i‡(
rdy_hód
[
TASK_Q
] !
NIL_PROC
)

346 
rdy_èû
[
TASK_Q
]->
p_√xåódy
 = 
Ω
;

348 
¥oc_±r
 =

349 
rdy_hód
[
TASK_Q
] = 
Ω
;

351 
rdy_èû
[
TASK_Q
] = 
Ω
;

352 
Ω
->
p_√xåódy
 = 
NIL_PROC
;

355 i‡(!
	`isu£Ω
(
Ω
)) {

356 i‡(
rdy_hód
[
SERVER_Q
] !
NIL_PROC
)

357 
rdy_èû
[
SERVER_Q
]->
p_√xåódy
 = 
Ω
;

359 
rdy_hód
[
SERVER_Q
] = 
Ω
;

360 
rdy_èû
[
SERVER_Q
] = 
Ω
;

361 
Ω
->
p_√xåódy
 = 
NIL_PROC
;

364 #i‡(
SHADOWING
 == 1)

365 i‡(
	`isshadowp
(
Ω
)) {

366 i‡(
rdy_hód
[
SHADOW_Q
] !
NIL_PROC
)

367 
rdy_èû
[
SHADOW_Q
]->
p_√xåódy
 = 
Ω
;

369 
rdy_hód
[
SHADOW_Q
] = 
Ω
;

370 
rdy_èû
[
SHADOW_Q
] = 
Ω
;

371 
Ω
->
p_√xåódy
 = 
NIL_PROC
;

375 i‡(
rdy_hód
[
USER_Q
] =
NIL_PROC
)

376 
rdy_èû
[
USER_Q
] = 
Ω
;

377 
Ω
->
p_√xåódy
 = 
rdy_hód
[
USER_Q
];

378 
rdy_hód
[
USER_Q
] = 
Ω
;

387 
	}
}

392 
PRIVATE
 
	$uƒódy
(
Ω
)

393 
¥oc
 *
Ω
;

397 
¥oc
 *
xp
;

398 
¥oc
 **
qèû
;

400 i‡(
	`i°askp
(
Ω
)) {

402 i‡(*
Ω
->
p_°gu¨d
 !
STACK_GUARD
)

403 
	`∑nic
("°ack ovîru¿byÅask", 
	`¥oc_numbî
(
Ω
));

405 i‡–(
xp
 = 
rdy_hód
[
TASK_Q
]Ë=
NIL_PROC
) ;

406 i‡(
xp
 =
Ω
) {

408 
rdy_hód
[
TASK_Q
] = 
xp
->
p_√xåódy
;

409 i‡(
Ω
 =
¥oc_±r
Ë
	`pick_¥oc
();

412 
qèû
 = &
rdy_èû
[
TASK_Q
];

414 i‡(!
	`isu£Ω
(
Ω
)) {

415 i‡–(
xp
 = 
rdy_hód
[
SERVER_Q
]Ë=
NIL_PROC
) ;

416 i‡(
xp
 =
Ω
) {

417 
rdy_hód
[
SERVER_Q
] = 
xp
->
p_√xåódy
;

418 #i‡(
CHIP
 =
M68000
)

419 i‡(
Ω
 =
¥oc_±r
)

421 
	`pick_¥oc
();

424 
qèû
 = &
rdy_èû
[
SERVER_Q
];

426 #i‡(
SHADOWING
 == 1)

427 i‡(
	`isshadowp
(
Ω
)) {

428 i‡–(
xp
 = 
rdy_hód
[
SHADOW_Q
]Ë=
NIL_PROC
) ;

429 i‡(
xp
 =
Ω
) {

430 
rdy_hód
[
SHADOW_Q
] = 
xp
->
p_√xåódy
;

431 i‡(
Ω
 =
¥oc_±r
)

432 
	`pick_¥oc
();

435 
qèû
 = &
rdy_èû
[
SHADOW_Q
];

439 i‡–(
xp
 = 
rdy_hód
[
USER_Q
]Ë=
NIL_PROC
) ;

440 i‡(
xp
 =
Ω
) {

441 
rdy_hód
[
USER_Q
] = 
xp
->
p_√xåódy
;

442 #i‡(
CHIP
 =
M68000
)

443 i‡(
Ω
 =
¥oc_±r
)

445 
	`pick_¥oc
();

448 
qèû
 = &
rdy_èû
[
USER_Q
];

454 
xp
->
p_√xåódy
 !
Ω
)

455 i‡–(
xp
 = xp->
p_√xåódy
Ë=
NIL_PROC
) ;

456 
xp
->
p_√xåódy
 = xp->p_nextready->p_nextready;

457 i‡(*
qèû
 =
Ω
Ë*qèû = 
xp
;

458 
	}
}

463 
PRIVATE
 
	$sched
()

470 i‡(
rdy_hód
[
USER_Q
] =
NIL_PROC
) ;

473 
rdy_èû
[
USER_Q
]->
p_√xåódy
 = 
rdy_hód
[USER_Q];

474 
rdy_èû
[
USER_Q
] = 
rdy_hód
[USER_Q];

475 
rdy_hód
[
USER_Q
] =Ñdy_hód[USER_Q]->
p_√xåódy
;

476 
rdy_èû
[
USER_Q
]->
p_√xåódy
 = 
NIL_PROC
;

477 
	`pick_¥oc
();

478 
	}
}

483 
PUBLIC
 
	$lock_möi_£nd
(
ˇŒî_±r
, 
de°
, 
m_±r
)

484 
¥oc
 *
ˇŒî_±r
;

485 
de°
;

486 
mesßge
 *
m_±r
;

490 
ªsu…
;

492 
swôchög
 = 
TRUE
;

493 
ªsu…
 = 
	`möi_£nd
(
ˇŒî_±r
, 
de°
, 
m_±r
);

494 
swôchög
 = 
FALSE
;

495 (
ªsu…
);

496 
	}
}

501 
PUBLIC
 
	$lock_pick_¥oc
()

505 
swôchög
 = 
TRUE
;

506 
	`pick_¥oc
();

507 
swôchög
 = 
FALSE
;

508 
	}
}

513 
PUBLIC
 
	$lock_ªady
(
Ω
)

514 
¥oc
 *
Ω
;

518 
swôchög
 = 
TRUE
;

519 
	`ªady
(
Ω
);

520 
swôchög
 = 
FALSE
;

521 
	}
}

526 
PUBLIC
 
	$lock_uƒódy
(
Ω
)

527 
¥oc
 *
Ω
;

531 
swôchög
 = 
TRUE
;

532 
	`uƒódy
(
Ω
);

533 
swôchög
 = 
FALSE
;

534 
	}
}

539 
PUBLIC
 
	$lock_sched
()

543 
swôchög
 = 
TRUE
;

544 
	`sched
();

545 
swôchög
 = 
FALSE
;

546 
	}
}

551 
PUBLIC
 
	$unhﬁd
()

558 
¥oc
 *
Ω
;

560 i‡(
swôchög
) ;

561 
Ω
 = 
hñd_hód
;

563 i‡–(
hñd_hód
 = 
Ω
->
p_√xthñd
Ë=
NIL_PROC
Ë
hñd_èû
 = NIL_PROC;

564 
Ω
->
p_öt_hñd
 = 
FALSE
;

565 
	`u∆ock
();

566 
	`öãºu±
(
	`¥oc_numbî
(
Ω
));

567 
	`lock
();

569  (
Ω
 = 
hñd_hód
Ë!
NIL_PROC
);

570 
	}
}

572 #i‡(
CHIP
 =
M68000
)

576 
PRIVATE
 
	$˝_mess
(
§c
, 
§c_p
, 
§c_m
, 
d°_p
, 
d°_m
)

577 
§c
;

578 
¥oc
 *
§c_p
;

579 
mesßge
 *
§c_m
;

580 
¥oc
 *
d°_p
;

581 
mesßge
 *
d°_m
;

583 #i‡(
SHADOWING
 == 0)

587 
§c_m
 = (
mesßge
 *)((*)§c_m + (((
phys_byãs
)
§c_p
->
p_m≠
[
D
].
mem_phys


588 - 
§c_p
->
p_m≠
[
D
].
mem_vú
Ë<< 
CLICK_SHIFT
));

589 
d°_m
 = (
mesßge
 *)((*)d°_m + (((
phys_byãs
)
d°_p
->
p_m≠
[
D
].
mem_phys


590 - 
d°_p
->
p_m≠
[
D
].
mem_vú
Ë<< 
CLICK_SHIFT
));

592 
phys_byãs
 
c‹ª˘i⁄
;

594 i‡(
c‹ª˘i⁄
 = 
§c_p
->
p_shadow
) {

595 
c‹ª˘i⁄
 = (c‹ª˘i⁄ - 
§c_p
->
p_m≠
[
D
].
mem_phys
Ë<< 
CLICK_SHIFT
;

596 
§c_m
 = (
mesßge
 *)((*)§c_m + 
c‹ª˘i⁄
);

598 i‡(
c‹ª˘i⁄
 = 
d°_p
->
p_shadow
) {

599 
c‹ª˘i⁄
 = (c‹ª˘i⁄ - 
d°_p
->
p_m≠
[
D
].
mem_phys
Ë<< 
CLICK_SHIFT
;

600 
d°_m
 = (
mesßge
 *)((*)d°_m + 
c‹ª˘i⁄
);

603 #ifde‡
NEEDFSTRUCOPY


604 
	`phys_c›y
(
§c_m
,
d°_m
,(
phys_byãs
Ë(
mesßge
));

606 *
d°_m
 = *
§c_m
;

608 
d°_m
->
m_sour˚
 = 
§c
;

609 
	}
}

	@proc.h

1 #i‚de‡
PROC_H


2 
	#PROC_H


	)

11 
	s¥oc
 {

12 
°ack‰ame_s
 
	mp_ªg
;

14 #i‡(
CHIP
 =
INTEL
)

15 
ªg_t
 
	mp_ldt_£l
;

16 
£gdesc_s
 
	mp_ldt
[2];

20 #i‡(
CHIP
 =
M68000
)

21 
ªg_t
 
	mp_•low
;

22 
	mp_å≠
;

23 #i‡(
SHADOWING
 == 0)

24 *
	mp_¸p
;

26 
phys_˛icks
 
	mp_shadow
;

27 
	mÆign
;

29 
	mp_nÊùs
;

30 
	mp_physio
;

31 #i‡
deföed
(
FPP
)

32 
fßve
 
	mp_fßve
;

33 
	mÆign2
;

37 
ªg_t
 *
	mp_°gu¨d
;

39 
	mp_ƒ
;

41 
	mp_öt_blocked
;

42 
	mp_öt_hñd
;

43 
¥oc
 *
	mp_√xthñd
;

45 
	mp_Êags
;

46 
mem_m≠
 
	mp_m≠
[
NR_SEGS
];

47 
pid_t
 
	mp_pid
;

49 
˛ock_t
 
	mu£r_time
;

50 
˛ock_t
 
	msys_time
;

51 
˛ock_t
 
	mchûd_utime
;

52 
˛ock_t
 
	mchûd_°ime
;

53 
˛ock_t
 
	mp_Æ¨m
;

55 
¥oc
 *
	mp_ˇŒîq
;

56 
¥oc
 *
	mp_£ndlök
;

57 
mesßge
 *
	mp_messbuf
;

58 
	mp_gë‰om
;

59 
	mp_£ndto
;

61 
¥oc
 *
	mp_√xåódy
;

62 
sig£t_t
 
	mp_≥ndög
;

63 
	mp_≥ndcou¡
;

65 
	mp_«me
[16];

69 
	#STACK_GUARD
 ((
ªg_t
Ë(‘eg_tË=2 ? 0xBEEF : 0xDEADBEEF))

	)

72 
	#P_SLOT_FREE
 001

	)

73 
	#NO_MAP
 002

	)

74 
	#SENDING
 004

	)

75 
	#RECEIVING
 010

	)

76 
	#PENDING
 020

	)

77 
	#SIG_PENDING
 040

	)

78 
	#P_STOP
 0100

	)

81 
	#BEG_PROC_ADDR
 (&
¥oc
[0])

	)

82 
	#END_PROC_ADDR
 (&
¥oc
[
NR_TASKS
 + 
NR_PROCS
])

	)

83 
	#END_TASK_ADDR
 (&
¥oc
[
NR_TASKS
])

	)

84 
	#BEG_SERV_ADDR
 (&
¥oc
[
NR_TASKS
])

	)

85 
	#BEG_USER_ADDR
 (&
¥oc
[
NR_TASKS
 + 
LOW_USER
])

	)

87 
	#NIL_PROC
 ((
¥oc
 *Ë0)

	)

88 
	#isidÀh¨dw¨e
(
n
Ë(“Ë=
IDLE
 || (nË=
HARDWARE
)

	)

89 
	#isok¥o˙
(
n
Ë((Ë(“Ë+ 
NR_TASKS
Ë< 
NR_PROCS
 + NR_TASKS)

	)

90 
	#isok§c_de°
(
n
Ë(
	`isok¥o˙
“Ë|| (nË=
ANY
)

	)

91 
	#isoksu£∫
(
n
Ë((Ë“Ë< 
NR_PROCS
)

	)

92 
	#isoku£∫
(
n
Ë((Ë(“Ë- 
LOW_USER
Ë< 
NR_PROCS
 - LOW_USER)

	)

93 
	#i§xh¨dw¨e
(
n
Ë(“Ë=
ANY
 || (nË=
HARDWARE
)

	)

94 
	#issy£¡n
(
n
Ë(“Ë=
FS_PROC_NR
 || (nË=
MM_PROC_NR
)

	)

95 
	#i°askp
(
p
Ë(’Ë< 
END_TASK_ADDR
 && (pË!
	`¥oc_addr
(
IDLE
))

	)

96 
	#isu£Ω
(
p
Ë(’Ë>
BEG_USER_ADDR
)

	)

97 
	#¥oc_addr
(
n
Ë(
µroc_addr
 + 
NR_TASKS
)[“)]

	)

98 
	#˝roc_addr
(
n
Ë(&(
¥oc
 + 
NR_TASKS
)[“)])

	)

99 
	#¥oc_numbî
(
p
Ë(’)->
p_ƒ
)

	)

100 
	#¥oc_vú2phys
(
p
, 
vú
Ë\

	)

101 (((
	gphys_byãs
)(
	gp
)->
	gp_m≠
[
D
].
	gmem_phys
 << 
	gCLICK_SHIFT
) \

102 + (
	gvú_byãs
Ë(
	gvú
))

103 #i‡(
SHADOWING
 == 1)

104 
	#isshadowp
(
p
Ë(’)->
p_shadow
 !0)

	)

107 
EXTERN
 
¥oc
 
	g¥oc
[
NR_TASKS
 + 
NR_PROCS
];

108 
EXTERN
 
¥oc
 *
	gµroc_addr
[
NR_TASKS
 + 
NR_PROCS
];

112 
EXTERN
 
¥oc
 *
	gbûl_±r
;

113 
EXTERN
 
¥oc
 *
	grdy_hód
[
NQ
];

114 
EXTERN
 
¥oc
 *
	grdy_èû
[
NQ
];

	@protect.c

6 
	~"kî√l.h
"

7 
	~"¥oc.h
"

8 
	~"¥Ÿe˘.h
"

10 #i‡
_WORD_SIZE
 == 4

11 
	#INT_GATE_TYPE
 (
INT_286_GATE
 | 
DESC_386_BIT
)

	)

12 
	#TSS_TYPE
 (
AVL_286_TSS
 | 
DESC_386_BIT
)

	)

14 
	#INT_GATE_TYPE
 
INT_286_GATE


	)

15 
	#TSS_TYPE
 
AVL_286_TSS


	)

18 
	sdes˘abÀ±r_s
 {

19 
	mlimô
[(
u16_t
)];

20 
	mba£
[(
u32_t
)];

23 
	sg©edesc_s
 {

24 
u16_t
 
	moff£t_low
;

25 
u16_t
 
	m£À˘‹
;

26 
u8_t
 
	m∑d
;

27 
u8_t
 
	mp_d∂_ty≥
;

28 #i‡
_WORD_SIZE
 == 4

29 
u16_t
 
	moff£t_high
;

31 
u16_t
 
	mª£rved
;

35 
	stss_s
 {

36 
ªg_t
 
	mbacklök
;

37 
ªg_t
 
	m•0
;

38 
ªg_t
 
	mss0
;

39 
ªg_t
 
	m•1
;

40 
ªg_t
 
	mss1
;

41 
ªg_t
 
	m•2
;

42 
ªg_t
 
	mss2
;

43 #i‡
_WORD_SIZE
 == 4

44 
ªg_t
 
	m¸3
;

46 
ªg_t
 
	mù
;

47 
ªg_t
 
	mÊags
;

48 
ªg_t
 
	max
;

49 
ªg_t
 
	mcx
;

50 
ªg_t
 
	mdx
;

51 
ªg_t
 
	mbx
;

52 
ªg_t
 
	m•
;

53 
ªg_t
 
	mbp
;

54 
ªg_t
 
	msi
;

55 
ªg_t
 
	mdi
;

56 
ªg_t
 
	mes
;

57 
ªg_t
 
	mcs
;

58 
ªg_t
 
	mss
;

59 
ªg_t
 
	mds
;

60 #i‡
_WORD_SIZE
 == 4

61 
ªg_t
 
	mfs
;

62 
ªg_t
 
	mgs
;

64 
ªg_t
 
	mldt
;

65 #i‡
_WORD_SIZE
 == 4

66 
u16_t
 
	må≠
;

67 
u16_t
 
	mioba£
;

72 
PUBLIC
 
£gdesc_s
 
	ggdt
[
GDT_SIZE
];

73 
PRIVATE
 
g©edesc_s
 
	gidt
[
IDT_SIZE
];

74 
PUBLIC
 
tss_s
 
	gtss
;

76 
FORWARD
 
_PROTOTYPE
–
öt_g©e
, (
vec_ƒ
, 
phys_byãs
 
ba£
,

77 
d∂_ty≥
) );

78 
FORWARD
 
_PROTOTYPE
–
sdesc
, (
£gdesc_s
 *
£gdp
, 
phys_byãs
 
ba£
,

79 
phys_byãs
 
size
) );

84 
PUBLIC
 
	$¥Ÿ_öô
()

90 
phys_byãs
 
code_byãs
;

91 
phys_byãs
 
d©a_byãs
;

92 
g©e_èbÀ_s
 *
gç
;

93 
des˘abÀ±r_s
 *
dç
;

94 
ldt_£À˘‹
;

95 
¥oc
 *
Ω
;

97 
	sg©e_èbÀ_s
 {

98 
	`_PROTOTYPE
–(*
g©e
), () );

99 
vec_ƒ
;

100 
¥ivûege
;

102 
g©e_èbÀ
[] = {

103 
divide_îr‹
, 
DIVIDE_VECTOR
, 
INTR_PRIVILEGE
,

104 
sögÀ_°ï_ex˚±i⁄
, 
DEBUG_VECTOR
, 
INTR_PRIVILEGE
,

105 
nmi
, 
NMI_VECTOR
, 
INTR_PRIVILEGE
,

106 
bªakpoöt_ex˚±i⁄
, 
BREAKPOINT_VECTOR
, 
USER_PRIVILEGE
,

107 
ovîÊow
, 
OVERFLOW_VECTOR
, 
USER_PRIVILEGE
,

108 
bounds_check
, 
BOUNDS_VECTOR
, 
INTR_PRIVILEGE
,

109 
övÆ_›code
, 
INVAL_OP_VECTOR
, 
INTR_PRIVILEGE
,

110 
c›r_nŸ_avaûabÀ
, 
COPROC_NOT_VECTOR
, 
INTR_PRIVILEGE
,

111 
doubÀ_Áu…
, 
DOUBLE_FAULT_VECTOR
, 
INTR_PRIVILEGE
,

112 
c›r_£g_ovîrun
, 
COPROC_SEG_VECTOR
, 
INTR_PRIVILEGE
,

113 
övÆ_tss
, 
INVAL_TSS_VECTOR
, 
INTR_PRIVILEGE
,

114 
£gmít_nŸ_¥e£¡
, 
SEG_NOT_VECTOR
, 
INTR_PRIVILEGE
,

115 
°ack_ex˚±i⁄
, 
STACK_FAULT_VECTOR
, 
INTR_PRIVILEGE
,

116 
gíîÆ_¥Ÿe˘i⁄
, 
PROTECTION_VECTOR
, 
INTR_PRIVILEGE
,

117 #i‡
_WORD_SIZE
 == 4

118 
∑ge_Áu…
, 
PAGE_FAULT_VECTOR
, 
INTR_PRIVILEGE
,

119 
c›r_îr‹
, 
COPROC_ERR_VECTOR
, 
INTR_PRIVILEGE
,

121 { 
hwöt00
, 
	`VECTOR
–0), 
INTR_PRIVILEGE
 },

122 { 
hwöt01
, 
	`VECTOR
–1), 
INTR_PRIVILEGE
 },

123 { 
hwöt02
, 
	`VECTOR
–2), 
INTR_PRIVILEGE
 },

124 { 
hwöt03
, 
	`VECTOR
–3), 
INTR_PRIVILEGE
 },

125 { 
hwöt04
, 
	`VECTOR
–4), 
INTR_PRIVILEGE
 },

126 { 
hwöt05
, 
	`VECTOR
–5), 
INTR_PRIVILEGE
 },

127 { 
hwöt06
, 
	`VECTOR
–6), 
INTR_PRIVILEGE
 },

128 { 
hwöt07
, 
	`VECTOR
–7), 
INTR_PRIVILEGE
 },

129 { 
hwöt08
, 
	`VECTOR
–8), 
INTR_PRIVILEGE
 },

130 { 
hwöt09
, 
	`VECTOR
–9), 
INTR_PRIVILEGE
 },

131 { 
hwöt10
, 
	`VECTOR
(10), 
INTR_PRIVILEGE
 },

132 { 
hwöt11
, 
	`VECTOR
(11), 
INTR_PRIVILEGE
 },

133 { 
hwöt12
, 
	`VECTOR
(12), 
INTR_PRIVILEGE
 },

134 { 
hwöt13
, 
	`VECTOR
(13), 
INTR_PRIVILEGE
 },

135 { 
hwöt14
, 
	`VECTOR
(14), 
INTR_PRIVILEGE
 },

136 { 
hwöt15
, 
	`VECTOR
(15), 
INTR_PRIVILEGE
 },

140 
d©a_byãs
 = (
phys_byãs
Ë
sizes
[1] << 
CLICK_SHIFT
;

141 i‡(
sizes
[0] == 0)

142 
code_byãs
 = 
d©a_byãs
;

144 
code_byãs
 = (
phys_byãs
Ë
sizes
[0] << 
CLICK_SHIFT
;

147 
dç
(
des˘abÀ±r_s
 *Ë&
gdt
[
GDT_INDEX
];

148 * (
u16_t
 *Ë
dç
->
limô
 = ( 
gdt
) - 1;

149 * (
u32_t
 *Ë
dç
->
ba£
 = 
	`vú2phys
(
gdt
);

151 
dç
(
des˘abÀ±r_s
 *Ë&
gdt
[
IDT_INDEX
];

152 * (
u16_t
 *Ë
dç
->
limô
 = ( 
idt
) - 1;

153 * (
u32_t
 *Ë
dç
->
ba£
 = 
	`vú2phys
(
idt
);

156 
	`öô_code£g
(&
gdt
[
CS_INDEX
], 
code_ba£
, 
code_byãs
, 
INTR_PRIVILEGE
);

157 
	`öô_d©a£g
(&
gdt
[
DS_INDEX
], 
d©a_ba£
, 
d©a_byãs
, 
INTR_PRIVILEGE
);

158 
	`öô_d©a£g
(&
gdt
[
ES_INDEX
], 0L, 0L, 
TASK_PRIVILEGE
);

161 
	`öô_d©a£g
(&
gdt
[
DS_286_INDEX
], (
phys_byãs
) 0,

162 (
phys_byãs
Ë
MAX_286_SEG_SIZE
, 
TASK_PRIVILEGE
);

163 
	`öô_d©a£g
(&
gdt
[
ES_286_INDEX
], (
phys_byãs
) 0,

164 (
phys_byãs
Ë
MAX_286_SEG_SIZE
, 
TASK_PRIVILEGE
);

170 
Ω
 = 
BEG_PROC_ADDR
, 
ldt_£À˘‹
 = 
FIRST_LDT_INDEX
 * 
DESC_SIZE
;

171 
Ω
 < 
END_PROC_ADDR
; ++Ω, 
ldt_£À˘‹
 +
DESC_SIZE
) {

172 
	`öô_d©a£g
(&
gdt
[
ldt_£À˘‹
 / 
DESC_SIZE
], 
	`vú2phys
(
Ω
->
p_ldt
),

173 (
phys_byãs
Ë 
Ω
->
p_ldt
, 
INTR_PRIVILEGE
);

174 
gdt
[
ldt_£À˘‹
 / 
DESC_SIZE
].
ac˚ss
 = 
PRESENT
 | 
LDT
;

175 
Ω
->
p_ldt_£l
 = 
ldt_£À˘‹
;

185 
tss
.
ss0
 = 
DS_SELECTOR
;

186 
	`öô_d©a£g
(&
gdt
[
TSS_INDEX
], 
	`vú2phys
(&
tss
), (
phys_byãs
) Åss,

187 
INTR_PRIVILEGE
);

188 
gdt
[
TSS_INDEX
].
ac˚ss
 = 
PRESENT
 | (
INTR_PRIVILEGE
 << 
DPL_SHIFT
Ë| 
TSS_TYPE
;

191 
gç
 = &
g©e_èbÀ
[0];

192 
gç
 < &
g©e_èbÀ
[ gate_table /  gate_table[0]]; ++gtp) {

193 
	`öt_g©e
(
gç
->
vec_ƒ
, (
phys_byãs
Ë(
vú_byãs
Ëgç->
g©e
,

194 
PRESENT
 | 
INT_GATE_TYPE
 | (
gç
->
¥ivûege
 << 
DPL_SHIFT
));

196 
	`öt_g©e
(
SYS_VECTOR
, (
phys_byãs
Ë(
vú_byãs
Ë
p_s_ˇŒ
,

197 
PRESENT
 | (
USER_PRIVILEGE
 << 
DPL_SHIFT
Ë| 
INT_GATE_TYPE
);

198 
	`öt_g©e
(
LEVEL0_VECTOR
, (
phys_byãs
Ë(
vú_byãs
Ë
Àvñ0_ˇŒ
,

199 
PRESENT
 | (
TASK_PRIVILEGE
 << 
DPL_SHIFT
Ë| 
INT_GATE_TYPE
);

201 #i‡
_WORD_SIZE
 == 4

203 
tss
.
ioba£
 = Åss;

206 
	`öt_g©e
(
SYS386_VECTOR
, (
phys_byãs
Ë(
vú_byãs
Ë
s_ˇŒ
,

207 
PRESENT
 | (
USER_PRIVILEGE
 << 
DPL_SHIFT
Ë| 
INT_GATE_TYPE
);

209 
	}
}

214 
PUBLIC
 
	$öô_code£g
(
£gdp
, 
ba£
, 
size
, 
¥ivûege
)

215 
£gdesc_s
 *
£gdp
;

216 
phys_byãs
 
ba£
;

217 
phys_byãs
 
size
;

218 
¥ivûege
;

222 
	`sdesc
(
£gdp
, 
ba£
, 
size
);

223 
£gdp
->
ac˚ss
 = (
¥ivûege
 << 
DPL_SHIFT
)

224 | (
PRESENT
 | 
SEGMENT
 | 
EXECUTABLE
 | 
READABLE
);

226 
	}
}

231 
PUBLIC
 
	$öô_d©a£g
(
£gdp
, 
ba£
, 
size
, 
¥ivûege
)

232 
£gdesc_s
 *
£gdp
;

233 
phys_byãs
 
ba£
;

234 
phys_byãs
 
size
;

235 
¥ivûege
;

239 
	`sdesc
(
£gdp
, 
ba£
, 
size
);

240 
£gdp
->
ac˚ss
 = (
¥ivûege
 << 
DPL_SHIFT
Ë| (
PRESENT
 | 
SEGMENT
 | 
WRITEABLE
);

242 
	}
}

247 
PRIVATE
 
	$sdesc
(
£gdp
, 
ba£
, 
size
)

248 
£gdesc_s
 *
£gdp
;

249 
phys_byãs
 
ba£
;

250 
phys_byãs
 
size
;

254 
£gdp
->
ba£_low
 = 
ba£
;

255 
£gdp
->
ba£_middÀ
 = 
ba£
 >> 
BASE_MIDDLE_SHIFT
;

257 #i‡
_WORD_SIZE
 == 4

258 
£gdp
->
ba£_high
 = 
ba£
 >> 
BASE_HIGH_SHIFT
;

259 --
size
;

260 i‡(
size
 > 
BYTE_GRAN_MAX
) {

261 
£gdp
->
limô_low
 = 
size
 >> 
PAGE_GRAN_SHIFT
;

262 
£gdp
->
gønuœrôy
 = 
GRANULAR
 | (
size
 >>

263 (
PAGE_GRAN_SHIFT
 + 
GRANULARITY_SHIFT
));

265 
£gdp
->
limô_low
 = 
size
;

266 
£gdp
->
gønuœrôy
 = 
size
 >> 
GRANULARITY_SHIFT
;

268 
£gdp
->
gønuœrôy
 |
DEFAULT
;

270 
£gdp
->
limô_low
 = 
size
 - 1;

272 
	}
}

277 
PUBLIC
 
phys_byãs
 
	$£g2phys
(
£g
)

278 
U16_t
 
£g
;

283 
phys_byãs
 
ba£
;

284 
£gdesc_s
 *
£gdp
;

286 i‡(!
¥Ÿe˘ed_mode
) {

287 
ba£
 = 
	`h˛ick_to_physb
(
£g
);

289 
£gdp
 = &
gdt
[
£g
 >> 3];

290 
ba£
 = 
£gdp
->
ba£_low
 | ((
u32_t
Ë£gdp->
ba£_middÀ
 << 16);

291 #i‡
_WORD_SIZE
 == 4

292 
ba£
 |((
u32_t
Ë
£gdp
->
ba£_high
 << 24);

295  
ba£
;

296 
	}
}

301 
PRIVATE
 
	$öt_g©e
(
vec_ƒ
, 
ba£
, 
d∂_ty≥
)

302 
vec_ƒ
;

303 
phys_byãs
 
ba£
;

304 
d∂_ty≥
;

308 
g©edesc_s
 *
idp
;

310 
idp
 = &
idt
[
vec_ƒ
];

311 
idp
->
off£t_low
 = 
ba£
;

312 
idp
->
£À˘‹
 = 
CS_SELECTOR
;

313 
idp
->
p_d∂_ty≥
 = 
d∂_ty≥
;

314 #i‡
_WORD_SIZE
 == 4

315 
idp
->
off£t_high
 = 
ba£
 >> 
OFFSET_HIGH_SHIFT
;

317 
	}
}

322 
PUBLIC
 
	$íabÀ_i›
(
µ
)

323 
¥oc
 *
µ
;

330 
µ
->
p_ªg
.
psw
 |= 0x3000;

331 
	}
}

	@protect.h

4 
	#GDT_SIZE
 (
FIRST_LDT_INDEX
 + 
NR_TASKS
 + 
NR_PROCS
Ë

	)

5 
	#IDT_SIZE
 (
IRQ8_VECTOR
 + 8Ë

	)

6 
	#LDT_SIZE
 2

	)

9 
	#GDT_INDEX
 1

	)

10 
	#IDT_INDEX
 2

	)

11 
	#DS_INDEX
 3

	)

12 
	#ES_INDEX
 4

	)

13 
	#SS_INDEX
 5

	)

14 
	#CS_INDEX
 6

	)

15 
	#MON_CS_INDEX
 7

	)

16 
	#TSS_INDEX
 8

	)

17 
	#DS_286_INDEX
 9

	)

18 
	#ES_286_INDEX
 10

	)

19 
	#VIDEO_INDEX
 11

	)

20 
	#DP_ETH0_INDEX
 12

	)

21 
	#DP_ETH1_INDEX
 13

	)

22 
	#FIRST_LDT_INDEX
 14

	)

24 
	#GDT_SELECTOR
 0x08

	)

25 
	#IDT_SELECTOR
 0x10

	)

26 
	#DS_SELECTOR
 0x18

	)

27 
	#ES_SELECTOR
 0x20

	)

28 
	#FLAT_DS_SELECTOR
 0x21

	)

29 
	#SS_SELECTOR
 0x28

	)

30 
	#CS_SELECTOR
 0x30

	)

31 
	#MON_CS_SELECTOR
 0x38

	)

32 
	#TSS_SELECTOR
 0x40

	)

33 
	#DS_286_SELECTOR
 0x49

	)

34 
	#ES_286_SELECTOR
 0x51

	)

35 
	#VIDEO_SELECTOR
 0x59

	)

36 
	#DP_ETH0_SELECTOR
 0x61

	)

37 
	#DP_ETH1_SELECTOR
 0x69

	)

40 
	#CS_LDT_INDEX
 0

	)

41 
	#DS_LDT_INDEX
 1

	)

44 
	#INTR_PRIVILEGE
 0

	)

45 
	#TASK_PRIVILEGE
 1

	)

46 
	#USER_PRIVILEGE
 3

	)

51 
	#BOUNDS_VECTOR
 5

	)

52 
	#INVAL_OP_VECTOR
 6

	)

53 
	#COPROC_NOT_VECTOR
 7

	)

54 
	#DOUBLE_FAULT_VECTOR
 8

	)

55 
	#COPROC_SEG_VECTOR
 9

	)

56 
	#INVAL_TSS_VECTOR
 10

	)

57 
	#SEG_NOT_VECTOR
 11

	)

58 
	#STACK_FAULT_VECTOR
 12

	)

59 
	#PROTECTION_VECTOR
 13

	)

62 
	#TI
 0x04

	)

63 
	#RPL
 0x03

	)

66 
	#DESC_BASE
 2

	)

67 
	#DESC_BASE_MIDDLE
 4

	)

68 
	#DESC_ACCESS
 5

	)

69 
	#DESC_SIZE
 8

	)

72 
	#MAX_286_SEG_SIZE
 0x10000L

	)

75 
	#BASE_MIDDLE_SHIFT
 16

	)

78 
	#PRESENT
 0x80

	)

79 
	#DPL
 0x60

	)

80 
	#DPL_SHIFT
 5

	)

81 
	#SEGMENT
 0x10

	)

84 
	#EXECUTABLE
 0x08

	)

85 
	#CONFORMING
 0x04

	)

86 
	#EXPAND_DOWN
 0x04

	)

87 
	#READABLE
 0x02

	)

88 
	#WRITEABLE
 0x02

	)

89 
	#TSS_BUSY
 0x02

	)

90 
	#ACCESSED
 0x01

	)

93 
	#AVL_286_TSS
 1

	)

94 
	#LDT
 2

	)

95 
	#BUSY_286_TSS
 3

	)

96 
	#CALL_286_GATE
 4

	)

97 
	#TASK_GATE
 5

	)

98 
	#INT_286_GATE
 6

	)

99 
	#TRAP_286_GATE
 7

	)

104 
	#PAGE_FAULT_VECTOR
 14

	)

105 
	#COPROC_ERR_VECTOR
 16

	)

108 
	#DESC_GRANULARITY
 6

	)

109 
	#DESC_BASE_HIGH
 7

	)

112 
	#BASE_HIGH_SHIFT
 24

	)

113 
	#BYTE_GRAN_MAX
 0xFFFFFL

	)

114 
	#GRANULARITY_SHIFT
 16

	)

115 
	#OFFSET_HIGH_SHIFT
 16

	)

116 
	#PAGE_GRAN_SHIFT
 12

	)

119 
	#DESC_386_BIT
 0x08

	)

123 
	#GRANULAR
 0x80

	)

124 
	#DEFAULT
 0x40

	)

125 
	#BIG
 0x40

	)

126 
	#AVL
 0x10

	)

127 
	#LIMIT_HIGH
 0x0F

	)

	@proto.h

3 #i‚de‡
PROTO_H


4 
	#PROTO_H


	)

7 
	gd≥th
;

8 
	g¥oc
;

9 
	gây
;

12 
_PROTOTYPE
–
wöche°î_èsk
, () );

13 
_PROTOTYPE
–
©_wöche°î_èsk
, () );

14 
_PROTOTYPE
–
bios_wöche°î_èsk
, () );

15 
_PROTOTYPE
–
esdi_wöche°î_èsk
, () );

16 
_PROTOTYPE
–
ps_wöche°î_èsk
, () );

17 
_PROTOTYPE
–
xt_wöche°î_èsk
, () );

20 
_PROTOTYPE
–
aha_scsi_èsk
, () );

23 
_PROTOTYPE
–
˛ock_èsk
, () );

24 
_PROTOTYPE
–
˛ock_°›
, () );

25 
_PROTOTYPE
–
˛ock_t
 
gë_u±ime
, () );

26 
_PROTOTYPE
–
syn_Ærm_èsk
, () );

29 
_PROTOTYPE
–
m≠_dmp
, () );

30 
_PROTOTYPE
–
p_dmp
, () );

31 
_PROTOTYPE
–
ªg_dmp
, (
¥oc
 *
Ω
) );

34 
_PROTOTYPE
–
dp8390_èsk
, () );

35 
_PROTOTYPE
–
dp_dump
, () );

36 
_PROTOTYPE
–
dp8390_°›
, () );

39 
_PROTOTYPE
–
Ê›py_èsk
, () );

40 
_PROTOTYPE
–
Ê›py_°›
, () );

43 
_PROTOTYPE
–
maö
, () );

44 
_PROTOTYPE
–
∑nic
, (c⁄° *
s
, 
n
) );

47 
_PROTOTYPE
–
mcd_èsk
, () );

50 
_PROTOTYPE
–
mem_èsk
, () );

53 
_PROTOTYPE
–
ív_∑r£
, (*
ív
, *
fmt
, 
fõld
,

54 *
∑øm
, 
mö
, 
max
) );

57 
_PROTOTYPE
–
¥öãr_èsk
, () );

60 
_PROTOTYPE
–
öãºu±
, (
èsk
) );

61 
_PROTOTYPE
–
lock_möi_£nd
, (
¥oc
 *
ˇŒî_±r
,

62 
de°
, 
mesßge
 *
m_±r
) );

63 
_PROTOTYPE
–
lock_pick_¥oc
, () );

64 
_PROTOTYPE
–
lock_ªady
, (
¥oc
 *
Ω
) );

65 
_PROTOTYPE
–
lock_sched
, () );

66 
_PROTOTYPE
–
lock_uƒódy
, (
¥oc
 *
Ω
) );

67 
_PROTOTYPE
–
sys_ˇŒ
, (
fun˘i⁄
, 
§c_de°
, 
mesßge
 *
m_±r
) );

68 
_PROTOTYPE
–
unhﬁd
, () );

71 
_PROTOTYPE
–
rs_öô
, (
ây
 *
ç
) );

74 
_PROTOTYPE
–
d•_èsk
, () );

77 
_PROTOTYPE
–
mixî_èsk
, () );

80 
_PROTOTYPE
–
ˇu£_sig
, (
¥oc_ƒ
, 
sig_ƒ
) );

81 
_PROTOTYPE
–
öf‹m
, () );

82 
_PROTOTYPE
–
phys_byãs
 
num≠
, (
¥oc_ƒ
, 
vú_byãs
 
vú_addr
,

83 
vú_byãs
 
byãs
) );

84 
_PROTOTYPE
–
sys_èsk
, () );

85 
_PROTOTYPE
–
phys_byãs
 
um≠
, (
¥oc
 *
Ω
, 
£g
, 
vú_byãs
 
vú_addr
,

86 
vú_byãs
 
byãs
) );

89 
_PROTOTYPE
–
h™dÀ_evíts
, (
ây
 *
ç
) );

90 
_PROTOTYPE
–
sigch¨
, (
ây
 *
ç
, 
sig
) );

91 
_PROTOTYPE
–
ây_èsk
, () );

92 
_PROTOTYPE
–
ö_¥o˚ss
, (
ây
 *
ç
, *
buf
, 
cou¡
) );

93 
_PROTOTYPE
–
out_¥o˚ss
, (
ây
 *
ç
, *
b°¨t
, *
bpos
,

94 *
bíd
, *
icou¡
, *
ocou¡
) );

95 
_PROTOTYPE
–
ây_wakeup
, (
˛ock_t
 
now
) );

96 
_PROTOTYPE
–
ây_ª∂y
, (
code
, 
ª∂yì
, 
¥oc_ƒ
,

97 
°©us
) );

98 
_PROTOTYPE
–
ây_devn›
, (
ây
 *
ç
) );

101 
_PROTOTYPE
–*
mem˝y
, (*
_s1
, c⁄° *
_s2
, 
size_t
 
_n
) );

103 #i‡(
CHIP
 =
INTEL
)

106 
_PROTOTYPE
–
mûli_°¨t
, (
mûli_°©e
 *
m•
) );

107 
_PROTOTYPE
–
mûli_ñ≠£d
, (
mûli_°©e
 *
m•
) );

108 
_PROTOTYPE
–
mûli_dñay
, (
mûli£c
) );

111 
_PROTOTYPE
–
c⁄s_°›
, () );

112 
_PROTOTYPE
–
putk
, (
c
) );

113 
_PROTOTYPE
–
s¸_öô
, (
ây
 *
ç
) );

114 
_PROTOTYPE
–
toggÀ_s¸ﬁl
, () );

115 
_PROTOTYPE
–
c⁄_lﬂdf⁄t
, (
phys_byãs
 
u£r_phys
) );

116 
_PROTOTYPE
–
£À˘_c⁄sﬁe
, (
c⁄s_löe
) );

119 
_PROTOTYPE
–
c°¨t
, (
U16_t
 
cs
, U16_à
ds
, U16_à
mcs
, U16_à
mds
,

120 
U16_t
 
∑rmoff
, U16_à
∑rmsize
) );

121 
_PROTOTYPE
–*
k_gëív
, (*
«me
) );

124 
_PROTOTYPE
–
ex˚±i⁄
, (
vec_ƒ
) );

127 
_PROTOTYPE
–
úq_h™dÀr_t
 
gë_úq_h™dÀr
, (
úq
) );

128 
_PROTOTYPE
–
put_úq_h™dÀr
, (
úq
, 
úq_h™dÀr_t
 
h™dÀr
) );

129 
_PROTOTYPE
–
öå_öô
, (
möe
) );

132 
_PROTOTYPE
–
kb_öô
, (
ây
 *
ç
) );

133 
_PROTOTYPE
–
kbd_lﬂdm≠
, (
phys_byãs
 
u£r_phys
) );

134 
_PROTOTYPE
–
wªboŸ
, (
how
) );

137 
_PROTOTYPE
–
bios13
, () );

138 
_PROTOTYPE
–
phys_byãs
 
check_mem
, (phys_byã†
ba£
,Öhys_byã†
size
) );

139 
_PROTOTYPE
–
˝_mess
, (
§c
,
phys_˛icks
 
§c_˛icks
,
vú_byãs
 
§c_off£t
,

140 
phys_˛icks
 
d°_˛icks
, 
vú_byãs
 
d°_off£t
) );

141 
_PROTOTYPE
–
ö_byã
, (
p‹t_t
 
p‹t
) );

142 
_PROTOTYPE
–
ö_w‹d
, (
p‹t_t
 
p‹t
) );

143 
_PROTOTYPE
–
lock
, () );

144 
_PROTOTYPE
–
u∆ock
, () );

145 
_PROTOTYPE
–
íabÀ_úq
, (
úq
) );

146 
_PROTOTYPE
–
dißbÀ_úq
, (
úq
) );

147 
_PROTOTYPE
–
u16_t
 
mem_rdw
, (
£gm_t
 
£gm
, 
vú_byãs
 
off£t
) );

148 
_PROTOTYPE
–
out_byã
, (
p‹t_t
 
p‹t
, 
vÆue
) );

149 
_PROTOTYPE
–
out_w‹d
, (
p‹t_t
 
p‹t
, 
vÆue
) );

150 
_PROTOTYPE
–
phys_c›y
, (
phys_byãs
 
sour˚
,Öhys_byã†
de°
,

151 
phys_byãs
 
cou¡
) );

152 
_PROTOTYPE
–
p‹t_ªad
, (
p‹t
, 
phys_byãs
 
de°ö©i⁄
,

153 
bytcou¡
) );

154 
_PROTOTYPE
–
p‹t_ªad_byã
, (
p‹t
, 
phys_byãs
 
de°ö©i⁄
,

155 
bytcou¡
) );

156 
_PROTOTYPE
–
p‹t_wrôe
, (
p‹t
, 
phys_byãs
 
sour˚
,

157 
bytcou¡
) );

158 
_PROTOTYPE
–
p‹t_wrôe_byã
, (
p‹t
, 
phys_byãs
 
sour˚
,

159 
bytcou¡
) );

160 
_PROTOTYPE
–
ª£t
, () );

161 
_PROTOTYPE
–
vid_vid_c›y
, (
§c
, 
d°
, 
cou¡
));

162 
_PROTOTYPE
–
mem_vid_c›y
, (
u16_t
 *
§c
, 
d°
, 
cou¡
));

163 
_PROTOTYPE
–
Àvñ0
, ((*
func
)()) );

164 
	`_PROTOTYPE
–
m⁄ô‹
, () );

167 
	`_PROTOTYPE
–
mem_öô
, () );

170 
	`_PROTOTYPE
–
idÀ_èsk
, () );

171 
	`_PROTOTYPE
–
ª°¨t
, () );

176 
	`_PROTOTYPE
–
öt00
, (Ë), _PROTOTYPE–
divide_îr‹
, () );

177 
	`_PROTOTYPE
–
öt01
, (Ë), _PROTOTYPE–
sögÀ_°ï_ex˚±i⁄
, () );

178 
	`_PROTOTYPE
–
öt02
, (Ë), _PROTOTYPE–
nmi
, () );

179 
	`_PROTOTYPE
–
öt03
, (Ë), _PROTOTYPE–
bªakpoöt_ex˚±i⁄
, () );

180 
	`_PROTOTYPE
–
öt04
, (Ë), _PROTOTYPE–
ovîÊow
, () );

181 
	`_PROTOTYPE
–
öt05
, (Ë), _PROTOTYPE–
bounds_check
, () );

182 
	`_PROTOTYPE
–
öt06
, (Ë), _PROTOTYPE–
övÆ_›code
, () );

183 
	`_PROTOTYPE
–
öt07
, (Ë), _PROTOTYPE–
c›r_nŸ_avaûabÀ
, () );

184 
	`_PROTOTYPE
–
doubÀ_Áu…
, () );

185 
	`_PROTOTYPE
–
c›r_£g_ovîrun
, () );

186 
	`_PROTOTYPE
–
övÆ_tss
, () );

187 
	`_PROTOTYPE
–
£gmít_nŸ_¥e£¡
, () );

188 
	`_PROTOTYPE
–
°ack_ex˚±i⁄
, () );

189 
	`_PROTOTYPE
–
gíîÆ_¥Ÿe˘i⁄
, () );

190 
	`_PROTOTYPE
–
∑ge_Áu…
, () );

191 
	`_PROTOTYPE
–
c›r_îr‹
, () );

194 
	`_PROTOTYPE
–
hwöt00
, () );

195 
	`_PROTOTYPE
–
hwöt01
, () );

196 
	`_PROTOTYPE
–
hwöt02
, () );

197 
	`_PROTOTYPE
–
hwöt03
, () );

198 
	`_PROTOTYPE
–
hwöt04
, () );

199 
	`_PROTOTYPE
–
hwöt05
, () );

200 
	`_PROTOTYPE
–
hwöt06
, () );

201 
	`_PROTOTYPE
–
hwöt07
, () );

202 
	`_PROTOTYPE
–
hwöt08
, () );

203 
	`_PROTOTYPE
–
hwöt09
, () );

204 
	`_PROTOTYPE
–
hwöt10
, () );

205 
	`_PROTOTYPE
–
hwöt11
, () );

206 
	`_PROTOTYPE
–
hwöt12
, () );

207 
	`_PROTOTYPE
–
hwöt13
, () );

208 
	`_PROTOTYPE
–
hwöt14
, () );

209 
	`_PROTOTYPE
–
hwöt15
, () );

212 
	`_PROTOTYPE
–
åp
, () );

213 
	`_PROTOTYPE
–
s_ˇŒ
, (Ë), _PROTOTYPE–
p_s_ˇŒ
, () );

214 
	`_PROTOTYPE
–
Àvñ0_ˇŒ
, () );

217 
	`_PROTOTYPE
–
√_¥obe
, (
d≥th
 *
dï
) );

220 
	`_PROTOTYPE
–
¥_ª°¨t
, () );

223 
	`_PROTOTYPE
–
¥Ÿ_öô
, () );

224 
	`_PROTOTYPE
–
öô_code£g
, (
£gdesc_s
 *
£gdp
, 
phys_byãs
 
ba£
,

225 
phys_byãs
 
size
, 
¥ivûege
) );

226 
	`_PROTOTYPE
–
öô_d©a£g
, (
£gdesc_s
 *
£gdp
, 
phys_byãs
 
ba£
,

227 
phys_byãs
 
size
, 
¥ivûege
) );

228 
	`_PROTOTYPE
–
phys_byãs
 
£g2phys
, (
U16_t
 
£g
) );

229 
	`_PROTOTYPE
–
íabÀ_i›
, (
¥oc
 *
µ
) );

232 
	`_PROTOTYPE
–
do_±y
, (
ây
 *
ç
, 
mesßge
 *
m_±r
) );

233 
	`_PROTOTYPE
–
±y_öô
, (
ây
 *
ç
) );

236 
	`_PROTOTYPE
–
Æloc_£gmíts
, (
¥oc
 *
Ω
) );

239 
	`_PROTOTYPE
–
wdëh_¥obe
, (
d≥th
 *
dï
) );

243 #i‡(
CHIP
 =
M68000
)

246 
	`_PROTOTYPE
–
c°¨t
, (*
∑rmoff
, 
size_t
 
∑rmsize
) );

249 
	`_PROTOTYPE
–
fd_timî
, () );

252 
	`_PROTOTYPE
–
n⁄e
, () );

253 
	`_PROTOTYPE
–
ru±
, () );

254 
	`_PROTOTYPE
–
å≠
, () );

255 
	`_PROTOTYPE
–
check•
, () );

256 
	`_PROTOTYPE
–
acüöt
, () );

257 
	`_PROTOTYPE
–
Áke_öt
, (c⁄° *
s
, 
t
) );

258 
	`_PROTOTYPE
–
timöt
, (
t
) );

259 
	`_PROTOTYPE
–
mdiöt
, () );

260 
	`_PROTOTYPE
–
iob
, (
t
) );

261 
	`_PROTOTYPE
–
idÀ_èsk
, () );

264 
	`_PROTOTYPE
–
süöt
, (
ty≥
) );

267 
	`_PROTOTYPE
–
func_key
, () );

268 
	`_PROTOTYPE
–
dump
, () );

269 
	`_PROTOTYPE
–
putk
, (
c
) );

272 
	`_PROTOTYPE
–
dmagøb
, (
p
, 
dmaöt_t
 
func
) );

273 
	`_PROTOTYPE
–
dma‰ì
, (
p
) );

274 
	`_PROTOTYPE
–
dmaöt
, () );

275 
	`_PROTOTYPE
–
dmØddr
, (
phys_byãs
 
ad
) );

276 
	`_PROTOTYPE
–
dm¨d©
, (
mode
, 
dñay
) );

277 
	`_PROTOTYPE
–
dmawd©
, (
mode
, 
d©a
, 
dñay
) );

278 
	`_PROTOTYPE
–
dmawcmd
, (
d©a
, 
mode
) );

279 
	`_PROTOTYPE
–
dmacomm
, (
mode
, 
d©a
, 
dñay
) );

280 
	`_PROTOTYPE
–
dma°©
, (
mode
, 
dñay
) );

283 
	`_PROTOTYPE
–
do_xbms
, (
phys_byãs
 
addªss
, 
cou¡
, 
rw
, 
mö‹
) );

286 
	`_PROTOTYPE
–
kbdöt
, () );

287 
	`_PROTOTYPE
–
kb_timî
, () );

288 
	`_PROTOTYPE
–
kb_ªad
, (
mö‹
, **
bufödúe˘
) );

289 
	`_PROTOTYPE
–
kb_öô
, (
mö‹
) );

292 
	`_PROTOTYPE
–
mkshadow
, (
¥oc
 *
p
, 
phys_˛icks
 
c2
) );

293 
	`_PROTOTYPE
–
rmshadow
, (
¥oc
 *
p
, 
phys_˛icks
 *
ba£p
,

294 
phys_˛icks
 *
sizï
) );

295 
	`_PROTOTYPE
–
unshadow
, (
¥oc
 *
p
) );

298 
	`_PROTOTYPE
–
Êush
, (
ây
 *
ç
) );

299 
	`_PROTOTYPE
–
c⁄sﬁe
, (
ây
 *
ç
) );

300 
	`_PROTOTYPE
–
out_ch¨
, (
ây
 *
ç
, 
c
) );

301 
	`_PROTOTYPE
–
s¸_öô
, (
mö‹
) );

302 
	`_PROTOTYPE
–
vduswôch
, (
ây
 *
ç
) );

303 
	`_PROTOTYPE
–
vdu£tup
, (
vªs
, *
vøm
,

304 *
vrgb
) );

305 
	`_PROTOTYPE
–
vbl
, () );

306 
	`_PROTOTYPE
–
vdu_lﬂdf⁄t
, (
mesßge
 *
m_±r
) );

309 
	`_PROTOTYPE
–
wöi_›í
, (
mesßge
 *
mp
) );

310 
	`_PROTOTYPE
–
wöi_rdwt
, (
mesßge
 *
mp
) );

311 
	`_PROTOTYPE
–
wöi_hvrdwt
, (
mesßge
 *
mp
) );

312 
	`_PROTOTYPE
–
wöi_å™s„r
, (
rw
, 
≤r
, 
mö‹
,

313 
pos
, 
cou¡
, 
vú_byãs
 
vadr
) );

314 
	`_PROTOTYPE
–
wöi_io˘l
, (
mesßge
 *
mp
) );

315 
	`_PROTOTYPE
–
wöi_˛o£
, (
mesßge
 *
mp
) );

318 
	`_PROTOTYPE
–
acsi_cmd
, (
drive
, *
cmd
, 
cmdÀn
,

319 
phys_byãs
 
addªss
,Öhys_byã†
d©a_Àn
, 
rw
) );

322 
	`_PROTOTYPE
–
scsi_èsk
, () );

323 
	`_PROTOTYPE
–
scsidmaöt
, () );

324 
	`_PROTOTYPE
–
scsiöt
, () );

325 
	`_PROTOTYPE
–
scsi_cmd
, (
drive
, *
cmd
, 
cmdÀn
,

326 
phys_byãs
 
addªss
,Öhys_byã†
d©a_Àn
, 
rw
) );

329 
	`_PROTOTYPE
–
Êù˛icks
, (
phys_˛icks
 
c1
,Öhys_˛ick†
c2
,Öhys_˛ick†
n
) );

330 
	`_PROTOTYPE
–
c›y˛icks
, (
phys_˛icks
 
§c
,Öhys_˛ick†
de°
,

331 
phys_˛icks
 
n˛icks
) );

332 
	`_PROTOTYPE
–
zîo˛icks
, (
phys_˛icks
 
de°
,Öhys_˛ick†
n˛icks
) );

333 
	`_PROTOTYPE
–
phys_c›y
, (
phys_byãs
 
§c
,Öhys_byã†
de°
,Öhys_byã†
n
) );

336 
	`_PROTOTYPE
–
rd1byã
, () );

337 
	`_PROTOTYPE
–
wr1byã
, () );

338 
	`_PROTOTYPE
–
gësu¥a
, () );

339 
	`_PROTOTYPE
–
gëicd
, () );

342 
	`_PROTOTYPE
–
lock
, () );

343 
	`_PROTOTYPE
–
u∆ock
, () );

344 
	`_PROTOTYPE
–
ª°‹e
, (
ﬁd§
) );

345 
	`_PROTOTYPE
–
ªboŸ
, () );

346 
	`_PROTOTYPE
–
ã°_™d_£t
, (*
Êag
) );

347 
	`_PROTOTYPE
–
gë_mem_size
, (*
°¨t_addr
) );

350 #ifde‡
DEBOUT


351 
	`_PROTOTYPE
–
¥tc
, (
c
) );

354 #ifde‡
FPP


356 
	`_PROTOTYPE
–
Âpöô
, () );

357 
	`_PROTOTYPE
–
Âp_√w_°©e
, (
¥oc
 *
Ω
) );

358 
	`_PROTOTYPE
–
Âp_ßve
, (
¥oc
 *
Ω
, 
˝u_°©e
 *
p
) );

359 
	`_PROTOTYPE
–
˝u_°©e
 *
Âp_ª°‹e
, (
¥oc
 *
Ω
) );

362 
	`_PROTOTYPE
–
_Âpßve
, (
°©e_‰ame
 *
p
) );

363 
	`_PROTOTYPE
–
_Âpßvîeg
, (
Âp_modñ
 *
p
) );

364 
	`_PROTOTYPE
–
_Â¥e°‹e
, (
°©e_‰ame
 *
p
) );

365 
	`_PROTOTYPE
–
_Â¥e°ªg
, (
Âp_modñ
 *
p
) );

368 #i‡(
SHADOWING
 == 0)

370 
	`_PROTOTYPE
(
pmmuöô
 , () );

371 
	`_PROTOTYPE
(
pmmu_öô_¥oc
 , (
¥oc
 *
Ω
 ) );

372 
	`_PROTOTYPE
(
pmmu_ª°‹e
 , (
¥oc
 *
Ω
 ) );

373 
	`_PROTOTYPE
(
pmmu_dñëe
 , (
¥oc
 *
Ω
 ) );

374 
	`_PROTOTYPE
(
pmmu_Êush
 , (
¥oc
 *
Ω
 ) );

	@ps.c

53 
	~<möix/c⁄fig.h
>

54 
	~<limôs.h
>

55 
	~<sys/ty≥s.h
>

57 
	~<möix/c⁄°.h
>

58 
	~<möix/ty≥.h
>

59 
	~<°rög.h
>

60 
	~<°dlib.h
>

61 
	~<uni°d.h
>

63 
	~<möix/com.h
>

64 
	~<f˙é.h
>

65 
	~<a.out.h
>

66 
	~<dúít.h
>

67 
	~<sys/°©.h
>

68 
	~<sys/io˘l.h
>

69 
	~<sig«l.h
>

70 
	~<°dio.h
>

71 
	~<âyít.h
>

73 
	~"../kî√l/c⁄°.h
"

74 
	~"../kî√l/ty≥.h
"

75 
	~"../kî√l/¥oc.h
"

76 #unde‡
¥ötf


78 
	~"../mm/m¥oc.h
"

79 
	~"../fs/Âroc.h
"

80 
	~"../fs/c⁄°.h
"

81 #unde‡
¥ötf


87 
	#mödev
(
dev
Ë(((dev)>>
MINOR
Ë& 0377Ë

	)

88 
	#majdev
(
dev
Ë(((dev)>>
MAJOR
Ë& 0377Ë

	)

90 
	#TTY_MAJ
 4

	)

94 
	mây_«me
[
NAME_MAX
 + 1];

95 
dev_t
 
	mây_dev
;

96 } 
	tâyöfo_t
;

98 
âyöfo_t
 *
	gâyöfo
;

99 
size_t
 
	gn_âyöfo
;

102 
	#off_to_k
(
off
Ë((Ë(((offË+ 512Ë/ 1024))

	)

105 
	gƒ_èsks
, 
	gƒ_¥ocs
;

108 
¥oc
 *
	gps_¥oc
;

109 
m¥oc
 *
	gps_m¥oc
;

110 
Âroc
 *
	gps_Âroc
;

113 
	göô_¥oc_ƒ
;

114 
	#low_u£r
 
öô_¥oc_ƒ


	)

116 
	#KMEM_PATH
 "/dev/kmem"

	)

117 
	#MEM_PATH
 "/dev/mem"

	)

119 
	gkmemfd
, 
	gmemfd
;

129 
	#S_HEADER
 " PID TTY TIME CMD\n"

	)

130 
	#S_FORMAT
 "%5d %3s%3ld:%02ld %s\n"

	)

131 
	#L_HEADER
 " F S UID PID PPID PGRP SZ RECV TTY TIME CMD\n"

	)

132 
	#L_FORMAT
 "%3ÿ%¯%3d %5d %5d %5d %4d %10†%3s%3ld:%02ld %s\n"

	)

134 
	sp°©
 {

135 
dev_t
 
	mps_dev
;

136 
uid_t
 
	mps_ruid
;

137 
uid_t
 
	mps_euid
;

138 
pid_t
 
	mps_pid
;

139 
pid_t
 
	mps_µid
;

140 
	mps_pgΩ
;

141 
	mps_Êags
;

142 
	mps_mÊags
;

143 
	mps_·ask
;

144 
	mps_°©e
;

145 
vú_byãs
 
	mps_tsize
;

146 
vú_byãs
 
	mps_dsize
;

147 
vú_byãs
 
	mps_ssize
;

148 
phys_byãs
 
	mps_vãxt
;

149 
phys_byãs
 
	mps_vd©a
;

150 
phys_byãs
 
	mps_v°ack
;

151 
phys_byãs
 
	mps_ãxt
;

152 
phys_byãs
 
	mps_d©a
;

153 
phys_byãs
 
	mps_°ack
;

154 
	mps_ªcv
;

155 
time_t
 
	mps_utime
;

156 
time_t
 
	mps_°ime
;

157 *
	mps_¨gs
;

158 
vú_byãs
 
	mps_¥oˇrgs
;

162 
	#Z_STATE
 'Z'

	)

163 
	#W_STATE
 'W'

	)

164 
	#S_STATE
 'S'

	)

165 
	#R_STATE
 'R'

	)

166 
	#T_STATE
 'T'

	)

168 
_PROTOTYPE
(*
äame
, (
Dev_t
 
dev_ƒ
 ));

169 
_PROTOTYPE
(*
èsk«me
, (
p_ƒ
 ));

170 
_PROTOTYPE
(*
¥ªcv
, (
p°©
 *
buÂ
 ));

171 
_PROTOTYPE
(
diß°î
, (
sig
 ));

172 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
 []));

173 
_PROTOTYPE
(*
gë_¨gs
, (
p°©
 *
buÂ
 ));

174 
_PROTOTYPE
(
p°©
, (
p_ƒ
, p°© *
buÂ
 ));

175 
_PROTOTYPE
(
addºód
, (
fd
, 
phys_˛icks
 
ba£
, 
vú_byãs
 
addr
,

176 *
buf
, 
nbyãs
 ));

177 
_PROTOTYPE
(
ußge
, (*
≤ame
 ));

178 
_PROTOTYPE
(
îr
, (*
s
 ));

179 
_PROTOTYPE
(
gëty«mes
, ());

188 *
	$äame
(
dev_ƒ
)

189 
Dev_t
 
dev_ƒ
;

191 
i
;

193 i‡(
	`majdev
(
dev_ƒ
Ë=
TTY_MAJ
 && 
	`mödev
(dev_nr) == 0)  "co";

195 
i
 = 0; i < 
n_âyöfo
 && 
âyöfo
[i].
ây_«me
[0] != '\0'; i++)

196 i‡(
âyöfo
[
i
].
ây_dev
 =
dev_ƒ
)

197  
âyöfo
[
i
].
ây_«me
 + 3;

200 
	}
}

203 *
	$èsk«me
(
p_ƒ
)

204 
p_ƒ
;

206  
ps_¥oc
[
p_ƒ
 + 
ƒ_èsks
].
p_«me
;

207 
	}
}

212 *
	$¥ªcv
(
buÂ
)

213 
p°©
 *
buÂ
;

215 *
blk°r
, *
èsk
;

216 
ªcv°r
[20];

218 i‡(
buÂ
->
ps_ªcv
 =
ANY
)  "ANY";

220 
èsk
 = 
	`èsk«me
(
buÂ
->
ps_ªcv
);

221 i‡(
buÂ
->
ps_°©e
 !
S_STATE
Ë 
èsk
;

223 
blk°r
 = "?";

224 i‡(
buÂ
->
ps_ªcv
 =
MM_PROC_NR
) {

225 i‡(
buÂ
->
ps_mÊags
 & 
PAUSED
)

226 
blk°r
 = "pause";

227 i‡(
buÂ
->
ps_mÊags
 & 
WAITING
)

228 
blk°r
 = "wait";

229 } i‡(
buÂ
->
ps_ªcv
 =
FS_PROC_NR
) {

230 i‡(-
buÂ
->
ps_·ask
 =
XOPEN
)

231 
blk°r
 = "xopen";

232 i‡(-
buÂ
->
ps_·ask
 =
XPIPE
)

233 
blk°r
 = "xpipe";

235 
blk°r
 = 
	`èsk«me
(-
buÂ
->
ps_·ask
);

237 (Ë
	`•rötf
(
ªcv°r
, "(%sË%s", 
blk°r
, 
èsk
);

238  
ªcv°r
;

239 
	}
}

244 
	$diß°î
(
sig
)

245 
sig
;

247 
	`Ârötf
(
°dîr
, "Oo›s, gŸ sig«»%d\n", 
sig
);

248 
	`Ârötf
(
°dîr
, "WasÖsÑecompiled sinceÅheÜast kernel change?\n");

249 
	`exô
(3);

250 
	}
}

255 
	$maö
(
¨gc
, 
¨gv
)

256 
¨gc
;

257 *
¨gv
[];

259 
i
;

260 
p°©
 
buf
;

261 
db_fd
;

262 
uid
 = 
	`gëuid
();

263 *
›t
;

264 
›t_Æl
 = 
FALSE
;

265 
›t_l⁄g
 = 
FALSE
;

266 
›t_nŸty
 = 
FALSE
;

267 *
ke_∑th
;

268 *
mm_∑th
;

269 *
fs_∑th
;

270 
psöfo
Ösinfo;

272 (Ë
	`sig«l
(
SIGSEGV
, 
diß°î
);

275 
i
 = 1; i < 
¨gc
; i++) {

276 
›t
 = 
¨gv
[
i
];

277 i‡(
›t
[0] == '-') opt++;

278 *
›t
 != 0) *opt++) {

279 'a': 
›t_Æl
 = 
TRUE
; ;

280 'l': 
›t_l⁄g
 = 
TRUE
; ;

281 'x': 
›t_nŸty
 = 
TRUE
; ;

282 : 
	`ußge
(
¨gv
[0]);

287 i‡((
kmemfd
 = 
	`›í
(
KMEM_PATH
, 
O_RDONLY
)Ë=-1Ë
	`îr
(KMEM_PATH);

288 i‡((
memfd
 = 
	`›í
(
MEM_PATH
, 
O_RDONLY
)Ë=-1Ë
	`îr
(MEM_PATH);

289 i‡(
	`gëty«mes
(Ë=-1Ë
	`îr
("Can't getÅtyÇames");

290 i‡(
	`io˘l
(
memfd
, 
MIOCGPSINFO
, (*Ë&
psöfo
) == -1)

291 
	`îr
("can't get PS info from kernel");

292 
ƒ_èsks
 = 
psöfo
.nr_tasks;

293 
ƒ_¥ocs
 = 
psöfo
.nr_procs;

296 
ps_¥oc
 = (
¥oc
 *Ë
	`mÆloc
((
ƒ_èsks
 + 
ƒ_¥ocs
) * (ps_proc[0]));

297 
ps_m¥oc
 = (
m¥oc
 *Ë
	`mÆloc
(
ƒ_¥ocs
 * (ps_mproc[0]));

298 
ps_Âroc
 = (
Âroc
 *Ë
	`mÆloc
(
ƒ_¥ocs
 * (ps_fproc[0]));

299 i‡(
ps_¥oc
 =
NULL
 || 
ps_m¥oc
 =NULL || 
ps_Âroc
 == NULL)

300 
	`îr
("Out of memory");

303 i‡(
	`addºód
(
kmemfd
, (
phys_˛icks
) 0,

304 
psöfo
.
¥oc
, (*Ë
ps_¥oc
,

305 (
ƒ_èsks
 + 
ƒ_¥ocs
Ë* (
ps_¥oc
[0]))

306 !(
ƒ_èsks
 + 
ƒ_¥ocs
Ë* (
ps_¥oc
[0]))

307 
	`îr
("Can't get kernelÖrocÅable from /dev/kmem");

310 i‡(
	`addºód
(
memfd
, 
ps_¥oc
[
ƒ_èsks
 + 
MM_PROC_NR
].
p_m≠
[
D
].
mem_phys
,

311 
psöfo
.
m¥oc
, (*Ë
ps_m¥oc
,

312 
ƒ_¥ocs
 * (
ps_m¥oc
[0]))

313 !
ƒ_¥ocs
 * (
ps_m¥oc
[0]))

314 
	`îr
("Can't get mmÖrocÅable from /dev/mem");

315 i‡(
	`addºód
(
memfd
, 
ps_¥oc
[
ƒ_èsks
 + 
FS_PROC_NR
].
p_m≠
[
D
].
mem_phys
,

316 
psöfo
.
Âroc
, (*Ë
ps_Âroc
,

317 
ƒ_¥ocs
 * (
ps_Âroc
[0]))

318 !
ƒ_¥ocs
 * (
ps_Âroc
[0]))

319 
	`îr
("Can't get fsÖrocÅable from /dev/mem");

322 
i
 = 
FS_PROC_NR
; i < 
ƒ_¥ocs
; i++) {

323 i‡(
	`°rcmp
(
ps_¥oc
[
ƒ_èsks
 + 
i
].
p_«me
, "INIT") == 0) ;

325 
öô_¥oc_ƒ
 = 
i
;

328 
	`¥ötf
("%s", 
›t_l⁄g
 ? 
L_HEADER
 : 
S_HEADER
);

329 
i
 = -
ƒ_èsks
; i < 
ƒ_¥ocs
; i++) {

330 i‡(
	`p°©
(
i
, &
buf
) != -1 &&

331 (
›t_Æl
 || 
buf
.
ps_euid
 =
uid
 || buf.
ps_ruid
 == uid) &&

332 (
›t_nŸty
 || 
	`majdev
(
buf
.
ps_dev
Ë=
TTY_MAJ
))

333 i‡(
›t_l⁄g
Ë
	`¥ötf
(
L_FORMAT
,

334 
buf
.
ps_Êags
, buf.
ps_°©e
,

335 
buf
.
ps_euid
, buf.
ps_pid
, buf.
ps_µid
,

336 
buf
.
ps_pgΩ
,

337 
	`off_to_k
((
buf
.
ps_tsize


338 + 
buf
.
ps_°ack
 - buf.
ps_d©a


339 + 
buf
.
ps_ssize
)),

340 (
buf
.
ps_Êags
 & 
RECEIVING
 ?

341 
	`¥ªcv
(&
buf
) :

343 
	`äame
((
Dev_t
Ë
buf
.
ps_dev
),

344 (
buf
.
ps_utime
 + buf.
ps_°ime
Ë/ 
HZ
 / 60,

345 (
buf
.
ps_utime
 + buf.
ps_°ime
Ë/ 
HZ
 % 60,

346 
i
 <
öô_¥oc_ƒ
 ? 
	`èsk«me
(i) :

347 (
buf
.
ps_¨gs
 =
NULL
 ? "" :

348 
buf
.
ps_¨gs
));

350 
	`¥ötf
(
S_FORMAT
,

351 
buf
.
ps_pid
, 
	`äame
((
Dev_t
Ëbuf.
ps_dev
),

352 (
buf
.
ps_utime
 + buf.
ps_°ime
Ë/ 
HZ
 / 60,

353 (
buf
.
ps_utime
 + buf.
ps_°ime
Ë/ 
HZ
 % 60,

354 
i
 <
öô_¥oc_ƒ
 ? 
	`èsk«me
(i) :

355 (
buf
.
ps_¨gs
 =
NULL
 ? "" :

356 
buf
.
ps_¨gs
));

359 
	}
}

361 *
	$gë_¨gs
(
buÂ
)

362 
p°©
 *
buÂ
;

364 
«rgv
;

365 
˙t
;

366 
√os
;

367 
phys_byãs
 
i‰ame
;

368 
l
;

369 *
˝
, *
¨gs
;

370 
	u°ack
 {

371 
vú_byãs
 
°k_i
;

372 *
°k_˝
;

373 
°k_c
;

374 } 
°k
[
ARG_MAX
 / (*)];

375 
°ack
 *
•
;

378 
i‰ame
 = 
buÂ
->
ps_¥oˇrgs
 - buÂ->
ps_v°ack
 + buÂ->
ps_°ack
;

381 
l
 = (
phys_byãs
Ë
buÂ
->
ps_ssize
 - (
i‰ame
 - buÂ->
ps_°ack
);

382 i‡(
l
 > 
ARG_MAX
)Ü = ARG_MAX;

383 
˙t
 = 
l
;

386 i‡(
	`l£ek
(
memfd
, (
off_t
Ë
i‰ame
, 0) < 0)

387  
NULL
;

389 i‡–
	`ªad
(
memfd
, (*)
°k
, 
˙t
) != cnt )

390  
NULL
;

392 
•
 = 
°k
;

393 
«rgv
 = (Ë
•
[0].
°k_i
;

396 
l
 = (Ë
•
[1].
°k_˝
 - (Ë
buÂ
->
ps_¥oˇrgs
;

398 i‡––
l
 < 0 ) || (Ü > 
˙t
 ) )

399  
NULL
;

404 
¨gs
 = &((*Ë
°k
)[()
l
];

405 
√os
 = 0;

406 
˝
 = 
¨gs
; c∞< &((*Ë
°k
)[
˙t
]; cp++)

407 i‡(*
˝
 == '\0')

408 i‡(++
√os
 >
«rgv
)

411 *
˝
 = ' ';

412 i‡(
˝
 =
¨gs
Ë 
NULL
;

413 *
˝
 = '\0';

415  
¨gs
;

417 
	}
}

422 
	$p°©
(
p_ƒ
, 
buÂ
)

423 
p_ƒ
;

424 
p°©
 *
buÂ
;

426 
p_ki
 = 
p_ƒ
 + 
ƒ_èsks
;

428 i‡(
p_ƒ
 < -
ƒ_èsks
 ||Ö_ƒ >
ƒ_¥ocs
)  -1;

430 i‡((
ps_¥oc
[
p_ki
].
p_Êags
 & 
P_SLOT_FREE
)

431 && !(
ps_m¥oc
[
p_ƒ
].
mp_Êags
 & 
IN_USE
))

434 
buÂ
->
ps_Êags
 = 
ps_¥oc
[
p_ki
].
p_Êags
;

436 i‡(
p_ƒ
 >
low_u£r
) {

437 
buÂ
->
ps_dev
 = 
ps_Âroc
[
p_ƒ
].
Â_ây
;

438 
buÂ
->
ps_·ask
 = 
ps_Âroc
[
p_ƒ
].
Â_èsk
;

440 
buÂ
->
ps_dev
 = 0;

441 
buÂ
->
ps_·ask
 = 0;

444 i‡(
p_ƒ
 >
low_u£r
) {

445 
buÂ
->
ps_ruid
 = 
ps_m¥oc
[
p_ƒ
].
mp_ªÆuid
;

446 
buÂ
->
ps_euid
 = 
ps_m¥oc
[
p_ƒ
].
mp_effuid
;

447 
buÂ
->
ps_pid
 = 
ps_m¥oc
[
p_ƒ
].
mp_pid
;

448 
buÂ
->
ps_µid
 = 
ps_m¥oc
[ps_m¥oc[
p_ƒ
].
mp_∑ª¡
].
mp_pid
;

449 
buÂ
->
ps_pgΩ
 = 
ps_m¥oc
[
p_ƒ
].
mp_¥ocgΩ
;

450 
buÂ
->
ps_mÊags
 = 
ps_m¥oc
[
p_ƒ
].
mp_Êags
;

452 
buÂ
->
ps_pid
 = buÂ->
ps_µid
 = 0;

453 
buÂ
->
ps_ruid
 = buÂ->
ps_euid
 = 0;

454 
buÂ
->
ps_pgΩ
 = 0;

455 
buÂ
->
ps_mÊags
 = 0;

459 i‡(
p_ƒ
 >
low_u£r
) {

460 i‡(
ps_m¥oc
[
p_ƒ
].
mp_Êags
 & 
HANGING
)

461 
buÂ
->
ps_°©e
 = 
Z_STATE
;

462 i‡(
ps_m¥oc
[
p_ƒ
].
mp_Êags
 & 
STOPPED
)

463 
buÂ
->
ps_°©e
 = 
T_STATE
;

464 i‡(
ps_¥oc
[
p_ki
].
p_Êags
 == 0)

465 
buÂ
->
ps_°©e
 = 
R_STATE
;

466 i‡(
ps_m¥oc
[
p_ƒ
].
mp_Êags
 & (
WAITING
 | 
PAUSED
) ||

467 
ps_Âroc
[
p_ƒ
].
Â_su•íded
 =
SUSPENDED
)

468 
buÂ
->
ps_°©e
 = 
S_STATE
;

470 
buÂ
->
ps_°©e
 = 
W_STATE
;

472 i‡(
ps_¥oc
[
p_ki
].
p_Êags
 == 0)

473 
buÂ
->
ps_°©e
 = 
R_STATE
;

475 
buÂ
->
ps_°©e
 = 
W_STATE
;

478 
buÂ
->
ps_tsize
 = (
size_t
Ë
ps_¥oc
[
p_ki
].
p_m≠
[
T
].
mem_Àn
 << 
CLICK_SHIFT
;

479 
buÂ
->
ps_dsize
 = (
size_t
Ë
ps_¥oc
[
p_ki
].
p_m≠
[
D
].
mem_Àn
 << 
CLICK_SHIFT
;

480 
buÂ
->
ps_ssize
 = (
size_t
Ë
ps_¥oc
[
p_ki
].
p_m≠
[
S
].
mem_Àn
 << 
CLICK_SHIFT
;

481 
buÂ
->
ps_vãxt
 = (
off_t
Ë
ps_¥oc
[
p_ki
].
p_m≠
[
T
].
mem_vú
 << 
CLICK_SHIFT
;

482 
buÂ
->
ps_vd©a
 = (
off_t
Ë
ps_¥oc
[
p_ki
].
p_m≠
[
D
].
mem_vú
 << 
CLICK_SHIFT
;

483 
buÂ
->
ps_v°ack
 = (
off_t
Ë
ps_¥oc
[
p_ki
].
p_m≠
[
S
].
mem_vú
 << 
CLICK_SHIFT
;

484 
buÂ
->
ps_ãxt
 = (
off_t
Ë
ps_¥oc
[
p_ki
].
p_m≠
[
T
].
mem_phys
 << 
CLICK_SHIFT
;

485 
buÂ
->
ps_d©a
 = (
off_t
Ë
ps_¥oc
[
p_ki
].
p_m≠
[
D
].
mem_phys
 << 
CLICK_SHIFT
;

486 
buÂ
->
ps_°ack
 = (
off_t
Ë
ps_¥oc
[
p_ki
].
p_m≠
[
S
].
mem_phys
 << 
CLICK_SHIFT
;

488 
buÂ
->
ps_ªcv
 = 
ps_¥oc
[
p_ki
].
p_gë‰om
;

490 
buÂ
->
ps_utime
 = 
ps_¥oc
[
p_ki
].
u£r_time
;

491 
buÂ
->
ps_°ime
 = 
ps_¥oc
[
p_ki
].
sys_time
;

493 
buÂ
->
ps_¥oˇrgs
 = 
ps_m¥oc
[
p_ƒ
].
mp_¥oˇrgs
;

495 i‡(
buÂ
->
ps_°©e
 =
Z_STATE
)

496 
buÂ
->
ps_¨gs
 = "<defunct>";

497 i‡(
p_ƒ
 > 
öô_¥oc_ƒ
)

498 
buÂ
->
ps_¨gs
 = 
	`gë_¨gs
(bufp);

501 
	}
}

504 
	$addºód
(
fd
, 
ba£
, 
addr
, 
buf
, 
nbyãs
)

505 
fd
;

506 
phys_˛icks
 
ba£
;

507 
vú_byãs
 
addr
;

508 *
buf
;

509 
nbyãs
;

511 i‡(
	`l£ek
(
fd
, ((
off_t
Ë
ba£
 << 
CLICK_SHIFT
Ë+ 
addr
, 0) < 0)

514  
	`ªad
(
fd
, 
buf
, 
nbyãs
);

515 
	}
}

517 
	$ußge
(
≤ame
)

518 *
≤ame
;

520 
	`Ârötf
(
°dîr
, "Ußge: %†[-][Æx]\n", 
≤ame
);

521 
	`exô
(1);

522 
	}
}

524 
	$îr
(
s
)

525 *
s
;

527 
î∫o
;

529 i‡(
î∫o
 == 0)

530 
	`Ârötf
(
°dîr
, "ps: %s\n", 
s
);

532 
	`Ârötf
(
°dîr
, "ps: %s: %s\n", 
s
, 
	`°ªº‹
(
î∫o
));

534 
	`exô
(2);

535 
	}
}

538 
	$gëty«mes
()

540 
dev_∑th
[] = "/dev/";

541 
°©
 
°©buf
;

542 
∑th
[(
dev_∑th
Ë+ 
NAME_MAX
];

543 
ödex
;

544 
âyít
 *
âyp
;

546 
ödex
 = 0;

547 (
âyp
 = 
	`gëâyít
()Ë!
NULL
) {

548 
	`°r˝y
(
∑th
, 
dev_∑th
);

549 
	`°rˇt
(
∑th
, 
âyp
->
ty_«me
);

550 i‡(
	`°©
(
∑th
, &
°©buf
Ë=-1 || !
	`S_ISCHR
(°©buf.
°_mode
))

552 i‡(
ödex
 >
n_âyöfo
) {

553 
n_âyöfo
(
ödex
+16) * 2;

554 
âyöfo
 = 
	`ªÆloc
—työfo, 
n_âyöfo
 * (ttyinfo[0]));

555 i‡(
âyöfo
 =
NULL
Ë
	`îr
("Out of memory");

557 
âyöfo
[
ödex
].
ây_dev
 = 
°©buf
.
°_rdev
;

558 
	`°r˝y
(
âyöfo
[
ödex
].
ây_«me
, 
âyp
->
ty_«me
);

559 
ödex
++;

561 
	`ídâyít
();

562 
ödex
 < 
n_âyöfo
Ë
âyöfo
[ödex++].
ây_dev
= 0;

565 
	}
}

	@pty.c

19 
	~"kî√l.h
"

20 
	~<ãrmios.h
>

21 
	~<sig«l.h
>

22 
	~<möix/com.h
>

23 
	~<möix/ˇŒƒ.h
>

24 
	~"ây.h
"

25 
	~"¥oc.h
"

27 #i‡
NR_PTYS
 > 0

30 
	s±y
 {

31 
ây_t
 *
	mây
;

32 
	m°©e
;

35 
	mrdªpcode
;

36 
	mrdˇŒî
;

37 
	mrd¥oc
;

38 
vú_byãs
 
	mrdvú
;

39 
	mrdÀ·
;

40 
	mrdcum
;

43 
	mwºïcode
;

44 
	mwrˇŒî
;

45 
	mwΩroc
;

46 
vú_byãs
 
	mwrvú
;

47 
	mwæe·
;

48 
	mwrcum
;

51 
	mocou¡
;

52 *
	mohód
, *
	mŸaû
;

53 
	mobuf
[128];

54 } 
	t±y_t
;

56 
	#PTY_ACTIVE
 0x01

	)

57 
	#TTY_CLOSED
 0x02

	)

58 
	#PTY_CLOSED
 0x04

	)

60 
PRIVATE
 
±y_t
 
	g±y_èbÀ
[
NR_PTYS
];

63 
FORWARD
 
_PROTOTYPE
–
±y_wrôe
, (
ây_t
 *
ç
) );

64 
FORWARD
 
_PROTOTYPE
–
±y_echo
, (
ây_t
 *
ç
, 
c
) );

65 
FORWARD
 
_PROTOTYPE
–
±y_°¨t
, (
±y_t
 *
µ
) );

66 
FORWARD
 
_PROTOTYPE
–
±y_föish
, (
±y_t
 *
µ
) );

67 
FORWARD
 
_PROTOTYPE
–
±y_ªad
, (
ây_t
 *
ç
) );

68 
FORWARD
 
_PROTOTYPE
–
±y_˛o£
, (
ây_t
 *
ç
) );

69 
FORWARD
 
_PROTOTYPE
–
±y_iˇn˚l
, (
ây_t
 *
ç
) );

70 
FORWARD
 
_PROTOTYPE
–
±y_oˇn˚l
, (
ây_t
 *
ç
) );

76 
PUBLIC
 
	$do_±y
(
ç
, 
m_±r
)

77 
ây_t
 *
ç
;

78 
mesßge
 *
m_±r
;

81 
±y_t
 *
µ
 = 
ç
->
ây_¥iv
;

82 
r
;

84 
m_±r
->
m_ty≥
) {

85 
DEV_READ
:

87 i‡(
µ
->
°©e
 & 
TTY_CLOSED
) {

88 
r
 = 0;

91 i‡(
µ
->
rdÀ·
 != 0) {

92 
r
 = 
EIO
;

95 i‡(
m_±r
->
COUNT
 <= 0) {

96 
r
 = 
EINVAL
;

99 i‡(
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
Ëm_±r->
ADDRESS
,

100 
m_±r
->
COUNT
) == 0) {

101 
r
 = 
EFAULT
;

104 
µ
->
rdªpcode
 = 
TASK_REPLY
;

105 
µ
->
rdˇŒî
 = 
m_±r
->
m_sour˚
;

106 
µ
->
rd¥oc
 = 
m_±r
->
PROC_NR
;

107 
µ
->
rdvú
 = (
vú_byãs
Ë
m_±r
->
ADDRESS
;

108 
µ
->
rdÀ·
 = 
m_±r
->
COUNT
;

109 
	`±y_°¨t
(
µ
);

110 
	`h™dÀ_evíts
(
ç
);

111 i‡(
µ
->
rdÀ·
 == 0) ;

113 i‡(
m_±r
->
TTY_FLAGS
 & 
O_NONBLOCK
) {

114 
r
 = 
EAGAIN
;

115 
µ
->
rdÀ·
 =Öp->
rdcum
 = 0;

117 
r
 = 
SUSPEND
;

118 
µ
->
rdªpcode
 = 
REVIVE
;

122 
DEV_WRITE
:

124 i‡(
µ
->
°©e
 & 
TTY_CLOSED
) {

125 
r
 = 
EIO
;

128 i‡(
µ
->
wæe·
 != 0) {

129 
r
 = 
EIO
;

132 i‡(
m_±r
->
COUNT
 <= 0) {

133 
r
 = 
EINVAL
;

136 i‡(
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
Ëm_±r->
ADDRESS
,

137 
m_±r
->
COUNT
) == 0) {

138 
r
 = 
EFAULT
;

141 
µ
->
wºïcode
 = 
TASK_REPLY
;

142 
µ
->
wrˇŒî
 = 
m_±r
->
m_sour˚
;

143 
µ
->
wΩroc
 = 
m_±r
->
PROC_NR
;

144 
µ
->
wrvú
 = (
vú_byãs
Ë
m_±r
->
ADDRESS
;

145 
µ
->
wæe·
 = 
m_±r
->
COUNT
;

146 
	`h™dÀ_evíts
(
ç
);

147 i‡(
µ
->
wæe·
 == 0) ;

149 i‡(
m_±r
->
TTY_FLAGS
 & 
O_NONBLOCK
) {

150 
r
 = 
µ
->
wrcum
 > 0 ?Öp->wrcum : 
EAGAIN
;

151 
µ
->
wæe·
 =Öp->
wrcum
 = 0;

153 
µ
->
wºïcode
 = 
REVIVE
;

154 
r
 = 
SUSPEND
;

158 
DEV_IOCTL
:

160 
r
 = 
ENOTTY
;

163 
DEV_OPEN
:

164 
r
 = 
µ
->
°©e
 !0 ? 
EIO
 : 
OK
;

165 
µ
->
°©e
 |
PTY_ACTIVE
;

168 
DEV_CLOSE
:

169 
r
 = 
OK
;

170 i‡(
µ
->
°©e
 & 
TTY_CLOSED
) {

171 
µ
->
°©e
 = 0;

173 
µ
->
°©e
 |
PTY_CLOSED
;

174 
	`sigch¨
(
ç
, 
SIGHUP
);

178 
CANCEL
:

179 i‡(
m_±r
->
PROC_NR
 =
µ
->
rd¥oc
) {

181 
µ
->
rdÀ·
 =Öp->
rdcum
 = 0;

183 i‡(
m_±r
->
PROC_NR
 =
µ
->
wΩroc
) {

185 
µ
->
wæe·
 =Öp->
wrcum
 = 0;

187 
r
 = 
EINTR
;

191 
r
 = 
EINVAL
;

193 
	`ây_ª∂y
(
TASK_REPLY
, 
m_±r
->
m_sour˚
, m_±r->
PROC_NR
, 
r
);

194 
	}
}

200 
PRIVATE
 
	$±y_wrôe
(
ç
)

201 
ây_t
 *
ç
;

206 
±y_t
 *
µ
 = 
ç
->
ây_¥iv
;

207 
cou¡
, 
ocou¡
;

208 
phys_byãs
 
u£r_phys
;

211 i‡(
µ
->
°©e
 & 
PTY_CLOSED
) {

212 i‡(
ç
->
ây_ouée·
 > 0) {

213 
	`ây_ª∂y
(
ç
->
ây_ouåïcode
,Åp->
ây_outˇŒî
,

214 
ç
->
ây_ouçroc
, 
EIO
);

215 
ç
->
ây_ouée·
 =Åp->
ây_outcum
 = 0;

222 
ocou¡
 = 
	`buÊí
(
µ
->
obuf
) -Öp->ocount;

223 
cou¡
 = 
	`bu„nd
(
µ
->
obuf
Ë-Öp->
ohód
;

224 i‡(
cou¡
 > 
ocou¡
) count = ocount;

225 i‡(
cou¡
 > 
ç
->
ây_ouée·
) count =Åp->tty_outleft;

226 i‡(
cou¡
 =0 || 
ç
->
ây_öhibôed
) ;

229 
u£r_phys
 = 
	`¥oc_vú2phys
(
	`¥oc_addr
(
ç
->
ây_ouçroc
),Åp->
ây_out_vú
);

230 
	`phys_c›y
(
u£r_phys
, 
	`vú2phys
(
µ
->
ohód
), (
phys_byãs
Ë
cou¡
);

233 
	`out_¥o˚ss
(
ç
, 
µ
->
obuf
,Öp->
ohód
, 
	`bu„nd
’p->obuf), &
cou¡
, &
ocou¡
);

234 i‡(
cou¡
 == 0) ;

237 
ç
->
ây_ª¥öt
 = 
TRUE
;

240 
µ
->
ocou¡
 += ocount;

241 i‡((
µ
->
ohód
 +
ocou¡
Ë>
	`bu„nd
’p->
obuf
))

242 
µ
->
ohód
 -
	`buÊí
’p->
obuf
);

243 
	`±y_°¨t
(
µ
);

244 
ç
->
ây_out_vú
 +
cou¡
;

245 
ç
->
ây_outcum
 +
cou¡
;

246 i‡((
ç
->
ây_ouée·
 -
cou¡
) == 0) {

248 
	`ây_ª∂y
(
ç
->
ây_ouåïcode
,Åp->
ây_outˇŒî
,

249 
ç
->
ây_ouçroc
,Åp->
ây_outcum
);

250 
ç
->
ây_outcum
 = 0;

253 
	`±y_föish
(
µ
);

254 
	}
}

260 
PRIVATE
 
	$±y_echo
(
ç
, 
c
)

261 
ây_t
 *
ç
;

262 
c
;

266 
±y_t
 *
µ
 = 
ç
->
ây_¥iv
;

267 
cou¡
, 
ocou¡
;

269 
ocou¡
 = 
	`buÊí
(
µ
->
obuf
) -Öp->ocount;

270 i‡(
ocou¡
 == 0) ;

271 
cou¡
 = 1;

272 *
µ
->
ohód
 = 
c
;

274 
	`out_¥o˚ss
(
ç
, 
µ
->
obuf
,Öp->
ohód
, 
	`bu„nd
’p->obuf), &
cou¡
, &
ocou¡
);

275 i‡(
cou¡
 == 0) ;

277 
µ
->
ocou¡
 += ocount;

278 i‡((
µ
->
ohód
 +
ocou¡
Ë>
	`bu„nd
’p->
obuf
)Ëµ->ohód -
	`buÊí
(pp->obuf);

279 
	`±y_°¨t
(
µ
);

280 
	}
}

286 
PRIVATE
 
	$±y_°¨t
(
µ
)

287 
±y_t
 *
µ
;

290 
cou¡
;

291 
phys_byãs
 
u£r_phys
;

295 
cou¡
 = 
	`bu„nd
(
µ
->
obuf
Ë-Öp->
Ÿaû
;

296 i‡(
cou¡
 > 
µ
->
ocou¡
) count =Öp->ocount;

297 i‡(
cou¡
 > 
µ
->
rdÀ·
) count =Öp->rdleft;

298 i‡(
cou¡
 == 0) ;

301 
u£r_phys
 = 
	`¥oc_vú2phys
(
	`¥oc_addr
(
µ
->
rd¥oc
),Öp->
rdvú
);

302 
	`phys_c›y
(
	`vú2phys
(
µ
->
Ÿaû
), 
u£r_phys
, (
phys_byãs
Ë
cou¡
);

305 
µ
->
ocou¡
 -
cou¡
;

306 i‡((
µ
->
Ÿaû
 +
cou¡
Ë=
	`bu„nd
’p->
obuf
))Öp->otail =Öp->obuf;

307 
µ
->
rdvú
 +
cou¡
;

308 
µ
->
rdcum
 +
cou¡
;

309 
µ
->
rdÀ·
 -
cou¡
;

311 
	}
}

317 
PRIVATE
 
	$±y_föish
(
µ
)

318 
±y_t
 *
µ
;

324 i‡(
µ
->
rdcum
 > 0) {

325 
	`ây_ª∂y
(
µ
->
rdªpcode
,Öp->
rdˇŒî
,Öp->
rd¥oc
,Öp->
rdcum
);

326 
µ
->
rdÀ·
 =Öp->
rdcum
 = 0;

328 
	}
}

334 
PRIVATE
 
	$±y_ªad
(
ç
)

335 
ây_t
 *
ç
;

340 
±y_t
 *
µ
 = 
ç
->
ây_¥iv
;

341 
phys_byãs
 
u£r_phys
;

342 
c
;

344 i‡(
µ
->
°©e
 & 
PTY_CLOSED
) {

345 i‡(
ç
->
ây_öÀ·
 > 0) {

346 
	`ây_ª∂y
(
ç
->
ây_öªpcode
,Åp->
ây_öˇŒî
,Åp->
ây_ö¥oc
,

347 
ç
->
ây_öcum
);

348 
ç
->
ây_öÀ·
 =Åp->
ây_öcum
 = 0;

353 
µ
->
wæe·
 > 0) {

355 
u£r_phys
 = 
	`¥oc_vú2phys
(
	`¥oc_addr
(
µ
->
wΩroc
),Öp->
wrvú
);

356 
	`phys_c›y
(
u£r_phys
, 
	`vú2phys
(&
c
), 1L);

359 i‡(
	`ö_¥o˚ss
(
ç
, &
c
, 1) == 0) ;

362 
µ
->
wrvú
++;

363 
µ
->
wrcum
++;

364 i‡(--
µ
->
wæe·
 == 0) {

365 
	`ây_ª∂y
(
µ
->
wºïcode
,Öp->
wrˇŒî
,Öp->
wΩroc
,Öp->
wrcum
);

366 
µ
->
wrcum
 = 0;

369 
	}
}

375 
PRIVATE
 
	$±y_˛o£
(
ç
)

376 
ây_t
 *
ç
;

379 
±y_t
 *
µ
 = 
ç
->
ây_¥iv
;

381 i‡(!(
µ
->
°©e
 & 
PTY_ACTIVE
)) ;

383 i‡(
µ
->
rdÀ·
 > 0) {

384 
	`ây_ª∂y
(
µ
->
rdªpcode
,Öp->
rdˇŒî
,Öp->
rd¥oc
, 0);

385 
µ
->
rdÀ·
 =Öp->
rdcum
 = 0;

388 i‡(
µ
->
wæe·
 > 0) {

389 
	`ây_ª∂y
(
µ
->
wºïcode
,Öp->
wrˇŒî
,Öp->
wΩroc
, 
EIO
);

390 
µ
->
wæe·
 =Öp->
wrcum
 = 0;

393 i‡(
µ
->
°©e
 & 
PTY_CLOSED
Ëµ->°©ê0; µ->°©ê|
TTY_CLOSED
;

394 
	}
}

400 
PRIVATE
 
	$±y_iˇn˚l
(
ç
)

401 
ây_t
 *
ç
;

404 
±y_t
 *
µ
 = 
ç
->
ây_¥iv
;

406 i‡(
µ
->
wæe·
 > 0) {

407 
	`ây_ª∂y
(
µ
->
wºïcode
,Öp->
wrˇŒî
,Öp->
wΩroc
,

408 
µ
->
wrcum
 +Öp->
wæe·
);

409 
µ
->
wæe·
 =Öp->
wrcum
 = 0;

411 
	}
}

417 
PRIVATE
 
	$±y_oˇn˚l
(
ç
)

418 
ây_t
 *
ç
;

421 
±y_t
 *
µ
 = 
ç
->
ây_¥iv
;

423 
µ
->
ocou¡
 = 0;

424 
µ
->
Ÿaû
 =Öp->
ohód
;

425 
	}
}

431 
PUBLIC
 
	$±y_öô
(
ç
)

432 
ây_t
 *
ç
;

434 
±y_t
 *
µ
;

435 
löe
;

438 
löe
 = 
ç
 - &
ây_èbÀ
[
NR_CONS
 + 
NR_RS_LINES
];

439 
µ
 = 
ç
->
ây_¥iv
 = &
±y_èbÀ
[
löe
];

440 
µ
->
ây
 = 
ç
;

443 
µ
->
ohód
 =Öp->
Ÿaû
 =Öp->
obuf
;

446 
ç
->
ây_devªad
 = 
±y_ªad
;

447 
ç
->
ây_devwrôe
 = 
±y_wrôe
;

448 
ç
->
ây_echo
 = 
±y_echo
;

449 
ç
->
ây_iˇn˚l
 = 
±y_iˇn˚l
;

450 
ç
->
ây_oˇn˚l
 = 
±y_oˇn˚l
;

451 
ç
->
ây_˛o£
 = 
±y_˛o£
;

452 
	}
}

	@putc.c

6 
	~<°dio.h
>

9 (
	gputc
)(
	gc
, 
FILE
 *
	g°ªam
)

11  
putc
(
c
, 
°ªam
);

	@putchar.c

6 
	~<°dio.h
>

9 (
	gputch¨
)(
	gc
)

11  
putch¨
(
c
);

	@putenv.c

7 
	~<°dlib.h
>

8 
	~<°rög.h
>

10 
	#ENTRY_INC
 10

	)

11 
	#rounded
(
x
Ë(((x / 
ENTRY_INC
Ë+ 1Ë* ENTRY_INC)

	)

13 
_CONST
 **
ívú⁄
;

16 
	$puãnv
(
«me
)

17 
_CONST
 *
«me
;

19 
_CONST
 **
v
 = 
ívú⁄
;

20 *
r
;

21 
size
 = 0;

27 i‡(!
«me
)  0;

28 i‡(
ívú⁄
 =
NULL
)  1;

29 i‡(
r
 = 
	`°rchr
(
«me
, '=')) {

30 
_CONST
 *
p
, *
q
;

32 *
r
 = '\0';

34 i‡(
v
 !
NULL
) {

35 (
p
 = *
v
Ë!
NULL
) {

36 
q
 = 
«me
;

37 *
q
 && (*q++ =*
p
++))

39 i‡(*
q
 || (*
p
 != '=')) {

40 
v
++;

45 *
r
 = '=';

46 *
v
 = 
«me
;

51 *
r
 = '=';

52 
v
 = 
ívú⁄
;

55 i‡(!
size
) {

56 
_CONST
 **
p
;

57 
i
 = 0;

59 i‡(
v
)

61 
i
++;

62 } *
v
++);

63 i‡(!(
v
 = 
	`mÆloc
(
	`rounded
(
i
) * (**))))

65 
size
 = 
i
;

66 
p
 = 
ívú⁄
;

67 
ívú⁄
 = 
v
;

68 *
v
++ = *
p
++);

69 
v
 = 
ívú⁄
;

70 } i‡(!(
size
 % 
ENTRY_INC
)) {

71 i‡(!(
v
 = 
	`ªÆloc
(
ívú⁄
, 
	`rounded
(
size
) * (**))))

73 
ívú⁄
 = 
v
;

75 
v
[
size
 - 1] = 
«me
;

76 
v
[
size
] = 
NULL
;

77 
size
++;

79 
	}
}

	@putk.c

6 
	~"öë.h
"

8 
	#BUF_SIZE
 100

	)

10 
PRIVATE
 
	gbuf_cou¡
;

11 
PRIVATE
 
	g¥öt_buf
[
BUF_SIZE
];

12 
PRIVATE
 
mesßge
 
	gputch_msg
;

14 
FORWARD
 
_PROTOTYPE
 (
Êush
, () );

15 
_PROTOTYPE
 (
putk
, (
c
) );

21 
PUBLIC
 
	$putk
(
c
)

22 
c
;

26 i‡(
c
 =0 || 
buf_cou¡
 =
BUF_SIZE
Ë
	`Êush
();

27 i‡(
c
 ='\n'Ë
	`putk
('\r');

28 i‡(
c
 !0Ë
¥öt_buf
[
buf_cou¡
++] = c;

29 
	}
}

35 
PRIVATE
 
	$Êush
()

39 i‡(
buf_cou¡
 == 0) ;

40 
putch_msg
.
m_ty≥
 = 
DEV_WRITE
;

41 
putch_msg
.
PROC_NR
 = 
THIS_PROC
;

42 
putch_msg
.
TTY_LINE
 = 0;

43 
putch_msg
.
ADDRESS
 = 
¥öt_buf
;

44 
putch_msg
.
COUNT
 = 
buf_cou¡
;

45 
	`£ndªc
(
TTY
, &
putch_msg
);

46 i‡(
putch_msg
.
REP_STATUS
 =
SUSPEND
)

47 
	`ª˚ive
(
TTY
, &
putch_msg
);

48 
buf_cou¡
 = 0;

49 
	}
}

	@puts.c

6 
	~<°dio.h
>

9 
	$puts
(c⁄° *
s
)

11 
FILE
 *
fûe
 = 
°dout
;

12 
i
 = 0;

14 *
s
) {

15 i‡(
	`putc
(*
s
++, 
fûe
Ë=
EOF
)  EOF;

16 
i
++;

18 i‡(
	`putc
('\n', 
fûe
Ë=
EOF
)  EOF;

19  
i
 + 1;

20 
	}
}

	@putw.c

6 
	~<°dio.h
>

8 
_PROTOTYPE
(
putw
, (
w
, 
FILE
 *
°ªam
 ));

11 
	$putw
(
w
, 
°ªam
)

12 
w
;

13 
FILE
 *
°ªam
;

15 
˙t
 = ();

16 *
p
 = (*Ë&
w
;

18 
˙t
--) {

19 
	`putc
(*
p
++, 
°ªam
);

21 i‡(
	`„º‹
(
°ªam
)Ë 
EOF
;

22  
w
;

23 
	}
}

	@qsort.c

7 
	~<°dlib.h
>

9 
qs‹t1
(*, *, 
size_t
);

10 (*
qcom∑r
)(const *, const *);

11 
	`qexch™ge
(*, *, 
size_t
);

12 
	`q3exch™ge
(*, *, *, 
size_t
);

15 
	`qs‹t
(*
ba£
, 
size_t
 
√l
, size_à
width
,

16 (*
com∑r
)(const *, const *))

19 i‡(!
√l
) ;

20 
qcom∑r
 = ((*)(c⁄° *, c⁄° *)Ë
com∑r
;

21 
	`qs‹t1
(
ba£
, (*)ba£ + (
√l
 - 1Ë* 
width
, width);

22 
	}
}

25 
	$qs‹t1
(*
a1
, *
a2
, 
size_t
 
width
)

27 *
À·
, *
right
;

28 *
À·eq
, *
righãq
;

29 
cmp
;

32 i‡(
a2
 <
a1
) ;

33 
À·
 = 
a1
;

34 
right
 = 
a2
;

35 
À·eq
 = 
righãq
 = 
a1
 + 
width
 * (((
a2
-a1)+width)/(2*width));

44 
agaö
:

45 
À·
 < 
À·eq
 && (
cmp
 = (*
qcom∑r
)(left,Üefteq)) <= 0) {

46 i‡(
cmp
 < 0) {

48 
À·
 +
width
;

54 
À·eq
 -
width
;

55 
	`qexch™ge
(
À·
, 
À·eq
, 
width
);

58 
right
 > 
righãq
) {

59 i‡((
cmp
 = (*
qcom∑r
)(
right
, 
righãq
)) < 0) {

62 i‡(
À·
 < 
À·eq
) {

66 
	`qexch™ge
(
À·
, 
right
, 
width
);

67 
À·
 +
width
;

68 
right
 -
width
;

69 
agaö
;

78 
righãq
 +
width
;

79 
	`q3exch™ge
(
À·
, 
righãq
, 
right
, 
width
);

80 
À·eq
 +
width
;

81 
À·
 = 
À·eq
;

83 i‡(
cmp
 == 0) {

87 
righãq
 +
width
;

88 
	`qexch™ge
(
right
, 
righãq
, 
width
);

90 
right
 -
width
;

92 i‡(
À·
 < 
À·eq
) {

98 
À·eq
 -
width
;

99 
	`q3exch™ge
(
right
, 
À·eq
, 
À·
, 
width
);

100 
righãq
 -
width
;

101 
right
 = 
righãq
;

102 
agaö
;

105 
	`qs‹t1
(
a1
, 
À·eq
 - 
width
, width);

109 
a1
 = 
righãq
 + 
width
;

112 
	}
}

115 
	$qexch™ge
(*
p
, *
q
,

116 
size_t
 
n
)

118 
c
;

120 
n
-- > 0) {

121 
c
 = *
p
;

122 *
p
++ = *
q
;

123 *
q
++ = 
c
;

125 
	}
}

128 
	$q3exch™ge
(*
p
, *
q
, *
r
,

129 
size_t
 
n
)

131 
c
;

133 
n
-- > 0) {

134 
c
 = *
p
;

135 *
p
++ = *
r
;

136 *
r
++ = *
q
;

137 *
q
++ = 
c
;

139 
	}
}

	@raise.c

7 #if 
deföed
(
_POSIX_SOURCE
)

8 
	~<sys/ty≥s.h
>

10 
	~<sig«l.h
>

12 
_kûl
(
pid
, 
sig
);

13 
pid_t
 
_gëpid
();

16 
	$øi£
(
sig
)

18 i‡(
sig
 < 0 || sig > 
_NSIG
)

20  
	`_kûl
(
	`_gëpid
(), 
sig
);

21 
	}
}

	@rand.c

7 
	~<°dlib.h
>

9 
	g√xt
 = 1;

11 
	$ønd
()

13 
√xt
 =Çext * 1103515245 + 12345;

14  ()(
√xt
/(2 * (
RAND_MAX
 +1L)) % (RAND_MAX+1L));

15 
	}
}

17 
	$§™d
(
£ed
)

19 
√xt
 = 
£ed
;

20 
	}
}

	@rawfs.c

5 
	#nû
 0

	)

6 
	#_POSIX_SOURCE
 1

	)

7 
	#_MINIX
 1

	)

8 
	~<sys/ty≥s.h
>

9 
	~<sys/°©.h
>

10 
	~<°dlib.h
>

11 
	~<limôs.h
>

12 
	~<°rög.h
>

13 
	~<î∫o.h
>

14 
	~<möix/c⁄fig.h
>

15 
	~<möix/c⁄°.h
>

16 
	~<möix/ty≥.h
>

17 
	~<fs/c⁄°.h
>

18 
	~<fs/ty≥.h
>

19 
	~<fs/buf.h
>

20 
	~<fs/su≥r.h
>

21 
	~<fs/öode.h
>

22 
	~"øwfs.h
"

24 
ªadblock
(
off_t
 
blockno
, *
buf
);

36 
	gƒ_dz⁄es
;

37 
	gƒ_ödúe˘s
;

38 
	göodes_≥r_block
;

39 #ifde‡
FLEX


40 
	~<dúít.h
>

41 
	#dúe˘
 
_v7_dúe˘


	)

43 
	~<sys/dú.h
>

46 
su≥r_block
 
	gsu≥r
;

47 
öode
 
	gcurfû
;

48 
	gödú
[
BLOCK_SIZE
];

49 
	gdödú
[
BLOCK_SIZE
];

50 
	gdúbuf
[
BLOCK_SIZE
];

51 
	#s¸©ch
 
dúbuf


	)

53 
block_t
 
	ga_ödú
, 
	ga_dödú
;

54 
off_t
 
	gdúpos
;

56 
	#fsbuf
(
b
Ë(* (
buf
 *Ë(b))

	)

58 
	#z⁄e_shi·
 (
su≥r
.
s_log_z⁄e_size
Ë

	)

60 
off_t
 
	$r_su≥r
()

66 
	`ªadblock
(
SUPER_BLOCK
, 
s¸©ch
);

68 
	`mem˝y
(&
su≥r
, 
s¸©ch
, (super));

71 i‡(
su≥r
.
s_magic
 =
SUPER_V2
) {

72 
ƒ_dz⁄es

V2_NR_DZONES
;

73 
ƒ_ödúe˘s

V2_INDIRECTS
;

74 
öodes_≥r_block

V2_INODES_PER_BLOCK
;

75  (
off_t
Ë
su≥r
.
s_z⁄es
 << 
z⁄e_shi·
;

77 i‡(
su≥r
.
s_magic
 =
SUPER_MAGIC
) {

78 
ƒ_dz⁄es

V1_NR_DZONES
;

79 
ƒ_ödúe˘s

V1_INDIRECTS
;

80 
öodes_≥r_block

V1_INODES_PER_BLOCK
;

81  (
off_t
Ë
su≥r
.
s_nz⁄es
 << 
z⁄e_shi·
;

86 
	}
}

88 
	$r_°©
(
Ino_t
 
öum
, 
°©
 *
°p
)

91 
block_t
 
block
;

92 
block_t
 
öo_block
;

93 
öo_t
 
öo_off£t
;

96 
block
 = 
SUPER_BLOCK
 + 1 + 
su≥r
.
s_im≠_blocks
 + su≥r.
s_zm≠_blocks
;

99 
öo_block
 = ((
öum
 - 1Ë/ 
öodes_≥r_block
);

100 
öo_off£t
 = ((
öum
 - 1Ë% 
öodes_≥r_block
);

101 
block
 +
öo_block
;

104 
	`ªadblock
(
block
, 
s¸©ch
);

106 i‡(
su≥r
.
s_magic
 =
SUPER_V2
) {

107 
d2_öode
 *
dù
;

108 
i
;

110 
dù
&
	`fsbuf
(
s¸©ch
).
b_v2_öo
[
öo_off£t
];

112 
curfû
.
i_mode

dù
->
d2_mode
;

113 
curfû
.
i_∆öks

dù
->
d2_∆öks
;

114 
curfû
.
i_uid

dù
->
d2_uid
;

115 
curfû
.
i_gid

dù
->
d2_gid
;

116 
curfû
.
i_size

dù
->
d2_size
;

117 
curfû
.
i_©ime

dù
->
d2_©ime
;

118 
curfû
.
i_mtime

dù
->
d2_mtime
;

119 
curfû
.
i_˘ime

dù
->
d2_˘ime
;

120 
i
0; i < 
V2_NR_TZONES
; i++)

121 
curfû
.
i_z⁄e
[
i
]
dù
->
d2_z⁄e
[i];

123 
d1_öode
 *
dù
;

124 
i
;

126 
dù
&
	`fsbuf
(
s¸©ch
).
b_v1_öo
[
öo_off£t
];

128 
curfû
.
i_mode

dù
->
d1_mode
;

129 
curfû
.
i_∆öks

dù
->
d1_∆öks
;

130 
curfû
.
i_uid

dù
->
d1_uid
;

131 
curfû
.
i_gid

dù
->
d1_gid
;

132 
curfû
.
i_size

dù
->
d1_size
;

133 
curfû
.
i_©ime

dù
->
d1_mtime
;

134 
curfû
.
i_mtime

dù
->
d1_mtime
;

135 
curfû
.
i_˘ime

dù
->
d1_mtime
;

136 
i
0; i < 
V1_NR_TZONES
; i++)

137 
curfû
.
i_z⁄e
[
i
]
dù
->
d1_z⁄e
[i];

139 
curfû
.
i_dev
= -1;

140 
curfû
.
i_num

öum
;

142 
°p
->
°_dev

curfû
.
i_dev
;

143 
°p
->
°_öo

curfû
.
i_num
;

144 
°p
->
°_mode

curfû
.
i_mode
;

145 
°p
->
°_∆ök

curfû
.
i_∆öks
;

146 
°p
->
°_uid

curfû
.
i_uid
;

147 
°p
->
°_gid

curfû
.
i_gid
;

148 
°p
->
°_rdev
(
dev_t
Ë
curfû
.
i_z⁄e
[0];

149 
°p
->
°_size

curfû
.
i_size
;

150 
°p
->
°_©ime

curfû
.
i_©ime
;

151 
°p
->
°_mtime

curfû
.
i_mtime
;

152 
°p
->
°_˘ime

curfû
.
i_˘ime
;

154 
a_ödú

a_dödú
= 0;

155 
dúpos
= 0;

156 
	}
}

158 
öo_t
 
	$r_ªaddú
(*
«me
)

161 
öo_t
 
öum
= 0;

162 
blkpos
;

163 
dúe˘
 *
dp
;

165 i‡(!
	`S_ISDIR
(
curfû
.
i_mode
)Ë{ 
î∫o

ENOTDIR
;  -1; }

167 
öum
 =0 && 
dúpos
 < 
curfû
.
i_size
) {

168 i‡((
blkpos
(Ë(
dúpos
 % 
BLOCK_SIZE
)) == 0) {

171 
	`ªadblock
(
	`r_vú2abs
(
dúpos
 / 
BLOCK_SIZE
), 
dúbuf
);

173 #ifde‡
FLEX


174 i‡(
su≥r
.
s_Êags
 & 
S_FLEX
) {

175 
_Ê_dúe˘
 *
dp
;

177 
dp
(
_Ê_dúe˘
 *Ë(
dúbuf
 + 
blkpos
);

178 i‡((
öum

dp
->
d_öo
Ë!0Ë
	`°r˝y
(
«me
, dp->
d_«me
);

180 
dúpos
+(1 + 
dp
->
d_exã¡
Ë* 
FL_DIR_ENTRY_SIZE
;

185 
dp
(
dúe˘
 *Ë(
dúbuf
 + 
blkpos
);

187 i‡((
öum

dp
->
d_öo
) != 0) {

189 
	`°∫˝y
(
«me
, 
dp
->
d_«me
, (dp->d_name));

190 
«me
[(
dp
->
d_«me
)]= 0;

192 
dúpos
+
DIR_ENTRY_SIZE
;

194  
öum
;

195 
	}
}

197 
off_t
 
	$r_vú2abs
(
off_t
 
vúblk
)

202 
block_t
 
b

vúblk
;

203 
z⁄e_t
 
z⁄e
, 
öd_z⁄e
;

204 
block_t
 
z
, 
z⁄e_ödex
;

205 
i
;

208 i‡(
vúblk
 * 
BLOCK_SIZE
 >
curfû
.
i_size
)  -1;

211 
z⁄e
 = (
z⁄e_t
Ë(
b
 >> 
z⁄e_shi·
);

214 
z⁄e_ödex
 = 
b
 - ((
block_t
Ë
z⁄e
 << 
z⁄e_shi·
);

217 i‡(
z⁄e
 < (
z⁄e_t
Ë
ƒ_dz⁄es
) {

218 
z⁄e
 = 
curfû
.
i_z⁄e
[() zone];

219 
z
 = ((
block_t
Ë
z⁄e
 << 
z⁄e_shi·
Ë+ 
z⁄e_ödex
;

220  
z
;

224 
z⁄e
 -(
z⁄e_t
Ë
ƒ_dz⁄es
;

227 i‡(
z⁄e
 < (
z⁄e_t
Ë
ƒ_ödúe˘s
) {

228 
öd_z⁄e
 = 
curfû
.
i_z⁄e
[
ƒ_dz⁄es
];

231 i‡((
öd_z⁄e
 = 
curfû
.
i_z⁄e
[
ƒ_dz⁄es
 + 1]) == 0)  0;

233 
z
 = (
block_t
Ë
öd_z⁄e
 << 
z⁄e_shi·
;

234 i‡(
a_dödú
 !
z
) {

235 
	`ªadblock
(
z
, 
dödú
);

236 
a_dödú

z
;

239 
z⁄e
 -(
z⁄e_t
Ë
ƒ_ödúe˘s
;

241 
i
 = 
z⁄e
 / (
z⁄e_t
Ë
ƒ_ödúe˘s
;

242 
öd_z⁄e
 = 
su≥r
.
s_magic
 =
SUPER_V2


243 ? 
	`fsbuf
(
dödú
).
b_v2_öd
[
i
]

244 : 
	`fsbuf
(
dödú
).
b_v1_öd
[
i
];

245 
z⁄e
 %(
z⁄e_t
Ë
ƒ_ödúe˘s
;

247 i‡(
öd_z⁄e
 == 0)  0;

250 
z
 = (
block_t
Ë
öd_z⁄e
 << 
z⁄e_shi·
;

251 i‡(
a_ödú
 !
z
) {

252 
	`ªadblock
(
z
, 
ödú
);

253 
a_ödú

z
;

255 
z⁄e
 = 
su≥r
.
s_magic
 =
SUPER_V2


256 ? 
	`fsbuf
(
ödú
).
b_v2_öd
[(Ë
z⁄e
]

257 : 
	`fsbuf
(
ödú
).
b_v1_öd
[(Ë
z⁄e
];

260 
z
 = ((
block_t
Ë
z⁄e
 << 
z⁄e_shi·
Ë+ 
z⁄e_ödex
;

261  
z
;

262 
	}
}

264 
öo_t
 
	$r_lookup
(
Ino_t
 
cwd
, *
∑th
)

269 
«me
[
NAME_MAX
+1], 
r_«me
[NAME_MAX+1];

270 *
n
;

271 
°©
 
°
;

272 
öo_t
 
öo
;

274 
öo

∑th
[0] ='/' ? 
ROOT_INO
 : 
cwd
;

277 i‡(
öo
 == 0) {

278 
î∫o

ENOENT
;

282 *
∑th
 == '/')Öath++;

284 i‡(*
∑th
 =0Ë 
öo
;

286 
	`r_°©
(
öo
, &
°
);

288 i‡(!
	`S_ISDIR
(
°
.
°_mode
)) {

289 
î∫o

ENOTDIR
;

293 
n

«me
;

294 *
∑th
 != 0 && *path != '/')

295 i‡(
n
 < 
«me
 + 
NAME_MAX
Ë*n++ = *
∑th
++;

296 *
n
= 0;

298 (
öo

	`r_ªaddú
(
r_«me
)) != 0

299 && 
	`°rcmp
(
«me
, 
r_«me
) != 0) {}

301 
	}
}

	@rawfs.h

33 
	#ROOT_INO
 ((
öo_t
Ë1Ë

	)

35 
off_t
 
r_su≥r
();

36 
r_°©
(
Ino_t
 
fûe
, 
°©
 *
°p
);

37 
off_t
 
r_vú2abs
(off_à
vúblockno
);

38 
öo_t
 
r_ªaddú
(*
«me
);

39 
öo_t
 
r_lookup
(
Ino_t
 
cwd
, *
∑th
);

	@rcmd.c

20 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

21 
	gsccsid
[] = "@(#)rcmd.c 5.22 (Berkeley) 6/1/90";

24 #i‡
_MINIX


25 
	~<sys/ty≥s.h
>

26 
	~<sys/°©.h
>

27 
	~<sys/io˘l.h
>

28 
	~<˘y≥.h
>

29 
	~<î∫o.h
>

30 
	~<f˙é.h
>

31 
	~<limôs.h
>

32 
	~<pwd.h
>

33 
	~<°dio.h
>

34 
	~<°dlib.h
>

35 
	~<sig«l.h
>

36 
	~<°rög.h
>

37 
	~<uni°d.h
>

38 
	~<√t/gí/√tdb.h
>

39 
	~<√t/gí/ö.h
>

40 
	~<√t/gí/t˝.h
>

41 
	~<√t/gí/t˝_io.h
>

42 
	~<√t/ht⁄.h
>

43 
	~<√t/√éib.h
>

45 
	#MAXHOSTNAMELEN
 256

	)

46 
	#MAXPATHLEN
 
PATH_MAX


	)

48 
	~<°dio.h
>

49 
	~<˘y≥.h
>

50 
	~<pwd.h
>

51 
	~<sys/∑øm.h
>

52 
	~<sys/fûe.h
>

53 
	~<sys/sig«l.h
>

54 
	~<sys/sockë.h
>

55 
	~<sys/°©.h
>

57 
	~<√töë/ö.h
>

59 
	~<√tdb.h
>

60 
	~<î∫o.h
>

63 #ifde‡
__STDC__


64 
	#CONST
 c⁄°

	)

66 
	#CONST


	)

69 
î∫o
;

70 #i‡
_MINIX


71 
_vÆidu£r
 
_ARGS
(–
FILE
 *
ho°f
, c⁄° *
rho°
, c⁄° *
lu£r
,

72 c⁄° *
ru£r
, 
ba£Àn
 ));

73 
_checkho°
 
_ARGS
(–c⁄° *
rho°
, c⁄° *
lho°
, 
Àn
 ));

75 *
ödex
();

78 #i‡
_MINIX


79 
	$rcmd
(
aho°
, 
Ω‹t
, 
locu£r
, 
ªmu£r
, 
cmd
, 
fd2p
)

80 **
aho°
;

81 
Ω‹t
;

82 
CONST
 *
locu£r
, *
ªmu£r
, *
cmd
;

83 *
fd2p
;

85 
fd
, 
fd2
, 
ªsu…
;

86 
ho°ít
 *
hp
;

87 
t˝p‹t_t
 
Õ‹t
;

88 
nwio_t˝c⁄f_t
 
t˝c⁄f
;

89 
nwio_t˝˛_t
 
t˝c⁄n›t
;

90 
pid_t
 
pid
;

91 
num
[8];

92 
c
;

93 *
t˝_devi˚
;

95 
fd
= -1;

96 
fd2
= -1;

98 
t˝_devi˚

	`gëív
("TCP_DEVICE");

99 i‡(
t˝_devi˚
 =
NULL
)

100 
t˝_devi˚

TCP_DEVICE
;

101 
hp

	`gëho°by«me
(*
aho°
);

102 i‡(!
hp
)

104 
	`Ârötf
(
°dîr
, "%s: unknow¿ho°\n", *
aho°
);

107 *
aho°

hp
->
h_«me
;

108 
Õ‹t

TCPPORT_RESERVED
-1;Üport >= TCPPORT_RESERVED/2;Üport--)

110 
fd

	`›í
 (
t˝_devi˚
, 
O_RDWR
);

111 i‡(
fd
<0)

113 
	`Ârötf
(
°dîr
, "unableÅo open %s: %s\n",

114 
t˝_devi˚
, 
	`°ªº‹
(
î∫o
));

115 
bad
;

117 
t˝c⁄f
.
nwtc_Êags

NWTC_LP_SET
 | 
NWTC_SET_RA
 | 
NWTC_SET_RP
 |

118 
NWTC_EXCL
;

119 
t˝c⁄f
.
nwtc_lo˝‹t

	`ht⁄s
(
Õ‹t
);

120 
t˝c⁄f
.
nwtc_ªmp‹t

Ω‹t
;

121 
t˝c⁄f
.
nwtc_ªmaddr
*(
ùaddr_t
 *)
hp
->
h_addr
;

123 
ªsu…

	`io˘l
(
fd
, 
NWIOSTCPCONF
, &
t˝c⁄f
);

124 i‡(
ªsu…
<0)

126 i‡(
î∫o
 =
EADDRINUSE
)

128 
	`˛o£
(
fd
);

131 
	`Ârötf
(
°dîr
, "unableÅo ioctl(NWIOSTCPCONF): %s\n",

132 
	`°ªº‹
(
î∫o
));

133 
bad
;

135 
t˝c⁄f
.
nwtc_Êags

NWTC_SHARED
;

136 
ªsu…

	`io˘l
(
fd
, 
NWIOSTCPCONF
, &
t˝c⁄f
);

137 i‡(
ªsu…
<0)

139 
	`Ârötf
(
°dîr
, "unableÅo ioctl(NWIOSTCPCONF): %s\n",

140 
	`°ªº‹
(
î∫o
));

141 
bad
;

143 
t˝c⁄n›t
.
nwt˛_Êags
= 0;

147 
ªsu…

	`io˘l
 (
fd
, 
NWIOTCPCONN
, &
t˝c⁄n›t
);

148 i‡(
ªsu…
<0 && 
î∫o
 =
EAGAIN
)

150 
	`¶ìp
(2);

152 } 
ªsu…
<0 && 
î∫o
 =
EAGAIN
);

153 i‡(
ªsu…
<0 && 
î∫o
 !
EADDRINUSE
)

155 
	`Ârötf
(
°dîr
,

157 
	`°ªº‹
(
î∫o
));

158 
bad
;

160 i‡(
ªsu…
>=0)

163 i‡(
Õ‹t
<
TCPPORT_RESERVED
/2)

165 
	`Ârötf
(
°dîr
, "can't getÖort\n");

168 i‡(!
fd2p
)

170 i‡(
	`wrôe
(
fd
, "", 1) != 1)

172 
	`Ârötf
(
°dîr
, "u«bÀÅÿwrôe: %s", 
	`°ªº‹
(
î∫o
));

173 
bad
;

178 
fd2

	`›í
 (
t˝_devi˚
, 
O_RDWR
);

179 i‡(
fd2
<0)

181 
	`Ârötf
(
°dîr
, "unableÅo open %s: %s\n",

182 
t˝_devi˚
, 
	`°ªº‹
(
î∫o
));

183 
bad
;

185 
t˝c⁄f
.
nwtc_Êags

NWTC_LP_SET
 | 
NWTC_UNSET_RA
 |

186 
NWTC_UNSET_RP
 | 
NWTC_SHARED
;

187 
t˝c⁄f
.
nwtc_lo˝‹t

	`ht⁄s
(
Õ‹t
);

189 
ªsu…

	`io˘l
(
fd2
, 
NWIOSTCPCONF
, &
t˝c⁄f
);

190 i‡(
ªsu…
<0)

192 
	`Ârötf
(
°dîr
,

194 
	`°ªº‹
(
î∫o
));

195 
bad
;

197 
pid

	`f‹k
();

198 i‡(
pid
<0)

200 
	`Ârötf
(
°dîr
, "unableÅo fork: %s\n",

201 
	`°ªº‹
(
î∫o
));

202 
bad
;

204 i‡(!
pid
)

206 
	`Æ¨m
(0);

207 
	`sig«l
(
SIGALRM
, 
SIG_DFL
);

208 
	`Æ¨m
(30);

209 
t˝c⁄n›t
.
nwt˛_Êags
= 0;

213 
ªsu…

	`io˘l
 (
fd2
, 
NWIOTCPLISTEN
,

214 &
t˝c⁄n›t
);

215 i‡(
ªsu…
<0 && 
î∫o
 =
EAGAIN
)

217 
	`¶ìp
(2);

219 } 
ªsu…
<0 && 
î∫o
 =
EAGAIN
);

220 i‡(
ªsu…
<0 && 
î∫o
 !
EADDRINUSE
)

222 
	`Ârötf
(
°dîr
,

224 
	`°ªº‹
(
î∫o
));

225 
	`exô
(1);

227 i‡(
ªsu…
>=0)

228 
	`exô
(0);

230 
	`exô
(1);

241 
	`¶ìp
(1);

243 
	`•rötf
(
num
, "%d", 
Õ‹t
);

244 i‡(
	`wrôe
(
fd
, 
num
, 
	`°æí
(num)+1) != strlen(num)+1)

246 
	`Ârötf
(
°dîr
, "unableÅo write: %s\n",

247 
	`°ªº‹
(
î∫o
));

248 
bad
;

252 
	`wrôe
 (
fd
, 
locu£r
, 
	`°æí
(locuser)+1);

253 
	`wrôe
 (
fd
, 
ªmu£r
, 
	`°æí
(remuser)+1);

254 
	`wrôe
 (
fd
, 
cmd
, 
	`°æí
(cmd)+1);

255 i‡(
	`ªad
(
fd
, &
c
, 1) != 1)

257 
	`Ârötf
(
°dîr
, "u«bÀÅÿªad: %s\n", 
	`°ªº‹
(
î∫o
) );

258 
bad
;

260 i‡(
c
 != 0)

262 
	`ªad
(
fd
, &
c
, 1) == 1)

264 
	`wrôe
(2, &
c
, 1);

265 i‡(
c
 == '\n')

268 
bad
;

270 i‡(
fd2p
)

272 *
fd2p

fd2
;

273 
ªsu…

	`io˘l
(
fd2
, 
NWIOGTCPCONF
, &
t˝c⁄f
);

274 i‡(
ªsu…
<0)

276 
	`Ârötf
(
°dîr
, "unableÅo ioctl(NWIOGTCPCONF): %s\n",

277 
	`°ªº‹
(
î∫o
) );

278 
bad
;

280 i‡(
	`¡ohs
(
t˝c⁄f
.
nwtc_ªmp‹t
Ë>
TCPPORT_RESERVED
)

282 
	`Ârötf
(
°dîr
, "unableÅo setup 2nd channel\n");

283 
bad
;

286  
fd
;

288 
bad
:

289 i‡(
fd
>=0)

290 
	`˛o£
(
fd
);

291 i‡(
fd2
>=0)

292 
	`˛o£
(
fd2
);

294 
	}
}

296 
	$rcmd
(
aho°
, 
Ω‹t
, 
locu£r
, 
ªmu£r
, 
cmd
, 
fd2p
)

297 **
aho°
;

298 
u_sh‹t
 
Ω‹t
;

299 *
locu£r
, *
ªmu£r
, *
cmd
;

300 *
fd2p
;

302 
s
, 
timo
 = 1, 
pid
;

303 
ﬁdmask
;

304 
sockaddr_ö
 
sö
, 
sö2
, 
‰om
;

305 
c
;

306 
Õ‹t
 = 
IPPORT_RESERVED
 - 1;

307 
ho°ít
 *
hp
;

308 
fd_£t
 
ªads
;

310 
pid
 = 
	`gëpid
();

311 
hp
 = 
	`gëho°by«me
(*
aho°
);

312 i‡(
hp
 == 0) {

313 
	`hîr‹
(*
aho°
);

316 *
aho°
 = 
hp
->
h_«me
;

317 
ﬁdmask
 = 
	`sigblock
(
	`sigmask
(
SIGURG
));

319 
s
 = 
	`ºesvp‹t
(&
Õ‹t
);

320 i‡(
s
 < 0) {

321 i‡(
î∫o
 =
EAGAIN
)

322 
	`Ârötf
(
°dîr
, "socket: AllÖorts in use\n");

324 
	`≥º‹
("rcmd: socket");

325 
	`sig£tmask
(
ﬁdmask
);

328 
	`f˙é
(
s
, 
F_SETOWN
, 
pid
);

329 
sö
.
sö_Ámûy
 = 
hp
->
h_addπy≥
;

330 
	`bc›y
(
hp
->
h_addr_li°
[0], (
ˇddr_t
)&
sö
.
sö_addr
, hp->
h_Àngth
);

331 
sö
.
sö_p‹t
 = 
Ω‹t
;

332 i‡(
	`c⁄√˘
(
s
, (
ˇddr_t
)&
sö
,  (sin), 0) >= 0)

334 (Ë
	`˛o£
(
s
);

335 i‡(
î∫o
 =
EADDRINUSE
) {

336 
Õ‹t
--;

339 i‡(
î∫o
 =
ECONNREFUSED
 && 
timo
 <= 16) {

340 
	`¶ìp
(
timo
);

341 
timo
 *= 2;

344 i‡(
hp
->
h_addr_li°
[1] !
NULL
) {

345 
€ºno
 = 
î∫o
;

347 
	`Ârötf
(
°dîr
,

348 "c⁄√˘Åÿaddªs†%s: ", 
	`öë_¡ﬂ
(
sö
.
sö_addr
));

349 
î∫o
 = 
€ºno
;

350 
	`≥º‹
(0);

351 
hp
->
h_addr_li°
++;

352 
	`bc›y
(
hp
->
h_addr_li°
[0], (
ˇddr_t
)&
sö
.
sö_addr
,

353 
hp
->
h_Àngth
);

354 
	`Ârötf
(
°dîr
, "Trying %s...\n",

355 
	`öë_¡ﬂ
(
sö
.
sö_addr
));

358 
	`≥º‹
(
hp
->
h_«me
);

359 
	`sig£tmask
(
ﬁdmask
);

362 
Õ‹t
--;

363 i‡(
fd2p
 == 0) {

364 
	`wrôe
(
s
, "", 1);

365 
Õ‹t
 = 0;

367 
num
[8];

368 
s2
 = 
	`ºesvp‹t
(&
Õ‹t
), 
s3
;

369 
Àn
 =  (
‰om
);

371 i‡(
s2
 < 0)

372 
bad
;

373 
	`li°í
(
s2
, 1);

374 (Ë
	`•rötf
(
num
, "%d", 
Õ‹t
);

375 i‡(
	`wrôe
(
s
, 
num
, 
	`°æí
(num)+1) != strlen(num)+1) {

376 
	`≥º‹
("write: setting up stderr");

377 (Ë
	`˛o£
(
s2
);

378 
bad
;

380 
	`FD_ZERO
(&
ªads
);

381 
	`FD_SET
(
s
, &
ªads
);

382 
	`FD_SET
(
s2
, &
ªads
);

383 
î∫o
 = 0;

384 i‡(
	`£À˘
(32, &
ªads
, 0, 0, 0) < 1 ||

385 !
	`FD_ISSET
(
s2
, &
ªads
)) {

386 i‡(
î∫o
 != 0)

387 
	`≥º‹
("select: setting up stderr");

389 
	`Ârötf
(
°dîr
,

391 (Ë
	`˛o£
(
s2
);

392 
bad
;

394 
s3
 = 
	`ac˚±
(
s2
, &
‰om
, &
Àn
, 0);

395 (Ë
	`˛o£
(
s2
);

396 i‡(
s3
 < 0) {

397 
	`≥º‹
("accept");

398 
Õ‹t
 = 0;

399 
bad
;

401 *
fd2p
 = 
s3
;

402 
‰om
.
sö_p‹t
 = 
	`¡ohs
((
u_sh‹t
)from.sin_port);

403 i‡(
‰om
.
sö_Ámûy
 !
AF_INET
 ||

404 
‰om
.
sö_p‹t
 >
IPPORT_RESERVED
 ||

405 
‰om
.
sö_p‹t
 < 
IPPORT_RESERVED
 / 2) {

406 
	`Ârötf
(
°dîr
,

408 
bad2
;

411 (Ë
	`wrôe
(
s
, 
locu£r
, 
	`°æí
(locuser)+1);

412 (Ë
	`wrôe
(
s
, 
ªmu£r
, 
	`°æí
(remuser)+1);

413 (Ë
	`wrôe
(
s
, 
cmd
, 
	`°æí
(cmd)+1);

414 i‡(
	`ªad
(
s
, &
c
, 1) != 1) {

415 
	`≥º‹
(*
aho°
);

416 
bad2
;

418 i‡(
c
 != 0) {

419 
	`ªad
(
s
, &
c
, 1) == 1) {

420 (Ë
	`wrôe
(2, &
c
, 1);

421 i‡(
c
 == '\n')

424 
bad2
;

426 
	`sig£tmask
(
ﬁdmask
);

427  (
s
);

428 
bad2
:

429 i‡(
Õ‹t
)

430 (Ë
	`˛o£
(*
fd2p
);

431 
bad
:

432 (Ë
	`˛o£
(
s
);

433 
	`sig£tmask
(
ﬁdmask
);

435 
	}
}

437 
	$ºesvp‹t
(
Æp‹t
)

438 *
Æp‹t
;

440 
sockaddr_ö
 
sö
;

441 
s
;

443 
sö
.
sö_Ámûy
 = 
AF_INET
;

444 
sö
.
sö_addr
.
s_addr
 = 
INADDR_ANY
;

445 
s
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

446 i‡(
s
 < 0)

449 
sö
.
sö_p‹t
 = 
	`ht⁄s
((
u_sh‹t
)*
Æp‹t
);

450 i‡(
	`böd
(
s
, (
ˇddr_t
)&
sö
,  (sin)) >= 0)

451  (
s
);

452 i‡(
î∫o
 !
EADDRINUSE
) {

453 (Ë
	`˛o£
(
s
);

456 (*
Æp‹t
)--;

457 i‡(*
Æp‹t
 =
IPPORT_RESERVED
/2) {

458 (Ë
	`˛o£
(
s
);

459 
î∫o
 = 
EAGAIN
;

463 
	}
}

466 
	g_check_rho°s_fûe
 = 1;

468 
	$ru£rok
(
rho°
, 
su≥ru£r
, 
ru£r
, 
lu£r
)

469 
CONST
 *
rho°
;

470 
su≥ru£r
;

471 
CONST
 *
ru£r
, *
lu£r
;

473 
FILE
 *
ho°f
;

474 
fho°
[
MAXHOSTNAMELEN
];

475 
fú°
 = 1;

476 
CONST
 *
•
;

477 *
p
;

478 
ba£Àn
 = -1;

480 
•
 = 
rho°
;

481 
p
 = 
fho°
;

482 *
•
) {

483 i‡(*
•
 == '.') {

484 i‡(
ba£Àn
 == -1)

485 
ba£Àn
 = 
•
 - 
rho°
;

486 *
p
++ = *
•
++;

488 *
p
++ = 
	`isuµî
(*
•
Ë? 
	`tﬁowî
(*sp++) : *sp++;

491 *
p
 = '\0';

492 
ho°f
 = 
su≥ru£r
 ? (
FILE
 *)0 : 
	`f›í
(
_PATH_HEQUIV
, "r");

493 
agaö
:

494 i‡(
ho°f
) {

495 i‡(!
	`_vÆidu£r
(
ho°f
, 
fho°
, 
lu£r
, 
ru£r
, 
ba£Àn
)) {

496 (Ë
	`f˛o£
(
ho°f
);

499 (Ë
	`f˛o£
(
ho°f
);

501 i‡(
fú°
 =1 && (
_check_rho°s_fûe
 || 
su≥ru£r
)) {

502 
°©
 
sbuf
;

503 
∑sswd
 *
pwd
;

504 
pbuf
[
MAXPATHLEN
];

506 
fú°
 = 0;

507 i‡((
pwd
 = 
	`gëpw«m
(
lu£r
)Ë=
NULL
)

509 ()
	`°r˝y
(
pbuf
, 
pwd
->
pw_dú
);

510 ()
	`°rˇt
(
pbuf
, "/.rhosts");

511 i‡((
ho°f
 = 
	`f›í
(
pbuf
, "r")Ë=
NULL
)

517 i‡(
	`f°©
(
	`fûío
(
ho°f
), &
sbuf
) ||

518 
sbuf
.
°_uid
 && sbuf.°_uid !
pwd
->
pw_uid
 ||

519 
sbuf
.
°_mode
&022) {

520 
	`f˛o£
(
ho°f
);

523 
agaö
;

526 
	}
}

529 
	$_vÆidu£r
(
ho°f
, 
rho°
, 
lu£r
, 
ru£r
, 
ba£Àn
)

530 
FILE
 *
ho°f
;

531 
CONST
 *
rho°
, *
lu£r
, *
ru£r
;

532 
ba£Àn
;

534 *
u£r
;

535 
aho°
[
MAXHOSTNAMELEN
];

536 *
p
;

538 
	`fgës
(
aho°
,  (aho°), 
ho°f
)) {

539 
p
 = 
aho°
;

540 *
p
 != '\n' && *p != ' ' && *p != '\t' && *p != '\0') {

541 *
p
 = 
	`isuµî
(*pË? 
	`tﬁowî
(*p) : *p;

542 
p
++;

544 i‡(*
p
 == ' ' || *p == '\t') {

545 *
p
++ = '\0';

546 *
p
 == ' ' || *p == '\t')

547 
p
++;

548 
u£r
 = 
p
;

549 *
p
 != '\n' && *p != ' ' && *p != '\t' && *p != '\0')

550 
p
++;

552 
u£r
 = 
p
;

553 *
p
 = '\0';

554 i‡(
	`_checkho°
(
rho°
, 
aho°
, 
ba£Àn
) &&

555 !
	`°rcmp
(
ru£r
, *
u£r
 ? u£∏: 
lu£r
)) {

560 
	}
}

563 
	$_checkho°
(
rho°
, 
lho°
, 
Àn
)

564 
CONST
 *
rho°
, *
lho°
;

565 
Àn
;

567 
ldomaö
[
MAXHOSTNAMELEN
 + 1];

568 *
domaöp
 = 
NULL
;

569 
nodomaö
 = 0;

570 *
˝
;

572 i‡(
Àn
 == -1)

573 (!
	`°rcmp
(
rho°
, 
lho°
));

574 i‡(
	`°∫cmp
(
rho°
, 
lho°
, 
Àn
))

576 i‡(!
	`°rcmp
(
rho°
, 
lho°
))

578 i‡(*(
lho°
 + 
Àn
) != '\0')

580 i‡(
nodomaö
)

582 i‡(!
domaöp
) {

583 i‡(
	`gëho°«me
(
ldomaö
, (ldomain)) == -1) {

584 
nodomaö
 = 1;

587 
ldomaö
[
MAXHOSTNAMELEN
] = 0;

588 i‡((
domaöp
 = 
	`ödex
(
ldomaö
, '.')Ë=(*)
NULL
) {

589 
nodomaö
 = 1;

592 
˝
 = ++
domaöp
; *cp; ++cp)

593 i‡(
	`isuµî
(*
˝
))

594 *
˝
 = 
	`tﬁowî
(*cp);

596 (!
	`°rcmp
(
domaöp
, 
rho°
 + 
Àn
 +1));

597 
	}
}

	@read.c

14 
	~"fs.h
"

15 
	~<f˙é.h
>

16 
	~<möix/com.h
>

17 
	~"buf.h
"

18 
	~"fûe.h
"

19 
	~"Âroc.h
"

20 
	~"öode.h
"

21 
	~"∑øm.h
"

22 
	~"su≥r.h
"

24 
	#FD_MASK
 077

	)

26 
PRIVATE
 
mesßge
 
	gumess
;

28 
FORWARD
 
_PROTOTYPE
–
rw_chunk
, (
öode
 *
rù
, 
off_t
 
posôi⁄
,

29 
off
, 
chunk
, 
À·
, 
rw_Êag
,

30 *
buff
, 
£g
, 
u§
) );

35 
PUBLIC
 
	$do_ªad
()

37 (
	`ªad_wrôe
(
READING
));

38 
	}
}

44 
PUBLIC
 
	$ªad_wrôe
(
rw_Êag
)

45 
rw_Êag
;

49 
öode
 *
rù
;

50 
fûp
 *
f
;

51 
off_t
 
byãs_À·
, 
f_size
, 
posôi⁄
;

52 
off
, 
cum_io
;

53 
›
, 
oÊags
, 
r
, 
chunk
, 
u§
, 
£g
, 
block_•ec
, 
ch¨_•ec
;

54 
ªguœr
, 
∑πül_pùe
 = 0, 
∑πül_˙t
 = 0;

55 
dev_t
 
dev
;

56 
mode_t
 
mode_w‹d
;

57 
fûp
 *
wf
;

60 i‡(
who
 =
MM_PROC_NR
 && (
fd
 & (~
BYTE
)) ) {

61 
u§
 = (
fd
 >> 8Ë& 
BYTE
;

62 
£g
 = (
fd
 >> 6) & 03;

63 
fd
 &
FD_MASK
;

65 
u§
 = 
who
;

66 
£g
 = 
D
;

70 i‡(
nbyãs
 < 0Ë(
EINVAL
);

71 i‡((
f
 = 
	`gë_fûp
(
fd
)Ë=
NIL_FILP
Ë(
îr_code
);

72 i‡(((
f
->
fûp_mode
Ë& (
rw_Êag
 =
READING
 ? 
R_BIT
 : 
W_BIT
)) == 0) {

73 (
f
->
fûp_mode
 =
FILP_CLOSED
 ? 
EIO
 : 
EBADF
);

75 i‡(
nbyãs
 == 0) (0);

76 
posôi⁄
 = 
f
->
fûp_pos
;

77 i‡(
posôi⁄
 > 
MAX_FILE_POS
Ë(
EINVAL
);

78 i‡(
posôi⁄
 + 
nbyãs
 <Öosôi⁄Ë(
EINVAL
);

79 
oÊags
 = 
f
->
fûp_Êags
;

80 
rù
 = 
f
->
fûp_öo
;

81 
f_size
 = 
rù
->
i_size
;

82 
r
 = 
OK
;

83 i‡(
rù
->
i_pùe
 =
I_PIPE
) {

85 
cum_io
 = 
Â
->
Â_cum_io_∑πül
;

87 
cum_io
 = 0;

89 
›
 = (
rw_Êag
 =
READING
 ? 
DEV_READ
 : 
DEV_WRITE
);

90 
mode_w‹d
 = 
rù
->
i_mode
 & 
I_TYPE
;

91 
ªguœr
 = 
mode_w‹d
 =
I_REGULAR
 || mode_w‹d =
I_NAMED_PIPE
;

93 
ch¨_•ec
 = (
mode_w‹d
 =
I_CHAR_SPECIAL
 ? 1 : 0);

94 
block_•ec
 = (
mode_w‹d
 =
I_BLOCK_SPECIAL
 ? 1 : 0);

95 i‡(
block_•ec
Ë
f_size
 = 
LONG_MAX
;

96 
rdwt_îr
 = 
OK
;

99 i‡(
ch¨_•ec
) {

100 
dev
 = (
dev_t
Ë
rù
->
i_z⁄e
[0];

101 
r
 = 
	`dev_io
(
›
, 
oÊags
 & 
O_NONBLOCK
, 
dev
, 
posôi⁄
, 
nbyãs
, 
who
,
buf„r
);

102 i‡(
r
 >= 0) {

103 
cum_io
 = 
r
;

104 
posôi⁄
 +
r
;

105 
r
 = 
OK
;

108 i‡(
rw_Êag
 =
WRITING
 && 
block_•ec
 == 0) {

110 i‡(
posôi⁄
 > 
rù
->
i_•
->
s_max_size
 - 
nbyãs
Ë(
EFBIG
);

113 i‡(
oÊags
 & 
O_APPEND
Ë
posôi⁄
 = 
f_size
;

119 i‡(
posôi⁄
 > 
f_size
Ë
	`˛ór_z⁄e
(
rù
, f_size, 0);

123 i‡(
rù
->
i_pùe
 =
I_PIPE
) {

124 
r
 = 
	`pùe_check
(
rù
,
rw_Êag
,
oÊags
,
nbyãs
,
posôi⁄
,&
∑πül_˙t
);

125 i‡(
r
 <= 0) (r);

128 i‡(
∑πül_˙t
 > 0Ë
∑πül_pùe
 = 1;

131 
nbyãs
 != 0) {

132 
off
 = (Ë(
posôi⁄
 % 
BLOCK_SIZE
);

133 i‡(
∑πül_pùe
) {

134 
chunk
 = 
	`MIN
(
∑πül_˙t
, 
BLOCK_SIZE
 - 
off
);

136 
chunk
 = 
	`MIN
(
nbyãs
, 
BLOCK_SIZE
 - 
off
);

137 i‡(
chunk
 < 0Ëchunk = 
BLOCK_SIZE
 - 
off
;

139 i‡(
rw_Êag
 =
READING
) {

140 
byãs_À·
 = 
f_size
 - 
posôi⁄
;

141 i‡(
posôi⁄
 >
f_size
) ;

142 i‡(
chunk
 > 
byãs_À·
) chunk = () bytes_left;

146 
r
 = 
	`rw_chunk
(
rù
, 
posôi⁄
, 
off
, 
chunk
, (Ë
nbyãs
,

147 
rw_Êag
, 
buf„r
, 
£g
, 
u§
);

148 i‡(
r
 !
OK
) ;

149 i‡(
rdwt_îr
 < 0) ;

152 
buf„r
 +
chunk
;

153 
nbyãs
 -
chunk
;

154 
cum_io
 +
chunk
;

155 
posôi⁄
 +
chunk
;

157 i‡(
∑πül_pùe
) {

158 
∑πül_˙t
 -
chunk
;

159 i‡(
∑πül_˙t
 <= 0) ;

165 i‡(
rw_Êag
 =
WRITING
) {

166 i‡(
ªguœr
 || 
mode_w‹d
 =
I_DIRECTORY
) {

167 i‡(
posôi⁄
 > 
f_size
Ë
rù
->
i_size
 =Öosition;

170 i‡(
rù
->
i_pùe
 =
I_PIPE
 && 
posôi⁄
 >rù->
i_size
) {

172 
rù
->
i_size
 = 0;

173 
posôi⁄
 = 0;

174 i‡–(
wf
 = 
	`föd_fûp
(
rù
, 
W_BIT
)Ë!
NIL_FILP
Ëwf->
fûp_pos
 =0;

177 
f
->
fûp_pos
 = 
posôi⁄
;

180 i‡(
rw_Êag
 =
READING
 && 
rù
->
i_£ek
 =
NO_SEEK
 && 
posôi⁄
 % 
BLOCK_SIZE
== 0

181 && (
ªguœr
 || 
mode_w‹d
 =
I_DIRECTORY
)) {

182 
rdahed_öode
 = 
rù
;

183 
rdahedpos
 = 
posôi⁄
;

185 
rù
->
i_£ek
 = 
NO_SEEK
;

187 i‡(
rdwt_îr
 !
OK
Ë
r
 =Ñdwt_err;

188 i‡(
rdwt_îr
 =
END_OF_FILE
Ë
r
 = 
OK
;

189 i‡(
r
 =
OK
) {

190 i‡(
rw_Êag
 =
READING
Ë
rù
->
i_upd©e
 |
ATIME
;

191 i‡(
rw_Êag
 =
WRITING
Ë
rù
->
i_upd©e
 |
CTIME
 | 
MTIME
;

192 
rù
->
i_dút
 = 
DIRTY
;

193 i‡(
∑πül_pùe
) {

194 
∑πül_pùe
 = 0;

197 i‡(!(
oÊags
 & 
O_NONBLOCK
)) {

198 
Â
->
Â_cum_io_∑πül
 = 
cum_io
;

199 
	`su•íd
(
XPIPE
);

203 
Â
->
Â_cum_io_∑πül
 = 0;

204 (
cum_io
);

206 (
r
);

208 
	}
}

214 
PRIVATE
 
	$rw_chunk
(
rù
, 
posôi⁄
, 
off
, 
chunk
, 
À·
, 
rw_Êag
, 
buff
, 
£g
, 
u§
)

215 
öode
 *
rù
;

216 
off_t
 
posôi⁄
;

217 
off
;

218 
chunk
;

219 
À·
;

220 
rw_Êag
;

221 *
buff
;

222 
£g
;

223 
u§
;

227 
buf
 *
bp
;

228 
r
;

229 
n
, 
block_•ec
;

230 
block_t
 
b
;

231 
dev_t
 
dev
;

233 
block_•ec
 = (
rù
->
i_mode
 & 
I_TYPE
Ë=
I_BLOCK_SPECIAL
;

234 i‡(
block_•ec
) {

235 
b
 = 
posôi⁄
/
BLOCK_SIZE
;

236 
dev
 = (
dev_t
Ë
rù
->
i_z⁄e
[0];

238 
b
 = 
	`ªad_m≠
(
rù
, 
posôi⁄
);

239 
dev
 = 
rù
->
i_dev
;

242 i‡(!
block_•ec
 && 
b
 =
NO_BLOCK
) {

243 i‡(
rw_Êag
 =
READING
) {

245 
bp
 = 
	`gë_block
(
NO_DEV
, 
NO_BLOCK
, 
NORMAL
);

246 
	`zîo_block
(
bp
);

249 i‡((
bp

	`√w_block
(
rù
, 
posôi⁄
)Ë=
NIL_BUF
)(
îr_code
);

251 } i‡(
rw_Êag
 =
READING
) {

253 
bp
 = 
	`øhód
(
rù
, 
b
, 
posôi⁄
, 
À·
);

259 
n
 = (
chunk
 =
BLOCK_SIZE
 ? 
NO_READ
 : 
NORMAL
);

260 i‡(!
block_•ec
 && 
off
 =0 && 
posôi⁄
 >
rù
->
i_size
Ë
n
 = 
NO_READ
;

261 
bp
 = 
	`gë_block
(
dev
, 
b
, 
n
);

265 i‡(
rw_Êag
 =
WRITING
 && 
chunk
 !
BLOCK_SIZE
 && !
block_•ec
 &&

266 
posôi⁄
 >
rù
->
i_size
 && 
off
 == 0) {

267 
	`zîo_block
(
bp
);

269 i‡(
rw_Êag
 =
READING
) {

271 
r
 = 
	`sys_c›y
(
FS_PROC_NR
, 
D
, (
phys_byãs
Ë(
bp
->
b_d©a
+
off
),

272 
u§
, 
£g
, (
phys_byãs
Ë
buff
,

273 (
phys_byãs
Ë
chunk
);

276 
r
 = 
	`sys_c›y
(
u§
, 
£g
, (
phys_byãs
Ë
buff
,

277 
FS_PROC_NR
, 
D
, (
phys_byãs
Ë(
bp
->
b_d©a
+
off
),

278 (
phys_byãs
Ë
chunk
);

279 
bp
->
b_dút
 = 
DIRTY
;

281 
n
 = (
off
 + 
chunk
 =
BLOCK_SIZE
 ? 
FULL_DATA_BLOCK
 : 
PARTIAL_DATA_BLOCK
);

282 
	`put_block
(
bp
, 
n
);

283 (
r
);

284 
	}
}

290 
PUBLIC
 
block_t
 
	$ªad_m≠
(
rù
, 
posôi⁄
)

291 
öode
 *
rù
;

292 
off_t
 
posôi⁄
;

298 
buf
 *
bp
;

299 
z⁄e_t
 
z
;

300 
sˇÀ
, 
boff
, 
dz⁄es
, 
ƒ_ödúe˘s
, 
ödex
, 
zöd
, 
ex
;

301 
block_t
 
b
;

302 
ex˚ss
, 
z⁄e
, 
block_pos
;

304 
sˇÀ
 = 
rù
->
i_•
->
s_log_z⁄e_size
;

305 
block_pos
 = 
posôi⁄
/
BLOCK_SIZE
;

306 
z⁄e
 = 
block_pos
 >> 
sˇÀ
;

307 
boff
 = (Ë(
block_pos
 - (
z⁄e
 << 
sˇÀ
) );

308 
dz⁄es
 = 
rù
->
i_ndz⁄es
;

309 
ƒ_ödúe˘s
 = 
rù
->
i_nödús
;

312 i‡(
z⁄e
 < 
dz⁄es
) {

313 
zöd
 = (Ë
z⁄e
;

314 
z
 = 
rù
->
i_z⁄e
[
zöd
];

315 i‡(
z
 =
NO_ZONE
Ë(
NO_BLOCK
);

316 
b
 = ((
block_t
Ë
z
 << 
sˇÀ
Ë+ 
boff
;

317 (
b
);

321 
ex˚ss
 = 
z⁄e
 - 
dz⁄es
;

323 i‡(
ex˚ss
 < 
ƒ_ödúe˘s
) {

325 
z
 = 
rù
->
i_z⁄e
[
dz⁄es
];

328 i‡–(
z
 = 
rù
->
i_z⁄e
[
dz⁄es
+1]Ë=
NO_ZONE
Ë(
NO_BLOCK
);

329 
ex˚ss
 -
ƒ_ödúe˘s
;

330 
b
 = (
block_t
Ë
z
 << 
sˇÀ
;

331 
bp
 = 
	`gë_block
(
rù
->
i_dev
, 
b
, 
NORMAL
);

332 
ödex
 = (Ë(
ex˚ss
/
ƒ_ödúe˘s
);

333 
z
 = 
	`rd_ödú
(
bp
, 
ödex
);

334 
	`put_block
(
bp
, 
INDIRECT_BLOCK
);

335 
ex˚ss
 =Éx˚s†% 
ƒ_ödúe˘s
;

339 i‡(
z
 =
NO_ZONE
Ë(
NO_BLOCK
);

340 
b
 = (
block_t
Ë
z
 << 
sˇÀ
;

341 
bp
 = 
	`gë_block
(
rù
->
i_dev
, 
b
, 
NORMAL
);

342 
ex
 = (Ë
ex˚ss
;

343 
z
 = 
	`rd_ödú
(
bp
, 
ex
);

344 
	`put_block
(
bp
, 
INDIRECT_BLOCK
);

345 i‡(
z
 =
NO_ZONE
Ë(
NO_BLOCK
);

346 
b
 = ((
block_t
Ë
z
 << 
sˇÀ
Ë+ 
boff
;

347 (
b
);

348 
	}
}

354 
PUBLIC
 
z⁄e_t
 
	$rd_ödú
(
bp
, 
ödex
)

355 
buf
 *
bp
;

356 
ödex
;

363 
su≥r_block
 *
•
;

364 
z⁄e_t
 
z⁄e
;

366 
•
 = 
	`gë_su≥r
(
bp
->
b_dev
);

369 i‡(
•
->
s_vîsi⁄
 =
V1
)

370 
z⁄e
 = (
z⁄e_t
Ë
	`c⁄v2
(
•
->
s_«tive
, (Ë
bp
->
b_v1_öd
[
ödex
]);

372 
z⁄e
 = (
z⁄e_t
Ë
	`c⁄v4
(
•
->
s_«tive
, (Ë
bp
->
b_v2_öd
[
ödex
]);

374 i‡(
z⁄e
 !
NO_ZONE
 &&

375 (
z⁄e
 < (
z⁄e_t
Ë
•
->
s_fú°d©az⁄e
 || z⁄ê>•->
s_z⁄es
)) {

376 
	`¥ötf
("Illegal zoneÇumber %ld in indirect block, index %d\n",

377 (Ë
z⁄e
, 
ödex
);

378 
	`∑nic
("check fûêsy°em", 
NO_NUM
);

380 (
z⁄e
);

381 
	}
}

387 
PUBLIC
 
	$ªad_ahód
()

391 
öode
 *
rù
;

392 
buf
 *
bp
;

393 
block_t
 
b
;

395 
rù
 = 
rdahed_öode
;

396 
rdahed_öode
 = 
NIL_INODE
;

397 i‡–(
b
 = 
	`ªad_m≠
(
rù
, 
rdahedpos
)Ë=
NO_BLOCK
) ;

398 
bp
 = 
	`øhód
(
rù
, 
b
, 
rdahedpos
, 
BLOCK_SIZE
);

399 
	`put_block
(
bp
, 
PARTIAL_DATA_BLOCK
);

400 
	}
}

406 
PUBLIC
 
buf
 *
	$øhód
(
rù
, 
ba£block
, 
posôi⁄
, 
byãs_ahód
)

407 
öode
 *
rù
;

408 
block_t
 
ba£block
;

409 
off_t
 
posôi⁄
;

410 
byãs_ahód
;

421 
	#BLOCKS_MINIMUM
 (
NR_BUFS
 < 50 ? 18 : 32)

	)

423 
block_•ec
, 
sˇÀ
, 
ªad_q_size
;

424 
blocks_ahód
, 
‰agmít
;

425 
block_t
 
block
, 
blocks_À·
;

426 
off_t
 
öd1_pos
;

427 
dev_t
 
dev
;

428 
buf
 *
bp
;

429 
buf
 *
ªad_q
[
NR_BUFS
];

431 
block_•ec
 = (
rù
->
i_mode
 & 
I_TYPE
Ë=
I_BLOCK_SPECIAL
;

432 i‡(
block_•ec
) {

433 
dev
 = (
dev_t
Ë
rù
->
i_z⁄e
[0];

435 
dev
 = 
rù
->
i_dev
;

438 
block
 = 
ba£block
;

439 
bp
 = 
	`gë_block
(
dev
, 
block
, 
PREFETCH
);

440 i‡(
bp
->
b_dev
 !
NO_DEV
) (bp);

462 
‰agmít
 = 
posôi⁄
 % 
BLOCK_SIZE
;

463 
posôi⁄
 -
‰agmít
;

464 
byãs_ahód
 +
‰agmít
;

466 
blocks_ahód
 = (
byãs_ahód
 + 
BLOCK_SIZE
 - 1) / BLOCK_SIZE;

468 i‡(
block_•ec
 && 
rù
->
i_size
 == 0) {

469 
blocks_À·
 = 
NR_IOREQS
;

471 
blocks_À·
 = (
rù
->
i_size
 - 
posôi⁄
 + 
BLOCK_SIZE
 - 1) / BLOCK_SIZE;

474 i‡(!
block_•ec
) {

475 
sˇÀ
 = 
rù
->
i_•
->
s_log_z⁄e_size
;

476 
öd1_pos
 = (
off_t
Ë
rù
->
i_ndz⁄es
 * (
BLOCK_SIZE
 << 
sˇÀ
);

477 i‡(
posôi⁄
 <
öd1_pos
 && 
rù
->
i_size
 > ind1_pos) {

478 
blocks_ahód
++;

479 
blocks_À·
++;

485 i‡(
blocks_ahód
 > 
NR_IOREQS
) blocks_ahead = NR_IOREQS;

488 i‡(
blocks_ahód
 < 
BLOCKS_MINIMUM
 && 
rù
->
i_£ek
 =
NO_SEEK
)

489 
blocks_ahód
 = 
BLOCKS_MINIMUM
;

492 i‡(
blocks_ahód
 > 
blocks_À·
) blocks_ahead = blocks_left;

494 
ªad_q_size
 = 0;

498 
ªad_q
[
ªad_q_size
++] = 
bp
;

500 i‡(--
blocks_ahód
 == 0) ;

503 i‡(
bufs_ö_u£
 >
NR_BUFS
 - 4) ;

505 
block
++;

507 
bp
 = 
	`gë_block
(
dev
, 
block
, 
PREFETCH
);

508 i‡(
bp
->
b_dev
 !
NO_DEV
) {

510 
	`put_block
(
bp
, 
FULL_DATA_BLOCK
);

514 
	`rw_sˇâîed
(
dev
, 
ªad_q
, 
ªad_q_size
, 
READING
);

515 (
	`gë_block
(
dev
, 
ba£block
, 
NORMAL
));

516 
	}
}

	@refresh.c

3 
	~<cur£s.h
>

4 
	~"cur•riv.h
"

7 
	$wª‰esh
(
wö
)

8 
WINDOW
 *
wö
;

10 i‡(
wö
 =
curs¸
)

11 
curs¸
->
_˛ór
 = 
TRUE
;

13 
	`wnouåe‰esh
(
wö
);

14 
	`doupd©e
();

15 
	}
}

23 
	$wnouåe‰esh
(
wö
)

24 
WINDOW
 *
wö
;

26 *
d°
;

27 *
íd
;

28 *
§c
;

29 
fú°
;

30 
œ°
;

31 
WINDOW
 *
ns¸
;

32 
begy
;

33 
begx
;

34 
i
;

35 
j
;

37 
ns¸
 = 
_cursv¨
.
tmpwö
;

38 
begy
 = 
wö
->
_begy
;

39 
begx
 = 
wö
->
_begx
;

41 
i
 = 0, 
j
 = 
begy
; i <
wö
->
_maxy
; i++, j++) {

42 i‡(
wö
->
_möchng
[
i
] !
_NO_CHANGE
) {

43 
fú°
 = 
wö
->
_möchng
[
i
];

44 
œ°
 = 
wö
->
_maxchng
[
i
];

45 
d°
 = &(
ns¸
->
_löe
[
j
][
begx
 + 
fú°
]);

46 
íd
 = &(
ns¸
->
_löe
[
j
][
begx
 + 
œ°
]);

47 
§c
 = &(
wö
->
_löe
[
i
][
fú°
]);

49 
d°
 <
íd
)

50 *
d°
++ = *
§c
++;

52 
fú°
 +
begx
;

53 
œ°
 +
begx
;

55 i‡((
ns¸
->
_möchng
[
j
] =
_NO_CHANGE
Ë|| (ns¸->_möchng[j] > 
fú°
))

56 
ns¸
->
_möchng
[
j
] = 
fú°
;

57 i‡(
œ°
 > 
ns¸
->
_maxchng
[
j
])Çscr->_maxchng[j] =Üast;

59 
wö
->
_möchng
[
i
] = 
_NO_CHANGE
;

61 
wö
->
_maxchng
[
i
] = 
_NO_CHANGE
;

64 i‡(
wö
->
_˛ór
) {

65 
wö
->
_˛ór
 = 
FALSE
;

66 
ns¸
->
_˛ór
 = 
TRUE
;

68 i‡(!
wö
->
_Àave
) {

69 
ns¸
->
_cury
 = 
wö
->_cury + 
begy
;

70 
ns¸
->
_curx
 = 
wö
->_curx + 
begx
;

72 
	}
}

	@regexp.c

28 
	~<möix/c⁄fig.h
>

29 
	~<möix/c⁄°.h
>

30 
	~<°dlib.h
>

31 
	~<°rög.h
>

32 
	~<ªgexp.h
>

33 
	~<°dio.h
>

38 
	#MAGIC
 0234

	)

75 
	#END
 0

	)

76 
	#BOL
 1

	)

77 
	#EOL
 2

	)

78 
	#ANY
 3

	)

79 
	#ANYOF
 4

	)

80 
	#ANYBUT
 5

	)

82 
	#BRANCH
 6

	)

84 
	#BACK
 7

	)

85 
	#EXACTLY
 8

	)

86 
	#NOTHING
 9

	)

87 
	#STAR
 10

	)

89 
	#PLUS
 11

	)

91 
	#OPEN
 20

	)

94 
	#CLOSE
 30

	)

126 
	#OP
(
p
Ë(*’))

	)

127 
	#NEXT
(
p
Ë(((*(’)+1)&0377)<<8Ë+ (*(’)+2)&0377))

	)

128 
	#OPERAND
(
p
Ë(’Ë+ 3)

	)

132 #i‚de‡
CHARBITS


133 
	#UCHARAT
(
p
Ë(()*(*)’))

	)

135 
	#UCHARAT
(
p
Ë(()*’)&
CHARBITS
)

	)

138 
	#CFAIL
(
m
Ë{ 
	`ªgîr‹
(m); ((*)
NULL
); }

	)

139 
	#RFAIL
(
m
Ë{ 
	`ªgîr‹
(m); ((
ªgexp
 *)
NULL
); }

	)

140 
	#ISMULT
(
c
Ë((cË='*' || (cË='+' || (cË='?')

	)

141 
	#META
 "^$.[()|?+*\\"

	)

145 
	#HASWIDTH
 01

	)

146 
	#SIMPLE
 02

	)

147 
	#SPSTART
 04

	)

148 
	#WORST
 0

	)

152 
PRIVATE
 *
	gªg∑r£
;

153 
PRIVATE
 
	gªg≈¨
;

154 
PRIVATE
 
	gªgdummy
;

155 
PRIVATE
 *
	gªgcode
;

156 
PRIVATE
 
	gªgsize
;

160 #i‚de‡
STATIC


161 
	#STATIC
 
PRIVATE


	)

163 
STATIC
 
_PROTOTYPE
–*
ªg
, (
∑ªn
, *
Êagp
) );

164 
STATIC
 
_PROTOTYPE
–*
ªgbønch
, (*
Êagp
) );

165 
STATIC
 
_PROTOTYPE
–*
ªgpõ˚
, (*
Êagp
) );

166 
STATIC
 
_PROTOTYPE
–*
ªg©om
, (*
Êagp
) );

167 
STATIC
 
_PROTOTYPE
–*
ªgnode
, (
›
) );

168 
STATIC
 
_PROTOTYPE
–*
ªg√xt
, (*
p
) );

169 
STATIC
 
_PROTOTYPE
–
ªgc
, (
b
) );

170 
STATIC
 
_PROTOTYPE
–
ªgö£π
, (
›
, *
›nd
) );

171 
STATIC
 
_PROTOTYPE
–
ªgèû
, (*
p
, *
vÆ
) );

172 
STATIC
 
_PROTOTYPE
–
ªg›èû
, (*
p
, *
vÆ
) );

189 
ªgexp
 *
	$ªgcomp
(
exp
)

190 *
exp
;

192 
ªgexp
 *
r
;

193 *
sˇn
;

194 *
l⁄ge°
;

195 
Àn
;

196 
Êags
;

198 i‡(
exp
 =(*)
NULL
Ë
	`RFAIL
("NULLárgument");

201 
ªg∑r£
 = 
exp
;

202 
ªg≈¨
 = 1;

203 
ªgsize
 = 0L;

204 
ªgcode
 = &
ªgdummy
;

205 
	`ªgc
(
MAGIC
);

206 i‡(
	`ªg
(0, &
Êags
Ë=(*)
NULL
Ë((
ªgexp
 *)NULL);

209 i‡(
ªgsize
 >= 32767L)

210 
	`RFAIL
("regexpÅoo big");

213 
r
 = (
ªgexp
 *Ë
	`mÆloc
(‘egexpË+ (Ë
ªgsize
);

214 i‡(
r
 =(
ªgexp
 *)
NULL
Ë
	`RFAIL
("out of space");

217 
ªg∑r£
 = 
exp
;

218 
ªg≈¨
 = 1;

219 
ªgcode
 = 
r
->
¥ogøm
;

220 
	`ªgc
(
MAGIC
);

221 i‡(
	`ªg
(0, &
Êags
Ë=(*)
NULL
Ë((
ªgexp
 *)NULL);

224 
r
->
ªg°¨t
 = '\0';

225 
r
->
ªg™ch
 = 0;

226 
r
->
ªgmu°
 = (*)
NULL
;

227 
r
->
ªgmÀn
 = 0;

228 
sˇn
 = 
r
->
¥ogøm
 + 1;

229 i‡(
	`OP
(
	`ªg√xt
(
sˇn
)Ë=
END
) {

230 
sˇn
 = 
	`OPERAND
(scan);

233 i‡(
	`OP
(
sˇn
Ë=
EXACTLY
)

234 
r
->
ªg°¨t
 = *
	`OPERAND
(
sˇn
);

235 i‡(
	`OP
(
sˇn
Ë=
BOL
)

236 
r
->
ªg™ch
++;

244 i‡(
Êags
 & 
SPSTART
) {

245 
l⁄ge°
 = (*)
NULL
;

246 
Àn
 = 0;

247 ; 
sˇn
 !(*)
NULL
; sˇ¿
	`ªg√xt
(scan))

248 i‡(
	`OP
(
sˇn
Ë=
EXACTLY
 && 
	`°æí
(
	`OPERAND
(sˇn)Ë>
Àn
) {

249 
l⁄ge°
 = 
	`OPERAND
(
sˇn
);

250 
Àn
 = 
	`°æí
(
	`OPERAND
(
sˇn
));

252 
r
->
ªgmu°
 = 
l⁄ge°
;

253 
r
->
ªgmÀn
 = 
Àn
;

256 (
r
);

257 
	}
}

268 
PRIVATE
 *
	$ªg
(
∑ªn
, 
Êagp
)

269 
∑ªn
;

270 *
Êagp
;

272 *
ªt
;

273 *
br
;

274 *
ídî
;

275 
∑∫o
;

276 
Êags
;

278 *
Êagp
 = 
HASWIDTH
;

281 i‡(
∑ªn
) {

282 i‡(
ªg≈¨
 >
NSUBEXP
Ë
	`CFAIL
("too many ()");

283 
∑∫o
 = 
ªg≈¨
;

284 
ªg≈¨
++;

285 
ªt
 = 
	`ªgnode
(
OPEN
 + 
∑∫o
);

287 
∑∫o
 = 0;

288 
ªt
 = (*)
NULL
;

292 
br
 = 
	`ªgbønch
(&
Êags
);

293 i‡(
br
 =(*)
NULL
) ((*)NULL);

294 i‡(
ªt
 !(*)
NULL
)

295 
	`ªgèû
(
ªt
, 
br
);

297 
ªt
 = 
br
;

298 i‡(!(
Êags
 & 
HASWIDTH
)Ë*
Êagp
 &= ~HASWIDTH;

299 *
Êagp
 |
Êags
 & 
SPSTART
;

300 *
ªg∑r£
 == '|') {

301 
ªg∑r£
++;

302 
br
 = 
	`ªgbønch
(&
Êags
);

303 i‡(
br
 =(*)
NULL
) ((*)NULL);

304 
	`ªgèû
(
ªt
, 
br
);

305 i‡(!(
Êags
 & 
HASWIDTH
)Ë*
Êagp
 &= ~HASWIDTH;

306 *
Êagp
 |
Êags
 & 
SPSTART
;

310 
ídî
 = 
	`ªgnode
((
∑ªn
Ë? 
CLOSE
 + 
∑∫o
 : 
END
);

311 
	`ªgèû
(
ªt
, 
ídî
);

314 
br
 = 
ªt
; b∏!(*)
NULL
; b∏
	`ªg√xt
(br)Ë
	`ªg›èû
(br, 
ídî
);

317 i‡(
∑ªn
 && *
ªg∑r£
++ != ')') {

318 
	`CFAIL
("unmatched ()");

319 } i‡(!
∑ªn
 && *
ªg∑r£
 != '\0') {

320 i‡(*
ªg∑r£
 == ')') {

321 
	`CFAIL
("unmatched ()");

323 
	`CFAIL
("junk onÉnd");

326 (
ªt
);

327 
	}
}

334 
PRIVATE
 *
	$ªgbønch
(
Êagp
)

335 *
Êagp
;

337 *
ªt
;

338 *
chaö
;

339 *
œã°
;

340 
Êags
;

342 *
Êagp
 = 
WORST
;

344 
ªt
 = 
	`ªgnode
(
BRANCH
);

345 
chaö
 = (*)
NULL
;

346 *
ªg∑r£
 != '\0' && *regparse != '|' && *regparse != ')') {

347 
œã°
 = 
	`ªgpõ˚
(&
Êags
);

348 i‡(
œã°
 =(*)
NULL
) ((*)NULL);

349 *
Êagp
 |
Êags
 & 
HASWIDTH
;

350 i‡(
chaö
 =(*)
NULL
)

351 *
Êagp
 |
Êags
 & 
SPSTART
;

353 
	`ªgèû
(
chaö
, 
œã°
);

354 
chaö
 = 
œã°
;

356 i‡(
chaö
 =(*)
NULL
)

357 
	`ªgnode
(
NOTHING
);

359 (
ªt
);

360 
	}
}

371 
PRIVATE
 *
	$ªgpõ˚
(
Êagp
)

372 *
Êagp
;

374 *
ªt
;

375 
›
;

376 *
√xt
;

377 
Êags
;

379 
ªt
 = 
	`ªg©om
(&
Êags
);

380 i‡(
ªt
 =(*)
NULL
) ((*)NULL);

382 
›
 = *
ªg∑r£
;

383 i‡(!
	`ISMULT
(
›
)) {

384 *
Êagp
 = 
Êags
;

385 (
ªt
);

387 i‡(!(
Êags
 & 
HASWIDTH
Ë&& 
›
 !'?'Ë
	`CFAIL
("*+ operand could beÉmpty");

388 *
Êagp
 = (
›
 !'+'Ë? (
WORST
 | 
SPSTART
Ë: (WORST | 
HASWIDTH
);

390 i‡(
›
 ='*' && (
Êags
 & 
SIMPLE
))

391 
	`ªgö£π
(
STAR
, 
ªt
);

392 i‡(
›
 == '*') {

394 
	`ªgö£π
(
BRANCH
, 
ªt
);

395 
	`ªg›èû
(
ªt
, 
	`ªgnode
(
BACK
));

396 
	`ªg›èû
(
ªt
,Ñet);

397 
	`ªgèû
(
ªt
, 
	`ªgnode
(
BRANCH
));

398 
	`ªgèû
(
ªt
, 
	`ªgnode
(
NOTHING
));

399 } i‡(
›
 ='+' && (
Êags
 & 
SIMPLE
))

400 
	`ªgö£π
(
PLUS
, 
ªt
);

401 i‡(
›
 == '+') {

403 
√xt
 = 
	`ªgnode
(
BRANCH
);

404 
	`ªgèû
(
ªt
, 
√xt
);

405 
	`ªgèû
(
	`ªgnode
(
BACK
), 
ªt
);

406 
	`ªgèû
(
√xt
, 
	`ªgnode
(
BRANCH
));

407 
	`ªgèû
(
ªt
, 
	`ªgnode
(
NOTHING
));

408 } i‡(
›
 == '?') {

410 
	`ªgö£π
(
BRANCH
, 
ªt
);

411 
	`ªgèû
(
ªt
, 
	`ªgnode
(
BRANCH
));

412 
√xt
 = 
	`ªgnode
(
NOTHING
);

413 
	`ªgèû
(
ªt
, 
√xt
);

414 
	`ªg›èû
(
ªt
, 
√xt
);

416 
ªg∑r£
++;

417 i‡(
	`ISMULT
(*
ªg∑r£
)Ë
	`CFAIL
("nested *?+");

419 (
ªt
);

420 
	}
}

430 
PRIVATE
 *
	$ªg©om
(
Êagp
)

431 *
Êagp
;

433 *
ªt
;

434 
Êags
;

436 *
Êagp
 = 
WORST
;

438 *
ªg∑r£
++) {

439 '^': 
ªt
 = 
	`ªgnode
(
BOL
); ;

440 '$': 
ªt
 = 
	`ªgnode
(
EOL
); ;

442 
ªt
 = 
	`ªgnode
(
ANY
);

443 *
Êagp
 |
HASWIDTH
 | 
SIMPLE
;

446 
˛ass
;

447 
˛as£nd
;

449 i‡(*
ªg∑r£
 == '^') {

450 
ªt
 = 
	`ªgnode
(
ANYBUT
);

451 
ªg∑r£
++;

453 
ªt
 = 
	`ªgnode
(
ANYOF
);

454 i‡(*
ªg∑r£
 =']' || *ªg∑r£ ='-'Ë
	`ªgc
(*regparse++);

455 *
ªg∑r£
 != '\0' && *regparse != ']') {

456 i‡(*
ªg∑r£
 == '-') {

457 
ªg∑r£
++;

458 i‡(*
ªg∑r£
 == ']' || *regparse == '\0')

459 
	`ªgc
('-');

461 
˛ass
 = 
	`UCHARAT
(
ªg∑r£
 - 2) + 1;

462 
˛as£nd
 = 
	`UCHARAT
(
ªg∑r£
);

463 i‡(
˛ass
 > 
˛as£nd
 + 1)

464 
	`CFAIL
("invalid []Ñange");

465 ; 
˛ass
 <
˛as£nd
; class++)

466 
	`ªgc
(
˛ass
);

467 
ªg∑r£
++;

470 
	`ªgc
(*
ªg∑r£
++);

472 
	`ªgc
('\0');

473 i‡(*
ªg∑r£
 !']'Ë
	`CFAIL
("unmatched []");

474 
ªg∑r£
++;

475 *
Êagp
 |
HASWIDTH
 | 
SIMPLE
;

479 
ªt
 = 
	`ªg
(1, &
Êags
);

480 i‡(
ªt
 =(*)
NULL
) ((*)NULL);

481 *
Êagp
 |
Êags
 & (
HASWIDTH
 | 
SPSTART
);

486 
	`CFAIL
("internal urp");

490 '*': 
	`CFAIL
("?+* followsÇothing"); ;

492 i‡(*
ªg∑r£
 ='\0'Ë
	`CFAIL
("trailing \\");

493 
ªt
 = 
	`ªgnode
(
EXACTLY
);

494 
	`ªgc
(*
ªg∑r£
++);

495 
	`ªgc
('\0');

496 *
Êagp
 |
HASWIDTH
 | 
SIMPLE
;

499 
Àn
;

500 
ídî
;

502 
ªg∑r£
--;

503 
Àn
 = 
	`°rc•n
(
ªg∑r£
, 
META
);

504 i‡(
Àn
 <0Ë
	`CFAIL
("internal disaster");

505 
ídî
 = *(
ªg∑r£
 + 
Àn
);

506 i‡(
Àn
 > 1 && 
	`ISMULT
(
ídî
))

507 
Àn
--;

508 *
Êagp
 |
HASWIDTH
;

509 i‡(
Àn
 =1Ë*
Êagp
 |
SIMPLE
;

510 
ªt
 = 
	`ªgnode
(
EXACTLY
);

511 
Àn
 > 0) {

512 
	`ªgc
(*
ªg∑r£
++);

513 
Àn
--;

515 
	`ªgc
('\0');

520 (
ªt
);

521 
	}
}

526 
PRIVATE
 *
	$ªgnode
(
›
)

527 
›
;

529 *
ªt
;

530 *
±r
;

532 
ªt
 = 
ªgcode
;

533 i‡(
ªt
 =&
ªgdummy
) {

534 
ªgsize
 += 3;

535 (
ªt
);

537 
±r
 = 
ªt
;

538 *
±r
++ = 
›
;

539 *
±r
++ = '\0';

540 *
±r
++ = '\0';

541 
ªgcode
 = 
±r
;

543 (
ªt
);

544 
	}
}

549 
PRIVATE
 
	$ªgc
(
b
)

550 
b
;

552 i‡(
ªgcode
 !&
ªgdummy
)

553 *
ªgcode
++ = 
b
;

555 
ªgsize
++;

556 
	}
}

563 
PRIVATE
 
	$ªgö£π
(
›
, 
›nd
)

564 
›
;

565 *
›nd
;

567 *
§c
;

568 *
d°
;

569 *
∂a˚
;

571 i‡(
ªgcode
 =&
ªgdummy
) {

572 
ªgsize
 += 3;

575 
§c
 = 
ªgcode
;

576 
ªgcode
 += 3;

577 
d°
 = 
ªgcode
;

578 
§c
 > 
›nd
Ë*--
d°
 = *--src;

580 
∂a˚
 = 
›nd
;

581 *
∂a˚
++ = 
›
;

582 *
∂a˚
++ = '\0';

583 *
∂a˚
++ = '\0';

584 
	}
}

589 
PRIVATE
 
	$ªgèû
(
p
, 
vÆ
)

590 *
p
;

591 *
vÆ
;

593 *
sˇn
;

594 *
ãmp
;

595 
off£t
;

597 i‡(
p
 =&
ªgdummy
) ;

600 
sˇn
 = 
p
;

602 
ãmp
 = 
	`ªg√xt
(
sˇn
);

603 i‡(
ãmp
 =(*)
NULL
) ;

604 
sˇn
 = 
ãmp
;

607 i‡(
	`OP
(
sˇn
Ë=
BACK
)

608 
off£t
 = 
sˇn
 - 
vÆ
;

610 
off£t
 = 
vÆ
 - 
sˇn
;

611 *(
sˇn
 + 1Ë(
off£t
 >> 8) & 0377;

612 *(
sˇn
 + 2Ë
off£t
 & 0377;

613 
	}
}

618 
PRIVATE
 
	$ªg›èû
(
p
, 
vÆ
)

619 *
p
;

620 *
vÆ
;

623 i‡(
p
 =(*)
NULL
 ||Ö =&
ªgdummy
 || 
	`OP
’Ë!
BRANCH
) ;

624 
	`ªgèû
(
	`OPERAND
(
p
), 
vÆ
);

625 
	}
}

632 
PRIVATE
 *
	gªgöput
;

633 
PRIVATE
 *
	gªgbﬁ
;

634 
PRIVATE
 **
	gªg°¨ç
;

635 
PRIVATE
 **
	gªgídp
;

639 
STATIC
 
_PROTOTYPE
–
ªgåy
, (
ªgexp
 *
¥og
, *
°rög
) );

640 
STATIC
 
_PROTOTYPE
–
ªgm©ch
, (*
¥og
) );

641 
STATIC
 
_PROTOTYPE
–
ªgª≥©
, (*
p
) );

643 #ifde‡
DEBUG


644 
	gªg«º©e
 = 0;

645 
ªgdump
();

646 
STATIC
 
_PROTOTYPE
–*
ªg¥›
, (*
›
) );

652 
	$ªgexec
(
¥og
, 
°rög
, 
bﬁÊag
)

653 
ªgexp
 *
¥og
;

654 *
°rög
;

655 
bﬁÊag
;

657 *
s
;

660 i‡(
¥og
 =(
ªgexp
 *)
NULL
 || 
°rög
 == (*)NULL) {

661 
	`ªgîr‹
("NULLÖarameter");

666 i‡(
	`UCHARAT
(
¥og
->
¥ogøm
Ë!
MAGIC
) {

667 
	`ªgîr‹
("corruptedÖrogram");

672 i‡(
¥og
->
ªgmu°
 !(*)
NULL
) {

673 
s
 = 
°rög
;

674 (
s
 = 
	`°rchr
(s, 
¥og
->
ªgmu°
[0])Ë!(*)
NULL
) {

675 i‡(
	`°∫cmp
(
s
, 
¥og
->
ªgmu°
,Örog->
ªgmÀn
) == 0)

677 
s
++;

679 i‡(
s
 =(*)
NULL
)

684 i‡(
bﬁÊag
)

685 
ªgbﬁ
 = 
°rög
;

687 
ªgbﬁ
 = (*)
NULL
;

690 i‡(
¥og
->
ªg™ch
Ë(
	`ªgåy
’rog, 
°rög
));

693 
s
 = 
°rög
;

694 i‡(
¥og
->
ªg°¨t
 != '\0')

695 (
s
 = 
	`°rchr
(s, 
¥og
->
ªg°¨t
)Ë!(*)
NULL
) {

696 i‡(
	`ªgåy
(
¥og
, 
s
)) (1);

697 
s
++;

702 i‡(
	`ªgåy
(
¥og
, 
s
)) (1);

703 } *
s
++ != '\0');

707 
	}
}

712 
PRIVATE
 
	$ªgåy
(
¥og
, 
°rög
)

713 
ªgexp
 *
¥og
;

714 *
°rög
;

716 
i
;

717 **
•
;

718 **
ï
;

720 
ªgöput
 = 
°rög
;

721 
ªg°¨ç
 = 
¥og
->
°¨ç
;

722 
ªgídp
 = 
¥og
->
ídp
;

724 
•
 = 
¥og
->
°¨ç
;

725 
ï
 = 
¥og
->
ídp
;

726 
i
 = 
NSUBEXP
; i > 0; i--) {

727 *
•
++ = (*)
NULL
;

728 *
ï
++ = (*)
NULL
;

730 i‡(
	`ªgm©ch
(
¥og
->
¥ogøm
 + 1)) {

731 
¥og
->
°¨ç
[0] = 
°rög
;

732 
¥og
->
ídp
[0] = 
ªgöput
;

736 
	}
}

748 
PRIVATE
 
	$ªgm©ch
(
¥og
)

749 *
¥og
;

751 *
sˇn
;

752 *
√xt
;

754 
sˇn
 = 
¥og
;

755 #ifde‡
DEBUG


756 i‡(
sˇn
 !(*)
NULL
 && 
ªg«º©e
Ë
	`Ârötf
(
°dîr
, "%s(\n", 
	`ªg¥›
(scan));

758 
sˇn
 !(*)
NULL
) {

759 #ifde‡
DEBUG


760 i‡(
ªg«º©e
Ë
	`Ârötf
(
°dîr
, "%s...\n", 
	`ªg¥›
(
sˇn
));

762 
√xt
 = 
	`ªg√xt
(
sˇn
);

764 
	`OP
(
sˇn
)) {

765 
BOL
:

766 i‡(
ªgöput
 !
ªgbﬁ
) (0);

768 
EOL
:

769 i‡(*
ªgöput
 != '\0') (0);

771 
ANY
:

772 i‡(*
ªgöput
 == '\0') (0);

773 
ªgöput
++;

775 
EXACTLY
:{

776 
Àn
;

777 *
›nd
;

779 
›nd
 = 
	`OPERAND
(
sˇn
);

781 i‡(*
›nd
 !*
ªgöput
) (0);

782 
Àn
 = 
	`°æí
(
›nd
);

783 i‡(
Àn
 > 1 && 
	`°∫cmp
(
›nd
, 
ªgöput
,Üen) != 0)

785 
ªgöput
 +
Àn
;

788 
ANYOF
:

789 i‡(*
ªgöput
 ='\0' || 
	`°rchr
(
	`OPERAND
(
sˇn
), *ªgöputË=(*)
NULL
)

791 
ªgöput
++;

793 
ANYBUT
:

794 i‡(*
ªgöput
 ='\0' || 
	`°rchr
(
	`OPERAND
(
sˇn
), *ªgöputË!(*)
NULL
)

796 
ªgöput
++;

798 
NOTHING
:

800 
BACK
:

802 
OPEN
 + 1:

803 
OPEN
 + 2:

804 
OPEN
 + 3:

805 
OPEN
 + 4:

806 
OPEN
 + 5:

807 
OPEN
 + 6:

808 
OPEN
 + 7:

809 
OPEN
 + 8:

810 
OPEN
 + 9:{

811 
no
;

812 *
ßve
;

814 
no
 = 
	`OP
(
sˇn
Ë- 
OPEN
;

815 
ßve
 = 
ªgöput
;

817 i‡(
	`ªgm©ch
(
√xt
)) {

821 i‡(
ªg°¨ç
[
no
] =(*)
NULL
)

822 
ªg°¨ç
[
no
] = 
ßve
;

828 
CLOSE
 + 1:

829 
CLOSE
 + 2:

830 
CLOSE
 + 3:

831 
CLOSE
 + 4:

832 
CLOSE
 + 5:

833 
CLOSE
 + 6:

834 
CLOSE
 + 7:

835 
CLOSE
 + 8:

836 
CLOSE
 + 9:{

837 
no
;

838 *
ßve
;

840 
no
 = 
	`OP
(
sˇn
Ë- 
CLOSE
;

841 
ßve
 = 
ªgöput
;

843 i‡(
	`ªgm©ch
(
√xt
)) {

847 i‡(
ªgídp
[
no
] =(*)
NULL
Ëªgídp[no] = 
ßve
;

853 
BRANCH
:{

854 *
ßve
;

856 i‡(
	`OP
(
√xt
Ë!
BRANCH
)

857 
√xt
 = 
	`OPERAND
(
sˇn
);

860 
ßve
 = 
ªgöput
;

861 i‡(
	`ªgm©ch
(
	`OPERAND
(
sˇn
)))

863 
ªgöput
 = 
ßve
;

864 
sˇn
 = 
	`ªg√xt
(scan);

865 } 
sˇn
 !(*)
NULL
 && 
	`OP
(sˇnË=
BRANCH
);

871 
STAR
:

872 
PLUS
:{

873 
√xtch
;

874 
no
;

875 *
ßve
;

876 
mö
;

880 
√xtch
 = '\0';

881 i‡(
	`OP
(
√xt
Ë=
EXACTLY
Ë
√xtch
 = *
	`OPERAND
(next);

882 
mö
 = (
	`OP
(
sˇn
Ë=
STAR
) ? 0 : 1;

883 
ßve
 = 
ªgöput
;

884 
no
 = 
	`ªgª≥©
(
	`OPERAND
(
sˇn
));

885 
no
 >
mö
) {

887 i‡(
√xtch
 ='\0' || *
ªgöput
 ==Çextch)

888 i‡(
	`ªgm©ch
(
√xt
)) (1);

890 
no
--;

891 
ªgöput
 = 
ßve
 + 
no
;

896 
END
:

900 
	`ªgîr‹
("memory corruption");

905 
sˇn
 = 
√xt
;

910 
	`ªgîr‹
("corruptedÖointers");

912 
	}
}

917 
PRIVATE
 
	$ªgª≥©
(
p
)

918 *
p
;

920 
cou¡
 = 0;

921 *
sˇn
;

922 *
›nd
;

924 
sˇn
 = 
ªgöput
;

925 
›nd
 = 
	`OPERAND
(
p
);

926 
	`OP
(
p
)) {

927 
ANY
:

928 
cou¡
 = 
	`°æí
(
sˇn
);

929 
sˇn
 +
cou¡
;

931 
EXACTLY
:

932 *
›nd
 =*
sˇn
) {

933 
cou¡
++;

934 
sˇn
++;

937 
ANYOF
:

938 *
sˇn
 !'\0' && 
	`°rchr
(
›nd
, *sˇnË!(*)
NULL
) {

939 
cou¡
++;

940 
sˇn
++;

943 
ANYBUT
:

944 *
sˇn
 !'\0' && 
	`°rchr
(
›nd
, *sˇnË=(*)
NULL
) {

945 
cou¡
++;

946 
sˇn
++;

950 
	`ªgîr‹
("internal foulup");

951 
cou¡
 = 0;

954 
ªgöput
 = 
sˇn
;

956 (
cou¡
);

957 
	}
}

962 
PRIVATE
 *
	$ªg√xt
(
p
)

963 *
p
;

965 
off£t
;

967 i‡(
p
 =&
ªgdummy
Ë((*)
NULL
);

969 
off£t
 = 
	`NEXT
(
p
);

970 i‡(
off£t
 =0Ë((*)
NULL
);

972 i‡(
	`OP
(
p
Ë=
BACK
)

973 (
p
 - 
off£t
);

975 (
p
 + 
off£t
);

976 
	}
}

978 #ifde‡
DEBUG


980 
STATIC
 *
ªg¥›
();

985 
	$ªgdump
(
r
)

986 
ªgexp
 *
r
;

988 *
s
;

989 
›
 = 
EXACTLY
;

990 *
√xt
;

992 
s
 = 
r
->
¥ogøm
 + 1;

993 
›
 !
END
) {

994 
›
 = 
	`OP
(
s
);

995 
	`¥ötf
("%2d%s", (Ë(
s
 - 
r
->
¥ogøm
), 
	`ªg¥›
(s));

996 
√xt
 = 
	`ªg√xt
(
s
);

997 i‡(
√xt
 =(*)
NULL
)

998 
	`¥ötf
("(0)");

1000 
	`¥ötf
("(%d)", (Ë(
s
 - 
r
->
¥ogøm
Ë+ (Ë(
√xt
 - s));

1001 
s
 += 3;

1002 i‡(
›
 =
ANYOF
 || o∞=
ANYBUT
 || o∞=
EXACTLY
) {

1004 *
s
 != '\0') {

1005 
	`putch¨
(*
s
);

1006 
s
++;

1008 
s
++;

1010 
	`putch¨
('\n');

1014 i‡(
r
->
ªg°¨t
 !'\0'Ë
	`¥ötf
("start `%c' ",Ñ->regstart);

1015 i‡(
r
->
ªg™ch
Ë
	`¥ötf
("anchored ");

1016 i‡(
r
->
ªgmu°
 !(*)
NULL
Ë
	`¥ötf
("must have \"%s\"",Ñ->regmust);

1017 
	`¥ötf
("\n");

1018 
	}
}

1023 
PRIVATE
 *
	$ªg¥›
(
›
)

1024 *
›
;

1026 *
p
;

1027 
PRIVATE
 
buf
[50];

1029 (Ë
	`°r˝y
(
buf
, ":");

1031 
	`OP
(
›
)) {

1032 
BOL
: 
p
 = "BOL"; ;

1033 
EOL
: 
p
 = "EOL"; ;

1034 
ANY
: 
p
 = "ANY"; ;

1035 
ANYOF
: 
p
 = "ANYOF"; ;

1036 
ANYBUT
: 
p
 = "ANYBUT"; ;

1037 
BRANCH
: 
p
 = "BRANCH"; ;

1038 
EXACTLY
: 
p
 = "EXACTLY"; ;

1039 
NOTHING
: 
p
 = "NOTHING"; ;

1040 
BACK
: 
p
 = "BACK"; ;

1041 
END
: 
p
 = "END"; ;

1042 
OPEN
 + 1:

1043 
OPEN
 + 2:

1044 
OPEN
 + 3:

1045 
OPEN
 + 4:

1046 
OPEN
 + 5:

1047 
OPEN
 + 6:

1048 
OPEN
 + 7:

1049 
OPEN
 + 8:

1050 
OPEN
 + 9:

1051 
	`•rötf
(
buf
 + 
	`°æí
(buf), "OPEN%d", 
	`OP
(
›
Ë- 
OPEN
);

1052 
p
 = (*)
NULL
;

1054 
CLOSE
 + 1:

1055 
CLOSE
 + 2:

1056 
CLOSE
 + 3:

1057 
CLOSE
 + 4:

1058 
CLOSE
 + 5:

1059 
CLOSE
 + 6:

1060 
CLOSE
 + 7:

1061 
CLOSE
 + 8:

1062 
CLOSE
 + 9:

1063 
	`•rötf
(
buf
 + 
	`°æí
(buf), "CLOSE%d", 
	`OP
(
›
Ë- 
CLOSE
);

1064 
p
 = (*)
NULL
;

1066 
STAR
: 
p
 = "STAR"; ;

1067 
PLUS
: 
p
 = "PLUS"; ;

1068 : 
	`ªgîr‹
("c‹ru±ed opcode"); 
p
 = (*Ë
NULL
; ;

1070 i‡(
p
 !(*)
NULL
Ë(Ë
	`°rˇt
(
buf
,Ö);

1071 (
buf
);

1072 
	}
}

	@regsub.c

21 
	~<lib.h
>

22 
	~<°rög.h
>

23 
	~<ªgexp.h
>

24 
	~<°dio.h
>

29 
	#MAGIC
 0234

	)

31 
	#CHARBITS
 0377

	)

32 #i‚de‡
CHARBITS


33 
	#UCHARAT
(
p
Ë(()*(*)’))

	)

35 
	#UCHARAT
(
p
Ë(()*’)&
CHARBITS
)

	)

41 
	$ªgsub
(
¥og
, 
sour˚
, 
de°
)

42 
ªgexp
 *
¥og
;

43 *
sour˚
;

44 *
de°
;

46 *
§c
;

47 *
d°
;

48 
c
;

49 
no
;

50 
Àn
;

52 i‡(
¥og
 =(
ªgexp
 *)
NULL
 || 
sour˚
 =(*)NULL || 
de°
 == (*)NULL) {

53 
	`ªgîr‹
("NULLÖarmÅoÑegsub");

56 i‡(
	`UCHARAT
(
¥og
->
¥ogøm
Ë!
MAGIC
) {

57 
	`ªgîr‹
("damagedÑegexp fedÅoÑegsub");

60 
§c
 = 
sour˚
;

61 
d°
 = 
de°
;

62 (
c
 = *
§c
++) != '\0') {

63 i‡(
c
 == '&')

64 
no
 = 0;

65 i‡(
c
 ='\\' && '0' <*
§c
 && *src <= '9')

66 
no
 = *
§c
++ - '0';

68 
no
 = -1;

70 i‡(
no
 < 0) {

71 i‡(
c
 ='\\' && (*
§c
 == '\\' || *src == '&')) c = *src++;

72 *
d°
++ = 
c
;

74 i‡(
¥og
->
°¨ç
[
no
] !(*)
NULL
 &&Örog->
ídp
[no] != (*)NULL) {

75 
Àn
 = (Ë(
¥og
->
ídp
[
no
] -Örog->
°¨ç
[no]);

76 
	`°∫˝y
(
d°
, 
¥og
->
°¨ç
[
no
], 
Àn
);

77 
d°
 +
Àn
;

78 i‡(
Àn
 !0 && *(
d°
 - 1) == '\0') {

79 
	`ªgîr‹
("damaged match string");

84 *
d°
++ = '\0';

85 
	}
}

	@remove.c

6 
	~<°dio.h
>

8 
_u∆ök
(c⁄° *
∑th
);

11 
	$ªmove
(c⁄° *
fûíame
) {

12  
	`_u∆ök
(
fûíame
);

13 
	}
}

	@res_comp.c

20 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

21 
	gsccsid
[] = "@(#)res_comp.c 6.18 (Berkeley) 6/27/90";

24 #i‡
_MINIX


25 
	~<sys/ty≥s.h
>

26 
	~<°dlib.h
>

28 
	~<√t/gí/ö.h
>

29 
	~<√t/gí/«me£r.h
>

30 
	~<√t/gí/ªsﬁv.h
>

32 
u8_t
 
	tu_ch¨
;

33 
u16_t
 
	tu_sh‹t
;

34 
u32_t
 
	tu_l⁄g
;

36 
dn_föd
 
_ARGS
(–c⁄° 
u_ch¨
 *
exp_dn
, c⁄° u_ch¨ *
msg
,

37 
u_ch¨
 **
d≈ås
, u_ch¨ **
œ°d≈å
 ));

38 
dn_skù«me
 
_ARGS
(–c⁄° 
u_ch¨
 *
comp_dn
, c⁄° u_ch¨ *
eom
 ));

40 
	#gësh‹t
 
_gësh‹t


	)

41 
	#gël⁄g
 
_gël⁄g


	)

42 
	#putsh‹t
 
__putsh‹t


	)

43 
	#pué⁄g
 
__pué⁄g


	)

45 
	~<sys/ty≥s.h
>

46 
	~<°dio.h
>

47 
	~<¨∑/«me£r.h
>

49 
dn_föd
();

52 #ifde‡
__STDC__


53 
	#CONST
 c⁄°

	)

55 
	#CONST


	)

65 
	$dn_ex∑nd
(
msg
, 
eom‹ig
, 
comp_dn
, 
exp_dn
, 
Àngth
)

66 
CONST
 
u_ch¨
 *
msg
, *
eom‹ig
, *
comp_dn
;

67 
u_ch¨
 *
exp_dn
;

68 
Àngth
;

70 
CONST
 
u_ch¨
 *
˝
;

71 
u_ch¨
 *
dn
;

72 
n
, 
c
;

73 
CONST
 
u_ch¨
 *
eom
;

74 
Àn
 = -1, 
checked
 = 0;

76 
dn
 = 
exp_dn
;

77 
˝
 = 
comp_dn
;

78 
eom
 = 
exp_dn
 + 
Àngth
;

82 
n
 = *
˝
++) {

86 
n
 & 
INDIR_MASK
) {

88 i‡(
dn
 !
exp_dn
) {

89 i‡(
dn
 >
eom
)

91 *
dn
++ = '.';

93 i‡(
dn
+
n
 >
eom
)

95 
checked
 +
n
 + 1;

96 --
n
 >= 0) {

97 i‡((
c
 = *
˝
++) == '.') {

98 i‡(
dn
 + 
n
 + 2 >
eom
)

100 *
dn
++ = '\\';

102 *
dn
++ = 
c
;

103 i‡(
˝
 >
eom‹ig
)

108 
INDIR_MASK
:

109 i‡(
Àn
 < 0)

110 
Àn
 = 
˝
 - 
comp_dn
 + 1;

111 
˝
 = 
msg
 + (((
n
 & 0x3f) << 8) | (*cp & 0xff));

112 i‡(
˝
 < 
msg
 || c∞>
eom‹ig
)

114 
checked
 += 2;

120 i‡(
checked
 >
eom‹ig
 - 
msg
)

128 *
dn
 = '\0';

129 i‡(
Àn
 < 0)

130 
Àn
 = 
˝
 - 
comp_dn
;

131  (
Àn
);

132 
	}
}

147 
	$dn_comp
(
exp_dn
, 
comp_dn
, 
Àngth
, 
d≈ås
, 
œ°d≈å
)

148 
CONST
 
u_ch¨
 *
exp_dn
;

149 
u_ch¨
 *
comp_dn
;

150 
Àngth
;

151 
u_ch¨
 **
d≈ås
, **
œ°d≈å
;

153 
u_ch¨
 *
˝
;

154 
CONST
 
u_ch¨
 *
dn
;

155 
c
, 
l
;

156 
u_ch¨
 **
˝p
, **
Õp
, *
•
, *
eob
;

157 
u_ch¨
 *
msg
;

159 
dn
 = 
exp_dn
;

160 
˝
 = 
comp_dn
;

161 
eob
 = 
˝
 + 
Àngth
;

162 i‡(
d≈ås
 !
NULL
) {

163 i‡((
msg
 = *
d≈ås
++Ë!
NULL
) {

164 
˝p
 = 
d≈ås
; *˝∞!
NULL
; cpp++)

166 
Õp
 = 
˝p
;

169 
msg
 = 
NULL
;

170 
c
 = *
dn
++; c != '\0'; ) {

172 i‡(
msg
 !
NULL
) {

173 i‡((
l
 = 
	`dn_föd
(
dn
-1, 
msg
, 
d≈ås
, 
Õp
)) >= 0) {

174 i‡(
˝
+1 >
eob
)

176 *
˝
++ = (
l
 >> 8Ë| 
INDIR_MASK
;

177 *
˝
++ = 
l
 % 256;

178  (
˝
 - 
comp_dn
);

181 i‡(
œ°d≈å
 !
NULL
 && 
˝p
 <Üastdnptr-1) {

182 *
˝p
++ = 
˝
;

183 *
˝p
 = 
NULL
;

186 
•
 = 
˝
++;

188 i‡(
c
 == '.') {

189 
c
 = *
dn
++;

192 i‡(
c
 == '\\') {

193 i‡((
c
 = *
dn
++) == '\0')

196 i‡(
˝
 >
eob
) {

197 i‡(
msg
 !
NULL
)

198 *
Õp
 = 
NULL
;

201 *
˝
++ = 
c
;

202 } (
c
 = *
dn
++) != '\0');

204 i‡((
l
 = 
˝
 - 
•
 - 1Ë=0 && 
c
 == '\0') {

205 
˝
--;

208 i‡(
l
 <0 ||Ü > 
MAXLABEL
) {

209 i‡(
msg
 !
NULL
)

210 *
Õp
 = 
NULL
;

213 *
•
 = 
l
;

215 i‡(
˝
 >
eob
) {

216 i‡(
msg
 !
NULL
)

217 *
Õp
 = 
NULL
;

220 *
˝
++ = '\0';

221  (
˝
 - 
comp_dn
);

222 
	}
}

227 
	$dn_skù«me
(
comp_dn
, 
eom
)

228 
CONST
 
u_ch¨
 *
comp_dn
, *
eom
;

230 
CONST
 
u_ch¨
 *
˝
;

231 
n
;

233 
˝
 = 
comp_dn
;

234 
˝
 < 
eom
 && (
n
 = *cp++)) {

238 
n
 & 
INDIR_MASK
) {

240 
˝
 +
n
;

244 
INDIR_MASK
:

245 
˝
++;

249  (
˝
 - 
comp_dn
);

250 
	}
}

259 
	$dn_föd
(
exp_dn
, 
msg
, 
d≈ås
, 
œ°d≈å
)

260 
CONST
 
u_ch¨
 *
exp_dn
, *
msg
;

261 
u_ch¨
 **
d≈ås
, **
œ°d≈å
;

263 
CONST
 
u_ch¨
 *
dn
, *
˝
;

264 
u_ch¨
 **
˝p
;

265 
n
;

266 
CONST
 
u_ch¨
 *
•
;

268 
˝p
 = 
d≈ås
; cµ < 
œ°d≈å
; cpp++) {

269 
dn
 = 
exp_dn
;

270 
•
 = 
˝
 = *
˝p
;

271 
n
 = *
˝
++) {

275 
n
 & 
INDIR_MASK
) {

277 --
n
 >= 0) {

278 i‡(*
dn
 == '.')

279 
√xt
;

280 i‡(*
dn
 == '\\')

281 
dn
++;

282 i‡(*
dn
++ !*
˝
++)

283 
√xt
;

285 i‡((
n
 = *
dn
++Ë='\0' && *
˝
 == '\0')

286  (
•
 - 
msg
);

287 i‡(
n
 == '.')

289 
√xt
;

294 
INDIR_MASK
:

295 
˝
 = 
msg
 + (((
n
 & 0x3f) << 8) | *cp);

298 i‡(*
dn
 == '\0')

299  (
•
 - 
msg
);

300 
√xt
: ;

303 
	}
}

313 
u16_t


314 
	$gësh‹t
(
msgp
)

315 
CONST
 
u8_t
 *
msgp
;

317  ((
msgp
[0] << 8) | (msgp[1] << 0));

318 
	}
}

320 
u32_t


321 
	$gël⁄g
(
msgp
)

322 
CONST
 
u8_t
 *
msgp
;

324  ( ((
u32_t
Ë
msgp
[0] << 24)

325 | ((
u32_t
Ë
msgp
[1] << 16)

326 | ((
u32_t
Ë
msgp
[2] << 8)

327 | ((
u32_t
Ë
msgp
[3] << 0));

328 
	}
}

332 
	$putsh‹t
(
s
, 
msgp
)

333 
U16_t
 
s
;

334 
u8_t
 *
msgp
;

337 
msgp
[1] = 
s
;

338 
msgp
[0] = 
s
 >> 8;

339 
	}
}

342 
	$pué⁄g
(
l
, 
msgp
)

343 
u32_t
 
l
;

344 
u8_t
 *
msgp
;

347 
msgp
[3] = 
l
;

348 
msgp
[2] = (
l
 >>= 8);

349 
msgp
[1] = (
l
 >>= 8);

350 
msgp
[0] = 
l
 >> 8;

351 
	}
}

	@res_init.c

20 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

21 
	gsccsid
[] = "@(#)res_init.c 6.14 (Berkeley) 6/27/90";

24 #i‡
_MINIX


25 
	~<sys/ty≥s.h
>

26 
	~<°dio.h
>

27 
	~<°dlib.h
>

28 
	~<°rög.h
>

29 
	~<uni°d.h
>

31 
	~<√t/ht⁄.h
>

32 
	~<√t/gí/ö.h
>

33 
	~<√t/gí/öë.h
>

34 
	~<√t/gí/«me£r.h
>

35 
	~<√t/gí/√tdb.h
>

36 
	~<√t/gí/ªsﬁv.h
>

37 
	~<√t/gí/sockë.h
>

39 
	#ödex
(
s
,
c
Ë
	`°rchr
(s,c)

	)

41 
	~<sys/ty≥s.h
>

42 
	~<sys/sockë.h
>

43 
	~<√töë/ö.h
>

44 
	~<°dio.h
>

45 
	~<¨∑/«me£r.h
>

46 
	~<ªsﬁv.h
>

52 
°©e
 
	g_ªs
;

65 
	$ªs_öô
()

67 
FILE
 *
Â
;

68 *
˝
, **
µ
;

69 
n
;

70 
buf
[
BUFSIZ
];

71 
havìnv
 = 0;

72 
have£¨ch
 = 0;

73 
£rvít
* servent;

74 
u16_t
 
«me£rvî_p‹t
;

77 
_ªs
.
ªå™s
 = 
RES_TIMEOUT
;

78 
_ªs
.
ªåy
 = 4;

79 
_ªs
.
›ti⁄s
 = 
RES_DEFAULT
;

80 
_ªs
.
nscou¡
 = 0;

82 
£rvít

	`gë£rvby«me
("domaö", 
NULL
);

83 i‡(!
£rvít
)

85 
h_î∫o

NO_RECOVERY
;

88 
«me£rvî_p‹t

£rvít
->
s_p‹t
;

91 i‡((
˝
 = 
	`gëív
("LOCALDOMAIN")Ë!
NULL
) {

92 ()
	`°∫˝y
(
_ªs
.
defd«me
, 
˝
, (_res.defdname));

93 
havìnv
++;

96 i‡((
Â
 = 
	`f›í
(
_PATH_RESCONF
, "r")Ë!
NULL
) {

98 
	`fgës
(
buf
, (buf), 
Â
Ë!
NULL
) {

100 i‡(!
	`°∫cmp
(
buf
, "domain", ("domain") - 1)) {

101 i‡(
havìnv
)

103 
˝
 = 
buf
 + ("domain") - 1;

104 *
˝
 == ' ' || *cp == '\t')

105 
˝
++;

106 i‡((*
˝
 == '\0') || (*cp == '\n'))

108 ()
	`°∫˝y
(
_ªs
.
defd«me
, 
˝
, (_res.defdname) - 1);

109 i‡((
˝
 = 
	`ödex
(
_ªs
.
defd«me
, '\n')Ë!
NULL
)

110 *
˝
 = '\0';

111 
have£¨ch
 = 0;

115 i‡(!
	`°∫cmp
(
buf
, "search", ("search") - 1)) {

116 i‡(
havìnv
)

118 
˝
 = 
buf
 + ("search") - 1;

119 *
˝
 == ' ' || *cp == '\t')

120 
˝
++;

121 i‡((*
˝
 == '\0') || (*cp == '\n'))

123 ()
	`°∫˝y
(
_ªs
.
defd«me
, 
˝
, (_res.defdname) - 1);

124 i‡((
˝
 = 
	`ödex
(
_ªs
.
defd«me
, '\n')Ë!
NULL
)

125 *
˝
 = '\0';

130 
˝
 = 
_ªs
.
defd«me
;

131 
µ
 = 
_ªs
.
dn§ch
;

132 *
µ
++ = 
˝
;

133 
n
 = 0; *
˝
 && 
µ
 < 
_ªs
.
dn§ch
 + 
MAXDNSRCH
; cp++) {

134 i‡(*
˝
 == ' ' || *cp == '\t') {

135 *
˝
 = 0;

136 
n
 = 1;

137 } i‡(
n
) {

138 *
µ
++ = 
˝
;

139 
n
 = 0;

143 *
˝
 != '\0' && *cp != ' ' && *cp != '\t')

144 
˝
++;

145 *
˝
 = '\0';

146 *
µ
++ = 0;

147 
have£¨ch
 = 1;

151 i‡(!
	`°∫cmp
(
buf
, "nameserver", ("nameserver") - 1) &&

152 
_ªs
.
nscou¡
 < 
MAXNS
) {

153 
˝
 = 
buf
 + ("nameserver") - 1;

154 *
˝
 == ' ' || *cp == '\t')

155 
˝
++;

156 i‡((*
˝
 == '\0') || (*cp == '\n'))

158 i‡(!
	`öë_©⁄
(
˝
, &
_ªs
.
nßddr_li°
[_ªs.
nscou¡
]))

160 
_ªs
.
n•‹t_li°
[_ªs.
nscou¡
]
«me£rvî_p‹t
;

161 
_ªs
.
nscou¡
++;

165 (Ë
	`f˛o£
(
Â
);

167 i‡(
_ªs
.
nscou¡
 == 0) {

169 
_ªs
.
nßddr_li°
[0]
	`HTONL
(0x7F000001);

170 
_ªs
.
n•‹t_li°
[0]
«me£rvî_p‹t
;

171 
_ªs
.
nscou¡
= 1;

173 i‡(
_ªs
.
defd«me
[0] == 0) {

174 i‡(
	`gëho°«me
(
buf
, (
_ªs
.
defd«me
)) == 0 &&

175 (
˝
 = 
	`ödex
(
buf
, '.')))

176 ()
	`°r˝y
(
_ªs
.
defd«me
, 
˝
 + 1);

180 i‡(
have£¨ch
 == 0) {

181 
µ
 = 
_ªs
.
dn§ch
;

182 *
µ
++ = 
_ªs
.
defd«me
;

183 
˝
 = 
_ªs
.
defd«me
, 
n
 = 0; *cp; cp++)

184 i‡(*
˝
 == '.')

185 
n
++;

186 
˝
 = 
_ªs
.
defd«me
;

187 ; 
n
 >
LOCALDOMAINPARTS
 && 
µ
 < 
_ªs
.
dn§ch
 + 
MAXDFLSRCH
;

188 
n
--) {

189 
˝
 = 
	`ödex
(cp, '.');

190 *
µ
++ = ++
˝
;

192 *
µ
++ = 0;

194 
_ªs
.
›ti⁄s
 |
RES_INIT
;

196 
	}
}

	@res_mkquery.c

20 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

21 
	gsccsid
[] = "@(#)res_mkquery.c 6.12 (Berkeley) 6/1/90";

24 #i‡
_MINIX


25 
	~<sys/ty≥s.h
>

26 
	~<°dio.h
>

27 
	~<°dlib.h
>

28 
	~<°rög.h
>

30 
	~<√t/ht⁄.h
>

31 
	~<√t/gí/ö.h
>

32 
	~<√t/gí/«me£r.h
>

33 
	~<√t/gí/ªsﬁv.h
>

35 
u16_t
 
	tu_sh‹t
;

36 
	tu_öt
;

37 
u32_t
 
	tu_l⁄g
;

39 
	#bzîo
(
b
,
l
Ë
	`mem£t
(b,0,l)

	)

40 
	#bc›y
(
s
,
d
,
l
Ë
	`mem˝y
(d,s,l)

	)

42 
	#putsh‹t
 
__putsh‹t


	)

43 
	#pué⁄g
 
__pué⁄g


	)

45 
	~<°dio.h
>

46 
	~<sys/ty≥s.h
>

47 
	~<√töë/ö.h
>

48 
	~<¨∑/«me£r.h
>

49 
	~<ªsﬁv.h
>

52 #ifde‡
__STDC__


53 
	#_CONST
 c⁄°

	)

55 
	#_CONST


	)

62 
	$ªs_mkquîy
(
›
, 
d«me
, 
˛ass
, 
ty≥
, 
d©a
, 
d©Æí
, 
√wº
, 
buf
, 
buÊí
)

63 
›
;

64 
_CONST
 *
d«me
;

65 
˛ass
, 
ty≥
;

66 
_CONST
 *
d©a
;

67 
d©Æí
;

68 
_CONST
 
ºec
 *
√wº
;

69 *
buf
;

70 
buÊí
;

72 
dns_hdr_t
 *
hp
;

73 *
˝
;

74 
n
;

75 *
d≈ås
[10], **
dµ
, **
œ°d≈å
;

77 #ifde‡
DEBUG


78 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

79 
	`¥ötf
("ªs_mkquîy(%d, %s, %d, %d)\n", 
›
, 
d«me
, 
˛ass
, 
ty≥
);

84 i‡((
buf
 =
NULL
Ë|| (
buÊí
 < (
dns_hdr_t
)))

86 
	`bzîo
(
buf
, (
dns_hdr_t
));

87 
hp
 = (
dns_hdr_t
 *Ë
buf
;

88 
hp
->
dh_id
 = 
	`ht⁄s
(++
_ªs
.
id
);

89 
hp
->
dh_Êag1
= 0;

90 
hp
->
dh_Êag2
= 0;

91 
hp
->
dh_Êag1
 |(
›
 << 3Ë& 
DHF_OPCODE
;

92 
hp
->
dh_Êag2
 |((
_ªs
.
›ti⁄s
 & 
RES_PRIMARY
) != 0 ? 1 : 0) << 6;

93 
hp
->
dh_Êag1
 |(
_ªs
.
›ti⁄s
 & 
RES_RECURSE
) != 0 ? 1 : 0;

94 
hp
->
dh_Êag2
 |
NOERROR
 & 
DHF_RCODE
;

95 
˝
 = 
buf
 + (
dns_hdr_t
);

96 
buÊí
 -(
dns_hdr_t
);

97 
dµ
 = 
d≈ås
;

98 *
dµ
++ = 
buf
;

99 *
dµ
++ = 
NULL
;

100 
œ°d≈å
 = 
d≈ås
 + (dnptrs)/(dnptrs[0]);

104 
›
) {

105 
QUERY
:

106 i‡((
buÊí
 -
QFIXEDSZ
) < 0)

108 i‡((
n
 = 
	`dn_comp
((
u8_t
 *)
d«me
, (u8_à*)
˝
, 
buÊí
,

109 (
u8_t
 **)
d≈ås
, (u8_à**)
œ°d≈å
)) < 0)

111 
˝
 +
n
;

112 
buÊí
 -
n
;

113 
	`putsh‹t
(
ty≥
, (
u8_t
 *)
˝
);

114 
˝
 +(
u_sh‹t
);

115 
	`putsh‹t
(
˛ass
, (
u8_t
 *)
˝
);

116 
˝
 +(
u_sh‹t
);

117 
hp
->
dh_qdcou¡
 = 
	`ht⁄s
(1);

118 i‡(
›
 =
QUERY
 || 
d©a
 =
NULL
)

123 
buÊí
 -
RRFIXEDSZ
;

124 i‡((
n
 = 
	`dn_comp
((
u8_t
 *)
d©a
, (u8_à*)
˝
, 
buÊí
,

125 (
u8_t
 **)
d≈ås
, (u8_à**)
œ°d≈å
)) < 0)

127 
˝
 +
n
;

128 
buÊí
 -
n
;

129 
	`putsh‹t
(
T_NULL
, (
u8_t
 *)
˝
);

130 
˝
 +(
u_sh‹t
);

131 
	`putsh‹t
(
˛ass
, (
u8_t
 *)
˝
);

132 
˝
 +(
u_sh‹t
);

133 
	`pué⁄g
(0, (
u8_t
 *)
˝
);

134 
˝
 +(
u_l⁄g
);

135 
	`putsh‹t
(0, (
u8_t
 *)
˝
);

136 
˝
 +(
u_sh‹t
);

137 
hp
->
dh_¨cou¡
 = 
	`ht⁄s
(1);

140 
IQUERY
:

144 i‡(
buÊí
 < 1 + 
RRFIXEDSZ
 + 
d©Æí
)

146 *
˝
++ = '\0';

147 
	`putsh‹t
(
ty≥
, (
u8_t
 *)
˝
);

148 
˝
 +(
u_sh‹t
);

149 
	`putsh‹t
(
˛ass
, (
u8_t
 *)
˝
);

150 
˝
 +(
u_sh‹t
);

151 
	`pué⁄g
(0, (
u8_t
 *)
˝
);

152 
˝
 +(
u_l⁄g
);

153 
	`putsh‹t
(
d©Æí
, (
u8_t
 *)
˝
);

154 
˝
 +(
u_sh‹t
);

155 i‡(
d©Æí
) {

156 
	`bc›y
(
d©a
, 
˝
, 
d©Æí
);

157 
˝
 +
d©Æí
;

159 
hp
->
dh_™cou¡
 = 
	`ht⁄s
(1);

162 #ifde‡
ALLOW_UPDATES


167 
UPDATEM
:

168 
UPDATEMA
:

170 
UPDATED
:

176 
UPDATEDA
:

177 
buÊí
 -
RRFIXEDSZ
 + 
d©Æí
;

178 i‡((
n
 = 
	`dn_comp
(
d«me
, 
˝
, 
buÊí
, 
d≈ås
, 
œ°d≈å
)) < 0)

180 
˝
 +
n
;

181 
	`putsh‹t
(
ty≥
, 
˝
);

182 
˝
 +(
u_sh‹t
);

183 
	`putsh‹t
(
˛ass
, 
˝
);

184 
˝
 +(
u_sh‹t
);

185 
	`pué⁄g
(0, 
˝
);

186 
˝
 +(
u_l⁄g
);

187 
	`putsh‹t
(
d©Æí
, 
˝
);

188 
˝
 +(
u_sh‹t
);

189 i‡(
d©Æí
) {

190 
	`bc›y
(
d©a
, 
˝
, 
d©Æí
);

191 
˝
 +
d©Æí
;

193 i‡–(
›
 =
UPDATED
Ë|| (› =
UPDATEDA
) ) {

194 
hp
->
™cou¡
 = 
	`ht⁄s
(0);

199 
UPDATEA
:

200 
buÊí
 -
RRFIXEDSZ
 + 
d©Æí
;

201 i‡((
n
 = 
	`dn_comp
(
d«me
, 
˝
, 
buÊí
, 
d≈ås
, 
œ°d≈å
)) < 0)

203 
˝
 +
n
;

204 
	`putsh‹t
(
√wº
->
r_ty≥
, 
˝
);

205 
˝
 +(
u_sh‹t
);

206 
	`putsh‹t
(
√wº
->
r_˛ass
, 
˝
);

207 
˝
 +(
u_sh‹t
);

208 
	`pué⁄g
(0, 
˝
);

209 
˝
 +(
u_l⁄g
);

210 
	`putsh‹t
(
√wº
->
r_size
, 
˝
);

211 
˝
 +(
u_sh‹t
);

212 i‡(
√wº
->
r_size
) {

213 
	`bc›y
(
√wº
->
r_d©a
, 
˝
,Çewº->
r_size
);

214 
˝
 +
√wº
->
r_size
;

216 
hp
->
™cou¡
 = 
	`ht⁄s
(0);

221  (
˝
 - 
buf
);

222 
	}
}

	@res_query.c

20 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

21 
	gsccsid
[] = "@(#)res_query.c 5.7 (Berkeley) 6/1/90";

24 #i‡
_MINIX


25 
	~<sys/ty≥s.h
>

26 
	~<˘y≥.h
>

27 
	~<î∫o.h
>

28 
	~<°dio.h
>

29 
	~<°dlib.h
>

30 
	~<°rög.h
>

32 
	~<√t/ht⁄.h
>

33 
	~<√t/gí/ö.h
>

34 
	~<√t/gí/«me£r.h
>

35 
	~<√t/gí/√tdb.h
>

36 
	~<√t/gí/ªsﬁv.h
>

38 
u8_t
 
	tu_ch¨
;

40 
	#bc›y
(
s
,
d
,
l
Ë
	`mem˝y
(d,s,l)

	)

42 
	#ho°Æüs
 
__ho°Æüs


	)

44 
	~<sys/∑øm.h
>

45 
	~<sys/sockë.h
>

46 
	~<√töë/ö.h
>

47 
	~<˘y≥.h
>

48 
	~<√tdb.h
>

49 
	~<°dio.h
>

50 
	~<î∫o.h
>

51 
	~<°rög.h
>

52 
	~<¨∑/öë.h
>

53 
	~<¨∑/«me£r.h
>

54 
	~<ªsﬁv.h
>

56 
î∫o
;

59 #i‡
__STDC__


60 
	#CONST
 c⁄°

	)

62 
	#CONST


	)

65 #i‡
PACKETSZ
 > 1024

66 
	#MAXPACKET
 
PACKETSZ


	)

68 
	#MAXPACKET
 1024

	)

71 
	gh_î∫o
;

83 
	$ªs_quîy
(
«me
, 
˛ass
, 
ty≥
, 
™swî
, 
™¶í
)

84 *
«me
;

85 
˛ass
, 
ty≥
;

86 
u_ch¨
 *
™swî
;

87 
™¶í
;

89 
buf
[
MAXPACKET
];

90 
dns_hdr_t
 *
hp
;

91 
n
;

93 i‡((
_ªs
.
›ti⁄s
 & 
RES_INIT
Ë=0 && 
	`ªs_öô
() == -1)

95 #ifde‡
DEBUG


96 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

97 
	`¥ötf
("ªs_quîy(%s, %d, %d)\n", 
«me
, 
˛ass
, 
ty≥
);

99 
n
 = 
	`ªs_mkquîy
(
QUERY
, 
«me
, 
˛ass
, 
ty≥
, (*)
NULL
, 0, NULL,

100 
buf
, (buf));

102 i‡(
n
 <= 0) {

103 #ifde‡
DEBUG


104 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

105 
	`¥ötf
("res_query: mkquery failed\n");

107 
h_î∫o
 = 
NO_RECOVERY
;

108  (
n
);

110 
n
 = 
	`ªs_£nd
(
buf
,Ç, (*)
™swî
, 
™¶í
);

111 i‡(
n
 < 0) {

112 #ifde‡
DEBUG


113 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

114 
	`¥ötf
("ªs_quîy: sídÉº‹(%d)\n", 
î∫o
);

116 
h_î∫o
 = 
TRY_AGAIN
;

117 (
n
);

120 
hp
 = (
dns_hdr_t
 *Ë
™swî
;

121 i‡((
hp
->
dh_Êag2
 & 
DHF_RCODE
Ë!
NOERROR
 ||

122 
	`¡ohs
(
hp
->
dh_™cou¡
) == 0) {

123 #ifde‡
DEBUG


124 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

125 
	`¥ötf
("rcode = %d,áncount=%d\n",

126 
hp
->
dh_Êag2
 & 
DHF_RCODE
,

127 
	`¡ohs
(
hp
->
dh_™cou¡
));

129 
hp
->
dh_Êag2
 & 
DHF_RCODE
) {

130 
NXDOMAIN
:

131 
h_î∫o
 = 
HOST_NOT_FOUND
;

133 
SERVFAIL
:

134 
h_î∫o
 = 
TRY_AGAIN
;

136 
NOERROR
:

137 
h_î∫o
 = 
NO_DATA
;

139 
FORMERR
:

140 
NOTIMP
:

141 
REFUSED
:

143 
h_î∫o
 = 
NO_RECOVERY
;

148 (
n
);

149 
	}
}

159 
	$ªs_£¨ch
(
«me
, 
˛ass
, 
ty≥
, 
™swî
, 
™¶í
)

160 *
«me
;

161 
˛ass
, 
ty≥
;

162 
u_ch¨
 *
™swî
;

163 
™¶í
;

165 *
˝
, **
domaö
;

166 
n
, 
ªt
, 
gŸ_nod©a
 = 0;

168 i‡((
_ªs
.
›ti⁄s
 & 
RES_INIT
Ë=0 && 
	`ªs_öô
() == -1)

171 
î∫o
 = 0;

172 
h_î∫o
 = 
HOST_NOT_FOUND
;

173 
˝
 = 
«me
, 
n
 = 0; *cp; cp++)

174 i‡(*
˝
 == '.')

175 
n
++;

176 i‡(
n
 =0 && (
˝
 = 
	`ho°Æüs
(
«me
)))

177  (
	`ªs_quîy
(
˝
, 
˛ass
, 
ty≥
, 
™swî
, 
™¶í
));

185 i‡((
n
 =0 && 
_ªs
.
›ti⁄s
 & 
RES_DEFNAMES
) ||

186 (
n
 !0 && *--
˝
 !'.' && 
_ªs
.
›ti⁄s
 & 
RES_DNSRCH
))

187 
domaö
 = 
_ªs
.
dn§ch
; *domain; domain++) {

188 
ªt
 = 
	`ªs_quîydomaö
(
«me
, *
domaö
, 
˛ass
, 
ty≥
,

189 
™swî
, 
™¶í
);

190 i‡(
ªt
 > 0)

191  (
ªt
);

204 i‡(
î∫o
 =
ECONNREFUSED
) {

205 
h_î∫o
 = 
TRY_AGAIN
;

208 i‡(
h_î∫o
 =
NO_DATA
)

209 
gŸ_nod©a
++;

210 i‡((
h_î∫o
 !
HOST_NOT_FOUND
 && h_î∫ÿ!
NO_DATA
) ||

211 (
_ªs
.
›ti⁄s
 & 
RES_DNSRCH
) == 0)

221 i‡(
n
 && (
ªt
 = 
	`ªs_quîydomaö
(
«me
, (*)
NULL
, 
˛ass
, 
ty≥
,

222 
™swî
, 
™¶í
)) > 0)

223  (
ªt
);

224 i‡(
gŸ_nod©a
)

225 
h_î∫o
 = 
NO_DATA
;

227 
	}
}

234 
	$ªs_quîydomaö
(
«me
, 
domaö
, 
˛ass
, 
ty≥
, 
™swî
, 
™¶í
)

235 *
«me
, *
domaö
;

236 
˛ass
, 
ty≥
;

237 
u_ch¨
 *
™swî
;

238 
™¶í
;

240 
nbuf
[2*
MAXDNAME
+2];

241 *
l⁄g«me
 = 
nbuf
;

242 
n
;

244 #ifde‡
DEBUG


245 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

246 
	`¥ötf
("res_querydomain(%s, %s, %d, %d)\n",

247 
«me
, 
domaö
, 
˛ass
, 
ty≥
);

249 i‡(
domaö
 =
NULL
) {

254 
n
 = 
	`°æí
(
«me
) - 1;

255 i‡(
«me
[
n
] ='.' &&Ç < (
nbuf
) - 1) {

256 
	`bc›y
(
«me
, 
nbuf
, 
n
);

257 
nbuf
[
n
] = '\0';

259 
l⁄g«me
 = 
«me
;

261 ()
	`•rötf
(
nbuf
, "%.*s.%.*s",

262 
MAXDNAME
, 
«me
, MAXDNAME, 
domaö
);

264  (
	`ªs_quîy
(
l⁄g«me
, 
˛ass
, 
ty≥
, 
™swî
, 
™¶í
));

265 
	}
}

268 
	$ho°Æüs
(
«me
)

269 
CONST
 *
«me
;

271 *
C1
, *
C2
;

272 
FILE
 *
Â
;

273 *
fûe
;

274 
buf
[
BUFSIZ
];

275 
abuf
[
MAXDNAME
];

277 
fûe
 = 
	`gëív
("HOSTALIASES");

278 i‡(
fûe
 =
NULL
 || (
Â
 = 
	`f›í
(file, "r")) == NULL)

279  (
NULL
);

280 
buf
[(buf) - 1] = '\0';

281 
	`fgës
(
buf
, (buf), 
Â
)) {

282 
C1
 = 
buf
; *C1 && !
	`is•a˚
(*C1); ++C1);

283 i‡(!*
C1
)

285 *
C1
 = '\0';

286 i‡(!
	`°rˇ£cmp
(
buf
, 
«me
)) {

287 
	`is•a˚
(*++
C1
));

288 i‡(!*
C1
)

290 
C2
 = 
C1
 + 1; *C2 && !
	`is•a˚
(*C2); ++C2);

291 
abuf
[◊bufË- 1] = *
C2
 = '\0';

292 ()
	`°∫˝y
(
abuf
, 
C1
, (abuf) - 1);

293 
	`f˛o£
(
Â
);

294  (
abuf
);

297 
	`f˛o£
(
Â
);

298  (
NULL
);

299 
	}
}

	@res_send.c

34 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

35 
	gsccsid
[] = "@(#)res_send.c 6.27 (Berkeley) 2/24/91";

42 #i‡!
_MINIX


43 
	~<sys/∑øm.h
>

44 
	~<sys/time.h
>

45 
	~<sys/sockë.h
>

46 
	~<sys/uio.h
>

47 
	~<√töë/ö.h
>

48 
	~<¨∑/«me£r.h
>

49 
	~<°dio.h
>

50 
	~<î∫o.h
>

51 
	~<ªsﬁv.h
>

52 
	~<uni°d.h
>

53 
	~<°rög.h
>

57 
	~<sys/ty≥s.h
>

58 
	~<sys/io˘l.h
>

59 
	~<sys/°©.h
>

60 
	~<as£π.h
>

61 
	~<î∫o.h
>

62 
	~<f˙é.h
>

63 
	~<sig«l.h
>

64 
	~<°dio.h
>

65 
	~<°dlib.h
>

66 
	~<°rög.h
>

67 
	~<uni°d.h
>

69 
	~<√t/ht⁄.h
>

71 
	~<√t/√éib.h
>

72 
	~<√t/gí/ö.h
>

73 
	~<√t/gí/öë.h
>

74 
	~<√t/gí/√tdb.h
>

75 
	~<√t/gí/«me£r.h
>

76 
	~<√t/gí/ªsﬁv.h
>

77 
	~<√t/gí/t˝.h
>

78 
	~<√t/gí/t˝_io.h
>

79 
	~<√t/gí/udp.h
>

80 
	~<√t/gí/udp_hdr.h
>

81 
	~<√t/gí/udp_io.h
>

83 
u16_t
 
	tu_sh‹t
;

85 
t˝_c⁄√˘
 
_ARGS
(–
ùaddr_t
 
ho°
, 
T˝p‹t_t
 
p‹t
, *
ãºno
 ));

86 
t˝ù_wrôóŒ
 
_ARGS
(–
fd
, c⁄° *
buf
, 
size_t
 
siz
 ));

87 
udp_c⁄√˘
 
_ARGS
(( ));

88 
udp_£ndto
 
_ARGS
(–
fd
, c⁄° *
buf
, 
buÊí
,

89 
ùaddr_t
 
addr
, 
Udµ‹t_t
 
p‹t
 ));

90 
udp_ª˚ive
 
_ARGS
(–
fd
, *
buf
, 
buÊí
,

91 
time_t
 
timeout
 ));

92 
Æ¨m_h™dÀr
 
_ARGS
(–
sig
 ));

96 
	gs
 = -1;

97 #i‡!
_MINIX


98 
sockaddr
 
	gno_addr
;

100 #i‚de‡
FD_SET


101 
	#NFDBITS
 32

	)

102 
	#FD_SETSIZE
 32

	)

103 
	#FD_SET
(
n
, 
p
Ë(’)->
fds_bôs
[“)/
NFDBITS
] |(1 << (“Ë% NFDBITS)))

	)

104 
	#FD_CLR
(
n
, 
p
Ë(’)->
fds_bôs
[“)/
NFDBITS
] &~(1 << (“Ë% NFDBITS)))

	)

105 
	#FD_ISSET
(
n
, 
p
Ë(’)->
fds_bôs
[“)/
NFDBITS
] & (1 << (“Ë% NFDBITS)))

	)

106 
	#FD_ZERO
(
p
Ë
	`bzîo
((*)’), (*’)))

	)

110 
	$ªs_£nd
(
buf
, 
buÊí
, 
™swî
, 
™¶í
)

111 c⁄° *
buf
;

112 
buÊí
;

113 *
™swî
;

114 
™¶í
;

116 
n
;

117 
åy
, 
v_cúcuô
, 
ª•Àn
, 
ns
;

118 
gŸsomewhîe
 = 0, 
c⁄√˘ed
 = 0;

119 
c⁄ƒe£t
 = 0;

120 #i‡!
_MINIX


121 
u_sh‹t
 
id
, 
Àn
;

123 
u16_t
 
id
, 
Àn
;

125 *
˝
;

126 #i‡!
_MINIX


127 
fd_£t
 
dsmask
;

128 
timevÆ
 
timeout
;

129 
HEADER
 *
hp
 = (HEADER *Ë
buf
;

130 
HEADER
 *
™hp
 = (HEADER *Ë
™swî
;

131 
iovec
 
iov
[2];

133 
time_t
 
timeout
;

134 
dns_hdr_t
 *
hp
 = (dns_hdr_à*Ë
buf
;

135 
dns_hdr_t
 *
™hp
 = (dns_hdr_à*Ë
™swî
;

137 
ãºno
 = 
ETIMEDOUT
;

138 
junk
[512];

140 #ifde‡
DEBUG


141 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
) {

142 
	`¥ötf
("res_send()\n");

143 
	`__p_quîy
(
buf
);

146 i‡(!(
_ªs
.
›ti⁄s
 & 
RES_INIT
))

147 i‡(
	`ªs_öô
() == -1) {

151 
v_cúcuô
 = (
_ªs
.
›ti⁄s
 & 
RES_USEVC
Ë|| 
buÊí
 > 
PACKETSZ
;

152 #i‡!
_MINIX


153 
id
 = 
hp
->id;

155 
id
 = 
hp
->
dh_id
;

160 
åy
 = 0;Åry < 
_ªs
.
ªåy
;Åry++) {

161 
ns
 = 0;Ç†< 
_ªs
.
nscou¡
;Çs++) {

162 #ifde‡
DEBUG


163 #i‡!
_MINIX


164 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

165 
	`¥ötf
("Quîyög sîvî (# %dËaddªs†%s\n", 
ns
+1,

166 
	`öë_¡ﬂ
(
_ªs
.
nßddr_li°
[
ns
].
sö_addr
));

168 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

169 
	`¥ötf
("Quîyög sîvî (# %dËaddªs†%s\n", 
ns
+1,

170 
	`öë_¡ﬂ
(
_ªs
.
nßddr_li°
[
ns
]));

173 
u£vc
:

174 i‡(
v_cúcuô
) {

175 #i‡!
_MINIX


176 
åunˇãd
 = 0;

182 
åy
 = 
_ªs
.
ªåy
;

183 i‡(
s
 < 0) {

184 
s
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

185 i‡(
s
 < 0) {

186 
ãºno
 = 
î∫o
;

187 #ifde‡
DEBUG


188 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

189 
	`≥º‹
("socket (vc) failed");

193 i‡(
	`c⁄√˘
(
s
,

194 (
sockaddr
 *)&(
_ªs
.
nßddr_li°
[
ns
]),

195 (
sockaddr
)) < 0) {

196 
ãºno
 = 
î∫o
;

197 #ifde‡
DEBUG


198 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

199 
	`≥º‹
("connect failed");

201 (Ë
	`˛o£
(
s
);

202 
s
 = -1;

209 
Àn
 = 
	`ht⁄s
((
u_sh‹t
)
buÊí
);

210 
iov
[0].
iov_ba£
 = (
ˇddr_t
)&
Àn
;

211 
iov
[0].
iov_Àn
 = (
Àn
);

212 
iov
[1].
iov_ba£
 = (*)
buf
;

213 
iov
[1].
iov_Àn
 = 
buÊí
;

214 i‡(
	`wrôev
(
s
, 
iov
, 2Ë!(
Àn
Ë+ 
buÊí
) {

215 
ãºno
 = 
î∫o
;

216 #ifde‡
DEBUG


217 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

218 
	`≥º‹
("write failed");

220 (Ë
	`˛o£
(
s
);

221 
s
 = -1;

227 
˝
 = 
™swî
;

228 
Àn
 = ();

229 
Àn
 != 0 &&

230 (
n
 = 
	`ªad
(
s
, (*)
˝
, ()
Àn
)) > 0) {

231 
˝
 +
n
;

232 
Àn
 -
n
;

234 i‡(
n
 <= 0) {

235 
ãºno
 = 
î∫o
;

236 #ifde‡
DEBUG


237 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

238 
	`≥º‹
("read failed");

240 (Ë
	`˛o£
(
s
);

241 
s
 = -1;

251 i‡(
ãºno
 =
ECONNRESET
 && !
c⁄ƒe£t
) {

252 
c⁄ƒe£t
 = 1;

253 
ns
--;

257 
˝
 = 
™swî
;

258 i‡((
ª•Àn
 = 
	`¡ohs
(*(
u_sh‹t
 *)
˝
)Ë> 
™¶í
) {

259 #ifde‡
DEBUG


260 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

261 
	`Ârötf
(
°dîr
, "responseÅruncated\n");

263 
Àn
 = 
™¶í
;

264 
åunˇãd
 = 1;

266 
Àn
 = 
ª•Àn
;

267 
Àn
 != 0 &&

268 (
n
 = 
	`ªad
(
s
, (*)
˝
, ()
Àn
)) > 0) {

269 
˝
 +
n
;

270 
Àn
 -
n
;

272 i‡(
n
 <= 0) {

273 
ãºno
 = 
î∫o
;

274 #ifde‡
DEBUG


275 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

276 
	`≥º‹
("read failed");

278 (Ë
	`˛o£
(
s
);

279 
s
 = -1;

282 i‡(
åunˇãd
) {

287 
™hp
->
tc
 = 1;

288 
Àn
 = 
ª•Àn
 - 
™¶í
;

289 
Àn
 != 0) {

290 
n
 = (
Àn
 > (
junk
) ?

291 (
junk
Ë: 
Àn
);

292 i‡((
n
 = 
	`ªad
(
s
, 
junk
,Ç)) > 0)

293 
Àn
 -
n
;

299 
åunˇãd
 = 0;

300 
nbyãs
;

306 
åy
 = 
_ªs
.
ªåy
;

307 i‡(
s
 < 0)

309 
s

	`t˝_c⁄√˘
(
_ªs
.
nßddr_li°
[
ns
],

310 
_ªs
.
n•‹t_li°
[
ns
], &
ãºno
);

311 i‡(
s
 == -1)

317 
Àn
 = 
	`ht⁄s
((
u_sh‹t
)
buÊí
);

318 
nbyãs

	`t˝ù_wrôóŒ
(
s
, (*)&
Àn
,

319 (
Àn
));

320 i‡(
nbyãs
 !(
Àn
))

322 
ãºno

î∫o
;

323 #ifde‡
DEBUG


324 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

325 
	`Ârötf
(
°dîr
, "write failed: %s\n",

326 
	`°ªº‹
(
ãºno
));

328 
	`˛o£
(
s
);

329 
s
= -1;

332 
nbyãs

	`t˝ù_wrôóŒ
(
s
, 
buf
, 
buÊí
);

333 i‡(
nbyãs
 !
buÊí
)

335 
ãºno

î∫o
;

336 #ifde‡
DEBUG


337 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

338 
	`Ârötf
(
°dîr
, "write failed: %s\n",

339 
	`°ªº‹
(
ãºno
));

341 
	`˛o£
(
s
);

342 
s
= -1;

348 
˝
 = 
™swî
;

349 
Àn
 = ();

350 
Àn
 != 0)

352 
n
 = 
	`ªad
(
s
, (*)
˝
, ()
Àn
);

353 i‡(
n
 <= 0)

355 
˝
 +
n
;

356 
	`as£π
(
Àn
 >
n
);

357 
Àn
 -
n
;

359 i‡(
Àn
) {

360 
ãºno
 = 
î∫o
;

361 #ifde‡
DEBUG


362 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

363 
	`Ârötf
(
°dîr
, "read failed: %s\n",

364 
	`°ªº‹
(
ãºno
));

366 
	`˛o£
(
s
);

367 
s
= -1;

377 i‡(
ãºno
 =
ECONNRESET
 && !
c⁄ƒe£t
) {

378 
c⁄ƒe£t
 = 1;

379 
ns
--;

383 
˝
 = 
™swî
;

384 i‡((
ª•Àn
 = 
	`¡ohs
(*(
u_sh‹t
 *)
˝
)Ë> 
™¶í
) {

385 #ifde‡
DEBUG


386 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

387 
	`Ârötf
(
°dîr
, "responseÅruncated\n");

389 
Àn
 = 
™¶í
;

390 
åunˇãd
 = 1;

392 
Àn
 = 
ª•Àn
;

393 
Àn
 != 0)

395 
n

	`ªad
(
s
, (*)
˝
, ()
Àn
);

396 i‡(
n
 <= 0)

398 
˝
 +
n
;

399 
	`as£π
(
Àn
 >
n
);

400 
Àn
 -
n
;

402 i‡(
Àn
) {

403 
ãºno
 = 
î∫o
;

404 #ifde‡
DEBUG


405 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

406 
	`Ârötf
(
°dîr
, "read failed: %s\n",

407 
	`°ªº‹
(
ãºno
));

409 
	`˛o£
(
s
);

410 
s
= -1;

413 i‡(
åunˇãd
) {

418 
™hp
->
dh_Êag1
 |
DHF_TC
;

419 
Àn
 = 
ª•Àn
 - 
™¶í
;

420 
Àn
 != 0) {

421 
n
 = (
Àn
 > (
junk
) ?

422 (
junk
Ë: 
Àn
);

423 
n
 = 
	`ªad
(
s
, 
junk
,Ç);

424 i‡(
n
 <= 0)

426 
	`as£π
(
Àn
 >
n
);

427 
Àn
 -
n
;

435 #i‡!
_MINIX


439 i‡(
s
 < 0) {

440 
s
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

441 i‡(
s
 < 0) {

442 
ãºno
 = 
î∫o
;

443 #ifde‡
DEBUG


444 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

445 
	`≥º‹
("socket (dg) failed");

450 #if 
BSD
 >= 43

467 i‡(
_ªs
.
nscou¡
 =1 || (
åy
 =0 && 
ns
 == 0)) {

473 i‡(
c⁄√˘ed
 == 0) {

474 i‡(
	`c⁄√˘
(
s
, (
sockaddr
 *)&
_ªs
.
nßddr_li°
[
ns
],

475 (
sockaddr
)) < 0) {

476 #ifde‡
DEBUG


477 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

478 
	`≥º‹
("connect");

482 
c⁄√˘ed
 = 1;

484 i‡(
	`£nd
(
s
, 
buf
, 
buÊí
, 0) != buflen) {

485 #ifde‡
DEBUG


486 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

487 
	`≥º‹
("send");

496 i‡(
c⁄√˘ed
) {

497 (Ë
	`c⁄√˘
(
s
, &
no_addr
,

498 (
no_addr
));

499 
c⁄√˘ed
 = 0;

502 i‡(
	`£ndto
(
s
, 
buf
, 
buÊí
, 0,

503 (
sockaddr
 *)&
_ªs
.
nßddr_li°
[
ns
],

504 (
sockaddr
)Ë!
buÊí
) {

505 #ifde‡
DEBUG


506 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

507 
	`≥º‹
("sendto");

511 #if 
BSD
 >= 43

518 
timeout
.
tv_£c
 = (
_ªs
.
ªå™s
 << 
åy
);

519 i‡(
åy
 > 0)

520 
timeout
.
tv_£c
 /
_ªs
.
nscou¡
;

521 i‡(
timeout
.
tv_£c
 <= 0)

522 
timeout
.
tv_£c
 = 1;

523 
timeout
.
tv_u£c
 = 0;

524 
waô
:

525 
	`FD_ZERO
(&
dsmask
);

526 
	`FD_SET
(
s
, &
dsmask
);

527 
n
 = 
	`£À˘
(
s
+1, &
dsmask
, (
fd_£t
 *)
NULL
,

528 (
fd_£t
 *)
NULL
, &
timeout
);

529 i‡(
n
 < 0) {

530 #ifde‡
DEBUG


531 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

532 
	`≥º‹
("select");

536 i‡(
n
 == 0) {

540 #ifde‡
DEBUG


541 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

542 
	`¥ötf
("timeout\n");

544 #i‡
BSD
 >= 43

545 
gŸsomewhîe
 = 1;

549 i‡((
ª•Àn
 = 
	`ªcv
(
s
, 
™swî
, 
™¶í
, 0)) <= 0) {

550 #ifde‡
DEBUG


551 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

552 
	`≥º‹
("recvfrom");

556 
gŸsomewhîe
 = 1;

557 i‡(
id
 !
™hp
->id) {

561 #ifde‡
DEBUG


562 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
) {

563 
	`¥ötf
("oldánswer:\n");

564 
	`__p_quîy
(
™swî
);

567 
waô
;

569 i‡(!(
_ªs
.
›ti⁄s
 & 
RES_IGNTC
Ë&& 
™hp
->
tc
) {

574 #ifde‡
DEBUG


575 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

576 
	`¥ötf
("truncatedánswer\n");

578 (Ë
	`˛o£
(
s
);

579 
s
 = -1;

580 
v_cúcuô
 = 1;

581 
u£vc
;

587 i‡(
s
 < 0) {

588 
s
 = 
	`udp_c⁄√˘
();

589 i‡(
s
 < 0) {

590 
ãºno
 = 
î∫o
;

591 #ifde‡
DEBUG


592 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

593 
	`≥º‹
("udp_connect failed");

598 i‡(
	`udp_£ndto
(
s
, 
buf
, 
buÊí
, 
_ªs
.
nßddr_li°
[
ns
],

599 
_ªs
.
n•‹t_li°
[
ns
]Ë!
buÊí
) {

600 #ifde‡
DEBUG


601 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

602 
	`≥º‹
("sendto");

610 
timeout
(
_ªs
.
ªå™s
 << 
åy
);

611 i‡(
åy
 > 0)

612 
timeout
 /
_ªs
.
nscou¡
;

613 i‡(
timeout
 <= 0)

614 
timeout
= 1;

615 
waô
:

616 i‡((
ª•Àn

	`udp_ª˚ive
(
s
, 
™swî
, 
™¶í
, 
timeout
))

619 i‡(
î∫o
 =
EINTR
)

624 #ifde‡
DEBUG


625 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

626 
	`¥ötf
("timeout\n");

628 
gŸsomewhîe
 = 1;

632 #ifde‡
DEBUG


633 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

634 
	`≥º‹
("udp_receive");

639 
gŸsomewhîe
 = 1;

640 i‡(
id
 !
™hp
->
dh_id
) {

644 #ifde‡
DEBUG


645 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
) {

646 
	`¥ötf
("oldánswer:\n");

647 
	`__p_quîy
(
™swî
);

650 
waô
;

652 i‡(!(
_ªs
.
›ti⁄s
 & 
RES_IGNTC
) &&

653 (
™hp
->
dh_Êag1
 & 
DHF_TC
)) {

658 #ifde‡
DEBUG


659 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
)

660 
	`¥ötf
("truncatedánswer\n");

662 (Ë
	`˛o£
(
s
);

663 
s
 = -1;

664 
v_cúcuô
 = 1;

665 
u£vc
;

669 #ifde‡
DEBUG


670 i‡(
_ªs
.
›ti⁄s
 & 
RES_DEBUG
) {

671 
	`¥ötf
("gotánswer:\n");

672 
	`__p_quîy
(
™swî
);

683 i‡((
v_cúcuô
 &&

684 ((
_ªs
.
›ti⁄s
 & 
RES_USEVC
Ë=0 || 
ns
 != 0)) ||

685 (
_ªs
.
›ti⁄s
 & 
RES_STAYOPEN
) == 0) {

686 (Ë
	`˛o£
(
s
);

687 
s
 = -1;

689  (
ª•Àn
);

692 i‡(
s
 >= 0) {

693 (Ë
	`˛o£
(
s
);

694 
s
 = -1;

696 i‡(
v_cúcuô
 == 0)

697 i‡(
gŸsomewhîe
 == 0)

698 
î∫o
 = 
ECONNREFUSED
;

700 
î∫o
 = 
ETIMEDOUT
;

702 
î∫o
 = 
ãºno
;

704 
	}
}

714 
	$_ªs_˛o£
()

716 i‡(
s
 != -1) {

717 (Ë
	`˛o£
(
s
);

718 
s
 = -1;

720 
	}
}

722 #i‡
_MINIX


723 
	$t˝_c⁄√˘
(
ho°
, 
p‹t
, 
ãºno
)

724 
ùaddr_t
 
ho°
;

725 
t˝p‹t_t
 
p‹t
;

726 *
ãºno
;

728 *
dev_«me
;

729 
fd
;

730 
îr‹
;

731 
nwio_t˝c⁄f_t
 
t˝c⁄f
;

732 
nwio_t˝˛_t
 
˛›t
;

734 
dev_«me

	`gëív
("TCP_DEVICE");

735 i‡(!
dev_«me
)

736 
dev_«me

TCP_DEVICE
;

737 
fd

	`›í
(
dev_«me
, 
O_RDWR
);

738 i‡(
fd
 == -1)

740 *
ãºno

î∫o
;

743 
t˝c⁄f
.
nwtc_Êags

NWTC_EXCL
 | 
NWTC_LP_SEL
 | 
NWTC_SET_RA
 | 
NWTC_SET_RP
;

744 
t˝c⁄f
.
nwtc_ªmaddr

ho°
;

745 
t˝c⁄f
.
nwtc_ªmp‹t

p‹t
;

746 
îr‹

	`io˘l
(
fd
, 
NWIOSTCPCONF
, &
t˝c⁄f
);

747 i‡(
îr‹
 == -1)

749 *
ãºno

î∫o
;

750 
	`˛o£
(
fd
);

753 
˛›t
.
nwt˛_Êags
= 0;

754 
îr‹

	`io˘l
(
fd
, 
NWIOTCPCONN
, &
˛›t
);

755 i‡(
îr‹
 == -1)

757 *
ãºno

î∫o
;

758 
	`˛o£
(
fd
);

761 *
ãºno
= 0;

762  
fd
;

763 
	}
}

765 
	$t˝ù_wrôóŒ
(
fd
, 
buf
, 
siz
)

766 
fd
;

767 c⁄° *
buf
;

768 
size_t
 
siz
;

770 
size_t
 
siz_‹g
;

771 
nbyãs
;

773 
siz_‹g

siz
;

775 
siz
)

777 
nbyãs

	`wrôe
(
fd
, 
buf
, 
siz
);

778 i‡(
nbyãs
 <= 0)

779  
siz_‹g
-
siz
;

780 
	`as£π
(
siz
 >
nbyãs
);

781 
buf
 +
nbyãs
;

782 
siz
 -
nbyãs
;

784  
siz_‹g
;

785 
	}
}

788 
	$udp_c⁄√˘
()

790 
nwio_udp›t_t
 
udp›t
;

791 *
dev_«me
;

792 
fd
, 
r
, 
ãºno
;

794 
dev_«me

	`gëív
("UDP_DEVICE");

795 i‡(!
dev_«me
)

796 
dev_«me

UDP_DEVICE
;

797 
fd

	`›í
(
dev_«me
, 
O_RDWR
);

798 i‡(
fd
 == -1)

801 
udp›t
.
nwuo_Êags

NWUO_COPY
 | 
NWUO_LP_SEL
 | 
NWUO_EN_LOC
 |

802 
NWUO_EN_BROAD
 | 
NWUO_RP_ANY
 | 
NWUO_RA_ANY
 | 
NWUO_RWDATALL
 |

803 
NWUO_DI_IPOPT
;

804 
r

	`io˘l
(
fd
, 
NWIOSUDPOPT
, &
udp›t
);

805 i‡(
r
 == -1)

807 
ãºno

î∫o
;

808 
	`˛o£
(
fd
);

809 
î∫o

ãºno
;

812  
fd
;

813 
	}
}

815 
	$udp_£ndto
(
fd
, 
buf
, 
buÊí
, 
addr
, 
p‹t
)

816 
fd
;

817 c⁄° *
buf
;

818 
buÊí
;

819 
ùaddr_t
 
addr
;

820 
udµ‹t_t
 
p‹t
;

822 *
√wbuf
;

823 
udp_io_hdr_t
 *
udp_io_hdr
;

824 
r
, 
ãºno
;

826 
√wbuf

	`mÆloc
((*
udp_io_hdr
Ë+ 
buÊí
);

827 i‡(
√wbuf
 =
NULL
)

829 
î∫o

ENOMEM
;

832 
udp_io_hdr
(
udp_io_hdr_t
 *)
√wbuf
;

833 
udp_io_hdr
->
uih_d°_addr

addr
;

834 
udp_io_hdr
->
uih_d°_p‹t

p‹t
;

835 
udp_io_hdr
->
uih_ù_›t_Àn
= 0;

836 
udp_io_hdr
->
uih_d©a_Àn

buÊí
;

838 
	`mem˝y
(
√wbuf
 + (*
udp_io_hdr
), 
buf
, 
buÊí
);

839 
r

	`wrôe
(
fd
, 
√wbuf
, (*
udp_io_hdr
Ë+ 
buÊí
);

840 
ãºno

î∫o
;

841 
	`‰ì
(
√wbuf
);

842 i‡(
r
 >(*
udp_io_hdr
))

843 
r
 -(*
udp_io_hdr
);

844 
î∫o

ãºno
;

845  
r
;

846 
	}
}

848 
	$Æ¨m_h™dÀr
(
sig
)

849 
sig
;

851 
	`sig«l
(
SIGALRM
, 
Æ¨m_h™dÀr
);

852 
	`Æ¨m
(1);

853 
	}
}

855 
	$udp_ª˚ive
(
fd
, 
buf
, 
buÊí
, 
timeout
)

856 
fd
;

857 *
buf
;

858 
buÊí
;

859 
time_t
 
timeout
;

861 *
√wbuf
;

862 
udp_io_hdr_t
 *
udp_io_hdr
;

863 
r
, 
ãºno
;

864 (*
u_h™dÀr
Ë
	`_ARGS
(–
sig
 ));

865 
time_t
 
u_timeout
;

867 
√wbuf

	`mÆloc
((*
udp_io_hdr
Ë+ 
buÊí
);

868 i‡(
√wbuf
 =
NULL
)

870 
î∫o

ENOMEM
;

874 
u_h™dÀr

	`sig«l
(
SIGALRM
, 
Æ¨m_h™dÀr
);

875 
u_timeout

	`Æ¨m
(
timeout
);

877 
r

	`ªad
(
fd
, 
√wbuf
, (*
udp_io_hdr
Ë+ 
buÊí
);

878 
ãºno

î∫o
;

880 i‡(
r
 < 0 ||Ñ <(*
udp_io_hdr
))

882 i‡(
r
 > 0)

883 
r
= 0;

884 
	`‰ì
(
√wbuf
);

887 
	`Æ¨m
(0);

888 
	`sig«l
(
SIGALRM
, 
u_h™dÀr
);

889 
	`Æ¨m
(
u_timeout
);

891 
î∫o

ãºno
;

892  
r
;

895 
	`mem˝y
(
buf
, 
√wbuf
 + (*
udp_io_hdr
), 
r
 - (*udp_io_hdr));

896 
	`‰ì
(
√wbuf
);

898 
	`Æ¨m
(0);

899 
	`sig«l
(
SIGALRM
, 
u_h™dÀr
);

900 
	`Æ¨m
(
u_timeout
);

902  
r
-(*
udp_io_hdr
);

903 
	}
}

	@rewind.c

6 
	~<°dio.h
>

7 
	~"loc_ö˛.h
"

10 
	$ªwöd
(
FILE
 *
°ªam
)

12 (Ë
	`f£ek
(
°ªam
, 0L, 
SEEK_SET
);

13 
	`˛óªº
(
°ªam
);

14 
	}
}

	@rindex.c

1 
	~<lib.h
>

4 
	~<°rög.h
>

6 *
	$rödex
(
s
, 
ch¨w™ãd
)

7 
_CONST
 *
s
;

8 
ch¨w™ãd
;

10 (
	`°ºchr
(
s
, 
ch¨w™ãd
));

11 
	}
}

	@rs232.c

6 
	~"kî√l.h
"

7 
	~<ãrmios.h
>

8 
	~<sig«l.h
>

9 
	~"ây.h
"

10 
	~"¥oc.h
"

12 #i‡
NR_RS_LINES
 > 0

14 #i‡(
MACHINE
 !
IBM_PC
Ë&& (MACHINE !
ATARI
)

18 #i‡(
MACHINE
 =
ATARI
)

19 
	~"°addr.h
"

20 
	~"°sound.h
"

21 
	~"°mÂ.h
"

22 #i‡(
NR_RS_LINES
 > 1)

27 #i‡(
MACHINE
 =
IBM_PC
)

30 
	#UART_FREQ
 115200L

	)

33 
	#IE_RECEIVER_READY
 1

	)

34 
	#IE_TRANSMITTER_READY
 2

	)

35 
	#IE_LINE_STATUS_CHANGE
 4

	)

36 
	#IE_MODEM_STATUS_CHANGE
 8

	)

39 
	#IS_MODEM_STATUS_CHANGE
 0

	)

40 
	#IS_TRANSMITTER_READY
 2

	)

41 
	#IS_RECEIVER_READY
 4

	)

42 
	#IS_LINE_STATUS_CHANGE
 6

	)

45 
	#LC_2STOP_BITS
 0x04

	)

46 
	#LC_PARITY
 0x08

	)

47 
	#LC_PAREVEN
 0x10

	)

48 
	#LC_BREAK
 0x40

	)

49 
	#LC_ADDRESS_DIVISOR
 0x80

	)

52 
	#LS_OVERRUN_ERR
 2

	)

53 
	#LS_PARITY_ERR
 4

	)

54 
	#LS_FRAMING_ERR
 8

	)

55 
	#LS_BREAK_INTERRUPT
 0x10

	)

56 
	#LS_TRANSMITTER_READY
 0x20

	)

59 
	#MC_DTR
 1

	)

60 
	#MC_RTS
 2

	)

61 
	#MC_OUT2
 8

	)

64 
	#MS_CTS
 0x10

	)

65 
	#MS_RLSD
 0x80

	)

66 
	#MS_DRLSD
 0x08

	)

74 
	#UART_FREQ
 19200L

	)

77 
	#LS_OVERRUN_ERR
 
R_OE


	)

78 
	#LS_PARITY_ERR
 
R_PE


	)

79 
	#LS_FRAMING_ERR
 
R_FE


	)

80 
	#LS_BREAK_INTERRUPT
 
R_BREAK


	)

83 
	#MS_CTS
 
IO_SCTS


	)

87 
	#DATA_BITS_SHIFT
 8

	)

88 
	#DEF_BAUD
 1200

	)

90 
	#RS_IBUFSIZE
 1024

	)

91 
	#RS_OBUFSIZE
 1024

	)

98 
	#RS_ILOWWATER
 (1 * 
RS_IBUFSIZE
 / 4)

	)

99 
	#RS_IHIGHWATER
 (3 * 
RS_IBUFSIZE
 / 4)

	)

105 
	#RS_OLOWWATER
 (1 * 
RS_OBUFSIZE
 / 4)

	)

107 #i‡(
MACHINE
 =
IBM_PC
)

119 
	#i°¨t
(
rs
Ë\

	)

120 (
out_byã
((
rs
)->
modem_˘l_p‹t
, 
MC_OUT2
 | 
MC_RTS
 | 
MC_DTR
), \

121 (
	grs
)->
	gidevªady
 = 
TRUE
)

122 
	#i°›
(
rs
Ë\

	)

123 (
out_byã
((
rs
)->
modem_˘l_p‹t
, 
MC_OUT2
 | 
MC_DTR
), \

124 (
	grs
)->
	gidevªady
 = 
FALSE
)

129 
	#devªady
(
rs
Ë((
	`ö_byã
‘s->
modem_°©us_p‹t
Ë|Ñs->
˘s
Ë& 
MS_CTS
)

	)

132 
	#txªady
(
rs
Ë(
	`ö_byã
‘s->
löe_°©us_p‹t
Ë& 
LS_TRANSMITTER_READY
)

	)

141 
	#devhup
(
rs
Ë\

	)

142 (
ö_byã
(
rs
->
modem_°©us_p‹t
Ë& (
MS_RLSD
|
MS_DRLSD
) == MS_DRLSD)

154 
	#£t_p‹è
(
msk
,
vÆ
Ë{ 
s
 = 
	`lock
(); \

	)

155 
	gSOUND
->
	gsd_£Ã
 = 
YM_IOA
; \

156 
	gSOUND
->
	gsd_wd©
 = \

157 
SOUND
->
sd_rd©
 & (
msk
Ë| (
vÆ
); \

158 
ª°‹e
(
s
); }

159 
	#i°¨t
(
rs
Ë{ 
	`£t_p‹è
–~(
PA_SRTS
|
PA_SDTR
),0 ); \

	)

160 (
	grs
)->
	gidevªady
 = 
TRUE
; }

161 
	#i°›
(
rs
Ë{ 
	`£t_p‹è
–~
PA_SDTR
, 
PA_SRTS
 ); \

	)

162 (
	grs
)->
	gidevªady
 = 
FALSE
; }

167 
	#devªady
(
rs
Ë((~
MFP
->
mf_gpù
 |Ñs->
˘s
Ë& 
MS_CTS
)

	)

170 
	#txªady
(
rs
Ë(
MFP
->
mf_t§
 & (
T_EMPTY
 | 
T_UE
))

	)

175 
	tboﬁ_t
;

178 
	srs232
 {

179 
ây_t
 *
	mây
;

181 
	micou¡
;

182 *
	mihód
;

183 *
	môaû
;

184 
boﬁ_t
 
	midevªady
;

185 
	m˘s
;

187 
	mo°©e
;

188 
	#ODONE
 1

	)

189 
	#ORAW
 2

	)

190 
	#OWAKEUP
 4

	)

191 
	#ODEVREADY
 
MS_CTS


	)

192 
	#OQUEUED
 0x20

	)

193 
	#OSWREADY
 0x40

	)

194 
	#ODEVHUP
 
MS_RLSD


	)

195 
	#OSOFTBITS
 (
ODONE
 | 
ORAW
 | 
OWAKEUP
 | 
OQUEUED
 | 
OSWREADY
)

	)

197 #i‡(
OSOFTBITS
 | 
ODEVREADY
 | 
ODEVHUP
) == OSOFTBITS

201 
	moxoff
;

202 
boﬁ_t
 
	möhibôed
;

203 
boﬁ_t
 
	mdøö
;

204 
	mocou¡
;

205 *
	mohód
;

206 *
	mŸaû
;

208 #i‡(
MACHINE
 =
IBM_PC
)

209 
p‹t_t
 
	mxmô_p‹t
;

210 
p‹t_t
 
	mªcv_p‹t
;

211 
p‹t_t
 
	mdiv_low_p‹t
;

212 
p‹t_t
 
	mdiv_hi_p‹t
;

213 
p‹t_t
 
	möt_íab_p‹t
;

214 
p‹t_t
 
	möt_id_p‹t
;

215 
p‹t_t
 
	mlöe_˘l_p‹t
;

216 
p‹t_t
 
	mmodem_˘l_p‹t
;

217 
p‹t_t
 
	mlöe_°©us_p‹t
;

218 
p‹t_t
 
	mmodem_°©us_p‹t
;

221 
	ml°©us
;

222 
	m∑d
;

223 
	m‰amög_îr‹s
;

224 
	movîrun_îr‹s
;

225 
	m∑rôy_îr‹s
;

226 
	mbªak_öãºu±s
;

228 
	mibuf
[
RS_IBUFSIZE
];

229 
	mobuf
[
RS_OBUFSIZE
];

230 } 
	trs232_t
;

232 
PUBLIC
 
rs232_t
 
	grs_löes
[
NR_RS_LINES
];

235 
PRIVATE
 
rs232_t
 *
	gp_rs_addr
[
NR_RS_LINES
];

237 
	#rs_addr
(
löe
Ë(
p_rs_addr
[löe])

	)

239 #i‡(
MACHINE
 =
IBM_PC
)

241 
PRIVATE
 
p‹t_t
 
	gaddr_8250
[] = {

247 
FORWARD
 
_PROTOTYPE
–
rs232_1h™dÀr
, (
úq
) );

248 
FORWARD
 
_PROTOTYPE
–
rs232_2h™dÀr
, (
úq
) );

249 
FORWARD
 
_PROTOTYPE
–
ö_öt
, (
rs232_t
 *
rs
) );

250 
FORWARD
 
_PROTOTYPE
–
löe_öt
, (
rs232_t
 *
rs
) );

251 
FORWARD
 
_PROTOTYPE
–
modem_öt
, (
rs232_t
 *
rs
) );

252 
FORWARD
 
_PROTOTYPE
–
rs_wrôe
, (
ây_t
 *
ç
) );

253 
FORWARD
 
_PROTOTYPE
–
rs_echo
, (
ây_t
 *
ç
, 
c
) );

254 
FORWARD
 
_PROTOTYPE
–
rs_io˘l
, (
ây_t
 *
ç
) );

255 
FORWARD
 
_PROTOTYPE
–
rs_c⁄fig
, (
rs232_t
 *
rs
) );

256 
FORWARD
 
_PROTOTYPE
–
rs_ªad
, (
ây_t
 *
ç
) );

257 
FORWARD
 
_PROTOTYPE
–
rs_iˇn˚l
, (
ây_t
 *
ç
) );

258 
FORWARD
 
_PROTOTYPE
–
rs_oˇn˚l
, (
ây_t
 *
ç
) );

259 
FORWARD
 
_PROTOTYPE
–
rs_o°¨t
, (
rs232_t
 *
rs
) );

260 
FORWARD
 
_PROTOTYPE
–
rs_bªak
, (
ây_t
 *
ç
) );

261 
FORWARD
 
_PROTOTYPE
–
out_öt
, (
rs232_t
 *
rs
) );

267 
PRIVATE
 
	$rs_wrôe
(
ç
)

268 
ây_t
 *
ç
;

272 
rs232_t
 *
rs
 = 
ç
->
ây_¥iv
;

273 
cou¡
, 
ocou¡
;

274 
phys_byãs
 
u£r_phys
;

276 i‡(
rs
->
öhibôed
 !
ç
->
ây_öhibôed
) {

278 
	`lock
();

279 
rs
->
o°©e
 |
OSWREADY
;

280 i‡(
ç
->
ây_öhibôed
Ë
rs
->
o°©e
 &~
OSWREADY
;

281 
	`u∆ock
();

282 
rs
->
öhibôed
 = 
ç
->
ây_öhibôed
;

285 i‡(
rs
->
døö
) {

287 i‡(
rs
->
ocou¡
 > 0) ;

288 
rs
->
døö
 = 
FALSE
;

289 
	`rs_c⁄fig
(
rs
);

294 
ocou¡
 = 
	`buÊí
(
rs
->
obuf
) -Ñs->ocount;

295 
cou¡
 = 
	`bu„nd
(
rs
->
obuf
Ë-Ñs->
ohód
;

296 i‡(
cou¡
 > 
ocou¡
) count = ocount;

297 i‡(
cou¡
 > 
ç
->
ây_ouée·
) count =Åp->tty_outleft;

298 i‡(
cou¡
 =0 || 
ç
->
ây_öhibôed
) ;

301 
u£r_phys
 = 
	`¥oc_vú2phys
(
	`¥oc_addr
(
ç
->
ây_ouçroc
),Åp->
ây_out_vú
);

302 
	`phys_c›y
(
u£r_phys
, 
	`vú2phys
(
rs
->
ohód
), (
phys_byãs
Ë
cou¡
);

305 
	`out_¥o˚ss
(
ç
, 
rs
->
obuf
,Ñs->
ohód
, 
	`bu„nd
‘s->obuf), &
cou¡
, &
ocou¡
);

306 i‡(
cou¡
 == 0) ;

309 
ç
->
ây_ª¥öt
 = 
TRUE
;

312 
	`lock
();

313 
rs
->
ocou¡
 += ocount;

314 
	`rs_o°¨t
(
rs
);

315 
	`u∆ock
();

316 i‡((
rs
->
ohód
 +
ocou¡
Ë>
	`bu„nd
‘s->
obuf
))

317 
rs
->
ohód
 -
	`buÊí
‘s->
obuf
);

318 
ç
->
ây_out_vú
 +
cou¡
;

319 
ç
->
ây_outcum
 +
cou¡
;

320 i‡((
ç
->
ây_ouée·
 -
cou¡
) == 0) {

322 
	`ây_ª∂y
(
ç
->
ây_ouåïcode
,Åp->
ây_outˇŒî
,

323 
ç
->
ây_ouçroc
,Åp->
ây_outcum
);

324 
ç
->
ây_outcum
 = 0;

327 
	}
}

333 
PRIVATE
 
	$rs_echo
(
ç
, 
c
)

334 
ây_t
 *
ç
;

335 
c
;

339 
rs232_t
 *
rs
 = 
ç
->
ây_¥iv
;

340 
cou¡
, 
ocou¡
;

342 
ocou¡
 = 
	`buÊí
(
rs
->
obuf
) -Ñs->ocount;

343 i‡(
ocou¡
 == 0) ;

344 
cou¡
 = 1;

345 *
rs
->
ohód
 = 
c
;

347 
	`out_¥o˚ss
(
ç
, 
rs
->
obuf
,Ñs->
ohód
, 
	`bu„nd
‘s->obuf), &
cou¡
, &
ocou¡
);

348 i‡(
cou¡
 == 0) ;

350 
	`lock
();

351 
rs
->
ocou¡
 += ocount;

352 
	`rs_o°¨t
(
rs
);

353 
	`u∆ock
();

354 i‡((
rs
->
ohód
 +
ocou¡
Ë>
	`bu„nd
‘s->
obuf
)Ërs->ohód -
	`buÊí
(rs->obuf);

355 
	}
}

361 
PRIVATE
 
	$rs_io˘l
(
ç
)

362 
ây_t
 *
ç
;

365 
rs232_t
 *
rs
 = 
ç
->
ây_¥iv
;

367 
rs
->
døö
 = 
TRUE
;

368 
	}
}

374 
PRIVATE
 
	$rs_c⁄fig
(
rs
)

375 
rs232_t
 *
rs
;

382 
ây_t
 *
ç
 = 
rs
->
ây
;

383 
divis‹
;

384 
löe_c⁄åﬁs
;

385 
	s•ìd2divis‹
 {

386 
•ìd_t
 
•ìd
;

387 
divis‹
;

388 } 
s2d
[] = {

389 #i‡(
MACHINE
 =
IBM_PC
)

390 { 
B50
, 
UART_FREQ
 / 50 },

392 { 
B75
, 
UART_FREQ
 / 75 },

393 { 
B110
, 
UART_FREQ
 / 110 },

394 { 
B134
, 
UART_FREQ
 * 10 / 1345 },

395 { 
B150
, 
UART_FREQ
 / 150 },

396 { 
B200
, 
UART_FREQ
 / 200 },

397 { 
B300
, 
UART_FREQ
 / 300 },

398 { 
B600
, 
UART_FREQ
 / 600 },

399 { 
B1200
, 
UART_FREQ
 / 1200 },

400 #i‡(
MACHINE
 =
IBM_PC
)

401 { 
B1800
, 
UART_FREQ
 / 1800 },

403 { 
B2400
, 
UART_FREQ
 / 2400 },

404 { 
B4800
, 
UART_FREQ
 / 4800 },

405 { 
B9600
, 
UART_FREQ
 / 9600 },

406 { 
B19200
, 
UART_FREQ
 / 19200 },

407 #i‡(
MACHINE
 =
IBM_PC
)

408 { 
B38400
, 
UART_FREQ
 / 38400 },

409 { 
B57600
, 
UART_FREQ
 / 57600 },

410 { 
B115200
, 
UART_FREQ
 / 115200L },

413 
•ìd2divis‹
 *
s2dp
;

416 
rs
->
oxoff
 = 
ç
->
ây_ãrmios
.
c_cc
[
VSTOP
];

417 
rs
->
˘s
 = (
ç
->
ây_ãrmios
.
c_cÊag
 & 
CLOCAL
Ë? 
MS_CTS
 : 0;

420 
divis‹
 = 0;

421 
s2dp
 = 
s2d
; s2dp < s2d + (s2d)/(s2d[0]); s2dp++) {

422 i‡(
s2dp
->
•ìd
 =
ç
->
ây_ãrmios
.
c_o•ìd
Ë
divis‹
 = s2dp->divisor;

424 i‡(
divis‹
 == 0) ;

426 #i‡(
MACHINE
 =
IBM_PC
)

428 
löe_c⁄åﬁs
 = 0;

429 i‡(
ç
->
ây_ãrmios
.
c_cÊag
 & 
PARENB
) {

430 
löe_c⁄åﬁs
 |
LC_PARITY
;

431 i‡(!(
ç
->
ây_ãrmios
.
c_cÊag
 & 
PARODD
)Ë
löe_c⁄åﬁs
 |
LC_PAREVEN
;

433 i‡(
divis‹
 >(
UART_FREQ
 / 110)Ë
löe_c⁄åﬁs
 |
LC_2STOP_BITS
;

434 
löe_c⁄åﬁs
 |(
ç
->
ây_ãrmios
.
c_cÊag
 & 
CSIZE
) >> 2;

441 
	`lock
();

444 
	`out_byã
(
rs
->
löe_˘l_p‹t
, 
LC_ADDRESS_DIVISOR
);

445 
	`out_byã
(
rs
->
div_low_p‹t
, 
divis‹
);

446 
	`out_byã
(
rs
->
div_hi_p‹t
, 
divis‹
 >> 8);

449 
	`out_byã
(
rs
->
löe_˘l_p‹t
, 
löe_c⁄åﬁs
);

451 
rs
->
o°©e
 |
ORAW
;

452 i‡((
ç
->
ây_ãrmios
.
c_lÊag
 & 
IXON
Ë&& 
rs
->
oxoff
 !
_POSIX_VDISABLE
)

453 
rs
->
o°©e
 &~
ORAW
;

455 
	`u∆ock
();

459 
löe_c⁄åﬁs
 = 
U_Q16
;

460 i‡(
ç
->
ây_ãrmios
.
c_cÊag
 & 
PARENB
) {

461 
löe_c⁄åﬁs
 |
U_PAR
;

462 i‡(!(
ç
->
ây_ãrmios
.
c_cÊag
 & 
PARODD
)Ë
löe_c⁄åﬁs
 |
U_EVEN
;

464 
löe_c⁄åﬁs
 |(
divis‹
 >(
UART_FREQ
 / 110)Ë? 
U_ST2
 : 
U_ST1
;

466 
ç
->
ây_ãrmios
.
c_cÊag
 & 
CSIZE
) {

467 
CS5
: 
löe_c⁄åﬁs
 |
U_D5
; ;

468 
CS5
: 
löe_c⁄åﬁs
 |
U_D6
; ;

469 
CS5
: 
löe_c⁄åﬁs
 |
U_D7
; ;

470 
CS5
: 
löe_c⁄åﬁs
 |
U_D8
; ;

472 
	`lock
();

473 
MFP
->
mf_u¸
 = 
löe_c⁄åﬁs
;

474 
MFP
->
mf_tddr
 = 
divis‹
;

475 
	`u∆ock
();

477 
	}
}

483 
PUBLIC
 
	$rs_öô
(
ç
)

484 
ây_t
 *
ç
;

488 
rs232_t
 *
rs
;

489 
löe
;

490 #i‡(
MACHINE
 =
IBM_PC
)

491 
p‹t_t
 
this_8250
;

492 
úq
;

493 
v
;

497 
löe
 = 
ç
 - &
ây_èbÀ
[
NR_CONS
];

498 
rs
 = 
ç
->
ây_¥iv
 = &
rs_löes
[
löe
];

499 
rs
->
ây
 = 
ç
;

502 
rs
->
ihód
 =Ñs->
ôaû
 =Ñs->
ibuf
;

504 #i‡(
MACHINE
 =
IBM_PC
)

506 
this_8250
 = 
addr_8250
[
löe
];

507 
rs
->
xmô_p‹t
 = 
this_8250
 + 0;

508 
rs
->
ªcv_p‹t
 = 
this_8250
 + 0;

509 
rs
->
div_low_p‹t
 = 
this_8250
 + 0;

510 
rs
->
div_hi_p‹t
 = 
this_8250
 + 1;

511 
rs
->
öt_íab_p‹t
 = 
this_8250
 + 1;

512 
rs
->
öt_id_p‹t
 = 
this_8250
 + 2;

513 
rs
->
löe_˘l_p‹t
 = 
this_8250
 + 3;

514 
rs
->
modem_˘l_p‹t
 = 
this_8250
 + 4;

515 
rs
->
löe_°©us_p‹t
 = 
this_8250
 + 5;

516 
rs
->
modem_°©us_p‹t
 = 
this_8250
 + 6;

532 
	`i°›
(
rs
);

533 
	`rs_c⁄fig
(
rs
);

534 #i‡(
MACHINE
 =
IBM_PC
)

535 
	`out_byã
(
rs
->
öt_íab_p‹t
, 0);

542 #i‡(
MACHINE
 =
IBM_PC
)

543 
	`ö_byã
(
rs
->
löe_°©us_p‹t
);

544 
	`ö_byã
(
rs
->
ªcv_p‹t
);

546 
rs
->
o°©e
 = 
	`devªady
‘sË| 
ORAW
 | 
OSWREADY
;

547 
rs
->
ohód
 =Ñs->
Ÿaû
 =Ñs->
obuf
;

549 #i‡(
MACHINE
 =
IBM_PC
)

551 
úq
 = (
löe
 & 1Ë? 
SECONDARY_IRQ
 : 
RS232_IRQ
;

553 #i‡
ENABLE_NETWORKING


555 
v
 = 
ETHER_IRQ
;

556 
	`ív_∑r£
("DPETH0", "x:d:x", 1, &
v
, 0L, (Ë
NR_IRQ_VECTORS
-1)) {

557 
EP_ON
:

558 
EP_SET
:

559 i‡(
v
 =
úq
) ;

563 
	`put_úq_h™dÀr
(
úq
, (
löe
 & 1Ë? 
rs232_2h™dÀr
 : 
rs232_1h™dÀr
);

564 
	`íabÀ_úq
(
úq
);

565 
	`out_byã
(
rs
->
öt_íab_p‹t
, 
IE_LINE_STATUS_CHANGE
 | 
IE_MODEM_STATUS_CHANGE


566 | 
IE_RECEIVER_READY
 | 
IE_TRANSMITTER_READY
);

569 
MFP
->
mf_s¸
 = 0x00;

570 
MFP
->
mf_tcd¸
 |
T_Q004
;

571 
MFP
->
mf_r§
 = 
R_ENA
;

572 
MFP
->
mf_t§
 = 
T_ENA
;

573 
MFP
->
mf_´r
 = (MFP->mf_´∏| (
IO_SCTS
|
IO_SDCD
)) ^

574 (
MFP
->
mf_gpù
 & (
IO_SCTS
|
IO_SDCD
));

575 
MFP
->
mf_ddr
 = (MFP->mf_dd∏& ~ (
IO_SCTS
|
IO_SDCD
));

576 
MFP
->
mf_õø
 |(
IA_RRDY
|
IA_RERR
|
IA_TRDY
|
IA_TERR
);

577 
MFP
->
mf_imø
 |(
IA_RRDY
|
IA_RERR
|
IA_TRDY
|
IA_TERR
);

578 
MFP
->
mf_õrb
 |(
IB_SCTS
|
IB_SDCD
);

579 
MFP
->
mf_imrb
 |(
IB_SCTS
|
IB_SDCD
);

583 
ç
->
ây_devªad
 = 
rs_ªad
;

584 
ç
->
ây_devwrôe
 = 
rs_wrôe
;

585 
ç
->
ây_echo
 = 
rs_echo
;

586 
ç
->
ây_iˇn˚l
 = 
rs_iˇn˚l
;

587 
ç
->
ây_oˇn˚l
 = 
rs_oˇn˚l
;

588 
ç
->
ây_io˘l
 = 
rs_io˘l
;

589 
ç
->
ây_bªak
 = 
rs_bªak
;

592 
	`i°¨t
(
rs
);

593 
	}
}

599 
PRIVATE
 
	$rs_iˇn˚l
(
ç
)

600 
ây_t
 *
ç
;

603 
rs232_t
 *
rs
 = 
ç
->
ây_¥iv
;

605 
	`lock
();

606 
rs
->
icou¡
 = 0;

607 
rs
->
ôaû
 =Ñs->
ihód
;

608 
	`i°¨t
(
rs
);

609 
	`u∆ock
();

610 
	}
}

616 
PRIVATE
 
	$rs_oˇn˚l
(
ç
)

617 
ây_t
 *
ç
;

620 
rs232_t
 *
rs
 = 
ç
->
ây_¥iv
;

622 
	`lock
();

623 
rs
->
o°©e
 &~(
ODONE
 | 
OQUEUED
);

624 
rs
->
ocou¡
 = 0;

625 
rs
->
Ÿaû
 =Ñs->
ohód
;

626 
	`u∆ock
();

627 
	}
}

633 
PRIVATE
 
	$rs_ªad
(
ç
)

634 
ây_t
 *
ç
;

638 
rs232_t
 *
rs
 = 
ç
->
ây_¥iv
;

639 
icou¡
, 
cou¡
, 
o°©e
;

641 i‡(!(
ç
->
ây_ãrmios
.
c_cÊag
 & 
CLOCAL
)) {

643 
	`lock
();

644 
o°©e
 = 
rs
->ostate;

645 
rs
->
o°©e
 &~
ODEVHUP
;

646 
	`u∆ock
();

647 i‡(
o°©e
 & 
ODEVHUP
Ë{ 
	`sigch¨
(
ç
, 
SIGHUP
); ; }

650 (
cou¡
 = 
rs
->
icou¡
) > 0) {

651 
icou¡
 = 
	`bu„nd
(
rs
->
ibuf
Ë-Ñs->
ôaû
;

652 i‡(
cou¡
 > 
icou¡
) count = icount;

655 i‡((
cou¡
 = 
	`ö_¥o˚ss
(
ç
, 
rs
->
ôaû
, count)) == 0) ;

657 
	`lock
();

658 
rs
->
icou¡
 -
cou¡
;

659 i‡(!
rs
->
idevªady
 &&Ñs->
icou¡
 < 
RS_ILOWWATER
Ë
	`i°¨t
(rs);

660 
	`u∆ock
();

661 i‡((
rs
->
ôaû
 +
cou¡
Ë=
	`bu„nd
‘s->
ibuf
))Ñs->itail =Ñs->ibuf;

663 
	}
}

669 
PRIVATE
 
	$rs_o°¨t
(
rs
)

670 
rs232_t
 *
rs
;

674 
rs
->
o°©e
 |
OQUEUED
;

675 i‡(
	`txªady
(
rs
)Ë
	`out_öt
(rs);

676 
	}
}

682 
PRIVATE
 
	$rs_bªak
(
ç
)

683 
ây_t
 *
ç
;

686 
rs232_t
 *
rs
 = 
ç
->
ây_¥iv
;

687 
löe_c⁄åﬁs
;

689 
löe_c⁄åﬁs
 = 
	`ö_byã
(
rs
->
löe_˘l_p‹t
);

690 
	`out_byã
(
rs
->
löe_˘l_p‹t
, 
löe_c⁄åﬁs
 | 
LC_BREAK
);

691 
	`mûli_dñay
(400);

692 
	`out_byã
(
rs
->
löe_˘l_p‹t
, 
löe_c⁄åﬁs
);

693 
	}
}

698 #i‡(
MACHINE
 =
IBM_PC
)

702 
PRIVATE
 
	$rs232_1h™dÀr
(
úq
)

703 
úq
;

709 
rs232_t
 *
rs
 = &
rs_löes
[0];

711 
TRUE
) {

717 
	`ö_byã
(
rs
->
öt_id_p‹t
)) {

718 
IS_RECEIVER_READY
:

719 
	`ö_öt
(
rs
);

721 
IS_TRANSMITTER_READY
:

722 
	`out_öt
(
rs
);

724 
IS_MODEM_STATUS_CHANGE
:

725 
	`modem_öt
(
rs
);

727 
IS_LINE_STATUS_CHANGE
:

728 
	`löe_öt
(
rs
);

733 
	}
}

739 
PRIVATE
 
	$rs232_2h™dÀr
(
úq
)

740 
úq
;

746 
rs232_t
 *
rs
 = &
rs_löes
[1];

748 
TRUE
) {

749 
	`ö_byã
(
rs
->
öt_id_p‹t
)) {

750 
IS_RECEIVER_READY
:

751 
	`ö_öt
(
rs
);

753 
IS_TRANSMITTER_READY
:

754 
	`out_öt
(
rs
);

756 
IS_MODEM_STATUS_CHANGE
:

757 
	`modem_öt
(
rs
);

759 
IS_LINE_STATUS_CHANGE
:

760 
	`löe_öt
(
rs
);

765 
	}
}

770 
PRIVATE
 
	$süöt
(
ty≥
)

771 
ty≥
;

778 
code
;

779 
rs232_t
 *
rs
 = &
rs_löes
[0];

780 
s
 = 
	`lock
();

782 
ty≥
 & 0x00FF)

785 
	`ö_öt
(
rs
);

788 
	`löe_öt
(
rs
);

791 
	`out_öt
(
rs
);

794 
code
 = 
MFP
->
mf_t§
;

795 i‡(
code
 & ~(
T_ENA
 | 
T_UE
 | 
T_EMPTY
))

797 
	`¥ötf
("sü:ÅønsmôÉº‹: sètus=%x\r\n", 
code
);

802 
	`modem_öt
(
rs
);

805 
	`ª°‹e
(
s
);

806 
	}
}

813 
PRIVATE
 
	$ö_öt
(
rs
)

814 
rs232_t
 *
rs
;

823 
c
;

825 #i‡(
MACHINE
 =
IBM_PC
)

826 
c
 = 
	`ö_byã
(
rs
->
ªcv_p‹t
);

828 
c
 = 
MFP
->
mf_udr
;

831 i‡(!(
rs
->
o°©e
 & 
ORAW
)) {

832 i‡(
c
 =
rs
->
oxoff
) {

833 
rs
->
o°©e
 &~
OSWREADY
;

835 i‡(!(
rs
->
o°©e
 & 
OSWREADY
)) {

836 
rs
->
o°©e
 |
OSWREADY
;

837 i‡(
	`txªady
(
rs
)Ë
	`out_öt
(rs);

841 i‡(
rs
->
icou¡
 =
	`buÊí
‘s->
ibuf
)) ;

843 i‡(++
rs
->
icou¡
 =
RS_IHIGHWATER
 &&Ñs->
idevªady
Ë
	`i°›
(rs);

844 *
rs
->
ihód
 = 
c
;

845 i‡(++
rs
->
ihód
 =
	`bu„nd
‘s->
ibuf
))Ñs->ihead =Ñs->ibuf;

846 i‡(
rs
->
icou¡
 == 1) {

847 
rs
->
ây
->
ây_evíts
 = 1;

848 
	`f‹˚_timeout
();

850 
	}
}

856 
PRIVATE
 
	$löe_öt
(
rs
)

857 
rs232_t
 *
rs
;

861 #i‡(
MACHINE
 =
IBM_PC
)

862 
rs
->
l°©us
 = 
	`ö_byã
‘s->
löe_°©us_p‹t
);

864 
rs
->
l°©us
 = 
MFP
->
mf_r§
;

865 
MFP
->
mf_r§
 &
R_ENA
;

866 
rs
->
∑d
 = 
MFP
->
mf_udr
;

868 i‡(
rs
->
l°©us
 & 
LS_FRAMING_ERR
Ë++rs->
‰amög_îr‹s
;

869 i‡(
rs
->
l°©us
 & 
LS_OVERRUN_ERR
Ë++rs->
ovîrun_îr‹s
;

870 i‡(
rs
->
l°©us
 & 
LS_PARITY_ERR
Ë++rs->
∑rôy_îr‹s
;

871 i‡(
rs
->
l°©us
 & 
LS_BREAK_INTERRUPT
Ë++rs->
bªak_öãºu±s
;

872 
	}
}

878 
PRIVATE
 
	$modem_öt
(
rs
)

879 
rs232_t
 *
rs
;

885 #i‡(
MACHINE
 =
ATARI
)

887 
MFP
->
mf_´r
 = (MFP->mf_´∏| (
IO_SCTS
|
IO_SDCD
)) ^

888 (
MFP
->
mf_gpù
 & (
IO_SCTS
|
IO_SDCD
));

891 i‡(
	`devhup
(
rs
)) {

892 
rs
->
o°©e
 |
ODEVHUP
;

893 
rs
->
ây
->
ây_evíts
 = 1;

894 
	`f‹˚_timeout
();

897 i‡(!
	`devªady
(
rs
))

898 
rs
->
o°©e
 &~
ODEVREADY
;

899 i‡(!(
rs
->
o°©e
 & 
ODEVREADY
)) {

900 
rs
->
o°©e
 |
ODEVREADY
;

901 i‡(
	`txªady
(
rs
)Ë
	`out_öt
(rs);

903 
	}
}

909 
PRIVATE
 
	$out_öt
(
rs
)

910 
rs232_t
 *
rs
;

917 i‡(
rs
->
o°©e
 >(
ODEVREADY
 | 
OQUEUED
 | 
OSWREADY
)) {

919 #i‡(
MACHINE
 =
IBM_PC
)

920 
	`out_byã
(
rs
->
xmô_p‹t
, *rs->
Ÿaû
);

922 
MFP
->
mf_udr
 = *
rs
->
Ÿaû
;

924 i‡(++
rs
->
Ÿaû
 =
	`bu„nd
‘s->
obuf
))Ñs->otail =Ñs->obuf;

925 i‡(--
rs
->
ocou¡
 == 0) {

926 
rs
->
o°©e
 ^(
ODONE
 | 
OQUEUED
);

927 
rs
->
ây
->
ây_evíts
 = 1;

928 
	`f‹˚_timeout
();

930 i‡(
rs
->
ocou¡
 =
RS_OLOWWATER
) {

931 
rs
->
ây
->
ây_evíts
 = 1;

932 
	`f‹˚_timeout
();

935 
	}
}

	@sb16.h

1 #i‚de‡
SB16_H


2 
	#SB16_H


	)

4 
	#SB_DEBUG
 0

	)

5 
	#SB_DEBUG_2
 0

	)

7 
	#SB_TIMEOUT
 32000

	)

10 
	#SB_IRQ
 5

	)

11 
	#SB_BASE_ADDR
 0x220

	)

14 
	#SB_DMA_8
 1

	)

15 
	#SB_DMA_16
 5

	)

16 #i‡
_WORD_SIZE
 == 2

17 
	#DMA_SIZE
 8192

	)

19 
	#DMA_SIZE
 32768

	)

23 
	#DEFAULT_SPEED
 22050

	)

24 
	#DEFAULT_BITS
 8

	)

25 
	#DEFAULT_SIGN
 0

	)

26 
	#DEFAULT_STEREO
 0

	)

29 
	#DMA8_ADDR
 ((
SB_DMA_8
 & 3Ë<< 1Ë+ 0x00

	)

30 
	#DMA8_COUNT
 ((
SB_DMA_8
 & 3Ë<< 1Ë+ 0x01

	)

31 
	#DMA8_MASK
 0x0A

	)

32 
	#DMA8_MODE
 0x0B

	)

33 
	#DMA8_CLEAR
 0x0C

	)

39 #i‡
SB_DMA_8
 == 0

40 
	#DMA8_PAGE
 0x87

	)

42 #i‡
SB_DMA_8
 == 1

43 
	#DMA8_PAGE
 0x83

	)

45 #i‡
SB_DMA_8
 == 3

46 
	#DMA8_PAGE
 0x82

	)

52 
	#DMA16_ADDR
 ((
SB_DMA_16
 & 3Ë<< 2Ë+ 0xC0

	)

53 
	#DMA16_COUNT
 ((
SB_DMA_16
 & 3Ë<< 2Ë+ 0xC2

	)

54 
	#DMA16_MASK
 0xD4

	)

55 
	#DMA16_MODE
 0xD6

	)

56 
	#DMA16_CLEAR
 0xD8

	)

62 #i‡
SB_DMA_16
 == 5

63 
	#DMA16_PAGE
 0x8B

	)

65 #i‡
SB_DMA_16
 == 6

66 
	#DMA16_PAGE
 0x89

	)

68 #i‡
SB_DMA_16
 == 7

69 
	#DMA16_PAGE
 0x8A

	)

76 
	#DMA16_AUTO_PLAY
 0x58 + (
SB_DMA_16
 & 3)

	)

77 
	#DMA16_AUTO_REC
 0x54 + (
SB_DMA_16
 & 3)

	)

78 
	#DMA8_AUTO_PLAY
 0x58 + 
SB_DMA_8


	)

79 
	#DMA8_AUTO_REC
 0x54 + 
SB_DMA_8


	)

83 
	#DSP_RESET
 0x6 + 
SB_BASE_ADDR


	)

84 
	#DSP_READ
 0xA + 
SB_BASE_ADDR


	)

85 
	#DSP_WRITE
 0xC + 
SB_BASE_ADDR


	)

86 
	#DSP_COMMAND
 0xC + 
SB_BASE_ADDR


	)

87 
	#DSP_STATUS
 0xC + 
SB_BASE_ADDR


	)

88 
	#DSP_DATA_AVL
 0xE + 
SB_BASE_ADDR


	)

89 
	#DSP_DATA16_AVL
 0xF + 
SB_BASE_ADDR


	)

90 
	#MIXER_REG
 0x4 + 
SB_BASE_ADDR


	)

91 
	#MIXER_DATA
 0x5 + 
SB_BASE_ADDR


	)

92 
	#OPL3_LEFT
 0x0 + 
SB_BASE_ADDR


	)

93 
	#OPL3_RIGHT
 0x2 + 
SB_BASE_ADDR


	)

94 
	#OPL3_BOTH
 0x8 + 
SB_BASE_ADDR


	)

98 
	#DSP_INPUT_RATE
 0x42

	)

99 
	#DSP_OUTPUT_RATE
 0x41

	)

100 
	#DSP_CMD_SPKON
 0xD1

	)

101 
	#DSP_CMD_SPKOFF
 0xD3

	)

102 
	#DSP_CMD_DMA8HALT
 0xD0

	)

103 
	#DSP_CMD_DMA8CONT
 0xD4

	)

104 
	#DSP_CMD_DMA16HALT
 0xD5

	)

105 
	#DSP_CMD_DMA16CONT
 0xD6

	)

106 
	#DSP_GET_VERSION
 0xE1

	)

107 
	#DSP_CMD_8BITAUTO_IN
 0xCE

	)

108 
	#DSP_CMD_8BITAUTO_OUT
 0xC6

	)

109 
	#DSP_CMD_16BITAUTO_IN
 0xBE

	)

110 
	#DSP_CMD_16BITAUTO_OUT
 0xB6

	)

111 
	#DSP_CMD_IRQREQ8
 0xF2

	)

112 
	#DSP_CMD_IRQREQ16
 0xF3

	)

116 
	#DSP_MODE_MONO_US
 0x00

	)

117 
	#DSP_MODE_MONO_S
 0x10

	)

118 
	#DSP_MODE_STEREO_US
 0x20

	)

119 
	#DSP_MODE_STEREO_S
 0x30

	)

123 
	#MIXER_RESET
 0x00

	)

124 
	#MIXER_DAC_LEVEL
 0x04

	)

125 
	#MIXER_MASTER_LEFT
 0x30

	)

126 
	#MIXER_MASTER_RIGHT
 0x31

	)

127 
	#MIXER_DAC_LEFT
 0x32

	)

128 
	#MIXER_DAC_RIGHT
 0x33

	)

129 
	#MIXER_FM_LEFT
 0x34

	)

130 
	#MIXER_FM_RIGHT
 0x35

	)

131 
	#MIXER_CD_LEFT
 0x36

	)

132 
	#MIXER_CD_RIGHT
 0x37

	)

133 
	#MIXER_LINE_LEFT
 0x38

	)

134 
	#MIXER_LINE_RIGHT
 0x39

	)

135 
	#MIXER_MIC_LEVEL
 0x3A

	)

136 
	#MIXER_PC_LEVEL
 0x3B

	)

137 
	#MIXER_OUTPUT_CTRL
 0x3C

	)

138 
	#MIXER_IN_LEFT
 0x3D

	)

139 
	#MIXER_IN_RIGHT
 0x3E

	)

140 
	#MIXER_GAIN_IN_LEFT
 0x3F

	)

141 
	#MIXER_GAIN_IN_RIGHT
 0x40

	)

142 
	#MIXER_GAIN_OUT_LEFT
 0x41

	)

143 
	#MIXER_GAIN_OUT_RIGHT
 0x42

	)

144 
	#MIXER_AGC
 0x43

	)

145 
	#MIXER_TREBLE_LEFT
 0x44

	)

146 
	#MIXER_TREBLE_RIGHT
 0x45

	)

147 
	#MIXER_BASS_LEFT
 0x46

	)

148 
	#MIXER_BASS_RIGHT
 0x47

	)

149 
	#MIXER_SET_IRQ
 0x80

	)

150 
	#MIXER_SET_DMA
 0x81

	)

151 
	#MIXER_IRQ_STATUS
 0x82

	)

154 
	#MIC
 0x01

	)

155 
	#CD_RIGHT
 0x02

	)

156 
	#CD_LEFT
 0x04

	)

157 
	#LINE_RIGHT
 0x08

	)

158 
	#LINE_LEFT
 0x10

	)

159 
	#FM_RIGHT
 0x20

	)

160 
	#FM_LEFT
 0x40

	)

163 
	#DSP_MAX_SPEED
 44100

	)

164 
	#DSP_MIN_SPEED
 4000

	)

165 
	#DSP_MAX_FRAGMENT_SIZE
 
DMA_SIZE


	)

166 
	#DSP_MIN_FRAGMENT_SIZE
 1024

	)

170 
	#dma_byãs_À·
(
phys
Ë\

	)

171 ((Ë((Ë=2 ? 0 : 0x10000Ë- (Ë((
phys
) & 0xFFFF))

175 
_PROTOTYPE
(
mixî_£t
, (
ªg
, 
d©a
));

	@sb16_dsp.c

27 
	~"kî√l.h
"

28 
	~<möix/com.h
>

29 
	~<möix/ˇŒƒ.h
>

30 
	~<sys/io˘l.h
>

31 #i‡
__möix_vmd


32 
	~"¥oc.h
"

33 
	~"c⁄fig.h
"

35 
	~"sb16.h
"

37 #i‡
ENABLE_SB_AUDIO


40 
FORWARD
 
_PROTOTYPE
–
öô_buf„r
, ());

41 
FORWARD
 
_PROTOTYPE
–
d•_öô
, ());

42 
FORWARD
 
_PROTOTYPE
–
d•_h™dÀr
, (
úq
));

43 
FORWARD
 
_PROTOTYPE
–
d•_›í
, (
mesßge
 *
m_±r
));

44 
FORWARD
 
_PROTOTYPE
–
d•_˛o£
, (
mesßge
 *
m_±r
));

45 
FORWARD
 
_PROTOTYPE
–
d•_io˘l
, (
mesßge
 *
m_±r
));

46 
FORWARD
 
_PROTOTYPE
–
d•_wrôe
, (
mesßge
 *
m_±r
));

47 
FORWARD
 
_PROTOTYPE
–
d•_ªad
, (
mesßge
 *
m_±r
));

48 
FORWARD
 
_PROTOTYPE
–
d•_ª£t
, ());

49 
FORWARD
 
_PROTOTYPE
–
d•_comm™d
, (
vÆue
));

50 
FORWARD
 
_PROTOTYPE
–
d•_£t_•ìd
, (
•ìd
));

51 
FORWARD
 
_PROTOTYPE
–
d•_£t_size
, (
size
));

52 
FORWARD
 
_PROTOTYPE
–
d•_£t_°îeo
, (
°îeo
));

53 
FORWARD
 
_PROTOTYPE
–
d•_£t_bôs
, (
bôs
));

54 
FORWARD
 
_PROTOTYPE
–
d•_£t_sign
, (
sign
));

55 
FORWARD
 
_PROTOTYPE
–
d•_dma_£tup
, (
phys_byãs
 
addªss
, 
cou¡
));

56 
FORWARD
 
_PROTOTYPE
–
d•_£tup
, ());

59 #i‡
__möix_vmd


60 
PRIVATE
 
	gD•Taskƒ
 = 
ANY
;

62 
PRIVATE
 
	gD•Vîsi⁄
[2];

63 
PRIVATE
 
	gD•Sãªo
 = 
DEFAULT_STEREO
;

64 
PRIVATE
 
	gD•S≥ed
 = 
DEFAULT_SPEED
;

65 
PRIVATE
 
	gD•Bôs
 = 
DEFAULT_BITS
;

66 
PRIVATE
 
	gD•Sign
 = 
DEFAULT_SIGN
;

67 
PRIVATE
 
	gD•FøgmítSize
 = 
DSP_MAX_FRAGMENT_SIZE
;

68 
PRIVATE
 
	gD•Avaû
 = 0;

69 
PRIVATE
 
	gD•Busy
 = 0;

70 
PRIVATE
 
	gDmaBusy
 = 0;

71 
PRIVATE
 
	gDmaD⁄e
 = 1;

72 
PRIVATE
 
	gDmaMode
 = 0;

74 
PRIVATE
 
	gDmaBuf„r
[()2 * 
DMA_SIZE
];

75 
PRIVATE
 *
	gDmaPå
;

76 
PRIVATE
 
phys_byãs
 
	gDmaPhys
;

82 
PUBLIC
 
	$d•_èsk
()

84 
mesßge
 
mess
;

85 
îr
, 
ˇŒî
, 
¥oc_ƒ
;

87 #i‡
__möix_vmd


88 
D•Taskƒ
 = 
	`¥oc_numbî
(
¥oc_±r
);

92 
	`öô_buf„r
();

97 
TRUE
)

99 
	`ª˚ive
(
ANY
, &
mess
);

101 
ˇŒî
 = 
mess
.
m_sour˚
;

102 
¥oc_ƒ
 = 
mess
.
PROC_NR
;

104 
ˇŒî
)

106 
HARDWARE
:

109 
FS_PROC_NR
:

113 
	`¥ötf
("sb16: gŸ mesßgê‰om %d\n", 
ˇŒî
);

118 
mess
.
m_ty≥
)

120 
DEV_OPEN
: 
îr
 = 
	`d•_›í
(&
mess
);;

121 
DEV_CLOSE
: 
îr
 = 
	`d•_˛o£
(&
mess
);;

122 
DEV_IOCTL
: 
îr
 = 
	`d•_io˘l
(&
mess
);;

123 
DEV_READ
: 
îr
 = 
	`d•_ªad
(&
mess
);;

124 
DEV_WRITE
: 
îr
 = 
	`d•_wrôe
(&
mess
);;

125 : 
îr
 = 
EINVAL
;;

129 
mess
.
m_ty≥
 = 
TASK_REPLY
;

130 
mess
.
REP_PROC_NR
 = 
¥oc_ƒ
;

132 
mess
.
REP_STATUS
 = 
îr
;

133 
	`£nd
(
ˇŒî
, &
mess
);

135 
	}
}

141 
PRIVATE
 
	$öô_buf„r
()

147 
DmaPå
 = 
DmaBuf„r
;

148 
DmaPhys
 = 
	`vú2phys
(
DmaBuf„r
);

150 i‡(
	`dma_byãs_À·
(
DmaPhys
Ë< 
DMA_SIZE
) {

152 
DmaPå
 +
DMA_SIZE
;

153 
DmaPhys
 +
DMA_SIZE
;

155 
	}
}

161 
PRIVATE
 
	$d•_›í
(
m_±r
)

162 
mesßge
 *
m_±r
;

165 #i‡
SB_DEBUG


166 
	`¥ötf
("sb16_open\n");

170 i‡(!
D•Avaû
 && 
	`d•_öô
(Ë!
OK
Ë 
EIO
;

173 i‡(
D•Busy
Ë 
EBUSY
;

176 i‡(
	`d•_ª£t
(Ë!
OK
Ë 
EIO
;

179 
D•Sãªo
 = 
DEFAULT_STEREO
;

180 
D•S≥ed
 = 
DEFAULT_SPEED
;

181 
D•Bôs
 = 
DEFAULT_BITS
;

182 
D•Sign
 = 
DEFAULT_SIGN
;

183 
D•FøgmítSize
 = 
DMA_SIZE
;

185 
D•Busy
 = 1;

186 
DmaBusy
 = 0;

188  
OK
;

189 
	}
}

195 
PRIVATE
 
	$d•_˛o£
(
m_±r
)

196 
mesßge
 *
m_±r
;

199 #i‡
SB_DEBUG


200 
	`¥ötf
("dsp_close\n");

203 
D•Busy
 = 0;

204 
DmaBusy
 = 0;

206  
OK
;

207 
	}
}

213 
PRIVATE
 
	$d•_io˘l
(
m_±r
)

214 
mesßge
 *
m_±r
;

216 
°©us
;

217 
phys_byãs
 
u£r_phys
;

218 
vÆ
;

221 i‡(
DmaBusy
Ë 
EBUSY
;

224 i‡(
m_±r
->
REQUEST
 !
DSPIORESET
)

226 
u£r_phys
 = 
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
Ëm_±r->
ADDRESS
,

228 i‡(
u£r_phys
 =0Ë(
EFAULT
);

229 
	`phys_c›y
(
u£r_phys
, 
	`vú2phys
(&
vÆ
), (
phys_byãs
) (val));

232 #i‡
SB_DEBUG


233 
	`¥ötf
("d•_io˘l: gŸ io˘»%d,árgumít: %d\n", 
m_±r
->
REQUEST
, 
vÆ
);

236 
m_±r
->
REQUEST
)

238 
DSPIORATE
: 
°©us
 = 
	`d•_£t_•ìd
(
vÆ
);;

239 
DSPIOSTEREO
: 
°©us
 = 
	`d•_£t_°îeo
(
vÆ
);;

240 
DSPIOBITS
: 
°©us
 = 
	`d•_£t_bôs
(
vÆ
);;

241 
DSPIOSIZE
: 
°©us
 = 
	`d•_£t_size
(
vÆ
);;

242 
DSPIOSIGN
: 
°©us
 = 
	`d•_£t_sign
(
vÆ
);;

243 
DSPIOMAX
: {

244 
vÆ
 = 
DMA_SIZE
;

245 
	`phys_c›y
(
	`vú2phys
(&
vÆ
), 
u£r_phys
,

246 (
phys_byãs
Ë(
vÆ
));

247 
°©us
 = 
OK
;

249 
DSPIORESET
: 
°©us
 = 
	`d•_ª£t
();;

250 : 
°©us
 = 
ENOTTY
;;

253  
°©us
;

254 
	}
}

260 
PRIVATE
 
	$d•_öô
()

262 
i
;

264 i‡(
	`d•_ª£t
 (Ë!
OK
)

266 
	`¥ötf
("sb16: No SoundBlaster card detected\n");

270 
D•Vîsi⁄
[0] = DspVersion[1] = 0;

271 
	`d•_comm™d
(
DSP_GET_VERSION
);

273 
i
 = 1000; i; i--)

275 i‡(
	`ö_byã
 (
DSP_DATA_AVL
) & 0x80)

277 i‡(
D•Vîsi⁄
[0] == 0)

278 
D•Vîsi⁄
[0] = 
	`ö_byã
 (
DSP_READ
);

281 
D•Vîsi⁄
[1] = 
	`ö_byã
 (
DSP_READ
);

287 i‡(
D•Vîsi⁄
[0] < 4)

289 
	`¥ötf
("sb16: No SoundBlaster 16 compatible card detected\n");

293 
	`¥ötf
 ("sb16: SoundBlaster DSP version %d.%d detected\n",

294 
D•Vîsi⁄
[0], DspVersion[1]);

297 
	`mixî_£t
(
MIXER_SET_IRQ
, (1 << (
SB_IRQ
 / 2 - 1)));

298 
	`mixî_£t
(
MIXER_SET_DMA
, (1 << 
SB_DMA_8
 | 1 << 
SB_DMA_16
));

301 
	`put_úq_h™dÀr
(
SB_IRQ
, 
d•_h™dÀr
);

302 
	`íabÀ_úq
(
SB_IRQ
);

304 
D•Avaû
 = 1;

305  
OK
;

306 
	}
}

312 
PRIVATE
 
	$d•_h™dÀr
(
úq
)

313 
úq
;

316 #i‡
SB_DEBUG2


317 
	`¥ötf
("SoundBœ°î i¡îru± %d\n", 
úq
);

320 i‡(
DmaD⁄e
)

323 
	`d•_comm™d
((
D•Bôs
 =8 ? 
DSP_CMD_DMA8HALT
 : 
DSP_CMD_DMA16HALT
));

325 
DmaBusy
 = 0;

329 #i‡
__möix_vmd


330 
	`öãºu±
(
D•Taskƒ
);

332 
	`öãºu±
(
AUDIO
);

336 (Ë
	`ö_byã
((
D•Bôs
 =8 ? 
DSP_DATA_AVL
 : 
DSP_DATA16_AVL
));

339 
	}
}

345 
PRIVATE
 
	$d•_comm™d
(
vÆue
)

346 
vÆue
;

348 
i
;

350 
i
 = 0; i < 
SB_TIMEOUT
; i++)

352 i‡((
	`ö_byã
 (
DSP_STATUS
) & 0x80) == 0)

354 
	`out_byã
 (
DSP_COMMAND
, 
vÆue
);

355  
OK
;

359 
	`¥ötf
 ("sb16: SoundBœ°î: DSP Comm™d(%xËtimeout\n", 
vÆue
);

361 
	}
}

367 
PRIVATE
 
	$d•_ª£t
()

369 
i
;

371 
	`out_byã
 (
DSP_RESET
, 1);

372 
i
 =0; i<1000; i++);

373 
	`out_byã
 (
DSP_RESET
, 0);

375 
i
 = 0; i < 1000 && !(
	`ö_byã
 (
DSP_DATA_AVL
) & 0x80); i++);

377 i‡(
	`ö_byã
 (
DSP_READ
Ë!0xAAË 
EIO
;

379 
DmaBusy
 = 0;

380 
DmaD⁄e
 = 1;

382  
OK
;

383 
	}
}

389 
	$d•_£t_•ìd
(
•ìd
)

390 
•ìd
;

392 #i‡
SB_DEBUG


393 
	`¥ötf
("sb16: sëtög s≥edÅÿ%u, sãªÿ%d\n", 
•ìd
, 
D•Sãªo
);

396 i‡(
•ìd
 < 
DSP_MIN_SPEED
 || s≥ed > 
DSP_MAX_SPEED
)

397  
EPERM
;

406 
	`lock
();

407 
	`d•_comm™d
(
DSP_INPUT_RATE
);

408 
	`d•_comm™d
(
•ìd
 >> 8);

409 
	`d•_comm™d
(
•ìd
);

410 
	`d•_comm™d
(
DSP_OUTPUT_RATE
);

411 
	`d•_comm™d
(
•ìd
 >> 8);

412 
	`d•_comm™d
(
•ìd
);

413 
	`u∆ock
();

415 
D•S≥ed
 = 
•ìd
;

417  
OK
;

418 
	}
}

424 
	$d•_£t_°îeo
(
°îeo
)

425 
°îeo
;

427 i‡(
°îeo
)

428 
D•Sãªo
 = 1;

430 
D•Sãªo
 = 0;

432  
OK
;

433 
	}
}

439 
	$d•_£t_bôs
(
bôs
)

440 
bôs
;

443 i‡(
bôs
 !8 && bô†!16Ë 
EINVAL
;

445 
D•Bôs
 = 
bôs
;

447  
OK
;

448 
	}
}

454 
	$d•_£t_size
(
size
)

455 
size
;

458 #i‡
SB_DEBUG


459 
	`¥ötf
("sb16: së føgmíàsizêtÿ%u\n", 
size
);

463 i‡(
size
 < 
DSP_MIN_FRAGMENT_SIZE
 ||

464 
size
 > 
DSP_MAX_FRAGMENT_SIZE
 ||

465 
size
 % 2 != 0)

466  
EINVAL
;

468 
D•FøgmítSize
 = 
size
;

470  
OK
;

471 
	}
}

477 
	$d•_£t_sign
(
sign
)

478 
sign
;

481 #i‡
SB_DEBUG


482 
	`¥ötf
("sb16: së sig¿tÿ%u\n", 
sign
);

485 
D•Sign
 = (
sign
 > 0 ? 1 : 0);

487  
OK
;

488 
	}
}

494 
PRIVATE
 
	$d•_dma_£tup
(
addªss
, 
cou¡
)

495 
phys_byãs
 
addªss
;

496 
cou¡
;

499 #i‡
SB_DEBUG


500 
	`¥ötf
("Sëtög u∞%d bô DMA\n", 
D•Bôs
);

503 i‡(
D•Bôs
 == 8)

505 
cou¡
--;

507 
	`lock
();

508 
	`out_byã
(
DMA8_MASK
, 
SB_DMA_8
 | 0x04);

509 
	`out_byã
(
DMA8_CLEAR
, 0x00);

512 
	`out_byã
(
DMA8_MODE
,

513 (
DmaMode
 =
DEV_WRITE
 ? 
DMA8_AUTO_PLAY
 : 
DMA8_AUTO_REC
));

515 
	`out_byã
(
DMA8_ADDR
, 
addªss
 >> 0);

516 
	`out_byã
(
DMA8_ADDR
, 
addªss
 >> 8);

517 
	`out_byã
(
DMA8_PAGE
, 
addªss
 >> 16);

518 
	`out_byã
(
DMA8_COUNT
, 
cou¡
 >> 0);

519 
	`out_byã
(
DMA8_COUNT
, 
cou¡
 >> 8);

520 
	`out_byã
(
DMA8_MASK
, 
SB_DMA_8
);

521 
	`u∆ock
();

525 
cou¡
-= 2;

527 
	`lock
();

528 
	`out_byã
(
DMA16_MASK
, (
SB_DMA_16
 & 3) | 0x04);

529 
	`out_byã
(
DMA16_CLEAR
, 0x00);

532 
	`out_byã
(
DMA16_MODE
,

533 (
DmaMode
 =
DEV_WRITE
 ? 
DMA16_AUTO_PLAY
 : 
DMA16_AUTO_REC
));

535 
	`out_byã
(
DMA16_ADDR
, (
addªss
 >> 1) & 0xFF);

536 
	`out_byã
(
DMA16_ADDR
, (
addªss
 >> 9) & 0xFF);

537 
	`out_byã
(
DMA16_PAGE
, (
addªss
 >> 16) & 0xFE);

538 
	`out_byã
(
DMA16_COUNT
, 
cou¡
 >> 1);

539 
	`out_byã
(
DMA16_COUNT
, 
cou¡
 >> 9);

540 
	`out_byã
(
DMA16_MASK
, 
SB_DMA_16
 & 3);

541 
	`u∆ock
();

543 
	}
}

549 
PRIVATE
 
	$d•_£tup
()

552 
	`d•_£t_•ìd
(
D•S≥ed
);

555 i‡(
DmaMode
 =
DEV_WRITE
)

557 
	`d•_comm™d
 (
DSP_CMD_SPKON
);

560 
	`d•_comm™d
((
D•Bôs
 =8 ? 
DSP_CMD_8BITAUTO_OUT
 : 
DSP_CMD_16BITAUTO_OUT
));

564 
	`d•_comm™d
 (
DSP_CMD_SPKOFF
);

567 
	`d•_comm™d
((
D•Bôs
 =8 ? 
DSP_CMD_8BITAUTO_IN
 : 
DSP_CMD_16BITAUTO_IN
));

571 i‡(!
D•Sign
)

572 
	`d•_comm™d
((
D•Sãªo
 =1 ? 
DSP_MODE_STEREO_US
 : 
DSP_MODE_MONO_US
));

574 
	`d•_comm™d
((
D•Sãªo
 =1 ? 
DSP_MODE_STEREO_S
 : 
DSP_MODE_MONO_S
));

577 i‡(
D•Bôs
 == 8)

580 
	`d•_comm™d
((
D•FøgmítSize
 - 1) >> 0);

581 
	`d•_comm™d
((
D•FøgmítSize
 - 1) >> 8);

586 
	`d•_comm™d
((
D•FøgmítSize
 - 1) >> 1);

587 
	`d•_comm™d
((
D•FøgmítSize
 - 1) >> 9);

589 
	}
}

595 
PRIVATE
 
	$d•_wrôe
(
m_±r
)

596 
mesßge
 *
m_±r
;

598 
phys_byãs
 
u£r_phys
;

599 
mesßge
 
mess
;

601 i‡(
m_±r
->
COUNT
 !
D•FøgmítSize
Ë 
EINVAL
;

604 
u£r_phys
 = 
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
)m_±r->
ADDRESS
, 
D•FøgmítSize
);

605 i‡(
u£r_phys
 =0Ë 
EINVAL
;

607 i‡(
DmaBusy
)

609 i‡(
DmaMode
 !
m_±r
->
m_ty≥
Ë 
EBUSY
;

611 
DmaD⁄e
 = 0;

614 
	`ª˚ive
(
HARDWARE
, &
mess
);

617 
	`phys_c›y
(
u£r_phys
, 
DmaPhys
, (
phys_byãs
Ë
D•FøgmítSize
);

622 
DmaMode
 = 
DEV_WRITE
;

625 
	`phys_c›y
(
u£r_phys
, 
DmaPhys
, (
phys_byãs
Ë
D•FøgmítSize
);

628 
	`d•_dma_£tup
(
DmaPhys
, 
D•FøgmítSize
);

631 
	`d•_£tup
();

633 
DmaBusy
 = 1;

636 
DmaD⁄e
 = 1;

638 (
D•FøgmítSize
);

639 
	}
}

645 
PRIVATE
 
	$d•_ªad
(
m_±r
)

646 
mesßge
 *
m_±r
;

648 
phys_byãs
 
u£r_phys
;

649 
mesßge
 
mess
;

651 i‡(
m_±r
->
COUNT
 !
D•FøgmítSize
Ë 
EINVAL
;

654 
u£r_phys
 = 
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
)m_±r->
ADDRESS
, 
D•FøgmítSize
);

655 i‡(
u£r_phys
 =0Ë 
EINVAL
;

657 i‡(
DmaBusy
)

659 i‡(
DmaMode
 !
m_±r
->
m_ty≥
Ë 
EBUSY
;

661 
DmaD⁄e
 = 0;

664 
	`ª˚ive
(
HARDWARE
, &
mess
);

667 
	`phys_c›y
(
DmaPhys
, 
u£r_phys
, (
phys_byãs
Ë
D•FøgmítSize
);

671 
DmaMode
 = 
DEV_READ
;

674 
	`d•_dma_£tup
(
DmaPhys
, 
D•FøgmítSize
);

677 
	`d•_£tup
();

679 
DmaBusy
 = 1;

680 
DmaD⁄e
 = 0;

683 
	`ª˚ive
(
HARDWARE
, &
mess
);

686 
	`phys_c›y
(
DmaPhys
, 
u£r_phys
, (
phys_byãs
Ë
D•FøgmítSize
);

689 
DmaD⁄e
 = 1;

691 (
D•FøgmítSize
);

692 
	}
}

	@sb16_mixer.c

23 
	~"kî√l.h
"

24 
	~<möix/com.h
>

25 
	~<möix/ˇŒƒ.h
>

26 
	~<sys/io˘l.h
>

27 
	~<möix/sound.h
>

28 #i‡
__möix_vmd


29 
	~"c⁄fig.h
"

31 
	~"sb16.h
"

33 #i‡
ENABLE_SB_AUDIO


36 
FORWARD
 
_PROTOTYPE
–
mixî_öô
, ());

37 
FORWARD
 
_PROTOTYPE
–
mixî_›í
, (
mesßge
 *
m_±r
));

38 
FORWARD
 
_PROTOTYPE
–
mixî_˛o£
, (
mesßge
 *
m_±r
));

39 
FORWARD
 
_PROTOTYPE
–
mixî_io˘l
, (
mesßge
 *
m_±r
));

40 
FORWARD
 
_PROTOTYPE
–
mixî_gë
, (
ªg
));

41 
FORWARD
 
_PROTOTYPE
–
gë_£t_vﬁume
, (
mesßge
 *
m_±r
, 
Êag
));

42 
FORWARD
 
_PROTOTYPE
–
gë_£t_öput
, (
mesßge
 *
m_±r
, 
Êag
, 
ch™√l
));

43 
FORWARD
 
_PROTOTYPE
–
gë_£t_ouçut
, (
mesßge
 *
m_±r
, 
Êag
));

45 
PRIVATE
 
	gmixî_avaû
 = 0;

51 
PUBLIC
 
	$mixî_èsk
()

53 
mesßge
 
mess
;

54 
îr
, 
ˇŒî
, 
¥oc_ƒ
;

59 
TRUE
)

61 
	`ª˚ive
(
ANY
, &
mess
);

63 
ˇŒî
 = 
mess
.
m_sour˚
;

64 
¥oc_ƒ
 = 
mess
.
PROC_NR
;

66 
ˇŒî
)

68 
HARDWARE
:

71 
FS_PROC_NR
:

75 
	`¥ötf
("sb16: gŸ mesßgê‰om %d\n", 
ˇŒî
);

80 
mess
.
m_ty≥
)

82 
DEV_OPEN
: 
îr
 = 
	`mixî_›í
(&
mess
);;

83 
DEV_CLOSE
: 
îr
 = 
	`mixî_˛o£
(&
mess
);;

84 
DEV_IOCTL
: 
îr
 = 
	`mixî_io˘l
(&
mess
);;

85 : 
îr
 = 
EINVAL
;;

89 
mess
.
m_ty≥
 = 
TASK_REPLY
;

90 
mess
.
REP_PROC_NR
 = 
¥oc_ƒ
;

92 
mess
.
REP_STATUS
 = 
îr
;

93 
	`£nd
(
ˇŒî
, &
mess
);

95 
	}
}

101 
PRIVATE
 
	$mixî_›í
(
m_±r
)

102 
mesßge
 *
m_±r
;

105 #i‡
SB_DEBUG


106 
	`¥ötf
("mixer_open\n");

110 i‡(!
mixî_avaû
 && !
	`mixî_öô
(Ë!
OK
Ë 
EIO
;

112  
OK
;

113 
	}
}

119 
PRIVATE
 
	$mixî_˛o£
(
m_±r
)

120 
mesßge
 *
m_±r
;

123 #i‡
SB_DEBUG


124 
	`¥ötf
("mixer_close\n");

127  
OK
;

128 
	}
}

134 
PRIVATE
 
	$mixî_io˘l
(
m_±r
)

135 
mesßge
 *
m_±r
;

137 
°©us
;

139 #i‡
SB_DEBUG


140 
	`¥ötf
("mixî: gŸ io˘»%d\n", 
m_±r
->
REQUEST
);

144 
m_±r
->
REQUEST
)

146 
MIXIOGETVOLUME
: 
°©us
 = 
	`gë_£t_vﬁume
(
m_±r
, 0);;

147 
MIXIOSETVOLUME
: 
°©us
 = 
	`gë_£t_vﬁume
(
m_±r
, 1);;

148 
MIXIOGETINPUTLEFT
: 
°©us
 = 
	`gë_£t_öput
(
m_±r
, 0, 0);;

149 
MIXIOGETINPUTRIGHT
: 
°©us
 = 
	`gë_£t_öput
(
m_±r
, 0, 1);;

150 
MIXIOGETOUTPUT
: 
°©us
 = 
	`gë_£t_ouçut
(
m_±r
, 0);;

151 
MIXIOSETINPUTLEFT
: 
°©us
 = 
	`gë_£t_öput
(
m_±r
, 1, 0);;

152 
MIXIOSETINPUTRIGHT
: 
°©us
 = 
	`gë_£t_öput
(
m_±r
, 1, 1);;

153 
MIXIOSETOUTPUT
: 
°©us
 = 
	`gë_£t_ouçut
(
m_±r
, 1);;

154 : 
°©us
 = 
ENOTTY
;

157  
°©us
;

158 
	}
}

164 
PRIVATE
 
	$mixî_öô
()

170 
	`mixî_£t
(
MIXER_DAC_LEVEL
, 0x10);

171 i‡(
	`mixî_gë
(
MIXER_DAC_LEVEL
) != 0x10)

173 
	`¥ötf
("sb16: MixerÇot detected\n");

174  
EIO
;

178 
	`mixî_£t
(
MIXER_AGC
, 0x01);

180 #i‡
SB_DEBUG


181 
	`¥ötf
("Mixer detected\n");

184 
mixî_avaû
 = 1;

185  
OK
;

186 
	}
}

192 
PUBLIC
 
	$mixî_£t
(
ªg
, 
d©a
)

193 
ªg
;

194 
d©a
;

196 
i
;

198 
	`out_byã
(
MIXER_REG
, 
ªg
);

199 
i
=0;i<100;i++);

200 
	`out_byã
(
MIXER_DATA
, 
d©a
);

202  
OK
;

203 
	}
}

209 
PRIVATE
 
	$mixî_gë
(
ªg
)

210 
ªg
;

212 
i
;

214 
	`out_byã
(
MIXER_REG
, 
ªg
);

215 
i
=0;i<100;i++);

216  (
	`ö_byã
(
MIXER_DATA
) & 0xff);

217 
	}
}

223 
PRIVATE
 
	$gë_£t_vﬁume
(
m_±r
, 
Êag
)

224 
mesßge
 *
m_±r
;

225 
Êag
;

227 
phys_byãs
 
u£r_phys
;

228 
vﬁume_Àvñ
 
Àvñ
;

229 
cmd_À·
, 
cmd_right
, 
shi·
, 
max_Àvñ
;

231 
u£r_phys
 = 
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
Ëm_±r->
ADDRESS
,

232 (
vﬁume_Àvñ
));

233 i‡(
u£r_phys
 =0Ë(
EFAULT
);

234 
	`phys_c›y
(
u£r_phys
, 
	`vú2phys
(&
Àvñ
), (
phys_byãs
) (level));

236 
shi·
 = 3;

237 
max_Àvñ
 = 0x1F;

239 
Àvñ
.
devi˚
)

241 
Ma°î
: { 
cmd_À·
 = 
MIXER_MASTER_LEFT
;

242 
cmd_right
 = 
MIXER_MASTER_RIGHT
;

244 
Dac
: { 
cmd_À·
 = 
MIXER_DAC_LEFT
;

245 
cmd_right
 = 
MIXER_DAC_RIGHT
;

247 
Fm
: { 
cmd_À·
 = 
MIXER_FM_LEFT
;

248 
cmd_right
 = 
MIXER_FM_RIGHT
;

250 
Cd
: { 
cmd_À·
 = 
MIXER_CD_LEFT
;

251 
cmd_right
 = 
MIXER_CD_RIGHT
;

253 
Löe
: { 
cmd_À·
 = 
MIXER_LINE_LEFT
;

254 
cmd_right
 = 
MIXER_LINE_RIGHT
;

256 
Mic
: { 
cmd_À·
 = 
cmd_right
 = 
MIXER_MIC_LEVEL
;

258 
S≥akî
: { 
cmd_À·
 = 
cmd_right
 = 
MIXER_PC_LEVEL
;

259 
shi·
 = 6;

260 
max_Àvñ
 = 0x03;

262 
TªbÀ
: { 
cmd_À·
 = 
MIXER_TREBLE_LEFT
;

263 
cmd_right
 = 
MIXER_TREBLE_RIGHT
;

264 
shi·
 = 4;

265 
max_Àvñ
 = 0x0F;

267 
Bass
: { 
cmd_À·
 = 
MIXER_BASS_LEFT
;

268 
cmd_right
 = 
MIXER_BASS_RIGHT
;

269 
shi·
 = 4;

270 
max_Àvñ
 = 0x0F;

272 :  
EINVAL
;

275 i‡(
Êag
)

277 i‡(
Àvñ
.
right
 < 0)Üevel.right = 0;

278 i‡(
Àvñ
.
right
 > 
max_Àvñ
)Üevel.right = max_level;

279 i‡(
Àvñ
.
À·
 < 0)Üevel.left = 0;

280 i‡(
Àvñ
.
À·
 > 
max_Àvñ
)Üevel.left = max_level;

282 
	`mixî_£t
(
cmd_right
, (
Àvñ
.
right
 << 
shi·
));

283 
	`mixî_£t
(
cmd_À·
, (
Àvñ
.
À·
 << 
shi·
));

287 
Àvñ
.
À·
 = 
	`mixî_gë
(
cmd_À·
);

288 
Àvñ
.
right
 = 
	`mixî_gë
(
cmd_right
);

290 
Àvñ
.
À·
 >>
shi·
;

291 
Àvñ
.
right
 >>
shi·
;

294 
	`phys_c›y
(
	`vú2phys
(&
Àvñ
), 
u£r_phys
, (
phys_byãs
) (level));

297  
OK
;

298 
	}
}

304 
PRIVATE
 
	$gë_£t_öput
(
m_±r
, 
Êag
, 
ch™√l
)

305 
mesßge
 *
m_±r
;

306 
Êag
;

307 
ch™√l
;

309 
phys_byãs
 
u£r_phys
;

310 
öout_˘æ
 
öput
;

311 
öput_cmd
, 
öput_mask
, 
mask
, 
dñ_mask
, 
shi·
;

313 
u£r_phys
 = 
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
Ëm_±r->
ADDRESS
,

314 (
öout_˘æ
));

315 i‡(
u£r_phys
 =0Ë(
EFAULT
);

316 
	`phys_c›y
(
u£r_phys
, 
	`vú2phys
(&
öput
), (
phys_byãs
) (input));

318 
öput_cmd
 = (
ch™√l
 =0 ? 
MIXER_IN_LEFT
 : 
MIXER_IN_RIGHT
);

320 
mask
 = 
	`mixî_gë
(
öput_cmd
);

322 
öput
.
devi˚
)

324 
Fm
: { 
shi·
 = 5;

325 
dñ_mask
 = 0x1F;

327 
Cd
: { 
shi·
 = 1;

328 
dñ_mask
 = 0x79;

330 
Löe
: { 
shi·
 = 3;

331 
dñ_mask
 = 0x67;

333 
Mic
: { 
shi·
 = 0;

334 
dñ_mask
 = 0x7E;

336 :  
EINVAL
;

339 i‡(
Êag
)

341 
öput_mask
 =

342 ((
öput
.
À·
 =
ON
 ? 1 : 0Ë<< 1Ë| (öput.
right
 == ON ? 1 : 0);

344 i‡(
shi·
 > 0)

345 
öput_mask
 <<
shi·
;

347 
öput_mask
 >>= 1;

349 
mask
 &
dñ_mask
;

350 
mask
 |
öput_mask
;

352 
	`mixî_£t
(
öput_cmd
, 
mask
);

356 i‡(
shi·
 > 0)

358 
öput
.
À·
 = ((
mask
 >> (
shi·
+1)Ë& 1 =1 ? 
ON
 : 
OFF
);

359 
öput
.
right
 = ((
mask
 >> 
shi·
Ë& 1 =1 ? 
ON
 : 
OFF
);

362 
öput
.
À·
 = ((
mask
 & 1Ë=1 ? 
ON
 : 
OFF
);

365 
	`phys_c›y
(
	`vú2phys
(&
öput
), 
u£r_phys
, (
phys_byãs
) (input));

368  
OK
;

369 
	}
}

375 
PRIVATE
 
	$gë_£t_ouçut
(
m_±r
, 
Êag
)

376 
mesßge
 *
m_±r
;

377 
Êag
;

379 
phys_byãs
 
u£r_phys
;

380 
öout_˘æ
 
ouçut
;

381 
ouçut_mask
, 
mask
, 
dñ_mask
, 
shi·
;

383 
u£r_phys
 = 
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
Ëm_±r->
ADDRESS
,

384 (
öout_˘æ
));

385 i‡(
u£r_phys
 =0Ë(
EFAULT
);

386 
	`phys_c›y
(
u£r_phys
, 
	`vú2phys
(&
ouçut
), (
phys_byãs
) (output));

388 
mask
 = 
	`mixî_gë
(
MIXER_OUTPUT_CTRL
);

390 
ouçut
.
devi˚
)

392 
Cd
: { 
shi·
 = 1;

393 
dñ_mask
 = 0x79;

395 
Löe
: { 
shi·
 = 3;

396 
dñ_mask
 = 0x67;

398 
Mic
: { 
shi·
 = 0;

399 
dñ_mask
 = 0x7E;

401 :  
EINVAL
;

404 i‡(
Êag
)

406 
ouçut_mask
 =

407 ((
ouçut
.
À·
 =
ON
 ? 1 : 0Ë<< 1Ë| (ouçut.
right
 == ON ? 1 : 0);

409 i‡(
shi·
 > 0)

410 
ouçut_mask
 <<
shi·
;

412 
ouçut_mask
 >>= 1;

414 
mask
 &
dñ_mask
;

415 
mask
 |
ouçut_mask
;

417 
	`mixî_£t
(
MIXER_OUTPUT_CTRL
, 
mask
);

421 i‡(
shi·
 > 0)

423 
ouçut
.
À·
 = ((
mask
 >> (
shi·
+1)Ë& 1 =1 ? 
ON
 : 
OFF
);

424 
ouçut
.
right
 = ((
mask
 >> 
shi·
Ë& 1 =1 ? 
ON
 : 
OFF
);

427 
ouçut
.
À·
 = ((
mask
 & 1Ë=1 ? 
ON
 : 
OFF
);

430 
	`phys_c›y
(
	`vú2phys
(&
ouçut
), 
u£r_phys
, (
phys_byãs
) (output));

433  
OK
;

434 
	}
}

	@sbf4.c

12 
	~"FP_ty≥s.h
"

15 
	$sbf4
(
s2
,
s1
)

16 
SINGLE
 
s1
,
s2
;

18 
EXTEND
 
e1
,
e2
;

20 i‡(
s2
 =(
SINGLE
) 0) {

23 
	`exãnd
(&
s1
,&
e1
,(
SINGLE
));

24 
	`exãnd
(&
s2
,&
e2
,(
SINGLE
));

25 
	`sub_ext
(&
e1
,&
e2
);

26 
	`com∑˘
(&
e1
,&
s1
,(
SINGLE
));

27 
	}
}

	@sbf8.c

12 
	~"FP_ty≥s.h
"

15 
	$sbf8
(
s2
,
s1
)

16 
DOUBLE
 
s1
,
s2
;

18 
EXTEND
 
e1
, 
e2
;

20 i‡(
s2
.
d
[0] == 0 && s2.d[1] == 0) {

23 
	`exãnd
(&
s1
.
d
[0],&
e1
,(
DOUBLE
));

24 
	`exãnd
(&
s2
.
d
[0],&
e2
,(
DOUBLE
));

25 
	`sub_ext
(&
e1
,&
e2
);

26 
	`com∑˘
(&
e1
,&
s1
.
d
[0],(
DOUBLE
));

27 
	}
}

	@scanf.c

6 
	~<°dio.h
>

7 
	~<°d¨g.h
>

8 
	~"loc_ö˛.h
"

11 
	$sˇnf
(c⁄° *
f‹m©
, ...)

13 
va_li°
 
≠
;

14 
ªtvÆ
;

16 
	`va_°¨t
(
≠
, 
f‹m©
);

18 
ªtvÆ
 = 
	`_dosˇn
(
°dö
, 
f‹m©
, 
≠
);

20 
	`va_íd
(
≠
);

22  
ªtvÆ
;

23 
	}
}

	@sconst.h

1 ! 
Mis˚Œ™eous
 
c⁄°™ts
 
u£d
 
ö
 
as£mbÀr
 
	gcode
.

2 
	gW
 = 
_WORD_SIZE
 ! 
Machöe
 
w‹d
 
size
.

4 ! 
Off£ts
 
ö
 
¥oc
. 
They
 
MUST
 
m©ch
Öroc.
h
.

5 
P_STACKBASE
 = 0

6 #i‡
_WORD_SIZE
 == 2

7 
ESREG
 = 
P_STACKBASE


9 
GSREG
 = 
P_STACKBASE


10 
FSREG
 = 
GSREG
 + 2 ! 386 
öåodu˚s
 
FS
 
™d
 
GS
 
£gmíts


11 
ESREG
 = 
FSREG
 + 2

13 
DSREG
 = 
ESREG
 + 2

14 
DIREG
 = 
DSREG
 + 2

15 
SIREG
 = 
DIREG
 + 
W


16 
BPREG
 = 
SIREG
 + 
W


17 
STREG
 = 
BPREG
 + 
W
 ! 
hﬁe
 
™Ÿhî
 
SP


18 
BXREG
 = 
STREG
 + 
W


19 
DXREG
 = 
BXREG
 + 
W


20 
CXREG
 = 
DXREG
 + 
W


21 
AXREG
 = 
CXREG
 + 
W


22 
RETADR
 = 
AXREG
 + 
W
 !  
addªss
 
	$ßve
(Ë
ˇŒ


23 
PCREG
 = 
RETADR
 + 
W


24 
CSREG
 = 
PCREG
 + 
W


25 
PSWREG
 = 
CSREG
 + 
W


26 
SPREG
 = 
PSWREG
 + 
W


27 
SSREG
 = 
SPREG
 + 
W


28 
P_STACKTOP
 = 
SSREG
 + 
W


29 
P_LDT_SEL
 = 
P_STACKTOP


30 
P_LDT
 = 
P_LDT_SEL
 + 
W


32 #i‡
_WORD_SIZE
 == 2

33 
Msize
 = 12 ! 
size
 
of
 
a
 
mesßge
 
ö
 16-
bô
 
w‹ds


35 
Msize
 = 9 ! 
size
 
of
 
a
 
mesßge
 
ö
 32-
bô
 
w‹ds


	@scrreg.c

18 
	~<cur£s.h
>

19 
	~"cur•riv.h
"

26 
	$w£ts¸ªg
(
wö
, 
t›
, 
bŸtom
)

27 
WINDOW
 *
wö
;

28 
t›
;

29 
bŸtom
;

31 i‡((0 <
t›
) &&

32 (
t›
 <
wö
->
_cury
)

34 (
wö
->
_cury
 <
bŸtom
)

36 (
bŸtom
 <
wö
->
_maxy
)

38 
wö
->
_ªgt›
 = 
t›
;

39 
wö
->
_ªgbŸtom
 = 
bŸtom
;

40 (
OK
);

45 (
ERR
);

46 
	}
}

53 
	$£ts¸ªg
(
t›
, 
bŸtom
)

54 
t›
;

55 
bŸtom
;

57 (
	`w£ts¸ªg
(
°ds¸
, 
t›
, 
bŸtom
));

58 
	}
}

	@setbuf.c

6 
	~<°dio.h
>

7 
	~"loc_ö˛.h
"

10 
	$£tbuf
(
FILE
 *
°ªam
, *
buf
)

12 (Ë
	`£tvbuf
(
°ªam
, 
buf
, (bu‡? 
_IOFBF
 : 
_IONBF
), (
size_t
Ë
BUFSIZ
);

13 
	}
}

	@setlocale.c

6 
	~<loˇÀ.h
>

7 
	~<°rög.h
>

9 
lc⁄v
 
	g_lc
;

12 
	$£éoˇÀ
(
ˇãg‹y
, c⁄° *
loˇÀ
)

14 i‡(!
loˇÀ
)  "C";

15 i‡(*
loˇÀ
 && 
	`°rcmp
÷oˇÀ, "C")Ë (*)
NULL
;

17 
ˇãg‹y
) {

18 
LC_ALL
:

19 
LC_CTYPE
:

20 
LC_COLLATE
:

21 
LC_TIME
:

22 
LC_NUMERIC
:

23 
LC_MONETARY
:

24  *
loˇÀ
 ? (*)locale : "C";

26  (*)
NULL
;

28 
	}
}

	@setterm.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

4 
_PROTOTYPE
–
ây£tÊags
, () );

6 
	$ây£tÊags
()

8 
_ây
.
c_iÊag
 |
ICRNL
 | 
IXON
;

9 
_ây
.
c_oÊag
 |
OPOST
 | 
ONLCR
;

10 
_ây
.
c_lÊag
 |
ECHO
 | 
ICANON
 | 
IEXTEN
 | 
ISIG
;

12 i‡(
_cursv¨
.
øwmode
) {

13 
_ây
.
c_iÊag
 &~(
ICRNL
 | 
IXON
);

14 
_ây
.
c_oÊag
 &~(
OPOST
);

15 
_ây
.
c_lÊag
 &~(
ICANON
 | 
IEXTEN
 | 
ISIG
);

17 i‡(
_cursv¨
.
cbrkmode
) {

18 
_ây
.
c_lÊag
 &~(
ICANON
);

20 i‡(!
_cursv¨
.
echoô
) {

21 
_ây
.
c_lÊag
 &~(
ECHO
 | 
ECHONL
);

23 i‡(
NONL
) {

24 
_ây
.
c_iÊag
 &~(
ICRNL
);

25 
_ây
.
c_oÊag
 &~(
ONLCR
);

27 
	`tc£èâr
(0, 
TCSANOW
, &
_ây
);

28 
	}
}

30 
	$øw
()

32 
_cursv¨
.
øwmode
 = 
TRUE
;

33 
	`ây£tÊags
();

34 
	}
}

36 
	$n‹aw
()

38 
_cursv¨
.
øwmode
 = 
FALSE
;

39 
	`ây£tÊags
();

40 
	}
}

42 
	$echo
()

44 
_cursv¨
.
echoô
 = 
TRUE
;

45 
	`ây£tÊags
();

46 
	}
}

48 
	$n€cho
()

50 
_cursv¨
.
echoô
 = 
FALSE
;

51 
	`ây£tÊags
();

52 
	}
}

54 
	$∆
()

56 
NONL
 = 
FALSE
;

57 
	`ây£tÊags
();

58 
	}
}

60 
	$n⁄l
()

62 
NONL
 = 
TRUE
;

63 
	`ây£tÊags
();

64 
	}
}

66 
	$cbªak
()

68 
_cursv¨
.
cbrkmode
 = 
TRUE
;

69 
	`ây£tÊags
();

70 
	}
}

72 
	$nocbªak
()

74 
_cursv¨
.
cbrkmode
 = 
FALSE
;

75 
	`ây£tÊags
();

76 
	}
}

	@setvbuf.c

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

8 
	~"loc_ö˛.h
"

10 (*
_˛ón
)();

13 
	$£tvbuf
(
FILE
 *
°ªam
, *
buf
, 
mode
, 
size_t
 
size
)

15 
ªtvÆ
 = 0;

17 
_˛ón
 = 
__˛ónup
;

18 i‡(
mode
 !
_IOFBF
 && modê!
_IOLBF
 && modê!
_IONBF
)

19  
EOF
;

21 i‡(
°ªam
->
_buf
 && 
	`io_ã°Êag
(°ªam,
_IOMYBUF
) )

22 
	`‰ì
((*)
°ªam
->
_buf
);

24 
°ªam
->
_Êags
 &~(
_IOMYBUF
 | 
_IONBF
 | 
_IOLBF
);

26 i‡(
buf
 && 
size
 <0Ë
ªtvÆ
 = 
EOF
;

27 i‡(!
buf
 && (
mode
 !
_IONBF
)) {

28 i‡(
size
 <0 || (
buf
 = (*Ë
	`mÆloc
(size)Ë=
NULL
) {

29 
ªtvÆ
 = 
EOF
;

31 
°ªam
->
_Êags
 |
_IOMYBUF
;

35 
°ªam
->
_buf
 = (*Ë
buf
;

37 
°ªam
->
_cou¡
 = 0;

38 
°ªam
->
_Êags
 |
mode
;

39 
°ªam
->
_±r
 = såóm->
_buf
;

41 i‡(!
buf
) {

42 
°ªam
->
_bufsiz
 = 1;

44 
°ªam
->
_bufsiz
 = 
size
;

47  
ªtvÆ
;

48 
	}
}

	@sft_ext.c

14 
	~"FP_ty≥s.h
"

17 
	$s·_ext
(
e1
,
e2
)

18 
EXTEND
 *
e1
,*
e2
;

20 
EXTEND
 *
s
;

21 
diff
;

23 
diff
 = 
e1
->
exp
 - 
e2
->exp;

25 i‡(!
diff
)

28 i‡(
diff
 < 0) {

30 
diff
 = -diff;

31 
s
 = 
e1
;

35 
s
 = 
e2
;

37 
s
->
exp
 +
diff
;

38 
	`b64_s·
(&(
s
->
m™tisß
), 
diff
);

39 
	}
}

	@shifter.c

8 
	~"FP_ty≥s.h
"

11 
	$b64_s·
(
e1
,
n
)

12 
B64
 *
e1
;

13 
n
;

15 i‡(
n
 > 0) {

16 i‡(
n
 > 63) {

17 
e1
->
l_32
 = 0;

18 
e1
->
h_32
 = 0;

21 i‡(
n
 >= 32) {

22 
e1
->
l_32
 =É1->
h_32
;

23 
e1
->
h_32
 = 0;

24 
n
 -= 32;

26 i‡(
n
 > 0) {

27 
e1
->
l_32
 >>
n
;

28 i‡(
e1
->
h_32
 != 0) {

29 
e1
->
l_32
 |”1->
h_32
 << (32 - 
n
));

30 
e1
->
h_32
 >>
n
;

35 
n
 = -n;

36 i‡(
n
 > 0) {

37 i‡(
n
 > 63) {

38 
e1
->
l_32
 = 0;

39 
e1
->
h_32
 = 0;

42 i‡(
n
 >= 32) {

43 
e1
->
h_32
 =É1->
l_32
;

44 
e1
->
l_32
 = 0;

45 
n
 -= 32;

47 i‡(
n
 > 0) {

48 
e1
->
h_32
 <<
n
;

49 i‡(
e1
->
l_32
 != 0) {

50 
e1
->
h_32
 |”1->
l_32
 >> (32 - 
n
));

51 
e1
->
l_32
 <<
n
;

55 
	}
}

58 
	$b64_ls·
(
e1
)

59 
B64
 *
e1
;

62 
e1
->
h_32
 <<= 1;

63 i‡(
e1
->
l_32
 & 0x80000000LËe1->
h_32
 |= 1;

64 
e1
->
l_32
 <<= 1;

65 
	}
}

68 
	$b64_rs·
(
e1
)

69 
B64
 *
e1
;

72 
e1
->
l_32
 >>= 1;

73 i‡(
e1
->
h_32
 & 1Ëe1->
l_32
 |= 0x80000000L;

74 
e1
->
h_32
 >>= 1;

75 
	}
}

	@sigmisc.c

6 #if 
deföed
(
_POSIX_SOURCE
)

12 
	~<sys/ty≥s.h
>

13 
	~<sig«l.h
>

14 
	~<°ddef.h
>

16 
_sig¥ocmask
(, 
sig£t_t
 *, sigset_t *);

19 
	$__ã°sig£t
() {

23 (
sig£t_t
) <= (): ;

25 
	}
}

28 
	$__√wsig£t
(
sig£t_t
 *
p
)

31 
	`_sig¥ocmask
(
SIG_SETMASK
, 
NULL
, 
p
);

32 
	}
}

35 
	$__ﬁdsig£t
(
sig£t_t
 *
p
)

37 
	`_sig¥ocmask
(
SIG_SETMASK
, 
p
, 
NULL
);

38 
	}
}

	@signal.c

23 
	~"mm.h
"

24 
	~<sys/°©.h
>

25 
	~<möix/ˇŒƒ.h
>

26 
	~<möix/com.h
>

27 
	~<sig«l.h
>

28 
	~<sys/sigc⁄ãxt.h
>

29 
	~<°rög.h
>

30 
	~"m¥oc.h
"

31 
	~"∑øm.h
"

33 
	#CORE_MODE
 0777

	)

34 
	#DUMPED
 0200

	)

35 
	#DUMP_SIZE
 ((
INT_MAX
 / 
BLOCK_SIZE
Ë* BLOCK_SIZE)

	)

38 
FORWARD
 
_PROTOTYPE
–
check_≥ndög
, () );

39 
FORWARD
 
_PROTOTYPE
–
dump_c‹e
, (
m¥oc
 *
rmp
) );

40 
FORWARD
 
_PROTOTYPE
–
u≈au£
, (
¥o
) );

46 
PUBLIC
 
	$do_siga˘i⁄
()

48 
r
;

49 
siga˘i⁄
 
svec
;

50 
siga˘i⁄
 *
svp
;

52 i‡(
sig_ƒ
 =
SIGKILL
Ë(
OK
);

53 i‡(
sig_ƒ
 < 1 || sig_ƒ > 
_NSIG
Ë (
EINVAL
);

54 
svp
 = &
mp
->
mp_siga˘
[
sig_ƒ
];

55 i‡((
siga˘i⁄
 *Ë
sig_oß
 !(siga˘i⁄ *Ë
NULL
) {

56 
r
 = 
	`sys_c›y
(
MM_PROC_NR
,
D
, (
phys_byãs
Ë
svp
,

57 
who
, 
D
, (
phys_byãs
Ë
sig_oß
, (phys_byãsË(
svec
));

58 i‡(
r
 !
OK
) (r);

61 i‡((
siga˘i⁄
 *Ë
sig_nß
 =(siga˘i⁄ *Ë
NULL
Ë(
OK
);

64 
r
 = 
	`sys_c›y
(
who
, 
D
, (
phys_byãs
Ë
sig_nß
,

65 
MM_PROC_NR
, 
D
, (
phys_byãs
Ë&
svec
, (phys_bytes) (svec));

66 i‡(
r
 !
OK
) (r);

68 i‡(
svec
.
ß_h™dÀr
 =
SIG_IGN
) {

69 
	`sigadd£t
(&
mp
->
mp_ign‹e
, 
sig_ƒ
);

70 
	`sigdñ£t
(&
mp
->
mp_sig≥ndög
, 
sig_ƒ
);

71 
	`sigdñ£t
(&
mp
->
mp_ˇtch
, 
sig_ƒ
);

73 
	`sigdñ£t
(&
mp
->
mp_ign‹e
, 
sig_ƒ
);

74 i‡(
svec
.
ß_h™dÀr
 =
SIG_DFL
)

75 
	`sigdñ£t
(&
mp
->
mp_ˇtch
, 
sig_ƒ
);

77 
	`sigadd£t
(&
mp
->
mp_ˇtch
, 
sig_ƒ
);

79 
mp
->
mp_siga˘
[
sig_ƒ
].
ß_h™dÀr
 = 
svec
.sa_handler;

80 
	`sigdñ£t
(&
svec
.
ß_mask
, 
SIGKILL
);

81 
mp
->
mp_siga˘
[
sig_ƒ
].
ß_mask
 = 
svec
.sa_mask;

82 
mp
->
mp_siga˘
[
sig_ƒ
].
ß_Êags
 = 
svec
.sa_flags;

83 
mp
->
mp_sigªtu∫
 = (
vú_byãs
Ë
sig_ªt
;

84 (
OK
);

85 
	}
}

90 
PUBLIC
 
	$do_sig≥ndög
()

92 
ªt_mask
 = (Ë
mp
->
mp_sig≥ndög
;

93  
OK
;

94 
	}
}

99 
PUBLIC
 
	$do_sig¥ocmask
()

110 
i
;

112 
ªt_mask
 = (Ë
mp
->
mp_sigmask
;

114 
sig_how
) {

115 
SIG_BLOCK
:

116 
	`sigdñ£t
((
sig£t_t
 *)&
sig_£t
, 
SIGKILL
);

117 
i
 = 1; i < 
_NSIG
; i++) {

118 i‡(
	`sigismembî
((
sig£t_t
 *)&
sig_£t
, 
i
))

119 
	`sigadd£t
(&
mp
->
mp_sigmask
, 
i
);

123 
SIG_UNBLOCK
:

124 
i
 = 1; i < 
_NSIG
; i++) {

125 i‡(
	`sigismembî
((
sig£t_t
 *)&
sig_£t
, 
i
))

126 
	`sigdñ£t
(&
mp
->
mp_sigmask
, 
i
);

128 
	`check_≥ndög
();

131 
SIG_SETMASK
:

132 
	`sigdñ£t
((
sig£t_t
 *)&
sig_£t
, 
SIGKILL
);

133 
mp
->
mp_sigmask
 = (
sig£t_t
)
sig_£t
;

134 
	`check_≥ndög
();

137 
SIG_INQUIRE
:

141 (
EINVAL
);

144  
OK
;

145 
	}
}

150 
PUBLIC
 
	$do_sigsu•íd
()

152 
mp
->
mp_sigmask2
 = mp->
mp_sigmask
;

153 
mp
->
mp_sigmask
 = (
sig£t_t
Ë
sig_£t
;

154 
	`sigdñ£t
(&
mp
->
mp_sigmask
, 
SIGKILL
);

155 
mp
->
mp_Êags
 |
SIGSUSPENDED
;

156 
d⁄t_ª∂y
 = 
TRUE
;

157 
	`check_≥ndög
();

158  
OK
;

159 
	}
}

165 
PUBLIC
 
	$do_sigªtu∫
()

171 
r
;

173 
mp
->
mp_sigmask
 = (
sig£t_t
Ë
sig_£t
;

174 
	`sigdñ£t
(&
mp
->
mp_sigmask
, 
SIGKILL
);

176 
r
 = 
	`sys_sigªtu∫
(
who
, (
vú_byãs
)
sig_c⁄ãxt
, 
sig_Êags
);

177 
	`check_≥ndög
();

178 (
r
);

179 
	}
}

184 
PUBLIC
 
	$do_kûl
()

188  
	`check_sig
(
pid
, 
sig_ƒ
);

189 
	}
}

195 
PUBLIC
 
	$do_ksig
()

204 
m¥oc
 *
rmp
;

205 
i
, 
¥oc_ƒ
;

206 
pid_t
 
¥oc_id
, 
id
;

207 
sig£t_t
 
sig_m≠
;

210 i‡(
who
 !
HARDWARE
Ë(
EPERM
);

211 
d⁄t_ª∂y
 = 
TRUE
;

212 
¥oc_ƒ
 = 
mm_ö
.
SIG_PROC
;

213 
rmp
 = &
m¥oc
[
¥oc_ƒ
];

214 i‡–(
rmp
->
mp_Êags
 & 
IN_USE
Ë=0 || (rmp->mp_Êag†& 
HANGING
ËË(
OK
);

215 
¥oc_id
 = 
rmp
->
mp_pid
;

216 
sig_m≠
 = (
sig£t_t
Ë
mm_ö
.
SIG_MAP
;

217 
mp
 = &
m¥oc
[0];

218 
mp
->
mp_¥ocgΩ
 = 
rmp
->mp_procgrp;

227 
i
 = 1; i <
_NSIG
; i++) {

228 i‡(!
	`sigismembî
(&
sig_m≠
, 
i
)) ;

229 
i
) {

230 
SIGINT
:

231 
SIGQUIT
:

232 
id
 = 0; ;

233 
SIGKILL
:

234 
id
 = -1; ;

235 
SIGALRM
:

240 i‡((
rmp
->
mp_Êags
 & 
ALARM_ON
) == 0) ;

241 
rmp
->
mp_Êags
 &~
ALARM_ON
;

244 
id
 = 
¥oc_id
;

247 
	`check_sig
(
id
, 
i
);

248 
	`sys_ídsig
(
¥oc_ƒ
);

250 (
OK
);

251 
	}
}

257 
PUBLIC
 
	$do_Æ¨m
()

261 (
	`£t_Æ¨m
(
who
, 
£c⁄ds
));

262 
	}
}

268 
PUBLIC
 
	$£t_Æ¨m
(
¥oc_ƒ
, 
£c
)

269 
¥oc_ƒ
;

270 
£c
;

276 
mesßge
 
m_sig
;

277 
ªmaöög
;

279 i‡(
£c
 != 0)

280 
m¥oc
[
¥oc_ƒ
].
mp_Êags
 |
ALARM_ON
;

282 
m¥oc
[
¥oc_ƒ
].
mp_Êags
 &~
ALARM_ON
;

300 
m_sig
.
m_ty≥
 = 
SET_ALARM
;

301 
m_sig
.
CLOCK_PROC_NR
 = 
¥oc_ƒ
;

302 
m_sig
.
DELTA_TICKS
 = (
˛ock_t
Ë(
HZ
 * (Ë(Ë
£c
);

303 i‡–(Ë
m_sig
.
DELTA_TICKS
 / 
HZ
 !(Ë
£c
)

304 
m_sig
.
DELTA_TICKS
 = 
LONG_MAX
;

305 i‡(
	`£ndªc
(
CLOCK
, &
m_sig
Ë!
OK
Ë
	`∑nic
("Æ¨mÉr", 
NO_NUM
);

306 
ªmaöög
 = (Ë
m_sig
.
SECONDS_LEFT
;

307 i‡(
ªmaöög
 !
m_sig
.
SECONDS_LEFT
 ||Ñemaining < 0)

308 
ªmaöög
 = 
INT_MAX
;

309 (
ªmaöög
);

310 
	}
}

316 
PUBLIC
 
	$do_∑u£
()

320 
mp
->
mp_Êags
 |
PAUSED
;

321 
d⁄t_ª∂y
 = 
TRUE
;

322 (
OK
);

323 
	}
}

329 
PUBLIC
 
	$do_ªboŸ
()

331 
m¥oc
 *
rmp
 = 
mp
;

332 
m⁄ô‹_code
[64];

334 i‡(
rmp
->
mp_effuid
 !
SUPER_USER
Ë 
EPERM
;

336 
ªboŸ_Êag
) {

337 
RBT_HALT
:

338 
RBT_REBOOT
:

339 
RBT_PANIC
:

340 
RBT_RESET
:

342 
RBT_MONITOR
:

343 i‡(
ªboŸ_size
 > (
m⁄ô‹_code
)Ë 
EINVAL
;

344 
	`mem£t
(
m⁄ô‹_code
, 0, (monitor_code));

345 i‡(
	`sys_c›y
(
who
, 
D
, (
phys_byãs
Ë
ªboŸ_code
,

346 
MM_PROC_NR
, 
D
, (
phys_byãs
Ë
m⁄ô‹_code
,

347 (
phys_byãs
Ë
ªboŸ_size
Ë!
OK
Ë 
EFAULT
;

348 i‡(
m⁄ô‹_code
[(m⁄ô‹_code)-1] !0Ë 
EINVAL
;

351  
EINVAL
;

355 
	`check_sig
(-1, 
SIGKILL
);

357 
	`ãŒ_fs
(
EXIT
, 
INIT_PROC_NR
, 0, 0);

359 
	`ãŒ_fs
(
SYNC
,0,0,0);

361 
	`sys_ab‹t
(
ªboŸ_Êag
, 
m⁄ô‹_code
);

363 
	}
}

369 
PUBLIC
 
	$sig_¥oc
(
rmp
, 
signo
)

370 
m¥oc
 *
rmp
;

371 
signo
;

385 
vú_byãs
 
√w_•
;

386 
¶Ÿ
;

387 
sigÊags
;

388 
sigmsg
 
sm
;

390 
¶Ÿ
 = (Ë(
rmp
 - 
m¥oc
);

391 i‡(!(
rmp
->
mp_Êags
 & 
IN_USE
)) {

392 
	`¥ötf
("MM: sig«»%d síàtÿdódÖro˚s†%d\n", 
signo
, 
¶Ÿ
);

393 
	`∑nic
("", 
NO_NUM
);

395 i‡(
rmp
->
mp_Êags
 & 
HANGING
) {

396 
	`¥ötf
("MM: sig«»%d síàtÿHANGINGÖro˚s†%d\n", 
signo
, 
¶Ÿ
);

397 
	`∑nic
("", 
NO_NUM
);

399 i‡(
rmp
->
mp_Êags
 & 
TRACED
 && 
signo
 !
SIGKILL
) {

401 
	`u≈au£
(
¶Ÿ
);

402 
	`°›_¥oc
(
rmp
, 
signo
);

406 i‡(
	`sigismembî
(&
rmp
->
mp_ign‹e
, 
signo
)) ;

408 i‡(
	`sigismembî
(&
rmp
->
mp_sigmask
, 
signo
)) {

410 
	`sigadd£t
(&
rmp
->
mp_sig≥ndög
, 
signo
);

413 
sigÊags
 = 
rmp
->
mp_siga˘
[
signo
].
ß_Êags
;

414 i‡(
	`sigismembî
(&
rmp
->
mp_ˇtch
, 
signo
)) {

415 i‡(
rmp
->
mp_Êags
 & 
SIGSUSPENDED
)

416 
sm
.
sm_mask
 = 
rmp
->
mp_sigmask2
;

418 
sm
.
sm_mask
 = 
rmp
->
mp_sigmask
;

419 
sm
.
sm_signo
 = 
signo
;

420 
sm
.
sm_sigh™dÀr
 = (
vú_byãs
Ë
rmp
->
mp_siga˘
[
signo
].
ß_h™dÀr
;

421 
sm
.
sm_sigªtu∫
 = 
rmp
->
mp_sigªtu∫
;

422 
	`sys_gë•
(
¶Ÿ
, &
√w_•
);

423 
sm
.
sm_°k±r
 = 
√w_•
;

426 
√w_•
 -(
sigc⁄ãxt
)

429 i‡(
	`adju°
(
rmp
,Ñmp->
mp_£g
[
D
].
mem_Àn
, 
√w_•
Ë!
OK
)

430 
dŸîmö©e
;

432 
rmp
->
mp_sigmask
 |rmp->
mp_siga˘
[
signo
].
ß_mask
;

433 i‡(
sigÊags
 & 
SA_NODEFER
)

434 
	`sigdñ£t
(&
rmp
->
mp_sigmask
, 
signo
);

436 
	`sigadd£t
(&
rmp
->
mp_sigmask
, 
signo
);

438 i‡(
sigÊags
 & 
SA_RESETHAND
) {

439 
	`sigdñ£t
(&
rmp
->
mp_ˇtch
, 
signo
);

440 
rmp
->
mp_siga˘
[
signo
].
ß_h™dÀr
 = 
SIG_DFL
;

443 
	`sys_£ndsig
(
¶Ÿ
, &
sm
);

444 
	`sigdñ£t
(&
rmp
->
mp_sig≥ndög
, 
signo
);

448 
	`u≈au£
(
¶Ÿ
);

451 
dŸîmö©e
:

453 
rmp
->
mp_sig°©us
 = (Ë
signo
;

454 i‡(
	`sigismembî
(&
c‹e_s£t
, 
signo
)) {

456 
	`ãŒ_fs
(
CHDIR
, 
¶Ÿ
, 
FALSE
, 0);

457 
	`dump_c‹e
(
rmp
);

459 
	`mm_exô
(
rmp
, 0);

460 
	}
}

466 
PUBLIC
 
	$check_sig
(
¥oc_id
, 
signo
)

467 
pid_t
 
¥oc_id
;

468 
signo
;

475 
m¥oc
 *
rmp
;

476 
cou¡
;

477 
îr‹_code
;

479 i‡(
signo
 < 0 || signÿ> 
_NSIG
Ë(
EINVAL
);

482 i‡(
¥oc_id
 =
INIT_PID
 && 
signo
 =
SIGKILL
Ë(
EINVAL
);

487 
cou¡
 = 0;

488 
îr‹_code
 = 
ESRCH
;

489 
rmp
 = &
m¥oc
[
INIT_PROC_NR
];Ñm∞< &m¥oc[
NR_PROCS
];Ñmp++) {

490 i‡–(
rmp
->
mp_Êags
 & 
IN_USE
) == 0) ;

491 i‡(
rmp
->
mp_Êags
 & 
HANGING
 && 
signo
 != 0) ;

494 i‡(
¥oc_id
 > 0 &&Öroc_id !
rmp
->
mp_pid
) ;

495 i‡(
¥oc_id
 =0 && 
mp
->
mp_¥ocgΩ
 !
rmp
->mp_procgrp) ;

496 i‡(
¥oc_id
 =-1 && 
rmp
->
mp_pid
 =
INIT_PID
) ;

497 i‡(
¥oc_id
 < -1 && 
rmp
->
mp_¥ocgΩ
 != -proc_id) ;

500 i‡(
mp
->
mp_effuid
 !
SUPER_USER


501 && 
mp
->
mp_ªÆuid
 !
rmp
->mp_realuid

502 && 
mp
->
mp_effuid
 !
rmp
->
mp_ªÆuid


503 && 
mp
->
mp_ªÆuid
 !
rmp
->
mp_effuid


504 && 
mp
->
mp_effuid
 !
rmp
->mp_effuid) {

505 
îr‹_code
 = 
EPERM
;

509 
cou¡
++;

510 i‡(
signo
 == 0) ;

516 
	`sig_¥oc
(
rmp
, 
signo
);

518 i‡(
¥oc_id
 > 0) ;

522 i‡((
mp
->
mp_Êags
 & 
IN_USE
Ë=0 || (mp->mp_Êag†& 
HANGING
))

523 
d⁄t_ª∂y
 = 
TRUE
;

524 (
cou¡
 > 0 ? 
OK
 : 
îr‹_code
);

525 
	}
}

531 
PRIVATE
 
	$check_≥ndög
()

544 
i
;

546 
i
 = 1; i < 
_NSIG
; i++) {

547 i‡(
	`sigismembî
(&
mp
->
mp_sig≥ndög
, 
i
) &&

548 !
	`sigismembî
(&
mp
->
mp_sigmask
, 
i
)) {

549 
	`sigdñ£t
(&
mp
->
mp_sig≥ndög
, 
i
);

550 
	`sig_¥oc
(
mp
, 
i
);

554 
	}
}

560 
PRIVATE
 
	$u≈au£
(
¥o
)

561 
¥o
;

570 
m¥oc
 *
rmp
;

572 
rmp
 = &
m¥oc
[
¥o
];

575 i‡–(
rmp
->
mp_Êags
 & 
PAUSED
Ë&& (rmp->mp_Êag†& 
HANGING
) == 0) {

576 
rmp
->
mp_Êags
 &~
PAUSED
;

577 
	`ª∂y
(
¥o
, 
EINTR
, 0, 
NIL_PTR
);

582 i‡–(
rmp
->
mp_Êags
 & 
WAITING
Ë&& (rmp->mp_Êag†& 
HANGING
) == 0) {

583 
rmp
->
mp_Êags
 &~
WAITING
;

584 
	`ª∂y
(
¥o
, 
EINTR
, 0, 
NIL_PTR
);

589 i‡((
rmp
->
mp_Êags
 & 
SIGSUSPENDED
Ë&& (rmp->mp_Êag†& 
HANGING
) == 0) {

590 
rmp
->
mp_Êags
 &~
SIGSUSPENDED
;

591 
	`ª∂y
(
¥o
, 
EINTR
, 0, 
NIL_PTR
);

596 
	`ãŒ_fs
(
UNPAUSE
, 
¥o
, 0, 0);

597 
	}
}

603 
PRIVATE
 
	$dump_c‹e
(
rmp
)

604 
m¥oc
 *
rmp
;

608 
fd
, 
Áke_fd
, 
ƒ_wrôãn
, 
£g
, 
¶Ÿ
;

609 *
buf
;

610 
vú_byãs
 
cuºít_•
;

611 
phys_byãs
 
À·
;

612 
ƒ_to_wrôe
;

613 
åa˚_d©a
, 
åa˚_off
;

615 
¶Ÿ
 = (Ë(
rmp
 - 
m¥oc
);

620 i‡(
rmp
->
mp_ªÆuid
 !rmp->
mp_effuid
) ;

621 i‡–(
fd
 = 
	`¸ót
(
c‹e_«me
, 
CORE_MODE
)) < 0) ;

622 
rmp
->
mp_sig°©us
 |
DUMPED
;

630 
	`sys_gë•
(
¶Ÿ
, &
cuºít_•
);

631 
	`adju°
(
rmp
,Ñmp->
mp_£g
[
D
].
mem_Àn
, 
cuºít_•
);

634 i‡(
	`wrôe
(
fd
, (*Ë
rmp
->
mp_£g
, () Ñmp->mp_seg)

635 !(Ë 
rmp
->
mp_£g
) {

636 
	`˛o£
(
fd
);

641 
åa˚_off
 = 0;

642 
	`sys_åa˚
(3, 
¶Ÿ
, 
åa˚_off
, &
åa˚_d©a
Ë=
OK
) {

643 i‡(
	`wrôe
(
fd
, (*Ë&
åa˚_d©a
, ()  ())

645 
	`˛o£
(
fd
);

648 
åa˚_off
 +=  ();

652 
£g
 = 0; seg < 
NR_SEGS
; seg++) {

653 
buf
 = (*Ë((
vú_byãs
Ë
rmp
->
mp_£g
[
£g
].
mem_vú
 << 
CLICK_SHIFT
);

654 
À·
 = (
phys_byãs
Ë
rmp
->
mp_£g
[
£g
].
mem_Àn
 << 
CLICK_SHIFT
;

655 
Áke_fd
 = (
¶Ÿ
 << 8Ë| (
£g
 << 6Ë| 
fd
;

658 
À·
 != 0) {

659 
ƒ_to_wrôe
 = (Ë
	`MIN
(
À·
, 
DUMP_SIZE
);

660 i‡–(
ƒ_wrôãn
 = 
	`wrôe
(
Áke_fd
, 
buf
, 
ƒ_to_wrôe
)) < 0) {

661 
	`˛o£
(
fd
);

664 
buf
 +
ƒ_wrôãn
;

665 
À·
 -
ƒ_wrôãn
;

668 
	`˛o£
(
fd
);

669 
	}
}

	@sin.c

9 
	~<m©h.h
>

10 
	~<Êﬂt.h
>

11 
	~<î∫o.h
>

12 
	~"loˇlm©h.h
"

15 
	$söus
(
x
, 
cos_Êag
)

22 
r
[] = {

33 
y
;

34 
√g
 = 1;

36 i‡(
	`__IsN™
(
x
)) {

37 
î∫o
 = 
EDOM
;

38  
x
;

40 i‡(
x
 < 0) {

41 
x
 = -x;

42 
√g
 = -1;

44 i‡(
cos_Êag
) {

45 
√g
 = 1;

46 
y
 = 
M_PI_2
 + 
x
;

48 
y
 = 
x
;

52 
y
 = y * 
M_1_PI
 + 0.5;

54 i‡(
y
 >
DBL_MAX
/
M_PI
)  0.0;

60 
	#A1
 3.1416015625

	)

61 
	#A2
 -8.908910206761537356617e-6

	)

63 
x1
, 
x2
;

65 
	`modf
(
y
, &y);

66 i‡(
	`modf
(0.5*
y
, &
x1
)Ë
√g
 = -neg;

67 i‡(
cos_Êag
Ë
y
 -= 0.5;

68 
x2
 = 
	`modf
(
x
, &
x1
);

69 
x
 = 
x1
 - 
y
 * 
A1
;

70 
x
 +
x2
;

71 
x
 -
y
 * 
A2
;

72 #unde‡
A1


73 #unde‡
A2


76 i‡(
x
 < 0) {

77 
√g
 = -neg;

78 
x
 = -x;

83 
y
 = 
x
 * x;

84 
x
 +x * 
y
 * 
	`POLYNOM7
(y, 
r
);

85  
√g
==-1 ? -
x
 : x;

86 
	}
}

89 
	$sö
(
x
)

91  
	`söus
(
x
, 0);

92 
	}
}

95 
	$cos
(
x
)

97 i‡(
x
 < 0) x = -x;

98  
	`söus
(
x
, 1);

99 
	}
}

	@sinh.c

9 
	~<m©h.h
>

10 
	~<Êﬂt.h
>

11 
	~<î∫o.h
>

12 
	~"loˇlm©h.h
"

15 
	$söh_cosh
(
x
, 
cosh_Êag
)

22 
p
[] = {

28 
q
[] = {

34 
√g©ive
 = 
x
 < 0;

35 
y
 = 
√g©ive
 ? -
x
 : x;

37 i‡(
	`__IsN™
(
x
)) {

38 
î∫o
 = 
EDOM
;

39  
x
;

41 i‡(! 
cosh_Êag
 && 
y
 <= 1.0) {

43 
y
 = y * y;

44  
x
 + x * 
y
 * 
	`POLYNOM3
(y, 
p
)/POLYNOM3(y,
q
);

47 i‡(
y
 >
M_LN_MAX_D
) {

49 
	#LNV
 0.69316101074218750000e+0

	)

50 
	#VD2M1
 0.52820835025874852469e-4

	)

51 
w
 = 
y
 - 
LNV
;

53 i‡(
w
 < 
M_LN_MAX_D
+
M_LN2
-
LNV
) {

54 
x
 = 
	`exp
(
w
);

55 
x
 +
VD2M1
 * x;

58 
î∫o
 = 
ERANGE
;

59 
x
 = 
HUGE_VAL
;

63 
z
 = 
	`exp
(
y
);

65 
x
 = 0.5 * (
z
 + (
cosh_Êag
 ? 1.0 : -1.0)/z);

67  
√g©ive
 ? -
x
 : x;

68 
	}
}

71 
	$söh
(
x
)

73  
	`söh_cosh
(
x
, 0);

74 
	}
}

77 
	$cosh
(
x
)

79 i‡(
x
 < 0) x = -x;

80  
	`söh_cosh
(
x
, 1);

81 
	}
}

	@sprintf.c

6 
	~<°dio.h
>

7 
	~<°d¨g.h
>

8 
	~"loc_ö˛.h
"

11 
	$•rötf
(* 
s
, c⁄° *
f‹m©
, ...)

13 
va_li°
 
≠
;

14 
ªtvÆ
;

15 
FILE
 
tmp_°ªam
;

17 
	`va_°¨t
(
≠
, 
f‹m©
);

19 
tmp_°ªam
.
_fd
 = -1;

20 
tmp_°ªam
.
_Êags
 = 
_IOWRITE
 + 
_IONBF
 + 
_IOWRITING
;

21 
tmp_°ªam
.
_buf
 = (*Ë
s
;

22 
tmp_°ªam
.
_±r
 = (*Ë
s
;

23 
tmp_°ªam
.
_cou¡
 = 32767;

25 
ªtvÆ
 = 
	`_d›∫t
(
f‹m©
, 
≠
, &
tmp_°ªam
);

26 
	`putc
('\0',&
tmp_°ªam
);

28 
	`va_íd
(
≠
);

30  
ªtvÆ
;

31 
	}
}

	@sqrt.c

9 
	~<m©h.h
>

10 
	~<Êﬂt.h
>

11 
	~<î∫o.h
>

13 
	#NITER
 5

	)

16 
	$sqπ
(
x
)

18 
exp⁄ít
;

19 
vÆ
;

21 i‡(
	`__IsN™
(
x
)) {

22 
î∫o
 = 
EDOM
;

23  
x
;

25 i‡(
x
 <= 0) {

26 i‡(
x
 < 0Ë
î∫o
 = 
EDOM
;

30 i‡(
x
 > 
DBL_MAX
)  x;

32 
vÆ
 = 
	`‰exp
(
x
, &
exp⁄ít
);

33 i‡(
exp⁄ít
 & 1) {

34 
exp⁄ít
--;

35 
vÆ
 *= 2;

37 
vÆ
 = 
	`ldexp
(vÆ + 1.0, 
exp⁄ít
/2 - 1);

39 
exp⁄ít
 = 
NITER
 - 1;Éxponent >= 0;Éxponent--) {

40 
vÆ
 = (vÆ + 
x
 / val) / 2.0;

42  
vÆ
;

43 
	}
}

	@sr.c

31 
	~"öë.h
"

32 
	~<möix/ˇŒƒ.h
>

33 
	~"mq.h
"

34 
	~"¥Ÿo.h
"

35 
	~"gíîic/as£π.h
"

36 
	~"gíîic/buf.h
"

37 
	~"gíîic/§.h
"

38 
	~"gíîic/ty≥.h
"

40 
INIT_PANIC
();

42 
	#FD_NR
 32

	)

44 
	s§_fd


46 
	m§f_Êags
;

47 
	m§f_fd
;

48 
	m§f_p‹t
;

49 
§_›í_t
 
	m§f_›í
;

50 
§_˛o£_t
 
	m§f_˛o£
;

51 
§_wrôe_t
 
	m§f_wrôe
;

52 
§_ªad_t
 
	m§f_ªad
;

53 
§_io˘l_t
 
	m§f_io˘l
;

54 
§_ˇn˚l_t
 
	m§f_ˇn˚l
;

55 
mq_t
 *
	m§f_io˘l_q
, *
	m§f_io˘l_q_èû
;

56 
mq_t
 *
	m§f_ªad_q
, *
	m§f_ªad_q_èû
;

57 
mq_t
 *
	m§f_wrôe_q
, *
	m§f_wrôe_q_èû
;

58 } 
	t§_fd_t
;

60 
	#SFF_FLAGS
 0x0F

	)

61 
	#SFF_FREE
 0x00

	)

62 
	#SFF_MINOR
 0x01

	)

63 
	#SFF_INUSE
 0x02

	)

64 
	#SFF_BUSY
 0x3C

	)

65 
	#SFF_IOCTL_IP
 0x04

	)

66 
	#SFF_READ_IP
 0x08

	)

67 
	#SFF_WRITE_IP
 0x10

	)

68 
	#SFF_PENDING_REQ
 0x30

	)

69 
	#SFF_SUSPENDED
 0x1C0

	)

70 
	#SFF_IOCTL_SUSP
 0x40

	)

71 
	#SFF_READ_SUSP
 0x80

	)

72 
	#SFF_WRITE_SUSP
 0x100

	)

74 
FORWARD
 
_PROTOTYPE
 ( 
§_›í
, (
mesßge
 *
m
) );

75 
FORWARD
 
_PROTOTYPE
 ( 
§_˛o£
, (
mesßge
 *
m
) );

76 
FORWARD
 
_PROTOTYPE
 ( 
§_rwio
, (
mq_t
 *
m
) );

77 
FORWARD
 
_PROTOTYPE
 ( 
§_ˇn˚l
, (
mesßge
 *
m
) );

78 
FORWARD
 
_PROTOTYPE
 ( 
§_ª∂y
, (
mesßge
 *
mes_±r
, 
ª∂y
) );

79 
FORWARD
 
_PROTOTYPE
 ( 
§_ªvive
, (
mq_t
 *
mes_±r
, 
ª∂y
) );

80 
FORWARD
 
_PROTOTYPE
 ( 
§_fd_t
 *
§_gëch™√l
, (
mö‹
));

81 
FORWARD
 
_PROTOTYPE
 ( 
acc_t
 *
§_gë_u£rd©a
, (
fd
, 
vú_byãs
 
off£t
,

82 
vú_byãs
 
cou¡
, 
f‹_io˘l
) );

83 
FORWARD
 
_PROTOTYPE
 ( 
§_put_u£rd©a
, (
fd
, 
vú_byãs
 
off£t
,

84 
acc_t
 *
d©a
, 
f‹_io˘l
) );

85 
FORWARD
 
_PROTOTYPE
 ( 
§_ª∂_queue
, (
¥oc
) );

86 
FORWARD
 
_PROTOTYPE
 ( 
wÆk_queue
, (
§_fd_t
 *
§_fd
, 
mq_t
 *
q_hód
,

87 
mq_t
 **
q_èû_±r
, 
ty≥
, 
¥oc_n
) );

88 
FORWARD
 
_PROTOTYPE
 ( 
¥o˚ss_ªq_q
, (
mq_t
 *
mq
, mq_à*
èû
,

89 
mq_t
 **
èû_±r
) );

90 
FORWARD
 
_PROTOTYPE
 ( 
˝_u2b
, (
¥oc
, *
§c
, 
acc_t
 **
v¨_acc_±r
,

91 
size
) );

92 
FORWARD
 
_PROTOTYPE
 ( 
˝_b2u
, (
acc_t
 *
acc_±r
, 
¥oc
, *
de°
) );

94 
PRIVATE
 
§_fd_t
 
	g§_fd_èbÀ
[
FD_NR
];

95 
PRIVATE
 
mq_t
 *
	gª∂_queue
, *
	gª∂_queue_èû
;

96 
PRIVATE
 
˝vec_t
 
	g˝vec
[
CPVEC_NR
];

98 
PUBLIC
 
	$§_öô
()

100 
i
;

102 
i
=0; i<
FD_NR
; i++)

103 
§_fd_èbÀ
[
i
].
§f_Êags

SFF_FREE
;

104 
ª∂_queue

NULL
;

105 
	}
}

107 
PUBLIC
 
	$§_ªc
(
m
)

108 
mq_t
 *
m
;

110 
mesßge
 
mess
, *
mp
;

111 
ªsu…
;

112 
£nd_ª∂y
, 
‰ì_mess
;

114 i‡(
ª∂_queue
)

116 i‡(
m
->
mq_mess
.
m_ty≥
 =
NW_CANCEL
)

118 
ªsu…

	`§_ª∂_queue
(
m
->
mq_mess
.
PROC_NR
);

119 i‡(
ªsu…
)

123 
	`§_ª∂_queue
(
ANY
);

126 #i‡
DEBUG
 & 256

127 { 
	`whîe
(); 
	`¥ötf
("sr_rec: message from %d for %dÅype %d, minor %d\n",

128 
m
->
mq_mess
.
m_sour˚
, m->mq_mess.
PROC_NR
, m->mq_mess.
m_ty≥
,

129 
m
->
mq_mess
.
DEVICE
); }

131 
m
->
mq_mess
.
m_ty≥
)

133 
NW_OPEN
:

134 
ªsu…

	`§_›í
(&
m
->
mq_mess
);

135 
£nd_ª∂y
= 1;

136 
‰ì_mess
= 1;

138 
NW_CLOSE
:

139 
	`§_˛o£
(&
m
->
mq_mess
);

140 
ªsu…

OK
;

141 
£nd_ª∂y
= 1;

142 
‰ì_mess
= 1;

144 
NW_READ
:

145 
NW_WRITE
:

146 
NW_IOCTL
:

147 #i‡
DEBUG
 & 256

148 { 
	`whîe
(); 
	`¥ötf
("callingÑwio\n"); }

150 
ªsu…

	`§_rwio
(
m
);

151 #i‡
DEBUG
 & 256

152 { 
	`whîe
(); 
	`¥ötf
("rwio()%d\n", 
ªsu…
); }

154 
	`as£π
(
ªsu…
 =
OK
 ||Ñesu… =
SUSPEND
);

155 
£nd_ª∂y
(
ªsu…
 =
SUSPEND
);

156 
‰ì_mess
= 0;

158 
NW_CANCEL
:

159 
ªsu…

	`§_ˇn˚l
(&
m
->
mq_mess
);

160 
	`as£π
(
ªsu…
 =
OK
 ||Ñesu… =
EINTR
);

161 
£nd_ª∂y
(
ªsu…
 =
EINTR
);

162 
‰ì_mess
= 1;

165 
	`ù_∑nic
(("unknow¿mesßge,Åy≥%d", 
m
->
mq_mess
.
m_ty≥
));

167 i‡(
£nd_ª∂y
)

169 i‡(
‰ì_mess
)

170 
mp
&
m
->
mq_mess
;

173 
mess

m
->
mq_mess
;

174 
mp
&
mess
;

176 
	`§_ª∂y
(
mp
, 
ªsu…
);

178 i‡(
‰ì_mess
)

179 
	`mq_‰ì
(
m
);

180 
	}
}

182 
PUBLIC
 
	$§_add_mö‹
(
mö‹
, 
p‹t
, 
›íf
, 
˛o£f
, 
ªadf
, 
wrôef
,

183 
io˘lf
, 
ˇn˚lf
)

184 
mö‹
;

185 
p‹t
;

186 
§_›í_t
 
›íf
;

187 
§_˛o£_t
 
˛o£f
;

188 
§_ªad_t
 
ªadf
;

189 
§_wrôe_t
 
wrôef
;

190 
§_io˘l_t
 
io˘lf
;

191 
§_ˇn˚l_t
 
ˇn˚lf
;

193 
§_fd_t
 *
§_fd
;

195 
	`as£π
 (
mö‹
>=0 && mö‹<
FD_NR
);

197 
§_fd
&
§_fd_èbÀ
[
mö‹
];

199 i‡(
§_fd
->
§f_Êags
 & 
SFF_INUSE
)

200  
EGENERIC
;

202 
§_fd
->
§f_Êags

SFF_INUSE
 | 
SFF_MINOR
;

203 
§_fd
->
§f_p‹t

p‹t
;

204 
§_fd
->
§f_›í

›íf
;

205 
§_fd
->
§f_˛o£

˛o£f
;

206 
§_fd
->
§f_wrôe

wrôef
;

207 
§_fd
->
§f_ªad

ªadf
;

208 
§_fd
->
§f_io˘l

io˘lf
;

209 
§_fd
->
§f_ˇn˚l

ˇn˚lf
;

211  
OK
;

212 
	}
}

214 
PRIVATE
 
	$§_›í
(
m
)

215 
mesßge
 *
m
;

217 
§_fd_t
 *
§_fd
;

219 
mö‹

m
->
DEVICE
;

220 
i
, 
fd
;

222 i‡(
mö‹
<0 || mö‹>
FD_NR
)

224 #i‡
DEBUG


225 { 
	`whîe
(); 
	`¥ötf
("replying EINVAL\n"); }

227  
EINVAL
;

229 i‡(!(
§_fd_èbÀ
[
mö‹
].
§f_Êags
 & 
SFF_MINOR
))

231 #i‡
DEBUG


232 { 
	`whîe
(); 
	`¥ötf
("replying ENXIO\n"); }

234  
ENXIO
;

236 
i
=0; i<
FD_NR
 && (
§_fd_èbÀ
[i].
§f_Êags
 & 
SFF_INUSE
); i++);

238 i‡(
i
>=
FD_NR
)

240 #i‡
DEBUG


241 { 
	`whîe
(); 
	`¥ötf
("replying ENFILE\n"); }

243  
ENFILE
;

246 
§_fd
&
§_fd_èbÀ
[
i
];

247 *
§_fd

§_fd_èbÀ
[
mö‹
];

248 
§_fd
->
§f_Êags

SFF_INUSE
;

249 
fd
(*
§_fd
->
§f_›í
)(§_fd->
§f_p‹t
, 
i
, 
§_gë_u£rd©a
,

250 
§_put_u£rd©a
);

251 #i‡
DEBUG
 & 256

252 { 
	`whîe
(); 
	`¥ötf
("§f_›í: 0x%x(%d, %d, .., ..)%d\n", 
§_fd
->
§f_›í
,

253 
§_fd
->
§f_p‹t
, 
i
, 
fd
); }

255 i‡(
fd
<0)

257 
§_fd
->
§f_Êags

SFF_FREE
;

258 #i‡
DEBUG


259 { 
	`whîe
(); 
	`¥ötf
("ª∂yög %d\n", 
fd
); }

261  
fd
;

263 
§_fd
->
§f_fd

fd
;

264 #i‡
DEBUG
 & 256

265 { 
	`whîe
(); 
	`¥ötf
("ª∂yög %d\n", 
i
); }

267  
i
;

268 
	}
}

270 
PRIVATE
 
	$§_˛o£
(
m
)

271 
mesßge
 *
m
;

273 
§_fd_t
 *
§_fd
;

275 
§_fd

	`§_gëch™√l
(
m
->
DEVICE
);

276 
	`as£π
 (
§_fd
);

278 i‡(
§_fd
->
§f_Êags
 & 
SFF_BUSY
)

279 
	`ù_∑nic
(("close on busy channel"));

281 
	`as£π
 (!(
§_fd
->
§f_Êags
 & 
SFF_MINOR
));

282 (*
§_fd
->
§f_˛o£
)(§_fd->
§f_fd
);

283 #i‡
DEBUG
 & 256

284 { 
	`whîe
(); 
	`¥ötf
("§f_˛o£: 0x%x(%d)\n", 
§_fd
->
§f_˛o£
, sr_fd->
§f_fd
); }

286 
§_fd
->
§f_Êags

SFF_FREE
;

287 
	}
}

289 
PRIVATE
 
	$§_rwio
(
m
)

290 
mq_t
 *
m
;

292 
§_fd_t
 *
§_fd
;

293 
mq_t
 **
q_hód_±r
, **
q_èû_±r
;

294 
ù_Êag
, 
su•_Êag
;

295 
ªsu…
;

296 
ªque°
;

297 
size_t
 
size
;

299 
§_fd

	`§_gëch™√l
(
m
->
mq_mess
.
DEVICE
);

300 
	`as£π
 (
§_fd
);

302 
m
->
mq_mess
.
m_ty≥
)

304 
NW_READ
:

305 
q_hód_±r
&
§_fd
->
§f_ªad_q
;

306 
q_èû_±r
&
§_fd
->
§f_ªad_q_èû
;

307 
ù_Êag

SFF_READ_IP
;

308 
su•_Êag

SFF_READ_SUSP
;

310 
NW_WRITE
:

311 
q_hód_±r
&
§_fd
->
§f_wrôe_q
;

312 
q_èû_±r
&
§_fd
->
§f_wrôe_q_èû
;

313 
ù_Êag

SFF_WRITE_IP
;

314 
su•_Êag

SFF_WRITE_SUSP
;

316 
NW_IOCTL
:

317 
q_hód_±r
&
§_fd
->
§f_io˘l_q
;

318 
q_èû_±r
&
§_fd
->
§f_io˘l_q_èû
;

319 
ù_Êag

SFF_IOCTL_IP
;

320 
su•_Êag

SFF_IOCTL_SUSP
;

323 
	`ù_∑nic
(("illegal caseÉntry"));

326 i‡(
§_fd
->
§f_Êags
 & 
ù_Êag
)

328 
	`as£π
(
§_fd
->
§f_Êags
 & 
su•_Êag
);

329 
	`as£π
(*
q_hód_±r
);

330 (*
q_èû_±r
)->
mq_√xt

m
;

331 *
q_èû_±r

m
;

332  
SUSPEND
;

334 
	`as£π
(!*
q_hód_±r
);

336 *
q_èû_±r
*
q_hód_±r

m
;

337 
§_fd
->
§f_Êags
 |
ù_Êag
;

339 
m
->
mq_mess
.
m_ty≥
)

341 
NW_READ
:

342 #i‡
DEBUG
&256

343 { 
	`whîe
(); 
	`¥ötf
("ˇŒög 0x%x(%d, %d)\n", 
§_fd
->
§f_ªad
, sr_fd->
§f_fd
,

344 
m
->
mq_mess
.
COUNT
); }

346 
ªsu…
(*
§_fd
->
§f_ªad
)(§_fd->
§f_fd
, 
m
->
mq_mess
.
COUNT
);

348 
NW_WRITE
:

349 #i‡
DEBUG
&256

350 { 
	`whîe
(); 
	`¥ötf
("ˇŒög 0x%x(%d, %d)\n", 
§_fd
->
§f_wrôe
, sr_fd->
§f_fd
,

351 
m
->
mq_mess
.
COUNT
); }

353 
ªsu…
(*
§_fd
->
§f_wrôe
)(§_fd->
§f_fd
, 
m
->
mq_mess
.
COUNT
);

355 
NW_IOCTL
:

356 
ªque°

m
->
mq_mess
.
REQUEST
;

357 #ifde‡
IOCPARM_MASK


358 
size
(
ªque°
 >> 16Ë& 
IOCPARM_MASK
;

359 i‡(
size
>
MAX_IOCTL_S
)

361 #i‡
DEBUG


362 { 
	`whîe
(); 
	`¥ötf
("replying EINVAL\n"); }

364 
ªsu…

	`§_put_u£rd©a
(
§_fd
-
§_fd_èbÀ
, 
EINVAL
,

365 
NULL
, 1);

366 
	`as£π
(
ªsu…
 =
OK
);

367  
OK
;

370 #i‡
DEBUG


371 { 
	`whîe
(); 
	`¥ötf
("ˇŒög 0x%x(%d, 0x%lx)\n", 
§_fd
->
§f_io˘l
, sr_fd->
§f_fd
,

372 
ªque°
); }

374 
ªsu…
=(*
§_fd
->
§f_io˘l
)(§_fd->
§f_fd
, 
ªque°
);

377 
	`ù_∑nic
(("illegal caseÉntry"));

380 #i‡
DEBUG


381 i‡(
ªsu…
 !
OK
 &&Ñesu… !
SUSPEND
)

382 { 
	`whîe
(); 
	`¥ötf
("ªsu…%d\n", 
ªsu…
); }

384 
	`as£π
(
ªsu…
 =
OK
 ||Ñesu… =
SUSPEND
);

385 i‡(
ªsu…
 =
SUSPEND
)

386 
§_fd
->
§f_Êags
 |
su•_Êag
;

387  
ªsu…
;

388 
	}
}

390 
PRIVATE
 
	$§_ˇn˚l
(
m
)

391 
mesßge
 *
m
;

393 
§_fd_t
 *
§_fd
;

394 
i
, 
ªsu…
;

395 
mq_t
 *
q_±r
, *
q_±r_¥v
;

396 
¥oc_ƒ
;

398 
ªsu…
=
EINTR
;

399 
¥oc_ƒ

m
->
PROC_NR
;

400 
§_fd

	`§_gëch™√l
(
m
->
DEVICE
);

401 
	`as£π
 (
§_fd
);

403 
ªsu…

	`wÆk_queue
(
§_fd
, sr_fd->
§f_io˘l_q
, &§_fd->
§f_io˘l_q_èû
,

404 
SR_CANCEL_IOCTL
, 
¥oc_ƒ
);

405 i‡(
ªsu…
 !
EAGAIN
)

406  
ªsu…
;

407 
ªsu…

	`wÆk_queue
(
§_fd
, sr_fd->
§f_ªad_q
, &§_fd->
§f_ªad_q_èû
,

408 
SR_CANCEL_READ
, 
¥oc_ƒ
);

409 i‡(
ªsu…
 !
EAGAIN
)

410  
ªsu…
;

411 
ªsu…

	`wÆk_queue
(
§_fd
, sr_fd->
§f_wrôe_q
, &§_fd->
§f_wrôe_q_èû
,

412 
SR_CANCEL_WRITE
, 
¥oc_ƒ
);

413 i‡(
ªsu…
 !
EAGAIN
)

414  
ªsu…
;

415 
	`ù_∑nic
(("requestÇot found"));

416 
	}
}

418 
PRIVATE
 
	$wÆk_queue
(
§_fd
, 
q_hód
, 
q_èû_±r
, 
ty≥
, 
¥oc_ƒ
)

419 
§_fd_t
 *
§_fd
;

420 
mq_t
 *
q_hód
, **
q_èû_±r
;

421 
ty≥
;

422 
¥oc_ƒ
;

424 
mq_t
 *
q_±r_¥v
, *
q_±r
;

425 
ªsu…
;

427 
q_±r_¥v

NULL
, 
q_±r

q_hód
; q_ptr;

428 
q_±r_¥v

q_±r
, q_±rq_±r->
mq_√xt
)

430 i‡(
q_±r
->
mq_mess
.
PROC_NR
 !
¥oc_ƒ
)

432 i‡(!
q_±r_¥v
)

434 #i‡
DEBUG
 & 256

435 { 
	`whîe
(); 
	`¥ötf
("ˇŒög 0x%x(%d, %d)\n", 
§_fd
->
§f_ˇn˚l
, sr_fd->
§f_fd
,

436 
ty≥
); }

439 
ªsu…
(*
§_fd
->
§f_ˇn˚l
)(§_fd->
§f_fd
, 
ty≥
);

440 
	`as£π
(
ªsu…
 =
OK
);

441  
OK
;

443 
q_±r_¥v
->
mq_√xt

q_±r
->mq_next;

444 
	`mq_‰ì
(
q_±r
);

445 i‡(!
q_±r_¥v
->
mq_√xt
)

446 *
q_èû_±r

q_±r_¥v
;

447  
EINTR
;

449  
EAGAIN
;

450 
	}
}

452 
PRIVATE
 
§_fd_t
 *
	$§_gëch™√l
(
mö‹
)

453 
mö‹
;

455 
§_fd_t
 *
loc_fd
;

457 
	`com∑ª
(
mö‹
, >=, 0);

458 
	`com∑ª
(
mö‹
, <, 
FD_NR
);

460 
loc_fd
&
§_fd_èbÀ
[
mö‹
];

462 #i‡
DEBUG


463 i‡((
loc_fd
->
§f_Êags
 & 
SFF_MINOR
Ë|| !÷oc_fd->§f_Êag†& 
SFF_INUSE
))

464 { 
	`whîe
(); 
	`¥ötf
("gŸÑeq f‹ iŒ mö‹ (%d)\n", 
mö‹
); }

466 
	`as£π
 (!(
loc_fd
->
§f_Êags
 & 
SFF_MINOR
Ë&& (loc_fd->§f_Êag†& 
SFF_INUSE
));

468  
loc_fd
;

469 
	}
}

471 
PRIVATE
 
	$§_ª∂y
 (
mess_±r
, 
°©us
)

472 
mesßge
 *
mess_±r
;

473 
°©us
;

475 
mesßge
 
ª∂y
;

476 
ªsu…
;

478 #i‡
DEBUG
 & 256

479 { 
	`whîe
(); 
	`¥ötf
("ª∂yög %dÅÿ%d f‹Öro¯%d\n", 
°©us
,

480 
mess_±r
->
m_sour˚
, mess_±r->
PROC_NR
); }

482 
ª∂y
.
m_ty≥

REVIVE
;

483 
ª∂y
.
REP_PROC_NR

mess_±r
->
PROC_NR
;

484 
ª∂y
.
REP_STATUS

°©us
;

485 #i‡
DEBUG
 & 256

486 { 
	`whîe
(); 
	`¥ötf
("£ndög %dÅÿ%d f‹ %d\n", 
ª∂y
.
m_ty≥
,

487 
mess_±r
->
m_sour˚
, 
ª∂y
.
REP_PROC_NR
); }

489 
	`as£π
(
mess_±r
->
m_sour˚
 !
MM_PROC_NR
);

490 
ªsu…

	`£nd
 (
mess_±r
->
m_sour˚
, &
ª∂y
);

491 i‡(
ªsu…
 !
OK
)

492 
	`ù_∑nic
(("unableÅo send"));

493 
	}
}

495 
PRIVATE
 
acc_t
 *
	$§_gë_u£rd©a
 (
fd
, 
off£t
, 
cou¡
, 
f‹_io˘l
)

496 
fd
;

497 
vú_byãs
 
off£t
;

498 
vú_byãs
 
cou¡
;

499 
f‹_io˘l
;

501 
§_fd_t
 *
loc_fd
;

502 
mq_t
 **
hód_±r
, **
èû_±r
, *
m
, *
èû
, *
mq
;

503 
ù_Êag
, 
su•_Êag
;

504 
ªsu…
;

505 
su•íded
;

506 *
§c
;

507 
acc_t
 *
acc
;

509 #i‡
DEBUG
 & 256

510 { 
	`whîe
(); 
	`¥ötf
("sr_get_userdata(%d, %u, %u, %d)\n",

511 
fd
, 
off£t
, 
cou¡
, 
f‹_io˘l
); }

513 
loc_fd
&
§_fd_èbÀ
[
fd
];

515 i‡(
f‹_io˘l
)

517 
hód_±r
&
loc_fd
->
§f_io˘l_q
;

518 
èû_±r
&
loc_fd
->
§f_io˘l_q_èû
;

519 
ù_Êag

SFF_IOCTL_IP
;

520 
su•_Êag

SFF_IOCTL_SUSP
;

524 
hód_±r
&
loc_fd
->
§f_wrôe_q
;

525 
èû_±r
&
loc_fd
->
§f_wrôe_q_èû
;

526 
ù_Êag

SFF_WRITE_IP
;

527 
su•_Êag

SFF_WRITE_SUSP
;

530 
	`as£π
 (
loc_fd
->
§f_Êags
 & 
ù_Êag
);

532 i‡(!
cou¡
)

534 
m
*
hód_±r
;

535 *
hód_±r

NULL
;

536 
èû
*
èû_±r
;

537 
	`as£π
(
m
);

538 
mq

m
->
mq_√xt
;

539 
ªsu…
()
off£t
;

540 
	`§_ªvive
 (
m
, 
ªsu…
);

541 
su•íded
(
loc_fd
->
§f_Êags
 & 
su•_Êag
);

542 
loc_fd
->
§f_Êags
 &~(
ù_Êag
|
su•_Êag
);

543 i‡(
su•íded
)

545 
	`¥o˚ss_ªq_q
(
mq
, 
èû
, 
èû_±r
);

549 
	`as£π
(!
mq
);

551  
NULL
;

554 
§c
(*
hód_±r
)->
mq_mess
.
ADDRESS
 + 
off£t
;

555 
ªsu…

	`˝_u2b
 ((*
hód_±r
)->
mq_mess
.
PROC_NR
, 
§c
, &
acc
, 
cou¡
);

557  
ªsu…
<0 ? 
NULL
 : 
acc
;

558 
	}
}

560 
PRIVATE
 
	$§_put_u£rd©a
 (
fd
, 
off£t
, 
d©a
, 
f‹_io˘l
)

561 
fd
;

562 
vú_byãs
 
off£t
;

563 
acc_t
 *
d©a
;

564 
f‹_io˘l
;

566 
§_fd_t
 *
loc_fd
;

567 
mq_t
 **
hód_±r
, **
èû_±r
, *
m
, *
èû
, *
mq
;

568 
ù_Êag
, 
su•_Êag
;

569 
ªsu…
;

570 
su•íded
;

571 *
d°
;

573 #i‡
DEBUG
 & 256

574 { 
	`whîe
(); 
	`¥ötf
("sr_put_userdata(%d, %u, 0x%x, %d)\n",

575 
fd
, 
off£t
, 
d©a
, 
f‹_io˘l
); }

578 
loc_fd
&
§_fd_èbÀ
[
fd
];

580 i‡(
f‹_io˘l
)

582 
hód_±r
&
loc_fd
->
§f_io˘l_q
;

583 
èû_±r
&
loc_fd
->
§f_io˘l_q_èû
;

584 
ù_Êag

SFF_IOCTL_IP
;

585 
su•_Êag

SFF_IOCTL_SUSP
;

589 
hód_±r
&
loc_fd
->
§f_ªad_q
;

590 
èû_±r
&
loc_fd
->
§f_ªad_q_èû
;

591 
ù_Êag

SFF_READ_IP
;

592 
su•_Êag

SFF_READ_SUSP
;

595 
	`as£π
 (
loc_fd
->
§f_Êags
 & 
ù_Êag
);

597 i‡(!
d©a
)

599 
m
*
hód_±r
;

600 *
hód_±r

NULL
;

601 
èû
*
èû_±r
;

602 
	`as£π
(
m
);

603 
mq

m
->
mq_√xt
;

604 
ªsu…
()
off£t
;

605 
	`§_ªvive
 (
m
, 
ªsu…
);

606 
su•íded
(
loc_fd
->
§f_Êags
 & 
su•_Êag
);

607 
loc_fd
->
§f_Êags
 &~(
ù_Êag
|
su•_Êag
);

608 i‡(
su•íded
)

610 
	`¥o˚ss_ªq_q
(
mq
, 
èû
, 
èû_±r
);

614 
	`as£π
(!
mq
);

616  
OK
;

619 
d°
(*
hód_±r
)->
mq_mess
.
ADDRESS
 + 
off£t
;

620  
	`˝_b2u
 (
d©a
, (*
hód_±r
)->
mq_mess
.
PROC_NR
, 
d°
);

621 
	}
}

623 
PRIVATE
 
	$§_ªvive
 (
m
, 
°©us
)

624 
mq_t
 *
m
;

625 
°©us
;

627 
mesßge
 
ª∂y
;

628 
ªsu…
;

630 #i‡
DEBUG
 & 256

631 { 
	`whîe
(); 
	`¥ötf
("§_ªvive:Ñïlyög %dÅÿ%d f‹Öro¯%d\n", 
°©us
,

632 
m
->
mq_mess
.
m_sour˚
, m->mq_mess.
PROC_NR
); }

634 
ª∂y
.
m_ty≥

REVIVE
;

635 
ª∂y
.
REP_PROC_NR

m
->
mq_mess
.
PROC_NR
;

636 
ª∂y
.
REP_STATUS

°©us
;

637 #i‡
DEBUG
 & 256

638 { 
	`whîe
(); 
	`¥ötf
("£ndög %dÅÿ%d f‹ %d\n", 
ª∂y
.
m_ty≥
,

639 
m
->
mq_mess
.
m_sour˚
, 
ª∂y
.
REP_PROC_NR
); }

641 
	`as£π
(
m
->
mq_mess
.
m_sour˚
 !
MM_PROC_NR
);

642 
ªsu…

	`£nd
 (
m
->
mq_mess
.
m_sour˚
, &
ª∂y
);

643 i‡(
ªsu…
<0)

645 i‡(
ªsu…
 =
ELOCKED
)

647 #i‡
DEBUG


648 { 
	`whîe
(); 
	`¥ötf
("sendÜocked\n"); }

650 
ª∂y
.
m_sour˚

m
->
mq_mess
.m_source;

651 
m
->
mq_mess

ª∂y
;

652 i‡(
ª∂_queue
)

653 
ª∂_queue_èû
->
mq_√xt

m
;

655 
ª∂_queue

m
;

656 
ª∂_queue_èû

m
;

660 
	`ù_∑nic
(("unableÅo send"));

662 
	`mq_‰ì
(
m
);

663 
	}
}

665 
PRIVATE
 
	$¥o˚ss_ªq_q
(
mq
, 
èû
, 
èû_±r
)

666 
mq_t
 *
mq
, *
èû
, **
èû_±r
;

668 
mq_t
 *
m
;

669 
ªsu…
;

671 ;
mq
;)

673 
m

mq
;

674 
mq
mq->
mq_√xt
;

676 #i‡
DEBUG


677 { 
	`whîe
(); 
	`¥ötf
("callingÑwio\n"); }

679 
ªsu…

	`§_rwio
(
m
);

680 i‡(
ªsu…
 =
SUSPEND
)

682 i‡(
mq
)

684 (*
èû_±r
)->
mq_√xt

mq
;

685 *
èû_±r

èû
;

691 
	}
}

693 
PRIVATE
 
	$˝_u2b
 (
¥oc
, 
§c
, 
v¨_acc_±r
, 
size
)

694 
¥oc
;

695 *
§c
;

696 
acc_t
 **
v¨_acc_±r
;

697 
size
;

699 
mesßge
 
mess
;

700 
acc_t
 *
acc
;

701 
i
;

703 
acc

	`bf_memªq
(
size
);

704 *
v¨_acc_±r

acc
;

705 
i
=0;

707 
acc
)

709 
size
(
vú_byãs
)
acc
->
acc_Àngth
;

711 
˝vec
[
i
].
˝v_§c
(
vú_byãs
)
§c
;

712 
˝vec
[
i
].
˝v_d°
(
vú_byãs
)
	`±r2acc_d©a
(
acc
);

713 
˝vec
[
i
].
˝v_size

size
;

715 
§c
 +
size
;

716 
acc
acc->
acc_√xt
;

717 
i
++;

719 i‡(
i
 =
CPVEC_NR
)

721 
mess
.
m_ty≥

SYS_VCOPY
;

722 
mess
.
m1_i1

¥oc
;

723 
mess
.
m1_i2

THIS_PROC
;

724 
mess
.
m1_i3

i
;

725 
mess
.
m1_p1
(*)
˝vec
;

726 i‡(
	`£ndªc
(
SYSTASK
, &
mess
) <0)

727 
	`ù_∑nic
(("unableÅo sendrec"));

728 i‡(
mess
.
m_ty≥
 <0)

730 
	`bf_a‰ì
(*
v¨_acc_±r
);

731 *
v¨_acc_±r
= 0;

732  
mess
.
m_ty≥
;

734 
i
= 0;

737 i‡(
i
)

739 
mess
.
m_ty≥

SYS_VCOPY
;

740 
mess
.
m1_i1

¥oc
;

741 
mess
.
m1_i2

THIS_PROC
;

742 
mess
.
m1_i3

i
;

743 
mess
.
m1_p1
(*)
˝vec
;

744 i‡(
	`£ndªc
(
SYSTASK
, &
mess
) <0)

745 
	`ù_∑nic
(("unableÅo sendrec"));

746 i‡(
mess
.
m_ty≥
 <0)

748 
	`bf_a‰ì
(*
v¨_acc_±r
);

749 *
v¨_acc_±r
= 0;

750  
mess
.
m_ty≥
;

753  
OK
;

754 
	}
}

756 
PRIVATE
 
	$˝_b2u
 (
acc_±r
, 
¥oc
, 
de°
)

757 
acc_t
 *
acc_±r
;

758 
¥oc
;

759 *
de°
;

761 
mesßge
 
mess
;

762 
acc_t
 *
acc
;

763 
i
, 
size
;

765 
acc

acc_±r
;

766 
i
=0;

768 
acc
)

770 
size
(
vú_byãs
)
acc
->
acc_Àngth
;

772 i‡(
size
)

774 
˝vec
[
i
].
˝v_§c
(
vú_byãs
)
	`±r2acc_d©a
(
acc
);

775 
˝vec
[
i
].
˝v_d°
(
vú_byãs
)
de°
;

776 
˝vec
[
i
].
˝v_size

size
;

777 
i
++;

780 
de°
 +
size
;

781 
acc
acc->
acc_√xt
;

783 i‡(
i
 =
CPVEC_NR
)

785 
mess
.
m_ty≥

SYS_VCOPY
;

786 
mess
.
m1_i1

THIS_PROC
;

787 
mess
.
m1_i2

¥oc
;

788 
mess
.
m1_i3

i
;

789 
mess
.
m1_p1
(*)
˝vec
;

790 i‡(
	`£ndªc
(
SYSTASK
, &
mess
) <0)

791 
	`ù_∑nic
(("unableÅo sendrec"));

792 i‡(
mess
.
m_ty≥
 <0)

794 
	`bf_a‰ì
(
acc_±r
);

795  
mess
.
m_ty≥
;

797 
i
= 0;

800 i‡(
i
)

802 
mess
.
m_ty≥

SYS_VCOPY
;

803 
mess
.
m1_i1

THIS_PROC
;

804 
mess
.
m1_i2

¥oc
;

805 
mess
.
m1_i3

i
;

806 
mess
.
m1_p1
(*)
˝vec
;

807 i‡(
	`£ndªc
(
SYSTASK
, &
mess
) <0)

808 
	`ù_∑nic
(("unableÅo sendrec"));

809 i‡(
mess
.
m_ty≥
 <0)

811 
	`bf_a‰ì
(
acc_±r
);

812  
mess
.
m_ty≥
;

815 
	`bf_a‰ì
(
acc_±r
);

816  
OK
;

817 
	}
}

819 
PRIVATE
 
	$§_ª∂_queue
(
¥oc
)

820 
¥oc
;

822 
mq_t
 *
m
, *
m_ˇn˚l
, *
tmp
;

823 
ªsu…
;

825 
m_ˇn˚l

NULL
;

827 
m

ª∂_queue
; m;)

829 i‡(
m
->
mq_mess
.
REP_PROC_NR
 =
¥oc
)

831 
	`as£π
(!
m_ˇn˚l
);

832 
m_ˇn˚l

m
;

833 
m
m->
mq_√xt
;

836 
	`as£π
(
m
->
mq_mess
.
m_sour˚
 !
MM_PROC_NR
);

837 
ªsu…

	`£nd
(
m
->
mq_mess
.
m_sour˚
, &m->mq_mess);

838 i‡(
ªsu…
 !
OK
)

839 
	`ù_∑nic
(("u«bÀÅÿ£nd: %d", 
ªsu…
));

840 
tmp

m
;

841 
m
m->
mq_√xt
;

842 
	`mq_‰ì
(
tmp
);

844 
ª∂_queue

NULL
;

845 i‡(
m_ˇn˚l
)

847 
	`as£π
(
m_ˇn˚l
->
mq_mess
.
m_sour˚
 !
MM_PROC_NR
);

848 
ªsu…

	`£nd
(
m_ˇn˚l
->
mq_mess
.
m_sour˚
, &m_cancel->mq_mess);

849 i‡(
ªsu…
 !
OK
)

850 
	`ù_∑nic
(("u«bÀÅÿ£nd: %d", 
ªsu…
));

851 
	`mq_‰ì
(
m_ˇn˚l
);

855 
	}
}

	@sr.h

5 #i‚de‡
SR_H


6 
	#SR_H


	)

8 
	#MAX_IOCTL_S
 512

	)

10 
	#ETH_DEV
 
ETH_DEV0


	)

11 
	#IP_DEV
 
IP_DEV0


	)

13 
	#ETH_DEV0
 1

	)

14 
	#IP_DEV0
 2

	)

15 
	#TCP_DEV0
 3

	)

16 
	#UDP_DEV0
 4

	)

18 
	#SR_CANCEL_IOCTL
 1

	)

19 
	#SR_CANCEL_READ
 2

	)

20 
	#SR_CANCEL_WRITE
 3

	)

24 
	gacc
;

28 (*
	t§_›í_t
Ë
	tARGS
(–
	tp‹t
, 
	t§fd
,

29 
	tacc
 *(*
	tgë_u£rd©a
)(
	tfd
, 
	tsize_t
 
	toff£t
,size_à
	tcou¡
,

30 
	tf‹_io˘l
),

31 (*
	tput_u£rd©a
)(
	tfd
, 
	tsize_t
 
	toff£t
, 
	tacc
 *
	td©a
,

32 
	tf‹_io˘l
) ));

33 (*
	t§_˛o£_t
Ë
	tARGS
(–
	tfd
 ));

34 (*
	t§_ªad_t
Ë
	tARGS
(–
	tfd
, 
	tsize_t
 
	tcou¡
 ));

35 (*
	t§_wrôe_t
Ë
	tARGS
(–
	tfd
, 
	tsize_t
 
	tcou¡
 ));

36 (*
	t§_io˘l_t
Ë
	tARGS
(–
	tfd
, 
	tªq
 ));

37 (*
	t§_ˇn˚l_t
Ë
	tARGS
(–
	tfd
, 
	twhich_›î©i⁄
 ));

39 
§_öô
 
	`ARGS
(( ));

40 
§_add_mö‹
 
	`ARGS
(–
mö‹
, 
p‹t
, 
§_›í_t
 
›íf
,

41 
§_˛o£_t
 
˛o£f
, 
§_ªad_t
 
§_ªad
, 
§_wrôe_t
 
§_wrôe
,

42 
§_io˘l_t
 
io˘lf
, 
§_ˇn˚l_t
 
ˇn˚lf
 ));

	@sscanf.c

6 
	~<°dio.h
>

7 
	~<°d¨g.h
>

8 
	~<°rög.h
>

9 
	~"loc_ö˛.h
"

11 
	$ssˇnf
(c⁄° *
s
, c⁄° *
f‹m©
, ...)

13 
va_li°
 
≠
;

14 
ªtvÆ
;

15 
FILE
 
tmp_°ªam
;

17 
	`va_°¨t
(
≠
, 
f‹m©
);

19 
tmp_°ªam
.
_fd
 = -1;

20 
tmp_°ªam
.
_Êags
 = 
_IOREAD
 + 
_IONBF
 + 
_IOREADING
;

21 
tmp_°ªam
.
_buf
 = (*Ë
s
;

22 
tmp_°ªam
.
_±r
 = (*Ë
s
;

23 
tmp_°ªam
.
_cou¡
 = 
	`°æí
(
s
);

25 
ªtvÆ
 = 
	`_dosˇn
(&
tmp_°ªam
, 
f‹m©
, 
≠
);

27 
	`va_íd
(
≠
);

29  
ªtvÆ
;

30 
	}
}

	@stadir.c

11 
	~"fs.h
"

12 
	~<sys/°©.h
>

13 
	~"fûe.h
"

14 
	~"Âroc.h
"

15 
	~"öode.h
"

16 
	~"∑øm.h
"

18 
FORWARD
 
_PROTOTYPE
–
ch™ge
, (
öode
 **
iù
, *
«me_±r
, 
Àn
));

19 
FORWARD
 
_PROTOTYPE
–
°©_öode
, (
öode
 *
rù
, 
fûp
 *
fû_±r
,

20 *
u£r_addr
) );

25 
PUBLIC
 
	$do_chdú
()

32 
r
;

33 
Âroc
 *
rÂ
;

35 i‡(
who
 =
MM_PROC_NR
) {

36 
rÂ
 = &
Âroc
[
¶Ÿ1
];

37 
	`put_öode
(
Â
->
Â_roŸdú
);

38 
	`dup_öode
(
Â
->
Â_roŸdú
 = 
rÂ
->fp_rootdir);

39 
	`put_öode
(
Â
->
Â_w‹kdú
);

40 
	`dup_öode
(
Â
->
Â_w‹kdú
 = 
rÂ
->fp_workdir);

47 
Â
->
Â_ªÆuid
 =

48 
Â
->
Â_effuid
 = 
rÂ
->fp_effuid;

49 
Â
->
Â_ªÆgid
 =

50 
Â
->
Â_effgid
 = 
rÂ
->fp_effgid;

51 
Â
->
Â_umask
 = 
rÂ
->fp_umask;

52 (
OK
);

56 
r
 = 
	`ch™ge
(&
Â
->
Â_w‹kdú
, 
«me
, 
«me_Àngth
);

57 (
r
);

58 
	}
}

64 
PUBLIC
 
	$do_chroŸ
()

68 
r
;

70 i‡(!
su≥r_u£r
Ë(
EPERM
);

71 
r
 = 
	`ch™ge
(&
Â
->
Â_roŸdú
, 
«me
, 
«me_Àngth
);

72 (
r
);

73 
	}
}

79 
PRIVATE
 
	$ch™ge
(
iù
, 
«me_±r
, 
Àn
)

80 
öode
 **
iù
;

81 *
«me_±r
;

82 
Àn
;

86 
öode
 *
rù
;

87 
r
;

90 i‡(
	`„tch_«me
(
«me_±r
, 
Àn
, 
M3
Ë!
OK
Ë(
îr_code
);

91 i‡–(
rù
 = 
	`ót_∑th
(
u£r_∑th
)Ë=
NIL_INODE
Ë(
îr_code
);

94 i‡–(
rù
->
i_mode
 & 
I_TYPE
Ë!
I_DIRECTORY
)

95 
r
 = 
ENOTDIR
;

97 
r
 = 
	`f‹biddí
(
rù
, 
X_BIT
);

100 i‡(
r
 !
OK
) {

101 
	`put_öode
(
rù
);

102 (
r
);

106 
	`put_öode
(*
iù
);

107 *
iù
 = 
rù
;

108 (
OK
);

109 
	}
}

115 
PUBLIC
 
	$do_°©
()

119 
öode
 *
rù
;

120 
r
;

125 i‡(
	`„tch_«me
(
«me1
, 
«me1_Àngth
, 
M1
Ë!
OK
Ë(
îr_code
);

126 i‡–(
rù
 = 
	`ót_∑th
(
u£r_∑th
)Ë=
NIL_INODE
Ë(
îr_code
);

127 
r
 = 
	`°©_öode
(
rù
, 
NIL_FILP
, 
«me2
);

128 
	`put_öode
(
rù
);

129 (
r
);

130 
	}
}

136 
PUBLIC
 
	$do_f°©
()

140 
fûp
 *
rfûp
;

143 i‡–(
rfûp
 = 
	`gë_fûp
(
fd
)Ë=
NIL_FILP
Ë(
îr_code
);

145 (
	`°©_öode
(
rfûp
->
fûp_öo
,Ñfûp, 
buf„r
));

146 
	}
}

152 
PRIVATE
 
	$°©_öode
(
rù
, 
fû_±r
, 
u£r_addr
)

153 
öode
 *
rù
;

154 
fûp
 *
fû_±r
;

155 *
u£r_addr
;

159 
°©
 
°©buf
;

160 
mode_t
 
mo
;

161 
r
, 
s
;

164 i‡(
rù
->
i_upd©e
Ë
	`upd©e_times
(rip);

167 
mo
 = 
rù
->
i_mode
 & 
I_TYPE
;

168 
s
 = (
mo
 =
I_CHAR_SPECIAL
 || mÿ=
I_BLOCK_SPECIAL
);

169 
°©buf
.
°_dev
 = 
rù
->
i_dev
;

170 
°©buf
.
°_öo
 = 
rù
->
i_num
;

171 
°©buf
.
°_mode
 = 
rù
->
i_mode
;

172 
°©buf
.
°_∆ök
 = 
rù
->
i_∆öks
 & 
BYTE
;

173 
°©buf
.
°_uid
 = 
rù
->
i_uid
;

174 
°©buf
.
°_gid
 = 
rù
->
i_gid
 & 
BYTE
;

175 
°©buf
.
°_rdev
 = (
dev_t
Ë(
s
 ? 
rù
->
i_z⁄e
[0] : 
NO_DEV
);

176 
°©buf
.
°_size
 = 
rù
->
i_size
;

178 i‡(
rù
->
i_pùe
 =
I_PIPE
) {

179 
°©buf
.
°_mode
 &~
I_REGULAR
;

180 i‡(
fû_±r
 !
NIL_FILP
 && fû_±r->
fûp_mode
 & 
R_BIT
)

181 
°©buf
.
°_size
 -
fû_±r
->
fûp_pos
;

184 
°©buf
.
°_©ime
 = 
rù
->
i_©ime
;

185 
°©buf
.
°_mtime
 = 
rù
->
i_mtime
;

186 
°©buf
.
°_˘ime
 = 
rù
->
i_˘ime
;

189 
r
 = 
	`sys_c›y
(
FS_PROC_NR
, 
D
, (
phys_byãs
Ë&
°©buf
,

190 
who
, 
D
, (
phys_byãs
Ë
u£r_addr
, (phys_byãsË(
°©buf
));

191 (
r
);

192 
	}
}

	@start.c

12 
	~"kî√l.h
"

13 
	~<°dlib.h
>

14 
	~<möix/boŸ.h
>

15 
	~"¥Ÿe˘.h
"

17 
PRIVATE
 
	gk_ívú⁄
[256];

19 
FORWARD
 
_PROTOTYPE
–
k_©oi
, (*
s
) );

25 
PUBLIC
 
	$c°¨t
(
cs
, 
ds
, 
mcs
, 
mds
, 
∑rmoff
, 
∑rmsize
)

26 
U16_t
 
cs
, 
ds
;

27 
U16_t
 
mcs
, 
mds
;

28 
U16_t
 
∑rmoff
, 
∑rmsize
;

32 *
ívp
;

33 
phys_byãs
 
mcode_ba£
, 
md©a_ba£
;

34 
m⁄_°¨t
;

37 
code_ba£
 = 
	`£g2phys
(
cs
);

38 
d©a_ba£
 = 
	`£g2phys
(
ds
);

39 
mcode_ba£
 = 
	`£g2phys
(
mcs
);

40 
md©a_ba£
 = 
	`£g2phys
(
mds
);

43 
	`¥Ÿ_öô
();

46 i‡(
∑rmsize
 >  
k_ívú⁄
 - 2)Öarmsize =  k_environ - 2;

47 
	`phys_c›y
(
md©a_ba£
 + 
∑rmoff
, 
	`vú2phys
(
k_ívú⁄
), (
phys_byãs
Ë
∑rmsize
);

50 
boŸ_∑ømëîs
.
bp_roŸdev
 = 
	`k_©oi
(
	`k_gëív
("rootdev"));

51 
boŸ_∑ømëîs
.
bp_ømimagedev
 = 
	`k_©oi
(
	`k_gëív
("ramimagedev"));

52 
boŸ_∑ømëîs
.
bp_ømsize
 = 
	`k_©oi
(
	`k_gëív
("ramsize"));

53 
boŸ_∑ømëîs
.
bp_¥o˚ss‹
 = 
	`k_©oi
(
	`k_gëív
("processor"));

56 
ívp
 = 
	`k_gëív
("video");

57 i‡(
	`°rcmp
(
ívp
, "ega"Ë=0Ë
ega
 = 
TRUE
;

58 i‡(
	`°rcmp
(
ívp
, "vga"Ë=0Ë
vga
 = 
ega
 = 
TRUE
;

61 
low_memsize
 = 
	`k_©oi
(
	`k_gëív
("memsize"));

62 
ext_memsize
 = 
	`k_©oi
(
	`k_gëív
("emssize"));

65 
¥o˚ss‹
 = 
boŸ_∑ømëîs
.
bp_¥o˚ss‹
;

68 
ívp
 = 
	`k_gëív
("bus");

69 i‡(
ívp
 =
NIL_PTR
 || 
	`°rcmp
(envp, "at") == 0) {

70 
pc_©
 = 
TRUE
;

72 i‡(
	`°rcmp
(
ívp
, "mca") == 0) {

73 
pc_©
 = 
ps_mˇ
 = 
TRUE
;

77 #i‡
_WORD_SIZE
 == 2

78 
¥Ÿe˘ed_mode
 = 
¥o˚ss‹
 >= 286;

82 i‡(!
¥Ÿe˘ed_mode
Ë
m⁄_ªtu∫
 = 0;

83 
m⁄_°¨t
 = 
mcode_ba£
 / 1024;

84 i‡(
m⁄_ªtu∫
 && 
low_memsize
 > 
m⁄_°¨t
)Üow_memsize = mon_start;

89 
	}
}

95 
PRIVATE
 
	$k_©oi
(
s
)

96 *
s
;

100  
	`°πﬁ
(
s
, (**Ë
NULL
, 10);

101 
	}
}

107 
PUBLIC
 *
	$k_gëív
(
«me
)

108 *
«me
;

114 *
«mï
;

115 *
ívp
;

117 
ívp
 = 
k_ívú⁄
; *envp != 0;) {

118 
«mï
 = 
«me
; *«mï !0 && *«mï =*
ívp
;Çamep++,Énvp++)

120 i‡(*
«mï
 ='\0' && *
ívp
 == '=') (envp + 1);

121 *
ívp
++ != 0)

124 (
NIL_PTR
);

125 
	}
}

	@stb.c

8 
	~<™si.h
>

10 
_PROTOTYPE
(
__°b
, (
n
, *
f
, *
t
 ));

11 
	$__°b
(
n
, 
f
, 
t
)

12 
n
;

13 *
f
, *
t
;

15 i‡(
n
 > 0)

17 *
t
++ = *
f
++;

18 --
n
);

19 
	}
}

	@stderr.c

1 
	~<lib.h
>

2 
	~<sys/ty≥s.h
>

3 
	~<uni°d.h
>

5 
_PROTOTYPE
–
°d_îr
, (*
s
));

7 
	$°d_îr
(
s
)

8 *
s
;

10 *
p
 = 
s
;

12 *
p
 != 0)Ö++;

13 
	`wrôe
(2, 
s
, (Ë(
p
 - s));

14 
	}
}

	@strcasecmp.c

7 
	~<˘y≥.h
>

8 
	~<°rög.h
>

10 #ifde‡
__STDC__


11 
	#_CONST
 c⁄°

	)

13 
	#_CONST


	)

17 
	$°rˇ£cmp
(
s1
, 
s2
)

18 
_CONST
 *
s1
, *
s2
;

20 
c1
, 
c2
;

21 
c1

	`touµî
(*
s1
++), 
c2
touµî(*
s2
++), c1 == c2 && (c1 & c2))

23 i‡(
c1
 & 
c2
)

24  
c1
 < 
c2
 ? -1 : 1;

25  
c1
 ? 1 : (
c2
 ? -1 : 0);

26 
	}
}

	@strcat.c

7 
	~<°rög.h
>

10 
	$°rˇt
(*
ªt
, c⁄° *
s2
)

12 *
s1
 = 
ªt
;

14 *
s1
++ != '\0')

16 
s1
--;

17 *
s1
++ = *
s2
++)

19  
ªt
;

20 
	}
}

	@strchr.c

7 
	~<°rög.h
>

10 
	$°rchr
(c⁄° *
s
, 
c
)

12 
c
 = () c;

14 
c
 !*
s
) {

15 i‡(*
s
++ ='\0'Ë 
NULL
;

17  (*)
s
;

18 
	}
}

	@strcmp.c

7 
	~<°rög.h
>

10 
	$°rcmp
(c⁄° *
s1
, c⁄° *
s2
)

12 *
s1
 =*
s2
++) {

13 i‡(*
s1
++ == '\0') {

17 i‡(*
s1
 == '\0')  -1;

18 i‡(*--
s2
 == '\0')  1;

19  (Ë*
s1
 - (Ë*
s2
;

20 
	}
}

	@strcoll.c

7 
	~<°rög.h
>

8 
	~<loˇÀ.h
>

11 
	$°rcﬁl
(c⁄° *
s1
, c⁄° *
s2
)

13 *
s1
 =*
s2
++) {

14 i‡(*
s1
++ == '\0') {

18  *
s1
 - *--
s2
;

19 
	}
}

	@strcpy.c

7 
	~<°rög.h
>

10 
	$°r˝y
(*
ªt
, c⁄° *
s2
)

12 *
s1
 = 
ªt
;

14 *
s1
++ = *
s2
++)

17  
ªt
;

18 
	}
}

	@strcspn.c

7 
	~<°rög.h
>

9 
size_t


10 
	$°rc•n
(c⁄° *
°rög
, c⁄° *
nŸö
)

12 c⁄° *
s1
, *
s2
;

14 
s1
 = 
°rög
; *s1; s1++) {

15 
s2
 = 
nŸö
; *s2 !*
s1
 && *s2; s2++)

17 i‡(*
s2
)

20  
s1
 - 
°rög
;

21 
	}
}

	@strerror.c

7 
	~<°rög.h
>

14 
	$°ªº‹
(
î∫um
)

16 c⁄° *
_sys_îæi°
[];

17 c⁄° 
_sys_√º
;

19 i‡(
î∫um
 < 0 ||Éºnum >
_sys_√º
)

21  (*)
_sys_îæi°
[
î∫um
];

22 
	}
}

	@strftime.c

6 
	~<time.h
>

7 
	~"loc_time.h
"

13 
	$s_¥¡
(*
s
, 
size_t
 
maxsize
, c⁄° *
°r
, 
width
)

15 
width
 > 0 || (width < 0 && *
°r
)) {

16 i‡(!
maxsize
) ;

17 *
s
++ = *
°r
++;

18 
maxsize
--;

19 
width
--;

21  
s
;

22 
	}
}

25 
	$u_¥¡
(*
s
, 
size_t
 
maxsize
, 
vÆ
, 
width
)

27 
c
;

29 
c
 = 
vÆ
 % 10;

30 
vÆ
 = val / 10;

31 i‡(--
width
 > 0 || (width < 0 && 
vÆ
 != 0))

32 
s
 = 
	`u_¥¡
(s, (
maxsize
 ? maxsizê- 1 : 0), 
vÆ
, 
width
);

33 i‡(
maxsize
Ë*
s
++ = 
c
 + '0';

34  
s
;

35 
	}
}

37 
size_t


38 
	$°r·ime
(*
s
, 
size_t
 
maxsize
,

39 c⁄° *
f‹m©
, c⁄° 
tm
 *
timïå
)

41 
size_t
 
n
;

42 *
fú°s
, *
ﬁds
;

44 i‡(!
f‹m©
)  0;

46 
	`_tz£t
();

47 
fú°s
 = 
s
;

48 
maxsize
 && *
f‹m©
) {

49 
maxsize
 && *
f‹m©
 && *format != '%') {

50 *
s
++ = *
f‹m©
++;

51 
maxsize
--;

53 i‡(!
maxsize
 || !*
f‹m©
) ;

54 
f‹m©
++;

56 
ﬁds
 = 
s
;

57 *
f‹m©
++) {

59 
s
 = 
	`s_¥¡
(s, 
maxsize
,

60 
_days
[
timïå
->
tm_wday
], 
ABB_LEN
);

61 
maxsize
 -
s
 - 
ﬁds
;

64 
s
 = 
	`s_¥¡
(s, 
maxsize
, 
_days
[
timïå
->
tm_wday
], -1);

65 
maxsize
 -
s
 - 
ﬁds
;

68 
s
 = 
	`s_¥¡
(s, 
maxsize
,

69 
_m⁄ths
[
timïå
->
tm_m⁄
], 
ABB_LEN
);

70 
maxsize
 -
s
 - 
ﬁds
;

73 
s
 = 
	`s_¥¡
(s, 
maxsize
, 
_m⁄ths
[
timïå
->
tm_m⁄
], -1);

74 
maxsize
 -
s
 - 
ﬁds
;

77 
n
 = 
	`°r·ime
(
s
, 
maxsize
,

78 "%®%b %d %H:%M:%S %Y", 
timïå
);

79 i‡(
n
Ë
maxsize
 -=Ç;

80 
maxsize
 = 0;

81 
s
 +
n
;

84 
s
 = 
	`u_¥¡
(s, 
maxsize
, 
timïå
->
tm_mday
, 2);

85 
maxsize
 -
s
 - 
ﬁds
;

88 
s
 = 
	`u_¥¡
(s, 
maxsize
, 
timïå
->
tm_hour
, 2);

89 
maxsize
 -
s
 - 
ﬁds
;

92 
s
 = 
	`u_¥¡
(s, 
maxsize
,

93 (
timïå
->
tm_hour
 + 11) % 12 + 1, 2);

94 
maxsize
 -
s
 - 
ﬁds
;

97 
s
 = 
	`u_¥¡
(s, 
maxsize
, 
timïå
->
tm_yday
 + 1, 3);

98 
maxsize
 -
s
 - 
ﬁds
;

101 
s
 = 
	`u_¥¡
(s, 
maxsize
, 
timïå
->
tm_m⁄
 + 1, 2);

102 
maxsize
 -
s
 - 
ﬁds
;

105 
s
 = 
	`u_¥¡
(s, 
maxsize
, 
timïå
->
tm_mö
, 2);

106 
maxsize
 -
s
 - 
ﬁds
;

109 
s
 = 
	`s_¥¡
(s, 
maxsize
,

110 (
timïå
->
tm_hour
 < 12) ? "AM" : "PM", 2);

111 
maxsize
 -
s
 - 
ﬁds
;

114 
s
 = 
	`u_¥¡
(s, 
maxsize
, 
timïå
->
tm_£c
, 2);

115 
maxsize
 -
s
 - 
ﬁds
;

118 
s
 = 
	`u_¥¡
(s, 
maxsize
,

119 (
timïå
->
tm_yday
 + 7 -Åimïå->
tm_wday
) / 7, 2);

120 
maxsize
 -
s
 - 
ﬁds
;

123 
s
 = 
	`u_¥¡
(s, 
maxsize
, 
timïå
->
tm_wday
, 1);

124 
maxsize
 -
s
 - 
ﬁds
;

127 
s
 = 
	`u_¥¡
(s, 
maxsize
,

128 (
timïå
->
tm_yday
+7-—imïå->
tm_wday
+6)%7)/7,2);

129 
maxsize
 -
s
 - 
ﬁds
;

132 
n
 = 
	`°r·ime
(
s
, 
maxsize
, "%®%b %d %Y", 
timïå
);

133 i‡(
n
Ë
maxsize
 -=Ç;

134 
maxsize
 = 0;

135 
s
 +
n
;

138 
n
 = 
	`°r·ime
(
s
, 
maxsize
, "%H:%M:%S", 
timïå
);

139 i‡(
n
Ë
maxsize
 -=Ç;

140 
maxsize
 = 0;

141 
s
 +
n
;

144 
s
 = 
	`u_¥¡
(s, 
maxsize
, 
timïå
->
tm_yór
 % 100, 2);

145 
maxsize
 -
s
 - 
ﬁds
;

148 
s
 = 
	`u_¥¡
(s, 
maxsize
, 
timïå
->
tm_yór
 + 
YEAR0
, -1);

149 
maxsize
 -
s
 - 
ﬁds
;

152 
s
 = 
	`s_¥¡
(s, 
maxsize
,

153 
_tz«me
[(
timïå
->
tm_isd°
 > 0)], -1);

154 
maxsize
 -
s
 - 
ﬁds
;

157 *
s
++ = '%';

158 
maxsize
--;

162 *
f‹m©
) format++;

167 i‡(
maxsize
) {

168 *
s
 = '\0';

169  
s
 - 
fú°s
;

172 
	}
}

	@strlen.c

7 
	~<°rög.h
>

9 
size_t


10 
	$°æí
(c⁄° *
‹g
)

12 c⁄° *
s
 = 
‹g
;

14 *
s
++)

17  --
s
 - 
‹g
;

18 
	}
}

	@strncat.c

7 
	~<°rög.h
>

10 
	$°∫ˇt
(*
ªt
, c⁄° *
s2
, 
size_t
 
n
)

12 *
s1
 = 
ªt
;

14 i‡(
n
 > 0) {

15 *
s1
++)

17 
s1
--;

18 *
s1
++ = *
s2
++) {

19 i‡(--
n
 > 0) ;

20 *
s1
 = '\0';

23  
ªt
;

24 }  
s1
;

25 
	}
}

	@strncmp.c

7 
	~<°rög.h
>

10 
	$°∫cmp
(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
n
)

12 i‡(
n
) {

14 i‡(*
s1
 !*
s2
++)

16 i‡(*
s1
++ == '\0')

18 } --
n
 > 0);

19 i‡(
n
 > 0) {

20 i‡(*
s1
 == '\0')  -1;

21 i‡(*--
s2
 == '\0')  1;

22  (Ë*
s1
 - (Ë*
s2
;

26 
	}
}

	@strncpy.c

7 
	~<°rög.h
>

10 
	$°∫˝y
(*
ªt
, c⁄° *
s2
, 
size_t
 
n
)

12 *
s1
 = 
ªt
;

14 i‡(
n
>0) {

15 (*
s1
++ = *
s2
++Ë&& --
n
 > 0)

17 i‡((*--
s2
 ='\0'Ë&& --
n
 > 0) {

19 *
s1
++ = '\0';

20 } --
n
 > 0);

23  
ªt
;

24 
	}
}

	@strpbrk.c

7 
	~<°rög.h
>

10 
	$°Ωbrk
(c⁄° *
°rög
, c⁄° *
brk
)

12 c⁄° *
s1
;

14 *
°rög
) {

15 
s1
 = 
brk
; *s1 && *s1 !*
°rög
; s1++)

17 i‡(*
s1
)

18  (*)
°rög
;

19 
°rög
++;

21  (*)
NULL
;

22 
	}
}

	@strrchr.c

7 
	~<°rög.h
>

10 
	$°ºchr
(c⁄° *
s
, 
c
)

12 c⁄° *
ªsu…
 = 
NULL
;

14 
c
 = () c;

17 i‡(
c
 =*
s
)

18 
ªsu…
 = 
s
;

19 } *
s
++ != '\0');

21  (*)
ªsu…
;

22 
	}
}

	@strspn.c

7 
	~<°rög.h
>

9 
size_t


10 
	$°r•n
(c⁄° *
°rög
, c⁄° *
ö
)

12 c⁄° *
s1
, *
s2
;

14 
s1
 = 
°rög
; *s1; s1++) {

15 
s2
 = 
ö
; *s2 && *s2 !*
s1
; s2++)

17 i‡(*
s2
 == '\0')

20  
s1
 - 
°rög
;

21 
	}
}

	@strstr.c

7 
	~<°rög.h
>

10 
	$°r°r
(c⁄° *
s
, c⁄° *
w™ãd
)

12 c⁄° 
size_t
 
Àn
 = 
	`°æí
(
w™ãd
);

14 i‡(
Àn
 =0Ë (*)
s
;

15 *
s
 !*
w™ãd
 || 
	`°∫cmp
(s, w™ãd, 
Àn
))

16 i‡(*
s
++ == '\0')

17  (*)
NULL
;

18  (*)
s
;

19 
	}
}

	@strtod.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

5 
	$°πod
(c⁄° *
p
, **
µ
)

7 
	`Ârötf
(
°dîr
,"cannotÖrint floatingÖoint\n");

8 
	`exô
(
EXIT_FAILURE
);

9 
	}
}

	@strtok.c

7 
	~<°rög.h
>

10 
	$°πok
(*
°rög
, c⁄° *
£∑øt‹s
)

12 *
s1
, *
s2
;

13 *
ßve°rög
;

15 i‡(
°rög
 =
NULL
) {

16 
°rög
 = 
ßve°rög
;

17 i‡(
°rög
 =
NULL
)  (*)NULL;

20 
s1
 = 
°rög
 + 
	`°r•n
(°rög, 
£∑øt‹s
);

21 i‡(*
s1
 == '\0') {

22 
ßve°rög
 = 
NULL
;

23  (*)
NULL
;

26 
s2
 = 
	`°Ωbrk
(
s1
, 
£∑øt‹s
);

27 i‡(
s2
 !
NULL
)

28 *
s2
++ = '\0';

29 
ßve°rög
 = 
s2
;

30  
s1
;

31 
	}
}

	@strtol.c

7 
	~<˘y≥.h
>

8 
	~<î∫o.h
>

9 
	~<limôs.h
>

10 
	~<°dlib.h
>

13 
°rög2l⁄g
(c⁄° *
≈å
, **
íd±r
,

14 
ba£
, 
is_sig√d
);

17 
	$°πﬁ
(c⁄° *
≈å
, **
íd±r
, 
ba£
)

19  (sig√d )
	`°rög2l⁄g
(
≈å
, 
íd±r
, 
ba£
, 1);

20 
	}
}

23 
	$°πoul
(c⁄° *
≈å
, **
íd±r
, 
ba£
)

25  ()
	`°rög2l⁄g
(
≈å
, 
íd±r
, 
ba£
, 0);

26 
	}
}

28 
	#bëwìn
(
a
, 
c
, 
z
Ë((Ë((cË- (a)Ë<(Ë((zË- (a)))

	)

31 
	$°rög2l⁄g
(c⁄° *
≈å
, ** c⁄° 
íd±r
,

32 
ba£
, 
is_sig√d
)

34 
v
;

35 
vÆ
 = 0;

36 
c
;

37 
ovÊ
 = 0, 
sign
 = 1;

38 c⁄° *
°¨ä±r
 = 
≈å
, *
ƒ°¨t
;

40 i‡(
íd±r
Ë*íd±∏(*)
≈å
;

41 
	`is•a˚
(*
≈å
))Çptr++;

42 
c
 = *
≈å
;

44 i‡(
c
 == '-' || c == '+') {

45 i‡(
c
 ='-'Ë
sign
 = -1;

46 
≈å
++;

48 
ƒ°¨t
 = 
≈å
;

51 i‡(
ba£
 == 0)

52 i‡(*
≈å
 == '0')

53 i‡(*++
≈å
 == 'x' || *nptr == 'X') {

54 
ba£
 = 16;

55 
≈å
++;

57 
ba£
 = 8;

58 
ba£
 = 10;

59 i‡(
ba£
==16 && *
≈å
=='0' && (*++nptr =='x' || *nptr =='X'))

60 
≈å
++;

63 
c
 = *
≈å
;

64 i‡(
	`bëwìn
('0', 
c
, '9')) {

65 
v
 = 
c
 - '0';

67 i‡(
	`bëwìn
('a', 
c
, 'z')) {

68 
v
 = 
c
 - 'a' + 0xa;

70 i‡(
	`bëwìn
('A', 
c
, 'Z')) {

71 
v
 = 
c
 - 'A' + 0xA;

75 i‡(
v
 >
ba£
) ;

76 i‡(
vÆ
 > (
ULONG_MAX
 - 
v
Ë/ 
ba£
Ë
ovÊ
++;

77 
vÆ
 = (vÆ * 
ba£
Ë+ 
v
;

78 
≈å
++;

80 i‡(
íd±r
) {

81 i‡(
ƒ°¨t
 =
≈å
Ë*
íd±r
 = (*)
°¨ä±r
;

82 *
íd±r
 = (*)
≈å
;

85 i‡(!
ovÊ
) {

87 i‡(
is_sig√d


88 && ( (
sign
 < 0 && 
vÆ
 > -()
LONG_MIN
)

89 || (
sign
 > 0 && 
vÆ
 > 
LONG_MAX
)))

90 
ovÊ
++;

93 i‡(
ovÊ
) {

94 
î∫o
 = 
ERANGE
;

95 i‡(
is_sig√d
)

96 i‡(
sign
 < 0Ë 
LONG_MIN
;

97  
LONG_MAX
;

98  
ULONG_MAX
;

100  (Ë
sign
 * 
vÆ
;

101 
	}
}

	@strxfrm.c

7 
	~<°rög.h
>

9 
size_t


10 
	$°rx‰m
(*
s1
, c⁄° *
ßve
, 
size_t
 
n
)

12 c⁄° *
s2
 = 
ßve
;

14 *
s2
) {

15 i‡(
n
 > 1) {

16 
n
--;

17 *
s1
++ = *
s2
++;

19 
s2
++;

21 i‡(
n
 > 0)

22 *
s1
++ = '\0';

23  
s2
 - 
ßve
;

24 
	}
}

	@sub_ext.c

12 
	~"FP_ty≥s.h
"

15 
	$sub_ext
(
e1
,
e2
)

16 
EXTEND
 *
e1
,*
e2
;

18 i‡((
e2
->
m1
 |É2->
m2
) == 0L) {

21 i‡((
e1
->
m1
 |É1->
m2
) == 0L) {

22 *
e1
 = *
e2
;

23 
e1
->
sign
 = 
e2
->sign ? 0 : 1;

26 
	`s·_ext
(
e1
, 
e2
);

27 i‡(
e1
->
sign
 !
e2
->sign) {

29 i‡(
	`b64_add
(&
e1
->
m™tisß
,&
e2
->mantissa)) {

30 
	`b64_rs·
(&
e1
->
m™tisß
);

31 
e1
->
m1
 |= 0x80000000L;

32 
e1
->
exp
++;

35 i‡(
e2
->
m1
 > 
e1
->m1 ||

36 (
e2
->
m1
 =
e1
->m1 &&É2->
m2
 >É1->m2)) {

38 i‡(
e1
->
m2
 > 
e2
->m2) {

39 
e2
->
m1
 -= 1;

41 
e2
->
m1
 -
e1
->m1;

42 
e2
->
m2
 -
e1
->m2;

43 *
e1
 = *
e2
;

44 
e1
->
sign
 = 
e2
->sign ? 0 : 1;

47 i‡(
e2
->
m2
 > 
e1
->m2)

48 
e1
->
m1
 -= 1;

49 
e1
->
m1
 -
e2
->m1;

50 
e1
->
m2
 -
e2
->m2;

52 
	`ƒm_ext
(
e1
);

53 
	}
}

	@super.c

14 
	~"fs.h
"

15 
	~<°rög.h
>

16 
	~<möix/boŸ.h
>

17 
	~"buf.h
"

18 
	~"öode.h
"

19 
	~"su≥r.h
"

21 
	#BITCHUNK_BITS
 (
	`usizeof
(
bôchunk_t
Ë* 
CHAR_BIT
)

	)

22 
	#BITS_PER_BLOCK
 (
BITMAP_CHUNKS
 * 
BITCHUNK_BITS
)

	)

27 
PUBLIC
 
bô_t
 
	$Æloc_bô
(
•
, 
m≠
, 
‹igö
)

28 
su≥r_block
 *
•
;

29 
m≠
;

30 
bô_t
 
‹igö
;

34 
block_t
 
°¨t_block
;

35 
bô_t
 
m≠_bôs
;

36 
bô_blocks
;

37 
block
, 
w‹d
, 
bcou¡
, 
wcou¡
;

38 
buf
 *
bp
;

39 
bôchunk_t
 *
w±r
, *
wlim
, 
k
;

40 
bô_t
 
i
, 
b
;

42 i‡(
•
->
s_rd_⁄ly
)

43 
	`∑nic
("ˇn'àÆloˇã bô o¿ªad-⁄ly fûesys.", 
NO_NUM
);

45 i‡(
m≠
 =
IMAP
) {

46 
°¨t_block
 = 
SUPER_BLOCK
 + 1;

47 
m≠_bôs
 = 
•
->
s_nöodes
 + 1;

48 
bô_blocks
 = 
•
->
s_im≠_blocks
;

50 
°¨t_block
 = 
SUPER_BLOCK
 + 1 + 
•
->
s_im≠_blocks
;

51 
m≠_bôs
 = 
•
->
s_z⁄es
 - (•->
s_fú°d©az⁄e
 - 1);

52 
bô_blocks
 = 
•
->
s_zm≠_blocks
;

56 i‡(
‹igö
 >
m≠_bôs
) origin = 0;

59 
block
 = 
‹igö
 / 
BITS_PER_BLOCK
;

60 
w‹d
 = (
‹igö
 % 
BITS_PER_BLOCK
Ë/ 
BITCHUNK_BITS
;

63 
bcou¡
 = 
bô_blocks
 + 1;

65 
bp
 = 
	`gë_block
(
•
->
s_dev
, 
°¨t_block
 + 
block
, 
NORMAL
);

66 
wlim
 = &
bp
->
b_bôm≠
[
BITMAP_CHUNKS
];

69 
w±r
 = &
bp
->
b_bôm≠
[
w‹d
]; w±∏< 
wlim
; wptr++) {

72 i‡(*
w±r
 =(
bôchunk_t
) ~0) ;

75 
k
 = 
	`c⁄v2
(
•
->
s_«tive
, (Ë*
w±r
);

76 
i
 = 0; (
k
 & (1 << i)) != 0; ++i) {}

79 
b
 = ((
bô_t
Ë
block
 * 
BITS_PER_BLOCK
)

80 + (
w±r
 - &
bp
->
b_bôm≠
[0]Ë* 
BITCHUNK_BITS


81 + 
i
;

84 i‡(
b
 >
m≠_bôs
) ;

87 
k
 |1 << 
i
;

88 *
w±r
 = 
	`c⁄v2
(
•
->
s_«tive
, (Ë
k
);

89 
bp
->
b_dút
 = 
DIRTY
;

90 
	`put_block
(
bp
, 
MAP_BLOCK
);

91 (
b
);

93 
	`put_block
(
bp
, 
MAP_BLOCK
);

94 i‡(++
block
 >
bô_blocks
) block = 0;

95 
w‹d
 = 0;

96 } --
bcou¡
 > 0);

97 (
NO_BIT
);

98 
	}
}

104 
PUBLIC
 
	$‰ì_bô
(
•
, 
m≠
, 
bô_ªtu∫ed
)

105 
su≥r_block
 *
•
;

106 
m≠
;

107 
bô_t
 
bô_ªtu∫ed
;

111 
block
, 
w‹d
, 
bô
;

112 
buf
 *
bp
;

113 
bôchunk_t
 
k
, 
mask
;

114 
block_t
 
°¨t_block
;

116 i‡(
•
->
s_rd_⁄ly
)

117 
	`∑nic
("ˇn'à‰ì bô o¿ªad-⁄ly fûesys.", 
NO_NUM
);

119 i‡(
m≠
 =
IMAP
) {

120 
°¨t_block
 = 
SUPER_BLOCK
 + 1;

122 
°¨t_block
 = 
SUPER_BLOCK
 + 1 + 
•
->
s_im≠_blocks
;

124 
block
 = 
bô_ªtu∫ed
 / 
BITS_PER_BLOCK
;

125 
w‹d
 = (
bô_ªtu∫ed
 % 
BITS_PER_BLOCK
Ë/ 
BITCHUNK_BITS
;

126 
bô
 = 
bô_ªtu∫ed
 % 
BITCHUNK_BITS
;

127 
mask
 = 1 << 
bô
;

129 
bp
 = 
	`gë_block
(
•
->
s_dev
, 
°¨t_block
 + 
block
, 
NORMAL
);

131 
k
 = 
	`c⁄v2
(
•
->
s_«tive
, (Ë
bp
->
b_bôm≠
[
w‹d
]);

132 i‡(!(
k
 & 
mask
)) {

133 
	`∑nic
(
m≠
 =
IMAP
 ? "triedÅo free unused inode" :

134 "åõdÅÿ‰ì unu£d block", 
NO_NUM
);

137 
k
 &~
mask
;

138 
bp
->
b_bôm≠
[
w‹d
] = 
	`c⁄v2
(
•
->
s_«tive
, (Ë
k
);

139 
bp
->
b_dút
 = 
DIRTY
;

141 
	`put_block
(
bp
, 
MAP_BLOCK
);

142 
	}
}

148 
PUBLIC
 
su≥r_block
 *
	$gë_su≥r
(
dev
)

149 
dev_t
 
dev
;

153 
su≥r_block
 *
•
;

155 
•
 = &
su≥r_block
[0]; s∞< &su≥r_block[
NR_SUPERS
]; sp++)

156 i‡(
•
->
s_dev
 =
dev
) (sp);

159 
	`∑nic
("ˇn'àföd su≥rblock f‹ devi˚ (ö decimÆ)", (Ë
dev
);

161 (
NIL_SUPER
);

162 
	}
}

168 
PUBLIC
 
	$mou¡ed
(
rù
)

169 
öode
 *
rù
;

173 
su≥r_block
 *
•
;

174 
dev_t
 
dev
;

176 
dev
 = (
dev_t
Ë
rù
->
i_z⁄e
[0];

177 i‡(
dev
 =
ROOT_DEV
Ë(
TRUE
);

179 
•
 = &
su≥r_block
[0]; s∞< &su≥r_block[
NR_SUPERS
]; sp++)

180 i‡(
•
->
s_dev
 =
dev
Ë(
TRUE
);

182 (
FALSE
);

183 
	}
}

189 
PUBLIC
 
	$ªad_su≥r
(
•
)

190 
su≥r_block
 *
•
;

194 
buf
 *
bp
;

195 
dev_t
 
dev
;

196 
magic
;

197 
vîsi⁄
, 
«tive
;

199 
dev
 = 
•
->
s_dev
;

200 
bp
 = 
	`gë_block
(
•
->
s_dev
, 
SUPER_BLOCK
, 
NORMAL
);

201 
	`mem˝y
–(*Ë
•
, 
bp
->
b_d©a
, (
size_t
Ë
SUPER_SIZE
);

202 
	`put_block
(
bp
, 
ZUPER_BLOCK
);

203 
•
->
s_dev
 = 
NO_DEV
;

204 
magic
 = 
•
->
s_magic
;

207 i‡(
magic
 =
SUPER_MAGIC
 || magi¯=
	`c⁄v2
(
BYTE_SWAP
, SUPER_MAGIC)) {

208 
vîsi⁄
 = 
V1
;

209 
«tive
 = (
magic
 =
SUPER_MAGIC
);

210 } i‡(
magic
 =
SUPER_V2
 || magi¯=
	`c⁄v2
(
BYTE_SWAP
, SUPER_V2)) {

211 
vîsi⁄
 = 
V2
;

212 
«tive
 = (
magic
 =
SUPER_V2
);

214 (
EINVAL
);

219 
•
->
s_nöodes
 = 
	`c⁄v2
(
«tive
, () sp->s_ninodes);

220 
•
->
s_nz⁄es
 = 
	`c⁄v2
(
«tive
, () sp->s_nzones);

221 
•
->
s_im≠_blocks
 = 
	`c⁄v2
(
«tive
, () sp->s_imap_blocks);

222 
•
->
s_zm≠_blocks
 = 
	`c⁄v2
(
«tive
, () sp->s_zmap_blocks);

223 
•
->
s_fú°d©az⁄e
 = 
	`c⁄v2
(
«tive
, () sp->s_firstdatazone);

224 
•
->
s_log_z⁄e_size
 = 
	`c⁄v2
(
«tive
, () sp->s_log_zone_size);

225 
•
->
s_max_size
 = 
	`c⁄v4
(
«tive
, sp->s_max_size);

226 
•
->
s_z⁄es
 = 
	`c⁄v4
(
«tive
, sp->s_zones);

239 i‡(
vîsi⁄
 =
V1
) {

240 
•
->
s_z⁄es
 = sp->
s_nz⁄es
;

241 
•
->
s_öodes_≥r_block
 = 
V1_INODES_PER_BLOCK
;

242 
•
->
s_ndz⁄es
 = 
V1_NR_DZONES
;

243 
•
->
s_nödús
 = 
V1_INDIRECTS
;

245 
•
->
s_öodes_≥r_block
 = 
V2_INODES_PER_BLOCK
;

246 
•
->
s_ndz⁄es
 = 
V2_NR_DZONES
;

247 
•
->
s_nödús
 = 
V2_INDIRECTS
;

250 
•
->
s_i£¨ch
 = 0;

251 
•
->
s_z£¨ch
 = 0;

252 
•
->
s_vîsi⁄
 = 
vîsi⁄
;

253 
•
->
s_«tive
 = 
«tive
;

256 i‡(
•
->
s_im≠_blocks
 < 1 || sp->
s_zm≠_blocks
 < 1

257 || 
•
->
s_nöodes
 < 1 || sp->
s_z⁄es
 < 1

258 || (Ë
•
->
s_log_z⁄e_size
 > 4) {

259 (
EINVAL
);

261 
•
->
s_dev
 = 
dev
;

262 (
OK
);

263 
	}
}

	@super.h

22 
EXTERN
 
	ssu≥r_block
 {

23 
öo_t
 
	ms_nöodes
;

24 
z⁄e1_t
 
	ms_nz⁄es
;

25 
	ms_im≠_blocks
;

26 
	ms_zm≠_blocks
;

27 
z⁄e1_t
 
	ms_fú°d©az⁄e
;

28 
	ms_log_z⁄e_size
;

29 
off_t
 
	ms_max_size
;

30 
	ms_magic
;

31 
	ms_∑d
;

32 
z⁄e_t
 
	ms_z⁄es
;

35 
öode
 *
	ms_isup
;

36 
öode
 *
	ms_imou¡
;

37 
	ms_öodes_≥r_block
;

38 
dev_t
 
	ms_dev
;

39 
	ms_rd_⁄ly
;

40 
	ms_«tive
;

41 
	ms_vîsi⁄
;

42 
	ms_ndz⁄es
;

43 
	ms_nödús
;

44 
bô_t
 
	ms_i£¨ch
;

45 
bô_t
 
	ms_z£¨ch
;

46 } 
	gsu≥r_block
[
NR_SUPERS
];

48 
	#NIL_SUPER
 (
su≥r_block
 *Ë0

	)

49 
	#IMAP
 0

	)

50 
	#ZMAP
 1

	)

	@swab.c

1 
	~<lib.h
>

6 
_PROTOTYPE
–
swab
, (*
‰om
, *
to
, 
cou¡
));

8 
	$swab
(
‰om
, 
to
, 
cou¡
)

9 *
‰om
;

10 *
to
;

11 
cou¡
;

13 
ãmp
;

15 
cou¡
 >>= 1;

17 --
cou¡
 >= 0) {

18 
ãmp
 = *
‰om
++;

19 *
to
++ = *
‰om
++;

20 *
to
++ = 
ãmp
;

22 
	}
}

	@sys_abort.c

1 
	~"sy¶ib.h
"

2 
	~<°d¨g.h
>

3 
	~<uni°d.h
>

5 
PUBLIC
 
	$sys_ab‹t
(
how
, ...)

9 
mesßge
 
m
;

10 
va_li°
 
≠
;

12 
	`va_°¨t
(
≠
, 
how
);

13 i‡((
m
.
m1_i1
 = 
how
Ë=
RBT_MONITOR
Ëm.
m1_p1
 = 
	`va_¨g
(
≠
, *);

14 
	`va_íd
(
≠
);

16 (
	`_èskˇŒ
(
SYSTASK
, 
SYS_ABORT
, &
m
));

17 
	}
}

	@sys_copy.c

1 
	~"sy¶ib.h
"

3 
PUBLIC
 
	$sys_c›y
(
§c_¥oc
, 
§c_£g
, 
§c_vú
,

4 
d°_¥oc
, 
d°_£g
, 
d°_vú
, 
byãs
)

5 
§c_¥oc
;

6 
§c_£g
;

7 
phys_byãs
 
§c_vú
;

8 
d°_¥oc
;

9 
d°_£g
;

10 
phys_byãs
 
d°_vú
;

11 
phys_byãs
 
byãs
;

18 
mesßge
 
c›y_mess
;

20 i‡(
byãs
 =0LË(
OK
);

21 
c›y_mess
.
SRC_SPACE
 = 
§c_£g
;

22 
c›y_mess
.
SRC_PROC_NR
 = 
§c_¥oc
;

23 
c›y_mess
.
SRC_BUFFER
 = (Ë
§c_vú
;

25 
c›y_mess
.
DST_SPACE
 = 
d°_£g
;

26 
c›y_mess
.
DST_PROC_NR
 = 
d°_¥oc
;

27 
c›y_mess
.
DST_BUFFER
 = (Ë
d°_vú
;

29 
c›y_mess
.
COPY_BYTES
 = (Ë
byãs
;

30 (
	`_èskˇŒ
(
SYSTASK
, 
SYS_COPY
, &
c›y_mess
));

31 
	}
}

	@sys_endsig.c

1 
	~"sy¶ib.h
"

3 
PUBLIC
 
	$sys_ídsig
(
¥oc
)

4 
¥oc
;

6 
mesßge
 
m
;

8 
m
.
m1_i1
 = 
¥oc
;

9 (
	`_èskˇŒ
(
SYSTASK
, 
SYS_ENDSIG
, &
m
));

10 
	}
}

	@sys_exec.c

1 
	~"sy¶ib.h
"

3 
PUBLIC
 
	$sys_exec
(
¥oc
, 
±r
, 
åa˚d
, 
¥og_«me
, 
öôpc
)

4 
¥oc
;

5 *
±r
;

6 
åa˚d
;

7 *
¥og_«me
;

8 
vú_byãs
 
öôpc
;

12 
mesßge
 
m
;

14 
m
.
m1_i1
 = 
¥oc
;

15 
m
.
m1_i2
 = 
åa˚d
;

16 
m
.
m1_p1
 = 
±r
;

17 
m
.
m1_p2
 = 
¥og_«me
;

18 
m
.
m1_p3
 = (*)
öôpc
;

19 (
	`_èskˇŒ
(
SYSTASK
, 
SYS_EXEC
, &
m
));

20 
	}
}

	@sys_fork.c

1 
	~"sy¶ib.h
"

3 
PUBLIC
 
	$sys_f‹k
(
∑ª¡
, 
chûd
, 
pid
, 
chûd_ba£_‹_shadow
)

4 
∑ª¡
;

5 
chûd
;

6 
pid
;

7 
phys_˛icks
 
chûd_ba£_‹_shadow
;

12 
mesßge
 
m
;

14 
m
.
m1_i1
 = 
∑ª¡
;

15 
m
.
m1_i2
 = 
chûd
;

16 
m
.
m1_i3
 = 
pid
;

17 
m
.
m1_p1
 = (*Ë
chûd_ba£_‹_shadow
;

18 (
	`_èskˇŒ
(
SYSTASK
, 
SYS_FORK
, &
m
));

19 
	}
}

	@sys_fresh.c

1 
	~"sy¶ib.h
"

3 
PUBLIC
 
	$sys_‰esh
(
¥oc
, 
±r
, 
dc
, 
ba£p
, 
sizï
)

4 
¥oc
;

5 
mem_m≠
 *
±r
;

6 
phys_˛icks
 
dc
;

7 
phys_˛icks
 *
ba£p
, *
sizï
;

11 
mesßge
 
m
;

12 
r
;

14 
m
.
m1_i1
 = 
¥oc
;

15 
m
.
m1_i2
 = (Ë
dc
;

16 
m
.
m1_p1
 = (*Ë
±r
;

17 
r
 = 
	`_èskˇŒ
(
SYSTASK
, 
SYS_FRESH
, &
m
);

18 *
ba£p
 = (
phys_˛icks
Ë
m
.
m1_i1
;

19 *
sizï
 = (
phys_˛icks
Ë
m
.
m1_i2
;

20 (
r
);

21 
	}
}

	@sys_getmap.c

1 
	~"sy¶ib.h
"

3 
PUBLIC
 
	$sys_gëm≠
(
¥oc
, 
±r
)

4 
¥oc
;

5 
mem_m≠
 *
±r
;

9 
mesßge
 
m
;

11 
m
.
m1_i1
 = 
¥oc
;

12 
m
.
m1_p1
 = (*Ë
±r
;

13 (
	`_èskˇŒ
(
SYSTASK
, 
SYS_GETMAP
, &
m
));

14 
	}
}

	@sys_getsp.c

1 
	~"sy¶ib.h
"

3 
PUBLIC
 
	$sys_gë•
(
¥oc
, 
√w•
)

4 
¥oc
;

5 
vú_byãs
 *
√w•
;

9 
mesßge
 
m
;

10 
r
;

12 
m
.
m1_i1
 = 
¥oc
;

13 
r
 = 
	`_èskˇŒ
(
SYSTASK
, 
SYS_GETSP
, &
m
);

14 *
√w•
 = (
vú_byãs
Ë
m
.
STACK_PTR
;

15 (
r
);

16 
	}
}

	@sys_kill.c

1 
	~"sy¶ib.h
"

3 
PUBLIC
 
	$sys_kûl
(
¥oc
, 
sigƒ
)

4 
¥oc
;

5 
sigƒ
;

8 
mesßge
 
m
;

10 
m
.
m6_i1
 = 
¥oc
;

11 
m
.
m6_i2
 = 
sigƒ
;

12 (
	`_èskˇŒ
(
SYSTASK
, 
SYS_KILL
, &
m
));

13 
	}
}

	@sys_newmap.c

1 
	~"sy¶ib.h
"

3 
PUBLIC
 
	$sys_√wm≠
(
¥oc
, 
±r
)

4 
¥oc
;

5 
mem_m≠
 *
±r
;

9 
mesßge
 
m
;

11 
m
.
m1_i1
 = 
¥oc
;

12 
m
.
m1_p1
 = (*Ë
±r
;

13 (
	`_èskˇŒ
(
SYSTASK
, 
SYS_NEWMAP
, &
m
));

14 
	}
}

	@sys_oldsig.c

1 
	~"sy¶ib.h
"

3 
PUBLIC
 
	$sys_ﬁdsig
(
¥oc
, 
sig
, 
sigh™dÀr
)

4 
¥oc
;

5 
sig
;

6 
sigh™dÀr_t
 
sigh™dÀr
;

10 
mesßge
 
m
;

12 
m
.
m6_i1
 = 
¥oc
;

13 
m
.
m6_i2
 = 
sig
;

14 
m
.
m6_f1
 = 
sigh™dÀr
;

15 (
	`_èskˇŒ
(
SYSTASK
, 
SYS_OLDSIG
, &
m
));

16 
	}
}

	@sys_sendsig.c

1 
	~"sy¶ib.h
"

3 
PUBLIC
 
	$sys_£ndsig
(
¥oc
, 
smp
)

4 
¥oc
;

5 
sigmsg
 *
smp
;

7 
mesßge
 
m
;

9 
m
.
m1_i1
 = 
¥oc
;

10 
m
.
m1_p1
 = (*Ë
smp
;

11 (
	`_èskˇŒ
(
SYSTASK
, 
SYS_SENDSIG
, &
m
));

12 
	}
}

	@sys_sigret.c

1 
	~"sy¶ib.h
"

3 
PUBLIC
 
	$sys_sigªtu∫
(
¥oc
, 
s˝
, 
Êags
)

4 
¥oc
;

5 
vú_byãs
 
s˝
;

6 
Êags
;

8 
mesßge
 
m
;

10 
m
.
m1_i1
 = 
¥oc
;

11 
m
.
m1_i2
 = 
Êags
;

12 
m
.
m1_p1
 = (*Ë
s˝
;

13 (
	`_èskˇŒ
(
SYSTASK
, 
SYS_SIGRETURN
, &
m
));

14 
	}
}

	@sys_times.c

1 
	~"sy¶ib.h
"

3 
PUBLIC
 
	$sys_times
(
¥oc
, 
±r
)

4 
¥oc
;

5 
˛ock_t
 
±r
[5];

8 
mesßge
 
m
;

9 
r
;

11 
m
.
m1_i1
 = 
¥oc
;

12 
m
.
m1_p1
 = (*)
±r
;

13 
r
 = 
	`_èskˇŒ
(
SYSTASK
, 
SYS_TIMES
, &
m
);

14 
±r
[0] = 
m
.
USER_TIME
;

15 
±r
[1] = 
m
.
SYSTEM_TIME
;

16 
±r
[2] = 
m
.
CHILD_UTIME
;

17 
±r
[3] = 
m
.
CHILD_STIME
;

18 
±r
[4] = 
m
.
BOOT_TICKS
;

19 (
r
);

20 
	}
}

	@sys_trace.c

1 
	~"sy¶ib.h
"

3 
PUBLIC
 
	$sys_åa˚
(
ªq
, 
¥o˙r
, 
addr
, 
d©a_p
)

4 
ªq
, 
¥o˙r
;

5 
addr
, *
d©a_p
;

7 
mesßge
 
m
;

8 
r
;

10 
m
.
m2_i1
 = 
¥o˙r
;

11 
m
.
m2_i2
 = 
ªq
;

12 
m
.
m2_l1
 = 
addr
;

13 i‡(
d©a_p
Ë
m
.
m2_l2
 = *data_p;

14 
r
 = 
	`_èskˇŒ
(
SYSTASK
, 
SYS_TRACE
, &
m
);

15 i‡(
d©a_p
Ë*d©a_∞
m
.
m2_l2
;

16 (
r
);

17 
	}
}

	@sys_xit.c

1 
	~"sy¶ib.h
"

3 
PUBLIC
 
	$sys_xô
(
∑ª¡
, 
¥oc
, 
ba£p
, 
sizï
)

4 
∑ª¡
;

5 
¥oc
;

6 
phys_˛icks
 *
ba£p
;

7 
phys_˛icks
 *
sizï
;

11 
mesßge
 
m
;

12 
r
;

14 
m
.
m1_i1
 = 
∑ª¡
;

15 
m
.
m1_i2
 = 
¥oc
;

16 
r
 = 
	`_èskˇŒ
(
SYSTASK
, 
SYS_XIT
, &
m
);

17 *
ba£p
 = (
phys_˛icks
Ë
m
.
m1_i1
;

18 *
sizï
 = (
phys_˛icks
Ë
m
.
m1_i2
;

19 (
r
);

20 
	}
}

	@syscall.c

1 
	~<lib.h
>

3 
PUBLIC
 
	$_sysˇŒ
(
who
, 
sysˇŒƒ
, 
msg±r
)

4 
who
;

5 
sysˇŒƒ
;

6 
mesßge
 *
msg±r
;

8 
°©us
;

10 
msg±r
->
m_ty≥
 = 
sysˇŒƒ
;

11 
°©us
 = 
	`_£ndªc
(
who
, 
msg±r
);

12 i‡(
°©us
 != 0) {

15 
msg±r
->
m_ty≥
 = 
°©us
;

17 i‡(
msg±r
->
m_ty≥
 < 0) {

18 
î∫o
 = -
msg±r
->
m_ty≥
;

21 (
msg±r
->
m_ty≥
);

22 
	}
}

	@sysconf.c

10 
	~<lib.h
>

11 
	~<uni°d.h
>

12 
	~<time.h
>

14 
PUBLIC
 
	$sysc⁄f
(
«me
)

15 
«me
;

17 
«me
) {

18 
_SC_ARG_MAX
:

19  (Ë
ARG_MAX
;

21 
_SC_CHILD_MAX
:

22  (Ë
CHILD_MAX
;

24 
_SC_CLK_TCK
:

25  (Ë
CLOCKS_PER_SEC
;

27 
_SC_NGROUPS_MAX
:

28  (Ë
NGROUPS_MAX
;

30 
_SC_OPEN_MAX
:

31  (Ë
OPEN_MAX
;

33 
_SC_JOB_CONTROL
:

36 
_SC_SAVED_IDS
:

39 
_SC_VERSION
:

40  (Ë
_POSIX_VERSION
;

42 
_SC_STREAM_MAX
:

43  (Ë
STREAM_MAX
;

45 
_SC_TZNAME_MAX
:

46  (Ë
TZNAME_MAX
;

49 
î∫o
 = 
EINVAL
;

52 
	}
}

	@syslib.h

3 
	#_SYSTEM


	)

5 
	~<lib.h
>

6 
	~<möix/com.h
>

7 
	~<möix/sy¶ib.h
>

	@sysos9.c

5 
	~"edôlöe.h
"

6 
	~<sg°©.h
>

7 
	~<modes.h
>

11 
	$æ_ây£t
(
Re£t
)

12 
Re£t
;

14 
sgbuf
 
ﬁd
;

15 
sgbuf
 
√w
;

18 i‡(
Re£t
 == 0) {

19 
	`_gs_›t
(0, &
ﬁd
);

20 
	`_gs_›t
(0, &
√w
);

21 
√w
.
sg_back•
 = 0;Çew.
sg_dñëe
 = 0;Çew.
sg_echo
 = 0;

22 
√w
.
sg_Æf
 = 0;Çew.
sg_nuŒs
 = 0;Çew.
sg_∑u£
 = 0;

23 
√w
.
sg_∑ge
 = 0;Çew.
sg_b•ch
 = 0;Çew.
sg_d ch
 = 0;

24 
√w
.
sg_e‹ch
 = 0;Çew.
sg_eofch
 = 0;Çew.
sg_ænch
 = 0;

25 
√w
.
sg_du ch
 = 0;Çew.
sg_psch
 = 0;Çew.
sg_kbich
 = 0;

26 
√w
.
sg_kbach
 = 0;Çew.
sg_b£ch
 = 0;Çew.
sg_bñlch
 = 0;

27 
√w
.
sg_x⁄
 = 0;Çew.
sg_xoff
 = 0;Çew.
sg_èb¸
 = 0;

28 
√w
.
sg_èbsiz
 = 0;

29 
	`_ss_›t
(0, &
√w
);

30 
æ_îa£
 = 
ﬁd
.
sg_b•ch
;

31 
æ_kûl
 = 
ﬁd
.
sg_d ch
;

32 
æ_eof
 = 
ﬁd
.
sg_eofch
;

33 
æ_öå
 = 
ﬁd
.
sg_kbich
;

34 
æ_quô
 = -1;

37 
	`_ss_›t
(0, &
ﬁd
);

38 
	}
}

41 
	$æ_add_¶ash
(
∑th
, 
p
)

42 *
∑th
;

43 *
p
;

45 ()
	`°rˇt
(
p
, 
	`ac˚ss
(
∑th
, 
S_IREAD
 | 
S_IFDIR
) ? " " : "/");

46 
	}
}

	@system.c

98 
	~"kî√l.h
"

99 
	~<sig«l.h
>

100 
	~<uni°d.h
>

101 
	~<sys/sigc⁄ãxt.h
>

102 
	~<sys/±ø˚.h
>

103 
	~<möix/boŸ.h
>

104 
	~<möix/ˇŒƒ.h
>

105 
	~<möix/com.h
>

106 
	~"¥oc.h
"

107 #i‡(
CHIP
 =
INTEL
)

108 
	~"¥Ÿe˘.h
"

112 
	#IF_MASK
 0x00000200

	)

113 
	#IOPL_MASK
 0x003000

	)

115 
PRIVATE
 
mesßge
 
	gm
;

117 
FORWARD
 
_PROTOTYPE
–
do_ab‹t
, (
mesßge
 *
m_±r
) );

118 
FORWARD
 
_PROTOTYPE
–
do_c›y
, (
mesßge
 *
m_±r
) );

119 
FORWARD
 
_PROTOTYPE
–
do_exec
, (
mesßge
 *
m_±r
) );

120 
FORWARD
 
_PROTOTYPE
–
do_f‹k
, (
mesßge
 *
m_±r
) );

121 
FORWARD
 
_PROTOTYPE
–
do_gboŸ
, (
mesßge
 *
m_±r
) );

122 
FORWARD
 
_PROTOTYPE
–
do_gë•
, (
mesßge
 *
m_±r
) );

123 
FORWARD
 
_PROTOTYPE
–
do_kûl
, (
mesßge
 *
m_±r
) );

124 
FORWARD
 
_PROTOTYPE
–
do_mem
, (
mesßge
 *
m_±r
) );

125 
FORWARD
 
_PROTOTYPE
–
do_√wm≠
, (
mesßge
 *
m_±r
) );

126 
FORWARD
 
_PROTOTYPE
–
do_£ndsig
, (
mesßge
 *
m_±r
) );

127 
FORWARD
 
_PROTOTYPE
–
do_sigªtu∫
, (
mesßge
 *
m_±r
) );

128 
FORWARD
 
_PROTOTYPE
–
do_ídsig
, (
mesßge
 *
m_±r
) );

129 
FORWARD
 
_PROTOTYPE
–
do_times
, (
mesßge
 *
m_±r
) );

130 
FORWARD
 
_PROTOTYPE
–
do_åa˚
, (
mesßge
 *
m_±r
) );

131 
FORWARD
 
_PROTOTYPE
–
do_um≠
, (
mesßge
 *
m_±r
) );

132 
FORWARD
 
_PROTOTYPE
–
do_xô
, (
mesßge
 *
m_±r
) );

133 
FORWARD
 
_PROTOTYPE
–
do_vc›y
, (
mesßge
 *
m_±r
) );

134 
FORWARD
 
_PROTOTYPE
–
do_gëm≠
, (
mesßge
 *
m_±r
) );

136 #i‡(
SHADOWING
 == 1)

137 
FORWARD
 
_PROTOTYPE
–
do_‰esh
, (
mesßge
 *
m_±r
) );

143 
PUBLIC
 
	$sys_èsk
()

147 
r
;

149 
TRUE
) {

150 
	`ª˚ive
(
ANY
, &
m
);

152 
m
.
m_ty≥
) {

153 
SYS_FORK
: 
r
 = 
	`do_f‹k
(&
m
); ;

154 
SYS_NEWMAP
: 
r
 = 
	`do_√wm≠
(&
m
); ;

155 
SYS_GETMAP
: 
r
 = 
	`do_gëm≠
(&
m
); ;

156 
SYS_EXEC
: 
r
 = 
	`do_exec
(&
m
); ;

157 
SYS_XIT
: 
r
 = 
	`do_xô
(&
m
); ;

158 
SYS_GETSP
: 
r
 = 
	`do_gë•
(&
m
); ;

159 
SYS_TIMES
: 
r
 = 
	`do_times
(&
m
); ;

160 
SYS_ABORT
: 
r
 = 
	`do_ab‹t
(&
m
); ;

161 #i‡(
SHADOWING
 == 1)

162 
SYS_FRESH
: 
r
 = 
	`do_‰esh
(&
m
); ;

164 
SYS_SENDSIG
: 
r
 = 
	`do_£ndsig
(&
m
); ;

165 
SYS_SIGRETURN
: 
r
 = 
	`do_sigªtu∫
(&
m
); ;

166 
SYS_KILL
: 
r
 = 
	`do_kûl
(&
m
); ;

167 
SYS_ENDSIG
: 
r
 = 
	`do_ídsig
(&
m
); ;

168 
SYS_COPY
: 
r
 = 
	`do_c›y
(&
m
); ;

169 
SYS_VCOPY
: 
r
 = 
	`do_vc›y
(&
m
); ;

170 
SYS_GBOOT
: 
r
 = 
	`do_gboŸ
(&
m
); ;

171 
SYS_MEM
: 
r
 = 
	`do_mem
(&
m
); ;

172 
SYS_UMAP
: 
r
 = 
	`do_um≠
(&
m
); ;

173 
SYS_TRACE
: 
r
 = 
	`do_åa˚
(&
m
); ;

174 : 
r
 = 
E_BAD_FCN
;

177 
m
.
m_ty≥
 = 
r
;

178 
	`£nd
(
m
.
m_sour˚
, &m);

180 
	}
}

186 
PRIVATE
 
	$do_f‹k
(
m_±r
)

187 
mesßge
 *
m_±r
;

191 #i‡(
CHIP
 =
INTEL
)

192 
ªg_t
 
ﬁd_ldt_£l
;

194 
¥oc
 *
Ωc
;

195 
¥oc
 *
Ωp
;

197 i‡(!
	`isoksu£∫
(
m_±r
->
PROC1
Ë|| !isoksu£∫(m_±r->
PROC2
))

198 (
E_BAD_PROC
);

199 
Ωp
 = 
	`¥oc_addr
(
m_±r
->
PROC1
);

200 
Ωc
 = 
	`¥oc_addr
(
m_±r
->
PROC2
);

203 #i‡(
CHIP
 =
INTEL
)

204 
ﬁd_ldt_£l
 = 
Ωc
->
p_ldt_£l
;

207 *
Ωc
 = *
Ωp
;

209 #i‡(
CHIP
 =
INTEL
)

210 
Ωc
->
p_ldt_£l
 = 
ﬁd_ldt_£l
;

212 
Ωc
->
p_ƒ
 = 
m_±r
->
PROC2
;

214 #i‡(
SHADOWING
 == 0)

215 
Ωc
->
p_Êags
 |
NO_MAP
;

218 
Ωc
->
p_Êags
 &~(
PENDING
 | 
SIG_PENDING
 | 
P_STOP
);

221 
	`sigem±y£t
(&
Ωc
->
p_≥ndög
);

222 
Ωc
->
p_≥ndcou¡
 = 0;

223 
Ωc
->
p_pid
 = 
m_±r
->
PID
;

224 
Ωc
->
p_ªg
.
ªåeg
 = 0;

226 
Ωc
->
u£r_time
 = 0;

227 
Ωc
->
sys_time
 = 0;

228 
Ωc
->
chûd_utime
 = 0;

229 
Ωc
->
chûd_°ime
 = 0;

231 #i‡(
SHADOWING
 == 1)

232 
Ωc
->
p_nÊùs
 = 0;

233 
	`mkshadow
(
Ωp
, (
phys_˛icks
)
m_±r
->
m1_p1
);

236 (
OK
);

237 
	}
}

243 
PRIVATE
 
	$do_√wm≠
(
m_±r
)

244 
mesßge
 *
m_±r
;

248 
¥oc
 *
Ω
;

249 
phys_byãs
 
§c_phys
;

250 
ˇŒî
;

251 
k
;

252 
ﬁd_Êags
;

253 
mem_m≠
 *
m≠_±r
;

256 
ˇŒî
 = 
m_±r
->
m_sour˚
;

257 
k
 = 
m_±r
->
PROC1
;

258 
m≠_±r
 = (
mem_m≠
 *Ë
m_±r
->
MEM_PTR
;

259 i‡(!
	`isok¥o˙
(
k
)Ë(
E_BAD_PROC
);

260 
Ω
 = 
	`¥oc_addr
(
k
);

263 
§c_phys
 = 
	`um≠
(
	`¥oc_addr
(
ˇŒî
), 
D
, (
vú_byãs
Ë
m≠_±r
, (
Ω
->
p_m≠
));

264 i‡(
§c_phys
 =0Ë
	`∑nic
("bad cÆ»tÿsys_√wm≠", 
NO_NUM
);

265 
	`phys_c›y
(
§c_phys
, 
	`vú2phys
(
Ω
->
p_m≠
), (
phys_byãs
) (rp->p_map));

267 #i‡(
SHADOWING
 == 0)

268 #i‡(
CHIP
 !
M68000
)

269 
	`Æloc_£gmíts
(
Ω
);

271 
	`pmmu_öô_¥oc
(
Ω
);

273 
ﬁd_Êags
 = 
Ω
->
p_Êags
;

274 
Ω
->
p_Êags
 &~
NO_MAP
;

275 i‡(
ﬁd_Êags
 !0 && 
Ω
->
p_Êags
 =0Ë
	`lock_ªady
(rp);

278 (
OK
);

279 
	}
}

285 
PRIVATE
 
	$do_gëm≠
(
m_±r
)

286 
mesßge
 *
m_±r
;

290 
¥oc
 *
Ω
;

291 
phys_byãs
 
d°_phys
;

292 
ˇŒî
;

293 
k
;

294 
mem_m≠
 *
m≠_±r
;

297 
ˇŒî
 = 
m_±r
->
m_sour˚
;

298 
k
 = 
m_±r
->
PROC1
;

299 
m≠_±r
 = (
mem_m≠
 *Ë
m_±r
->
MEM_PTR
;

301 i‡(!
	`isok¥o˙
(
k
))

302 
	`∑nic
("do_gëm≠ gŸ badÖroc: ", 
m_±r
->
PROC1
);

304 
Ω
 = 
	`¥oc_addr
(
k
);

307 
d°_phys
 = 
	`um≠
(
	`¥oc_addr
(
ˇŒî
), 
D
, (
vú_byãs
Ë
m≠_±r
, (
Ω
->
p_m≠
));

308 i‡(
d°_phys
 =0Ë
	`∑nic
("bad cÆ»tÿsys_gëm≠", 
NO_NUM
);

309 
	`phys_c›y
(
	`vú2phys
(
Ω
->
p_m≠
), 
d°_phys
, (rp->p_map));

311 (
OK
);

312 
	}
}

318 
PRIVATE
 
	$do_exec
(
m_±r
)

319 
mesßge
 *
m_±r
;

323 
¥oc
 *
Ω
;

324 
ªg_t
 
•
;

325 
phys_byãs
 
phys_«me
;

326 *
≈
;

327 
	#NLEN
 ((
Ω
->
p_«me
)-1)

	)

329 i‡(!
	`isoksu£∫
(
m_±r
->
PROC1
)Ë 
E_BAD_PROC
;

331 i‡(
m_±r
->
PROC2
Ë
	`ˇu£_sig
(m_±r->
PROC1
, 
SIGTRAP
);

332 
•
 = (
ªg_t
Ë
m_±r
->
STACK_PTR
;

333 
Ω
 = 
	`¥oc_addr
(
m_±r
->
PROC1
);

334 
Ω
->
p_ªg
.
•
 = sp;

335 #i‡(
CHIP
 =
M68000
)

336 
Ω
->
p_•low
 = 
•
;

337 #ifde‡
FPP


339 
	`Âp_√w_°©e
(
Ω
);

342 
Ω
->
p_ªg
.
pc
 = (
ªg_t
Ë
m_±r
->
IP_PTR
;

343 
Ω
->
p_Æ¨m
 = 0;

344 
Ω
->
p_Êags
 &~
RECEIVING
;

345 i‡(
Ω
->
p_Êags
 =0Ë
	`lock_ªady
(rp);

348 
phys_«me
 = 
	`num≠
(
m_±r
->
m_sour˚
, (
vú_byãs
Ëm_±r->
NAME_PTR
,

349 (
vú_byãs
Ë
NLEN
);

350 i‡(
phys_«me
 != 0) {

351 
	`phys_c›y
(
phys_«me
, 
	`vú2phys
(
Ω
->
p_«me
), (
phys_byãs
Ë
NLEN
);

352 
≈
 = 
Ω
->
p_«me
; (*≈ & 
BYTE
) >= ' ';Çp++) {}

353 *
≈
 = 0;

355 (
OK
);

356 
	}
}

362 
PRIVATE
 
	$do_xô
(
m_±r
)

363 
mesßge
 *
m_±r
;

367 
¥oc
 *
Ω
, *
rc
;

368 
¥oc
 *
≈
, *
xp
;

369 
∑ª¡
;

370 
¥oc_ƒ
;

371 
phys_˛icks
 
ba£
, 
size
;

373 
∑ª¡
 = 
m_±r
->
PROC1
;

374 
¥oc_ƒ
 = 
m_±r
->
PROC2
;

375 i‡(!
	`isoksu£∫
(
∑ª¡
Ë|| !isoksu£∫(
¥oc_ƒ
)Ë(
E_BAD_PROC
);

376 
Ω
 = 
	`¥oc_addr
(
∑ª¡
);

377 
rc
 = 
	`¥oc_addr
(
¥oc_ƒ
);

378 
	`lock
();

379 
Ω
->
chûd_utime
 +
rc
->
u£r_time
 +Ñc->child_utime;

380 
Ω
->
chûd_°ime
 +
rc
->
sys_time
 +Ñc->child_stime;

381 
	`u∆ock
();

382 
rc
->
p_Æ¨m
 = 0;

383 i‡(
rc
->
p_Êags
 =0Ë
	`lock_uƒódy
(rc);

385 #i‡(
SHADOWING
 == 1)

386 
	`rmshadow
(
rc
, &
ba£
, &
size
);

387 
m_±r
->
m1_i1
 = ()
ba£
;

388 
m_±r
->
m1_i2
 = ()
size
;

391 
	`°r˝y
(
rc
->
p_«me
, "<noname>");

397 i‡(
rc
->
p_Êags
 & 
SENDING
) {

399 
Ω
 = 
BEG_PROC_ADDR
;Ñ∞< 
END_PROC_ADDR
;Ñp++) {

400 i‡(
Ω
->
p_ˇŒîq
 =
NIL_PROC
) ;

401 i‡(
Ω
->
p_ˇŒîq
 =
rc
) {

403 
Ω
->
p_ˇŒîq
 = 
rc
->
p_£ndlök
;

407 
≈
 = 
Ω
->
p_ˇŒîq
;

408  ( 
xp
 = 
≈
->
p_£ndlök
Ë!
NIL_PROC
)

409 i‡(
xp
 =
rc
) {

410 
≈
->
p_£ndlök
 = 
xp
->p_sendlink;

413 
≈
 = 
xp
;

418 #i‡(
CHIP
 =
M68000
Ë&& (
SHADOWING
 == 0)

419 
	`pmmu_dñëe
(
rc
);

422 i‡(
rc
->
p_Êags
 & 
PENDING
Ë--
sig_¥ocs
;

423 
	`sigem±y£t
(&
rc
->
p_≥ndög
);

424 
rc
->
p_≥ndcou¡
 = 0;

425 
rc
->
p_Êags
 = 
P_SLOT_FREE
;

426 (
OK
);

427 
	}
}

433 
PRIVATE
 
	$do_gë•
(
m_±r
)

434 
mesßge
 *
m_±r
;

438 
¥oc
 *
Ω
;

440 i‡(!
	`isoksu£∫
(
m_±r
->
PROC1
)Ë(
E_BAD_PROC
);

441 
Ω
 = 
	`¥oc_addr
(
m_±r
->
PROC1
);

442 
m_±r
->
STACK_PTR
 = (*Ë
Ω
->
p_ªg
.
•
;

443 (
OK
);

444 
	}
}

450 
PRIVATE
 
	$do_times
(
m_±r
)

451 
mesßge
 *
m_±r
;

455 
¥oc
 *
Ω
;

457 i‡(!
	`isoksu£∫
(
m_±r
->
PROC1
)Ë 
E_BAD_PROC
;

458 
Ω
 = 
	`¥oc_addr
(
m_±r
->
PROC1
);

461 
	`lock
();

462 
m_±r
->
USER_TIME
 = 
Ω
->
u£r_time
;

463 
m_±r
->
SYSTEM_TIME
 = 
Ω
->
sys_time
;

464 
	`u∆ock
();

465 
m_±r
->
CHILD_UTIME
 = 
Ω
->
chûd_utime
;

466 
m_±r
->
CHILD_STIME
 = 
Ω
->
chûd_°ime
;

467 
m_±r
->
BOOT_TICKS
 = 
	`gë_u±ime
();

468 (
OK
);

469 
	}
}

475 
PRIVATE
 
	$do_ab‹t
(
m_±r
)

476 
mesßge
 *
m_±r
;

479 
m⁄ô‹_code
[64];

480 
phys_byãs
 
§c_phys
;

482 i‡(
m_±r
->
m1_i1
 =
RBT_MONITOR
) {

484 
§c_phys
 = 
	`num≠
(
m_±r
->
m_sour˚
, (
vú_byãs
Ëm_±r->
m1_p1
,

485 (
vú_byãs
Ë(
m⁄ô‹_code
));

486 i‡(
§c_phys
 =0Ë
	`∑nic
("bad m⁄ô‹ codê‰om", 
m_±r
->
m_sour˚
);

487 
	`phys_c›y
(
§c_phys
, 
	`vú2phys
(
m⁄ô‹_code
),

488 (
phys_byãs
Ë(
m⁄ô‹_code
));

489 
ªboŸ_code
 = 
	`vú2phys
(
m⁄ô‹_code
);

491 
	`wªboŸ
(
m_±r
->
m1_i1
);

492 (
OK
);

493 
	}
}

496 #i‡(
SHADOWING
 == 1)

500 
PRIVATE
 
	$do_‰esh
(
m_±r
)

501 
mesßge
 *
m_±r
;

505 
¥oc
 *
p
;

506 
¥oc_ƒ
;

507 
phys_˛icks
 
ba£
, 
size
;

508 
phys_˛icks
 
c1
, 
nc
;

510 
¥oc_ƒ
 = 
m_±r
->
PROC1
;

511 i‡(!
	`isok¥o˙
(
¥oc_ƒ
)Ë(
E_BAD_PROC
);

512 
p
 = 
	`¥oc_addr
(
¥oc_ƒ
);

513 
	`rmshadow
(
p
, &
ba£
, &
size
);

514 
	`do_√wm≠
(
m_±r
);

515 
c1
 = 
p
->
p_m≠
[
D
].
mem_phys
;

516 
nc
 = 
p
->
p_m≠
[
S
].
mem_phys
 -Ö->p_m≠[
D
].mem_phy†+Ö->p_m≠[S].
mem_Àn
;

517 
c1
 +
m_±r
->
m1_i2
;

518 
nc
 -
m_±r
->
m1_i2
;

519 
	`zîo˛icks
(
c1
, 
nc
);

520 
m_±r
->
m1_i1
 = ()
ba£
;

521 
m_±r
->
m1_i2
 = ()
size
;

522 (
OK
);

523 
	}
}

530 
PRIVATE
 
	$do_£ndsig
(
m_±r
)

531 
mesßge
 *
m_±r
;

535 
sigmsg
 
smsg
;

536 
¥oc
 *
Ω
;

537 
phys_byãs
 
§c_phys
, 
d°_phys
;

538 
sigc⁄ãxt
 
sc
, *
s˝
;

539 
sig‰ame
 
‰
, *
‰p
;

541 i‡(!
	`isoku£∫
(
m_±r
->
PROC1
)Ë(
E_BAD_PROC
);

542 
Ω
 = 
	`¥oc_addr
(
m_±r
->
PROC1
);

545 
§c_phys
 = 
	`um≠
(
	`¥oc_addr
(
MM_PROC_NR
), 
D
, (
vú_byãs
Ë
m_±r
->
SIG_CTXT_PTR
,

546 (
vú_byãs
Ë(
sigmsg
));

547 i‡(
§c_phys
 == 0)

548 
	`∑nic
("do_£ndsig c™'àsig«l: bad sigmsgáddªs†‰om MM", 
NO_NUM
);

549 
	`phys_c›y
(
§c_phys
, 
	`vú2phys
(&
smsg
), (
phys_byãs
Ë(
sigmsg
));

552 
s˝
 = (
sigc⁄ãxt
 *Ë
smsg
.
sm_°k±r
 - 1;

555 
	`mem˝y
(&
sc
.
sc_ªgs
, &
Ω
->
p_ªg
, (
sigªgs
));

558 
sc
.
sc_Êags
 = 
SC_SIGCONTEXT
;

560 
sc
.
sc_mask
 = 
smsg
.
sm_mask
;

563 
d°_phys
 = 
	`um≠
(
Ω
, 
D
, (
vú_byãs
Ë
s˝
,

564 (
vú_byãs
Ë(
sigc⁄ãxt
));

565 i‡(
d°_phys
 =0Ë(
EFAULT
);

566 
	`phys_c›y
(
	`vú2phys
(&
sc
), 
d°_phys
, (
phys_byãs
Ë(
sigc⁄ãxt
));

569 
‰p
 = (
sig‰ame
 *Ë
s˝
 - 1;

570 
‰
.
sf_s˝c›y
 = 
s˝
;

571 
‰
.
sf_ªèdr2
((*)()Ë
Ω
->
p_ªg
.
pc
;

572 
‰
.
sf_Â
 = 
Ω
->
p_ªg
.
Â
;

573 
Ω
->
p_ªg
.
Â
 = (
ªg_t
Ë&
‰p
->
sf_Â
;

574 
‰
.
sf_s˝
 = 
s˝
;

575 
‰
.
sf_code
 = 0;

576 
‰
.
sf_signo
 = 
smsg
.
sm_signo
;

577 
‰
.
sf_ªèdr
 = ((*)()Ë
smsg
.
sm_sigªtu∫
;

580 
d°_phys
 = 
	`um≠
(
Ω
, 
D
, (
vú_byãs
Ë
‰p
, (vú_byãsË(
sig‰ame
));

581 i‡(
d°_phys
 =0Ë(
EFAULT
);

582 
	`phys_c›y
(
	`vú2phys
(&
‰
), 
d°_phys
, (
phys_byãs
Ë(
sig‰ame
));

585 
Ω
->
p_ªg
.
•
 = (
ªg_t
Ë
‰p
;

586 
Ω
->
p_ªg
.
pc
 = (
ªg_t
Ë
smsg
.
sm_sigh™dÀr
;

588 (
OK
);

589 
	}
}

594 
PRIVATE
 
	$do_sigªtu∫
(
m_±r
)

595 
mesßge
 *
m_±r
;

601 
sigc⁄ãxt
 
sc
;

602 
¥oc
 *
Ω
;

603 
phys_byãs
 
§c_phys
;

605 i‡(!
	`isoku£∫
(
m_±r
->
PROC1
)Ë(
E_BAD_PROC
);

606 
Ω
 = 
	`¥oc_addr
(
m_±r
->
PROC1
);

609 
§c_phys
 = 
	`um≠
(
Ω
, 
D
, (
vú_byãs
Ë
m_±r
->
SIG_CTXT_PTR
,

610 (
vú_byãs
Ë(
sigc⁄ãxt
));

611 i‡(
§c_phys
 =0Ë(
EFAULT
);

612 
	`phys_c›y
(
§c_phys
, 
	`vú2phys
(&
sc
), (
phys_byãs
Ë(
sigc⁄ãxt
));

615 i‡((
sc
.
sc_Êags
 & 
SC_SIGCONTEXT
Ë=0Ë(
EINVAL
);

620 i‡(
sc
.
sc_Êags
 & 
SC_NOREGLOCALS
) {

621 
Ω
->
p_ªg
.
ªåeg
 = 
sc
.
sc_ªåeg
;

622 
Ω
->
p_ªg
.
Â
 = 
sc
.
sc_Â
;

623 
Ω
->
p_ªg
.
pc
 = 
sc
.
sc_pc
;

624 
Ω
->
p_ªg
.
•
 = 
sc
.
sc_•
;

625  (
OK
);

627 
sc
.
sc_psw
 = 
Ω
->
p_ªg
.
psw
;

629 #i‡(
CHIP
 =
INTEL
)

631 
sc
.
sc_cs
 = 
Ω
->
p_ªg
.
cs
;

632 
sc
.
sc_ds
 = 
Ω
->
p_ªg
.
ds
;

633 
sc
.
sc_es
 = 
Ω
->
p_ªg
.
es
;

634 #i‡
_WORD_SIZE
 == 4

635 
sc
.
sc_fs
 = 
Ω
->
p_ªg
.
fs
;

636 
sc
.
sc_gs
 = 
Ω
->
p_ªg
.
gs
;

641 
	`mem˝y
(&
Ω
->
p_ªg
, (*)&
sc
.
sc_ªgs
, (
sigªgs
));

643 (
OK
);

644 
	}
}

649 
PRIVATE
 
	$do_kûl
(
m_±r
)

650 
mesßge
 *
m_±r
;

658 i‡(!
	`isoku£∫
(
m_±r
->
PR
)Ë(
E_BAD_PROC
);

659 
	`ˇu£_sig
(
m_±r
->
PR
, m_±r->
SIGNUM
);

660 (
OK
);

661 
	}
}

667 
PRIVATE
 
	$do_ídsig
(
m_±r
)

668 
mesßge
 *
m_±r
;

674 
¥oc
 *
Ω
;

676 i‡(!
	`isoku£∫
(
m_±r
->
PROC1
)Ë(
E_BAD_PROC
);

677 
Ω
 = 
	`¥oc_addr
(
m_±r
->
PROC1
);

680 i‡(
Ω
->
p_≥ndcou¡
 != 0 && --rp->p_pendcount == 0

681 && (
Ω
->
p_Êags
 &~
SIG_PENDING
) == 0)

682 
	`lock_ªady
(
Ω
);

683 (
OK
);

684 
	}
}

689 
PRIVATE
 
	$do_c›y
(
m_±r
)

690 
mesßge
 *
m_±r
;

694 
§c_¥oc
, 
d°_¥oc
, 
§c_•a˚
, 
d°_•a˚
;

695 
vú_byãs
 
§c_vú
, 
d°_vú
;

696 
phys_byãs
 
§c_phys
, 
d°_phys
, 
byãs
;

699 
§c_¥oc
 = 
m_±r
->
SRC_PROC_NR
;

700 
d°_¥oc
 = 
m_±r
->
DST_PROC_NR
;

701 
§c_•a˚
 = 
m_±r
->
SRC_SPACE
;

702 
d°_•a˚
 = 
m_±r
->
DST_SPACE
;

703 
§c_vú
 = (
vú_byãs
Ë
m_±r
->
SRC_BUFFER
;

704 
d°_vú
 = (
vú_byãs
Ë
m_±r
->
DST_BUFFER
;

705 
byãs
 = (
phys_byãs
Ë
m_±r
->
COPY_BYTES
;

708 #i‡(
SHADOWING
 == 0)

709 i‡(
§c_¥oc
 =
ABS
)

710 
§c_phys
 = (
phys_byãs
Ë
m_±r
->
SRC_BUFFER
;

712 i‡(
byãs
 !(
vú_byãs
) bytes)

717 
	`∑nic
("ovîÊow i¿cou¡ i¿do_c›y", 
NO_NUM
);

720 
§c_phys
 = 
	`um≠
(
	`¥oc_addr
(
§c_¥oc
), 
§c_•a˚
, 
§c_vú
,

721 (
vú_byãs
Ë
byãs
);

722 #i‡(
SHADOWING
 == 0)

726 #i‡(
SHADOWING
 == 0)

727 i‡(
d°_¥oc
 =
ABS
)

728 
d°_phys
 = (
phys_byãs
Ë
m_±r
->
DST_BUFFER
;

731 
d°_phys
 = 
	`um≠
(
	`¥oc_addr
(
d°_¥oc
), 
d°_•a˚
, 
d°_vú
,

732 (
vú_byãs
Ë
byãs
);

734 i‡(
§c_phys
 =0 || 
d°_phys
 =0Ë(
EFAULT
);

735 
	`phys_c›y
(
§c_phys
, 
d°_phys
, 
byãs
);

736 (
OK
);

743 
PRIVATE
 
	`do_vc›y
(
m_±r
)

744 
mesßge
 *
m_±r
;

748 
§c_¥oc
, 
d°_¥oc
, 
ve˘_s
, 
i
;

749 
vú_byãs
 
§c_vú
, 
d°_vú
, 
ve˘_addr
;

750 
phys_byãs
 
§c_phys
, 
d°_phys
, 
byãs
;

751 
˝vec_t
 
˝vec_èbÀ
[
CPVEC_NR
];

754 
§c_¥oc
 = 
m_±r
->
m1_i1
;

755 
d°_¥oc
 = 
m_±r
->
m1_i2
;

756 
ve˘_s
 = 
m_±r
->
m1_i3
;

757 
ve˘_addr
 = (
vú_byãs
)
m_±r
->
m1_p1
;

759 i‡(
ve˘_s
 > 
CPVEC_NR
Ë 
EDOM
;

761 
§c_phys

	`num≠
 (
m_±r
->
m_sour˚
, 
ve˘_addr
, 
ve˘_s
 * (
˝vec_t
));

762 i‡(!
§c_phys
Ë 
EFAULT
;

763 
	`phys_c›y
(
§c_phys
, 
	`vú2phys
(
˝vec_èbÀ
),

764 (
phys_byãs
Ë(
ve˘_s
 * (
˝vec_t
)));

766 
i
 = 0; i < 
ve˘_s
; i++) {

767 
§c_vú

˝vec_èbÀ
[
i
].
˝v_§c
;

768 
d°_vú

˝vec_èbÀ
[
i
].
˝v_d°
;

769 
byãs

˝vec_èbÀ
[
i
].
˝v_size
;

770 
§c_phys
 = 
	`num≠
(
§c_¥oc
,
§c_vú
,(
vú_byãs
)
byãs
);

771 
d°_phys
 = 
	`num≠
(
d°_¥oc
,
d°_vú
,(
vú_byãs
)
byãs
);

772 i‡(
§c_phys
 =0 || 
d°_phys
 =0Ë(
EFAULT
);

773 
	`phys_c›y
(
§c_phys
, 
d°_phys
, 
byãs
);

775 (
OK
);

782 
PUBLIC
 
b∑øm_s
 
boŸ_∑ømëîs
;

784 
PRIVATE
 
	`do_gboŸ
(
m_±r
)

785 
mesßge
 *
m_±r
;

789 
phys_byãs
 
d°_phys
;

791 
d°_phys
 = 
	`um≠
(
	`¥oc_addr
(
m_±r
->
PROC1
), 
D
, (
vú_byãs
Ëm_±r->
MEM_PTR
,

792 (
vú_byãs
Ë(
boŸ_∑ømëîs
));

793 i‡(
d°_phys
 =0Ë
	`∑nic
("bad cÆ»tÿSYS_GBOOT", 
NO_NUM
);

794 
	`phys_c›y
(
	`vú2phys
(&
boŸ_∑ømëîs
), 
d°_phys
,

795 (
phys_byãs
Ë(
boŸ_∑ømëîs
));

796 (
OK
);

803 
PRIVATE
 
	`do_mem
(
m_±r
)

804 
mesßge
 *
m_±r
;

808 
mem‹y
 *
memp
;

810 
memp
 = 
mem
; mem∞< &mem[
NR_MEMS
]; ++memp) {

811 
m_±r
->
m1_i1
 = 
memp
->
ba£
;

812 
m_±r
->
m1_i2
 = 
memp
->
size
;

813 
m_±r
->
m1_i3
 = 
tŸ_mem_size
;

814 
memp
->
size
 = 0;

815 i‡(
m_±r
->
m1_i2
 != 0) ;

817 (
OK
);

824 
PRIVATE
 
	`do_um≠
(
m_±r
)

825 
mesßge
 *
m_±r
;

829 
m_±r
->
SRC_BUFFER
 = 
	`um≠
(
	`¥oc_addr
((Ëm_±r->
SRC_PROC_NR
),

830 (Ë
m_±r
->
SRC_SPACE
,

831 (
vú_byãs
Ë
m_±r
->
SRC_BUFFER
,

832 (
vú_byãs
Ë
m_±r
->
COPY_BYTES
);

833 (
OK
);

840 
	#TR_PROCNR
 (
m_±r
->
m2_i1
)

	)

841 
	#TR_REQUEST
 (
m_±r
->
m2_i2
)

	)

842 
	#TR_ADDR
 ((
vú_byãs
Ë
m_±r
->
m2_l1
)

	)

843 
	#TR_DATA
 (
m_±r
->
m2_l2
)

	)

844 
	#TR_VLSIZE
 ((
vú_byãs
Ë())

	)

846 
PRIVATE
 
	`do_åa˚
(
m_±r
)

847 
mesßge
 *
m_±r
;

867 
¥oc
 *
Ω
;

868 
phys_byãs
 
§c
, 
d°
;

869 
i
;

871 
Ω
 = 
	`¥oc_addr
(
TR_PROCNR
);

872 i‡(
Ω
->
p_Êags
 & 
P_SLOT_FREE
Ë(
EIO
);

873 
TR_REQUEST
) {

874 
T_STOP
:

875 i‡(
Ω
->
p_Êags
 =0Ë
	`lock_uƒódy
(rp);

876 
Ω
->
p_Êags
 |
P_STOP
;

877 
Ω
->
p_ªg
.
psw
 &~
TRACEBIT
;

878 (
OK
);

880 
T_GETINS
:

881 i‡(
Ω
->
p_m≠
[
T
].
mem_Àn
 != 0) {

882 i‡((
§c
 = 
	`um≠
(
Ω
, 
T
, 
TR_ADDR
, 
TR_VLSIZE
)Ë=0Ë(
EIO
);

883 
	`phys_c›y
(
§c
, 
	`vú2phys
(&
TR_DATA
), (
phys_byãs
) ());

888 
T_GETDATA
:

889 i‡((
§c
 = 
	`um≠
(
Ω
, 
D
, 
TR_ADDR
, 
TR_VLSIZE
)Ë=0Ë(
EIO
);

890 
	`phys_c›y
(
§c
, 
	`vú2phys
(&
TR_DATA
), (
phys_byãs
) ());

893 
T_GETUSER
:

894 i‡((
TR_ADDR
 & (() - 1)) != 0 ||

895 
TR_ADDR
 > (
¥oc
) - ())

896 (
EIO
);

897 
TR_DATA
 = *(*Ë((*Ë
Ω
 + (Ë
TR_ADDR
);

900 
T_SETINS
:

901 i‡(
Ω
->
p_m≠
[
T
].
mem_Àn
 != 0) {

902 i‡((
d°
 = 
	`um≠
(
Ω
, 
T
, 
TR_ADDR
, 
TR_VLSIZE
)Ë=0Ë(
EIO
);

903 
	`phys_c›y
(
	`vú2phys
(&
TR_DATA
), 
d°
, (
phys_byãs
) ());

904 
TR_DATA
 = 0;

909 
T_SETDATA
:

910 i‡((
d°
 = 
	`um≠
(
Ω
, 
D
, 
TR_ADDR
, 
TR_VLSIZE
)Ë=0Ë(
EIO
);

911 
	`phys_c›y
(
	`vú2phys
(&
TR_DATA
), 
d°
, (
phys_byãs
) ());

912 
TR_DATA
 = 0;

915 
T_SETUSER
:

916 i‡((
TR_ADDR
 & ((
ªg_t
) - 1)) != 0 ||

917 
TR_ADDR
 > (
°ack‰ame_s
Ë- (
ªg_t
))

918 (
EIO
);

919 
i
 = (Ë
TR_ADDR
;

920 #i‡(
CHIP
 =
INTEL
)

925 i‡(
i
 =(Ë&((
¥oc
 *Ë0)->
p_ªg
.
cs
 ||

926 
i
 =(Ë&((
¥oc
 *Ë0)->
p_ªg
.
ds
 ||

927 
i
 =(Ë&((
¥oc
 *Ë0)->
p_ªg
.
es
 ||

928 #i‡
_WORD_SIZE
 == 4

929 
i
 =(Ë&((
¥oc
 *Ë0)->
p_ªg
.
gs
 ||

930 
i
 =(Ë&((
¥oc
 *Ë0)->
p_ªg
.
fs
 ||

932 
i
 =(Ë&((
¥oc
 *Ë0)->
p_ªg
.
ss
)

933 (
EIO
);

935 i‡(
i
 =(Ë&((
¥oc
 *Ë0)->
p_ªg
.
psw
)

937 
	`SETPSW
(
Ω
, 
TR_DATA
);

939 *(
ªg_t
 *Ë((*Ë&
Ω
->
p_ªg
 + 
i
Ë‘eg_tË
TR_DATA
;

940 
TR_DATA
 = 0;

943 
T_RESUME
:

944 
Ω
->
p_Êags
 &~
P_STOP
;

945 i‡(
Ω
->
p_Êags
 =0Ë
	`lock_ªady
(rp);

946 
TR_DATA
 = 0;

949 
T_STEP
:

950 
Ω
->
p_ªg
.
psw
 |
TRACEBIT
;

951 
Ω
->
p_Êags
 &~
P_STOP
;

952 i‡(
Ω
->
p_Êags
 =0Ë
	`lock_ªady
(rp);

953 
TR_DATA
 = 0;

957 (
EIO
);

959 (
OK
);

965 
PUBLIC
 
	`ˇu£_sig
(
¥oc_ƒ
, 
sig_ƒ
)

966 
¥oc_ƒ
;

967 
sig_ƒ
;

984 
¥oc
 *
Ω
, *
mmp
;

986 
Ω
 = 
	`¥oc_addr
(
¥oc_ƒ
);

987 i‡(
	`sigismembî
(&
Ω
->
p_≥ndög
, 
sig_ƒ
))

989 
	`sigadd£t
(&
Ω
->
p_≥ndög
, 
sig_ƒ
);

990 ++
Ω
->
p_≥ndcou¡
;

991 i‡(
Ω
->
p_Êags
 & 
PENDING
)

993 i‡(
Ω
->
p_Êags
 =0Ë
	`lock_uƒódy
(rp);

994 
Ω
->
p_Êags
 |
PENDING
 | 
SIG_PENDING
;

995 ++
sig_¥ocs
;

997 
mmp
 = 
	`¥oc_addr
(
MM_PROC_NR
);

998 i‡–((
mmp
->
p_Êags
 & 
RECEIVING
Ë=0Ë|| mmp->
p_gë‰om
 !
ANY
) ;

999 
	`öf‹m
();

1006 
PUBLIC
 
	`öf‹m
()

1015 
¥oc
 *
Ω
;

1018 
Ω
 = 
BEG_SERV_ADDR
;Ñ∞< 
END_PROC_ADDR
;Ñp++)

1019 i‡(
Ω
->
p_Êags
 & 
PENDING
) {

1020 
m
.
m_ty≥
 = 
KSIG
;

1021 
m
.
SIG_PROC
 = 
	`¥oc_numbî
(
Ω
);

1022 
m
.
SIG_MAP
 = 
Ω
->
p_≥ndög
;

1023 
sig_¥ocs
--;

1024 i‡(
	`lock_möi_£nd
(
	`¥oc_addr
(
HARDWARE
), 
MM_PROC_NR
, &
m
Ë!
OK
)

1025 
	`∑nic
("ˇn'àöf‹m MM", 
NO_NUM
);

1026 
	`sigem±y£t
(&
Ω
->
p_≥ndög
);

1027 
Ω
->
p_Êags
 &~
PENDING
;

1028 
	`lock_pick_¥oc
();

1037 
PUBLIC
 
phys_byãs
 
	`um≠
(
Ω
, 
£g
, 
vú_addr
, 
byãs
)

1038 
¥oc
 *
Ω
;

1039 
£g
;

1040 
vú_byãs
 
vú_addr
;

1041 
vú_byãs
 
byãs
;

1045 
vú_˛icks
 
vc
;

1046 
phys_byãs
 
∑
;

1047 #i‡(
CHIP
 =
INTEL
)

1048 
phys_byãs
 
£g_ba£
;

1059 i‡(
byãs
 <0Ë–(
phys_byãs
) 0);

1060 
vc
 = (
vú_addr
 + 
byãs
 - 1Ë>> 
CLICK_SHIFT
;

1062 #i‡(
CHIP
 =
INTEL
Ë|| (CHIP =
M68000
)

1063 i‡(
£g
 !
T
)

1064 
£g
 = (
vc
 < 
Ω
->
p_m≠
[
D
].
mem_vú
 +Ñp->p_m≠[D].
mem_Àn
 ? D : 
S
);

1066 i‡(
£g
 !
T
)

1067 
£g
 = (
vc
 < 
Ω
->
p_m≠
[
S
].
mem_vú
 ? 
D
 : S);

1070 if((
vú_addr
>>
CLICK_SHIFT
Ë>
Ω
->
p_m≠
[
£g
].
mem_vú
+Ñp->p_m≠[£g].
mem_Àn
)

1071 –(
phys_byãs
) 0 );

1072 #i‡(
CHIP
 =
INTEL
)

1073 
£g_ba£
 = (
phys_byãs
Ë
Ω
->
p_m≠
[
£g
].
mem_phys
;

1074 
£g_ba£
 = seg_ba£ << 
CLICK_SHIFT
;

1076 
∑
 = (
phys_byãs
Ë
vú_addr
;

1077 #i‡(
CHIP
 !
M68000
)

1078 
∑
 -
Ω
->
p_m≠
[
£g
].
mem_vú
 << 
CLICK_SHIFT
;

1079 (
£g_ba£
 + 
∑
);

1081 #i‡(
CHIP
 =
M68000
)

1082 #i‡(
SHADOWING
 == 0)

1083 
∑
 -(
phys_byãs
)
Ω
->
p_m≠
[
£g
].
mem_vú
 << 
CLICK_SHIFT
;

1084 
∑
 +(
phys_byãs
)
Ω
->
p_m≠
[
£g
].
mem_phys
 << 
CLICK_SHIFT
;

1086 i‡(
Ω
->
p_shadow
 && 
£g
 !
T
) {

1087 
∑
 -(
phys_byãs
)
Ω
->
p_m≠
[
D
].
mem_phys
 << 
CLICK_SHIFT
;

1088 
∑
 +(
phys_byãs
)
Ω
->
p_shadow
 << 
CLICK_SHIFT
;

1091 (
∑
);

1099 
PUBLIC
 
phys_byãs
 
	`num≠
(
¥oc_ƒ
, 
vú_addr
, 
byãs
)

1100 
¥oc_ƒ
;

1101 
vú_byãs
 
vú_addr
;

1102 
vú_byãs
 
byãs
;

1110 (
	`um≠
(
	`¥oc_addr
(
¥oc_ƒ
), 
D
, 
vú_addr
, 
byãs
));

1114 #i‡(
CHIP
 =
INTEL
)

1118 
PUBLIC
 
	`Æloc_£gmíts
(
Ω
)

1119 
¥oc
 *
Ω
;

1125 
phys_byãs
 
code_byãs
;

1126 
phys_byãs
 
d©a_byãs
;

1127 
¥ivûege
;

1129 i‡(
¥Ÿe˘ed_mode
) {

1130 
d©a_byãs
 = (
phys_byãs
Ë(
Ω
->
p_m≠
[
S
].
mem_vú
 +Ñp->p_m≠[S].
mem_Àn
)

1131 << 
CLICK_SHIFT
;

1132 i‡(
Ω
->
p_m≠
[
T
].
mem_Àn
 == 0)

1133 
code_byãs
 = 
d©a_byãs
;

1135 
code_byãs
 = (
phys_byãs
Ë
Ω
->
p_m≠
[
T
].
mem_Àn
 << 
CLICK_SHIFT
;

1136 
¥ivûege
 = 
	`i°askp
(
Ω
Ë? 
TASK_PRIVILEGE
 : 
USER_PRIVILEGE
;

1137 
	`öô_code£g
(&
Ω
->
p_ldt
[
CS_LDT_INDEX
],

1138 (
phys_byãs
Ë
Ω
->
p_m≠
[
T
].
mem_phys
 << 
CLICK_SHIFT
,

1139 
code_byãs
, 
¥ivûege
);

1140 
	`öô_d©a£g
(&
Ω
->
p_ldt
[
DS_LDT_INDEX
],

1141 (
phys_byãs
Ë
Ω
->
p_m≠
[
D
].
mem_phys
 << 
CLICK_SHIFT
,

1142 
d©a_byãs
, 
¥ivûege
);

1143 
Ω
->
p_ªg
.
cs
 = (
CS_LDT_INDEX
 * 
DESC_SIZE
Ë| 
TI
 | 
¥ivûege
;

1144 #i‡
_WORD_SIZE
 == 4

1145 
Ω
->
p_ªg
.
gs
 =

1146 
Ω
->
p_ªg
.
fs
 =

1148 
Ω
->
p_ªg
.
ss
 =

1149 
Ω
->
p_ªg
.
es
 =

1150 
Ω
->
p_ªg
.
ds
 = (
DS_LDT_INDEX
*
DESC_SIZE
Ë| 
TI
 | 
¥ivûege
;

1152 
Ω
->
p_ªg
.
cs
 = 
	`˛ick_to_h˛ick
‘p->
p_m≠
[
T
].
mem_phys
);

1153 
Ω
->
p_ªg
.
ss
 =

1154 
Ω
->
p_ªg
.
es
 =

1155 
Ω
->
p_ªg
.
ds
 = 
	`˛ick_to_h˛ick
‘p->
p_m≠
[
D
].
mem_phys
);

	@sysunix.c

5 
	~"edôlöe.h
"

7 #if 
deföed
(
HAVE_TCGETATTR
)

8 
	~<ãrmios.h
>

11 
	$æ_ây£t
(
Re£t
)

12 
Re£t
;

14 
ãrmios
 
ﬁd
;

15 
ãrmios
 
√w
;

17 i‡(
Re£t
 == 0) {

18 ()
	`tcgë©å
(0, &
ﬁd
);

19 
æ_îa£
 = 
ﬁd
.
c_cc
[
VERASE
];

20 
æ_kûl
 = 
ﬁd
.
c_cc
[
VKILL
];

21 
æ_eof
 = 
ﬁd
.
c_cc
[
VEOF
];

22 
æ_öå
 = 
ﬁd
.
c_cc
[
VINTR
];

23 
æ_quô
 = 
ﬁd
.
c_cc
[
VQUIT
];

25 
√w
 = 
ﬁd
;

26 
√w
.
c_lÊag
 &~(
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
);

27 
√w
.
c_cc
[
VMIN
] = 1;

28 
√w
.
c_cc
[
VTIME
] = 0;

29 ()
	`tc£èâr
(0, 
TCSADRAIN
, &
√w
);

32 ()
	`tc£èâr
(0, 
TCSADRAIN
, &
ﬁd
);

33 
	}
}

36 #if 
deföed
(
HAVE_TERMIO
)

37 
	~<ãrmio.h
>

40 
	$æ_ây£t
(
Re£t
)

41 
Re£t
;

43 
ãrmio
 
ﬁd
;

44 
ãrmio
 
√w
;

46 i‡(
Re£t
 == 0) {

47 ()
	`io˘l
(0, 
TCGETA
, &
ﬁd
);

48 
æ_îa£
 = 
ﬁd
.
c_cc
[
VERASE
];

49 
æ_kûl
 = 
ﬁd
.
c_cc
[
VKILL
];

50 
æ_eof
 = 
ﬁd
.
c_cc
[
VEOF
];

51 
æ_öå
 = 
ﬁd
.
c_cc
[
VINTR
];

52 
æ_quô
 = 
ﬁd
.
c_cc
[
VQUIT
];

54 
√w
 = 
ﬁd
;

55 
√w
.
c_cc
[
VINTR
] = -1;

56 
√w
.
c_cc
[
VQUIT
] = -1;

57 
√w
.
c_lÊag
 &~(
ECHO
 | 
ICANON
);

58 
√w
.
c_cc
[
VMIN
] = 1;

59 
√w
.
c_cc
[
VTIME
] = 0;

60 ()
	`io˘l
(0, 
TCSETAW
, &
√w
);

63 ()
	`io˘l
(0, 
TCSETAW
, &
ﬁd
);

64 
	}
}

67 
	~<sgây.h
>

70 
	$æ_ây£t
(
Re£t
)

71 
Re£t
;

73 
sgâyb
 
ﬁd_sgâyb
;

74 
tch¨s
 
ﬁd_tch¨s
;

75 
sgâyb
 
√w_sgâyb
;

76 
tch¨s
 
√w_tch¨s
;

78 i‡(
Re£t
 == 0) {

79 ()
	`io˘l
(0, 
TIOCGETP
, &
ﬁd_sgâyb
);

80 
æ_îa£
 = 
ﬁd_sgâyb
.
sg_îa£
;

81 
æ_kûl
 = 
ﬁd_sgâyb
.
sg_kûl
;

83 ()
	`io˘l
(0, 
TIOCGETC
, &
ﬁd_tch¨s
);

84 
æ_eof
 = 
ﬁd_tch¨s
.
t_eofc
;

85 
æ_öå
 = 
ﬁd_tch¨s
.
t_öåc
;

86 
æ_quô
 = 
ﬁd_tch¨s
.
t_quôc
;

88 
√w_sgâyb
 = 
ﬁd_sgâyb
;

89 
√w_sgâyb
.
sg_Êags
 &~
ECHO
;

90 
√w_sgâyb
.
sg_Êags
 |
RAW
;

91 ()
	`io˘l
(0, 
TIOCSETP
, &
√w_sgâyb
);

93 
√w_tch¨s
 = 
ﬁd_tch¨s
;

94 
√w_tch¨s
.
t_öåc
 = -1;

95 
√w_tch¨s
.
t_quôc
 = -1;

96 ()
	`io˘l
(0, 
TIOCSETC
, &
√w_tch¨s
);

99 ()
	`io˘l
(0, 
TIOCSETP
, &
ﬁd_sgâyb
);

100 ()
	`io˘l
(0, 
TIOCSETC
, &
ﬁd_tch¨s
);

102 
	}
}

107 
	$æ_add_¶ash
(
∑th
, 
p
)

108 *
∑th
;

109 *
p
;

111 
°©
 
Sb
;

113 i‡(
	`°©
(
∑th
, &
Sb
) >= 0)

114 ()
	`°rˇt
(
p
, 
	`S_ISDIR
(
Sb
.
°_mode
) ? "/" : " ");

115 
	}
}

	@t10a.c

1 
	~<°dlib.h
>

3 
_PROTOTYPE
(
maö
, ());

5 
	$maö
()

7 
	`exô
(0);

8 
	}
}

	@t11a.c

3 
	~<sys/ty≥s.h
>

4 
	~<î∫o.h
>

5 
	~<f˙é.h
>

6 
	~<°dlib.h
>

7 
	~<uni°d.h
>

8 
	~<°dio.h
>

10 
	#MAX_ERROR
 4

	)

12 
	gîr˘
, 
	gsubã°
=1;

14 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
 [], *
ívp
 []));

15 
_PROTOTYPE
(
diff
, (*
s1
, *
s2
));

16 
_PROTOTYPE
(
e
, (
n
));

18 
	$maö
(
¨gc
, 
¨gv
, 
ívp
)

19 
¨gc
;

20 *
¨gv
[], *
ívp
[];

24 
Ø
[4];

26 i‡(
	`diff
(
¨gv
[0], "t11a")Ë
	`e
(21);

27 i‡(
	`diff
(
¨gv
[1], "¨g0")Ë
	`e
(22);

28 i‡(
	`diff
(
¨gv
[2], "¨g1")Ë
	`e
(23);

29 i‡(
	`diff
(
¨gv
[3], "¨g2")Ë
	`e
(24);

30 i‡(
	`diff
(
ívp
[0], "•rög")Ë
	`e
(25);

31 i‡(
	`diff
(
ívp
[1], "summî")Ë
	`e
(26);

32 i‡(
¨gc
 !4Ë
	`e
(27);

35 i‡(
	`ªad
(3, 
Ø
, 4Ë!2Ë
	`e
(28);

36 i‡(
Ø
[0] !7 ||áa[1] !9Ë
	`e
(29);

38 i‡(
	`gëuid
(Ë=10Ë
	`e
(30);

39 i‡(
	`gëeuid
(Ë!10Ë
	`e
(31);

40 i‡(
	`gëgid
(Ë=20Ë
	`e
(32);

41 i‡(
	`gëegid
(Ë!20Ë
	`e
(33);

43 i‡(
	`›í
("t1", 0Ë< 0Ë
	`e
(34);

44 i‡(
	`›í
("t2", 0Ë< 0Ë
	`e
(35);

45 
	`exô
(100);

46 
	}
}

48 
	$diff
(
s1
, 
s2
)

49 *
s1
, *
s2
;

52 i‡(*
s1
 =0 && *
s2
 == 0) (0);

53 i‡(*
s1
 !*
s2
)  (1);

54 
s1
++;

55 
s2
++;

57 
	}
}

60 
	$e
(
n
)

61 
n
;

63 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d ", 
subã°
, 
n
, 
î∫o
);

64 
	`≥º‹
("");

65 i‡(
îr˘
++ > 
MAX_ERROR
) {

66 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

67 
	`chdú
("..");

68 
	`sy°em
("rm -rf DIR*");

69 
	`exô
(1);

71 
	}
}

	@t11b.c

3 
	~<sys/ty≥s.h
>

4 
	~<î∫o.h
>

5 
	~<°dlib.h
>

6 
	~<uni°d.h
>

7 
	~<°dio.h
>

9 
	#MAX_ERROR
 4

	)

11 
	gîr˘
, 
	gsubã°
=1;

13 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
 []));

14 
_PROTOTYPE
(
diff
, (*
s1
, *
s2
));

15 
_PROTOTYPE
(
e
, (
n
));

17 
	$maö
(
¨gc
, 
¨gv
)

18 
¨gc
;

19 *
¨gv
[];

23 i‡(
	`diff
(
¨gv
[0], "t11b")Ë
	`e
(31);

24 i‡(
	`diff
(
¨gv
[1], "abc")Ë
	`e
(32);

25 i‡(
	`diff
(
¨gv
[2], "defghi")Ë
	`e
(33);

26 i‡(
	`diff
(
¨gv
[3], "j")Ë
	`e
(34);

27 i‡(
¨gv
[4] !0Ë
	`e
(35);

28 i‡(
¨gc
 !4Ë
	`e
(36);

30 
	`exô
(75);

31 
	}
}

33 
	$diff
(
s1
, 
s2
)

34 *
s1
, *
s2
;

37 i‡(*
s1
 =0 && *
s2
 == 0) (0);

38 i‡(*
s1
 !*
s2
)  (1);

39 
s1
++;

40 
s2
++;

42 
	}
}

44 
	$e
(
n
)

45 
n
;

47 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d ", 
subã°
, 
n
, 
î∫o
);

48 
	`≥º‹
("");

49 i‡(
îr˘
++ > 
MAX_ERROR
) {

50 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

51 
	`chdú
("..");

52 
	`sy°em
("rm -rf DIR*");

53 
	`exô
(1);

55 
	}
}

	@table.c

5 
	#_TABLE


	)

7 
	~"fs.h
"

8 
	~<möix/ˇŒƒ.h
>

9 
	~<möix/com.h
>

10 
	~"buf.h
"

11 
	~"dev.h
"

12 
	~"fûe.h
"

13 
	~"Âroc.h
"

14 
	~"öode.h
"

15 
	~"lock.h
"

16 
	~"su≥r.h
"

18 
PUBLIC
 
_PROTOTYPE
 ((*
ˇŒ_ve˘‹
[
NCALLS
]), () ) = {

19 
no_sys
,

20 
do_exô
,

21 
do_f‹k
,

22 
do_ªad
,

23 
do_wrôe
,

24 
do_›í
,

25 
do_˛o£
,

26 
no_sys
,

27 
do_¸ót
,

28 
do_lök
,

29 
do_u∆ök
,

30 
no_sys
,

31 
do_chdú
,

32 
do_time
,

33 
do_mknod
,

34 
do_chmod
,

35 
do_chown
,

36 
no_sys
,

37 
do_°©
,

38 
do_l£ek
,

39 
no_sys
,

40 
do_mou¡
,

41 
do_umou¡
,

42 
do_£t
,

43 
no_sys
,

44 
do_°ime
,

45 
no_sys
,

46 
no_sys
,

47 
do_f°©
,

48 
no_sys
,

49 
do_utime
,

50 
no_sys
,

51 
no_sys
,

52 
do_ac˚ss
,

53 
no_sys
,

54 
no_sys
,

55 
do_sync
,

56 
no_sys
,

57 
do_ª«me
,

58 
do_mkdú
,

59 
do_u∆ök
,

60 
do_dup
,

61 
do_pùe
,

62 
do_tims
,

63 
no_sys
,

64 
no_sys
,

65 
do_£t
,

66 
no_sys
,

67 
no_sys
,

68 
no_sys
,

69 
no_sys
,

70 
no_sys
,

71 
no_sys
,

72 
no_sys
,

73 
do_io˘l
,

74 
do_f˙é
,

75 
no_sys
,

76 
no_sys
,

77 
no_sys
,

78 
do_exec
,

79 
do_umask
,

80 
do_chroŸ
,

81 
do_£tsid
,

82 
no_sys
,

84 
no_sys
,

85 
do_u≈au£
,

86 
no_sys
,

87 
do_ªvive
,

88 
no_sys
,

89 
no_sys
,

90 
no_sys
,

91 
no_sys
,

92 
no_sys
,

93 
no_sys
,

94 
no_sys
,

95 
no_sys
,

96 
no_sys
,

101 
	#DT
(
íabÀ
, 
›í
, 
rw
, 
˛o£
, 
èsk
Ë\

	)

102 { (
	gíabÀ
 ? (
	g›í
Ë: 
no_dev
), (íabÀ ? (
	grw
) :Ço_dev), \

103 (
	gíabÀ
 ? (
	g˛o£
Ë: 
no_dev
), (íabÀ ? (
	gèsk
) : 0) },

115 
PUBLIC
 
dm≠
 
	gdm≠
[] = {

118 
DT
(1, 
no_dev
,Ço_dev,Ço_dev, 0)

119 
DT
(1, 
dev_›˛
, 
ˇŒ_èsk
, dev_›˛, 
MEM
)

120 
DT
(1, 
dev_›˛
, 
ˇŒ_èsk
, dev_›˛, 
FLOPPY
)

121 
DT
(
ENABLE_WINI
,

122 
dev_›˛
, 
ˇŒ_èsk
, dev_›˛, 
WINCHESTER
)

123 
DT
(1, 
ây_›í
, 
ˇŒ_èsk
, 
dev_›˛
, 
TTY
)

124 
DT
(1, 
˘ty_›í
, 
ˇŒ_˘ty
, 
˘ty_˛o£
, 
TTY
)

125 
DT
(1, 
dev_›˛
, 
ˇŒ_èsk
, dev_›˛, 
PRINTER
)

127 #i‡(
MACHINE
 =
IBM_PC
)

128 
DT
(
ENABLE_NETWORKING
,

129 
√t_›í
, 
ˇŒ_èsk
, 
dev_›˛
, 
INET_PROC_NR
)

130 
DT
(
ENABLE_CDROM
,

131 
dev_›˛
, 
ˇŒ_èsk
, dev_›˛, 
CDROM
)

132 
DT
(0, 0, 0, 0, 0)

133 
DT
(
ENABLE_SCSI
,

134 
dev_›˛
, 
ˇŒ_èsk
, dev_›˛, 
SCSI
)

135 
DT
(0, 0, 0, 0, 0)

136 
DT
(0, 0, 0, 0, 0)

137 
DT
(
ENABLE_AUDIO
,

138 
dev_›˛
, 
ˇŒ_èsk
, dev_›˛, 
AUDIO
)

139 
DT
(
ENABLE_AUDIO
,

140 
dev_›˛
, 
ˇŒ_èsk
, dev_›˛, 
MIXER
)

143 #i‡(
MACHINE
 =
ATARI
)

144 
DT
(
ENABLE_SCSI
,

145 
dev_›˛
, 
ˇŒ_èsk
, dev_›˛, 
SCSI
)

149 
PUBLIC
 
	gmax_maj‹
 = (
dm≠
)/(dmap);

	@tabsize.c

18 
	~<cur£s.h
>

19 
	~"cur•riv.h
"

26 
	$wèbsize
(
wö
, 
ts
)

27 
WINDOW
 *
wö
;

28 
ts
;

30 
‹igvÆ
;

32 
‹igvÆ
 = 
wö
->
_èbsize
;

33 
wö
->
_èbsize
 = 
ts
;

34 (
‹igvÆ
);

35 
	}
}

42 
	$èbsize
(
ts
)

43 
ts
;

45 
‹igvÆ
;

47 
‹igvÆ
 = 
°ds¸
->
_èbsize
;

48 
°ds¸
->
_èbsize
 = 
ts
;

49 (
‹igvÆ
);

50 
	}
}

	@tan.c

9 
	~<m©h.h
>

10 
	~<Êﬂt.h
>

11 
	~<î∫o.h
>

12 
	~"loˇlm©h.h
"

15 
	$èn
(
x
)

22 
√g©ive
 = 
x
 < 0;

23 
övît
 = 0;

24 
y
;

25 
p
[] = {

31 
q
[] = {

39 i‡(
	`__IsN™
(
x
)) {

40 
î∫o
 = 
EDOM
;

41  
x
;

43 i‡(
√g©ive
Ë
x
 = -x;

47 
y
 = 
x
 * 
M_2_PI
 + 0.5;

49 i‡(
y
 >
DBL_MAX
/
M_PI_2
)  0.0;

55 
	#A1
 1.57080078125

	)

56 
	#A2
 -4.454455103380768678308e-6

	)

58 
x1
, 
x2
;

60 
	`modf
(
y
, &y);

61 i‡(
	`modf
(0.5*
y
, &
x1
)Ë
övît
 = 1;

62 
x2
 = 
	`modf
(
x
, &
x1
);

63 
x
 = 
x1
 - 
y
 * 
A1
;

64 
x
 +
x2
;

65 
x
 -
y
 * 
A2
;

66 #unde‡
A1


67 #unde‡
A2


71 
y
 = 
x
 * x;

72 
x
 +x * 
y
 * 
	`POLYNOM2
(y, 
p
+1);

73 
y
 = 
	`POLYNOM4
(y, 
q
);

74 i‡(
√g©ive
Ë
x
 = -x;

75  
övît
 ? -
y
/
x
 : x/y;

76 
	}
}

	@tanh.c

9 
	~<Êﬂt.h
>

10 
	~<m©h.h
>

11 
	~<î∫o.h
>

12 
	~"loˇlm©h.h
"

15 
	$ènh
(
x
)

22 
p
[] = {

27 
q
[] = {

33 
√g©ive
 = 
x
 < 0;

35 i‡(
	`__IsN™
(
x
)) {

36 
î∫o
 = 
EDOM
;

37  
x
;

39 i‡(
√g©ive
Ë
x
 = -x;

41 i‡(
x
 >0.5*
M_LN_MAX_D
) {

42 
x
 = 1.0;

44 
	#LN3D2
 0.54930614433405484570e+0

	)

45 i‡(
x
 > 
LN3D2
) {

46 
x
 = 0.5 - 1.0/(
	`exp
(x+x)+1.0);

47 
x
 += x;

51 
g
 = 
x
*x;

52 
x
 +x * 
g
 * 
	`POLYNOM2
(g, 
p
)/
	`POLYNOM3
(g, 
q
);

54  
√g©ive
 ? -
x
 : x;

55 
	}
}

	@taskcall.c

6 
	~<lib.h
>

7 
	~<möix/sy¶ib.h
>

9 
PUBLIC
 
	$_èskˇŒ
(
who
, 
sysˇŒƒ
, 
msg±r
)

10 
who
;

11 
sysˇŒƒ
;

12 
mesßge
 *
msg±r
;

14 
°©us
;

16 
msg±r
->
m_ty≥
 = 
sysˇŒƒ
;

17 
°©us
 = 
	`_£ndªc
(
who
, 
msg±r
);

18 i‡(
°©us
 != 0) (status);

19 (
msg±r
->
m_ty≥
);

20 
	}
}

	@tcp.c

5 
	~"öë.h
"

6 
	~"buf.h
"

7 
	~"˛ock.h
"

8 
	~"ty≥.h
"

10 
	~"io.h
"

11 
	~"ù.h
"

12 
	~"§.h
"

13 
	~"as£π.h
"

14 
	~"t˝.h
"

15 
	~"t˝_öt.h
"

17 
INIT_PANIC
();

19 
PUBLIC
 
t˝_p‹t_t
 
	gt˝_p‹t_èbÀ
[
TCP_PORT_NR
];

20 
PUBLIC
 
t˝_fd_t
 
	gt˝_fd_èbÀ
[
TCP_FD_NR
];

21 
PUBLIC
 
t˝_c⁄n_t
 
	gt˝_c⁄n_èbÀ
[
TCP_CONN_NR
];

23 
FORWARD
 
t˝_maö
 
ARGS
(–
t˝_p‹t_t
 *
p‹t
 ));

24 
FORWARD
 
acc_t
 *
t˝_gë_d©a
 
ARGS
(–
fd
, 
size_t
 
off£t
,

25 
size_t
 
cou¡
, 
f‹_io˘l
 ));

26 
FORWARD
 
t˝_put_d©a
 
ARGS
(–
fd
, 
size_t
 
off£t
,

27 
acc_t
 *
d©a
, 
f‹_io˘l
 ));

28 
FORWARD
 
ªad_ù_∑ckës
 
ARGS
(–
t˝_p‹t_t
 *
p‹t
 ));

29 
FORWARD
 
t˝_£tc⁄f
 
ARGS
(–
t˝_fd_t
 *
t˝_fd
 ));

30 
FORWARD
 
t˝_c⁄√˘
 
ARGS
(–
t˝_fd_t
 *
t˝_fd
 ));

31 
FORWARD
 
t˝_li°í
 
ARGS
(–
t˝_fd_t
 *
t˝_fd
 ));

32 
FORWARD
 
t˝_©èche
 
ARGS
(–
t˝_fd_t
 *
t˝_fd
 ));

33 
FORWARD
 
t˝p‹t_t
 
föd_unu£d_p‹t
 
ARGS
(–
fd
 ));

34 
FORWARD
 
is_unu£d_p‹t
 
ARGS
(–
T˝p‹t_t
 
p‹t
 ));

35 
FORWARD
 
ª∂y_thr_put
 
ARGS
(–
t˝_fd_t
 *
t˝_fd
, 
ª∂y
,

36 
f‹_io˘l
 ));

37 
FORWARD
 
ª∂y_thr_gë
 
ARGS
(–
t˝_fd_t
 *
t˝_fd
, 
ª∂y
,

38 
f‹_io˘l
 ));

39 
FORWARD
 
t˝_c⁄n_t
 *
föd_c⁄n_íåy
 
ARGS
(–
T˝p‹t_t
 
lo˝‹t
,

40 
ùaddr_t
 
loˇddr
, 
T˝p‹t_t
 
ªmp‹t
, i∑ddr_à
ªadaddr
 ));

41 
FORWARD
 
t˝_c⁄n_t
 *
föd_em±y_c⁄n
 
ARGS
(( ));

42 
FORWARD
 
¥o˚ss_öc_‰agm
 
ARGS
(–
t˝_p‹t_t
 *
t˝_p‹t
,

43 
acc_t
 *
d©a
 ));

44 
FORWARD
 
t˝_c⁄n_t
 *
föd_be°_c⁄n
 
ARGS
(–
ù_hdr_t
 *
ù_hdr
,

45 
t˝_hdr_t
 *
t˝_hdr
 ));

46 
FORWARD
 
˛o£_maöu£r
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
,

47 
t˝_fd_t
 *
t˝_fd
 ));

48 
FORWARD
 
c⁄n_right4fd
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
, 
t˝_fd_t
 *
t˝_fd
 ));

49 
FORWARD
 
t˝_su4c⁄√˘
 
ARGS
(–
t˝_fd_t
 *
t˝_fd
 ));

50 
FORWARD
 
t˝_buf‰ì
 
ARGS
(–
¥i‹ôy
, 
size_t
 
ªqsize
 ));

51 
FORWARD
 
t˝_nŸªach
 
ARGS
(–
acc_t
 *
∑ck
 ));

52 
FORWARD
 
t˝_£tup_c⁄n
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
 ));

54 
PUBLIC
 
	$t˝_öô
()

56 
i
, 
ªsu…
;

57 
t˝_fd_t
 *
t˝_fd
;

58 
t˝_p‹t_t
 *
t˝_p‹t
;

59 
t˝_c⁄n_t
 *
t˝_c⁄n
;

61 
	`as£π
 (
BUF_S
 >(
nwio_ù›t
));

62 
	`as£π
 (
BUF_S
 >(
nwio_ùc⁄f
));

63 
	`as£π
 (
BUF_S
 >(
nwio_t˝c⁄f
));

64 
	`as£π
 (
BUF_S
 >
IP_MAX_HDR_SIZE
);

65 
	`as£π
 (
BUF_S
 >
TCP_MAX_HDR_SIZE
);

67 
t˝_p‹t_èbÀ
[0].
ç_mö‹

TCP_DEV0
;

68 
t˝_p‹t_èbÀ
[0].
ç_ùdev

IP0
;

70 
i
=0, 
t˝_fd

t˝_fd_èbÀ
; i<
TCP_FD_NR
; i++,Åcp_fd++)

72 
t˝_fd
->
tf_Êags

TFF_EMPTY
;

75 
i
=0, 
t˝_c⁄n

t˝_c⁄n_èbÀ
; i<
TCP_CONN_NR
; i++,

76 
t˝_fd
++)

78 
t˝_c⁄n
->
tc_Êags

TCF_EMPTY
;

79 #i‡
DEBUG
 & 256

80 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

81 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

85 
	`bf_log⁄
(
t˝_buf‰ì
);

87 
i
=0, 
t˝_p‹t

t˝_p‹t_èbÀ
; i<
TCP_PORT_NR
; i++,

88 
t˝_p‹t
++)

90 
t˝_p‹t
->
ç_Êags

TPF_EMPTY
;

91 
t˝_p‹t
->
ç_°©e

TPS_EMPTY
;

93 
ªsu…

	`§_add_mö‹
 (
t˝_p‹t
->
ç_mö‹
,

94 
t˝_p‹t
-
t˝_p‹t_èbÀ
, 
t˝_›í
, 
t˝_˛o£
,

95 
t˝_ªad
, 
t˝_wrôe
, 
t˝_io˘l
, 
t˝_ˇn˚l
);

96 
	`as£π
 (
ªsu…
>=0);

98 
	`t˝_maö
(
t˝_p‹t
);

100 
	}
}

102 
PRIVATE
 
	$t˝_maö
(
t˝_p‹t
)

103 
t˝_p‹t_t
 *
t˝_p‹t
;

105 
ªsu…
, 
i
;

106 
t˝_c⁄n_t
 *
t˝_c⁄n
;

107 
t˝_fd_t
 *
t˝_fd
;

109 
t˝_p‹t
->
ç_°©e
)

111 
TPS_EMPTY
:

112 
t˝_p‹t
->
ç_°©e

TPS_SETPROTO
;

113 #i‡
DEBUG
 & 256

114 { 
	`whîe
(); 
	`¥ötf
("doing ip_open\n"); }

116 
t˝_p‹t
->
ç_ùfd

	`ù_›í
—˝_p‹t->
ç_ùdev
,

117 
t˝_p‹t
-
t˝_p‹t_èbÀ
, 
t˝_gë_d©a
,

118 
t˝_put_d©a
);

119 i‡(
t˝_p‹t
->
ç_ùfd
 < 0)

121 
t˝_p‹t
->
ç_°©e

TPS_ERROR
;

122 
	`¥ötf
("%s, %d: unableÅo open ipÖort\n",

123 
__FILE__
, 
__LINE__
);

127 #i‡
DEBUG
 & 256

128 { 
	`whîe
(); 
	`¥ötf
("doing ip_ioctl(.., NWIOSIPOPT)\n"); }

130 
ªsu…

	`ù_io˘l
(
t˝_p‹t
->
ç_ùfd
, 
NWIOSIPOPT
);

131 i‡(
ªsu…
 =
NW_SUSPEND
)

132 
t˝_p‹t
->
ç_Êags
 |
TPF_SUSPEND
;

133 i‡(
ªsu…
 < 0)

135 #i‡
DEBUG


136 { 
	`whîe
(); 
	`¥ötf
("ù_io˘l(..,%lx)=%d\n", 
NWIOSIPOPT
, 
ªsu…
); }

140 i‡(
t˝_p‹t
->
ç_°©e
 !
TPS_GETCONF
)

143 
TPS_GETCONF
:

144 
t˝_p‹t
->
ç_Êags
 &~
TPF_SUSPEND
;

146 #i‡
DEBUG
 & 256

147 { 
	`whîe
(); 
	`¥ötf
("doing ip_ioctl(.., NWIOGIPCONF)\n"); }

149 
ªsu…

	`ù_io˘l
(
t˝_p‹t
->
ç_ùfd
, 
NWIOGIPCONF
);

150 i‡(
ªsu…
 =
NW_SUSPEND
)

151 
t˝_p‹t
->
ç_Êags
 |
TPF_SUSPEND
;

152 i‡(
ªsu…
 < 0)

154 #i‡
DEBUG
 & 256

155 { 
	`whîe
(); 
	`¥ötf
("ù_io˘l(..,%lx)=%d\n", 
NWIOGIPCONF
, 
ªsu…
); }

159 i‡(
t˝_p‹t
->
ç_°©e
 !
TPS_MAIN
)

162 
TPS_MAIN
:

163 
t˝_p‹t
->
ç_Êags
 &~
TPF_SUSPEND
;

164 
t˝_p‹t
->
ç_∑ck
= 0;

166 
t˝_c⁄n
&
t˝_c⁄n_èbÀ
[
t˝_p‹t
-
t˝_p‹t_èbÀ
];

167 
t˝_c⁄n
->
tc_Êags

TCF_INUSE
;

168 #i‡
DEBUG
 & 16

169 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

170 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

172 
t˝_c⁄n
->
tc_lo˝‹t
= 0;

173 
t˝_c⁄n
->
tc_loˇddr

t˝_p‹t
->
ç_ùaddr
;

174 
t˝_c⁄n
->
tc_ªmp‹t
= 0;

175 
t˝_c⁄n
->
tc_ªmaddr
= 0;

176 
t˝_c⁄n
->
tc_°©e

TCS_CLOSED
;

177 #i‡
DEBUG
 & 2

178 { 
	`whîe
(); 
	`t˝_wrôe_°©e
(
t˝_c⁄n
); }

180 
t˝_c⁄n
->
tc_maöu£r
= 0;

181 
t˝_c⁄n
->
tc_ªadu£r
= 0;

182 
t˝_c⁄n
->
tc_wrôeu£r
= 0;

183 
t˝_c⁄n
->
tc_c⁄nu£r
= 0;

184 #i‡
DEBUG
 & 256

185 { 
	`whîe
(); 
	`¥ötf
("t˝_c⁄n_èbÀ[%d].tc_c⁄nu£r0x%x\n", 
t˝_c⁄n
-

186 
t˝_c⁄n_èbÀ
, 
t˝_c⁄n
->
tc_c⁄nu£r
); }

188 
t˝_c⁄n
->
tc_‹gli°í

FALSE
;

189 
t˝_c⁄n
->
tc_£nddis
= 0;

190 
t˝_c⁄n
->
tc_ISS
= 0;

191 
t˝_c⁄n
->
tc_SND_UNA
t˝_c⁄n->
tc_ISS
;

192 
t˝_c⁄n
->
tc_SND_TRM
t˝_c⁄n->
tc_ISS
;

193 
t˝_c⁄n
->
tc_SND_NXT
t˝_c⁄n->
tc_ISS
;

194 
t˝_c⁄n
->
tc_SND_UP
t˝_c⁄n->
tc_ISS
;

195 
t˝_c⁄n
->
tc_SND_WL2
t˝_c⁄n->
tc_ISS
;

196 
t˝_c⁄n
->
tc_IRS
= 0;

197 
t˝_c⁄n
->
tc_SND_WL1
t˝_c⁄n->
tc_IRS
;

198 
t˝_c⁄n
->
tc_RCV_LO
t˝_c⁄n->
tc_IRS
;

199 
t˝_c⁄n
->
tc_RCV_NXT
t˝_c⁄n->
tc_IRS
;

200 
t˝_c⁄n
->
tc_RCV_HI
t˝_c⁄n->
tc_IRS
;

201 
t˝_c⁄n
->
tc_RCV_UP
t˝_c⁄n->
tc_IRS
;

202 
t˝_c⁄n
->
tc_p‹t

t˝_p‹t
;

203 
t˝_c⁄n
->
tc_rcvd_d©a
= 0;

204 
t˝_c⁄n
->
tc_rcv_queue
= 0;

205 
t˝_c⁄n
->
tc_£nd_d©a
= 0;

206 
t˝_c⁄n
->
tc_ªmù›t
= 0;

207 
t˝_c⁄n
->
tc_ªmt˝›t
= 0;

208 
t˝_c⁄n
->
tc_‰ag2£nd
= 0;

209 
t˝_c⁄n
->
tc_tos

TCP_DEF_TOS
;

210 
t˝_c⁄n
->
tc_âl

IP_MAX_TTL
;

211 
t˝_c⁄n
->
tc_rcv_wnd

TCP_MAX_WND_SIZE
;

212 
t˝_c⁄n
->
tc_urg_wnd

TCP_DEF_URG_WND
;

213 
t˝_c⁄n
->
tc_max_no_ªå™s

TCP_DEF_MAX_NO_RETRANS
;

214 
t˝_c⁄n
->
tc_0wnd_to
= 0;

215 
t˝_c⁄n
->
tc_πt

TCP_DEF_RTT
;

216 
t˝_c⁄n
->
tc_ët
= 0;

217 
t˝_c⁄n
->
tc_mss

TCP_DEF_MSS
;

218 
t˝_c⁄n
->
tc_îr‹

NW_OK
;

219 
t˝_c⁄n
->
tc_¢d_wnd

TCP_MAX_WND_SIZE
;

221 
i
=0, 
t˝_fd

t˝_fd_èbÀ
; i<
TCP_FD_NR
; i++,

222 
t˝_fd
++)

224 i‡(!(
t˝_fd
->
tf_Êags
 & 
TFF_INUSE
))

226 i‡(
t˝_fd
->
tf_p‹t
 !
t˝_p‹t
)

228 i‡(
t˝_fd
->
tf_Êags
 & 
TFF_IOC_INIT_SP
)

230 
t˝_fd
->
tf_Êags
 &~
TFF_IOC_INIT_SP
;

231 #i‡
DEBUG
 & 256

232 { 
	`whîe
(); 
	`¥ötf
("restartingÅcp_ioctl\n"); }

234 
	`t˝_io˘l
(
i
, 
t˝_fd
->
tf_i‹eq
);

237 
	`ªad_ù_∑ckës
(
t˝_p‹t
);

241 
	`ù_∑nic
(( "unknown state" ));

244 
	}
}

246 
PRIVATE
 
acc_t
 *
	$t˝_gë_d©a
 (
p‹t
, 
off£t
, 
cou¡
, 
f‹_io˘l
)

247 
p‹t
;

248 
size_t
 
off£t
;

249 
size_t
 
cou¡
;

250 
f‹_io˘l
;

252 
t˝_p‹t_t
 *
t˝_p‹t
;

253 
ªsu…
;

255 
t˝_p‹t
&
t˝_p‹t_èbÀ
[
p‹t
];

257 
t˝_p‹t
->
ç_°©e
)

259 
TPS_SETPROTO
:

260 i‡(!
cou¡
)

262 
ªsu…
()
off£t
;

263 i‡(
ªsu…
<0)

265 
t˝_p‹t
->
ç_°©e

TPS_ERROR
;

268 
t˝_p‹t
->
ç_°©e

TPS_GETCONF
;

269 i‡(
t˝_p‹t
->
ç_Êags
 & 
TPF_SUSPEND
)

270 
	`t˝_maö
(
t˝_p‹t
);

271  
NW_OK
;

273 
	`as£π
 (!
off£t
);

274 
	`as£π
 (
cou¡
 =(
nwio_ù›t
));

276 
nwio_ù›t
 *
ù›t
;

277 
acc_t
 *
acc
;

279 
acc

	`bf_memªq
((*
ù›t
));

280 
ù›t
(
nwio_ù›t
 *)
	`±r2acc_d©a
(
acc
);

281 
ù›t
->
nwio_Êags

NWIO_COPY
 |

282 
NWIO_EN_LOC
 | 
NWIO_DI_BROAD
 |

283 
NWIO_REMANY
 | 
NWIO_PROTOSPEC
 |

284 
NWIO_HDR_O_ANY
 | 
NWIO_RWDATALL
;

285 
ù›t
->
nwio_¥Ÿo

IPPROTO_TCP
;

286  
acc
;

288 
TPS_MAIN
:

289 
	`as£π
(
t˝_p‹t
->
ç_Êags
 & 
TPF_WRITE_IP
);

290 i‡(!
cou¡
)

292 
ªsu…
()
off£t
;

293 #i‡
DEBUG
 & 256

294 { 
	`whîe
(); 
	`¥ötf
("t˝_gë_d©a: gŸÑïly: %d\n", 
ªsu…
); }

296 i‡(
ªsu…
<0)

298 i‡(
ªsu…
 =
EDSTNOTRCH
)

300 
	`t˝_nŸªach
(
t˝_p‹t
->
ç_∑ck
);

304 
	`ù_w¨nög
((

306 
ªsu…
 ));

309 
	`as£π
 (
t˝_p‹t
->
ç_∑ck
);

310 
	`bf_a‰ì
 (
t˝_p‹t
->
ç_∑ck
);

311 
t˝_p‹t
->
ç_∑ck
= 0;

313 i‡(
t˝_p‹t
->
ç_Êags
 & 
TPF_WRITE_SP
)

315 
t˝_p‹t
->
ç_Êags
 &~(
TPF_WRITE_SP
|

316 
TPF_WRITE_IP
);

317 i‡(
t˝_p‹t
->
ç_Êags
 & 
TPF_MORE2WRITE
)

319 #i‡
DEBUG
 & 256

320 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_restart_write_port(&tcp_port_table[%d])\n",

321 
t˝_p‹t
 - 
t˝_p‹t_èbÀ
); }

323 
	`t˝_ª°¨t_wrôe_p‹t
(

324 
t˝_p‹t
);

328 
t˝_p‹t
->
ç_Êags
 &~
TPF_WRITE_IP
;

332 #i‡
DEBUG
 & 256

333 { 
	`whîe
(); 
	`¥ötf
("suplying data, count= %d, offset= %d, bufsize= %d\n",

334 
cou¡
, 
off£t
, 
	`bf_bufsize
(
t˝_p‹t
->
ç_∑ck
)); }

336  
	`bf_cut
 (
t˝_p‹t
->
ç_∑ck
, 
off£t
,

337 
cou¡
);

341 
	`¥ötf
("tcp_get_data(%d, 0x%x, 0x%x) called butÅp_state= 0x%x\n",

342 
p‹t
, 
off£t
, 
cou¡
, 
t˝_p‹t
->
ç_°©e
);

345  
NW_OK
;

346 
	}
}

348 
PRIVATE
 
	$t˝_put_d©a
 (
fd
, 
off£t
, 
d©a
, 
f‹_io˘l
)

349 
fd
;

350 
size_t
 
off£t
;

351 
acc_t
 *
d©a
;

352 
f‹_io˘l
;

354 
t˝_p‹t_t
 *
t˝_p‹t
;

355 
ªsu…
;

357 
t˝_p‹t
&
t˝_p‹t_èbÀ
[
fd
];

359 
t˝_p‹t
->
ç_°©e
)

361 
TPS_GETCONF
:

362 i‡(!
d©a
)

364 
ªsu…
()
off£t
;

365 i‡(
ªsu…
<0)

367 
t˝_p‹t
->
ç_°©e

TPS_ERROR
;

368  
NW_OK
;

370 
t˝_p‹t
->
ç_°©e

TPS_MAIN
;

371 #i‡
DEBUG
 & 256

372 { 
	`whîe
(); 
	`¥ötf
("get GETCONFÑeply\n"); }

374 i‡(
t˝_p‹t
->
ç_Êags
 & 
TPF_SUSPEND
)

375 
	`t˝_maö
(
t˝_p‹t
);

379 
nwio_ùc⁄f
 *
ùc⁄f
;

381 
d©a

	`bf_∑ckIffLess
(d©a, (*
ùc⁄f
));

382 
ùc⁄f
(
nwio_ùc⁄f
 *)
	`±r2acc_d©a
(
d©a
);

383 
	`as£π
 (
ùc⁄f
->
nwic_Êags
 & 
NWIC_IPADDR_SET
);

384 
t˝_p‹t
->
ç_ùaddr

ùc⁄f
->
nwic_ùaddr
;

385 
	`bf_a‰ì
(
d©a
);

388 
TPS_MAIN
:

389 
	`as£π
(
t˝_p‹t
->
ç_Êags
 & 
TPF_READ_IP
);

390 i‡(!
d©a
)

392 
ªsu…
()
off£t
;

393 i‡(
ªsu…
<0)

394 #i‡
DEBUG


395 { 
	`whîe
(); 
	`¥ötf
("t˝_put_d©®gŸÉº‹ %d (ign‹ed)\n", 
ªsu…
); }

397 
	`ù_∑nic
(( "ip_read() failed" ));

399 i‡(
t˝_p‹t
->
ç_Êags
 & 
TPF_READ_SP
)

401 
t˝_p‹t
->
ç_Êags
 &~(
TPF_READ_SP
|

402 
TPF_READ_IP
);

403 
	`ªad_ù_∑ckës
(
t˝_p‹t
);

406 
t˝_p‹t
->
ç_Êags
 &~
TPF_READ_IP
;

410 
	`as£π
(!
off£t
);

412 #i‡
DEBUG
 & 256

413 { 
	`whîe
(); 
	`¥ötf
("got data from ip\n"); }

415 
	`¥o˚ss_öc_‰agm
(
t˝_p‹t
, 
d©a
);

419 
	`¥ötf
("tcp_put_data(%d, 0x%x, 0x%x) called butÅp_state= 0x%x\n",

420 
fd
, 
off£t
, 
d©a
, 
t˝_p‹t
->
ç_°©e
);

423  
NW_OK
;

424 
	}
}

426 
PUBLIC
 
	$t˝_›í
 (
p‹t
, 
§fd
, 
gë_u£rd©a
, 
put_u£rd©a
)

427 
p‹t
;

428 
§fd
;

429 
gë_u£rd©a_t
 
gë_u£rd©a
;

430 
put_u£rd©a_t
 
put_u£rd©a
;

432 
i
;

433 
t˝_fd_t
 *
t˝_fd
;

435 
i
=0; i<
TCP_FD_NR
 && (
t˝_fd_èbÀ
[i].
tf_Êags
 & 
TFF_INUSE
);

436 
i
++);

437 i‡(
i
>=
TCP_FD_NR
)

439 #i‡
DEBUG


440 { 
	`whîe
(); 
	`¥ötf
("out of fds\n"); }

442  
EOUTOFBUFS
;

445 
t˝_fd
&
t˝_fd_èbÀ
[
i
];

447 
t˝_fd
->
tf_Êags

TFF_INUSE
;

448 
t˝_fd
->
tf_Êags
 |
TFF_PUSH_DATA
;

450 
t˝_fd
->
tf_p‹t
&
t˝_p‹t_èbÀ
[
p‹t
];

451 
t˝_fd
->
tf_§fd

§fd
;

452 
t˝_fd
->
tf_t˝c⁄f
.
nwtc_Êags

TCP_DEF_OPT
;

453 
t˝_fd
->
tf_t˝c⁄f
.
nwtc_ªmaddr
= 0;

454 
t˝_fd
->
tf_t˝c⁄f
.
nwtc_ªmp‹t
= 0;

455 
t˝_fd
->
tf_gë_u£rd©a

gë_u£rd©a
;

456 
t˝_fd
->
tf_put_u£rd©a

put_u£rd©a
;

457 
t˝_fd
->
tf_c⁄n
= 0;

458  
i
;

459 
	}
}

461 
PUBLIC
 
	$t˝_io˘l
 (
fd
, 
ªq
)

462 
fd
;

463 
ªq
;

465 
t˝_fd_t
 *
t˝_fd
;

466 
t˝_p‹t_t
 *
t˝_p‹t
;

467 
t˝_c⁄n_t
 *
t˝_c⁄n
;

468 
nwio_t˝c⁄f_t
 *
t˝_c⁄f
;

469 
acc_t
 *
c⁄f_acc
;

470 
ty≥
;

471 
ªsu…
;

473 #i‡
DEBUG
 & 256

474 { 
	`whîe
(); 
	`¥ötf
("tcp_ioctl called\n"); }

476 
t˝_fd
&
t˝_fd_èbÀ
[
fd
];

477 
ty≥

ªq
 & 
IOCTYPE_MASK
;

479 
	`as£π
 (
t˝_fd
->
tf_Êags
 & 
TFF_INUSE
);

481 
t˝_p‹t

t˝_fd
->
tf_p‹t
;

482 
t˝_fd
->
tf_Êags
 |
TFF_IOCTL_IP
;

483 
t˝_fd
->
tf_i‹eq

ªq
;

485 i‡(
t˝_p‹t
->
ç_°©e
 !
TPS_MAIN
)

487 
t˝_fd
->
tf_Êags
 |
TFF_IOC_INIT_SP
;

488  
NW_SUSPEND
;

491 
ty≥
)

493 
NWIOSTCPCONF
 & 
IOCTYPE_MASK
:

494 i‡(
ªq
 !
NWIOSTCPCONF
)

496 #i‡
DEBUG


497 { 
	`whîe
(); 
	`¥ötf
("0x%x: bad io˘l\n", 
ªq
); }

499 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

500 
	`ª∂y_thr_gë
 (
t˝_fd
, 
EBADIOCTL
, 
TRUE
);

501 
ªsu…

NW_OK
;

504 i‡(
t˝_fd
->
tf_Êags
 & 
TFF_CONNECTED
)

506 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

507 
	`ª∂y_thr_gë
 (
t˝_fd
, 
EISCONN
, 
TRUE
);

508 
ªsu…

NW_OK
;

511 
ªsu…

	`t˝_£tc⁄f
(
t˝_fd
);

513 
NWIOGTCPCONF
 & 
IOCTYPE_MASK
:

514 i‡(
ªq
 !
NWIOGTCPCONF
)

516 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

517 
	`ª∂y_thr_put
 (
t˝_fd
, 
EBADIOCTL
, 
TRUE
);

518 
ªsu…

NW_OK
;

521 
c⁄f_acc

	`bf_memªq
((*
t˝_c⁄f
));

522 
	`as£π
 (
c⁄f_acc
->
acc_Àngth
 =(*
t˝_c⁄f
));

523 
t˝_c⁄f
(
nwio_t˝c⁄f_t
 *)
	`±r2acc_d©a
(
c⁄f_acc
);

525 *
t˝_c⁄f

t˝_fd
->
tf_t˝c⁄f
;

526 i‡(
t˝_fd
->
tf_Êags
 & 
TFF_CONNECTED
)

528 
t˝_c⁄n

t˝_fd
->
tf_c⁄n
;

529 
t˝_c⁄f
->
nwtc_lo˝‹t

t˝_c⁄n
->
tc_lo˝‹t
;

530 
t˝_c⁄f
->
nwtc_ªmaddr

t˝_c⁄n
->
tc_ªmaddr
;

531 
t˝_c⁄f
->
nwtc_ªmp‹t

t˝_c⁄n
->
tc_ªmp‹t
;

533 
t˝_c⁄f
->
nwtc_loˇddr

t˝_fd
->
tf_p‹t
->
ç_ùaddr
;

534 
ªsu…
(*
t˝_fd
->
tf_put_u£rd©a
)—˝_fd->
tf_§fd
,

535 0, 
c⁄f_acc
, 
TRUE
);

536 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

537 
	`ª∂y_thr_put
(
t˝_fd
, 
ªsu…
, 
TRUE
);

538 
ªsu…

NW_OK
;

540 
NWIOTCPCONN
 & 
IOCTYPE_MASK
:

541 i‡(
ªq
 !
NWIOTCPCONN
)

543 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

544 
	`ª∂y_thr_gë
 (
t˝_fd
, 
EBADIOCTL
, 
TRUE
);

545 
ªsu…

NW_OK
;

548 i‡(
t˝_fd
->
tf_Êags
 & 
TFF_CONNECTED
)

550 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

551 
	`ª∂y_thr_gë
 (
t˝_fd
, 
EISCONN
, 
TRUE
);

552 
ªsu…

NW_OK
;

555 
ªsu…

	`t˝_c⁄√˘
(
t˝_fd
);

557 
NWIOTCPLISTEN
 & 
IOCTYPE_MASK
:

558 i‡(
ªq
 !
NWIOTCPLISTEN
)

560 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

561 
	`ª∂y_thr_gë
 (
t˝_fd
, 
EBADIOCTL
, 
TRUE
);

562 
ªsu…

NW_OK
;

565 i‡(
t˝_fd
->
tf_Êags
 & 
TFF_CONNECTED
)

567 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

568 
	`ª∂y_thr_gë
 (
t˝_fd
, 
EISCONN
, 
TRUE
);

569 
ªsu…

NW_OK
;

572 
ªsu…

	`t˝_li°í
(
t˝_fd
);

573 #i‡
DEBUG
 & 256

574 { 
	`whîe
(); 
	`¥ötf
("t˝_li°í%d\n", 
ªsu…
); }

578 
NWIOTCPATTACH
 & 
IOCTYPE_MASK
:

579 i‡(
ªq
 !
NWIOTCPATTACH
)

581 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

582 
	`ª∂y_thr_gë
 (
t˝_fd
, 
EBADIOCTL
, 
TRUE
);

583 
ªsu…

NW_OK
;

586 i‡(
t˝_fd
->
tf_Êags
 & 
TFF_CONNECTED
)

588 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

589 
	`ª∂y_thr_gë
 (
t˝_fd
, 
EISCONN
, 
TRUE
);

590 
ªsu…

NW_OK
;

593 
ªsu…

	`t˝_©èche
(
t˝_fd
);

596 
NWIOTCPSHUTDOWN
 & 
IOCTYPE_MASK
:

597 i‡(
ªq
 !
NWIOTCPSHUTDOWN
)

599 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

600 
	`ª∂y_thr_gë
 (
t˝_fd
, 
EBADIOCTL
, 
TRUE
);

601 
ªsu…

NW_OK
;

604 i‡(!(
t˝_fd
->
tf_Êags
 & 
TFF_CONNECTED
))

606 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

607 
	`ª∂y_thr_gë
 (
t˝_fd
, 
ENOTCONN
, 
TRUE
);

608 
ªsu…

NW_OK
;

611 
t˝_fd
->
tf_Êags
 |
TFF_IOCTL_IP
;

612 
t˝_fd
->
tf_i‹eq

ªq
;

613 
t˝_c⁄n

t˝_fd
->
tf_c⁄n
;

614 i‡(
t˝_c⁄n
->
tc_wrôeu£r
)

615  
NW_SUSPEND
;

617 
t˝_c⁄n
->
tc_wrôeu£r

t˝_fd
;

618 
	`t˝_ª°¨t_fd_wrôe
 (
t˝_c⁄n
);

619 i‡(!(
t˝_fd
->
tf_Êags
 & 
TFF_IOCTL_IP
))

620  
NW_OK
;

622  
NW_SUSPEND
;

625 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

626 
	`ª∂y_thr_gë
(
t˝_fd
, 
EBADIOCTL
, 
TRUE
);

627 
ªsu…

NW_OK
;

630  
ªsu…
;

631 
	}
}

633 
PRIVATE
 
	$t˝_£tc⁄f
(
t˝_fd
)

634 
t˝_fd_t
 *
t˝_fd
;

636 
nwio_t˝c⁄f_t
 *
t˝c⁄f
;

637 
nwio_t˝c⁄f_t
 
ﬁdc⁄f
, 
√wc⁄f
;

638 
acc_t
 *
d©a
;

639 
ªsu…
;

640 
t˝p‹t_t
 
p‹t
;

641 
t˝_fd_t
 *
fd_±r
;

642 
√w_í_Êags
, 
√w_di_Êags
,

643 
ﬁd_í_Êags
, 
ﬁd_di_Êags
, 
Æl_Êags
, 
Êags
;

644 
i
;

646 
d©a
(*
t˝_fd
->
tf_gë_u£rd©a
)

647 (
t˝_fd
->
tf_§fd
, 0,

648 (
nwio_t˝c⁄f_t
), 
TRUE
);

650 i‡(!
d©a
)

651  
EFAULT
;

653 
d©a

	`bf_∑ckIffLess
(d©a, (
nwio_t˝c⁄f_t
));

654 
	`as£π
 (
d©a
->
acc_Àngth
 =(
nwio_t˝c⁄f_t
));

656 
t˝c⁄f
(
nwio_t˝c⁄f_t
 *)
	`±r2acc_d©a
(
d©a
);

657 
ﬁdc⁄f

t˝_fd
->
tf_t˝c⁄f
;

658 
√wc⁄f
*
t˝c⁄f
;

660 
ﬁd_í_Êags

ﬁdc⁄f
.
nwtc_Êags
 & 0xffff;

661 
ﬁd_di_Êags
(
ﬁdc⁄f
.
nwtc_Êags
 >> 16) &

663 
√w_í_Êags

√wc⁄f
.
nwtc_Êags
 & 0xffff;

664 
√w_di_Êags
(
√wc⁄f
.
nwtc_Êags
 >> 16) &

666 i‡(
√w_í_Êags
 & 
√w_di_Êags
)

668 #i‡
DEBUG


669 { 
	`whîe
(); 
	`¥ötf
("bad ioctl\n"); }

671 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

672 
	`ª∂y_thr_gë
(
t˝_fd
, 
EBADMODE
, 
TRUE
);

673  
NW_OK
;

677 i‡(
√w_di_Êags
 & 
NWTC_ACC_MASK
)

679 #i‡
DEBUG


680 { 
	`whîe
(); 
	`¥ötf
("bad ioctl\n"); }

682 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

683 
	`ª∂y_thr_gë
(
t˝_fd
, 
EBADMODE
, 
TRUE
);

684  
NW_OK
;

688 i‡(!(
√w_í_Êags
 & 
NWTC_ACC_MASK
))

689 
√w_í_Êags
 |(
ﬁd_í_Êags
 & 
NWTC_ACC_MASK
);

692 i‡(
√w_di_Êags
 & 
NWTC_LOCPORT_MASK
)

694 #i‡
DEBUG


695 { 
	`whîe
(); 
	`¥ötf
("bad ioctl\n"); }

697 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

698 
	`ª∂y_thr_gë
(
t˝_fd
, 
EBADMODE
, 
TRUE
);

699  
NW_OK
;

702 i‡(!(
√w_í_Êags
 & 
NWTC_LOCPORT_MASK
))

704 
√w_í_Êags
 |(
ﬁd_í_Êags
 &

705 
NWTC_LOCPORT_MASK
);

706 #i‡
DEBUG


707 { 
	`whîe
(); 
	`¥ötf
("locport= oldÜocport (=%u)\n",

708 
	`¡ohs
(
√wc⁄f
.
nwtc_lo˝‹t
)); }

710 
√wc⁄f
.
nwtc_lo˝‹t

ﬁdc⁄f
.nwtc_locport;

712 i‡((
√w_í_Êags
 & 
NWTC_LOCPORT_MASK
Ë=
NWTC_LP_SEL
)

714 
√wc⁄f
.
nwtc_lo˝‹t

	`föd_unu£d_p‹t
(
t˝_fd
-

715 
t˝_fd_èbÀ
);

716 #i‡
DEBUG
 & 256

717 { 
	`whîe
(); 
	`¥ötf
("locport selected (=%u)\n",

718 
	`¡ohs
(
√wc⁄f
.
nwtc_lo˝‹t
)); }

721 i‡((
√w_í_Êags
 & 
NWTC_LOCPORT_MASK
Ë=
NWTC_LP_SET
)

723 #i‡
DEBUG
 & 256

724 { 
	`whîe
(); 
	`¥ötf
("locport set (=%u)\n",

725 
	`¡ohs
(
√wc⁄f
.
nwtc_lo˝‹t
)); }

727 i‡(!
√wc⁄f
.
nwtc_lo˝‹t
)

729 #i‡
DEBUG


730 { 
	`whîe
(); 
	`¥ötf
("bad ioctl\n"); }

732 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

733 
	`ª∂y_thr_gë
(
t˝_fd
, 
EBADMODE
, 
TRUE
);

734  
NW_OK
;

739 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
) &

740 
NWTC_REMADDR_MASK
))

742 
√w_í_Êags
 |(
ﬁd_í_Êags
 &

743 
NWTC_REMADDR_MASK
);

744 
√w_di_Êags
 |(
ﬁd_di_Êags
 &

745 
NWTC_REMADDR_MASK
);

746 
√wc⁄f
.
nwtc_ªmaddr

ﬁdc⁄f
.nwtc_remaddr;

748 i‡(
√w_í_Êags
 & 
NWTC_SET_RA
)

750 i‡(!
√wc⁄f
.
nwtc_ªmaddr
)

752 #i‡
DEBUG


753 { 
	`whîe
(); 
	`¥ötf
("bad ioctl\n"); }

755 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

756 
	`ª∂y_thr_gë
(
t˝_fd
, 
EBADMODE
, 
TRUE
);

757  
NW_OK
;

762 
	`as£π
 (
√w_di_Êags
 & 
NWTC_REMADDR_MASK
);

763 
√wc⁄f
.
nwtc_ªmaddr
= 0;

767 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
Ë& 
NWTC_REMPORT_MASK
))

769 
√w_í_Êags
 |(
ﬁd_í_Êags
 &

770 
NWTC_REMPORT_MASK
);

771 
√w_di_Êags
 |(
ﬁd_di_Êags
 &

772 
NWTC_REMPORT_MASK
);

773 
√wc⁄f
.
nwtc_ªmp‹t
=

774 
ﬁdc⁄f
.
nwtc_ªmp‹t
;

776 i‡(
√w_í_Êags
 & 
NWTC_SET_RP
)

778 i‡(!
√wc⁄f
.
nwtc_ªmp‹t
)

780 #i‡
DEBUG


781 { 
	`whîe
(); 
	`¥ötf
("bad ioctl\n"); }

783 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

784 
	`ª∂y_thr_gë
(
t˝_fd
, 
EBADMODE
, 
TRUE
);

785  
NW_OK
;

790 
	`as£π
 (
√w_di_Êags
 & 
NWTC_REMPORT_MASK
);

791 
√wc⁄f
.
nwtc_ªmp‹t
= 0;

794 
√wc⁄f
.
nwtc_Êags
(()
√w_di_Êags


795 << 16Ë| 
√w_í_Êags
;

796 
Æl_Êags

√w_í_Êags
 | 
√w_di_Êags
;

799 i‡((
Æl_Êags
 & 
NWTC_LOCPORT_MASK
Ë=
NWTC_LP_SEL
 ||

800 (
Æl_Êags
 & 
NWTC_LOCPORT_MASK
Ë=
NWTC_LP_SET
)

802 
i
=0, 
fd_±r

t˝_fd_èbÀ
; i<
TCP_FD_NR
; i++, fd_ptr++)

804 i‡(
fd_±r
 =
t˝_fd
)

806 i‡(!(
fd_±r
->
tf_Êags
 & 
TFF_INUSE
))

808 
Êags

fd_±r
->
tf_t˝c⁄f
.
nwtc_Êags
;

809 i‡((
Êags
 & 
NWTC_LOCPORT_MASK
Ë!
NWTC_LP_SEL
 &&

810 (
Êags
 & 
NWTC_LOCPORT_MASK
Ë!
NWTC_LP_SET
)

812 i‡(
fd_±r
->
tf_t˝c⁄f
.
nwtc_lo˝‹t
 !=

813 
√wc⁄f
.
nwtc_lo˝‹t
)

815 i‡((
Êags
 & 
NWTC_ACC_MASK
Ë!(
Æl_Êags
 &

816 
NWTC_ACC_MASK
))

818 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

819 
	`ª∂y_thr_gë
(
t˝_fd
, 
EADDRINUSE
, 
TRUE
);

820  
NW_OK
;

825 
t˝_fd
->
tf_t˝c⁄f

√wc⁄f
;

827 i‡((
Æl_Êags
 & 
NWTC_ACC_MASK
) &&

828 ((
Æl_Êags
 & 
NWTC_LOCPORT_MASK
Ë=
NWTC_LP_SET
 ||

829 (
Æl_Êags
 & 
NWTC_LOCPORT_MASK
Ë=
NWTC_LP_SEL
) &&

830 (
Æl_Êags
 & 
NWTC_REMADDR_MASK
) &&

831 (
Æl_Êags
 & 
NWTC_REMPORT_MASK
))

832 
t˝_fd
->
tf_Êags
 |
TFF_OPTSET
;

835 #i‡
DEBUG


836 { 
	`whîe
();

837 i‡(!(
Æl_Êags
 & 
NWTC_ACC_MASK
)Ë
	`¥ötf
("NWTC_ACC_MASKÇot set ");

838 i‡(!(
Æl_Êags
 & (
NWTC_LP_SET
|
NWTC_LP_SEL
)))

839 
	`¥ötf
("localÖortÇot set ");

840 i‡(!(
Æl_Êags
 & 
NWTC_REMADDR_MASK
))

841 
	`¥ötf
("NWTC_REMADDR_MASKÇot set ");

842 i‡(!(
Æl_Êags
 & 
NWTC_REMPORT_MASK
))

843 
	`¥ötf
("NWTC_REMPORT_MASKÇot set "); }

845 
t˝_fd
->
tf_Êags
 &~
TFF_OPTSET
;

847 
	`bf_a‰ì
(
d©a
);

848 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

849 
	`ª∂y_thr_gë
(
t˝_fd
, 
NW_OK
, 
TRUE
);

850  
NW_OK
;

851 
	}
}

854 
PRIVATE
 
t˝p‹t_t
 
	$föd_unu£d_p‹t
(
fd
)

855 
fd
;

857 
t˝p‹t_t
 
p‹t
, 
nw_p‹t
;

859 
p‹t
0x8000;Ö‹à< 0xffff-
TCP_FD_NR
;Öort+= TCP_FD_NR)

861 
nw_p‹t

	`ht⁄s
(
p‹t
);

862 i‡(
	`is_unu£d_p‹t
(
nw_p‹t
))

863  
nw_p‹t
;

865 
p‹t
= 0x8000;Öort < 0xffff;Öort++)

867 
nw_p‹t

	`ht⁄s
(
p‹t
);

868 i‡(
	`is_unu£d_p‹t
(
nw_p‹t
))

869  
nw_p‹t
;

871 
	`ù_∑nic
(( "unableÅo find unusedÖort (shouldn't occur)" ));

873 
	}
}

875 
PRIVATE
 
	$is_unu£d_p‹t
(
p‹t
)

876 
t˝p‹t_t
 
p‹t
;

878 
i
;

879 
t˝_fd_t
 *
t˝_fd
;

880 
t˝_c⁄n_t
 *
t˝_c⁄n
;

882 
i
0, 
t˝_fd

t˝_fd_èbÀ
; i<
TCP_FD_NR
; i++,

883 
t˝_fd
++)

885 i‡(!(
t˝_fd
->
tf_Êags
 & 
TFF_OPTSET
))

887 i‡(
t˝_fd
->
tf_t˝c⁄f
.
nwtc_lo˝‹t
 =
p‹t
)

888  
FALSE
;

890 
i

TCP_PORT_NR
, 
t˝_c⁄n

t˝_c⁄n_èbÀ
+i;

891 
i
<
TCP_CONN_NR
; i++, 
t˝_c⁄n
++)

894 i‡(!(
t˝_c⁄n
->
tc_Êags
 & 
TCF_INUSE
))

896 i‡(
t˝_c⁄n
->
tc_lo˝‹t
 =
p‹t
)

897  
FALSE
;

899  
TRUE
;

900 
	}
}

902 
PRIVATE
 
	$ª∂y_thr_put
(
t˝_fd
, 
ª∂y
, 
f‹_io˘l
)

903 
t˝_fd_t
 *
t˝_fd
;

904 
ª∂y
;

905 
f‹_io˘l
;

907 #i‡
DEBUG
 & 256

908 { 
	`whîe
(); 
	`¥ötf
("reply_thr_put(..) called\n"); }

910 #i‡
DEBUG
 & 256

911 { 
	`whîe
(); 
	`¥ötf
("ˇŒög 0x%x\n", 
t˝_fd
->
tf_put_u£rd©a
); }

913 
	`as£π
 (
t˝_fd
);

914  (*
t˝_fd
->
tf_put_u£rd©a
)—˝_fd->
tf_§fd
, 
ª∂y
,

915 (
acc_t
 *)0, 
f‹_io˘l
);

916 
	}
}

918 
PRIVATE
 
	$ª∂y_thr_gë
(
t˝_fd
, 
ª∂y
, 
f‹_io˘l
)

919 
t˝_fd_t
 *
t˝_fd
;

920 
ª∂y
;

921 
f‹_io˘l
;

923 
acc_t
 *
ªsu…
;

924 #i‡
DEBUG
 & 256

925 { 
	`whîe
(); 
	`¥ötf
("reply_thr_get(..) called\n"); }

927 
ªsu…
(*
t˝_fd
->
tf_gë_u£rd©a
)—˝_fd->
tf_§fd
, 
ª∂y
,

928 (
size_t
)0, 
f‹_io˘l
);

929 
	`as£π
 (!
ªsu…
);

930 
	}
}

932 
PUBLIC
 
	$t˝_su4li°í
(
t˝_fd
)

933 
t˝_fd_t
 *
t˝_fd
;

935 
t˝_c⁄n_t
 *
t˝_c⁄n
;

936 
acc_t
 *
tmp_acc
;

938 
t˝_c⁄n

t˝_fd
->
tf_c⁄n
;

940 
t˝_c⁄n
->
tc_lo˝‹t

t˝_fd
->
tf_t˝c⁄f
.
nwtc_lo˝‹t
;

941 
t˝_c⁄n
->
tc_loˇddr

t˝_fd
->
tf_p‹t
->
ç_ùaddr
;

942 i‡(
t˝_fd
->
tf_t˝c⁄f
.
nwtc_Êags
 & 
NWTC_SET_RP
)

943 
t˝_c⁄n
->
tc_ªmp‹t

t˝_fd
->
tf_t˝c⁄f
.
nwtc_ªmp‹t
;

945 
t˝_c⁄n
->
tc_ªmp‹t
= 0;

946 i‡(
t˝_fd
->
tf_t˝c⁄f
.
nwtc_Êags
 & 
NWTC_SET_RA
)

947 
t˝_c⁄n
->
tc_ªmaddr

t˝_fd
->
tf_t˝c⁄f
.
nwtc_ªmaddr
;

949 
t˝_c⁄n
->
tc_ªmaddr
= 0;

951 
	`t˝_£tup_c⁄n
(
t˝_c⁄n
);

952 
t˝_c⁄n
->
tc_p‹t

t˝_fd
->
tf_p‹t
;

953 
t˝_c⁄n
->
tc_maöu£r

t˝_fd
;

954 
t˝_c⁄n
->
tc_c⁄nu£r

t˝_fd
;

955 
t˝_c⁄n
->
tc_‹gli°í

TRUE
;

956 
t˝_c⁄n
->
tc_°©e

TCS_LISTEN
;

957 #i‡
DEBUG
 & 2

958 { 
	`whîe
(); 
	`t˝_wrôe_°©e
(
t˝_c⁄n
); }

960  
NW_SUSPEND
;

961 
	}
}

971 
PRIVATE
 
t˝_c⁄n_t
 *
	$föd_em±y_c⁄n
()

973 
i
;

974 
t˝_c⁄n_t
 *
t˝_c⁄n
;

975 
°©e
;

977 
i
=
TCP_PORT_NR
, 
t˝_c⁄n

t˝_c⁄n_èbÀ
+i;

978 
i
<
TCP_CONN_NR
; i++, 
t˝_c⁄n
++)

982 i‡(
t˝_c⁄n
->
tc_Êags
 =
TCF_EMPTY
)

984 
t˝_c⁄n
->
tc_c⁄nu£r

NULL
;

985 
t˝_c⁄n
->
tc_maöu£r

NULL
;

986  
t˝_c⁄n
;

988 i‡(
t˝_c⁄n
->
tc_maöu£r
)

990 i‡(
t˝_c⁄n
->
tc_£nddis
 > 
	`gë_time
())

992 i‡(
t˝_c⁄n
->
tc_°©e
 !
TCS_CLOSED
)

994 #i‡
DEBUG


995 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_close_connection\n"); }

997 
	`t˝_˛o£_c⁄√˘i⁄
 (
t˝_c⁄n
, 
ENOCONN
);

999  
t˝_c⁄n
;

1001  
NULL
;

1002 
	}
}

1013 
PRIVATE
 
t˝_c⁄n_t
 *
	$föd_c⁄n_íåy
(
lo˝‹t
, 
loˇddr
, 
ªmp‹t
, 
ªmaddr
)

1014 
t˝p‹t_t
 
lo˝‹t
;

1015 
ùaddr_t
 
loˇddr
;

1016 
t˝p‹t_t
 
ªmp‹t
;

1017 
ùaddr_t
 
ªmaddr
;

1019 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1020 
i
, 
°©e
;

1022 #i‡
DEBUG
 & 256

1023 { 
	`whîe
(); 
	`¥ötf
("föd_c⁄n_íåy÷o˝‹t%u,Üoˇddr", 
	`¡ohs
(
lo˝‹t
));

1024 
	`wrôeIpAddr
(
loˇddr
);

1025 
	`¥ötf
("\ƒemp‹t%u,Ñemaddr", 
	`¡ohs
(
ªmp‹t
));

1026 
	`wrôeIpAddr
(
ªmaddr
); 
	`¥ötf
(")\n"); }

1028 
	`as£π
(
ªmp‹t
);

1029 
	`as£π
(
ªmaddr
);

1030 
i
=
TCP_PORT_NR
, 
t˝_c⁄n

t˝_c⁄n_èbÀ
+i; i<
TCP_CONN_NR
;

1031 
i
++, 
t˝_c⁄n
++)

1035 i‡(
t˝_c⁄n
->
tc_Êags
 =
TCF_EMPTY
)

1037 i‡(
t˝_c⁄n
->
tc_lo˝‹t
 !
lo˝‹t
 ||

1038 
t˝_c⁄n
->
tc_loˇddr
 !
loˇddr
 ||

1039 
t˝_c⁄n
->
tc_ªmp‹t
 !
ªmp‹t
 ||

1040 
t˝_c⁄n
->
tc_ªmaddr
 !
ªmaddr
)

1042 i‡(
t˝_c⁄n
->
tc_maöu£r
)

1043  
t˝_c⁄n
;

1044 
°©e

t˝_c⁄n
->
tc_°©e
;

1045 i‡(
°©e
 !
TCS_CLOSED
)

1047 
	`t˝_˛o£_c⁄√˘i⁄
(
t˝_c⁄n
, 
ENOCONN
);

1049  
t˝_c⁄n
;

1051  
NULL
;

1052 
	}
}

1054 
PRIVATE
 
	$ªad_ù_∑ckës
(
t˝_p‹t
)

1055 
t˝_p‹t_t
 *
t˝_p‹t
;

1057 
ªsu…
;

1061 
t˝_p‹t
->
ç_Êags
 |
TPF_READ_IP
;

1062 #i‡
DEBUG
 & 256

1063 { 
	`whîe
(); 
	`¥ötf
("doing ip_read\n"); }

1065 
ªsu…

	`ù_ªad
(
t˝_p‹t
->
ç_ùfd
, 
TCP_MAX_DATAGRAM
);

1066 i‡(
ªsu…
 =
NW_SUSPEND
)

1068 
t˝_p‹t
->
ç_Êags
 |
TPF_READ_SP
;

1071 
	`as£π
(
ªsu…
 =
NW_OK
);

1072 
t˝_p‹t
->
ç_Êags
 &~
TPF_READ_IP
;

1073 } !(
t˝_p‹t
->
ç_Êags
 & 
TPF_READ_IP
));

1074 
	}
}

1080 
PRIVATE
 
	$¥o˚ss_öc_‰agm
(
t˝_p‹t
, 
d©a
)

1081 
t˝_p‹t_t
 *
t˝_p‹t
;

1082 
acc_t
 *
d©a
;

1084 
acc_t
 *
ù_∑ck
, *
t˝_∑ck
;

1085 
ù_hdr_t
 *
ù_hdr
;

1086 
t˝_hdr_t
 *
t˝_hdr
;

1087 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1088 
∑ck_Àn
, 
ù_hdr_Àn
;

1090 
∑ck_Àn

	`bf_bufsize
(
d©a
);

1091 i‡((
u16_t
)~
	`t˝_∑ck_⁄eCsum
(
d©a
, 
∑ck_Àn
))

1093 
d©a

	`bf_∑ckIffLess
(d©a, 
IP_MIN_HDR_SIZE
);

1094 
ù_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
d©a
);

1095 #i‡
DEBUG


1096 { 
	`whîe
(); 
	`¥ötf
("checksumÉrror inÅcp_pack\n");

1097 
	`¥ötf
("tcp_pack_oneCsum(...)= 0x%x (%d)Üength= %d\n",

1098 (
u16_t
)~
	`t˝_∑ck_⁄eCsum
(
d©a
, 
∑ck_Àn
),

1099 (
u16_t
)~
	`t˝_∑ck_⁄eCsum
(
d©a
, 
∑ck_Àn
),Öack_len);

1100 
	`¥ötf
("§¯ù_addr"); 
	`wrôeIpAddr
(
ù_hdr
->
ih_§c
);Örintf("\n"); }

1102 
	`bf_a‰ì
(
d©a
);

1106 
d©a

	`bf_∑ckIffLess
(d©a, 
IP_MIN_HDR_SIZE
);

1107 
ù_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
d©a
);

1108 
ù_hdr_Àn
(
ù_hdr
->
ih_vîs_ihl
 & 
IH_IHL_MASK
) << 2;

1109 
ù_∑ck

	`bf_cut
(
d©a
, 0, 
ù_hdr_Àn
);

1111 
∑ck_Àn
 -
ù_hdr_Àn
;

1113 
t˝_∑ck

	`bf_cut
(
d©a
, 
ù_hdr_Àn
, 
∑ck_Àn
);

1114 
	`bf_a‰ì
(
d©a
);

1116 
t˝_∑ck

	`bf_∑ckIffLess
—˝_∑ck, 
TCP_MIN_HDR_SIZE
);

1117 
t˝_hdr
(
t˝_hdr_t
 *)
	`±r2acc_d©a
(
t˝_∑ck
);

1119 
t˝_c⁄n

	`föd_be°_c⁄n
(
ù_hdr
, 
t˝_hdr
);

1120 
	`as£π
(
t˝_c⁄n
);

1121 #i‡
DEBUG
 & 256

1122 { 
	`whîe
(); 
	`t˝_¥öt_∑ck
(
ù_hdr
, 
t˝_hdr
); 
	`¥ötf
("\n");

1123 
	`t˝_¥öt_c⁄n
(
t˝_c⁄n
); 
	`¥ötf
("\n"); }

1126 
t˝_hdr
->
th_chksum

∑ck_Àn
;

1127 #i‡
DEBUG
 & 256

1128 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_frag2conn(...)\n"); }

1130 
	`t˝_‰ag2c⁄n
(
t˝_c⁄n
, 
ù_∑ck
, 
t˝_∑ck
);

1131 
	}
}

1137 
PRIVATE
 
t˝_c⁄n_t
 *
	$föd_be°_c⁄n
(
ù_hdr
, 
t˝_hdr
)

1138 
ù_hdr_t
 *
ù_hdr
;

1139 
t˝_hdr_t
 *
t˝_hdr
;

1142 
be°_Àvñ
, 
√w_Àvñ
;

1143 
t˝_c⁄n_t
 *
be°_c⁄n
, *
li°í_c⁄n
, *
t˝_c⁄n
;

1144 
t˝_fd_t
 *
t˝_fd
;

1145 
i
;

1146 
ùaddr_t
 
loˇddr
;

1147 
ùaddr_t
 
ªmaddr
;

1148 
t˝p‹t_t
 
lo˝‹t
;

1149 
t˝p‹t_t
 
ªmp‹t
;

1151 
loˇddr

ù_hdr
->
ih_d°
;

1152 
ªmaddr

ù_hdr
->
ih_§c
;

1153 
lo˝‹t

t˝_hdr
->
th_d°p‹t
;

1154 
ªmp‹t

t˝_hdr
->
th_§˝‹t
;

1155 i‡(!
ªmp‹t
)

1158 
lo˝‹t
= 0;

1160 #i‡
DEBUG
 & 256

1161 { 
	`whîe
(); 
	`¥ötf
("find_best_conn(locport= %u,Üocaddr= ",

1162 
	`¡ohs
(
lo˝‹t
)); 
	`wrôeIpAddr
(
loˇddr
);

1163 
	`¥ötf
("\ƒemp‹t%u,Ñemaddr", 
	`¡ohs
(
ªmp‹t
));

1164 
	`wrôeIpAddr
(
ªmaddr
); 
	`¥ötf
(")\n"); }

1166 
be°_Àvñ
= 0;

1167 
be°_c⁄n

NULL
;

1168 
li°í_c⁄n

NULL
;

1169 
i

TCP_PORT_NR
, 
t˝_c⁄n

t˝_c⁄n_èbÀ
+i;

1170 
i
<
TCP_CONN_NR
; i++, 
t˝_c⁄n
++)

1174 i‡(!(
t˝_c⁄n
->
tc_Êags
 & 
TCF_INUSE
))

1177 i‡(
t˝_c⁄n
->
tc_loˇddr
 =
loˇddr
 &&

1178 
t˝_c⁄n
->
tc_lo˝‹t
 =
lo˝‹t
 &&

1179 
t˝_c⁄n
->
tc_ªmp‹t
 =
ªmp‹t
 &&

1180 
t˝_c⁄n
->
tc_ªmaddr
 =
ªmaddr
 &&

1181 
t˝_c⁄n
->
tc_maöu£r
)

1182  
t˝_c⁄n
;

1185 i‡(
t˝_c⁄n
->
tc_loˇddr
 !
loˇddr
)

1187 #i‡
DEBUG


1188 { 
	`whîe
(); 
	`¥ötf
("c⁄¿%d: wr⁄gÜoˇddr\n",
i
); }

1192 
√w_Àvñ
= 0;

1193 i‡(
t˝_c⁄n
->
tc_lo˝‹t
)

1195 i‡(
lo˝‹t
 !
t˝_c⁄n
->
tc_lo˝‹t
)

1197 #i‡
DEBUG
 & 256

1198 { 
	`whîe
(); 
	`¥ötf
("c⁄¿%d: wr⁄gÜo˝‹t(%u)\n",
i
,

1199 
	`¡ohs
(
t˝_c⁄n
->
tc_lo˝‹t
)); }

1203 
√w_Àvñ
 += 4;

1205 i‡(
t˝_c⁄n
->
tc_ªmp‹t
)

1207 i‡(
ªmp‹t
 !
t˝_c⁄n
->
tc_ªmp‹t
)

1209 #i‡
DEBUG
 & 256

1210 { 
	`whîe
(); 
	`¥ötf
("c⁄¿%d: wr⁄gÑemp‹t\n",
i
); }

1214 
√w_Àvñ
 += 1;

1216 i‡(
t˝_c⁄n
->
tc_ªmaddr
)

1218 i‡(
ªmaddr
 !
t˝_c⁄n
->
tc_ªmaddr
)

1220 #i‡
DEBUG
 & 256

1221 { 
	`whîe
(); 
	`¥ötf
("c⁄¿%d: wr⁄gÑemaddr\n",
i
); }

1225 
√w_Àvñ
 += 2;

1227 i‡(
√w_Àvñ
<
be°_Àvñ
)

1229 i‡(
√w_Àvñ
 !7 && 
t˝_c⁄n
->
tc_°©e
 !
TCS_LISTEN
)

1231 i‡(
√w_Àvñ
 =7 && !
t˝_c⁄n
->
tc_maöu£r
)

1234 
	`as£π
 (!
be°_c⁄n
);

1235 
be°_c⁄n

t˝_c⁄n
;

1238 i‡(!(
t˝_hdr
->
th_Êags
 & 
THF_SYN
))

1240 
be°_Àvñ

√w_Àvñ
;

1241 
li°í_c⁄n

t˝_c⁄n
;

1243 i‡(!
be°_c⁄n
 && !
li°í_c⁄n
)

1245 #i‡
DEBUG
 & 256

1246 { 
	`whîe
(); 
	`¥ötf
("refusing connection forÜocport= %u,Üocaddr= ",

1247 
	`¡ohs
(
lo˝‹t
)); 
	`wrôeIpAddr
(
loˇddr
);

1248 
	`¥ötf
("\ƒemp‹t%u,Ñemaddr", 
	`¡ohs
(
ªmp‹t
));

1249 
	`wrôeIpAddr
(
ªmaddr
); 
	`¥ötf
("\n"); }

1251 
i
=0, 
t˝_c⁄n

t˝_c⁄n_èbÀ
; i<
TCP_PORT_NR
;

1252 
i
++, 
t˝_c⁄n
++)

1254 i‡((
t˝_c⁄n
->
tc_Êags
 & 
TCF_INUSE
) &&

1255 
t˝_c⁄n
->
tc_loˇddr
==
loˇddr
)

1259 
	`as£π
 (
t˝_c⁄n
);

1260 
	`as£π
 (
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
);

1261 
t˝_c⁄n
->
tc_lo˝‹t

lo˝‹t
;

1262 
t˝_c⁄n
->
tc_loˇddr

loˇddr
;

1263 
t˝_c⁄n
->
tc_ªmp‹t

ªmp‹t
;

1264 
t˝_c⁄n
->
tc_ªmaddr

ªmaddr
;

1265 
	`as£π
 (!
t˝_c⁄n
->
tc_maöu£r
);

1266 
	`as£π
 (!
t˝_c⁄n
->
tc_ªadu£r
);

1267 
	`as£π
 (!
t˝_c⁄n
->
tc_wrôeu£r
);

1268  
t˝_c⁄n
;

1271 i‡(
be°_c⁄n
)

1273 
	`as£π
(!
be°_c⁄n
->
tc_maöu£r
);

1274 i‡(!
li°í_c⁄n
)

1275  
be°_c⁄n
;

1276 
t˝_fd

li°í_c⁄n
->
tc_maöu£r
;

1278 
	`as£π
(
t˝_fd
 &&Å˝_fd =
li°í_c⁄n
->
tc_c⁄nu£r
 &&

1279 
t˝_fd
->
tf_c⁄n
 =
li°í_c⁄n
);

1281 i‡(
be°_c⁄n
->
tc_°©e
 !
TCS_CLOSED
)

1282 
	`t˝_˛o£_c⁄√˘i⁄
(
be°_c⁄n
, 
ENOCONN
);

1283 
be°_c⁄n
->
tc_°©e

TCS_LISTEN
;

1284 #i‡
DEBUG


1285 { 
	`whîe
(); 
	`t˝_wrôe_°©e
(
be°_c⁄n
); }

1287 
be°_c⁄n
->
tc_maöu£r
be°_c⁄n->
tc_c⁄nu£r
=

1288 
t˝_fd
;

1289 
be°_c⁄n
->
tc_Êags

li°í_c⁄n
->tc_flags;

1290 
t˝_fd
->
tf_c⁄n

be°_c⁄n
;

1291 
li°í_c⁄n
->
tc_Êags

TCF_EMPTY
;

1292 #i‡
DEBUG
 & 16

1293 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

1294 
li°í_c⁄n
-
t˝_c⁄n_èbÀ
,Üi°í_c⁄n->
tc_Êags
); }

1296  
be°_c⁄n
;

1298 
	`as£π
 (
li°í_c⁄n
);

1299  
li°í_c⁄n
;

1300 
	}
}

1303 
PUBLIC
 
	$t˝_ª∂y_io˘l
(
t˝_fd
, 
ª∂y
)

1304 
t˝_fd_t
 *
t˝_fd
;

1305 
ª∂y
;

1307 #i‡
DEBUG
 & 256

1308 { 
	`whîe
(); 
	`¥ötf
("tcp_reply_ioctl called\n"); }

1310 #i‡
DEBUG


1311 i‡(!(
t˝_fd
->
tf_Êags
 & 
TFF_IOCTL_IP
))

1312 { 
	`whîe
(); 
	`¥ötf
("not TFF_IOCTL_IP\n"); }

1314 
	`as£π
 (
t˝_fd
->
tf_Êags
 & 
TFF_IOCTL_IP
);

1315 #i‡
DEBUG


1316 i‡(
t˝_fd
->
tf_i‹eq
 !
NWIOTCPSHUTDOWN
 &&Å˝_fd->tf_i‹eq !
NWIOTCPLISTEN
 &&

1317 
t˝_fd
->
tf_i‹eq
 !
NWIOTCPCONN
)

1318 { 
	`whîe
(); 
	`¥ötf
("wr⁄g vÆuêö i‹eq (0x%lx)\n", 
t˝_fd
->
tf_i‹eq
); }

1320 
	`as£π
 (
t˝_fd
->
tf_i‹eq
 =
NWIOTCPSHUTDOWN
 ||

1321 
t˝_fd
->
tf_i‹eq
 =
NWIOTCPLISTEN
 ||Å˝_fd->tf_i‹eq =
NWIOTCPCONN
);

1323 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

1324 
	`ª∂y_thr_gë
 (
t˝_fd
, 
ª∂y
, 
TRUE
);

1325 
	}
}

1327 
PUBLIC
 
	$t˝_ª∂y_wrôe
(
t˝_fd
, 
ª∂y
)

1328 
t˝_fd_t
 *
t˝_fd
;

1329 
size_t
 
ª∂y
;

1331 
	`as£π
 (
t˝_fd
->
tf_Êags
 & 
TFF_WRITE_IP
);

1333 
t˝_fd
->
tf_Êags
 &~
TFF_WRITE_IP
;

1334 
	`ª∂y_thr_gë
 (
t˝_fd
, 
ª∂y
, 
FALSE
);

1335 
	}
}

1337 
PUBLIC
 
	$t˝_ª∂y_ªad
(
t˝_fd
, 
ª∂y
)

1338 
t˝_fd_t
 *
t˝_fd
;

1339 
size_t
 
ª∂y
;

1341 
	`as£π
 (
t˝_fd
->
tf_Êags
 & 
TFF_READ_IP
);

1343 #i‡
DEBUG
 & 256

1344 { 
	`whîe
(); 
	`¥ötf
("t˝_ª∂y_ªad(.., %d)\n", 
ª∂y
); }

1346 
t˝_fd
->
tf_Êags
 &~
TFF_READ_IP
;

1347 
	`ª∂y_thr_put
 (
t˝_fd
, 
ª∂y
, 
FALSE
);

1348 
	}
}

1350 
PUBLIC
 
	$t˝_wrôe
(
fd
, 
cou¡
)

1351 
fd
;

1352 
size_t
 
cou¡
;

1354 
t˝_fd_t
 *
t˝_fd
;

1355 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1357 
t˝_fd
&
t˝_fd_èbÀ
[
fd
];

1359 
	`as£π
 (
t˝_fd
->
tf_Êags
 & 
TFF_INUSE
);

1361 i‡(!(
t˝_fd
->
tf_Êags
 & 
TFF_CONNECTED
))

1363 
	`ª∂y_thr_gë
 (
t˝_fd
, 
ENOTCONN
, 
FALSE
);

1364  
NW_OK
;

1366 
t˝_c⁄n

t˝_fd
->
tf_c⁄n
;

1367 i‡(
t˝_c⁄n
->
tc_Êags
 & 
TCF_FIN_SENT
)

1369 #i‡
DEBUG
 & 16

1370 { 
	`whîe
(); 
	`¥ötf
("replying ESHUTDOWN for connection %dánd fd %d\n",

1371 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
, 
t˝_fd
-
t˝_fd_èbÀ
); }

1373 
	`ª∂y_thr_gë
 (
t˝_fd
, 
ESHUTDOWN
, 
FALSE
);

1374  
NW_OK
;

1377 
t˝_fd
->
tf_Êags
 |
TFF_WRITE_IP
;

1378 
t˝_fd
->
tf_wrôe_off£t
= 0;

1379 
t˝_fd
->
tf_wrôe_cou¡

cou¡
;

1381 i‡(
t˝_c⁄n
->
tc_wrôeu£r
)

1382  
NW_SUSPEND
;

1384 
t˝_c⁄n
->
tc_wrôeu£r

t˝_fd
;

1385 
	`t˝_ª°¨t_fd_wrôe
 (
t˝_c⁄n
);

1386 i‡(!(
t˝_fd
->
tf_Êags
 & 
TFF_WRITE_IP
))

1387  
NW_OK
;

1389  
NW_SUSPEND
;

1390 
	}
}

1392 
PUBLIC
 
	$t˝_ªad
(
fd
, 
cou¡
)

1393 
fd
;

1394 
size_t
 
cou¡
;

1396 
t˝_fd_t
 *
t˝_fd
;

1397 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1399 #i‡
DEBUG
 & 256

1400 { 
	`whîe
(); 
	`¥ötf
("t˝_ªad(%d, %u)\n", 
fd
, 
cou¡
); }

1402 
t˝_fd
&
t˝_fd_èbÀ
[
fd
];

1404 
	`as£π
 (
t˝_fd
->
tf_Êags
 & 
TFF_INUSE
);

1406 i‡(!(
t˝_fd
->
tf_Êags
 & 
TFF_CONNECTED
))

1408 
	`ª∂y_thr_put
 (
t˝_fd
, 
ENOTCONN
, 
FALSE
);

1409  
NW_OK
;

1411 
t˝_c⁄n

t˝_fd
->
tf_c⁄n
;

1413 
t˝_fd
->
tf_Êags
 |
TFF_READ_IP
;

1414 
t˝_fd
->
tf_ªad_off£t
= 0;

1415 
t˝_fd
->
tf_ªad_cou¡

cou¡
;

1417 i‡(
t˝_c⁄n
->
tc_ªadu£r
)

1418  
NW_SUSPEND
;

1420 
t˝_c⁄n
->
tc_ªadu£r

t˝_fd
;

1421 
	`t˝_ª°¨t_fd_ªad
 (
t˝_c⁄n
);

1422 i‡(!(
t˝_fd
->
tf_Êags
 & 
TFF_READ_IP
))

1423  
NW_OK
;

1425  
NW_SUSPEND
;

1426 
	}
}

1435 
PUBLIC
 
	$t˝_ª°¨t_c⁄√˘
(
t˝_fd
)

1436 
t˝_fd_t
 *
t˝_fd
;

1438 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1439 
ª∂y
;

1441 #i‡
DEBUG
 & 256

1442 { 
	`whîe
(); 
	`¥ötf
("tcp_restart_connect called\n"); }

1444 
	`as£π
 (
t˝_fd
->
tf_Êags
 & 
TFF_IOCTL_IP
);

1445 
	`as£π
 (
t˝_fd
->
tf_i‹eq
 =
NWIOTCPLISTEN
 ||Å˝_fd->tf_i‹eq =
NWIOTCPCONN
);

1447 
t˝_c⁄n

t˝_fd
->
tf_c⁄n
;

1449 
	`as£π
 (
t˝_c⁄n
->
tc_c⁄nu£r
 =
t˝_fd
);

1451 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
)

1452 
ª∂y

t˝_c⁄n
->
tc_îr‹
;

1455 
t˝_fd
->
tf_Êags
 |
TFF_CONNECTED
;

1456 
ª∂y

NW_OK
;

1458 
t˝_c⁄n
->
tc_c⁄nu£r
= 0;

1459 #i‡
DEBUG
 & 256

1460 { 
	`whîe
(); 
	`¥ötf
("t˝_c⁄n_èbÀ[%d].tc_c⁄nu£r0x%x\n", 
t˝_c⁄n
-

1461 
t˝_c⁄n_èbÀ
, 
t˝_c⁄n
->
tc_c⁄nu£r
); }

1463 
	`t˝_ª∂y_io˘l
 (
t˝_fd
, 
ª∂y
);

1464 
	}
}

1466 
PUBLIC
 
	$t˝_˛o£
(
fd
)

1467 
fd
;

1469 
t˝_fd_t
 *
t˝_fd
;

1470 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1472 
t˝_fd
&
t˝_fd_èbÀ
[
fd
];

1474 #i‡
DEBUG


1475 { i‡(!(
t˝_fd
->
tf_Êags
 & 
TFF_INUSE
)Ë{ 
	`whîe
(); 
	`¥ötf
("not inuse\n"); }

1476 i‡(
t˝_fd
->
tf_Êags
 & 
TFF_IOCTL_IP
Ë{ 
	`whîe
(); 
	`¥ötf
("ioctl ip\n"); }

1477 i‡(
t˝_fd
->
tf_Êags
 & 
TFF_READ_IP
Ë{ 
	`whîe
(); 
	`¥ötf
("read ip\n"); }

1478 i‡(
t˝_fd
->
tf_Êags
 & 
TFF_WRITE_IP
Ë{ 
	`whîe
(); 
	`¥ötf
("write ip\n"); }

1481 
	`as£π
 (
t˝_fd
->
tf_Êags
 & 
TFF_INUSE
);

1482 
	`as£π
 (!(
t˝_fd
->
tf_Êags
 & (
TFF_IOCTL_IP
|
TFF_READ_IP
|
TFF_WRITE_IP
)));

1484 
t˝_fd
->
tf_Êags
 &~
TFF_INUSE
;

1485 i‡(!
t˝_fd
->
tf_c⁄n
)

1488 
t˝_c⁄n

t˝_fd
->
tf_c⁄n
;

1489 
	`˛o£_maöu£r
(
t˝_c⁄n
, 
t˝_fd
);

1490 
	`t˝_shutdown
 (
t˝_c⁄n
);

1491 
	}
}

1493 
PUBLIC
 
	$t˝_ˇn˚l
(
fd
, 
which_›î©i⁄
)

1494 
fd
;

1495 
which_›î©i⁄
;

1497 
t˝_fd_t
 *
t˝_fd
;

1498 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1499 
i
;

1500 
ty≥
;

1502 #i‡
DEBUG
 & 256

1503 { 
	`whîe
(); 
	`¥ötf
("t˝_ˇn˚l(%d, %d)\n", 
fd
, 
which_›î©i⁄
); }

1505 
t˝_fd
&
t˝_fd_èbÀ
[
fd
];

1507 
	`as£π
 (
t˝_fd
->
tf_Êags
 & 
TFF_INUSE
);

1509 
t˝_c⁄n

t˝_fd
->
tf_c⁄n
;

1511 
which_›î©i⁄
)

1513 
SR_CANCEL_WRITE
:

1514 
	`as£π
 (
t˝_fd
->
tf_Êags
 & 
TFF_WRITE_IP
);

1515 
t˝_fd
->
tf_Êags
 &~
TFF_WRITE_IP
;

1516 i‡(
t˝_c⁄n
->
tc_wrôeu£r
 =
t˝_fd
)

1518 
t˝_c⁄n
->
tc_wrôeu£r
= 0;

1519 
	`t˝_ª°¨t_fd_wrôe
 (
t˝_c⁄n
);

1521 i‡(
t˝_fd
->
tf_wrôe_cou¡
)

1522 
	`ª∂y_thr_gë
 (
t˝_fd
,Å˝_fd->
tf_wrôe_cou¡
, 
FALSE
);

1524 
	`ª∂y_thr_gë
 (
t˝_fd
, 
EINTR
, 
FALSE
);

1526 
SR_CANCEL_READ
:

1527 
	`as£π
 (
t˝_fd
->
tf_Êags
 & 
TFF_READ_IP
);

1528 
t˝_fd
->
tf_Êags
 &~
TFF_READ_IP
;

1529 i‡(
t˝_c⁄n
->
tc_ªadu£r
 =
t˝_fd
)

1531 
t˝_c⁄n
->
tc_ªadu£r
= 0;

1532 
	`t˝_ª°¨t_fd_ªad
 (
t˝_c⁄n
);

1534 i‡(
t˝_fd
->
tf_ªad_cou¡
)

1535 
	`ª∂y_thr_put
 (
t˝_fd
,Å˝_fd->
tf_ªad_cou¡
, 
FALSE
);

1537 
	`ª∂y_thr_put
 (
t˝_fd
, 
EINTR
, 
FALSE
);

1539 
SR_CANCEL_IOCTL
:

1540 
	`as£π
 (
t˝_fd
->
tf_Êags
 & 
TFF_IOCTL_IP
);

1541 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

1543 
ty≥

t˝_fd
->
tf_i‹eq
 & 
IOCTYPE_MASK
;

1544 
ty≥
)

1546 
NWIOGTCPCONF
 & 
IOCTYPE_MASK
:

1547 
	`ª∂y_thr_put
 (
t˝_fd
, 
EINTR
, 
TRUE
);

1549 
NWIOSTCPCONF
 & 
IOCTYPE_MASK
:

1550 
NWIOTCPSHUTDOWN
 & 
IOCTYPE_MASK
:

1551 
NWIOTCPATTACH
 & 
IOCTYPE_MASK
:

1552 
	`ª∂y_thr_gë
 (
t˝_fd
, 
EINTR
, 
TRUE
);

1554 
NWIOTCPCONN
 & 
IOCTYPE_MASK
:

1555 
NWIOTCPLISTEN
 & 
IOCTYPE_MASK
:

1556 
	`as£π
 (
t˝_c⁄n
->
tc_c⁄nu£r
 =
t˝_fd
);

1557 
t˝_c⁄n
->
tc_c⁄nu£r
= 0;

1558 
t˝_c⁄n
->
tc_maöu£r
= 0;

1559 
	`t˝_˛o£_c⁄√˘i⁄
(
t˝_c⁄n
, 
ENOCONN
);

1560 
	`ª∂y_thr_gë
 (
t˝_fd
, 
EINTR
, 
TRUE
);

1563 
	`ù_w¨nög
(( "unknown ioctl inprogress: 0x%x",

1564 
t˝_fd
->
tf_i‹eq
 ));

1565 
	`ª∂y_thr_gë
 (
t˝_fd
, 
EINTR
, 
TRUE
);

1570 
	`ù_∑nic
(( "unknown cancelÑequest" ));

1573  
NW_OK
;

1574 
	}
}

1580 
PRIVATE
 
	$t˝_c⁄√˘
(
t˝_fd
)

1581 
t˝_fd_t
 *
t˝_fd
;

1583 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1584 
°©e
;

1586 i‡(!(
t˝_fd
->
tf_Êags
 & 
TFF_OPTSET
))

1588 #i‡
DEBUG


1589 { 
	`whîe
(); }

1591 
	`t˝_ª∂y_io˘l
(
t˝_fd
, 
EBADMODE
);

1592  
NW_OK
;

1594 i‡(
t˝_fd
->
tf_Êags
 & 
TFF_CONNECT
)

1596 
	`t˝_ª∂y_io˘l
(
t˝_fd
, 
EISCONN
);

1597  
NW_OK
;

1599 i‡((
t˝_fd
->
tf_t˝c⁄f
.
nwtc_Êags
 & (
NWTC_SET_RA
|
NWTC_SET_RP
))

1600 !(
NWTC_SET_RA
|
NWTC_SET_RP
))

1602 #i‡
DEBUG


1603 { 
	`whîe
(); 
	`¥ötf
("tcp_fd_table[%d].tf_tcpconf.nwtc_flags= 0x%x\n",

1604 
t˝_fd
-
t˝_fd_èbÀ
,Å˝_fd->
tf_t˝c⁄f
.
nwtc_Êags
); }

1606 
	`t˝_ª∂y_io˘l
(
t˝_fd
, 
EBADMODE
);

1607  
NW_OK
;

1610 
	`as£π
(!
t˝_fd
->
tf_c⁄n
);

1611 
t˝_c⁄n

	`föd_c⁄n_íåy
(
t˝_fd
->
tf_t˝c⁄f
.
nwtc_lo˝‹t
,

1612 
t˝_fd
->
tf_p‹t
->
ç_ùaddr
,

1613 
t˝_fd
->
tf_t˝c⁄f
.
nwtc_ªmp‹t
,

1614 
t˝_fd
->
tf_t˝c⁄f
.
nwtc_ªmaddr
);

1615 i‡(
t˝_c⁄n
)

1617 i‡(
t˝_c⁄n
->
tc_maöu£r
)

1619 
	`t˝_ª∂y_io˘l
(
t˝_fd
, 
EADDRINUSE
);

1620  
NW_OK
;

1625 
t˝_c⁄n

	`föd_em±y_c⁄n
();

1626 i‡(!
t˝_c⁄n
)

1628 
	`t˝_ª∂y_io˘l
(
t˝_fd
, 
EAGAIN
);

1629  
NW_OK
;

1632 
t˝_fd
->
tf_c⁄n

t˝_c⁄n
;

1633  
	`t˝_su4c⁄√˘
(
t˝_fd
);

1634 
	}
}

1640 
PRIVATE
 
	$t˝_su4c⁄√˘
(
t˝_fd
)

1641 
t˝_fd_t
 *
t˝_fd
;

1643 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1644 
acc_t
 *
tmp_acc
;

1646 
t˝_c⁄n

t˝_fd
->
tf_c⁄n
;

1648 
t˝_c⁄n
->
tc_lo˝‹t

t˝_fd
->
tf_t˝c⁄f
.
nwtc_lo˝‹t
;

1649 
t˝_c⁄n
->
tc_loˇddr

t˝_fd
->
tf_p‹t
->
ç_ùaddr
;

1651 
	`as£π
 (
t˝_fd
->
tf_t˝c⁄f
.
nwtc_Êags
 & 
NWTC_SET_RP
);

1652 
	`as£π
 (
t˝_fd
->
tf_t˝c⁄f
.
nwtc_Êags
 & 
NWTC_SET_RA
);

1654 
t˝_c⁄n
->
tc_ªmp‹t

t˝_fd
->
tf_t˝c⁄f
.
nwtc_ªmp‹t
;

1655 
t˝_c⁄n
->
tc_ªmaddr

t˝_fd
->
tf_t˝c⁄f
.
nwtc_ªmaddr
;

1656 
t˝_c⁄n
->
tc_maöu£r

t˝_fd
;

1658 
	`t˝_£tup_c⁄n
(
t˝_c⁄n
);

1659 
t˝_c⁄n
->
tc_p‹t

t˝_fd
->
tf_p‹t
;

1660 
t˝_c⁄n
->
tc_c⁄nu£r

t˝_fd
;

1661 #i‡
DEBUG
 & 256

1662 { 
	`whîe
(); 
	`¥ötf
("t˝_c⁄n_èbÀ[%d].tc_c⁄nu£r0x%x\n", 
t˝_c⁄n
-

1663 
t˝_c⁄n_èbÀ
, 
t˝_c⁄n
->
tc_c⁄nu£r
); }

1665 
t˝_c⁄n
->
tc_‹gli°í

FALSE
;

1666 
t˝_c⁄n
->
tc_°©e

TCS_SYN_SENT
;

1667 #i‡
DEBUG
 & 16

1668 { 
	`whîe
(); 
	`t˝_wrôe_°©e
(
t˝_c⁄n
); }

1670 
	`t˝_ª°¨t_wrôe
 (
t˝_c⁄n
);

1672 i‡(
t˝_c⁄n
->
tc_c⁄nu£r
)

1673  
NW_SUSPEND
;

1675  
NW_OK
;

1676 
	}
}

1678 
PRIVATE
 
	$˛o£_maöu£r
(
t˝_c⁄n
, 
t˝_fd
)

1679 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1680 
t˝_fd_t
 *
t˝_fd
;

1682 
i
;

1684 i‡(
t˝_c⁄n
->
tc_maöu£r
 !
t˝_fd
)

1687 
t˝_c⁄n
->
tc_maöu£r
= 0;

1688 
	`as£π
 (
t˝_c⁄n
->
tc_wrôeu£r
 !
t˝_fd
);

1689 
	`as£π
 (
t˝_c⁄n
->
tc_ªadu£r
 !
t˝_fd
);

1690 
	`as£π
 (
t˝_c⁄n
->
tc_c⁄nu£r
 !
t˝_fd
);

1692 
i
0, 
t˝_fd

t˝_fd_èbÀ
; i<
TCP_FD_NR
; i++,Åcp_fd++)

1694 i‡(!(
t˝_fd
->
tf_Êags
 & 
TFF_INUSE
))

1696 i‡(
t˝_fd
->
tf_c⁄n
 !
t˝_c⁄n
)

1698 
t˝_c⁄n
->
tc_maöu£r

t˝_fd
;

1701 
	}
}

1704 
PRIVATE
 
	$c⁄n_right4fd
(
t˝_c⁄n
, 
t˝_fd
)

1705 
t˝_fd_t
 *
t˝_fd
;

1706 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1708 
Êags
;

1710 
Êags

t˝_fd
->
tf_t˝c⁄f
.
nwtc_Êags
;

1712 i‡(
t˝_fd
->
tf_t˝c⁄f
.
nwtc_lo˝‹t
 !
t˝_c⁄n
->
tc_lo˝‹t
)

1713  
FALSE
;

1715 i‡((
Êags
 & 
NWTC_SET_RA
Ë&& 
t˝_fd
->
tf_t˝c⁄f
.
nwtc_ªmaddr
 !=

1716 
t˝_c⁄n
->
tc_ªmaddr
)

1717  
FALSE
;

1719 i‡((
Êags
 & 
NWTC_SET_RP
Ë&& 
t˝_fd
->
tf_t˝c⁄f
.
nwtc_ªmp‹t
 !=

1720 
t˝_c⁄n
->
tc_ªmp‹t
)

1721  
FALSE
;

1723 i‡(
t˝_fd
->
tf_p‹t
 !
t˝_c⁄n
->
tc_p‹t
)

1724  
FALSE
;

1726  
TRUE
;

1727 
	}
}

1729 
PRIVATE
 
	$t˝_©èche
(
t˝_fd
)

1730 
t˝_fd_t
 *
t˝_fd
;

1732 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1733 
°©e
;

1735 i‡(!(
t˝_fd
->
tf_Êags
 & 
TFF_OPTSET
))

1737 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

1738 
	`ª∂y_thr_gë
(
t˝_fd
, 
EBADMODE
, 
TRUE
);

1739  
NW_OK
;

1741 i‡(
t˝_fd
->
tf_Êags
 & 
TFF_CONNECT
)

1743 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

1744 
	`ª∂y_thr_gë
(
t˝_fd
, 
EISCONN
, 
TRUE
);

1745  
NW_OK
;

1747 i‡((
t˝_fd
->
tf_t˝c⁄f
.
nwtc_Êags
 & (
NWTC_SET_RA
|
NWTC_SET_RP
))

1748 !(
NWTC_SET_RA
|
NWTC_SET_RP
))

1750 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

1751 
	`ª∂y_thr_gë
(
t˝_fd
, 
EBADMODE
, 
TRUE
);

1752  
NW_OK
;

1755 
t˝_c⁄n

	`föd_c⁄n_íåy
(
t˝_fd
->
tf_t˝c⁄f
.
nwtc_lo˝‹t
,

1756 
t˝_fd
->
tf_p‹t
->
ç_ùaddr
,

1757 
t˝_fd
->
tf_t˝c⁄f
.
nwtc_ªmp‹t
,

1758 
t˝_fd
->
tf_t˝c⁄f
.
nwtc_ªmaddr
);

1759 i‡(!
t˝_c⁄n
)

1761 #i‡
DEBUG


1762 { 
	`whîe
(); 
	`¥ötf
("conn_entryÇot found\n"); }

1764 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

1765 
	`ª∂y_thr_gë
 (
t˝_fd
, 
ENOCONN
, 
TRUE
);

1766  
NW_OK
;

1768 
	`as£π
 (
t˝_c⁄n
->
tc_Êags
 & 
TCF_INUSE
);

1769 
°©e

t˝_c⁄n
->
tc_°©e
;

1770 i‡(
°©e
 =
TCS_CLOSED
 || sèã =
TCS_LISTEN
 || state ==

1771 
TCS_SYN_SENT
 || 
°©e
 =
TCS_SYN_RECEIVED
)

1773 #i‡
DEBUG


1774 { 
	`whîe
(); 
	`¥ötf
("conn_entry in wrong state: ");

1775 
	`t˝_wrôe_°©e
(
t˝_c⁄n
); 
	`¥ötf
("\n"); }

1777 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

1778 
	`ª∂y_thr_gë
 (
t˝_fd
, 
ENOCONN
, 
TRUE
);

1779  
NW_OK
;

1781 
t˝_fd
->
tf_c⁄n

t˝_c⁄n
;

1782 
t˝_fd
->
tf_Êags
 |
TFF_CONNECTED
;

1783 
t˝_fd
->
tf_Êags
 |
TFF_PUSH_DATA
;

1784  
NW_OK
;

1785 
	}
}

1791 
PRIVATE
 
	$t˝_li°í
(
t˝_fd
)

1792 
t˝_fd_t
 *
t˝_fd
;

1794 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1795 
°©e
;

1797 #i‡
DEBUG
 & 256

1798 { 
	`whîe
(); 
	`¥ötf
("t˝_li°í(&t˝_fd_èbÀ[%d]ËˇŒed\n", 
t˝_fd
-

1799 
t˝_fd_èbÀ
); }

1801 i‡(!(
t˝_fd
->
tf_Êags
 & 
TFF_OPTSET
))

1803 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

1804 
	`ª∂y_thr_gë
(
t˝_fd
, 
EBADMODE
, 
TRUE
);

1805  
NW_OK
;

1807 i‡(
t˝_fd
->
tf_Êags
 & 
TFF_CONNECT
)

1809 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

1810 
	`ª∂y_thr_gë
(
t˝_fd
, 
EISCONN
, 
TRUE
);

1811  
NW_OK
;

1813 
t˝_c⁄n

t˝_fd
->
tf_c⁄n
;

1814 
	`as£π
(!
t˝_c⁄n
);

1815 i‡((
t˝_fd
->
tf_t˝c⁄f
.
nwtc_Êags
 & (
NWTC_SET_RA
|
NWTC_SET_RP
))

1816 =(
NWTC_SET_RA
|
NWTC_SET_RP
))

1818 
t˝_c⁄n

	`föd_c⁄n_íåy
(

1819 
t˝_fd
->
tf_t˝c⁄f
.
nwtc_lo˝‹t
,

1820 
t˝_fd
->
tf_p‹t
->
ç_ùaddr
,

1821 
t˝_fd
->
tf_t˝c⁄f
.
nwtc_ªmp‹t
,

1822 
t˝_fd
->
tf_t˝c⁄f
.
nwtc_ªmaddr
);

1823 i‡(
t˝_c⁄n
)

1825 i‡(
t˝_c⁄n
->
tc_maöu£r
)

1827 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

1828 
	`ª∂y_thr_gë
 (
t˝_fd
, 
EADDRINUSE
, 
TRUE
);

1829  
NW_OK
;

1831 
t˝_fd
->
tf_c⁄n

t˝_c⁄n
;

1832  
	`t˝_su4li°í
(
t˝_fd
);

1835 
t˝_c⁄n

	`föd_em±y_c⁄n
();

1836 i‡(!
t˝_c⁄n
)

1838 
t˝_fd
->
tf_Êags
 &~
TFF_IOCTL_IP
;

1839 
	`ª∂y_thr_gë
 (
t˝_fd
, 
EAGAIN
, 
TRUE
);

1840  
NW_OK
;

1842 
t˝_fd
->
tf_c⁄n

t˝_c⁄n
;

1843 #i‡
DEBUG
 & 256

1844 { 
	`whîe
(); 
	`¥ötf
("t˝_c⁄n_èbÀ[%d].tc_c⁄nu£r0x%x\n", 
t˝_c⁄n
-

1845 
t˝_c⁄n_èbÀ
, 
t˝_c⁄n
->
tc_c⁄nu£r
); }

1847  
	`t˝_su4li°í
(
t˝_fd
);

1848 
	}
}

1850 
PRIVATE
 
	$t˝_buf‰ì
 (
¥i‹ôy
, 
ªqsize
)

1851 
¥i‹ôy
;

1852 
size_t
 
ªqsize
;

1854 
i
;

1855 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1857 i‡(
¥i‹ôy
 <
TCP_PRI_FRAG2SEND
)

1860 #i‡
DEBUG
 & 256

1861 { 
	`whîe
(); 
	`¥ötf
("tcp_buffree called\n"); }

1864 
i
=0, 
t˝_c⁄n

t˝_c⁄n_èbÀ
; i<
TCP_CONN_NR
; i++,

1865 
t˝_c⁄n
++)

1867 i‡(!(
t˝_c⁄n
->
tc_Êags
 & 
TCF_INUSE
))

1869 i‡(!
t˝_c⁄n
->
tc_‰ag2£nd
)

1871 
	`bf_a‰ì
(
t˝_c⁄n
->
tc_‰ag2£nd
);

1872 
t˝_c⁄n
->
tc_‰ag2£nd
= 0;

1873 i‡(
bf_‰ì_buffsize
 >
ªqsize
)

1877 i‡(
¥i‹ôy
 <
TCP_PRI_CONNwoUSER
)

1880 
i
=0, 
t˝_c⁄n

t˝_c⁄n_èbÀ
; i<
TCP_CONN_NR
; i++,

1881 
t˝_c⁄n
++)

1883 i‡(!(
t˝_c⁄n
->
tc_Êags
 & 
TCF_INUSE
))

1885 i‡(
t˝_c⁄n
->
tc_maöu£r
)

1887 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
)

1889 #i‡
DEBUG


1890 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_close_connection (out of memory)\n"); }

1892 
	`t˝_˛o£_c⁄√˘i⁄
 (
t˝_c⁄n
, 
EOUTOFBUFS
);

1893 i‡(
bf_‰ì_buffsize
 >
ªqsize
)

1897 i‡(
¥i‹ôy
 <
TCP_PRI_CONN_INUSE
)

1900 
i
=0, 
t˝_c⁄n

t˝_c⁄n_èbÀ
; i<
TCP_CONN_NR
; i++,

1901 
t˝_c⁄n
++)

1903 i‡(!(
t˝_c⁄n
->
tc_Êags
 & 
TCF_INUSE
))

1905 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
)

1907 #i‡
DEBUG


1908 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_close_connection (out of memory)\n"); }

1910 
	`t˝_˛o£_c⁄√˘i⁄
 (
t˝_c⁄n
, 
EOUTOFBUFS
);

1911 i‡(
bf_‰ì_buffsize
 >
ªqsize
)

1914 
	}
}

1916 
PRIVATE
 
	$t˝_nŸªach
(
∑ck
)

1917 
acc_t
 *
∑ck
;

1919 
acc_t
 *
t˝_∑ck
;

1920 
ù_hdr_t
 *
ù_hdr
;

1921 
t˝_hdr_t
 *
t˝_hdr
;

1922 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1923 
ù_hdr_size
;

1924 
√w_âl
;

1926 
∑ck
->
acc_lökC
++;

1927 
∑ck

	`bf_∑ckIffLess
’ack, 
IP_MIN_HDR_SIZE
);

1928 
ù_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
∑ck
);

1929 
ù_hdr_size
(
ù_hdr
->
ih_vîs_ihl
 & 
IH_IHL_MASK
) << 2;

1931 
t˝_∑ck

	`bf_cut
(
∑ck
, 
ù_hdr_size
, 
TCP_MIN_HDR_SIZE
);

1932 
t˝_∑ck

	`bf_∑ckIffLess
—˝_∑ck, 
TCP_MIN_HDR_SIZE
);

1933 
t˝_hdr
(
t˝_hdr_t
 *)
	`±r2acc_d©a
(
t˝_∑ck
);

1935 
t˝_c⁄n

	`föd_c⁄n_íåy
–
t˝_hdr
->
th_§˝‹t
, 
ù_hdr
->
ih_§c
,

1936 
t˝_hdr
->
th_d°p‹t
, 
ù_hdr
->
ih_d°
);

1937 i‡(
t˝_c⁄n
)

1939 
√w_âl

t˝_c⁄n
->
tc_âl
;

1940 i‡(
√w_âl
 =
IP_MAX_TTL
)

1942 #i‡
DEBUG


1943 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_close_connection\n"); }

1945 
	`t˝_˛o£_c⁄√˘i⁄
(
t˝_c⁄n
, 
EDSTNOTRCH
);

1946 
	`bf_a‰ì
(
∑ck
);

1947 
	`bf_a‰ì
(
t˝_∑ck
);

1950 
√w_âl
 *= 2;

1951 i‡(
√w_âl
> 
IP_MAX_TTL
)

1952 
√w_âl

IP_MAX_TTL
;

1953 
t˝_c⁄n
->
tc_âl

√w_âl
;

1954 
t˝_c⁄n
->
tc_no_ªå™s
= 0;

1958 #i‡
DEBUG


1959 { 
	`whîe
(); 
	`¥ötf
("gotá EDSTNOTRCH forÇonÉxisting connection\n"); }

1962 
	`bf_a‰ì
(
∑ck
);

1963 
	`bf_a‰ì
(
t˝_∑ck
);

1964 
	}
}

1970 
PRIVATE
 
	$t˝_£tup_c⁄n
(
t˝_c⁄n
)

1971 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1973 
	`as£π
(!
t˝_c⁄n
->
tc_ªadu£r
);

1974 
	`as£π
(!
t˝_c⁄n
->
tc_wrôeu£r
);

1975 
	`as£π
(!
t˝_c⁄n
->
tc_c⁄nu£r
);

1976 i‡(
t˝_c⁄n
->
tc_Êags
 & 
TCF_INUSE
)

1978 
	`as£π
 (
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
 ||

1979 
t˝_c⁄n
->
tc_°©e
 =
TCS_TIME_WAIT
);

1980 
	`as£π
 (!
t˝_c⁄n
->
tc_£nd_d©a
);

1981 i‡(
t˝_c⁄n
->
tc_£nddis
 < 
	`gë_time
())

1982 
t˝_c⁄n
->
tc_ISS
= 0;

1986 
t˝_c⁄n
->
tc_£nddis
= 0;

1987 
t˝_c⁄n
->
tc_ISS
= 0;

1988 
t˝_c⁄n
->
tc_tos

TCP_DEF_TOS
;

1989 
t˝_c⁄n
->
tc_âl

TCP_DEF_TTL
;

1990 
t˝_c⁄n
->
tc_rcv_wnd

TCP_MAX_WND_SIZE
;

1991 
t˝_c⁄n
->
tc_urg_wnd

TCP_DEF_URG_WND
;

1993 i‡(!
t˝_c⁄n
->
tc_ISS
)

1995 
t˝_c⁄n
->
tc_ISS
(
	`gë_time
()/
HZ
)*
ISS_INC_FREQ
;

1997 
t˝_c⁄n
->
tc_SND_UNA
t˝_c⁄n->
tc_ISS
;

1998 
t˝_c⁄n
->
tc_SND_TRM
t˝_c⁄n->
tc_ISS
;

1999 
t˝_c⁄n
->
tc_SND_NXT
t˝_c⁄n->
tc_ISS
+1;

2000 
t˝_c⁄n
->
tc_SND_UP
t˝_c⁄n->
tc_ISS
;

2001 
t˝_c⁄n
->
tc_SND_PSH
t˝_c⁄n->
tc_ISS
;

2002 
t˝_c⁄n
->
tc_SND_WL2
t˝_c⁄n->
tc_ISS
;

2003 
t˝_c⁄n
->
tc_IRS
= 0;

2004 
t˝_c⁄n
->
tc_SND_WL1
t˝_c⁄n->
tc_IRS
;

2005 
t˝_c⁄n
->
tc_RCV_LO
t˝_c⁄n->
tc_IRS
;

2006 
t˝_c⁄n
->
tc_RCV_NXT
t˝_c⁄n->
tc_IRS
;

2007 
t˝_c⁄n
->
tc_RCV_HI
t˝_c⁄n->
tc_IRS
;

2008 
t˝_c⁄n
->
tc_RCV_UP
t˝_c⁄n->
tc_IRS
;

2009 
t˝_c⁄n
->
tc_rcvd_d©a
= 0;

2010 
t˝_c⁄n
->
tc_rcv_queue
= 0;

2011 
t˝_c⁄n
->
tc_£nd_d©a
= 0;

2012 
t˝_c⁄n
->
tc_ªmù›t
= 0;

2013 
t˝_c⁄n
->
tc_ªmt˝›t
= 0;

2014 
t˝_c⁄n
->
tc_‰ag2£nd
= 0;

2015 
t˝_c⁄n
->
tc_no_ªå™s
= 0;

2016 
t˝_c⁄n
->
tc_max_no_ªå™s

TCP_DEF_MAX_NO_RETRANS
;

2017 
t˝_c⁄n
->
tc_0wnd_to
= 0;

2018 
t˝_c⁄n
->
tc_πt

TCP_DEF_RTT
;

2019 
t˝_c⁄n
->
tc_ët
= 0;

2020 
t˝_c⁄n
->
tc_mss

TCP_DEF_MSS
;

2021 
t˝_c⁄n
->
tc_îr‹

NW_OK
;

2022 
t˝_c⁄n
->
tc_¢d_cwnd
t˝_c⁄n->
tc_SND_UNA
 +Å˝_c⁄n->
tc_mss
;

2023 
t˝_c⁄n
->
tc_¢d_˘hªsh

TCP_MAX_WND_SIZE
;

2024 
t˝_c⁄n
->
tc_¢d_cöc
= 0;

2025 
t˝_c⁄n
->
tc_¢d_wnd

TCP_MAX_WND_SIZE
;

2026 
t˝_c⁄n
->
tc_Êags

TCF_INUSE
;

2027 #i‡
DEBUG
 & 256

2028 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

2029 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

2031 
	}
}

	@tcp.h

5 #i‚de‡
TCP_H


6 
	#TCP_H


	)

8 
	#ISS_INC_FREQ
 250000L

	)

9 
	#TCP_MAX_DATAGRAM
 8192

	)

10 
	#TCP_MAX_WND_SIZE
 (4*1024)

	)

11 
	#SUN_0WND_BUG
 1

	)

14 
	#SUN_TRANS_BUG
 0

	)

20 
	#TCP_DEF_URG_WND
 1024

	)

21 
	#TCP_DEF_TOS
 0

	)

22 
	#TCP_DEF_TTL
 1

	)

23 
	#TCP_DEF_TIME_OUT
 
HZ


	)

24 
	#TCP_DEF_MAX_NO_RETRANS
 10000

	)

25 
	#TCP_DEF_RTT
 15

	)

27 
	#TCP_DEF_MSS
 1400

	)

28 #i‡
SUN_TRANS_BUG


29 
	#TCP_ACK_DELAY
 1

	)

31 
	#TCP_ACK_DELAY
 (
HZ
/2Ë

	)

34 
	#TCP_DEF_OPT
 (
NWTC_COPY
 | 
NWTC_LP_UNSET
 | 
NWTC_UNSET_RA
 | \

	)

35 
	gNWTC_UNSET_RP
)

37 
	#TCP0
 0

	)

39 
	gacc
;

41 
t˝_öô
 
ARGS
(( ));

42 
t˝_›í
 
ARGS
(–
p‹t
, 
§fd
,

43 
acc
 *(*
gë_u£rd©a
Ë(
fd
, 
size_t
 
off£t
, size_à
cou¡
,

44 
f‹_io˘l
),

45 (*
put_u£rd©a
Ë(
fd
, 
size_t
 
off£t
, 
acc
 *
d©a
,

46 
f‹_io˘l
) ));

47 
t˝_ªad
 
	`ARGS
(–
fd
, 
size_t
 
cou¡
));

48 
t˝_wrôe
 
	`ARGS
(–
fd
, 
size_t
 
cou¡
));

49 
t˝_io˘l
 
	`ARGS
(–
fd
, 
ªq
));

50 
t˝_ˇn˚l
 
	`ARGS
(–
fd
, 
which_›î©i⁄
 ));

51 
t˝_˛o£
 
	`ARGS
(–
fd
));

	@tcp_delay.h

5 #i‚de‡
TCP_DELAY__H


6 
	#TCP_DELAY__H


	)

8 
t˝_dñay_⁄
;

9 
u32_t
 
t˝_dñay
;

	@tcp_int.h

5 #i‚de‡
TCP_INT_H


6 
	#TCP_INT_H


	)

8 
	st˝_p‹t


10 
	mç_mö‹
;

11 
	mç_ùdev
;

12 
	mç_Êags
;

13 
	mç_°©e
;

14 
	mç_ùfd
;

15 
acc_t
 *
	mç_∑ck
;

16 
ùaddr_t
 
	mç_ùaddr
;

17 #i‡
DEBUG


18 
timî_t
 
	mç_dñay_tim
;

20 } 
	tt˝_p‹t_t
;

22 
	#TPF_EMPTY
 0x0

	)

23 
	#TPF_SUSPEND
 0x1

	)

24 
	#TPF_READ_IP
 0x2

	)

25 
	#TPF_READ_SP
 0x4

	)

26 
	#TPF_WRITE_IP
 0x8

	)

27 
	#TPF_WRITE_SP
 0x10

	)

28 
	#TPF_MORE2WRITE
 0x20

	)

29 
	#TPF_DELAY_TCP
 0x40

	)

31 
	#TPS_EMPTY
 0

	)

32 
	#TPS_SETPROTO
 1

	)

33 
	#TPS_GETCONF
 2

	)

34 
	#TPS_MAIN
 3

	)

35 
	#TPS_ERROR
 4

	)

37 
	st˝_fd


39 
	mtf_Êags
;

40 
t˝_p‹t_t
 *
	mtf_p‹t
;

41 
	mtf_§fd
;

42 
	mtf_i‹eq
;

43 
nwio_t˝c⁄f_t
 
	mtf_t˝c⁄f
;

44 
gë_u£rd©a_t
 
	mtf_gë_u£rd©a
;

45 
put_u£rd©a_t
 
	mtf_put_u£rd©a
;

46 
t˝_c⁄n
 *
	mtf_c⁄n
;

47 
size_t
 
	mtf_wrôe_off£t
;

48 
size_t
 
	mtf_wrôe_cou¡
;

49 
size_t
 
	mtf_ªad_off£t
;

50 
size_t
 
	mtf_ªad_cou¡
;

51 } 
	tt˝_fd_t
;

53 
	#TFF_EMPTY
 0x0

	)

54 
	#TFF_INUSE
 0x1

	)

55 
	#TFF_IOCTL_IP
 0x2

	)

56 
	#TFF_OPTSET
 0x4

	)

57 
	#TFF_IOC_INIT_SP
 0x8

	)

58 
	#TFF_CONNECT
 0x20

	)

59 
	#TFF_WRITE_IP
 0x80

	)

60 
	#TFF_WR_URG
 0x100

	)

61 
	#TFF_PUSH_DATA
 0x200

	)

62 
	#TFF_READ_IP
 0x400

	)

63 
	#TFF_RECV_URG
 0x800

	)

64 
	#TFF_CONNECTED
 0x1000

	)

66 
	st˝_c⁄n


68 
	mtc_Êags
;

69 
t˝p‹t_t
 
	mtc_lo˝‹t
;

70 
ùaddr_t
 
	mtc_loˇddr
;

71 
t˝p‹t_t
 
	mtc_ªmp‹t
;

72 
ùaddr_t
 
	mtc_ªmaddr
;

73 
	mtc_°©e
;

74 
t˝_fd_t
 *
	mtc_maöu£r
;

75 
t˝_fd_t
 *
	mtc_ªadu£r
;

76 
t˝_fd_t
 *
	mtc_wrôeu£r
;

77 
t˝_fd_t
 *
	mtc_c⁄nu£r
;

78 
	mtc_‹gli°í
;

79 
time_t
 
	mtc_£nddis
;

80 
u32_t
 
	mtc_SND_UNA
;

81 
u32_t
 
	mtc_SND_TRM
;

82 
u32_t
 
	mtc_SND_NXT
;

83 
u32_t
 
	mtc_SND_UP
;

85 
u32_t
 
	mtc_SND_PSH
;

87 
u32_t
 
	mtc_SND_WL1
;

88 
u32_t
 
	mtc_SND_WL2
;

89 
u32_t
 
	mtc_ISS
;

90 
u32_t
 
	mtc_RCV_LO
;

91 
u32_t
 
	mtc_RCV_NXT
;

92 
u32_t
 
	mtc_RCV_HI
;

93 
u32_t
 
	mtc_RCV_UP
;

94 
u32_t
 
	mtc_IRS
;

95 
t˝_p‹t_t
 *
	mtc_p‹t
;

96 
acc_t
 *
	mtc_rcvd_d©a
;

97 
acc_t
 *
	mtc_rcv_queue
;

98 
acc_t
 *
	mtc_£nd_d©a
;

99 
acc_t
 *
	mtc_ªmù›t
;

100 
acc_t
 *
	mtc_ªmt˝›t
;

101 
acc_t
 *
	mtc_‰ag2£nd
;

102 
u8_t
 
	mtc_tos
;

103 
u8_t
 
	mtc_âl
;

104 
u16_t
 
	mtc_rcv_wnd
;

105 
u16_t
 
	mtc_urg_wnd
;

106 
	mtc_no_ªå™s
;

107 
	mtc_max_no_ªå™s
;

108 
time_t
 
	mtc_0wnd_to
;

109 
time_t
 
	mtc_πt
;

110 
time_t
 
	mtc_ët
;

111 
timî
 
	mtc_maj‹_timî
;

112 
timî
 
	mtc_mö‹_timî
;

113 
timî
 
	mtc_ack_timî
;

114 
timî
 
	mtc_time_waô_timî
;

115 
u16_t
 
	mtc_mss
;

116 
u32_t
 
	mtc_¢d_cwnd
;

117 
u32_t
 
	mtc_¢d_˘hªsh
;

118 
u32_t
 
	mtc_¢d_cöc
;

119 
u16_t
 
	mtc_¢d_wnd
;

120 
	mtc_îr‹
;

121 } 
	tt˝_c⁄n_t
;

123 
	#TCF_EMPTY
 0x0

	)

124 
	#TCF_INUSE
 0x1

	)

125 
	#TCF_FIN_RECV
 0x2

	)

126 
	#TCF_RCV_PUSH
 0x4

	)

127 
	#TCF_MORE2WRITE
 0x8

	)

128 
	#TCF_SEND_ACK
 0x10

	)

129 
	#TCF_FIN_SENT
 0x20

	)

130 
	#TCF_ACK_TIMER_SET
 0x40

	)

132 
	#TCS_CLOSED
 0

	)

133 
	#TCS_LISTEN
 1

	)

134 
	#TCS_SYN_RECEIVED
 2

	)

135 
	#TCS_SYN_SENT
 3

	)

136 
	#TCS_ESTABLISHED
 4

	)

137 
	#TCS_FIN_WAIT_1
 5

	)

138 
	#TCS_FIN_WAIT_2
 6

	)

139 
	#TCS_CLOSE_WAIT
 7

	)

140 
	#TCS_CLOSING
 8

	)

141 
	#TCS_LAST_ACK
 9

	)

142 
	#TCS_TIME_WAIT
 10

	)

145 
t˝_‰ag2c⁄n
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
,

146 
acc_t
 *
ù_∑ck
,ácc_à*
t˝_∑ck
 ));

147 
t˝_ª°¨t_fd_ªad
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
 ));

150 
t˝_ª°¨t_wrôe
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
 ));

151 
t˝_£t_ack_timî
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
 ));

152 
t˝_ªÀa£_ªå™s
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
, 
u32_t
 
£g_ack
,

153 
U16_t
 
√w_wö
 ));

154 
t˝_£t_time_waô_timî
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
 ));

155 
t˝_ª°¨t_fd_wrôe
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
 ));

156 
t˝_˛o£_c⁄√˘i⁄
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
,

157 
îr‹
 ));

158 
t˝_ª°¨t_wrôe_p‹t
 
ARGS
(–
t˝_p‹t_t
 *
t˝_p‹t
 ));

159 
t˝_zîo_wnd_to
 
ARGS
(–
c⁄n
, 
timî
 *timer ));

160 
t˝_shutdown
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
 ));

163 
t˝_LEmod4G
 
ARGS
(–
u32_t
 
n1
, u32_à
n2
 ));

164 
t˝_Lmod4G
 
ARGS
(–
u32_t
 
n1
, u32_à
n2
 ));

165 
t˝_GEmod4G
 
ARGS
(–
u32_t
 
n1
, u32_à
n2
 ));

166 
t˝_Gmod4G
 
ARGS
(–
u32_t
 
n1
, u32_à
n2
 ));

167 
t˝_wrôe_°©e
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
 ));

169 
t˝_exåa˘_ù›t
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
,

170 
ù_hdr_t
 *
ù_hdr
 ));

171 
t˝_exåa˘_t˝›t
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
,

172 
t˝_hdr_t
 *
t˝_hdr
 ));

173 
t˝_gë_ù›t
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
, 
ù_hdr›t_t


174 *
ù_hdr›t
 ));

175 
t˝_gë_t˝›t
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
, 
t˝_hdr›t_t


176 *
t˝_hdr›t
 ));

177 
acc_t
 *
t˝_make_hódî
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
,

178 
ù_hdr_t
 **
ªf_ù_hdr
, 
t˝_hdr_t
 **
ªf_t˝_hdr
, 
acc_t
 *
d©a
 ));

179 
u16_t
 
t˝_∑ck_⁄eCsum
 
ARGS
(–
acc_t
 *
∑ck
,

180 
size_t
 
∑ck_Àngth
 ));

181 
t˝_check_c⁄n
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
 ));

182 
t˝_¥öt_∑ck
 
ARGS
(–
ù_hdr_t
 *
ù_hdr
, 
t˝_hdr_t
 *
t˝_hdr
 ));

183 
t˝_¥öt_c⁄n
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
 ));

186 
t˝_ª°¨t_c⁄√˘
 
ARGS
(–
t˝_fd_t
 *
t˝_fd
 ));

187 
t˝_su4li°í
 
ARGS
(–
t˝_fd_t
 *
t˝_fd
 ));

188 
t˝_ª∂y_io˘l
 
ARGS
(–
t˝_fd_t
 *
t˝_fd
, 
ª∂y
 ));

189 
t˝_ª∂y_wrôe
 
ARGS
(–
t˝_fd_t
 *
t˝_fd
, 
size_t
 
ª∂y
 ));

190 
t˝_ª∂y_ªad
 
ARGS
(–
t˝_fd_t
 *
t˝_fd
, 
size_t
 
ª∂y
 ));

192 
	#TCP_PORT_NR
 1

	)

193 
	#TCP_FD_NR
 20

	)

194 
	#TCP_CONN_NR
 20

	)

196 
EXTERN
 
t˝_p‹t_t
 
	gt˝_p‹t_èbÀ
[
TCP_PORT_NR
];

197 
EXTERN
 
t˝_c⁄n_t
 
	gt˝_c⁄n_èbÀ
[
TCP_CONN_NR
];

198 
EXTERN
 
t˝_fd_t
 
	gt˝_fd_èbÀ
[
TCP_FD_NR
];

	@tcp_lib.c

5 
	~"öë.h
"

6 
	~"buf.h
"

7 
	~"˛ock.h
"

8 
	~"io.h
"

9 
	~"ty≥.h
"

11 
	~"as£π.h
"

12 
	~"t˝_öt.h
"

14 
INIT_PANIC
();

16 
PUBLIC
 
	$t˝_LEmod4G
 (
n1
, 
n2
)

17 
u32_t
 
n1
;

18 
u32_t
 
n2
;

20  !((
u32_t
)(
n2
-
n1
) & 0x80000000L);

21 
	}
}

23 
PUBLIC
 
	$t˝_GEmod4G
 (
n1
, 
n2
)

24 
u32_t
 
n1
;

25 
u32_t
 
n2
;

27  !((
u32_t
)(
n1
-
n2
) & 0x80000000L);

28 
	}
}

30 
PUBLIC
 
	$t˝_Lmod4G
 (
n1
, 
n2
)

31 
u32_t
 
n1
;

32 
u32_t
 
n2
;

34  !!((
u32_t
)(
n1
-
n2
) & 0x80000000L);

35 
	}
}

37 
PUBLIC
 
	$t˝_Gmod4G
 (
n1
, 
n2
)

38 
u32_t
 
n1
;

39 
u32_t
 
n2
;

41  !!((
u32_t
)(
n2
-
n1
) & 0x80000000L);

42 
	}
}

44 
PUBLIC
 
	$t˝_exåa˘_ù›t
(
t˝_c⁄n
, 
ù_hdr
)

45 
t˝_c⁄n_t
 *
t˝_c⁄n
;

46 
ù_hdr_t
 *
ù_hdr
;

48 
ù_hdr_Àn
;

50 
ù_hdr_Àn
(
ù_hdr
->
ih_vîs_ihl
 & 
IH_IHL_MASK
) << 2;

51 i‡(
ù_hdr_Àn
 =
IP_MIN_HDR_SIZE
)

54 #i‡
DEBUG


55 { 
	`whîe
(); 
	`¥ötf
("ip_hdr options NOT supported (yet?)\n"); }

57 
	}
}

59 
PUBLIC
 
	$t˝_exåa˘_t˝›t
(
t˝_c⁄n
, 
t˝_hdr
)

60 
t˝_c⁄n_t
 *
t˝_c⁄n
;

61 
t˝_hdr_t
 *
t˝_hdr
;

63 
t˝_hdr_Àn
;

65 
t˝_hdr_Àn
(
t˝_hdr
->
th_d©a_off
 & 
TH_DO_MASK
) >> 2;

66 i‡(
t˝_hdr_Àn
 =
TCP_MIN_HDR_SIZE
)

69 #i‡
DEBUG
 & 2

70 { 
	`whîe
(); 
	`¥ötf
("tcp_hdr options NOT supported (yet?)\n"); }

72 
	}
}

74 
PUBLIC
 
u16_t
 
	$t˝_∑ck_⁄eCsum
(
ù_∑ck
, 
ù_∑ck_size
)

75 
acc_t
 *
ù_∑ck
;

76 
size_t
 
ù_∑ck_size
;

78 
ù_hdr_t
 *
ù_hdr
;

79 
t˝_hdr_t
 *
t˝_hdr
;

80 
size_t
 
ù_hdr_Àn
;

81 
acc_t
 *
t˝_∑ck
, *
ßve_∑ck
;

82 
u16_t
 
¥ev
;

83 
u8_t
 
byã_buf
[2];

84 
u16_t
 
w‹d_buf
;

85 
odd_byã
;

86 *
d©a_±r
;

87 
Àngth
;

90 
	`as£π
 (
ù_∑ck
);

91 
ù_∑ck
->
acc_lökC
++;

93 
ù_∑ck

	`bf_∑ckIffLess
(ù_∑ck, 
IP_MIN_HDR_SIZE
);

94 
ù_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
ù_∑ck
);

95 
ù_hdr_Àn
(
ù_hdr
->
ih_vîs_ihl
 & 
IH_IHL_MASK
) << 2;

97 
¥ev
= 0;

99 
¥ev

	`⁄eC_sum
’ªv, (
u16_t
 *)&
ù_hdr
->
ih_§c
,

100 (
ù_hdr
->
ih_§c
));

103 
¥ev

	`⁄eC_sum
’ªv, (
u16_t
 *)&
ù_hdr
->
ih_d°
,

104 (
ù_hdr
->
ih_d°
));

107 
byã_buf
[0]= 0;

108 
byã_buf
[1]
ù_hdr
->
ih_¥Ÿo
;

109 
	`as£π
(
ù_hdr
->
ih_¥Ÿo
 =
IPPROTO_TCP
);

111 
¥ev

	`⁄eC_sum
’ªv, (
u16_t
 *)
byã_buf
, 2);

114 
w‹d_buf

	`ht⁄s
(
	`¡ohs
(
ù_hdr
->
ih_Àngth
)-
ù_hdr_Àn
);

115 
¥ev

	`⁄eC_sum
’ªv, &
w‹d_buf
, (word_buf));

116 
	`as£π
 (
	`¡ohs
(
ù_hdr
->
ih_Àngth
Ë=
ù_∑ck_size
);

118 
t˝_∑ck

	`bf_cut
(
ù_∑ck
, 
ù_hdr_Àn
, 
ù_∑ck_size
-ip_hdr_len);

119 
	`bf_a‰ì
(
ù_∑ck
);

120 
t˝_∑ck

	`bf_∑ckIffLess
—˝_∑ck, 
TCP_MIN_HDR_SIZE
);

121 
t˝_hdr
(
t˝_hdr_t
 *)
	`±r2acc_d©a
(
t˝_∑ck
);

123 
ßve_∑ck

t˝_∑ck
;

125 
odd_byã

FALSE
;

126 ; 
t˝_∑ck
;Å˝_∑ckt˝_∑ck->
acc_√xt
)

129 
d©a_±r

	`±r2acc_d©a
(
t˝_∑ck
);

130 
Àngth

t˝_∑ck
->
acc_Àngth
;

132 i‡(!
Àngth
)

134 i‡(
odd_byã
)

136 
byã_buf
[1]*
d©a_±r
;

137 
¥ev

	`⁄eC_sum
’ªv, (
u16_t
 *)
byã_buf
, 2);

138 
d©a_±r
++;

139 
Àngth
--;

140 
odd_byã

FALSE
;

142 i‡(
Àngth
 & 1)

144 
odd_byã

TRUE
;

145 
Àngth
--;

146 
byã_buf
[0]
d©a_±r
[
Àngth
];

148 i‡(!
Àngth
)

150 
¥ev

	`⁄eC_sum
 (¥ev, (
u16_t
 *)
d©a_±r
, 
Àngth
);

152 i‡(
odd_byã
)

153 
¥ev

	`⁄eC_sum
 (¥ev, (
u16_t
 *)
byã_buf
, 1);

154 
	`bf_a‰ì
(
ßve_∑ck
);

155  
¥ev
;

156 
	}
}

158 
PUBLIC
 
	$t˝_gë_ù›t
(
t˝_c⁄n
, 
ù_hdr›t
)

159 
t˝_c⁄n_t
 *
t˝_c⁄n
;

160 
ù_hdr›t_t
 *
ù_hdr›t
;

162 i‡(!
t˝_c⁄n
->
tc_ªmù›t
)

164 
ù_hdr›t
->
iho_›t_siz
= 0;

167 #i‡
DEBUG


168 { 
	`whîe
(); 
	`¥ötf
("ip_hdr options NOT supported (yet?)\n"); }

170 
ù_hdr›t
->
iho_›t_siz
= 0;

172 
	}
}

174 
PUBLIC
 
	$t˝_gë_t˝›t
(
t˝_c⁄n
, 
t˝_hdr›t
)

175 
t˝_c⁄n_t
 *
t˝_c⁄n
;

176 
t˝_hdr›t_t
 *
t˝_hdr›t
;

178 i‡(!
t˝_c⁄n
->
tc_ªmt˝›t
)

180 
t˝_hdr›t
->
tho_›t_siz
= 0;

184 #i‡
DEBUG


185 { 
	`whîe
(); 
	`¥ötf
("tcp_hdr options NOT supported (yet?)\n"); }

187 
t˝_hdr›t
->
tho_›t_siz
= 0;

189 
	}
}

191 
PUBLIC
 
acc_t
 *
	$t˝_make_hódî
(
t˝_c⁄n
, 
ªf_ù_hdr
, 
ªf_t˝_hdr
, 
d©a
)

192 
t˝_c⁄n_t
 *
t˝_c⁄n
;

193 
ù_hdr_t
 **
ªf_ù_hdr
;

194 
t˝_hdr_t
 **
ªf_t˝_hdr
;

195 
acc_t
 *
d©a
;

197 
ù_hdr›t_t
 
ù_hdr›t
;

198 
t˝_hdr›t_t
 
t˝_hdr›t
;

199 
ù_hdr_t
 *
ù_hdr
;

200 
t˝_hdr_t
 *
t˝_hdr
;

201 
acc_t
 *
hdr_acc
;

202 *
±r2hdr
;

203 
˛o£d_c⁄√˘i⁄
;

205 
˛o£d_c⁄√˘i⁄
(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
);

207 
	`t˝_gë_ù›t
 (
t˝_c⁄n
, &
ù_hdr›t
);

208 
	`t˝_gë_t˝›t
 (
t˝_c⁄n
, &
t˝_hdr›t
);

209 
	`as£π
 (!(
ù_hdr›t
.
iho_›t_siz
 & 3));

210 
	`as£π
 (!(
t˝_hdr›t
.
tho_›t_siz
 & 3));

212 i‡(
IP_MIN_HDR_SIZE
+
ù_hdr›t
.
iho_›t_siz
+

213 
TCP_MIN_HDR_SIZE
+
t˝_hdr›t
.
tho_›t_siz
 <
BUF_S
)

215 
hdr_acc

	`bf_memªq
(
IP_MIN_HDR_SIZE
+

216 
ù_hdr›t
.
iho_›t_siz
+
TCP_MIN_HDR_SIZE
+

217 
t˝_hdr›t
.
tho_›t_siz
);

218 
±r2hdr

	`±r2acc_d©a
(
hdr_acc
);

220 
ù_hdr
(
ù_hdr_t
 *)
±r2hdr
;

221 
±r2hdr
 +
IP_MIN_HDR_SIZE
;

223 i‡(
ù_hdr›t
.
iho_›t_siz
)

225 #i‡
DEBUG


226 { 
	`whîe
(); 
	`¥ötf
("doing memcpy\n"); }

228 
	`mem˝y
(
±r2hdr
, (*)
ù_hdr›t
.
iho_d©a
,

229 
ù_hdr›t
.
iho_›t_siz
);

231 
±r2hdr
 +
ù_hdr›t
.
iho_›t_siz
;

233 
t˝_hdr
(
t˝_hdr_t
 *)
±r2hdr
;

234 
±r2hdr
 +
TCP_MIN_HDR_SIZE
;

236 i‡(
t˝_hdr›t
.
tho_›t_siz
)

238 #i‡
DEBUG


239 { 
	`whîe
(); 
	`¥ötf
("doing memcpy\n"); }

241 
	`mem˝y
 (
±r2hdr
, (*)
t˝_hdr›t
.
tho_d©a
,

242 
t˝_hdr›t
.
tho_›t_siz
);

244 
hdr_acc
->
acc_√xt

d©a
;

248 
hdr_acc

	`bf_memªq
(
IP_MIN_HDR_SIZE
+

249 
ù_hdr›t
.
iho_›t_siz
);

250 
±r2hdr

	`±r2acc_d©a
(
hdr_acc
);

252 
ù_hdr
(
ù_hdr_t
 *)
±r2hdr
;

253 
±r2hdr
 +
IP_MIN_HDR_SIZE
;

255 i‡(
ù_hdr›t
.
iho_›t_siz
)

257 #i‡
DEBUG


258 { 
	`whîe
(); 
	`¥ötf
("doing memcpy\n"); }

260 
	`mem˝y
 (
±r2hdr
, (*)
ù_hdr›t
.
iho_d©a
,

261 
ù_hdr›t
.
iho_›t_siz
);

264 
hdr_acc
->
acc_√xt

	`bf_memªq
(
TCP_MIN_HDR_SIZE
+

265 
t˝_hdr›t
.
tho_›t_siz
);

267 
±r2hdr

	`±r2acc_d©a
(
hdr_acc
->
acc_√xt
);

268 
t˝_hdr
(
t˝_hdr_t
 *)
±r2hdr
;

269 
±r2hdr
 +
TCP_MIN_HDR_SIZE
;

271 i‡(
t˝_hdr›t
.
tho_›t_siz
)

273 #i‡
DEBUG


274 { 
	`whîe
(); 
	`¥ötf
("doing memcpy\n"); }

276 
	`mem˝y
 (
±r2hdr
, (*)
t˝_hdr›t
.
tho_d©a
,

277 
t˝_hdr›t
.
tho_›t_siz
);

279 
hdr_acc
->
acc_√xt
->acc_√xt
d©a
;

281 i‡(!
˛o£d_c⁄√˘i⁄
 && (
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
))

283 #i‡
DEBUG


284 { 
	`whîe
(); 
	`¥ötf
("connection closed while inuse\n"); }

286 
	`bf_a‰ì
(
hdr_acc
);

290 
ù_hdr
->
ih_vîs_ihl
(
IP_MIN_HDR_SIZE
+

291 
ù_hdr›t
.
iho_›t_siz
) >> 2;

292 
ù_hdr
->
ih_tos

t˝_c⁄n
->
tc_tos
;

293 
ù_hdr
->
ih_âl

t˝_c⁄n
->
tc_âl
;

294 
ù_hdr
->
ih_¥Ÿo

IPPROTO_TCP
;

295 
ù_hdr
->
ih_§c

t˝_c⁄n
->
tc_loˇddr
;

296 
ù_hdr
->
ih_d°

t˝_c⁄n
->
tc_ªmaddr
;

297 
ù_hdr
->
ih_Êags_‰agoff
= 0;

299 
t˝_hdr
->
th_§˝‹t

t˝_c⁄n
->
tc_lo˝‹t
;

300 
t˝_hdr
->
th_d°p‹t

t˝_c⁄n
->
tc_ªmp‹t
;

301 
t˝_hdr
->
th_£q_ƒ

t˝_c⁄n
->
tc_RCV_NXT
;

302 
t˝_hdr
->
th_Êags
= 0;

303 
t˝_hdr
->
th_d©a_off
(
TCP_MIN_HDR_SIZE
+

304 
t˝_hdr›t
.
tho_›t_siz
) << 2;

305 
t˝_hdr
->
th_wödow

	`ht⁄s
(
t˝_c⁄n
->
tc_RCV_HI
-

306 
t˝_c⁄n
->
tc_RCV_LO
);

307 
t˝_hdr
->
th_chksum
= 0;

308 *
ªf_ù_hdr

ù_hdr
;

309 *
ªf_t˝_hdr

t˝_hdr
;

310  
hdr_acc
;

311 
	}
}

313 
PUBLIC
 
	$t˝_wrôe_°©e
 (
t˝_c⁄n
)

314 
t˝_c⁄n_t
 *
t˝_c⁄n
;

316 
	`¥ötf
("t˝_c⁄n_èbÀ[%d]->tc_°©e", 
t˝_c⁄n
-

317 
t˝_c⁄n_èbÀ
);

318 i‡(!(
t˝_c⁄n
->
tc_Êags
 & 
TCF_INUSE
))

320 
	`¥ötf
("not inuse\n");

323 
t˝_c⁄n
->
tc_°©e
)

325 
TCS_CLOSED
: 
	`¥ötf
("CLOSED"); ;

326 
TCS_LISTEN
: 
	`¥ötf
("LISTEN"); ;

327 
TCS_SYN_RECEIVED
: 
	`¥ötf
("SYN_RECEIVED"); ;

328 
TCS_SYN_SENT
: 
	`¥ötf
("SYN_SENT"); ;

329 
TCS_ESTABLISHED
: 
	`¥ötf
("ESTABLISHED"); ;

330 
TCS_FIN_WAIT_1
: 
	`¥ötf
("FIN_WAIT_1"); ;

331 
TCS_FIN_WAIT_2
: 
	`¥ötf
("FIN_WAIT_2"); ;

332 
TCS_CLOSE_WAIT
: 
	`¥ötf
("CLOSE_WAIT"); ;

333 
TCS_CLOSING
: 
	`¥ötf
("CLOSING"); ;

334 
TCS_LAST_ACK
: 
	`¥ötf
("LAST_ACK"); ;

335 
TCS_TIME_WAIT
: 
	`¥ötf
("TIME_WAIT"); ;

336 : 
	`¥ötf
("unknow¿(=%d)", 
t˝_c⁄n
->
tc_°©e
); ;

338 
	`¥ötf
("\n");

339 
	}
}

341 
PUBLIC
 
	$t˝_check_c⁄n
(
t˝_c⁄n
)

342 
t˝_c⁄n_t
 *
t˝_c⁄n
;

344 
ÆÃight
;

345 
u32_t
 
lo_queue
, 
hi_queue
;

346 
size
;

348 #i‡
DEBUG
 & 256

349 { 
	`whîe
(); 
	`¥ötf
("inÅcp_check_conn\n"); }

351 
ÆÃight

TRUE
;

354 
lo_queue

t˝_c⁄n
->
tc_RCV_LO
;

355 i‡(
lo_queue
 =
t˝_c⁄n
->
tc_IRS
)

356 
lo_queue
++;

357 i‡(
lo_queue
 =
t˝_c⁄n
->
tc_RCV_NXT
 && (t˝_c⁄n->
tc_Êags
 &

358 
TCF_FIN_RECV
))

359 
lo_queue
--;

360 
hi_queue

t˝_c⁄n
->
tc_RCV_NXT
;

361 i‡(
hi_queue
 =
t˝_c⁄n
->
tc_IRS
)

362 
hi_queue
++;

363 i‡(
t˝_c⁄n
->
tc_Êags
 & 
TCF_FIN_RECV
)

364 
hi_queue
--;

366 
size

hi_queue
-
lo_queue
;

367 i‡(
size
<0)

369 
	`¥ötf
("RCV_NXT-RCV_LO < 0\n");

370 
ÆÃight

FALSE
;

372 i‡(!
t˝_c⁄n
->
tc_rcvd_d©a
)

374 i‡(
size
)

376 
	`¥ötf
("RCV_NXT-RCV_LO != 0\n");

377 
	`t˝_¥öt_c⁄n
(
t˝_c⁄n
);

378 
	`¥ötf
("lo_queue= %lu, hi_queue= %lu\n",

379 
lo_queue
, 
hi_queue
);

380 
ÆÃight

FALSE
;

383 i‡(
size
 !
	`bf_bufsize
(
t˝_c⁄n
->
tc_rcvd_d©a
))

385 
	`¥ötf
("RCV_NXT-RCV_LO != sizeofÅc_rcvd_data\n");

386 
	`t˝_¥öt_c⁄n
(
t˝_c⁄n
);

387 
	`¥ötf
(

389 
lo_queue
, 
hi_queue
, 
	`bf_bufsize
(
t˝_c⁄n
->
tc_rcvd_d©a
));

390 
ÆÃight

FALSE
;

394 
lo_queue

t˝_c⁄n
->
tc_SND_UNA
;

395 i‡(
lo_queue
 =
t˝_c⁄n
->
tc_ISS
)

396 
lo_queue
++;

397 i‡(
lo_queue
 =
t˝_c⁄n
->
tc_SND_NXT
 && (t˝_c⁄n->
tc_Êags
 &

398 
TCF_FIN_SENT
))

399 
lo_queue
--;

400 
hi_queue

t˝_c⁄n
->
tc_SND_NXT
;

401 i‡(
hi_queue
 =
t˝_c⁄n
->
tc_ISS
)

402 
hi_queue
++;

403 i‡(
t˝_c⁄n
->
tc_Êags
 & 
TCF_FIN_SENT
)

404 
hi_queue
--;

406 
size

hi_queue
-
lo_queue
;

407 i‡(
size
<0)

409 
	`¥ötf
("SND_NXT-SND_UNA < 0\n");

410 
ÆÃight

FALSE
;

412 i‡(!
t˝_c⁄n
->
tc_£nd_d©a
)

414 i‡(
size
)

416 
	`¥ötf
("SND_NXT-SND_UNA != 0\n");

417 
	`¥ötf
("SND_NXT= %d, SND_UNA= %d\n",

418 
t˝_c⁄n
->
tc_SND_NXT
,Å˝_c⁄n->
tc_SND_UNA
);

419 
	`¥ötf
("lo_queue= %d, hi_queue= %d\n",

420 
lo_queue
, 
hi_queue
);

421 
ÆÃight

FALSE
;

424 i‡(
size
 !
	`bf_bufsize
(
t˝_c⁄n
->
tc_£nd_d©a
))

426 
	`¥ötf
("SND_NXT-SND_UNA != sizeofÅc_send_data\n");

427 
	`¥ötf
("SND_NXT= %d, SND_UNA= %d\n",

428 
t˝_c⁄n
->
tc_SND_NXT
,Å˝_c⁄n->
tc_SND_UNA
);

429 
	`¥ötf
("lo_queue= %d,Üo_queue= %d\n",

430 
lo_queue
, 
hi_queue
);

431 
	`¥ötf
("bf_bufsize(data)= %d\n",

432 
	`bf_bufsize
(
t˝_c⁄n
->
tc_£nd_d©a
));

434 
ÆÃight

FALSE
;

438 i‡(!
	`t˝_GEmod4G
(
t˝_c⁄n
->
tc_SND_UNA
,Å˝_c⁄n->
tc_ISS
))

440 
	`¥ötf
("SND_UNA < ISS\n");

441 
ÆÃight

FALSE
;

443 i‡(!
	`t˝_GEmod4G
(
t˝_c⁄n
->
tc_SND_NXT
,Å˝_c⁄n->
tc_SND_UNA
))

445 
	`¥ötf
("SND_NXT<SND_UNA\n");

446 
ÆÃight

FALSE
;

448 i‡(!
	`t˝_GEmod4G
(
t˝_c⁄n
->
tc_SND_TRM
,Å˝_c⁄n->
tc_SND_UNA
))

450 
	`¥ötf
("SND_TRM<SND_UNA\n");

451 
ÆÃight

FALSE
;

453 i‡(!
	`t˝_GEmod4G
(
t˝_c⁄n
->
tc_SND_NXT
,Å˝_c⁄n->
tc_SND_TRM
))

455 
	`¥ötf
("SND_NXT<SND_TRM\n");

456 
ÆÃight

FALSE
;

459 #i‡
DEBUG


460 i‡(!
ÆÃight
)

461 { 
	`¥ötf
("tcp_check_conn:Çotállright\n"); }

463  
ÆÃight
;

464 
	}
}

466 
PUBLIC
 
	$t˝_¥öt_∑ck
(
ù_hdr
, 
t˝_hdr
)

467 
ù_hdr_t
 *
ù_hdr
;

468 
t˝_hdr_t
 *
t˝_hdr
;

470 
t˝_hdr_Àn
;

472 
	`as£π
(
t˝_hdr
);

473 i‡(
ù_hdr
)

474 
	`wrôeIpAddr
(
ù_hdr
->
ih_§c
);

476 
	`¥ötf
("???");

477 
	`¥ötf
(",%u ", 
	`¡ohs
(
t˝_hdr
->
th_§˝‹t
));

478 i‡(
ù_hdr
)

479 
	`wrôeIpAddr
(
ù_hdr
->
ih_d°
);

481 
	`¥ötf
("???");

482 
	`¥ötf
(",%u ", 
	`¡ohs
(
t˝_hdr
->
th_d°p‹t
));

483 
	`¥ötf
(" 0x%lx", 
	`¡ohl
(
t˝_hdr
->
th_£q_ƒ
));

484 i‡(
t˝_hdr
->
th_Êags
 & 
THF_FIN
)

485 
	`¥ötf
(" <FIN>");

486 i‡(
t˝_hdr
->
th_Êags
 & 
THF_SYN
)

487 
	`¥ötf
(" <SYN>");

488 i‡(
t˝_hdr
->
th_Êags
 & 
THF_RST
)

489 
	`¥ötf
(" <RST>");

490 i‡(
t˝_hdr
->
th_Êags
 & 
THF_PSH
)

491 
	`¥ötf
(" <PSH>");

492 i‡(
t˝_hdr
->
th_Êags
 & 
THF_ACK
)

493 
	`¥ötf
(" <ACK 0x%x %u>", 
	`¡ohl
(
t˝_hdr
->
th_ack_ƒ
),

494 
	`¡ohs
(
t˝_hdr
->
th_wödow
));

495 i‡(
t˝_hdr
->
th_Êags
 & 
THF_URG
)

496 
	`¥ötf
(" <URG %u>", 
t˝_hdr
->
th_urg±r
);

497 
t˝_hdr_Àn
(
t˝_hdr
->
th_d©a_off
 & 
TH_DO_MASK
) >> 2;

498 i‡(
t˝_hdr_Àn
 !
TCP_MIN_HDR_SIZE
)

499 
	`¥ötf
(" <›ti⁄†%d>", 
t˝_hdr_Àn
-
TCP_MIN_HDR_SIZE
);

500 
	}
}

502 
PUBLIC
 
	$t˝_¥öt_c⁄n
(
t˝_c⁄n
)

503 
t˝_c⁄n_t
 *
t˝_c⁄n
;

505 
iss
, 
ús
;

507 
iss

t˝_c⁄n
->
tc_ISS
;

508 
ús

t˝_c⁄n
->
tc_IRS
;

510 
	`t˝_wrôe_°©e
 (
t˝_c⁄n
);

511 
	`¥ötf
(" ISS 0x%lx UNA +0x%lx TRM +0x%lx NXT +0x%lx",

512 
iss
, 
t˝_c⁄n
->
tc_SND_UNA
-iss,Å˝_c⁄n->
tc_SND_TRM
-iss,

513 
t˝_c⁄n
->
tc_SND_NXT
-
iss
);

514 
	`¥ötf
(" IRS 0x%lx LO +0x%x NXT +0x%x HI +0x%x",

515 
ús
, 
t˝_c⁄n
->
tc_RCV_LO
-ús,Å˝_c⁄n->
tc_RCV_NXT
-irs,

516 
t˝_c⁄n
->
tc_RCV_HI
-
ús
);

517 i‡(
t˝_c⁄n
->
tc_Êags
 & 
TCF_INUSE
)

518 
	`¥ötf
(" TCF_INUSE");

519 i‡(
t˝_c⁄n
->
tc_Êags
 & 
TCF_FIN_RECV
)

520 
	`¥ötf
(" TCF_FIN_RECV");

521 i‡(
t˝_c⁄n
->
tc_Êags
 & 
TCF_RCV_PUSH
)

522 
	`¥ötf
(" TCF_RCV_PUSH");

523 i‡(
t˝_c⁄n
->
tc_Êags
 & 
TCF_MORE2WRITE
)

524 
	`¥ötf
(" TCF_MORE2WRITE");

525 i‡(
t˝_c⁄n
->
tc_Êags
 & 
TCF_SEND_ACK
)

526 
	`¥ötf
(" TCF_SEND_ACK");

527 i‡(
t˝_c⁄n
->
tc_Êags
 & 
TCF_FIN_SENT
)

528 
	`¥ötf
(" TCF_FIN_SENT");

529 i‡(
t˝_c⁄n
->
tc_Êags
 & 
TCF_ACK_TIMER_SET
)

530 
	`¥ötf
(" TCF_ACK_TIMER_SET");

531 
	}
}

	@tcp_recv.c

5 
	~"öë.h
"

6 
	~"buf.h
"

7 
	~"˛ock.h
"

8 
	~"ty≥.h
"

10 
	~"t˝_öt.h
"

11 
	~"t˝.h
"

12 
	~"as£π.h
"

14 
INIT_PANIC
();

16 
FORWARD
 
¸óã_RST
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
,

17 
ù_hdr_t
 *
ù_hdr
, 
t˝_hdr_t
 *
t˝_hdr
 ));

18 
FORWARD
 
¥o˚ss_d©a
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
,

19 
t˝_hdr_t
 *
t˝_hdr
, 
t˝_hdr_Àn
, 
acc_t
 *
t˝_d©a
,

20 
d©a_Àn
 ));

21 
FORWARD
 
¥o˚ss_adv™˚d_d©a
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
,

22 
t˝_hdr_t
 *
t˝_hdr
, 
t˝_hdr_Àn
, 
acc_t
 *
t˝_d©a
,

23 
d©a_Àn
 ));

24 
FORWARD
 
acc_t
 *
mîge_∑cks
 
ARGS
(–acc_à*
fú°
,ácc_à*
√xt
 ));

25 
FORWARD
 
fd_ªad
 
ARGS
(–
t˝_fd_t
 *
t˝_fd
 ));

26 
FORWARD
 
swôch_ªad_fd
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
,

27 
t˝_fd_t
 *
t˝_fd
,Å˝_fd_à**
ªf_urg_fd
,

28 
t˝_fd_t
 **
ªf_n‹m_fd
 ));

30 
PUBLIC
 
	$t˝_‰ag2c⁄n
(
t˝_c⁄n
, 
ù_∑ck
, 
t˝_∑ck
)

31 
t˝_c⁄n_t
 *
t˝_c⁄n
;

32 
acc_t
 *
ù_∑ck
;

33 
acc_t
 *
t˝_∑ck
;

35 
t˝_fd_t
 *
c⁄nu£r
;

36 
t˝_hdr_Êags
;

37 
ù_hdr_t
 *
ù_hdr
;

38 
t˝_hdr_t
 *
t˝_hdr
;

39 
ù_hdr_Àn
, 
t˝_hdr_Àn
;

40 
u32_t
 
£g_ack
, 
£g_£q
, 
rcv_hi
;

41 
u16_t
 
d©a_Àngth
, 
£g_wnd
;

42 
ac˚±abÀ_ACK
, 
£gm_ac˚±abÀ
;

44 #i‡
DEBUG
 & 256

45 { 
	`whîe
(); 
	`¥ötf
("tcp_frag2conn(&tcp_conn_table[%d],..) called\n",

46 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
); }

48 #i‡
DEBUG
 & 256

49 { 
	`whîe
(); 
	`¥ötf
("tc_c⁄nu£r0x%x\n", 
t˝_c⁄n
->
tc_c⁄nu£r
); }

52 
ù_∑ck

	`bf_∑ckIffLess
(ù_∑ck, 
IP_MIN_HDR_SIZE
);

53 
ù_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
ù_∑ck
);

54 
ù_hdr_Àn
(
ù_hdr
->
ih_vîs_ihl
 & 
IH_IHL_MASK
) << 2;

55 i‡(
ù_hdr_Àn
>
IP_MIN_HDR_SIZE
)

57 
ù_∑ck

	`bf_∑ckIffLess
(ù_∑ck, 
ù_hdr_Àn
);

58 
ù_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
ù_∑ck
);

61 
t˝_∑ck

	`bf_∑ckIffLess
—˝_∑ck, 
TCP_MIN_HDR_SIZE
);

62 
t˝_hdr
(
t˝_hdr_t
 *)
	`±r2acc_d©a
(
t˝_∑ck
);

63 
t˝_hdr_Àn
(
t˝_hdr
->
th_d©a_off
 & 
TH_DO_MASK
) >> 2;

65 i‡(
t˝_hdr_Àn
>
TCP_MIN_HDR_SIZE
)

67 
t˝_∑ck

	`bf_∑ckIffLess
—˝_∑ck, 
t˝_hdr_Àn
);

68 
t˝_hdr
(
t˝_hdr_t
 *)
	`±r2acc_d©a
(
t˝_∑ck
);

70 
d©a_Àngth

t˝_hdr
->
th_chksum
-
t˝_hdr_Àn
;

72 
t˝_hdr_Êags

t˝_hdr
->
th_Êags
 & 
TH_FLAGS_MASK
;

73 
£g_ack

	`¡ohl
(
t˝_hdr
->
th_ack_ƒ
);

74 
£g_£q

	`¡ohl
(
t˝_hdr
->
th_£q_ƒ
);

75 
£g_wnd

	`¡ohs
(
t˝_hdr
->
th_wödow
);

77 
t˝_c⁄n
->
tc_°©e
)

79 
TCS_CLOSED
:

95 i‡(!(
t˝_hdr_Êags
 & 
THF_RST
))

97 
	`¸óã_RST
 (
t˝_c⁄n
, 
ù_hdr
, 
t˝_hdr
);

98 
	`t˝_ª°¨t_wrôe
(
t˝_c⁄n
);

101 
TCS_LISTEN
:

125 #i‡
DEBUG
 & 256

126 { 
	`whîe
(); 
	`¥ötf
("\n"); }

128 i‡(
t˝_hdr_Êags
 & 
THF_RST
)

130 i‡(
t˝_hdr_Êags
 & 
THF_ACK
)

132 
	`¸óã_RST
 (
t˝_c⁄n
, 
ù_hdr
, 
t˝_hdr
);

133 
	`t˝_ª°¨t_wrôe
(
t˝_c⁄n
);

136 i‡(
t˝_hdr_Êags
 & 
THF_SYN
)

138 
	`t˝_exåa˘_ù›t
(
t˝_c⁄n
, 
ù_hdr
);

139 
	`t˝_exåa˘_t˝›t
(
t˝_c⁄n
, 
t˝_hdr
);

140 
t˝_c⁄n
->
tc_RCV_LO

£g_£q
+1;

141 
t˝_c⁄n
->
tc_RCV_NXT

£g_£q
+1;

142 
t˝_c⁄n
->
tc_RCV_HI
t˝_c⁄n->
tc_RCV_LO
+

143 
t˝_c⁄n
->
tc_rcv_wnd
;

144 
t˝_c⁄n
->
tc_RCV_UP

£g_£q
;

145 
t˝_c⁄n
->
tc_IRS

£g_£q
;

146 
t˝_c⁄n
->
tc_SND_UNA
t˝_c⁄n->
tc_ISS
;

147 
t˝_c⁄n
->
tc_SND_TRM
t˝_c⁄n->
tc_ISS
;

148 
t˝_c⁄n
->
tc_SND_NXT
t˝_c⁄n->
tc_ISS
+1;

149 
t˝_c⁄n
->
tc_SND_UP
t˝_c⁄n->
tc_ISS
-1;

150 
t˝_c⁄n
->
tc_SND_PSH
t˝_c⁄n->
tc_ISS
-1;

151 
t˝_c⁄n
->
tc_SND_WL1

£g_£q
;

152 
t˝_c⁄n
->
tc_°©e

TCS_SYN_RECEIVED
;

153 
t˝_c⁄n
->
tc_no_ªå™s
= 0;

154 
	`as£π
 (
	`t˝_check_c⁄n
(
t˝_c⁄n
));

155 #i‡
DEBUG
 & 2

156 { 
	`whîe
(); 
	`t˝_wrôe_°©e
(
t˝_c⁄n
); }

158 
t˝_c⁄n
->
tc_loˇddr

ù_hdr
->
ih_d°
;

159 
t˝_c⁄n
->
tc_lo˝‹t

t˝_hdr
->
th_d°p‹t
;

160 
t˝_c⁄n
->
tc_ªmaddr

ù_hdr
->
ih_§c
;

161 
t˝_c⁄n
->
tc_ªmp‹t

t˝_hdr
->
th_§˝‹t
;

162 #i‡
DEBUG
 & 256

163 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_restart_write(&tcp_conn_table[%d])\n",

164 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
); }

166 
	`t˝_ª°¨t_wrôe
(
t˝_c⁄n
);

169 #i‡
DEBUG


170 { 
	`whîe
(); 
	`¥ötf
("this shouldn't happen\n"); }

173 
TCS_SYN_SENT
:

221 i‡(
t˝_hdr_Êags
 & 
THF_ACK
)

223 i‡(
	`t˝_LEmod4G
(
£g_ack
, 
t˝_c⁄n
->
tc_ISS
) ||

224 
	`t˝_Gmod4G
(
£g_ack
, 
t˝_c⁄n
->
tc_SND_NXT
))

225 i‡(
t˝_hdr_Êags
 & 
THF_RST
)

229 
	`¸óã_RST
 (
t˝_c⁄n
, 
ù_hdr
,

230 
t˝_hdr
);

231 
	`t˝_ª°¨t_wrôe
(
t˝_c⁄n
);

234 
ac˚±abÀ_ACK
(
	`t˝_LEmod4G
(
t˝_c⁄n
->
tc_SND_UNA
,

235 
£g_ack
Ë&& 
	`t˝_LEmod4G
(seg_ack,

236 
t˝_c⁄n
->
tc_SND_NXT
));

239 
ac˚±abÀ_ACK

FALSE
;

240 i‡(
t˝_hdr_Êags
 & 
THF_RST
)

242 i‡(
ac˚±abÀ_ACK
)

244 #i‡
DEBUG
 & 256

245 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_close_connection\n"); }

247 
	`t˝_˛o£_c⁄√˘i⁄
(
t˝_c⁄n
,

248 
ECONNREFUSED
);

252 i‡(
t˝_hdr_Êags
 & 
THF_SYN
)

254 
t˝_c⁄n
->
tc_RCV_LO

£g_£q
+1;

255 
t˝_c⁄n
->
tc_RCV_NXT

£g_£q
+1;

256 
t˝_c⁄n
->
tc_RCV_HI
t˝_c⁄n->
tc_RCV_LO
 +

257 
t˝_c⁄n
->
tc_rcv_wnd
;

258 
t˝_c⁄n
->
tc_RCV_UP

£g_£q
;

259 
t˝_c⁄n
->
tc_IRS

£g_£q
;

260 i‡(
t˝_hdr_Êags
 & 
THF_ACK
)

261 
t˝_c⁄n
->
tc_SND_UNA

£g_ack
;

262 i‡(
	`t˝_Gmod4G
(
t˝_c⁄n
->
tc_SND_UNA
,

263 
t˝_c⁄n
->
tc_ISS
))

265 
t˝_c⁄n
->
tc_°©e

TCS_ESTABLISHED
;

266 
	`as£π
 (
	`t˝_check_c⁄n
(
t˝_c⁄n
));

267 #i‡
DEBUG
 & 2

268 { 
	`whîe
(); 
	`t˝_wrôe_°©e
(
t˝_c⁄n
); }

270 #i‡
DEBUG
 & 256

271 { 
	`whîe
(); 
	`¥ötf
("ISS0x%lx\n", 
t˝_c⁄n
->
tc_ISS
); }

273 
	`as£π
(
t˝_c⁄n
->
tc_c⁄nu£r
);

274 
	`t˝_ª°¨t_c⁄√˘
(
t˝_c⁄n
-> 
tc_c⁄nu£r
);

275 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
)

277 { 
	`whîe
(); 
	`¥ötf
("connection closed while inuse\n"); }

280 
t˝_c⁄n
->
tc_Êags
 &~
TCF_ACK_TIMER_SET
;

281 #i‡
DEBUG
 & 256

282 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

283 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

285 
t˝_c⁄n
->
tc_Êags
 |
TCF_SEND_ACK
;

286 #i‡
DEBUG
 & 256

287 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

288 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

290 
	`t˝_ª°¨t_wrôe
 (
t˝_c⁄n
);

291 
	`t˝_‰ag2c⁄n
(
t˝_c⁄n
, 
ù_∑ck
, 
t˝_∑ck
);

296 
t˝_c⁄n
->
tc_°©e

TCS_SYN_RECEIVED
;

297 
	`as£π
 (
	`t˝_check_c⁄n
(
t˝_c⁄n
));

298 #i‡
DEBUG


299 { 
	`whîe
(); 
	`t˝_wrôe_°©e
(
t˝_c⁄n
); }

301 
t˝_c⁄n
->
tc_SND_TRM
t˝_c⁄n->
tc_ISS
;

302 
	`t˝_ª°¨t_wrôe
(
t˝_c⁄n
);

305 
TCS_SYN_RECEIVED
:

306 
TCS_ESTABLISHED
:

307 
TCS_FIN_WAIT_1
:

308 
TCS_FIN_WAIT_2
:

309 
TCS_CLOSE_WAIT
:

310 
TCS_CLOSING
:

311 
TCS_LAST_ACK
:

312 
TCS_TIME_WAIT
:

333 #i‡
DEBUG
 & 256

334 { 
	`whîe
(); 
	`¥ötf
("\n"); }

336 
rcv_hi

t˝_c⁄n
->
tc_RCV_HI
;

337 i‡(
t˝_hdr_Êags
 & 
THF_URG
)

338 
rcv_hi

t˝_c⁄n
->
tc_RCV_LO
 +Å˝_c⁄n->
tc_rcv_wnd
 +

339 
t˝_c⁄n
->
tc_urg_wnd
;

340 i‡(!
d©a_Àngth
)

342 i‡(
rcv_hi
 =
t˝_c⁄n
->
tc_RCV_NXT
)

344 #i‡
DEBUG
 & 256

345 { 
	`whîe
(); 
	`¥ötf
("\n"); }

347 
£gm_ac˚±abÀ
(
£g_£q
 =
rcv_hi
);

348 #i‡
DEBUG


349 i‡(!
£gm_ac˚±abÀ
)

350 { 
	`whîe
(); 
	`¥ötf
("!segm_acceptable\n"); }

355 #i‡
DEBUG
 & 256

356 { 
	`whîe
(); 
	`¥ötf
("\n"); }

358 
	`as£π
 (
	`t˝_Gmod4G
(
rcv_hi
, 
t˝_c⁄n
->
tc_RCV_NXT
));

359 
£gm_ac˚±abÀ
(
	`t˝_LEmod4G
(
t˝_c⁄n
->

360 
tc_RCV_NXT
, 
£g_£q
) &&

361 
	`t˝_Lmod4G
(
£g_£q
, 
rcv_hi
));

362 #i‡
DEBUG
 & 256

363 i‡(!
£gm_ac˚±abÀ
)

364 { 
	`whîe
(); 
	`¥ötf
("RCV_NXT= 0x%lx, seg_seq= 0x%lx,Ñcv_hi= 0x%lx\n",

365 
t˝_c⁄n
->
tc_RCV_NXT
, 
£g_£q
, 
rcv_hi
); }

371 i‡(
	`t˝_Gmod4G
(
rcv_hi
, 
t˝_c⁄n
->
tc_RCV_NXT
))

373 #i‡
DEBUG
 & 256

374 { 
	`whîe
(); 
	`¥ötf
("RCV_NXT= %lu,Ñcv_hi= %lu, seg_seq= %lu, data_length= %u\n",

375 
t˝_c⁄n
->
tc_RCV_NXT
, 
rcv_hi
, 
£g_£q
, 
d©a_Àngth
); }

377 
£gm_ac˚±abÀ
(
	`t˝_LEmod4G
(
t˝_c⁄n
->

378 
tc_RCV_NXT
, 
£g_£q
) &&

379 
	`t˝_Lmod4G
(
£g_£q
, 
rcv_hi
)) ||

380 (
	`t˝_LEmod4G
(
t˝_c⁄n
->
tc_RCV_NXT
,

381 
£g_£q
+
d©a_Àngth
-1) &&

382 
	`t˝_Lmod4G
(
£g_£q
+
d©a_Àngth
-1,

383 
rcv_hi
));

384 #i‡
DEBUG
 & 256

385 i‡(!
£gm_ac˚±abÀ
)

386 { 
	`whîe
(); 
	`¥ötf
("!segm_acceptable\n"); }

391 #i‡
DEBUG


392 { 
	`whîe
(); 
	`¥ötf
("\n"); }

394 
£gm_ac˚±abÀ

FALSE
;

395 #i‡
DEBUG


396 i‡(!
£gm_ac˚±abÀ
)

397 { 
	`whîe
(); 
	`¥ötf
("!segm_acceptable\n"); }

410 #i‡
DEBUG
 & 256

411 { 
	`whîe
(); 
	`¥ötf
("\n"); }

413 i‡(!
£gm_ac˚±abÀ
)

415 #i‡
DEBUG
 & 256

416 { 
	`whîe
(); 
	`¥ötf
("segment isÇotácceptable\n"); }

418 i‡(!(
t˝_hdr_Êags
 & 
THF_RST
))

420 #i‡
DEBUG
 & 256

421 { 
	`whîe
(); 
	`¥ötf
("segment isÇotácceptable settingáckÅimer\n"); }

423 
	`t˝_£t_ack_timî
(
t˝_c⁄n
);

446 #i‡
DEBUG
 & 256

447 { 
	`whîe
(); 
	`¥ötf
("\n"); }

449 i‡(
t˝_hdr_Êags
 & 
THF_RST
)

451 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_SYN_RECEIVED
)

453 i‡(
t˝_c⁄n
->
tc_‹gli°í
)

455 
c⁄nu£r

t˝_c⁄n
->
tc_c⁄nu£r
;

456 
t˝_c⁄n
->
tc_c⁄nu£r
= 0;

457 #i‡
DEBUG


458 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_close_connection\n"); }

460 
	`t˝_˛o£_c⁄√˘i⁄
 (
t˝_c⁄n
,

461 
ECONNREFUSED
);

462 i‡(
c⁄nu£r
)

463 ()
	`t˝_su4li°í
(

464 
c⁄nu£r
);

469 #i‡
DEBUG


470 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_close_connection\n"); }

472 
	`t˝_˛o£_c⁄√˘i⁄
(
t˝_c⁄n
,

473 
ECONNREFUSED
);

477 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSING
 ||

478 
t˝_c⁄n
->
tc_°©e
 =
TCS_LAST_ACK
 ||

479 
t˝_c⁄n
->
tc_°©e
 =
TCS_TIME_WAIT
)

481 #i‡
DEBUG


482 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_close_connection\n"); }

484 
	`t˝_˛o£_c⁄√˘i⁄
 (
t˝_c⁄n
,

485 
ENOCONN
);

488 #i‡
DEBUG


489 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_close_connection\n"); }

491 
	`t˝_˛o£_c⁄√˘i⁄
(
t˝_c⁄n
, 
ECONNRESET
);

504 #i‡
DEBUG
 & 256

505 { 
	`whîe
(); 
	`¥ötf
("\n"); }

507 i‡((
t˝_hdr_Êags
 & 
THF_SYN
Ë&& 
	`t˝_GEmod4G
(
£g_£q
,

508 
t˝_c⁄n
->
tc_RCV_NXT
))

510 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_SYN_RECEIVED
 &&

511 
t˝_c⁄n
->
tc_‹gli°í
)

513 
c⁄nu£r

t˝_c⁄n
->
tc_c⁄nu£r
;

514 
t˝_c⁄n
->
tc_c⁄nu£r
= 0;

515 #i‡
DEBUG


516 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_close_connection\n"); }

518 
	`t˝_˛o£_c⁄√˘i⁄
(
t˝_c⁄n
,

519 
ECONNRESET
);

520 i‡(
c⁄nu£r
)

521 ()
	`t˝_su4li°í
(
c⁄nu£r
);

524 #i‡
DEBUG


525 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_close_connection\n"); }

527 
	`t˝_˛o£_c⁄√˘i⁄
(
t˝_c⁄n
, 
ECONNRESET
);

535 #i‡
DEBUG
 & 256

536 { 
	`whîe
(); 
	`¥ötf
("\n"); }

538 i‡(!(
t˝_hdr_Êags
 & 
THF_ACK
))

548 #i‡
DEBUG
 & 256

549 { 
	`whîe
(); 
	`¥ötf
("\n"); }

551 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_SYN_RECEIVED
)

553 i‡(
	`t˝_LEmod4G
(
t˝_c⁄n
->
tc_SND_UNA
, 
£g_ack
) &&

554 
	`t˝_LEmod4G
(
£g_ack
, 
t˝_c⁄n
->
tc_SND_NXT
))

556 
t˝_c⁄n
->
tc_°©e

TCS_ESTABLISHED
;

557 
	`as£π
 (
	`t˝_check_c⁄n
(
t˝_c⁄n
));

558 #i‡
DEBUG
 & 2

559 { 
	`whîe
(); 
	`t˝_wrôe_°©e
(
t˝_c⁄n
); }

561 
	`as£π
(
t˝_c⁄n
->
tc_c⁄nu£r
);

562 
	`t˝_ª°¨t_c⁄√˘
(
t˝_c⁄n
->
tc_c⁄nu£r
);

563 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
)

565 #i‡
DEBUG


566 { 
	`whîe
(); 
	`¥ötf
("connection closed while inuse\n"); }

573 
	`¸óã_RST
 (
t˝_c⁄n
, 
ù_hdr
, 
t˝_hdr
);

574 
	`t˝_ª°¨t_wrôe
(
t˝_c⁄n
);

597 #i‡
DEBUG
 & 256

598 { 
	`whîe
(); 
	`¥ötf
("\n"); }

600 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_ESTABLISHED
 ||

601 
t˝_c⁄n
->
tc_°©e
 =
TCS_FIN_WAIT_1
 ||

602 
t˝_c⁄n
->
tc_°©e
 =
TCS_FIN_WAIT_2
 ||

603 
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSE_WAIT
 ||

604 
t˝_c⁄n
->
tc_°©e
 =
TCS_LAST_ACK
 ||

605 
t˝_c⁄n
->
tc_°©e
 =
TCS_TIME_WAIT
 ||

606 
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSING
)

608 i‡(
	`t˝_LEmod4G
(
t˝_c⁄n
->
tc_SND_UNA
, 
£g_ack
)

609 && 
	`t˝_LEmod4G
(
£g_ack
, 
t˝_c⁄n
->

610 
tc_SND_NXT
))

612 i‡(
	`t˝_Lmod4G
(
t˝_c⁄n
->
tc_SND_WL1
,

613 
£g_£q
Ë|| (
t˝_c⁄n
->

614 
tc_SND_WL1
==
£g_£q
 &&

615 
	`t˝_LEmod4G
(
t˝_c⁄n
->

616 
tc_SND_WL2
, 
£g_ack
)))

618 i‡(
£g_wnd
 > 
TCP_MAX_WND_SIZE
)

619 
£g_wnd

TCP_MAX_WND_SIZE
;

620 i‡(!
£g_wnd
)

621 
£g_wnd
++;

622 
t˝_c⁄n
->
tc_SND_WL1

£g_£q
;

623 
t˝_c⁄n
->
tc_SND_WL2

£g_ack
;

624 #i‡
SUN_0WND_BUG


625 i‡(
£g_wnd
 && 
£g_ack
 =
t˝_c⁄n
->

626 
tc_SND_UNA
 && 
	`t˝_LEmod4G
(

627 
£g_ack
 + 
£g_wnd
,

628 
t˝_c⁄n
->
tc_SND_NXT
) &&

629 
	`t˝_LEmod4G
(
£g_ack
 + 
£g_wnd
,

630 
t˝_c⁄n
->
tc_¢d_cwnd
))

631 
£g_wnd
= 0;

636 
£g_wnd

t˝_c⁄n
->
tc_mss
;

640 
	`t˝_ªÀa£_ªå™s
(
t˝_c⁄n
, 
£g_ack
, 
£g_wnd
);

641 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
)

643 #i‡
DEBUG


644 { 
	`whîe
(); 
	`¥ötf
("connection closed while inuse\n"); }

649 i‡(
	`t˝_Gmod4G
(
£g_ack
,

650 
t˝_c⁄n
->
tc_SND_NXT
))

652 
	`t˝_£t_ack_timî
(
t˝_c⁄n
);

653 #i‡
DEBUG


654 { 
	`whîe
(); 
	`¥ötf
("gotánáck of something I haven't send\n");

655 
	`¥ötf
("£g_ack%lu, SND_NXT%lu\n", 
£g_ack
, 
t˝_c⁄n
->
tc_SND_NXT
); }

659 #i‡
DEBUG
 & 256

660 i‡(!
£g_wnd
Ë{ 
	`whîe
(); 
	`¥ötf
("SND_UNA= %lu, SND_NXT= %lu\n",

661 
t˝_c⁄n
->
tc_SND_UNA
,Å˝_c⁄n->
tc_SND_NXT
); }

663 i‡(!
£g_wnd
 &&

666 
	`t˝_Lmod4G
(
t˝_c⁄n
->
tc_SND_UNA
,

667 
t˝_c⁄n
->
tc_SND_NXT
))

669 #i‡
DEBUG
 & 256

670 { 
	`whîe
(); 
	`¥ötf
("setting 0wnd_to\n"); }

672 
	`˛ck_u¡imî
(&
t˝_c⁄n
->
tc_mö‹_timî
);

673 i‡(!
t˝_c⁄n
->
tc_0wnd_to
)

675 
	`as£π
 (
t˝_c⁄n
->
tc_πt
);

676 
t˝_c⁄n
->
tc_0wnd_to
=

677 
t˝_c⁄n
->
tc_πt
;

679 
	`˛ck_timî
(&
t˝_c⁄n
->
tc_maj‹_timî
,

680 
	`gë_time
()+
t˝_c⁄n
->
tc_0wnd_to
,

681 
t˝_zîo_wnd_to
, 
t˝_c⁄n
-

682 
t˝_c⁄n_èbÀ
);

686 #i‡
DEBUG
 & 256

687 { 
	`whîe
(); 
	`¥ötf
("not setting 0wnd_to\n"); }

689 i‡(
t˝_c⁄n
->
tc_0wnd_to
)

691 #i‡
DEBUG
 & 256

692 { 
	`whîe
(); 
	`¥ötf
("resetting 0wnd_to\n"); }

694 
t˝_c⁄n
->
tc_0wnd_to
= 0;

695 
t˝_c⁄n
->
tc_SND_TRM
=

696 
t˝_c⁄n
->
tc_SND_UNA
;

697 
	`˛ck_u¡imî
(&
t˝_c⁄n
->

698 
tc_maj‹_timî
);

699 
	`t˝_ª°¨t_wrôe
 (
t˝_c⁄n
);

717 #i‡
DEBUG
 & 256

718 { 
	`whîe
(); 
	`¥ötf
("\n"); }

720 i‡(
t˝_c⁄n
->
tc_SND_UNA
 =t˝_c⁄n->
tc_SND_NXT
)

722 
t˝_c⁄n
->
tc_°©e
)

724 
TCS_FIN_WAIT_1
:

726 
t˝_c⁄n
->
tc_°©e

TCS_FIN_WAIT_2
;

727 
	`as£π
 (
	`t˝_check_c⁄n
(
t˝_c⁄n
));

728 #i‡
DEBUG


729 { 
	`whîe
(); 
	`t˝_wrôe_°©e
(
t˝_c⁄n
); }

732 
TCS_CLOSING
:

733 
t˝_c⁄n
->
tc_°©e

TCS_TIME_WAIT
;

734 
	`as£π
 (
	`t˝_check_c⁄n
(
t˝_c⁄n
));

735 #i‡
DEBUG


736 { 
	`whîe
(); 
	`t˝_wrôe_°©e
(
t˝_c⁄n
); }

738 
	`t˝_£t_time_waô_timî
(
t˝_c⁄n
);

740 
TCS_LAST_ACK
:

741 #i‡
DEBUG
 & 256

742 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_close_connection\n"); }

744 
	`t˝_˛o£_c⁄√˘i⁄
(
t˝_c⁄n
, 
ENOCONN
);

747 i‡(!
t˝_c⁄n
->
tc_maöu£r
)

749 
	`t˝_˛o£_c⁄√˘i⁄
(
t˝_c⁄n
, 
ENOCONN
);

753 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_TIME_WAIT
)

755 
	`t˝_£t_ack_timî
(
t˝_c⁄n
);

756 
	`t˝_£t_time_waô_timî
(
t˝_c⁄n
);

762 #i‡
DEBUG
 & 256

763 { 
	`whîe
(); 
	`¥ötf
("\n"); }

765 
	`t˝_exåa˘_ù›t
(
t˝_c⁄n
, 
ù_hdr
);

766 
	`t˝_exåa˘_t˝›t
(
t˝_c⁄n
, 
t˝_hdr
);

768 i‡(
d©a_Àngth
)

770 i‡(
	`t˝_LEmod4G
(
£g_£q
, 
t˝_c⁄n
->
tc_RCV_NXT
))

771 
	`¥o˚ss_d©a
 (
t˝_c⁄n
, 
t˝_hdr
,

772 
t˝_hdr_Àn
, 
t˝_∑ck
,

773 
d©a_Àngth
);

775 
	`¥o˚ss_adv™˚d_d©a
 (
t˝_c⁄n
,

776 
t˝_hdr
, 
t˝_hdr_Àn
, 
t˝_∑ck
,

777 
d©a_Àngth
);

778 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
)

780 
t˝_c⁄n
->
tc_Êags
 |
TCF_SEND_ACK
;

781 #i‡
DEBUG
 & 256

782 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

783 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

785 
	`t˝_ª°¨t_wrôe
 (
t˝_c⁄n
);

786 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
)

805 #i‡
DEBUG
 & 256

806 { 
	`whîe
(); 
	`¥ötf
("\n"); }

808 i‡((
t˝_hdr_Êags
 & 
THF_FIN
Ë&& 
	`t˝_LEmod4G
(
£g_£q
,

809 
t˝_c⁄n
->
tc_RCV_NXT
))

811 
t˝_c⁄n
->
tc_°©e
)

813 
TCS_SYN_RECEIVED
:

815 
TCS_ESTABLISHED
:

816 
t˝_c⁄n
->
tc_°©e

TCS_CLOSE_WAIT
;

817 
	`as£π
 (
	`t˝_check_c⁄n
(
t˝_c⁄n
));

818 #i‡
DEBUG


819 { 
	`whîe
(); 
	`t˝_wrôe_°©e
(
t˝_c⁄n
); }

822 
TCS_FIN_WAIT_1
:

823 
t˝_c⁄n
->
tc_°©e

TCS_CLOSING
;

824 
	`as£π
 (
	`t˝_check_c⁄n
(
t˝_c⁄n
));

825 #i‡
DEBUG


826 { 
	`whîe
(); 
	`t˝_wrôe_°©e
(
t˝_c⁄n
); }

829 
TCS_FIN_WAIT_2
:

830 
t˝_c⁄n
->
tc_°©e

TCS_TIME_WAIT
;

831 
	`as£π
 (
	`t˝_check_c⁄n
(
t˝_c⁄n
));

832 #i‡
DEBUG


833 { 
	`whîe
(); 
	`t˝_wrôe_°©e
(
t˝_c⁄n
); }

836 
TCS_TIME_WAIT
:

837 
	`t˝_£t_time_waô_timî
(
t˝_c⁄n
);

840 i‡(!(
t˝_c⁄n
->
tc_Êags
 & 
TCF_FIN_RECV
))

842 
t˝_c⁄n
->
tc_RCV_NXT
++;

843 
t˝_c⁄n
->
tc_Êags
 |
TCF_FIN_RECV
;

844 #i‡
DEBUG
 & 256

845 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

846 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

849 
	`t˝_£t_ack_timî
(
t˝_c⁄n
);

850 i‡(
t˝_c⁄n
->
tc_ªadu£r
)

851 
	`t˝_ª°¨t_fd_ªad
(
t˝_c⁄n
);

855 
	`¥ötf
("unknown state:Åcp_conn->tc_state== %d\n",

856 
t˝_c⁄n
->
tc_°©e
);

859 
	`bf_a‰ì
(
ù_∑ck
);

860 
	`bf_a‰ì
(
t˝_∑ck
);

861 
	}
}

864 
PRIVATE
 
	$¥o˚ss_d©a
(
t˝_c⁄n
, 
t˝_hdr
, 
t˝_hdr_Àn
, 
t˝_d©a
,

865 
d©a_Àn
)

866 
t˝_c⁄n_t
 *
t˝_c⁄n
;

867 
t˝_hdr_t
 *
t˝_hdr
;

868 
t˝_hdr_Àn
;

869 
acc_t
 *
t˝_d©a
;

870 
d©a_Àn
;

872 
u32_t
 
lo_£q
, 
hi_£q
, 
urg_£q
, 
£q_ƒ
;

873 
u16_t
 
urg±r
;

874 
t˝_hdr_Êags
;

875 
off£t
;

876 
acc_t
 *
Æl_d©a
, *
tmp_d©a
, *
rcvd_d©a
;

878 #i‡
DEBUG
 & 256

879 { 
	`whîe
(); 
	`¥ötf
("inÖrocess data\n"); }

881 
£q_ƒ

	`¡ohl
(
t˝_hdr
->
th_£q_ƒ
);

882 
urg±r

	`¡ohs
(
t˝_hdr
->
th_urg±r
);

883 
t˝_d©a
)

885 
	`as£π
 (
	`t˝_check_c⁄n
(
t˝_c⁄n
));

886 
Æl_d©a

	`bf_cut
(
t˝_d©a
, 
t˝_hdr_Àn
, 
d©a_Àn
);

887 
t˝_d©a
= 0;

889 
lo_£q

£q_ƒ
;

890 
t˝_hdr_Êags

t˝_hdr
->
th_Êags
 & 
TH_FLAGS_MASK
;

892 i‡(
t˝_hdr_Êags
 & 
THF_URG
)

894 
urg_£q

lo_£q
+ 
urg±r
;

895 
t˝_c⁄n
->
tc_RCV_HI
t˝_c⁄n->
tc_RCV_LO
+

896 
t˝_c⁄n
->
tc_rcv_wnd
+tcp_conn->

897 
tc_urg_wnd
;

898 i‡(
	`t˝_GEmod4G
(
urg_£q
, 
t˝_c⁄n
->
tc_RCV_HI
))

899 
urg_£q

t˝_c⁄n
->
tc_RCV_HI
;

900 i‡(
	`t˝_Gmod4G
(
urg_£q
, 
t˝_c⁄n
->
tc_RCV_UP
))

901 
t˝_c⁄n
->
tc_RCV_UP

urg_£q
;

903 i‡(
t˝_hdr_Êags
 & 
THF_SYN
)

904 
lo_£q
++;

906 i‡(
t˝_hdr_Êags
 & 
THF_PSH
)

908 
t˝_c⁄n
->
tc_Êags
 |
TCF_RCV_PUSH
;

909 #i‡
DEBUG
 & 256

910 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

911 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

915 i‡(
	`t˝_Lmod4G
(
lo_£q
, 
t˝_c⁄n
->
tc_RCV_NXT
))

917 
off£t

t˝_c⁄n
->
tc_RCV_NXT
-
lo_£q
;

918 
tmp_d©a

	`bf_cut
(
Æl_d©a
, 
off£t
, 
d©a_Àn
-

919 
off£t
);

920 
	`bf_a‰ì
(
Æl_d©a
);

921 
lo_£q
 +
off£t
;

922 
d©a_Àn
 -
off£t
;

923 
Æl_d©a

tmp_d©a
;

924 
tmp_d©a
= 0;

926 
	`as£π
 (
lo_£q
 =
t˝_c⁄n
->
tc_RCV_NXT
);

928 
hi_£q

lo_£q
+
d©a_Àn
;

929 i‡(
	`t˝_Gmod4G
(
hi_£q
, 
t˝_c⁄n
->
tc_RCV_HI
))

931 
d©a_Àn

t˝_c⁄n
->
tc_RCV_HI
-
lo_£q
;

932 
tmp_d©a

	`bf_cut
(
Æl_d©a
, 0, 
d©a_Àn
);

933 
	`bf_a‰ì
(
Æl_d©a
);

934 
Æl_d©a

tmp_d©a
;

935 
hi_£q

lo_£q
+
d©a_Àn
;

936 
t˝_hdr_Êags
 &~
THF_FIN
;

938 
	`as£π
 (
	`t˝_LEmod4G
 (
hi_£q
, 
t˝_c⁄n
->
tc_RCV_HI
));

940 #i‡
DEBUG
 & 256

941 { 
	`whîe
(); 
	`¥ötf
("inÖrocess data:Üo_seq= %lu, hi_seq= %lu\n",

942 
lo_£q
, 
hi_£q
); }

944 
rcvd_d©a

t˝_c⁄n
->
tc_rcvd_d©a
;

945 
t˝_c⁄n
->
tc_rcvd_d©a
= 0;

946 
tmp_d©a

	`bf_≠≥nd
(
rcvd_d©a
, 
Æl_d©a
);

947 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
)

949 #i‡
DEBUG


950 { 
	`whîe
(); 
	`¥ötf
("connection closed while inuse\n"); }

952 
	`bf_a‰ì
(
tmp_d©a
);

955 
t˝_c⁄n
->
tc_rcvd_d©a

tmp_d©a
;

956 
t˝_c⁄n
->
tc_RCV_NXT

hi_£q
;

958 
	`as£π
 (
t˝_c⁄n
->
tc_RCV_LO
 + 
	`bf_bufsize
(tcp_conn->

959 
tc_rcvd_d©a
Ë=
t˝_c⁄n
->
tc_RCV_NXT
);

961 i‡(
t˝_hdr_Êags
 & 
THF_FIN
)

963 #i‡
DEBUG


964 { 
	`whîe
(); 
	`¥ötf
("gotá FIN\n"); }

966 
t˝_c⁄n
->
tc_RCV_NXT
++;

967 
t˝_c⁄n
->
tc_Êags
 |
TCF_FIN_RECV
;

968 #i‡
DEBUG
 & 16

969 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

970 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

973 
	`t˝_£t_ack_timî
(
t˝_c⁄n
);

974 
t˝_c⁄n
->
tc_rcv_queue
)

976 
tmp_d©a

t˝_c⁄n
->
tc_rcv_queue
;

977 
	`as£π
 (
tmp_d©a
->
acc_Àngth
 >
TCP_MIN_HDR_SIZE
);

978 
t˝_hdr
(
t˝_hdr_t
 *)
	`±r2acc_d©a
(
tmp_d©a
);

979 
lo_£q

t˝_hdr
->
th_£q_ƒ
;

981 i‡(
	`t˝_Gmod4G
(
lo_£q
, 
t˝_c⁄n
->
tc_RCV_NXT
))

983 
t˝_hdr_Àn
(
t˝_hdr
->
th_d©a_off
 &

984 
TH_DO_MASK
) >> 2;

985 
d©a_Àn

t˝_hdr
->
th_chksum
-
t˝_hdr_Àn
;

986 i‡(
	`t˝_LEmod4G
(
lo_£q
+
d©a_Àn
, 
t˝_c⁄n
->

987 
tc_RCV_NXT
))

989 
t˝_c⁄n
->
tc_rcv_queue

tmp_d©a
->

990 
acc_ext_lök
;

991 
	`bf_a‰ì
(
tmp_d©a
);

994 
t˝_d©a

tmp_d©a
;

995 
£q_ƒ

t˝_hdr
->
th_£q_ƒ
;

996 
urg±r

t˝_hdr
->
th_urg±r
;

1000 
	`as£π
 (
	`t˝_check_c⁄n
(
t˝_c⁄n
));

1001 i‡(
t˝_c⁄n
->
tc_ªadu£r
)

1002 
	`t˝_ª°¨t_fd_ªad
(
t˝_c⁄n
);

1003 i‡(!
t˝_c⁄n
->
tc_maöu£r
)

1005 #i‡
DEBUG


1006 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_close_connection\n"); }

1008 
	`t˝_˛o£_c⁄√˘i⁄
 (
t˝_c⁄n
, 
ENOCONN
);

1010 
	`as£π
 (
	`t˝_check_c⁄n
(
t˝_c⁄n
));

1011 
	}
}

1013 
PRIVATE
 
	$¥o˚ss_adv™˚d_d©a
(
t˝_c⁄n
, 
t˝_hdr
, 
t˝_hdr_Àn
,

1014 
t˝_d©a
, 
d©a_Àn
)

1015 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1016 
t˝_hdr_t
 *
t˝_hdr
;

1017 
t˝_hdr_Àn
;

1018 
acc_t
 *
t˝_d©a
;

1019 
d©a_Àn
;

1021 
u32_t
 
£g_£q
, 
£g_hi
;

1022 
u16_t
 
£g_up
;

1023 
acc_t
 *
hdr_acc
, *
√xt_acc
, **
èû_acc_±r
, *
hód_acc
, *
d©a_acc
,

1024 *
tmp_acc
;

1025 
t˝_hdr_t
 *
tmp_hdr
;

1026 
tmp_hdr_Àn
;

1028 #i‡
DEBUG
 & 256

1029 { 
	`whîe
(); 
	`¥ötf
 ("processingádvanced data\n"); }

1031 
hdr_acc

	`bf_memªq
(
t˝_hdr_Àn
);

1032 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
)

1034 #i‡
DEBUG


1035 { 
	`whîe
(); 
	`¥ötf
("connection closed while inuse\n"); }

1037 
	`bf_a‰ì
(
hdr_acc
);

1040 
	`as£π
 (
hdr_acc
->
acc_Àngth
 =
t˝_hdr_Àn
);

1041 
tmp_hdr
(
t˝_hdr_t
 *)
	`±r2acc_d©a
(
hdr_acc
);

1042 #i‡
DEBUG
 & 256

1043 { 
	`whîe
(); 
	`¥ötf
("doing memcpy\n"); }

1045 
	`mem˝y
 ((*)
tmp_hdr
, (*)
t˝_hdr
, 
t˝_hdr_Àn
);

1046 
t˝_hdr

tmp_hdr
;

1048 
d©a_acc

	`bf_cut
 (
t˝_d©a
, 
t˝_hdr_Àn
, 
d©a_Àn
);

1050 
£g_£q

	`¡ohl
(
t˝_hdr
->
th_£q_ƒ
);

1051 
t˝_hdr
->
th_£q_ƒ

£g_£q
;

1053 i‡(
t˝_hdr
->
th_Êags
 & 
THF_URG
)

1055 
£g_up

	`¡ohs
(
t˝_hdr
->
th_urg±r
);

1056 
t˝_hdr
->
th_urg±r

£g_up
;

1058 
t˝_c⁄n
->
tc_RCV_HI
t˝_c⁄n->
tc_RCV_LO
+

1059 
t˝_c⁄n
->
tc_rcv_wnd
+t˝_c⁄n->
tc_urg_wnd
;

1062 
	`as£π
 (!(
t˝_hdr
->
th_Êags
 & 
THF_SYN
));

1063 
	`as£π
 (
	`t˝_Gmod4G
(
£g_£q
, 
t˝_c⁄n
->
tc_RCV_NXT
));

1065 
t˝_hdr
->
th_Êags
 &~
THF_FIN
;

1068 
£g_hi

£g_£q
 + 
d©a_Àn
;

1070 i‡(
	`t˝_Gmod4G
(
£g_hi
, 
t˝_c⁄n
->
tc_RCV_HI
))

1072 
£g_hi

t˝_c⁄n
->
tc_RCV_HI
;

1073 
d©a_Àn

£g_hi
-
£g_£q
;

1074 i‡(!
d©a_Àn
)

1076 
	`bf_a‰ì
(
hdr_acc
);

1077 
	`bf_a‰ì
(
d©a_acc
);

1080 #i‡
DEBUG


1081 { 
	`whîe
(); 
	`¥ötf
("CuttingÖacket\n"); }

1083 
tmp_acc

	`bf_cut
(
d©a_acc
, 0, 
d©a_Àn
);

1084 
	`bf_a‰ì
(
d©a_acc
);

1085 
d©a_acc

tmp_acc
;

1087 
hdr_acc
->
acc_√xt

d©a_acc
;

1088 
hdr_acc
->
acc_ext_lök
= 0;

1090 
hód_acc

t˝_c⁄n
->
tc_rcv_queue
;

1091 
t˝_c⁄n
->
tc_rcv_queue
= 0;

1092 
èû_acc_±r
= 0;

1093 
√xt_acc

hód_acc
;

1095 
√xt_acc
)

1097 
	`as£π
 (
√xt_acc
->
acc_Àngth
 >
TCP_MIN_HDR_SIZE
);

1098 
tmp_hdr
(
t˝_hdr_t
 *)
	`±r2acc_d©a
(
√xt_acc
);

1099 i‡(
	`t˝_Lmod4G
(
£g_£q
, 
tmp_hdr
->
th_£q_ƒ
))

1101 #i‡
DEBUG
 & 256

1102 { 
	`whîe
(); 
	`¥ötf
("calling merge_packs\n"); }

1104 
√xt_acc

	`mîge_∑cks
(
hdr_acc
,Çext_acc);

1105 
hdr_acc
= 0;

1106 i‡(
èû_acc_±r
)

1108 
	`as£π
 (*
èû_acc_±r
);

1109 (*
èû_acc_±r
)->
acc_ext_lök
= 0;

1110 #i‡
DEBUG
 & 256

1111 { 
	`whîe
(); 
	`¥ötf
("calling merge_packs\n"); }

1113 *
èû_acc_±r

	`mîge_∑cks
(

1114 *
èû_acc_±r
, 
√xt_acc
);

1117 
hód_acc

√xt_acc
;

1120 i‡(!
èû_acc_±r
)

1121 
èû_acc_±r
&
hód_acc
;

1123 
èû_acc_±r
&(*èû_acc_±r)->
acc_ext_lök
;

1124 
√xt_acc
√xt_acc->
acc_ext_lök
;

1126 i‡(
hdr_acc
)

1128 
√xt_acc

hdr_acc
;

1129 
hdr_acc
= 0;

1130 i‡(
èû_acc_±r
)

1132 i‡(*
èû_acc_±r
)

1134 (*
èû_acc_±r
)->
acc_ext_lök
= 0;

1135 #i‡
DEBUG
 & 256

1136 { 
	`whîe
(); 
	`¥ötf
("calling merge_packs\n"); }

1138 *
èû_acc_±r

	`mîge_∑cks
(

1139 *
èû_acc_±r
, 
√xt_acc
);

1142 *
èû_acc_±r

√xt_acc
;

1145 
hód_acc

√xt_acc
;

1147 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
)

1149 
hód_acc
)

1151 
√xt_acc

hód_acc
->
acc_ext_lök
;

1152 
	`bf_a‰ì
(
hód_acc
);

1153 
hód_acc

√xt_acc
;

1157 
t˝_c⁄n
->
tc_rcv_queue

hód_acc
;

1158 
	}
}

1160 
PRIVATE
 
acc_t
 *
	$mîge_∑cks
(
fú°
, 
√xt
)

1161 
acc_t
 *
fú°
;

1162 
acc_t
 *
√xt
;

1164 
t˝_hdr_t
 *
fú°_hdr
, *
√xt_hdr
;

1165 
fú°_hdr_Àn
, 
√xt_hdr_Àn
, 
fú°_d©a_Àn
, 
√xt_d©a_Àn
;

1166 
acc_t
 *
√xt_acc
, *
tmp_acc
;

1168 
	`as£π
 (
fú°
->
acc_Àngth
 >
TCP_MIN_HDR_SIZE
);

1169 
	`as£π
 (
√xt
->
acc_Àngth
 >
TCP_MIN_HDR_SIZE
);

1171 
fú°_hdr
(
t˝_hdr_t
 *)
	`±r2acc_d©a
(
fú°
);

1172 
√xt_hdr
(
t˝_hdr_t
 *)
	`±r2acc_d©a
(
√xt
);

1174 
fú°_hdr_Àn
(
fú°_hdr
->
th_d©a_off
 & 
TH_DO_MASK
) >>2;

1175 
√xt_hdr_Àn
(
√xt_hdr
->
th_d©a_off
 & 
TH_DO_MASK
) >> 2;

1177 
fú°_d©a_Àn

fú°_hdr
->
th_chksum
-
fú°_hdr_Àn
;

1178 
√xt_d©a_Àn

√xt_hdr
->
th_chksum
-
√xt_hdr_Àn
;

1180 
	`as£π
 (
	`t˝_LEmod4G
(
fú°_hdr
->
th_£q_ƒ
, 
√xt_hdr
->th_seq_nr));

1181 
	`as£π
 (
fú°_hdr_Àn
 + 
fú°_d©a_Àn
 =
	`bf_bufsize
(
fú°
));

1182 #i‡
DEBUG


1183 i‡(
√xt_hdr_Àn
 + 
√xt_d©a_Àn
 !
	`bf_bufsize
(
√xt
))

1184 { 
	`ù_∑nic
(–"Áè»îr‹: %d + %d !%d\n", 
√xt_hdr_Àn
, 
√xt_d©a_Àn
,

1185 
	`bf_bufsize
(
√xt
) )); }

1187 
	`as£π
 (
√xt_hdr_Àn
 + 
√xt_d©a_Àn
 =
	`bf_bufsize
(
√xt
));

1189 i‡(
	`t˝_Lmod4G
(
fú°_hdr
->
th_£q_ƒ
+
fú°_d©a_Àn
,

1190 
√xt_hdr
->
th_£q_ƒ
))

1192 
fú°
->
acc_ext_lök

√xt
;

1193  
fú°
;

1195 i‡(
fú°_hdr
->
th_£q_ƒ
 =
√xt_hdr
->th_seq_nr)

1196 i‡(
fú°_d©a_Àn
 <
√xt_d©a_Àn
)

1198 
	`bf_a‰ì
(
fú°
);

1199  
√xt
;

1203 
fú°
->
acc_ext_lök

√xt
->acc_ext_link;

1204 
	`bf_a‰ì
(
√xt
);

1205  
fú°
;

1207 i‡(
	`t˝_GEmod4G
(
fú°_hdr
->
th_£q_ƒ
+
fú°_d©a_Àn
,

1208 
√xt_hdr
->
th_£q_ƒ
+
√xt_d©a_Àn
))

1210 
fú°
->
acc_ext_lök

√xt
->acc_ext_link;

1211 
	`bf_a‰ì
(
√xt
);

1212  
fú°
;

1214 
fú°_d©a_Àn

√xt_hdr
->
th_£q_ƒ
-
fú°_hdr
->th_seq_nr;

1215 
fú°_hdr
->
th_chksum

fú°_d©a_Àn
+
fú°_hdr_Àn
+

1216 
√xt_d©a_Àn
;

1217 
tmp_acc

	`bf_cut
(
fú°
, 0, 
fú°_hdr_Àn
 + 
fú°_d©a_Àn
);

1218 
	`bf_a‰ì
(
fú°
);

1219 
fú°

tmp_acc
;

1221 i‡(
√xt_hdr
->
th_Êags
 & 
THF_PSH
)

1222 
fú°_hdr
->
th_Êags
 |
THF_PSH
;

1223 i‡(
√xt_hdr
->
th_Êags
 & 
THF_URG
)

1225 i‡(!(
fú°_hdr
->
th_Êags
 & 
THF_URG
))

1227 
fú°_hdr
->
th_Êags
 |
THF_URG
;

1228 
fú°_hdr
->
th_urg±r

√xt_hdr
->
th_£q_ƒ
+

1229 
√xt_hdr
->
th_urg±r
-

1230 
fú°_hdr
->
th_£q_ƒ
;

1232 i‡(
√xt_hdr
->
th_£q_ƒ
+√xt_hdr->
th_urg±r
-

1233 
fú°_hdr
->
th_£q_ƒ
 > fú°_hdr->
th_urg±r
)

1234 
fú°_hdr
->
th_urg±r

√xt_hdr
->
th_£q_ƒ
+

1235 
√xt_hdr
->
th_urg±r
-

1236 
fú°_hdr
->
th_£q_ƒ
;

1239 
√xt_acc

√xt
->
acc_ext_lök
;

1240 
tmp_acc

	`bf_cut
(
√xt
, 
√xt_hdr_Àn
 ,
√xt_d©a_Àn
);

1241 
	`bf_a‰ì
(
√xt
);

1242 
√xt

tmp_acc
;

1243 
tmp_acc

	`bf_≠≥nd
 (
fú°
, 
√xt
);

1244 
tmp_acc
->
acc_ext_lök

√xt_acc
;

1245  
tmp_acc
;

1246 
	}
}

1248 
PRIVATE
 
	$¸óã_RST
(
t˝_c⁄n
, 
ù_hdr
, 
t˝_hdr
)

1249 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1250 
ù_hdr_t
 *
ù_hdr
;

1251 
t˝_hdr_t
 *
t˝_hdr
;

1253 
acc_t
 *
tmp_ù›t
, *
tmp_t˝›t
;

1254 
ù_hdr›t_t
 
ù_hdr›t
;

1255 
t˝_hdr›t_t
 
t˝_hdr›t
;

1256 
acc_t
 *
RST_acc
;

1257 
ù_hdr_t
 *
RST_ù_hdr
;

1258 
t˝_hdr_t
 *
RST_t˝_hdr
;

1259 *
±r2RSThdr
;

1260 
size_t
 
∑ck_size
;

1262 
tmp_ù›t

t˝_c⁄n
->
tc_ªmù›t
;

1263 i‡(
tmp_ù›t
)

1264 
tmp_ù›t
->
acc_lökC
++;

1265 
tmp_t˝›t

t˝_c⁄n
->
tc_ªmt˝›t
;

1266 i‡(
tmp_t˝›t
)

1267 
tmp_t˝›t
->
acc_lökC
++;

1269 
	`t˝_exåa˘_ù›t
 (
t˝_c⁄n
, 
ù_hdr
);

1270 
	`t˝_exåa˘_t˝›t
 (
t˝_c⁄n
, 
t˝_hdr
);

1272 
RST_acc

	`t˝_make_hódî
 (
t˝_c⁄n
, &
RST_ù_hdr
, &
RST_t˝_hdr
,

1273 (
acc_t
 *)0);

1274 i‡(!
RST_acc
)

1276 #i‡
DEBUG


1277 { 
	`whîe
(); 
	`¥ötf
("connection closed while inuse\n"); }

1282 i‡(
t˝_c⁄n
->
tc_ªmù›t
)

1283 
	`bf_a‰ì
(
t˝_c⁄n
->
tc_ªmù›t
);

1284 
t˝_c⁄n
->
tc_ªmù›t

tmp_ù›t
;

1285 i‡(
t˝_c⁄n
->
tc_ªmt˝›t
)

1286 
	`bf_a‰ì
(
t˝_c⁄n
->
tc_ªmt˝›t
);

1287 
t˝_c⁄n
->
tc_ªmt˝›t

tmp_t˝›t
;

1289 
RST_ù_hdr
->
ih_§c

ù_hdr
->
ih_d°
;

1290 
RST_ù_hdr
->
ih_d°

ù_hdr
->
ih_§c
;

1292 
RST_t˝_hdr
->
th_§˝‹t

t˝_hdr
->
th_d°p‹t
;

1293 
RST_t˝_hdr
->
th_d°p‹t

t˝_hdr
->
th_§˝‹t
;

1294 i‡(
t˝_hdr
->
th_Êags
 & 
THF_ACK
)

1296 
RST_t˝_hdr
->
th_£q_ƒ

t˝_hdr
->
th_ack_ƒ
;

1297 
RST_t˝_hdr
->
th_Êags

THF_RST
;

1301 
RST_t˝_hdr
->
th_£q_ƒ
= 0;

1302 
RST_t˝_hdr
->
th_ack_ƒ

	`ht⁄l
(
	`¡ohl
(
t˝_hdr
->
th_£q_ƒ
)+

1303 
t˝_hdr
->
th_chksum
-(—˝_hdr->
th_d©a_off
 &

1304 
TH_DO_MASK
Ë>> 2)+ (
t˝_hdr
->
th_Êags
 &

1305 
THF_SYN
 ? 1 : 0Ë+ (
t˝_hdr
->
th_Êags
 &

1306 
THF_FIN
 ? 1 : 0));

1307 
RST_t˝_hdr
->
th_Êags

THF_RST
|
THF_ACK
;

1310 
∑ck_size

	`bf_bufsize
(
RST_acc
);

1311 
RST_ù_hdr
->
ih_Àngth

	`ht⁄s
(
∑ck_size
);

1312 
RST_t˝_hdr
->
th_wödow

	`ht⁄s
(
t˝_c⁄n
->
tc_rcv_wnd
);

1313 
RST_t˝_hdr
->
th_chksum
= 0;

1314 
RST_t˝_hdr
->
th_chksum
~
	`t˝_∑ck_⁄eCsum
 (
RST_acc
, 
∑ck_size
);

1316 i‡(
t˝_c⁄n
->
tc_‰ag2£nd
)

1317 
	`bf_a‰ì
(
t˝_c⁄n
->
tc_‰ag2£nd
);

1318 
t˝_c⁄n
->
tc_‰ag2£nd

RST_acc
;

1319 
	}
}

1321 
PUBLIC
 
	$t˝_ª°¨t_fd_ªad
 (
t˝_c⁄n
)

1322 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1324 
t˝_fd_t
 *
√w_fd
, *
hi_fd
, *
urgít_fd
, *
n‹mÆ_fd
, *
t˝_fd
;

1326 #i‡
DEBUG
 & 256

1327 { 
	`whîe
(); 
	`¥ötf
("tcp_restart_fd_read called\n"); }

1331 
t˝_fd

t˝_c⁄n
->
tc_ªadu£r
;

1333 i‡(
t˝_fd
)

1334 
	`fd_ªad
 (
t˝_fd
);

1336 
t˝_fd
&
t˝_fd_èbÀ
[
TCP_FD_NR
-1];

1338 i‡(!
t˝_c⁄n
->
tc_ªadu£r
)

1340 
urgít_fd
= 0;

1341 
n‹mÆ_fd
= 0;

1342 
√w_fd

t˝_fd
+1, 
hi_fd
=

1343 &
t˝_fd_èbÀ
[
TCP_FD_NR
]; 
√w_fd
<
hi_fd
;

1344 
√w_fd
++)

1345 
	`swôch_ªad_fd
(
t˝_c⁄n
, 
√w_fd
,

1346 &
urgít_fd
, &
n‹mÆ_fd
);

1347 
√w_fd

t˝_fd_èbÀ
, 
hi_fd

t˝_fd
+1;

1348 
√w_fd
 < 
hi_fd
;Çew_fd++)

1349 
	`swôch_ªad_fd
(
t˝_c⁄n
, 
√w_fd
,

1350 &
urgít_fd
, &
n‹mÆ_fd
);

1351 i‡(
urgít_fd
)

1352 
t˝_fd

urgít_fd
;

1354 
t˝_fd

n‹mÆ_fd
;

1355 
t˝_c⁄n
->
tc_ªadu£r

t˝_fd
;

1359 } 
t˝_c⁄n
->
tc_ªadu£r
);

1360 
	}
}

1362 
PRIVATE
 
	$swôch_ªad_fd
 (
t˝_c⁄n
, 
√w_fd
, 
ªf_urg_fd
,

1363 
ªf_n‹m_fd
)

1364 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1365 
t˝_fd_t
 *
√w_fd
, **
ªf_urg_fd
, **
ªf_n‹m_fd
;

1367 i‡(!(
√w_fd
->
tf_Êags
 & 
TFF_INUSE
))

1369 i‡(
√w_fd
->
tf_c⁄n
 !
t˝_c⁄n
)

1371 i‡(!(
√w_fd
->
tf_Êags
 & 
TFF_READ_IP
))

1373 i‡(
√w_fd
->
tf_Êags
 & 
TFF_RECV_URG
)

1375 i‡(!*
ªf_urg_fd
)

1376 *
ªf_urg_fd

√w_fd
;

1380 i‡(!*
ªf_n‹m_fd
)

1381 *
ªf_n‹m_fd

√w_fd
;

1383 
	}
}

1385 
PRIVATE
 
	$fd_ªad
(
t˝_fd
)

1386 
t˝_fd_t
 *
t˝_fd
;

1388 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1389 
size_t
 
d©a_size
, 
ªad_size
;

1390 
acc_t
 * 
d©a
;

1391 
urg
, 
ªsu…
;

1392 
m‹e2wrôe
;

1394 
m‹e2wrôe

FALSE
;

1395 
t˝_c⁄n

t˝_fd
->
tf_c⁄n
;

1397 
	`as£π
 (
t˝_fd
->
tf_Êags
 & 
TFF_READ_IP
);

1398 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
)

1400 
t˝_c⁄n
->
tc_ªadu£r
= 0;

1401 #i‡
DEBUG


1402 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_reply_read\n"); }

1404 i‡(
t˝_fd
->
tf_ªad_off£t
)

1405 
	`t˝_ª∂y_ªad
 (
t˝_fd
,Å˝_fd->
tf_ªad_off£t
);

1407 
	`t˝_ª∂y_ªad
 (
t˝_fd
, 
t˝_c⁄n
->
tc_îr‹
);

1411 #i‡
URG_PROPERLY_IMPLEMENTED


1412 
urg
(
	`t˝_GEmod4G
(
t˝_c⁄n
->
tc_RCV_UP
,Å˝_c⁄n->
tc_RCV_LO
) &&

1413 
	`t˝_Lmod4G
(
t˝_c⁄n
->
tc_RCV_UP
,Å˝_c⁄n->
tc_RCV_NXT
));

1415 
	#urg
 0

	)

1417 i‡(
urg
 && !(
t˝_fd
->
tf_Êags
 & 
TFF_RECV_URG
))

1419 
t˝_c⁄n
->
tc_ªadu£r
= 0;

1420 #i‡
DEBUG


1421 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_reply_read\n"); }

1423 i‡(
t˝_fd
->
tf_ªad_off£t
)

1424 
	`t˝_ª∂y_ªad
 (
t˝_fd
,Å˝_fd->
tf_ªad_off£t
);

1426 
	`t˝_ª∂y_ªad
 (
t˝_fd
, 
EURG
);

1429 i‡(!
urg
 && (
t˝_fd
->
tf_Êags
 & 
TFF_RECV_URG
))

1431 
t˝_c⁄n
->
tc_ªadu£r
= 0;

1432 #i‡
DEBUG


1433 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_reply_read\n"); }

1435 i‡(
t˝_fd
->
tf_ªad_off£t
)

1436 
	`t˝_ª∂y_ªad
 (
t˝_fd
,Å˝_fd->
tf_ªad_off£t
);

1438 
	`t˝_ª∂y_ªad
(
t˝_fd
, 
ENOURG
);

1441 
d©a_size

t˝_c⁄n
->
tc_RCV_NXT
-t˝_c⁄n->
tc_RCV_LO
;

1442 i‡(
t˝_c⁄n
->
tc_Êags
 & 
TCF_FIN_RECV
)

1443 
d©a_size
--;

1444 i‡(
urg
)

1445 
ªad_size

t˝_c⁄n
->
tc_RCV_UP
+1-t˝_c⁄n->
tc_RCV_LO
;

1447 
ªad_size

d©a_size
;

1449 i‡(
ªad_size
>
t˝_fd
->
tf_ªad_cou¡
)

1450 
ªad_size

t˝_fd
->
tf_ªad_cou¡
;

1452 i‡(
ªad_size
)

1454 i‡(
ªad_size
 =
d©a_size
)

1455 
d©a

	`bf_du∑cc
(
t˝_c⁄n
->
tc_rcvd_d©a
);

1457 
d©a

	`bf_cut
(
t˝_c⁄n
->
tc_rcvd_d©a
, 0, 
ªad_size
);

1458 
ªsu…
(*
t˝_fd
->
tf_put_u£rd©a
Ë—˝_fd->
tf_§fd
,

1459 
t˝_fd
->
tf_ªad_off£t
, 
d©a
, 
FALSE
);

1460 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
)

1462 #i‡
DEBUG


1463 { 
	`whîe
(); 
	`¥ötf
("connection closed while inuse\n"); }

1467 i‡(
ªsu…
<0)

1469 
t˝_c⁄n
->
tc_ªadu£r
= 0;

1470 #i‡
DEBUG


1471 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_reply_read\n"); }

1473 i‡(
t˝_fd
->
tf_ªad_off£t
)

1474 
	`t˝_ª∂y_ªad
(
t˝_fd
,Åcp_fd->

1475 
tf_ªad_off£t
);

1477 
	`t˝_ª∂y_ªad
(
t˝_fd
, 
ªsu…
);

1480 
t˝_fd
->
tf_ªad_off£t
 +
ªad_size
;

1481 
t˝_fd
->
tf_ªad_cou¡
 -
ªad_size
;

1483 i‡(
d©a_size
 =
ªad_size
)

1485 
	`bf_a‰ì
(
t˝_c⁄n
->
tc_rcvd_d©a
);

1486 
t˝_c⁄n
->
tc_rcvd_d©a
= 0;

1490 
d©a

t˝_c⁄n
->
tc_rcvd_d©a
;

1491 
t˝_c⁄n
->
tc_rcvd_d©a

	`bf_cut
(
d©a
,

1492 
ªad_size
, 
d©a_size
-read_size);

1493 
	`bf_a‰ì
(
d©a
);

1495 
t˝_c⁄n
->
tc_RCV_LO
 +
ªad_size
;

1496 
d©a_size
 -
ªad_size
;

1498 i‡(
t˝_c⁄n
->
tc_RCV_HI
-t˝_c⁄n->
tc_RCV_LO
 < (tcp_conn->

1499 
tc_rcv_wnd
 >> 2))

1501 
t˝_c⁄n
->
tc_RCV_HI
t˝_c⁄n->
tc_RCV_LO
 +

1502 
t˝_c⁄n
->
tc_rcv_wnd
;

1503 
t˝_c⁄n
->
tc_Êags
 |
TCF_SEND_ACK
;

1504 #i‡
DEBUG
 & 256

1505 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

1506 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

1508 
m‹e2wrôe

TRUE
;

1510 i‡(!
d©a_size
 && (
t˝_c⁄n
->
tc_Êags
 & 
TCF_RCV_PUSH
))

1512 
t˝_c⁄n
->
tc_Êags
 &~
TCF_RCV_PUSH
;

1513 #i‡
DEBUG
 & 256

1514 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

1515 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

1517 i‡(
t˝_fd
->
tf_ªad_off£t
)

1519 
t˝_c⁄n
->
tc_ªadu£r
= 0;

1520 #i‡
DEBUG
 & 256

1521 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_reply_read\n"); }

1523 
	`t˝_ª∂y_ªad
 (
t˝_fd
,Å˝_fd->
tf_ªad_off£t
);

1524 i‡(
m‹e2wrôe
)

1525 
	`t˝_ª°¨t_wrôe
(
t˝_c⁄n
);

1529 i‡((
t˝_c⁄n
->
tc_Êags
 & 
TCF_FIN_RECV
) ||

1530 !
t˝_fd
->
tf_ªad_cou¡
)

1532 
t˝_c⁄n
->
tc_ªadu£r
= 0;

1533 #i‡
DEBUG
 & 256

1534 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_reply_read\n"); }

1536 
	`t˝_ª∂y_ªad
 (
t˝_fd
,Å˝_fd->
tf_ªad_off£t
);

1537 i‡(
m‹e2wrôe
)

1538 
	`t˝_ª°¨t_wrôe
(
t˝_c⁄n
);

1541 i‡(
m‹e2wrôe
)

1542 
	`t˝_ª°¨t_wrôe
(
t˝_c⁄n
);

1543 
	}
}

	@tcp_send.c

5 
	~"öë.h
"

6 
	~"buf.h
"

7 
	~"˛ock.h
"

8 
	~"ty≥.h
"

10 
	~"as£π.h
"

11 
	~"ù.h
"

12 
	~"t˝.h
"

13 
	~"t˝_öt.h
"

15 
INIT_PANIC
();

17 #i‡
DEBUG


18 
	~"t˝_dñay.h
"

20 
	gt˝_dñay_⁄
;

21 
u32_t
 
	gt˝_dñay
;

24 #i‡
DEBUG
 & 2

25 
	#d_bufcut
 1

	)

28 
FORWARD
 
wrôe2p‹t
 
ARGS
(–
t˝_p‹t_t
 *
t˝_p‹t
,

29 
acc_t
 *
d©a
 ));

30 
FORWARD
 
maj‹_to
 
ARGS
(–
c⁄n
, 
timî
 *timer ));

31 
FORWARD
 
mö‹_to
 
ARGS
(–
c⁄n
, 
timî
 *timer ));

32 
FORWARD
 
ack_to
 
ARGS
(–
c⁄n
, 
timî
 *timer ));

33 
FORWARD
 
time_waô_to
 
ARGS
(–
c⁄n
,

34 
timî
 *timer ));

35 
FORWARD
 
acc_t
 *
make_∑ck
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
 ));

36 
FORWARD
 
fd_wrôe
 
ARGS
(–
t˝_fd_t
 *
t˝_fd
 ));

37 
FORWARD
 
swôch_wrôe_fd
 
ARGS
(–
t˝_c⁄n_t
 *
t˝_c⁄n
,

38 
t˝_fd_t
 *
√w_fd
,Å˝_fd_à**
ªf_urgít_fd
,

39 
t˝_fd_t
 **
ªf_n‹mÆ_fd
,Å˝_fd_à**
ªf_shutdown_fd
 ));

40 
FORWARD
 
t˝_ª°¨t_wrôe_c⁄n
 
ARGS
 (–
t˝_c⁄n_t
 *
t˝_c⁄n
 ));

41 #i‡
DEBUG


42 
FORWARD
 
t˝_dñay_to
 
ARGS
(–
ªf
, 
timî_t
 *
timî
 ));

45 
PUBLIC
 
	$t˝_ª°¨t_wrôe
 (
t˝_c⁄n
)

46 
t˝_c⁄n_t
 *
t˝_c⁄n
;

48 
t˝_p‹t_t
 *
t˝_p‹t
;

50 #i‡
DEBUG
 & 256

51 { 
	`whîe
(); 
	`¥ötf
("inÅcp_restart_write\n"); }

53 
	`as£π
 (
t˝_c⁄n
->
tc_Êags
 & 
TCF_INUSE
);

55 
t˝_c⁄n
->
tc_Êags
 |
TCF_MORE2WRITE
;

56 #i‡
DEBUG
 & 256

57 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

58 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

60 
t˝_p‹t

t˝_c⁄n
->
tc_p‹t
;

62 
t˝_p‹t
->
ç_Êags
 |
TPF_MORE2WRITE
;

64 i‡(
t˝_p‹t
->
ç_Êags
 & 
TPF_WRITE_IP
)

67 
	`t˝_ª°¨t_wrôe_p‹t
 (
t˝_p‹t
);

68 
	}
}

70 
PUBLIC
 
	$t˝_ª°¨t_wrôe_p‹t
 (
t˝_p‹t
)

71 
t˝_p‹t_t
 *
t˝_p‹t
;

73 
t˝_c⁄n_t
 *
t˝_c⁄n
, *
hi_c⁄n
;

75 #i‡
DEBUG
 & 256

76 { 
	`whîe
(); 
	`¥ötf
("inÅcp_restart_write_port\n"); }

78 
	`as£π
 (
t˝_p‹t
->
ç_Êags
 & 
TPF_MORE2WRITE
);

79 
	`as£π
 (!(
t˝_p‹t
->
ç_Êags
 & 
TPF_WRITE_IP
));

81 
t˝_p‹t
->
ç_Êags
 & 
TPF_MORE2WRITE
)

83 
t˝_p‹t
->
ç_Êags
 &~
TPF_MORE2WRITE
;

84 
t˝_c⁄n

t˝_c⁄n_èbÀ
, 
hi_c⁄n
=

85 &
t˝_c⁄n_èbÀ
[
TCP_CONN_NR
]; 
t˝_c⁄n
<
hi_c⁄n
;

86 
t˝_c⁄n
++)

88 i‡((
t˝_c⁄n
->
tc_Êags
 & (
TCF_INUSE
|

89 
TCF_MORE2WRITE
)Ë!(
TCF_INUSE
|

90 
TCF_MORE2WRITE
))

92 i‡(
t˝_c⁄n
->
tc_p‹t
 !
t˝_p‹t
)

94 
t˝_c⁄n
->
tc_Êags
 &~
TCF_MORE2WRITE
;

95 #i‡
DEBUG
 & 256

96 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

97 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

99 #i‡
DEBUG
 & 256

100 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_restart_write_conn(&tcp_conn_table[%d])\n",

101 
t˝_c⁄n
 - 
t˝_c⁄n_èbÀ
); }

103 
	`t˝_ª°¨t_wrôe_c⁄n
 (
t˝_c⁄n
);

104 i‡(
t˝_p‹t
->
ç_Êags
 & 
TPF_WRITE_IP
)

106 #i‡
DEBUG
 & 256

107 { 
	`whîe
(); 
	`¥ötf
("setting TCF_MORE2WRITE because of TPF_WRITE_IP\n"); }

109 
t˝_p‹t
->
ç_Êags
 |
TPF_MORE2WRITE
;

112 
t˝_p‹t
->
ç_Êags
 |
TPF_MORE2WRITE
;

115 
	}
}

117 
PRIVATE
 
	$t˝_ª°¨t_wrôe_c⁄n
 (
t˝_c⁄n
)

118 
t˝_c⁄n_t
 *
t˝_c⁄n
;

120 
ù_hdr_t
 *
ù_hdr
;

121 
t˝_hdr_t
 *
t˝_hdr
;

122 
acc_t
 *
∑ck2wrôe
;

124 #i‡
DEBUG
 & 256

125 { 
	`whîe
(); 
	`¥ötf
("inÅcp_restart_write_conn\n"); }

127 
	`as£π
 (
t˝_c⁄n
->
tc_Êags
 & 
TCF_INUSE
);

129 i‡(
t˝_c⁄n
->
tc_p‹t
->
ç_Êags
 & 
TPF_WRITE_IP
)

131 
t˝_c⁄n
->
tc_Êags
 |
TCF_MORE2WRITE
;

132 #i‡
DEBUG
 & 16

133 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

134 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

136 
t˝_c⁄n
->
tc_p‹t
->
ç_Êags
 |
TPF_MORE2WRITE
;

140 i‡(
t˝_c⁄n
->
tc_‰ag2£nd
)

142 
∑ck2wrôe

t˝_c⁄n
->
tc_‰ag2£nd
;

143 
t˝_c⁄n
->
tc_‰ag2£nd
= 0;

144 #i‡
DEBUG
 & 256

145 { 
	`whîe
(); 
	`¥ötf
("calling write2port\n"); }

147 
	`wrôe2p‹t
(
t˝_c⁄n
->
tc_p‹t
, 
∑ck2wrôe
);

149 i‡(
t˝_c⁄n
->
tc_p‹t
->
ç_Êags
 & 
TPF_WRITE_IP
)

151 
t˝_c⁄n
->
tc_Êags
 |
TCF_MORE2WRITE
;

152 #i‡
DEBUG
 & 16

153 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

154 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

156 
t˝_c⁄n
->
tc_p‹t
->
ç_Êags
 |
TPF_MORE2WRITE
;

161 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
 ||Åcp_conn->tc_state ==

162 
TCS_LISTEN
)

166 i‡(
t˝_c⁄n
->
tc_no_ªå™s
 >

167 
t˝_c⁄n
->
tc_max_no_ªå™s
)

169 #i‡
DEBUG


170 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_close_connection\n"); }

172 
	`t˝_˛o£_c⁄√˘i⁄
(
t˝_c⁄n
, 
ETIMEDOUT
);

176 
∑ck2wrôe

	`make_∑ck
(
t˝_c⁄n
))

180 i‡(
t˝_c⁄n
->
tc_p‹t
->
ç_Êags
 & 
TPF_WRITE_IP
)

182 
t˝_c⁄n
->
tc_‰ag2£nd

∑ck2wrôe
;

183 
t˝_c⁄n
->
tc_Êags
 |
TCF_MORE2WRITE
;

184 #i‡
DEBUG
 & 16

185 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

186 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

188 
t˝_c⁄n
->
tc_p‹t
->
ç_Êags
 |
TPF_MORE2WRITE
;

191 
	`wrôe2p‹t
(
t˝_c⁄n
->
tc_p‹t
, 
∑ck2wrôe
);

192 i‡(
t˝_c⁄n
->
tc_p‹t
->
ç_Êags
 & 
TPF_WRITE_IP
)

194 
t˝_c⁄n
->
tc_Êags
 |
TCF_MORE2WRITE
;

195 #i‡
DEBUG
 & 16

196 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

197 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

199 
t˝_c⁄n
->
tc_p‹t
->
ç_Êags
 |
TPF_MORE2WRITE
;

203 
	}
}

205 
PRIVATE
 
acc_t
 *
	$make_∑ck
(
t˝_c⁄n
)

206 
t˝_c⁄n_t
 *
t˝_c⁄n
;

208 
acc_t
 *
∑ck2wrôe
, *
tmp_∑ck
;

209 
t˝_hdr_t
 *
t˝_hdr
;

210 
ù_hdr_t
 *
ù_hdr
;

211 
tŸ_hdr_size
;

212 
u32_t
 
£g_£q
, 
£g_lo_d©a
, 
queue_lo_d©a
, 
£g_hi
, 
£g_hi_d©a
;

213 
u16_t
 
£g_up
;

214 
u8_t
 
£g_Êags
;

215 
time_t
 
√w_dis
;

216 
size_t
 
∑ck_size
;

217 
time_t
 
maj‹_timeout
, 
mö‹_timeout
;

219 #i‡
DEBUG
 & 256

220 { 
	`whîe
(); 
	`¥ötf
("make_pack called\n"); }

222 
t˝_c⁄n
->
tc_°©e
)

224 
TCS_CLOSED
:

226 
TCS_SYN_RECEIVED
:

227 
TCS_SYN_SENT
:

228 i‡(
t˝_c⁄n
->
tc_SND_TRM
 =t˝_c⁄n->
tc_SND_NXT
 &&

229 !(
t˝_c⁄n
->
tc_Êags
 & 
TCF_SEND_ACK
))

231 #i‡
DEBUG
 & 256

232 { 
	`whîe
(); 
	`¥ötf
("make_packÑeturned\n"); }

236 
maj‹_timeout
= 0;

237 
t˝_c⁄n
->
tc_Êags
 &~
TCF_SEND_ACK
;

238 #i‡
DEBUG
 & 256

239 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

240 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

243 
∑ck2wrôe

	`t˝_make_hódî
(
t˝_c⁄n
, &
ù_hdr
, &
t˝_hdr
,

244 (
acc_t
 *)0);

245 i‡(!
∑ck2wrôe
)

247 { 
	`whîe
(); 
	`¥ötf
("connection closed while inuse\n"); }

248 #i‡
DEBUG


249 { 
	`whîe
(); 
	`¥ötf
("make_packÑeturned\n"); }

253 
tŸ_hdr_size

	`bf_bufsize
(
∑ck2wrôe
);

254 
£g_£q

t˝_c⁄n
->
tc_SND_TRM
;

255 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_SYN_SENT
)

256 
£g_Êags
= 0;

258 
£g_Êags

THF_ACK
;

261 i‡(
£g_£q
 =
t˝_c⁄n
->
tc_ISS
)

263 
£g_Êags
 |
THF_SYN
;

264 
t˝_c⁄n
->
tc_SND_TRM
++;

265 i‡(!
t˝_c⁄n
->
tc_ët
)

266 
t˝_c⁄n
->
tc_ët

	`gë_time
();

269 
maj‹_timeout

	`gë_time
(Ë+ (
t˝_c⁄n
->
tc_πt
 *

270 (
t˝_c⁄n
->
tc_no_ªå™s
 + 2));

272 
t˝_hdr
->
th_£q_ƒ

	`ht⁄l
(
£g_£q
);

273 
t˝_hdr
->
th_ack_ƒ

	`ht⁄l
(
t˝_c⁄n
->
tc_RCV_NXT
);

274 
t˝_hdr
->
th_Êags

£g_Êags
;

275 
t˝_hdr
->
th_wödow

	`ht⁄s
(
t˝_c⁄n
->
tc_mss
);

278 
ù_hdr
->
ih_Àngth

	`ht⁄s
(
tŸ_hdr_size
);

279 
t˝_hdr
->
th_chksum
~
	`t˝_∑ck_⁄eCsum
(
∑ck2wrôe
, 
tŸ_hdr_size
);

281 
√w_dis

	`gë_time
(Ë+ 2*
HZ
*
t˝_c⁄n
->
tc_âl
;

282 i‡(
√w_dis
 > 
t˝_c⁄n
->
tc_£nddis
)

283 
t˝_c⁄n
->
tc_£nddis

√w_dis
;

285 i‡(
maj‹_timeout
)

287 
t˝_c⁄n
->
tc_no_ªå™s
++;

288 #i‡
DEBUG
 & 256

289 { 
	`whîe
(); 
	`¥ötf
("setting major_to\n"); }

291 
	`˛ck_timî
(&
t˝_c⁄n
->
tc_maj‹_timî
,

292 
maj‹_timeout
, 
maj‹_to
,

293 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
);

295 i‡(
t˝_c⁄n
->
tc_Êags
 & 
TCF_ACK_TIMER_SET
)

297 
t˝_c⁄n
->
tc_Êags
 &~
TCF_ACK_TIMER_SET
;

298 #i‡
DEBUG
 & 16

299 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

300 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

302 
	`˛ck_u¡imî
(&
t˝_c⁄n
->
tc_ack_timî
);

304 #i‡
DEBUG
 & 256

305 { 
	`whîe
(); 
	`¥ötf
("make_packÑeturned\n"); }

307  
∑ck2wrôe
;

311 
TCS_ESTABLISHED
:

312 
TCS_FIN_WAIT_1
:

313 
TCS_FIN_WAIT_2
:

314 
TCS_CLOSE_WAIT
:

315 
TCS_CLOSING
:

316 
TCS_LAST_ACK
:

317 
TCS_TIME_WAIT
:

319 #i‡
DEBUG
 & 256

320 { 
	`whîe
(); 
	`¥ötf
("SND_TRM0x%x, snd_cwnd0x%x\n", 
t˝_c⁄n
->
tc_SND_TRM
,

321 
t˝_c⁄n
->
tc_¢d_cwnd
); }

323 
	`as£π
 (
	`t˝_LEmod4G
(
t˝_c⁄n
->
tc_SND_TRM
,Å˝_c⁄n->
tc_¢d_cwnd
));

324 
	`as£π
 (
	`t˝_LEmod4G
(
t˝_c⁄n
->
tc_SND_TRM
,Å˝_c⁄n->
tc_SND_NXT
));

326 i‡((
t˝_c⁄n
->
tc_SND_TRM
 =t˝_c⁄n->
tc_¢d_cwnd
 ||

327 
t˝_c⁄n
->
tc_SND_TRM
 =t˝_c⁄n->
tc_SND_NXT
) &&

328 !(
t˝_c⁄n
->
tc_Êags
 & 
TCF_SEND_ACK
))

330 #i‡
DEBUG
 & 256

331 { 
	`whîe
(); 
	`¥ötf
("nothingÅo do\n"); }

333 #i‡
DEBUG
 & 256

334 { 
	`whîe
(); 
	`¥ötf
("make_packÑeturned\n"); }

339 
maj‹_timeout
= 0;

340 
t˝_c⁄n
->
tc_Êags
 &~
TCF_SEND_ACK
;

341 #i‡
DEBUG
 & 256

342 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

343 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

346 
∑ck2wrôe

	`t˝_make_hódî
 (
t˝_c⁄n
, &
ù_hdr
,

347 &
t˝_hdr
, (
acc_t
 *)0);

348 i‡(!
∑ck2wrôe
)

350 { 
	`whîe
(); 
	`¥ötf
("connection closed while inuse\n"); }

351 #i‡
DEBUG


352 { 
	`whîe
(); 
	`¥ötf
("make_packÑeturned\n"); }

356 
	`bf_chkbuf
(
∑ck2wrôe
);

357 
tŸ_hdr_size

	`bf_bufsize
(
∑ck2wrôe
);

358 
£g_£q

t˝_c⁄n
->
tc_SND_TRM
;

359 
£g_Êags

THF_ACK
;

360 
	`as£π
(
	`t˝_Gmod4G
(
£g_£q
, 
t˝_c⁄n
->
tc_ISS
));

362 
£g_lo_d©a

£g_£q
;

363 
queue_lo_d©a

t˝_c⁄n
->
tc_SND_UNA
;

364 
	`as£π
(
	`t˝_Gmod4G
(
queue_lo_d©a
, 
t˝_c⁄n
->
tc_ISS
));

365 
	`as£π
 (
	`t˝_check_c⁄n
(
t˝_c⁄n
));

367 
£g_hi

t˝_c⁄n
->
tc_SND_NXT
;

368 
£g_hi_d©a

£g_hi
;

369 i‡(
t˝_c⁄n
->
tc_Êags
 & 
TCF_FIN_SENT
)

371 #i‡
DEBUG
 & 256

372 { 
	`whîe
(); 
	`¥ötf
("Setting FIN flags\n"); }

374 i‡(
£g_£q
 !
£g_hi
)

375 
£g_Êags
 |
THF_FIN
;

376 i‡(
queue_lo_d©a
 =
£g_hi_d©a
)

377 
queue_lo_d©a
--;

378 i‡(
£g_lo_d©a
 =
£g_hi_d©a
)

379 
£g_lo_d©a
--;

380 
£g_hi_d©a
--;

383 i‡(
£g_hi_d©a
 - 
£g_lo_d©a
 > 
t˝_c⁄n
->
tc_mss
 -

384 
tŸ_hdr_size
)

386 
£g_hi_d©a

£g_lo_d©a
 + 
t˝_c⁄n
->
tc_mss
 -

387 
tŸ_hdr_size
;

388 
£g_hi

£g_hi_d©a
;

389 #i‡
DEBUG
 & 256

390 { 
	`whîe
(); 
	`¥ötf
("Clearing FIN flags\n"); }

392 
£g_Êags
 &~
THF_FIN
;

394 i‡(
	`t˝_Gmod4G
(
£g_hi_d©a
, 
t˝_c⁄n
->
tc_¢d_cwnd
))

396 
£g_hi_d©a

t˝_c⁄n
->
tc_¢d_cwnd
;

397 
£g_hi

£g_hi_d©a
;

398 #i‡
DEBUG
 & 256

399 { 
	`whîe
(); 
	`¥ötf
("Clearing FIN flags\n"); }

401 
£g_Êags
 &~
THF_FIN
;

404 i‡(
	`t˝_Gmod4G
(
t˝_c⁄n
->
tc_SND_UP
, 
£g_lo_d©a
) &&

405 
	`t˝_LEmod4G
(
t˝_c⁄n
->
tc_SND_UP
, 
£g_hi_d©a
))

407 
£g_up

t˝_c⁄n
->
tc_SND_UP
-
£g_£q
;

408 
£g_Êags
 |
THF_URG
;

409 #i‡
DEBUG


410 { 
	`whîe
(); 
	`¥ötf
("£g_up%d\n", 
£g_up
); }

413 i‡(
	`t˝_Gmod4G
(
t˝_c⁄n
->
tc_SND_PSH
, 
£g_lo_d©a
) &&

414 
	`t˝_LEmod4G
(
t˝_c⁄n
->
tc_SND_PSH
, 
£g_hi_d©a
))

416 
£g_Êags
 |
THF_PSH
;

419 
t˝_c⁄n
->
tc_SND_TRM

£g_hi
;

421 i‡(
£g_hi
-
£g_£q
)

423 i‡(!
t˝_c⁄n
->
tc_ët
)

424 
t˝_c⁄n
->
tc_ët

	`gë_time
();

426 i‡(
£g_£q
 =
t˝_c⁄n
->
tc_SND_UNA
)

427 
maj‹_timeout

	`gë_time
(Ë+ (
t˝_c⁄n
->
tc_πt
 *

428 (
t˝_c⁄n
->
tc_no_ªå™s
 + 1));

430 i‡(
£g_hi_d©a
-
£g_lo_d©a
)

432 
tmp_∑ck

∑ck2wrôe
;

433 
tmp_∑ck
->
acc_√xt
)

434 
tmp_∑ck
tmp_∑ck->
acc_√xt
;

435 
	`as£π
 (
	`t˝_check_c⁄n
(
t˝_c⁄n
));

436 
	`bf_chkbuf
(
∑ck2wrôe
);

437 
tmp_∑ck
->
acc_√xt

	`bf_cut
(
t˝_c⁄n
->
tc_£nd_d©a
,

438 ()(
£g_lo_d©a
-
queue_lo_d©a
),

439 (Ë(
£g_hi_d©a
-
£g_lo_d©a
));

440 
	`bf_chkbuf
(
∑ck2wrôe
);

443 
t˝_hdr
->
th_£q_ƒ

	`ht⁄l
(
£g_£q
);

444 
t˝_hdr
->
th_ack_ƒ

	`ht⁄l
(
t˝_c⁄n
->
tc_RCV_NXT
);

445 
t˝_hdr
->
th_Êags

£g_Êags
;

446 
t˝_hdr
->
th_wödow

	`ht⁄s
(
t˝_c⁄n
->
tc_RCV_HI
 -

447 
t˝_c⁄n
->
tc_RCV_NXT
);

448 
t˝_hdr
->
th_urg±r

	`ht⁄s
(
£g_up
);

450 
∑ck_size

	`bf_bufsize
(
∑ck2wrôe
);

451 
ù_hdr
->
ih_Àngth

	`ht⁄s
(
∑ck_size
);

452 
	`bf_chkbuf
(
∑ck2wrôe
);

453 
t˝_hdr
->
th_chksum
~
	`t˝_∑ck_⁄eCsum
(
∑ck2wrôe
,

454 
∑ck_size
);

455 
	`bf_chkbuf
(
∑ck2wrôe
);

456 
√w_dis

	`gë_time
(Ë+ 2*
HZ
*
t˝_c⁄n
->
tc_âl
;

457 i‡(
√w_dis
 > 
t˝_c⁄n
->
tc_£nddis
)

458 
t˝_c⁄n
->
tc_£nddis

√w_dis
;

459 
	`bf_chkbuf
(
∑ck2wrôe
);

460 i‡(
maj‹_timeout
)

462 
t˝_c⁄n
->
tc_no_ªå™s
++;

464 #i‡
DEBUG
 & 256

465 { 
	`whîe
(); 
	`¥ötf
("setting major_to\n"); }

467 
	`˛ck_timî
(&
t˝_c⁄n
->
tc_maj‹_timî
,

468 
maj‹_timeout
,

469 
maj‹_to
, 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
);

471 i‡(
t˝_c⁄n
->
tc_Êags
 & 
TCF_ACK_TIMER_SET
)

473 
t˝_c⁄n
->
tc_Êags
 &~
TCF_ACK_TIMER_SET
;

474 #i‡
DEBUG
 & 256

475 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

476 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

478 
	`˛ck_u¡imî
(&
t˝_c⁄n
->
tc_ack_timî
);

480 #i‡
DEBUG
 & 256

481 { 
	`whîe
(); 
	`¥ötf
("make_packÑeturned\n"); }

483  
∑ck2wrôe
;

485 #i‡
DEBUG


486 { 
	`whîe
(); 
	`¥ötf
("t˝_c⁄n_èbÀ[%d].tc_°©e%d\n", 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,

487 
t˝_c⁄n
->
tc_°©e
); }

489 
	`ù_∑nic
(( "Illegal state" ));

491 #i‡
DEBUG


492 { 
	`whîe
(); 
	`¥ötf
("make_packÑeturned\n"); }

494 
	}
}

496 
PRIVATE
 
	$wrôe2p‹t
(
t˝_p‹t
, 
d©a
)

497 
t˝_p‹t_t
 *
t˝_p‹t
;

498 
acc_t
 *
d©a
;

500 
ªsu…
;

502 #i‡
DEBUG
 & 256

503 { 
	`whîe
(); 
	`¥ötf
("in write2port\n"); }

505 
	`as£π
 (!(
t˝_p‹t
->
ç_Êags
 & 
TPF_WRITE_IP
));

507 
t˝_p‹t
->
ç_Êags
 |
TPF_WRITE_IP
;

508 
t˝_p‹t
->
ç_∑ck

d©a
;

510 
	`bf_chkbuf
(
d©a
);

511 #i‡
DEBUG


512 i‡(
t˝_dñay_⁄
)

514 i‡(
t˝_p‹t
->
ç_Êags
 & 
TPF_DELAY_TCP
)

515 
t˝_p‹t
->
ç_Êags
 &~
TPF_DELAY_TCP
;

518 
t˝_p‹t
->
ç_Êags
 |
TPF_WRITE_SP
;

519 
	`˛ck_timî
(&
t˝_p‹t
->
ç_dñay_tim
,

520 
	`gë_time
(Ë+ 
t˝_dñay
,

521 
t˝_dñay_to
, 
t˝_p‹t
-

522 
t˝_p‹t_èbÀ
);

527 
ªsu…

	`ù_wrôe
 (
t˝_p‹t
->
ç_ùfd
, 
	`bf_bufsize
(
d©a
));

529 i‡(
ªsu…
 =
NW_SUSPEND
)

531 
t˝_p‹t
->
ç_Êags
 |
TPF_WRITE_SP
;

534 
	`as£π
(
ªsu…
 =
NW_OK
);

535 
t˝_p‹t
->
ç_Êags
 &~
TPF_WRITE_IP
;

536 
	`as£π
(!(
t˝_p‹t
->
ç_Êags
 & (
TPF_WRITE_IP
|
TPF_WRITE_SP
)));

537 
	}
}

539 
PRIVATE
 
	$maj‹_to
(
c⁄n
, 
timî
)

540 
c⁄n
;

541 
timî
 *timer;

543 
t˝_c⁄n_t
 *
t˝_c⁄n
;

544 
u16_t
 
mss
, 
mss2
;

546 #i‡
DEBUG
 & 256

547 { 
	`whîe
(); 
	`¥ötf
("in major_to\n"); }

549 
t˝_c⁄n
&
t˝_c⁄n_èbÀ
[
c⁄n
];

550 #i‡
DEBUG
 & 256

551 { 
	`whîe
(); 
	`¥ötf
("major_to: snd_cwnd-SND_UNA= %lu,Ço_retrans: %d snd_cthresh= %d\n",

552 
t˝_c⁄n
->
tc_¢d_cwnd
-t˝_c⁄n->
tc_SND_UNA
,Å˝_c⁄n->
tc_no_ªå™s
,

553 
t˝_c⁄n
->
tc_¢d_˘hªsh
); }

555 
	`as£π
(
t˝_c⁄n
->
tc_Êags
 & 
TCF_INUSE
);

556 
	`as£π
(
t˝_c⁄n
->
tc_°©e
 !
TCS_CLOSED
 &&

557 
t˝_c⁄n
->
tc_°©e
 !
TCS_LISTEN
);

559 
	`˛ck_u¡imî
(&
t˝_c⁄n
->
tc_mö‹_timî
);

560 
t˝_c⁄n
->
tc_SND_TRM
t˝_c⁄n->
tc_SND_UNA
;

562 
mss

t˝_c⁄n
->
tc_mss
;

563 
mss2
2*
mss
;

565 
t˝_c⁄n
->
tc_¢d_cwnd
t˝_c⁄n->
tc_SND_TRM
 + 
mss2
;

566 #i‡
DEBUG
 & 256

567 { 
	`whîe
(); 
	`¥ötf
("¢d_cwnd i†now %d\n", 
t˝_c⁄n
->
tc_¢d_cwnd
); }

569 
t˝_c⁄n
->
tc_¢d_˘hªsh
 /= 2;

570 i‡(
t˝_c⁄n
->
tc_¢d_˘hªsh
 < 
mss2
)

571 
t˝_c⁄n
->
tc_¢d_˘hªsh

mss2
;

572 
t˝_c⁄n
->
tc_¢d_cöc
(()
mss
*mss)/tcp_conn->

573 
tc_¢d_˘hªsh
;

575 
	`t˝_ª°¨t_wrôe
(
t˝_c⁄n
);

576 
	}
}

578 
PRIVATE
 
	$mö‹_to
(
c⁄n
, 
timî
)

579 
c⁄n
;

580 
timî
 *timer;

582 
t˝_c⁄n_t
 *
t˝_c⁄n
;

584 #i‡
DEBUG


585 { 
	`whîe
(); 
	`¥ötf
("in minor_to\n"); }

587 
t˝_c⁄n
&
t˝_c⁄n_èbÀ
[
c⁄n
];

588 
	`as£π
(
t˝_c⁄n
->
tc_Êags
 & 
TCF_INUSE
);

589 
	`as£π
(
t˝_c⁄n
->
tc_°©e
 !
TCS_CLOSED
 &&

590 
t˝_c⁄n
->
tc_°©e
 !
TCS_LISTEN
);

592 
	`t˝_ª°¨t_wrôe
(
t˝_c⁄n
);

593 
	}
}

595 
PUBLIC
 
	$t˝_ªÀa£_ªå™s
(
t˝_c⁄n
, 
£g_ack
, 
√w_wö
)

596 
t˝_c⁄n_t
 *
t˝_c⁄n
;

597 
u32_t
 
£g_ack
;

598 
u16_t
 
√w_wö
;

600 
size_t
 
size
, 
off£t
;

601 
acc_t
 *
ﬁd_∑ck
, *
√w_∑ck
;

602 
time_t
 
ªå™s_time
, 
cuº_time
;

603 
u32_t
 
queue_lo
, 
queue_hi
;

604 
u16_t
 
cwnd
, 
ö¸
, 
mss
, 
mss2
, 
˘hªsh
;

606 #i‡
DEBUG
 & 256

607 { 
	`whîe
(); 
	`¥ötf
("inÑelease_retrans(&tcp_conn_table[%d], 0x%x, %d)\n",

608 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
, 
£g_ack
, 
√w_wö
); }

610 
	`as£π
 (
	`t˝_GEmod4G
(
£g_ack
, 
t˝_c⁄n
->
tc_SND_UNA
));

611 
	`as£π
 (
	`t˝_LEmod4G
(
£g_ack
, 
t˝_c⁄n
->
tc_SND_NXT
));

613 i‡(
	`t˝_Gmod4G
(
£g_ack
, 
t˝_c⁄n
->
tc_SND_UNA
))

615 
t˝_c⁄n
->
tc_no_ªå™s
= 0;

616 
cuº_time

	`gë_time
();

617 i‡(
cuº_time
 < 
t˝_c⁄n
->
tc_ët
)

618 
ªå™s_time
= 0;

620 
ªå™s_time

cuº_time
-
t˝_c⁄n
->
tc_ët
;

621 i‡(
t˝_c⁄n
->
tc_πt
*2 < 
ªå™s_time
)

623 
t˝_c⁄n
->
tc_πt
 *= 2;

624 
	`as£π
 (
t˝_c⁄n
->
tc_πt
);

626 i‡(
t˝_c⁄n
->
tc_πt
 > 
ªå™s_time
*2)

628 
t˝_c⁄n
->
tc_πt
=Åcp_conn->tc_rtt/2+1;

629 
	`as£π
 (
t˝_c⁄n
->
tc_πt
);

632 i‡(
£g_ack
 =
t˝_c⁄n
->
tc_SND_NXT
)

633 
t˝_c⁄n
->
tc_ët
= 0;

636 
t˝_c⁄n
->
tc_ët
 +(
£g_ack
-tcp_conn->

637 
tc_SND_UNA
Ë* 
t˝_c⁄n
->
tc_πt
 /

638 (
t˝_c⁄n
->
tc_SND_NXT
-tcp_conn->

639 
tc_SND_UNA
);

641 
queue_lo

t˝_c⁄n
->
tc_SND_UNA
;

642 
queue_hi

t˝_c⁄n
->
tc_SND_NXT
;

644 
t˝_c⁄n
->
tc_SND_UNA

£g_ack
;

645 i‡(
	`t˝_Lmod4G
(
t˝_c⁄n
->
tc_SND_TRM
, 
£g_ack
))

646 
t˝_c⁄n
->
tc_SND_TRM

£g_ack
;

647 i‡(
	`t˝_Lmod4G
(
t˝_c⁄n
->
tc_¢d_cwnd
, 
£g_ack
))

649 
t˝_c⁄n
->
tc_¢d_cwnd

£g_ack
;

650 #i‡
DEBUG
 & 256

651 { 
	`whîe
(); 
	`¥ötf
("¢d_cwnd i†now %d\n", 
t˝_c⁄n
->
tc_¢d_cwnd
); }

655 i‡(
queue_lo
 =
t˝_c⁄n
->
tc_ISS
)

656 
queue_lo
++;

658 i‡(
t˝_c⁄n
->
tc_Êags
 & 
TCF_FIN_SENT
)

660 i‡(
£g_ack
 =
queue_hi
)

661 
£g_ack
--;

662 i‡(
queue_lo
 =
queue_hi
)

663 
queue_lo
--;

664 
queue_hi
--;

667 
off£t

£g_ack
 - 
queue_lo
;

668 
size

queue_hi
 - 
£g_ack
;

669 
ﬁd_∑ck

t˝_c⁄n
->
tc_£nd_d©a
;

670 
t˝_c⁄n
->
tc_£nd_d©a
= 0;

672 i‡(!
size
)

674 
√w_∑ck
= 0;

675 
t˝_c⁄n
->
tc_¢d_cwnd
t˝_c⁄n->
tc_SND_UNA
 +

676 2*
t˝_c⁄n
->
tc_mss
;

678 #i‡
DEBUG
 & 256

679 { 
	`whîe
(); 
	`¥ötf
("¢d_cwnd i†now %d\n", 
t˝_c⁄n
->
tc_¢d_cwnd
); }

683 
√w_∑ck

	`bf_cut
(
ﬁd_∑ck
, 
off£t
, 
size
);

684 
	`bf_a‰ì
(
ﬁd_∑ck
);

685 
t˝_c⁄n
->
tc_£nd_d©a

√w_∑ck
;

686 
	`as£π
 (
	`t˝_check_c⁄n
(
t˝_c⁄n
));

688 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
)

690 { 
	`whîe
(); 
	`¥ötf
("connection closed while inuse\n"); }

694 i‡(
t˝_c⁄n
->
tc_ët
)

696 #i‡
DEBUG
 & 256

697 { 
	`whîe
(); 
	`¥ötf
("setting major_to\n"); }

699 
	`˛ck_timî
(&
t˝_c⁄n
->
tc_maj‹_timî
,

700 
t˝_c⁄n
->
tc_ët
 +Å˝_c⁄n->
tc_πt
,

701 
maj‹_to
, 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
);

705 
mss

t˝_c⁄n
->
tc_mss
;

706 
˘hªsh

t˝_c⁄n
->
tc_¢d_˘hªsh
;

707 
mss2
2*
mss
;

709 i‡(
√w_wö
 < 
mss2
)

711 
cwnd
= 0;

712 i‡(
√w_wö
 >
mss
)

713 
ö¸

mss
;

716 i‡(
√w_wö
)

717 
ö¸

√w_wö
;

719 
ö¸
= 1;

724 
cwnd

t˝_c⁄n
->
tc_¢d_cwnd
 -Å˝_c⁄n->
tc_SND_UNA
;

725 
ö¸

mss2
;

726 i‡(
cwnd
+
ö¸
 > 
√w_wö
)

728 
ö¸

mss
;

729 i‡(
cwnd
+
ö¸
 > 
√w_wö
)

730 
ö¸
= 0;

734 
	`as£π
 (
˘hªsh
 >
mss2
);

736 i‡(
ö¸
 && 
cwnd
+ö¸ > 
˘hªsh
)

738 
ö¸
 -
mss
;

739 i‡(
ö¸
 && 
cwnd
+ö¸ > 
˘hªsh
)

740 
ö¸
 -
mss
;

742 i‡(
cwnd
+
ö¸
+
mss
>
˘hªsh
 && cthªsh<
t˝_c⁄n
->
tc_¢d_wnd
)

743 
t˝_c⁄n
->
tc_¢d_˘hªsh
 +t˝_c⁄n->
tc_¢d_cöc
;

745 
t˝_c⁄n
->
tc_¢d_cwnd
t˝_c⁄n->
tc_SND_UNA
+
cwnd
+
ö¸
;

746 #i‡
DEBUG
 & 256

747 { 
	`whîe
(); 
	`¥ötf
("¢d_cwnd i†now 0x%x\n", 
t˝_c⁄n
->
tc_¢d_cwnd
); }

749 i‡(
	`t˝_Gmod4G
(
t˝_c⁄n
->
tc_SND_TRM
,Å˝_c⁄n->
tc_¢d_cwnd
))

750 
t˝_c⁄n
->
tc_SND_TRM
t˝_c⁄n->
tc_¢d_cwnd
;

752 i‡(
	`t˝_Gmod4G
(
t˝_c⁄n
->
tc_¢d_cwnd
,Å˝_c⁄n->
tc_SND_TRM
) &&

753 
	`t˝_Gmod4G
(
t˝_c⁄n
->
tc_SND_NXT
,Å˝_c⁄n->
tc_SND_TRM
))

754 
	`t˝_ª°¨t_wrôe
(
t˝_c⁄n
);

756 i‡(
t˝_c⁄n
->
tc_wrôeu£r
)

757 
	`t˝_ª°¨t_fd_wrôe
(
t˝_c⁄n
);

759 
	`as£π
 (
	`t˝_check_c⁄n
(
t˝_c⁄n
));

761 
	}
}

763 
PUBLIC
 
	$t˝_ª°¨t_fd_wrôe
(
t˝_c⁄n
)

764 
t˝_c⁄n_t
 *
t˝_c⁄n
;

766 
t˝_fd_t
 *
urgít_fd
, *
n‹mÆ_fd
, *
shutdown_fd
,

767 *
√w_fd
, *
hi_fd
, *
t˝_fd
;

768 
˛o£d_c⁄√˘i⁄
;

770 #i‡
DEBUG
 & 256

771 { 
	`whîe
(); 
	`¥ötf
("inÑestart_fd_write\n"); }

775 
t˝_fd

t˝_c⁄n
->
tc_wrôeu£r
;

777 
˛o£d_c⁄√˘i⁄
(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
);

778 i‡(
t˝_fd
)

779 
	`fd_wrôe
(
t˝_fd
);

781 
t˝_fd
&
t˝_fd_èbÀ
[
TCP_FD_NR
-1];

783 i‡(!
˛o£d_c⁄√˘i⁄
 &&

784 
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
)

786 #i‡
DEBUG


787 { 
	`whîe
(); 
	`¥ötf
("connection closed while inuse\n"); }

792 i‡(!
t˝_c⁄n
->
tc_wrôeu£r
)

794 
urgít_fd
= 0;

795 
n‹mÆ_fd
= 0;

796 
shutdown_fd
= 0;

797 
√w_fd

t˝_fd
+1, 
hi_fd
=

798 &
t˝_fd_èbÀ
[
TCP_FD_NR
]; 
√w_fd
<
hi_fd
;

799 
√w_fd
++)

800 
	`swôch_wrôe_fd
(
t˝_c⁄n
, 
√w_fd
,

801 &
urgít_fd
, &
n‹mÆ_fd
,

802 &
shutdown_fd
);

803 
√w_fd

t˝_fd_èbÀ
, 
hi_fd

t˝_fd
+1;

804 
√w_fd
 < 
hi_fd
;Çew_fd++)

805 
	`swôch_wrôe_fd
(
t˝_c⁄n
, 
√w_fd
,

806 &
urgít_fd
, &
n‹mÆ_fd
,

807 &
shutdown_fd
);

808 i‡(
urgít_fd
)

809 
t˝_fd

urgít_fd
;

810 i‡(
n‹mÆ_fd
)

811 
t˝_fd

n‹mÆ_fd
;

813 
t˝_fd

shutdown_fd
;

814 
t˝_c⁄n
->
tc_wrôeu£r

t˝_fd
;

818 } 
t˝_c⁄n
->
tc_wrôeu£r
);

819 
	}
}

823 
PRIVATE
 
	$swôch_wrôe_fd
 (
t˝_c⁄n
, 
√w_fd
, 
ªf_urg_fd
,

824 
ªf_n‹m_fd
, 
ªf_shut_fd
)

825 
t˝_c⁄n_t
 *
t˝_c⁄n
;

826 
t˝_fd_t
 *
√w_fd
, **
ªf_urg_fd
, **
ªf_n‹m_fd
, **
ªf_shut_fd
;

828 i‡(!(
√w_fd
->
tf_Êags
 & 
TFF_INUSE
))

830 i‡(
√w_fd
->
tf_c⁄n
 !
t˝_c⁄n
)

832 i‡(
√w_fd
->
tf_Êags
 & 
TFF_WRITE_IP
)

833 i‡(
√w_fd
->
tf_Êags
 & 
TFF_WR_URG
)

835 i‡(!*
ªf_urg_fd
)

836 *
ªf_urg_fd

√w_fd
;

840 i‡(!*
ªf_n‹m_fd
)

841 *
ªf_n‹m_fd

√w_fd
;

843 i‡((
√w_fd
->
tf_Êags
 & 
TFF_IOCTL_IP
) &&

844 
√w_fd
->
tf_i‹eq
 =
NWIOTCPSHUTDOWN
)

845 i‡(!*
ªf_shut_fd
)

846 *
ªf_shut_fd

√w_fd
;

847 
	}
}

849 
PRIVATE
 
	$fd_wrôe
 (
t˝_fd
)

850 
t˝_fd_t
 *
t˝_fd
;

852 
t˝_c⁄n_t
 *
t˝_c⁄n
;

853 
urg
, 
push
;

854 
u32_t
 
max_£q
;

855 
size_t
 
max_cou¡
, 
max_å™s
, 
wrôe_cou¡
, 
£nd_cou¡
;

856 
acc_t
 *
d©a
, *
tmp_acc
, *
£nd_d©a
;

857 
ª°¨t_wrôe
;

859 
ª°¨t_wrôe

FALSE
;

860 
t˝_c⁄n

t˝_fd
->
tf_c⁄n
;

862 i‡(
t˝_fd
->
tf_Êags
 & 
TFF_IOCTL_IP
)

864 
	`as£π
 (
t˝_fd
->
tf_i‹eq
 =
NWIOTCPSHUTDOWN
);

865 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
)

867 
t˝_c⁄n
->
tc_wrôeu£r
= 0;

868 
	`t˝_ª∂y_io˘l
 (
t˝_fd
, 
t˝_c⁄n
->
tc_îr‹
);

871 
t˝_c⁄n
->
tc_wrôeu£r
= 0;

872 
	`t˝_ª∂y_io˘l
 (
t˝_fd
, 
NW_OK
);

873 
	`t˝_shutdown
 (
t˝_c⁄n
);

876 
	`as£π
 (
t˝_fd
->
tf_Êags
 & 
TFF_WRITE_IP
);

877 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
)

879 
t˝_c⁄n
->
tc_wrôeu£r
= 0;

880 #i‡
DEBUG
 & 256

881 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_reply_write()\n"); }

883 i‡(
t˝_fd
->
tf_wrôe_off£t
)

884 
	`t˝_ª∂y_wrôe
(
t˝_fd
,

885 
t˝_fd
->
tf_wrôe_off£t
);

887 
	`t˝_ª∂y_wrôe
(
t˝_fd
, 
t˝_c⁄n
->
tc_îr‹
);

890 
	`as£π
 (!(
t˝_c⁄n
->
tc_Êags
 & 
TCF_FIN_SENT
));

891 
	`as£π
 (
t˝_c⁄n
->
tc_SND_UNA
 !t˝_c⁄n->
tc_ISS
);

893 
urg
(
t˝_fd
->
tf_Êags
 & 
TFF_WR_URG
);

894 
push
(
t˝_fd
->
tf_Êags
 & 
TFF_PUSH_DATA
);

895 #i‡
DEBUG
 & 256

896 i‡(
push
Ë{ 
	`whîe
(); 
	`¥ötf
("pushing data\n"); }

899 
max_£q

t˝_c⁄n
->
tc_SND_UNA
 +Å˝_c⁄n->
tc_¢d_wnd
;

900 i‡(
urg
)

901 
max_£q
 +
t˝_c⁄n
->
tc_urg_wnd
;

902 
max_cou¡

max_£q
 - 
t˝_c⁄n
->
tc_SND_UNA
;

903 
max_å™s

max_£q
 - 
t˝_c⁄n
->
tc_SND_NXT
;

904 i‡(
t˝_fd
->
tf_wrôe_cou¡
 <
max_å™s
)

905 
wrôe_cou¡

t˝_fd
->
tf_wrôe_cou¡
;

906 i‡(!
urg
 && 
max_å™s
 < 
max_cou¡
/2)

909 
wrôe_cou¡

max_å™s
;

910 i‡(
wrôe_cou¡
)

912 
d©a
(*
t˝_fd
->
tf_gë_u£rd©a
)

913 (
t˝_fd
->
tf_§fd
,Å˝_fd->
tf_wrôe_off£t
,

914 
wrôe_cou¡
, 
FALSE
);

915 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
)

917 { 
	`whîe
(); 
	`¥ötf
("connection closed while inuse\n"); }

918 i‡(
d©a
)

919 
	`bf_a‰ì
(
d©a
);

922 i‡(!
d©a
)

924 
t˝_c⁄n
->
tc_wrôeu£r
= 0;

925 
	`as£π
(
d©a
);

926 #i‡
DEBUG


927 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_reply_write()\n"); }

929 i‡(
t˝_fd
->
tf_wrôe_off£t
)

930 
	`t˝_ª∂y_wrôe
(
t˝_fd
,

931 
t˝_fd
->
tf_wrôe_off£t
);

933 
	`t˝_ª∂y_wrôe
(
t˝_fd
, 
EFAULT
);

936 
t˝_fd
->
tf_wrôe_off£t
 +
wrôe_cou¡
;

937 
t˝_fd
->
tf_wrôe_cou¡
 -
wrôe_cou¡
;

939 
£nd_d©a

t˝_c⁄n
->
tc_£nd_d©a
;

940 
t˝_c⁄n
->
tc_£nd_d©a
= 0;

941 
£nd_d©a

	`bf_≠≥nd
(£nd_d©a, 
d©a
);

942 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
)

944 { 
	`whîe
(); 
	`¥ötf
("connection closed while inuse\n"); }

945 
	`bf_a‰ì
(
£nd_d©a
);

948 
t˝_c⁄n
->
tc_£nd_d©a

£nd_d©a
;

949 
t˝_c⁄n
->
tc_SND_NXT
 +
wrôe_cou¡
;

950 i‡(
urg
)

951 
t˝_c⁄n
->
tc_SND_UP
t˝_c⁄n->
tc_SND_NXT
;

952 i‡(
push
 && !
t˝_fd
->
tf_wrôe_cou¡
)

953 
t˝_c⁄n
->
tc_SND_PSH
t˝_c⁄n->
tc_SND_NXT
;

955 
	`as£π
 (
	`t˝_check_c⁄n
(
t˝_c⁄n
));

956 i‡(
	`t˝_Gmod4G
(
t˝_c⁄n
->
tc_SND_NXT
,Å˝_c⁄n->
tc_SND_TRM
) &&

957 
	`t˝_Lmod4G
(
t˝_c⁄n
->
tc_SND_TRM
,Å˝_c⁄n->
tc_¢d_cwnd
))

958 
ª°¨t_wrôe

TRUE
;

960 i‡(!
t˝_fd
->
tf_wrôe_cou¡
)

962 
t˝_c⁄n
->
tc_wrôeu£r
= 0;

963 #i‡
DEBUG
 & 256

964 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_reply_write()\n"); }

966 
	`t˝_ª∂y_wrôe
(
t˝_fd
,Å˝_fd->
tf_wrôe_off£t
);

968 i‡(
ª°¨t_wrôe
)

969 
	`t˝_ª°¨t_wrôe
(
t˝_c⁄n
);

970 
	}
}

972 
PUBLIC
 
	$t˝_shutdown
(
t˝_c⁄n
)

973 
t˝_c⁄n_t
 *
t˝_c⁄n
;

975 
˛o£d_c⁄√˘i⁄
;

977 #i‡
DEBUG
 & 256

978 { 
	`whîe
(); 
	`¥ötf
("inÅcp_shutdown\n"); }

980 i‡(
t˝_c⁄n
->
tc_Êags
 & 
TCF_FIN_SENT
)

982 
t˝_c⁄n
->
tc_Êags
 |
TCF_FIN_SENT
;

983 #i‡
DEBUG
 & 256

984 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

985 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

987 
t˝_c⁄n
->
tc_SND_NXT
++;

989 
t˝_c⁄n
->
tc_°©e
)

991 
TCS_CLOSED
:

992 
TCS_LISTEN
:

993 
TCS_SYN_SENT
:

994 
TCS_SYN_RECEIVED
:

995 #i‡
DEBUG
 & 256

996 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_close_connection\n"); }

998 
	`t˝_˛o£_c⁄√˘i⁄
(
t˝_c⁄n
, 
ENOTCONN
);

1000 
TCS_ESTABLISHED
:

1001 
t˝_c⁄n
->
tc_°©e

TCS_FIN_WAIT_1
;

1002 #i‡
DEBUG


1003 { 
	`whîe
(); 
	`t˝_wrôe_°©e
(
t˝_c⁄n
); }

1006 
TCS_CLOSE_WAIT
:

1007 
t˝_c⁄n
->
tc_°©e

TCS_LAST_ACK
;

1008 #i‡
DEBUG


1009 { 
	`whîe
(); 
	`t˝_wrôe_°©e
(
t˝_c⁄n
); }

1013 
˛o£d_c⁄√˘i⁄
(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
);

1015 
	`as£π
 (
	`t˝_check_c⁄n
(
t˝_c⁄n
));

1017 #i‡
DEBUG
 & 256

1018 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_restart_write\n"); }

1020 
	`t˝_ª°¨t_wrôe
(
t˝_c⁄n
);

1021 
	}
}

1023 
PUBLIC
 
	$t˝_£t_time_waô_timî
(
t˝_c⁄n
)

1024 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1026 
	`as£π
 (
t˝_c⁄n
->
tc_°©e
 =
TCS_TIME_WAIT
);

1028 #i‡
DEBUG
 & 256

1029 { 
	`whîe
(); 
	`¥ötf
("t˝_£t_time_waô_timî,Åé%d\n", 
t˝_c⁄n
->
tc_âl
); }

1031 
	`˛ck_timî
(&
t˝_c⁄n
->
tc_time_waô_timî
, 
	`gë_time
() +

1032 
t˝_c⁄n
->
tc_âl
 * 2L * 
HZ
, 
time_waô_to
,Åcp_conn-

1033 
t˝_c⁄n_èbÀ
);

1034 
	}
}

1036 
PUBLIC
 
	$t˝_£t_ack_timî
 (
t˝_c⁄n
)

1037 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1039 i‡(
t˝_c⁄n
->
tc_Êags
 & 
TCF_ACK_TIMER_SET
)

1042 
t˝_c⁄n
->
tc_Êags
 |
TCF_ACK_TIMER_SET
;

1043 #i‡
DEBUG
 & 256

1044 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

1045 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

1048 #i‡
DEBUG
 & 256

1049 { 
	`whîe
(); 
	`¥ötf
("settingáck_timer\n"); };

1051 
	`˛ck_timî
(&
t˝_c⁄n
->
tc_ack_timî
, 
	`gë_time
() +

1052 
TCP_ACK_DELAY
, 
ack_to
, 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
);

1053 
	}
}

1060 
PUBLIC
 
	$t˝_˛o£_c⁄√˘i⁄
(
t˝_c⁄n
, 
îr‹
)

1061 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1062 
îr‹
;

1064 #i‡
DEBUG
 & 256

1065 { 
	`whîe
(); 
	`¥ötf
("closing connection\n"); }

1068 
	`as£π
 (
	`t˝_check_c⁄n
(
t˝_c⁄n
));

1069 
	`as£π
 (
t˝_c⁄n
->
tc_Êags
 & 
TCF_INUSE
);

1071 
t˝_c⁄n
->
tc_îr‹

îr‹
;

1072 i‡(
t˝_c⁄n
->
tc_°©e
 =
TCS_CLOSED
)

1075 
	`˛ck_u¡imî
 (&
t˝_c⁄n
->
tc_maj‹_timî
);

1076 
	`˛ck_u¡imî
 (&
t˝_c⁄n
->
tc_mö‹_timî
);

1077 #i‡
DEBUG
 & 256

1078 { 
	`whîe
(); 
	`¥ötf
("clearingáck_timer\n"); }

1080 
	`˛ck_u¡imî
 (&
t˝_c⁄n
->
tc_ack_timî
);

1081 
	`˛ck_u¡imî
 (&
t˝_c⁄n
->
tc_time_waô_timî
);

1083 
t˝_c⁄n
->
tc_°©e

TCS_CLOSED
;

1084 #i‡
DEBUG
 & 16

1085 { 
	`whîe
(); 
	`t˝_wrôe_°©e
(
t˝_c⁄n
); }

1088 i‡(
t˝_c⁄n
->
tc_ªadu£r
)

1089 
	`t˝_ª°¨t_fd_ªad
 (
t˝_c⁄n
);

1090 
	`as£π
 (!
t˝_c⁄n
->
tc_ªadu£r
);

1092 i‡(
t˝_c⁄n
->
tc_wrôeu£r
)

1093 
	`t˝_ª°¨t_fd_wrôe
 (
t˝_c⁄n
);

1094 
	`as£π
 (!
t˝_c⁄n
->
tc_wrôeu£r
);

1096 i‡(
t˝_c⁄n
->
tc_c⁄nu£r
)

1098 #i‡
DEBUG
 & 256

1099 { 
	`whîe
(); 
	`¥ötf
("closingánd connuserÖresent\n"); }

1101 
	`t˝_ª°¨t_c⁄√˘
 (
t˝_c⁄n
->
tc_c⁄nu£r
);

1103 
	`as£π
 (!
t˝_c⁄n
->
tc_c⁄nu£r
);

1105 i‡(
t˝_c⁄n
->
tc_rcvd_d©a
)

1107 
	`bf_a‰ì
(
t˝_c⁄n
->
tc_rcvd_d©a
);

1108 
t˝_c⁄n
->
tc_rcvd_d©a
= 0;

1110 
t˝_c⁄n
->
tc_Êags
 &~
TCF_FIN_RECV
;

1111 #i‡
DEBUG
 & 256

1112 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

1113 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

1115 
t˝_c⁄n
->
tc_RCV_LO
t˝_c⁄n->
tc_RCV_NXT
;

1117 i‡(
t˝_c⁄n
->
tc_rcv_queue
)

1119 
	`bf_a‰ì
(
t˝_c⁄n
->
tc_rcv_queue
);

1120 
t˝_c⁄n
->
tc_rcv_queue
= 0;

1123 i‡(
t˝_c⁄n
->
tc_£nd_d©a
)

1125 #i‡
DEBUG
 & 256

1126 { 
	`whîe
(); 
	`¥ötf
("releasing data\n"); }

1128 #i‡
DEBUG
 & 256

1129 { 
	`whîe
(); 
	`¥ötf
("SND_TRM= 0x%lx,Åc_SND_NXT= 0x%lx, SND_UNA= 0x%lx\n",

1130 
t˝_c⁄n
->
tc_SND_TRM
,Å˝_c⁄n->
tc_SND_NXT
,Å˝_c⁄n->
tc_SND_UNA
); }

1132 
	`bf_a‰ì
(
t˝_c⁄n
->
tc_£nd_d©a
);

1133 
t˝_c⁄n
->
tc_£nd_d©a
= 0;

1134 
t˝_c⁄n
->
tc_SND_TRM
=

1135 
t˝_c⁄n
->
tc_SND_NXT
t˝_c⁄n->
tc_SND_UNA
;

1137 
t˝_c⁄n
->
tc_SND_TRM
t˝_c⁄n->
tc_SND_NXT
t˝_c⁄n->
tc_SND_UNA
;

1139 i‡(
t˝_c⁄n
->
tc_ªmù›t
)

1141 
	`bf_a‰ì
(
t˝_c⁄n
->
tc_ªmù›t
);

1142 
t˝_c⁄n
->
tc_ªmù›t
= 0;

1145 i‡(
t˝_c⁄n
->
tc_ªmt˝›t
)

1147 
	`bf_a‰ì
(
t˝_c⁄n
->
tc_ªmt˝›t
);

1148 
t˝_c⁄n
->
tc_ªmt˝›t
= 0;

1151 i‡(
t˝_c⁄n
->
tc_‰ag2£nd
)

1153 
	`bf_a‰ì
(
t˝_c⁄n
->
tc_‰ag2£nd
);

1154 
t˝_c⁄n
->
tc_ªmt˝›t
= 0;

1157 
t˝_c⁄n
->
tc_Êags
 &
TCF_INUSE
;

1158 #i‡
DEBUG
 & 256

1159 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

1160 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

1162 
	`as£π
 (
	`t˝_check_c⁄n
(
t˝_c⁄n
));

1163 
	}
}

1165 
PRIVATE
 
	$ack_to
(
c⁄n
, 
timî
)

1166 
c⁄n
;

1167 
timî
 *timer;

1169 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1171 #i‡
DEBUG
 & 256

1172 { 
	`whîe
(); 
	`¥ötf
("ináck_to\n"); }

1174 
t˝_c⁄n
&
t˝_c⁄n_èbÀ
[
c⁄n
];

1176 
	`as£π
 (&
t˝_c⁄n
->
tc_ack_timî
 =
timî
);

1178 
	`as£π
 (
t˝_c⁄n
->
tc_Êags
 & 
TCF_ACK_TIMER_SET
);

1180 
t˝_c⁄n
->
tc_Êags
 &~
TCF_ACK_TIMER_SET
;

1181 #i‡
DEBUG
 & 256

1182 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

1183 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

1185 
t˝_c⁄n
->
tc_Êags
 |
TCF_SEND_ACK
;

1186 #i‡
DEBUG
 & 256

1187 { 
	`whîe
(); 
	`¥ötf
("tcp_conn_table[%d].tc_flags= 0x%x\n",

1188 
t˝_c⁄n
-
t˝_c⁄n_èbÀ
,Å˝_c⁄n->
tc_Êags
); }

1190 
	`t˝_ª°¨t_wrôe
 (
t˝_c⁄n
);

1191 
	}
}

1193 
PRIVATE
 
	$time_waô_to
(
c⁄n
, 
timî
)

1194 
c⁄n
;

1195 
timî
 *timer;

1197 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1199 
t˝_c⁄n
&
t˝_c⁄n_èbÀ
[
c⁄n
];

1201 
	`as£π
 (
t˝_c⁄n
->
tc_°©e
 =
TCS_TIME_WAIT
);

1202 
	`as£π
 (&
t˝_c⁄n
->
tc_time_waô_timî
 =
timî
);

1204 #i‡
DEBUG


1205 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_close_connection\n"); }

1207 
	`t˝_˛o£_c⁄√˘i⁄
 (
t˝_c⁄n
, 
ENOCONN
);

1208 
	}
}

1210 
PUBLIC
 
	$t˝_zîo_wnd_to
(
c⁄n
, 
timî
)

1211 
c⁄n
;

1212 
timî
 *timer;

1214 
t˝_c⁄n_t
 *
t˝_c⁄n
;

1216 #i‡
DEBUG
 & 256

1217 { 
	`whîe
(); 
	`¥ötf
("inÅcp_zero_wnd_to\n"); }

1219 
t˝_c⁄n
&
t˝_c⁄n_èbÀ
[
c⁄n
];

1221 
	`as£π
 (&
t˝_c⁄n
->
tc_maj‹_timî
 =
timî
);

1222 
	`as£π
 (
t˝_c⁄n
->
tc_0wnd_to
);

1224 
t˝_c⁄n
->
tc_0wnd_to
 *= 2;

1225 
t˝_c⁄n
->
tc_SND_TRM
t˝_c⁄n->
tc_SND_UNA
;

1227 
	`t˝_ª°¨t_wrôe
 (
t˝_c⁄n
);

1228 
	}
}

1230 #i‡
DEBUG


1231 
PRIVATE
 
	$t˝_dñay_to
(
ªf
, 
timî
)

1232 
ªf
;

1233 
timî_t
 *
timî
;

1235 
t˝_p‹t_t
 *
t˝_p‹t
;

1237 
	`as£π
(
ªf
 >0 &&Ñe‡< 
TCP_PORT_NR
);

1238 
t˝_p‹t
&
t˝_p‹t_èbÀ
[
ªf
];

1239 
	`as£π
(
timî
 =&
t˝_p‹t
->
ç_dñay_tim
);

1241 
t˝_p‹t
->
ç_Êags
 &~(
TPF_WRITE_SP
|
TPF_WRITE_IP
);

1242 
t˝_p‹t
->
ç_Êags
 |
TPF_DELAY_TCP
;

1243 i‡(
t˝_p‹t
->
ç_Êags
 & 
TPF_MORE2WRITE
)

1245 #i‡
DEBUG
 & 256

1246 { 
	`whîe
(); 
	`¥ötf
("callingÅcp_restart_write_port\n"); }

1248 
	`wrôe2p‹t
(
t˝_p‹t
,Å˝_p‹t->
ç_∑ck
);

1250 
	}
}

	@telldir.c

4 
	#nû
 0

	)

5 
	~<lib.h
>

6 
	~<sys/ty≥s.h
>

7 
	~<dúít.h
>

8 
	~<î∫o.h
>

10 
off_t
 
	$ãŒdú
(
DIR
 *
dp
)

13 i‡(
dp
 =
nû
Ë{ 
î∫o

EBADF
;  -1; }

15  
dp
->
_pos
;

16 
	}
}

	@termcap.c

32 
	~<lib.h
>

33 
	~<ãrmˇp.h
>

34 
	~<˘y≥.h
>

35 
	~<°dlib.h
>

36 
	~<°rög.h
>

37 
	~<°dio.h
>

39 *
	gˇ∑b
 = (*)
NULL
;

43 
o•ìd
;

44 
PC
;

45 *
BC
;

46 *
UP
;

55 
	$tgëít
(
bp
, 
«me
)

56 *
bp
;

57 *
«me
;

59 
FILE
 *
Â
;

60 *
fûe
;

61 *
ãrm
;

62 
Àn
 = 
	`°æí
(
«me
);

64 
ˇ∑b
 = 
bp
;

71 i‡((
fûe
 = 
	`gëív
("TERMCAP")Ë=(*)
NULL
)

72 
fûe
 = "/etc/termcap";

73 i‡(*
fûe
 != '/')

74 i‡((
ãrm
 = 
	`gëív
("TERM")Ë!(*)
NULL
 && 
	`°rcmp
—îm, 
«me
) == 0) {

75 *
bp
 = '\0';

76 
	`°∫ˇt
(
bp
, 
fûe
, 1023);

79 
fûe
 = "/etc/termcap";

81 i‡((
Â
 = 
	`f›í
(
fûe
, "r")Ë=(
FILE
 *Ë
NULL
) {

82 
ˇ∑b
 = (*)
NULL
;

87 
def_Àn
 = 0;

88 *
˝
 = 
bp
;

91 i‡(
	`fgës
(&
bp
[
def_Àn
], ()(1024 - def_Àn), 
Â
Ë=(*)
NULL
) {

92 
	`f˛o£
(
Â
);

93 
ˇ∑b
 = (*)
NULL
;

96 
def_Àn
 = 
	`°æí
(
bp
) - 2;

97 } 
bp
[
def_Àn
] == '\\');

99 
	`is•a˚
(*
˝
)) cp++;

102 i‡(*
˝
 == '#') ;

108 i‡(
	`°∫cmp
(
«me
, 
˝
, 
Àn
) == 0 &&

109 (
˝
[
Àn
] == '|' || cp[len] == ':')) {

110 
	`f˛o£
(
Â
);

113 (*
˝
) && (*cp != '|') && (*cp != ':')) cp++;

114 } *
˝
++ == '|');

116 
	}
}

124 
	$tgënum
(
id
)

125 *
id
;

127 *
˝
 = 
ˇ∑b
;

129 i‡(
˝
 =(*)
NULL
 || 
id
 == (*)NULL) (-1);

132 *
˝
++ != ':')

133 i‡(
˝
[-1] == '\0') (-1);

135 
	`is•a˚
(*
˝
)) cp++;

137 i‡(
	`°∫cmp
(
˝
, 
id
, 2Ë=0 && cp[2] ='#'Ë(
	`©oi
(cp + 3));

139 
	}
}

148 
	$tgëÊag
(
id
)

149 *
id
;

151 *
˝
 = 
ˇ∑b
;

153 i‡(
˝
 =(*)
NULL
 || 
id
 == (*)NULL) (-1);

156 *
˝
++ != ':')

157 i‡(
˝
[-1] == '\0') (0);

159 
	`is•a˚
(*
˝
)) cp++;

161 i‡(
	`°∫cmp
(
˝
, 
id
, 2) == 0) (1);

163 
	}
}

172 *
	$tgë°r
(
id
, 
¨ó
)

173 *
id
;

174 **
¨ó
;

176 *
˝
 = 
ˇ∑b
;

177 *
w•
 = *
¨ó
;

179 i‡(
˝
 =(*)
NULL
 || 
id
 == (*)NULL) ((*)NULL);

182 *
˝
++ != ':')

183 i‡(
˝
[-1] ='\0'Ë((*)
NULL
);

185 
	`is•a˚
(*
˝
)) cp++;

187 i‡(
	`°∫cmp
(
˝
, 
id
, 2) == 0 && cp[2] == '=') {

188 
˝
 +3; *˝ && *˝ !':'; 
w•
++, cp++) *cp) {

190 *
w•
 = *++
˝
 - '@';

194 *++
˝
) {

196 *
w•
 = '\033';

199 *
w•
 = '\n';

202 *
w•
 = '\r';

205 *
w•
 = '\t';

208 *
w•
 = '\b';

211 *
w•
 = '\f';

218 
i
;

219 
t
 = 0;

220 
i
 = 0; i < 3 &&

221 
	`isdigô
(*
˝
); ++
i
, ++cp)

222 
t
 =Å * 8 + *
˝
 - '0';

223 *
w•
 = 
t
;

224 
˝
--;

228 *
w•
 = *
˝
;

232 : *
w•
 = *
˝
;

235 *
w•
++ = '\0';

238 *
ªt
 = *
¨ó
;

239 *
¨ó
 = 
w•
;

240 (
ªt
);

244 
	}
}

254 *
	$tgŸo
(
cm
, 
de°cﬁ
, 
de°löe
)

255 *
cm
;

256 
de°cﬁ
;

257 
de°löe
;

259 
PRIVATE
 
ªt
[24];

260 *
Ω
 = 
ªt
;

261 
ö¸
 = 0;

262 
¨gno
 = 0;

263 
numvÆ
;

265 ; *
cm
; cm++) {

266 i‡(*
cm
 == '%') {

267 *++
cm
) {

268 'i': 
ö¸
 = 1; ;

270 'r': 
¨gno
 = 1; ;

273 
numvÆ
 = (
¨gno
 =0 ? 
de°löe
 : 
de°cﬁ
);

274 *
Ω
++ = 
numvÆ
 + 
ö¸
 + *++
cm
;

275 
¨gno
 = 1 -árgno;

279 
numvÆ
 = (
¨gno
 =0 ? 
de°löe
 : 
de°cﬁ
);

280 
numvÆ
 = (numvÆ + 
ö¸
) % 100;

281 *
Ω
++ = '0' + (
numvÆ
 / 10);

282 *
Ω
++ = '0' + (
numvÆ
 % 10);

283 
¨gno
 = 1 -árgno;

287 
numvÆ
 = (
¨gno
 =0 ? 
de°löe
 : 
de°cﬁ
);

288 
numvÆ
 = (numvÆ + 
ö¸
) % 1000;

289 i‡(
numvÆ
 > 99Ë*
Ω
++ = '0' + (numval / 100);

290 i‡(
numvÆ
 > 9Ë*
Ω
++ = '0' + (numval / 10) % 10;

291 *
Ω
++ = '0' + (
numvÆ
 % 10);

292 
¨gno
 = 1 -árgno;

295 '%': *
Ω
++ = '%'; ;

301 *
Ω
++ = *
cm
;

304 *
Ω
 = '\0';

305 (
ªt
);

306 
	}
}

316 
	$çuts
(
˝
, 
aff˙t
, 
outc
)

317 *
˝
;

318 
aff˙t
;

319 
	`_PROTOTYPE
–(*
outc
), (
ch
));

321 i‡(
˝
 =(*)
NULL
) (1);

323 *
˝
Ë(*
outc
) (*cp++);

325 
	}
}

	@termmisc.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

6 
	$fixãrm
()

8 (
OK
);

9 
	}
}

11 
	$ª£âîm
()

13 (
OK
);

14 
	}
}

16 
	$ßveﬁdãrm
()

18 (
OK
);

19 
	}
}

21 
	$ßvëîm
()

23 (
OK
);

24 
	}
}

26 
	$baudøã
()

29 
	}
}

35 
	$îa£ch¨
()

37 (
_DCCHAR
);

38 
	}
}

40 
	$kûlch¨
()

42 (
_DLCHAR
);

43 
	}
}

50 
	$ßvëty
()

52 (
OK
);

53 
	}
}

60 
	$£tu±îm
()

63 
	}
}

	@test1.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/waô.h
>

5 
	~<î∫o.h
>

6 
	~<sig«l.h
>

7 
	~<°dlib.h
>

8 
	~<uni°d.h
>

9 
	~<°dio.h
>

11 
	#SIGNUM
 10

	)

12 
	#MAX_ERROR
 4

	)

13 
	#ITERATIONS
 10

	)

15 
_VOLATILE
 
	gglov
, 
	gg˘
;

16 
	gîr˘
;

17 
	gsubã°
;

19 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
 []));

20 
_PROTOTYPE
(
ã°1a
, ());

21 
_PROTOTYPE
(
∑ª¡
, ());

22 
_PROTOTYPE
(
chûd
, (
i
));

23 
_PROTOTYPE
(
ã°1b
, ());

24 
_PROTOTYPE
(
∑ª¡1
, (
chûdpid
));

25 
_PROTOTYPE
(
func
, (
s
));

26 
_PROTOTYPE
(
chûd1
, ());

27 
_PROTOTYPE
(
e
, (
n
));

28 
_PROTOTYPE
(
quô
, ());

30 
	$maö
(
¨gc
, 
¨gv
)

31 
¨gc
;

32 *
¨gv
[];

34 
i
, 
m
 = 0xFFFF;

36 
	`sync
();

38 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

40 
	`¥ötf
("Test 1 ");

41 
	`fÊush
(
°dout
);

43 
	`sy°em
("rm -rf DIR_01; mkdir DIR_01");

44 
	`chdú
("DIR_01");

46 
i
 = 0; i < 
ITERATIONS
; i++) {

47 i‡(
m
 & 00001Ë
	`ã°1a
();

48 i‡(
m
 & 00002Ë
	`ã°1b
();

51 
	`quô
();

53 
	}
}

55 
	$ã°1a
()

57 
i
, 
n
, 
pid
;

59 
subã°
 = 1;

60 
n
 = 4;

61 
i
 = 0; i < 
n
; i++) {

62 i‡((
pid
 = 
	`f‹k
())) {

63 i‡(
pid
 < 0) {

64 
	`¥ötf
("\nTest 1 fork failed\n");

65 
	`exô
(1);

67 
	`∑ª¡
();

69 
	`chûd
(
i
);

71 
	}
}

73 
	$∑ª¡
()

76 
n
;

78 
n
 = 
	`gëpid
();

79 
	`waô
(&
n
);

80 
	}
}

82 
	$chûd
(
i
)

83 
i
;

85 
n
;

87 
n
 = 
	`gëpid
();

88 
	`exô
(100+
i
);

89 
	}
}

91 
	$ã°1b
()

93 
i
, 
k
;

95 
subã°
 = 2;

96 
i
 = 0; i < 4; i++) {

97 
glov
 = 0;

98 
	`sig«l
(
SIGNUM
, 
func
);

99 i‡((
k
 = 
	`f‹k
())) {

100 i‡(
k
 < 0) {

101 
	`¥ötf
("Test 1 fork failed\n");

102 
	`exô
(1);

104 
	`∑ª¡1
(
k
);

106 
	`chûd1
();

108 
	}
}

111 
	$∑ª¡1
(
chûdpid
)

112 
chûdpid
;

115 
n
;

117 
n
 = 0;Ç < 5000;Ç++);

118 
	`kûl
(
chûdpid
, 
SIGNUM
) < 0)

120 
	`waô
(&
n
);

121 
	}
}

123 
	$func
(
s
)

124 
s
;

126 
glov
++;

127 
g˘
++;

128 
	}
}

130 
	$chûd1
()

132 
glov
 == 0);

133 
	`exô
(
g˘
);

134 
	}
}

137 
	$quô
()

140 
	`chdú
("..");

141 
	`sy°em
("rm -rf DIR*");

143 i‡(
îr˘
 == 0) {

144 
	`¥ötf
("ok\n");

145 
	`exô
(0);

147 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

148 
	`exô
(1);

150 
	}
}

	@test10.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/waô.h
>

5 
	~<î∫o.h
>

6 
	~<f˙é.h
>

7 
	~<°dlib.h
>

8 
	~<uni°d.h
>

9 
	~<°dio.h
>

11 *
	g«me
[] = {"t10a", "t10b", "t10c", "t10d", "t10e", "t10f", "t10g",

13 
	gîr˘
;

14 
	g¥og
[300];

15 
	gpsize
;

17 
_PROTOTYPE
(
maö
, ());

18 
_PROTOTYPE
(
•awn
, (
n
));

19 
_PROTOTYPE
(
mkfûes
, ());

20 
_PROTOTYPE
(
¸_fûe
, (*
«me
, 
size
));

21 
_PROTOTYPE
(
rmfûes
, ());

22 
_PROTOTYPE
(
quô
, ());

24 
	$maö
()

26 
i
, 
n
, 
pid
, 
r
;

28 
	`¥ötf
("Test 10 ");

29 
	`fÊush
(
°dout
);

31 
	`sy°em
("rm -rf DIR_10; mkdir DIR_10; cpÅ10a DIR_10");

32 
	`chdú
("DIR_10");

34 
pid
 = 
	`gëpid
();

37 
	`mkfûes
();

39 i‡(
	`gëpid
(Ë=
pid
)

40 i‡(
	`f‹k
() == 0) {

41 
	`exe˛
("t10a", (*) 0);

42 
	`exô
(0);

44 i‡(
	`gëpid
(Ë=
pid
)

45 i‡(
	`f‹k
() == 0) {

46 
	`exe˛
("t10b", (*) 0);

47 
	`exô
(0);

49 i‡(
	`gëpid
(Ë=
pid
)

50 i‡(
	`f‹k
() == 0) {

51 
	`exe˛
("t10c", (*) 0);

52 
	`exô
(0);

54 i‡(
	`gëpid
(Ë=
pid
)

55 i‡(
	`f‹k
() == 0) {

56 
	`exe˛
("t10d", (*) 0);

57 
	`exô
(0);

60 
	`§™d
(100);

61 
i
 = 0; i < 60; i++) {

62 
r
 = 
	`ønd
() & 07;

63 
	`•awn
(
r
);

66 
i
 = 0; i < 4; i++Ë
	`waô
(&
n
);

67 
	`rmfûes
();

68 
	`quô
();

70 
	}
}

72 
	$•awn
(
n
)

73 
n
;

75 
pid
, 
k
;

77 i‡(
pid
 = 
	`f‹k
()) {

78 
	`waô
(&
n
);

80 
k
 = 
	`exe˛
(
«me
[
n
], (*) 0);

81 
îr˘
++;

82 
	`¥ötf
("ChûdÉxe˛ didn'àèke. fûe=%†î∫o=%d\n", 
«me
[
n
], 
î∫o
);

83 
	`rmfûes
();

84 
	`exô
(1);

85 
	`¥ötf
("Worse yet, EXIT didn'tÉxit\n");

87 
	}
}

89 
	$mkfûes
()

91 
fd
;

92 
fd
 = 
	`›í
("t10a", 0);

93 i‡(
fd
 < 0) {

94 
	`¥ötf
("Can't openÅ10a\n");

95 
	`exô
(1);

97 
psize
 = 
	`ªad
(
fd
, (*Ë
¥og
, 300 * 4);

98 
	`¸_fûe
("t10b", 1600);

99 
	`¸_fûe
("t10c", 1400);

100 
	`¸_fûe
("t10d", 2300);

101 
	`¸_fûe
("t10e", 3100);

102 
	`¸_fûe
("t10f", 2400);

103 
	`¸_fûe
("t10g", 1700);

104 
	`¸_fûe
("t10h", 1500);

105 
	`¸_fûe
("t10i", 4000);

106 
	`¸_fûe
("t10j", 2250);

107 
	`˛o£
(
fd
);

108 
	}
}

111 
	$¸_fûe
(
«me
, 
size
)

112 *
«me
;

113 
size
;

116 
fd
;

118 #i‡(
CHIP
 =
SPARC
)

119 
size
 += 4000;

121 
¥og
[6] = (Ë
size
;

122 
fd
 = 
	`¸ót
(
«me
, 0755);

123 
	`wrôe
(
fd
, (*Ë
¥og
, 
psize
);

124 
	`˛o£
(
fd
);

125 
	}
}

127 
	$rmfûes
()

129 
	`u∆ök
("t10b");

130 
	`u∆ök
("t10c");

131 
	`u∆ök
("t10d");

132 
	`u∆ök
("t10e");

133 
	`u∆ök
("t10f");

134 
	`u∆ök
("t10g");

135 
	`u∆ök
("t10h");

136 
	`u∆ök
("t10i");

137 
	`u∆ök
("t10j");

138 
	}
}

140 
	$quô
()

143 
	`chdú
("..");

144 
	`sy°em
("rm -rf DIR*");

146 i‡(
îr˘
 == 0) {

147 
	`¥ötf
("ok\n");

148 
	`exô
(0);

150 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

151 
	`exô
(1);

153 
	}
}

	@test11.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/°©.h
>

5 
	~<sys/waô.h
>

6 
	~<î∫o.h
>

7 
	~<f˙é.h
>

8 
	~<°dlib.h
>

9 
	~<°rög.h
>

10 
	~<uni°d.h
>

11 
	~<°dio.h
>

13 
	#ITERATIONS
 10

	)

14 
	#MAX_ERROR
 1

	)

16 
	gîr˘
, 
	gsubã°
;

17 *
	gívp
[3] = {"spring", "summer", 0};

18 *
	g∑sswd_fûe
 = "/etc/passwd";

20 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

21 
_PROTOTYPE
(
ã°11a
, ());

22 
_PROTOTYPE
(
ã°11b
, ());

23 
_PROTOTYPE
(
ã°11c
, ());

24 
_PROTOTYPE
(
ã°11d
, ());

25 
_PROTOTYPE
(
e
, (
n
));

27 
	$maö
(
¨gc
, 
¨gv
)

28 
¨gc
;

29 *
¨gv
[];

31 
i
, 
m
 = 0xFFFF;

33 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

35 
	`¥ötf
("Test 11 ");

36 
	`fÊush
(
°dout
);

38 i‡(
	`gëeuid
() != 0) {

39 
	`¥ötf
("must be setuidÑoot;Åestáborted\n");

40 
	`exô
(1);

42 i‡(
	`gëuid
() == 0) {

43 
	`¥ötf
("must be setuidÑootÜogged inás someoneÉlse;Åestáborted\n");

44 
	`exô
(1);

52 
i
 = 0; i < 
ITERATIONS
; i++) {

53 i‡(
m
 & 0001Ë
	`ã°11a
();

54 i‡(
m
 & 0002Ë
	`ã°11b
();

55 i‡(
m
 & 0004Ë
	`ã°11c
();

56 i‡(
m
 & 0010Ë
	`ã°11d
();

58 i‡(
îr˘
 == 0)

59 
	`¥ötf
("ok\n");

61 
	`¥ötf
(" %dÉº‹s\n", 
îr˘
);

68 
	}
}

71 
	$ã°11a
()

74 
n
, 
fd
;

75 
Ø
[4];

78 
subã°
 = 1;

80 i‡(
	`f‹k
()) {

81 
	`waô
(&
n
);

82 i‡(
n
 !25600Ë
	`e
(1);

83 
	`u∆ök
("t1");

84 
	`u∆ök
("t2");

86 i‡(
	`chown
("t11a", 10, 20Ë< 0Ë
	`e
(2);

87 
	`chmod
("t11a", 0666);

93 
	`exe˛
("t11a", (*Ë0, 
ívp
);

96 
	`chmod
("t11a", 06555);

97 i‡((
fd
 = 
	`¸ót
("t1", 0600)Ë!3Ë
	`e
(3);

98 i‡(
	`˛o£
(
fd
Ë< 0Ë
	`e
(4);

99 i‡(
	`›í
("t1", 
O_RDWR
Ë!3Ë
	`e
(5);

100 i‡(
	`chown
("t1", 10, 99Ë< 0Ë
	`e
(6);

101 i‡((
fd
 = 
	`¸ót
("t2", 0060)Ë!4Ë
	`e
(7);

102 i‡(
	`˛o£
(
fd
Ë< 0Ë
	`e
(8);

103 i‡(
	`›í
("t2", 
O_RDWR
Ë!4Ë
	`e
(9);

104 i‡(
	`chown
("t2", 99, 20Ë< 0Ë
	`e
(10);

105 i‡(
	`£tgid
(6Ë< 0Ë
	`e
(11);

106 i‡(
	`£tuid
(5Ë< 0Ë
	`e
(12);

107 i‡(
	`gëuid
(Ë!5Ë
	`e
(13);

108 i‡(
	`gëeuid
(Ë!5Ë
	`e
(14);

109 i‡(
	`gëgid
(Ë!6Ë
	`e
(15);

110 i‡(
	`gëegid
(Ë!6Ë
	`e
(16);

111 
Ø
[0] = 3;

112 
Ø
[1] = 5;

113 
Ø
[2] = 7;

114 
Ø
[3] = 9;

115 i‡(
	`wrôe
(3, 
Ø
, 4Ë!4Ë
	`e
(17);

116 
	`l£ek
(3, 2L, 0);

117 
	`exe˛e
("t11a", "t11a", "¨g0", "¨g1", "¨g2", (*Ë0, 
ívp
);

118 
	`e
(18);

119 
	`¥ötf
("Can'tÉxecÅ11a\n");

120 
	`exô
(3);

122 
	}
}

126 
	$ã°11b
()

128 
n
;

129 *
¨gv
[5];

131 
subã°
 = 2;

132 i‡(
	`f‹k
()) {

133 
	`waô
(&
n
);

134 i‡(
n
 !(75 << 8)Ë
	`e
(20);

137 
¨gv
[0] = "t11b";

138 
¨gv
[1] = "abc";

139 
¨gv
[2] = "defghi";

140 
¨gv
[3] = "j";

141 
¨gv
[4] = 0;

142 
	`execv
("t11b", 
¨gv
);

143 
	`e
(19);

145 
	}
}

147 
	$ã°11c
()

151 
n
, 
ëc_uid
;

152 
uid_t
 
ruid
, 
euid
;

153 *
 amï
, *
˙amï
, *
p
;

154 
¨øy
[
L_cu£rid
], 
ßve
[L_cu£rid], 
ßve2
[L_cuserid];

155 
FILE
 *
°ªam
;

157 
subã°
 = 3;

158 
î∫o
 = -2000;

159 
¨øy
[0] = '@';

160 
¨øy
[1] = '0';

161 
ßve
[0] = '#';

162 
ßve
[1] = '0';

163 
ruid
 = 
	`gëuid
();

164 
euid
 = 
	`gëeuid
();

165 
 amï
 = 
	`gëlogö
();

166 
	`°r˝y
(
ßve
, 
 amï
);

167 
˙amï
 = 
	`cu£rid
(
¨øy
);

168 
	`°r˝y
(
ßve2
, 
˙amï
);

171 i‡(
euid
 !0Ë
	`e
(1);

172 i‡(
ruid
 =0Ë
	`e
(2);

173 i‡(
	`°rcmp
(
˙amï
, "roŸ"Ë!0Ë
	`e
(3);

174 i‡(
	`°rcmp
(
¨øy
, "roŸ"Ë!0Ë
	`e
(4);

175 i‡–(
n
 = 
	`°æí
(
ßve
)Ë=0Ë
	`e
(5);

176 i‡(
	`°rcmp
(
ßve
, 
˙amï
Ë=0Ë
	`e
(6);

177 
˙amï
 = 
	`cu£rid
(
NULL
);

178 i‡(
	`°rcmp
(
˙amï
, 
ßve2
Ë!0Ë
	`e
(7);

181 i‡(
n
 == 0) ;

182 i‡–(
°ªam
 = 
	`f›í
(
∑sswd_fûe
, "r")Ë=
NULL
Ë
	`e
(8);

183 
	`fgës
(
¨øy
, 
L_cu£rid
, 
°ªam
Ë!
NULL
) {

184 i‡(
	`°∫cmp
(
¨øy
, 
ßve
, 
n
) == 0) {

185 
p
 = &
¨øy
[0];

186 *
p
 != ':')Ö++;

187 
p
++;

188 *
p
 != ':')Ö++;

189 
p
++;

190 
ëc_uid
 = 
	`©oi
(
p
);

191 i‡(
ëc_uid
 !
ruid
Ë
	`e
(9);

195 
	`f˛o£
(
°ªam
);

196 
	}
}

198 
	$ã°11d
()

200 
fd
;

201 
°©
 
°©buf
;

203 
subã°
 = 4;

204 
fd
 = 
	`¸ót
("T11.1", 0750);

205 i‡(
fd
 < 0Ë
	`e
(1);

206 i‡(
	`chown
("T11.1", 8, 1Ë!0Ë
	`e
(2);

207 i‡(
	`chmod
("T11.1", 0666Ë!0Ë
	`e
(3);

208 i‡(
	`°©
("T11.1", &
°©buf
Ë!0Ë
	`e
(4);

209 i‡((
°©buf
.
°_mode
 & (
S_IRWXU
 | 
S_IRWXG
 | 
S_IRWXO
)Ë!0666Ë
	`e
(5);

210 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(6);

211 i‡(
	`u∆ök
("T11.1"Ë!0Ë
	`e
(7);

212 
	}
}

214 
	$e
(
n
)

215 
n
;

217 
îr_num
 = 
î∫o
;

219 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d ", 
subã°
, 
n
, 
î∫o
);

220 
î∫o
 = 
îr_num
;

221 
	`≥º‹
("");

222 i‡(
îr˘
++ > 
MAX_ERROR
) {

223 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

224 
	`chdú
("..");

225 
	`sy°em
("rm -rf DIR*");

226 
	`exô
(1);

228 
	}
}

	@test12.c

6 
	~<sys/ty≥s.h
>

7 
	~<sys/waô.h
>

8 
	~<°dlib.h
>

9 
	~<uni°d.h
>

10 
	~<°dio.h
>

12 
	#NUM_TIMES
 1000

	)

14 
	gîr˘
 = 0;

16 
_PROTOTYPE
(
maö
, ());

17 
_PROTOTYPE
(
quô
, ());

19 
	$maö
()

21 
i
;

22 
k
;

24 
	`¥ötf
("Test 12 ");

25 
	`fÊush
(
°dout
);

27 
	`sy°em
("rm -rf DIR_12; mkdir DIR_12");

28 
	`chdú
("DIR_12");

30 
i
 = 0; i < 
NUM_TIMES
; i++Ë
	`f‹k
()) {

31 0: 
	`exô
(1); ;

33 
	`¥ötf
("fork broke\n");

34 
	`exô
(1);

35 : 
	`waô
(&
k
); ;

38 
	`quô
();

40 
	}
}

42 
	$quô
()

45 
	`chdú
("..");

46 
	`sy°em
("rm -rf DIR*");

48 i‡(
îr˘
 == 0) {

49 
	`¥ötf
("ok\n");

50 
	`exô
(0);

52 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

53 
	`exô
(1);

55 
	}
}

	@test13.c

9 
	~<sys/ty≥s.h
>

10 
	~<sys/waô.h
>

11 
	~<°dlib.h
>

12 
	~<uni°d.h
>

13 
	~<°dio.h
>

15 
	#BLOCK_SIZE
 1000

	)

16 
	#NUM_BLOCKS
 1000

	)

18 
	gîr˘
 = 0;

19 
	gbuf„r
[
BLOCK_SIZE
];

21 
_PROTOTYPE
(
maö
, ());

22 
_PROTOTYPE
(
quô
, ());

24 
	$maö
()

26 
°©_loc
, 
pùefd
[2];

27 
i
;

28 
	`pùe
(
pùefd
);

30 
	`¥ötf
("Test 13 ");

31 
	`fÊush
(
°dout
);

33 
	`sy°em
("rm -rf DIR_13; mkdir DIR_13");

34 
	`chdú
("DIR_13");

36 
	`pùe
(
pùefd
);

38 
	`f‹k
()) {

41 
i
 = 0; i < 
NUM_BLOCKS
; i++)

42 i‡(
	`ªad
(
pùefd
[0], 
buf„r
, 
BLOCK_SIZE
) != BLOCK_SIZE) ;

43 
	`exô
(0);

46 
	`≥º‹
("fork broke");

47 
	`exô
(1);

51 
i
 = 0; i < 
NUM_BLOCKS
; i++Ë
	`wrôe
(
pùefd
[1], 
buf„r
, 
BLOCK_SIZE
);

52 
	`waô
(&
°©_loc
);

55 
	`quô
();

57 
	}
}

59 
	$quô
()

62 
	`chdú
("..");

63 
	`sy°em
("rm -rf DIR*");

65 i‡(
îr˘
 == 0) {

66 
	`¥ötf
("ok\n");

67 
	`exô
(0);

69 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

70 
	`exô
(1);

72 
	}
}

	@test14.c

3 
	~<sys/ty≥s.h
>

4 
	~<î∫o.h
>

5 
	~<f˙é.h
>

6 
	~<°dlib.h
>

7 
	~<uni°d.h
>

8 
	~<°dio.h
>

10 
	#TRIALS
 100

	)

11 
	#MAX_ERROR
 4

	)

13 
	g«me
[20] = {"TMP14."};

14 
	gîr˘
;

15 
	gsubã°
 = 1;

17 
_PROTOTYPE
(
maö
, ());

18 
_PROTOTYPE
(
e
, (
n
));

19 
_PROTOTYPE
(
quô
, ());

21 
	$maö
()

23 
fd0
, 
i
, 
pid
;

25 
	`¥ötf
("Test 14 ");

26 
	`fÊush
(
°dout
);

28 
	`sy°em
("rm -rf DIR_14; mkdir DIR_14");

29 
	`chdú
("DIR_14");

31 
pid
 = 
	`gëpid
();

32 
«me
[6] = (
pid
 & 037) + 33;

33 
«me
[7] = ((
pid
 *Öid) & 037) + 33;

34 
«me
[8] = 0;

37 
i
 = 0; i < 
TRIALS
; i++) {

38 i‡–(
fd0
 = 
	`¸ót
(
«me
, 0777)Ë< 0Ë
	`e
(1);

39 i‡(
	`wrôe
(
fd0
, 
«me
, 20Ë!20Ë
	`e
(2);

40 i‡(
	`u∆ök
(
«me
Ë!0Ë
	`e
(3);

41 i‡(
	`˛o£
(
fd0
Ë!0Ë
	`e
(4);

45 
fd0
 = 
	`¸ót
(
«me
, 0777);

46 
	`wrôe
(
fd0
, 
«me
, 20);

47 
	`u∆ök
(
«me
);

48 
	`quô
();

50 
	}
}

53 
	$e
(
n
)

54 
n
;

56 
îr_num
 = 
î∫o
;

58 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d ", 
subã°
, 
n
, 
î∫o
);

59 
î∫o
 = 
îr_num
;

60 
	`≥º‹
("");

61 i‡(
îr˘
++ > 
MAX_ERROR
) {

62 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

63 
	`chdú
("..");

64 
	`sy°em
("rm -rf DIR*");

65 
	`exô
(1);

67 
	}
}

69 
	$quô
()

72 
	`chdú
("..");

73 
	`sy°em
("rm -rf DIR*");

75 i‡(
îr˘
 == 0) {

76 
	`¥ötf
("ok\n");

77 
	`exô
(0);

79 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

80 
	`exô
(1);

82 
	}
}

	@test15.c

10 
	~<sys/ty≥s.h
>

11 
	~<f˙é.h
>

12 
	~<°rög.h
>

13 
	~<°dlib.h
>

14 
	~<°dio.h
>

16 
_PROTOTYPE
–
chdú
, (*
_∑th
));

18 
	#STREQ
(
a
, 
b
Ë(
	`°rcmp
(◊), (b)Ë=0)

	)

20 *
	gô
 = "<UNSET>";

21 
	gîr˘
;

22 
	gwa£º‹
 = 0;

24 
	gu˘e°
[] = "\004\203";

25 
	gch¨sig√d
;

27 
_PROTOTYPE
(
check
, (
thög
, 
numbî
));

28 
_PROTOTYPE
(
equÆ
, (*
a
, *
b
, 
numbî
));

29 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
 []));

30 
_PROTOTYPE
(
fú°
, ());

31 
_PROTOTYPE
(
£c⁄d
, ());

32 
_PROTOTYPE
(
quô
, ());

37 
	$check
(
thög
, 
numbî
)

38 
thög
;

39 
numbî
;

41 i‡(!
thög
) {

42 
	`¥ötf
("%†ÊunkedÅe° %d\n", 
ô
, 
numbî
);

43 
wa£º‹
 = 1;

44 
îr˘
++;

46 
	}
}

51 
	$equÆ
(
a
, 
b
, 
numbî
)

52 *
a
;

53 *
b
;

54 
numbî
;

56 
	`check
(
a
 !
NULL
 && 
b
 !NULL && 
	`STREQ
◊, b), 
numbî
);

57 
	}
}

59 
	g⁄e
[50];

60 
	gtwo
[50];

62 #ifde‡
UNIXERR


63 
	#ERR
 1

	)

65 #ifde‡
BERKERR


66 
	#ERR
 1

	)

68 #ifde‡
ERR


69 
	gf
;

70 *
sys_îæi°
[];

71 
sys_√º
;

75 
	$maö
(
¨gc
, 
¨gv
)

76 
¨gc
;

77 *
¨gv
[];

79 
	`¥ötf
("Test 15 ");

80 
	`fÊush
(
°dout
);

82 
	`sy°em
("rm -rf DIR_15; mkdir DIR_15");

83 
	`chdú
("DIR_15");

85 i‡(
u˘e°
[0] < uctest[1])

86 
ch¨sig√d
 = 0;

88 
ch¨sig√d
 = 1;

92 
	`fú°
();

93 
	`£c⁄d
();

95 
îr˘
 = 
wa£º‹
;

96 
	`quô
();

98 
	}
}

100 
	$fú°
()

103 
ô
 = "strcmp";

104 
	`check
(
	`°rcmp
("", "") == 0, 1);

105 
	`check
(
	`°rcmp
("a", "a") == 0, 2);

106 
	`check
(
	`°rcmp
("abc", "abc") == 0, 3);

107 
	`check
(
	`°rcmp
("abc", "abcd") < 0, 4);

108 
	`check
(
	`°rcmp
("abcd", "abc") > 0, 5);

109 
	`check
(
	`°rcmp
("abcd", "abce") < 0, 6);

110 
	`check
(
	`°rcmp
("abce", "abcd") > 0, 7);

111 
	`check
(
	`°rcmp
("a\203", "a") > 0, 8);

113 #ifde‡
NOT_ANSI


114 i‡(
ch¨sig√d
)

115 
	`check
(
	`°rcmp
("a\203", "a\003") < 0, 9);

117 
	`check
(
	`°rcmp
("a\203", "a\003") > 0, 9);

119 
	`check
(
	`°rcmp
("a\203", "a\003") > 0, 9);

122 
	`check
(
	`°rcmp
("abcd" + 1, "abcd" + 1) == 0, 10);

123 
	`check
(
	`°rcmp
("abcd" + 1, "abce" + 1) < 0, 11);

124 
	`check
(
	`°rcmp
("abcd" + 1, "bcd") == 0, 12);

125 
	`check
(
	`°rcmp
("abce" + 1, "bcd") > 0, 13);

126 
	`check
(
	`°rcmp
("abcd" + 2, "bcd" + 1) == 0, 14);

127 
	`check
(
	`°rcmp
("abcd" + 2, "bce" + 1) < 0, 15);

130 
ô
 = "strcpy";

131 
	`check
(
	`°r˝y
(
⁄e
, "abcd") == one, 1);

132 
	`equÆ
(
⁄e
, "abcd", 2);

134 (Ë
	`°r˝y
(
⁄e
, "x");

135 
	`equÆ
(
⁄e
, "x", 3);

136 
	`equÆ
(
⁄e
 + 2, "cd", 4);

138 (Ë
	`°r˝y
(
two
, "hiÅhere");

139 (Ë
	`°r˝y
(
⁄e
, 
two
);

140 
	`equÆ
(
⁄e
, "hiÅhere", 5);

141 
	`equÆ
(
two
, "hiÅhere", 6);

143 (Ë
	`°r˝y
(
⁄e
, "");

144 
	`equÆ
(
⁄e
, "", 7);

146 (Ë
	`°r˝y
(
⁄e
, "abcdef" + 1);

147 
	`equÆ
(
⁄e
, "bcdef", 8);

148 (Ë
	`°r˝y
(
⁄e
 + 1, "*xy" + 1);

149 
	`equÆ
(
⁄e
, "bxy", 9);

150 
	`equÆ
(
⁄e
 + 4, "f", 10);

153 
ô
 = "strcat";

154 (Ë
	`°r˝y
(
⁄e
, "ijk");

155 
	`check
(
	`°rˇt
(
⁄e
, "lmn") == one, 1);

156 
	`equÆ
(
⁄e
, "ijklmn", 2);

158 (Ë
	`°r˝y
(
⁄e
, "x");

159 (Ë
	`°rˇt
(
⁄e
, "yz");

160 
	`equÆ
(
⁄e
, "xyz", 3);

161 
	`equÆ
(
⁄e
 + 4, "mn", 4);

163 (Ë
	`°r˝y
(
⁄e
, "gh");

164 (Ë
	`°r˝y
(
two
, "ef");

165 (Ë
	`°rˇt
(
⁄e
, 
two
);

166 
	`equÆ
(
⁄e
, "ghef", 5);

167 
	`equÆ
(
two
, "ef", 6);

169 (Ë
	`°r˝y
(
⁄e
, "");

170 (Ë
	`°rˇt
(
⁄e
, "");

171 
	`equÆ
(
⁄e
, "", 7);

172 (Ë
	`°r˝y
(
⁄e
, "ab");

173 (Ë
	`°rˇt
(
⁄e
, "");

174 
	`equÆ
(
⁄e
, "ab", 8);

175 (Ë
	`°r˝y
(
⁄e
, "");

176 (Ë
	`°rˇt
(
⁄e
, "cd");

177 
	`equÆ
(
⁄e
, "cd", 9);

181 
ô
 = "strncat";

182 (Ë
	`°r˝y
(
⁄e
, "ijk");

183 
	`check
(
	`°∫ˇt
(
⁄e
, "lmn", 99) == one, 1);

184 
	`equÆ
(
⁄e
, "ijklmn", 2);

186 (Ë
	`°r˝y
(
⁄e
, "x");

187 (Ë
	`°∫ˇt
(
⁄e
, "yz", 99);

188 
	`equÆ
(
⁄e
, "xyz", 3);

189 
	`equÆ
(
⁄e
 + 4, "mn", 4);

191 (Ë
	`°r˝y
(
⁄e
, "gh");

192 (Ë
	`°r˝y
(
two
, "ef");

193 (Ë
	`°∫ˇt
(
⁄e
, 
two
, 99);

194 
	`equÆ
(
⁄e
, "ghef", 5);

195 
	`equÆ
(
two
, "ef", 6);

197 (Ë
	`°r˝y
(
⁄e
, "");

198 (Ë
	`°∫ˇt
(
⁄e
, "", 99);

199 
	`equÆ
(
⁄e
, "", 7);

200 (Ë
	`°r˝y
(
⁄e
, "ab");

201 (Ë
	`°∫ˇt
(
⁄e
, "", 99);

202 
	`equÆ
(
⁄e
, "ab", 8);

203 (Ë
	`°r˝y
(
⁄e
, "");

204 (Ë
	`°∫ˇt
(
⁄e
, "cd", 99);

205 
	`equÆ
(
⁄e
, "cd", 9);

207 (Ë
	`°r˝y
(
⁄e
, "ab");

208 (Ë
	`°∫ˇt
(
⁄e
, "cdef", 2);

209 
	`equÆ
(
⁄e
, "abcd", 10);

211 (Ë
	`°∫ˇt
(
⁄e
, "gh", 0);

212 
	`equÆ
(
⁄e
, "abcd", 11);

214 (Ë
	`°∫ˇt
(
⁄e
, "gh", 2);

215 
	`equÆ
(
⁄e
, "abcdgh", 12);

217 (Ë
	`°r˝y
(
⁄e
, "abcdefghij");

218 (Ë
	`°r˝y
(
⁄e
, "abcd");

219 (Ë
	`°r˝y
(
⁄e
, "abc");

220 (Ë
	`°∫ˇt
(
⁄e
, "de" + 1, 1);

221 
	`equÆ
(
⁄e
, "abce", 13);

222 
	`equÆ
(
⁄e
 + 4, "", 14);

223 
	`equÆ
(
⁄e
 + 5, "fghij", 15);

226 
ô
 = "strncmp";

227 
	`check
(
	`°∫cmp
("", "", 99) == 0, 1);

228 
	`check
(
	`°∫cmp
("a", "a", 99) == 0, 2);

229 
	`check
(
	`°∫cmp
("abc", "abc", 99) == 0, 3);

230 
	`check
(
	`°∫cmp
("abc", "abcd", 99) < 0, 4);

231 
	`check
(
	`°∫cmp
("abcd", "abc", 99) > 0, 5);

232 
	`check
(
	`°∫cmp
("abcd", "abce", 99) < 0, 6);

233 
	`check
(
	`°∫cmp
("abce", "abcd", 99) > 0, 7);

234 
	`check
(
	`°∫cmp
("a\203", "a", 2) > 0, 8);

236 #ifde‡
NOT_ANSI


237 i‡(
ch¨sig√d
)

238 
	`check
(
	`°∫cmp
("a\203", "a\003", 2) < 0, 9);

240 
	`check
(
	`°∫cmp
("a\203", "a\003", 2) > 0, 9);

242 
	`check
(
	`°∫cmp
("a\203", "a\003", 2) > 0, 9);

245 
	`check
(
	`°∫cmp
("abce", "abcd", 3) == 0, 10);

246 
	`check
(
	`°∫cmp
("abce", "abc", 3) == 0, 11);

247 
	`check
(
	`°∫cmp
("abcd", "abce", 4) < 0, 12);

248 
	`check
(
	`°∫cmp
("abc", "def", 0) == 0, 13);

251 
ô
 = "strncpy";

252 
	`check
(
	`°∫˝y
(
⁄e
, "abc", 4) == one, 1);

253 
	`equÆ
(
⁄e
, "abc", 2);

255 (Ë
	`°r˝y
(
⁄e
, "abcdefgh");

256 (Ë
	`°∫˝y
(
⁄e
, "xyz", 2);

257 
	`equÆ
(
⁄e
, "xycdefgh", 3);

259 (Ë
	`°r˝y
(
⁄e
, "abcdefgh");

260 (Ë
	`°∫˝y
(
⁄e
, "xyz", 3);

261 
	`equÆ
(
⁄e
, "xyzdefgh", 4);

263 (Ë
	`°r˝y
(
⁄e
, "abcdefgh");

264 (Ë
	`°∫˝y
(
⁄e
, "xyz", 4);

265 
	`equÆ
(
⁄e
, "xyz", 5);

266 
	`equÆ
(
⁄e
 + 4, "efgh", 6);

268 (Ë
	`°r˝y
(
⁄e
, "abcdefgh");

269 (Ë
	`°∫˝y
(
⁄e
, "xyz", 5);

270 
	`equÆ
(
⁄e
, "xyz", 7);

271 
	`equÆ
(
⁄e
 + 4, "", 8);

272 
	`equÆ
(
⁄e
 + 5, "fgh", 9);

274 (Ë
	`°r˝y
(
⁄e
, "abc");

275 (Ë
	`°∫˝y
(
⁄e
, "xyz", 0);

276 
	`equÆ
(
⁄e
, "abc", 10);

278 (Ë
	`°∫˝y
(
⁄e
, "", 2);

279 
	`equÆ
(
⁄e
, "", 11);

280 
	`equÆ
(
⁄e
 + 1, "", 12);

281 
	`equÆ
(
⁄e
 + 2, "c", 13);

283 (Ë
	`°r˝y
(
⁄e
, "hiÅhere");

284 (Ë
	`°∫˝y
(
two
, 
⁄e
, 9);

285 
	`equÆ
(
two
, "hiÅhere", 14);

286 
	`equÆ
(
⁄e
, "hiÅhere", 15);

289 
ô
 = "strlen";

290 
	`check
(
	`°æí
("") == 0, 1);

291 
	`check
(
	`°æí
("a") == 1, 2);

292 
	`check
(
	`°æí
("abcd") == 4, 3);

293 
	`check
(
	`°æí
("abcd" + 1) == 3, 4);

296 
ô
 = "strchr";

297 
	`check
(
	`°rchr
("abcd", 'z'Ë=
NULL
, 1);

298 (Ë
	`°r˝y
(
⁄e
, "abcd");

299 
	`check
(
	`°rchr
(
⁄e
, 'c') == one + 2, 2);

300 
	`check
(
	`°rchr
(
⁄e
, 'd') == one + 3, 3);

301 
	`check
(
	`°rchr
(
⁄e
, 'a') == one, 4);

302 
	`check
(
	`°rchr
(
⁄e
, '\0') == one + 4, 5);

303 (Ë
	`°r˝y
(
⁄e
, "ababa");

304 
	`check
(
	`°rchr
(
⁄e
, 'b') == one + 1, 6);

305 (Ë
	`°r˝y
(
⁄e
, "");

306 
	`check
(
	`°rchr
(
⁄e
, 'b'Ë=
NULL
, 7);

307 
	`check
(
	`°rchr
(
⁄e
, '\0') == one, 8);

310 
ô
 = "index";

311 
	`check
(
	`ödex
("abcd", 'z'Ë=
NULL
, 1);

312 (Ë
	`°r˝y
(
⁄e
, "abcd");

313 
	`check
(
	`ödex
(
⁄e
, 'c') == one + 2, 2);

314 
	`check
(
	`ödex
(
⁄e
, 'd') == one + 3, 3);

315 
	`check
(
	`ödex
(
⁄e
, 'a') == one, 4);

316 
	`check
(
	`ödex
(
⁄e
, '\0') == one + 4, 5);

317 (Ë
	`°r˝y
(
⁄e
, "ababa");

318 
	`check
(
	`ödex
(
⁄e
, 'b') == one + 1, 6);

319 (Ë
	`°r˝y
(
⁄e
, "");

320 
	`check
(
	`ödex
(
⁄e
, 'b'Ë=
NULL
, 7);

321 
	`check
(
	`ödex
(
⁄e
, '\0') == one, 8);

324 
ô
 = "strrchr";

325 
	`check
(
	`°ºchr
("abcd", 'z'Ë=
NULL
, 1);

326 (Ë
	`°r˝y
(
⁄e
, "abcd");

327 
	`check
(
	`°ºchr
(
⁄e
, 'c') == one + 2, 2);

328 
	`check
(
	`°ºchr
(
⁄e
, 'd') == one + 3, 3);

329 
	`check
(
	`°ºchr
(
⁄e
, 'a') == one, 4);

330 
	`check
(
	`°ºchr
(
⁄e
, '\0') == one + 4, 5);

331 (Ë
	`°r˝y
(
⁄e
, "ababa");

332 
	`check
(
	`°ºchr
(
⁄e
, 'b') == one + 3, 6);

333 (Ë
	`°r˝y
(
⁄e
, "");

334 
	`check
(
	`°ºchr
(
⁄e
, 'b'Ë=
NULL
, 7);

335 
	`check
(
	`°ºchr
(
⁄e
, '\0') == one, 8);

338 
ô
 = "rindex";

339 
	`check
(
	`rödex
("abcd", 'z'Ë=
NULL
, 1);

340 (Ë
	`°r˝y
(
⁄e
, "abcd");

341 
	`check
(
	`rödex
(
⁄e
, 'c') == one + 2, 2);

342 
	`check
(
	`rödex
(
⁄e
, 'd') == one + 3, 3);

343 
	`check
(
	`rödex
(
⁄e
, 'a') == one, 4);

344 
	`check
(
	`rödex
(
⁄e
, '\0') == one + 4, 5);

345 (Ë
	`°r˝y
(
⁄e
, "ababa");

346 
	`check
(
	`rödex
(
⁄e
, 'b') == one + 3, 6);

347 (Ë
	`°r˝y
(
⁄e
, "");

348 
	`check
(
	`rödex
(
⁄e
, 'b'Ë=
NULL
, 7);

349 
	`check
(
	`rödex
(
⁄e
, '\0') == one, 8);

350 
	}
}

352 
	$£c⁄d
()

355 
ô
 = "strpbrk";

356 
	`check
(
	`°Ωbrk
("abcd", "z"Ë=
NULL
, 1);

357 (Ë
	`°r˝y
(
⁄e
, "abcd");

358 
	`check
(
	`°Ωbrk
(
⁄e
, "c") == one + 2, 2);

359 
	`check
(
	`°Ωbrk
(
⁄e
, "d") == one + 3, 3);

360 
	`check
(
	`°Ωbrk
(
⁄e
, "a") == one, 4);

361 
	`check
(
	`°Ωbrk
(
⁄e
, ""Ë=
NULL
, 5);

362 
	`check
(
	`°Ωbrk
(
⁄e
, "cb") == one + 1, 6);

363 (Ë
	`°r˝y
(
⁄e
, "abcabdea");

364 
	`check
(
	`°Ωbrk
(
⁄e
, "b") == one + 1, 7);

365 
	`check
(
	`°Ωbrk
(
⁄e
, "cb") == one + 1, 8);

366 
	`check
(
	`°Ωbrk
(
⁄e
, "db") == one + 1, 9);

367 (Ë
	`°r˝y
(
⁄e
, "");

368 
	`check
(
	`°Ωbrk
(
⁄e
, "bc"Ë=
NULL
, 10);

369 
	`check
(
	`°Ωbrk
(
⁄e
, ""Ë=
NULL
, 11);

372 
ô
 = "strstr";

373 
	`check
(
	`°r°r
("abcd", "z"Ë=
NULL
, 1);

374 
	`check
(
	`°r°r
("abcd", "abx"Ë=
NULL
, 2);

375 (Ë
	`°r˝y
(
⁄e
, "abcd");

376 
	`check
(
	`°r°r
(
⁄e
, "c") == one + 2, 3);

377 
	`check
(
	`°r°r
(
⁄e
, "bc") == one + 1, 4);

378 
	`check
(
	`°r°r
(
⁄e
, "d") == one + 3, 5);

379 
	`check
(
	`°r°r
(
⁄e
, "cd") == one + 2, 6);

380 
	`check
(
	`°r°r
(
⁄e
, "abc") == one, 7);

381 
	`check
(
	`°r°r
(
⁄e
, "abcd") == one, 8);

382 
	`check
(
	`°r°r
(
⁄e
, "abcde"Ë=
NULL
, 9);

383 
	`check
(
	`°r°r
(
⁄e
, "de"Ë=
NULL
, 10);

384 #ifde‡
NOT_ANSI


385 
	`check
(
	`°r°r
(
⁄e
, "") == one + 4, 11);

387 
	`check
(
	`°r°r
(
⁄e
, "") == one, 11);

389 (Ë
	`°r˝y
(
⁄e
, "ababa");

390 
	`check
(
	`°r°r
(
⁄e
, "ba") == one + 1, 12);

391 (Ë
	`°r˝y
(
⁄e
, "");

392 
	`check
(
	`°r°r
(
⁄e
, "b"Ë=
NULL
, 13);

393 
	`check
(
	`°r°r
(
⁄e
, "") == one, 14);

394 (Ë
	`°r˝y
(
⁄e
, "bcbca");

395 
	`check
(
	`°r°r
(
⁄e
, "bca") == one + 2, 15);

396 (Ë
	`°r˝y
(
⁄e
, "bbbcabbca");

397 
	`check
(
	`°r°r
(
⁄e
, "bbca") == one + 1, 16);

400 
ô
 = "strspn";

401 
	`check
(
	`°r•n
("abcba", "abc") == 5, 1);

402 
	`check
(
	`°r•n
("abcba", "ab") == 2, 2);

403 
	`check
(
	`°r•n
("abc", "qx") == 0, 3);

404 
	`check
(
	`°r•n
("", "ab") == 0, 4);

405 
	`check
(
	`°r•n
("abc", "") == 0, 5);

408 
ô
 = "strcspn";

409 
	`check
(
	`°rc•n
("abcba", "qx") == 5, 1);

410 
	`check
(
	`°rc•n
("abcba", "cx") == 2, 2);

411 
	`check
(
	`°rc•n
("abc", "abc") == 0, 3);

412 
	`check
(
	`°rc•n
("", "ab") == 0, 4);

413 
	`check
(
	`°rc•n
("abc", "") == 3, 5);

416 
ô
 = "strtok";

417 (Ë
	`°r˝y
(
⁄e
, "first, second,Åhird");

418 
	`equÆ
(
	`°πok
(
⁄e
, ", "), "first", 1);

419 
	`equÆ
(
⁄e
, "first", 2);

420 
	`equÆ
(
	`°πok
((*Ë
NULL
, ", "), "second", 3);

421 
	`equÆ
(
	`°πok
((*Ë
NULL
, ", "), "third", 4);

422 
	`check
(
	`°πok
((*Ë
NULL
, ", ") == NULL, 5);

423 (Ë
	`°r˝y
(
⁄e
, ", first, ");

424 
	`equÆ
(
	`°πok
(
⁄e
, ", "), "first", 6);

425 
	`check
(
	`°πok
((*Ë
NULL
, ", ") == NULL, 7);

426 (Ë
	`°r˝y
(
⁄e
, "1a, 1b; 2a, 2b");

427 
	`equÆ
(
	`°πok
(
⁄e
, ", "), "1a", 8);

428 
	`equÆ
(
	`°πok
((*Ë
NULL
, "; "), "1b", 9);

429 
	`equÆ
(
	`°πok
((*Ë
NULL
, ", "), "2a", 10);

430 (Ë
	`°r˝y
(
two
, "x-y");

431 
	`equÆ
(
	`°πok
(
two
, "-"), "x", 11);

432 
	`equÆ
(
	`°πok
((*Ë
NULL
, "-"), "y", 12);

433 
	`check
(
	`°πok
((*Ë
NULL
, "-") == NULL, 13);

434 (Ë
	`°r˝y
(
⁄e
, "a,b, c,, ,d");

435 
	`equÆ
(
	`°πok
(
⁄e
, ", "), "a", 14);

436 
	`equÆ
(
	`°πok
((*Ë
NULL
, ", "), "b", 15);

437 
	`equÆ
(
	`°πok
((*Ë
NULL
, " ,"), "c", 16);

438 
	`equÆ
(
	`°πok
((*Ë
NULL
, " ,"), "d", 17);

439 
	`check
(
	`°πok
((*Ë
NULL
, ", ") == NULL, 18);

440 
	`check
(
	`°πok
((*Ë
NULL
, ", ") == NULL, 19);

441 (Ë
	`°r˝y
(
⁄e
, ", ");

442 
	`check
(
	`°πok
(
⁄e
, ", "Ë=
NULL
, 20);

443 (Ë
	`°r˝y
(
⁄e
, "");

444 
	`check
(
	`°πok
(
⁄e
, ", "Ë=
NULL
, 21);

445 (Ë
	`°r˝y
(
⁄e
, "abc");

446 
	`equÆ
(
	`°πok
(
⁄e
, ", "), "abc", 22);

447 
	`check
(
	`°πok
((*Ë
NULL
, ", ") == NULL, 23);

448 (Ë
	`°r˝y
(
⁄e
, "abc");

449 
	`equÆ
(
	`°πok
(
⁄e
, ""), "abc", 24);

450 
	`check
(
	`°πok
((*Ë
NULL
, "") == NULL, 25);

451 (Ë
	`°r˝y
(
⁄e
, "abcdefgh");

452 (Ë
	`°r˝y
(
⁄e
, "a,b,c");

453 
	`equÆ
(
	`°πok
(
⁄e
, ","), "a", 26);

454 
	`equÆ
(
	`°πok
((*Ë
NULL
, ","), "b", 27);

455 
	`equÆ
(
	`°πok
((*Ë
NULL
, ","), "c", 28);

456 
	`check
(
	`°πok
((*Ë
NULL
, ",") == NULL, 29);

457 
	`equÆ
(
⁄e
 + 6, "gh", 30);

458 
	`equÆ
(
⁄e
, "a", 31);

459 
	`equÆ
(
⁄e
 + 2, "b", 32);

460 
	`equÆ
(
⁄e
 + 4, "c", 33);

463 
ô
 = "memcmp";

464 
	`check
(
	`memcmp
("a", "a", 1) == 0, 1);

465 
	`check
(
	`memcmp
("abc", "abc", 3) == 0, 2);

466 
	`check
(
	`memcmp
("abcd", "abce", 4) < 0, 3);

467 
	`check
(
	`memcmp
("abce", "abcd", 4) > 0, 4);

468 
	`check
(
	`memcmp
("alph", "beta", 4) < 0, 5);

470 #ifde‡
NOT_ANSI


471 i‡(
ch¨sig√d
)

472 
	`check
(
	`memcmp
("a\203", "a\003", 2) < 0, 6);

474 
	`check
(
	`memcmp
("a\203", "a\003", 2) > 0, 6);

476 
	`check
(
	`memcmp
("a\203", "a\003", 2) > 0, 6);

479 
	`check
(
	`memcmp
("abce", "abcd", 3) == 0, 7);

480 
	`check
(
	`memcmp
("abc", "def", 0) == 0, 8);

482 
	`check
(
	`memcmp
("a" + 1, "a" + 1, 1) == 0, 9);

483 
	`check
(
	`memcmp
("abc" + 1, "bc", 2) == 0, 10);

484 
	`check
(
	`memcmp
("bc", "abc" + 1, 2) == 0, 11);

485 
	`check
(
	`memcmp
("abcd" + 1, "abce" + 1, 3) < 0, 12);

486 
	`check
(
	`memcmp
("abce" + 1, "abcd" + 1, 3) > 0, 13);

490 
	`check
(
	`memcmp
("abcde" + 1, "abcdf" + 1, 3) == 0, 15);

493 
ô
 = "memchr";

494 
	`check
(
	`memchr
("abcd", 'z', 4Ë=
NULL
, 1);

495 (Ë
	`°r˝y
(
⁄e
, "abcd");

496 
	`check
–(*)
	`memchr
(
⁄e
, 'c', 4) == one + 2, 2);

497 
	`check
–(*)
	`memchr
(
⁄e
, 'd', 4) == one + 3, 3);

498 
	`check
–(*)
	`memchr
(
⁄e
, 'a', 4) == one, 4);

499 
	`check
–(*)
	`memchr
(
⁄e
, '\0', 5) == one + 4, 5);

500 (Ë
	`°r˝y
(
⁄e
, "ababa");

501 
	`check
–(*)
	`memchr
(
⁄e
, 'b', 5) == one + 1, 6);

502 
	`check
–(*)
	`memchr
(
⁄e
, 'b', 0Ë=
NULL
, 7);

503 
	`check
–(*)
	`memchr
(
⁄e
, 'a', 1) == one, 8);

504 (Ë
	`°r˝y
(
⁄e
, "a\203b");

505 
	`check
–(*)
	`memchr
(
⁄e
, 0203, 3) == one + 1, 9);

509 
ô
 = "memcpy";

510 
	`check
–(*)
	`mem˝y
(
⁄e
, "abc", 4) == one, 1);

511 
	`equÆ
(
⁄e
, "abc", 2);

513 (Ë
	`°r˝y
(
⁄e
, "abcdefgh");

514 (Ë
	`mem˝y
(
⁄e
 + 1, "xyz", 2);

515 
	`equÆ
(
⁄e
, "axydefgh", 3);

517 (Ë
	`°r˝y
(
⁄e
, "abc");

518 (Ë
	`mem˝y
(
⁄e
, "xyz", 0);

519 
	`equÆ
(
⁄e
, "abc", 4);

521 (Ë
	`°r˝y
(
⁄e
, "hiÅhere");

522 (Ë
	`°r˝y
(
two
, "foo");

523 (Ë
	`mem˝y
(
two
, 
⁄e
, 9);

524 
	`equÆ
(
two
, "hiÅhere", 5);

525 
	`equÆ
(
⁄e
, "hiÅhere", 6);

527 (Ë
	`°r˝y
(
⁄e
, "abcde");

528 (Ë
	`mem˝y
(
⁄e
 + 1, "\0\0\0\0\0", 1);

529 
	`equÆ
(
⁄e
, "a", 7);

530 
	`equÆ
(
⁄e
 + 2, "cde", 8);

531 (Ë
	`mem˝y
(
⁄e
 + 1, "xyz" + 1, 2);

532 
	`equÆ
(
⁄e
, "ayzde", 9);

533 (Ë
	`mem˝y
(
⁄e
 + 1, "xyz" + 1, 3);

534 
	`equÆ
(
⁄e
, "ayz", 10);

538 
ô
 = "memmove";

539 
	`check
–(*)
	`memmove
(
⁄e
, "abc", 4) == one, 1);

540 
	`equÆ
(
⁄e
, "abc", 2);

542 (Ë
	`°r˝y
(
⁄e
, "abcdefgh");

543 (Ë
	`memmove
(
⁄e
 + 1, "xyz", 2);

544 
	`equÆ
(
⁄e
, "axydefgh", 3);

546 (Ë
	`°r˝y
(
⁄e
, "abc");

547 (Ë
	`memmove
(
⁄e
, "xyz", 0);

548 
	`equÆ
(
⁄e
, "abc", 4);

550 (Ë
	`°r˝y
(
⁄e
, "hiÅhere");

551 (Ë
	`°r˝y
(
two
, "foo");

552 (Ë
	`memmove
(
two
, 
⁄e
, 9);

553 
	`equÆ
(
two
, "hiÅhere", 5);

554 
	`equÆ
(
⁄e
, "hiÅhere", 6);

556 (Ë
	`°r˝y
(
⁄e
, "abcdefgh");

557 (Ë
	`memmove
(
⁄e
 + 1, one, 9);

558 
	`equÆ
(
⁄e
, "aabcdefgh", 7);

560 (Ë
	`°r˝y
(
⁄e
, "abcdefgh");

561 (Ë
	`memmove
(
⁄e
 + 1, one + 2, 7);

562 
	`equÆ
(
⁄e
, "acdefgh", 8);

564 (Ë
	`°r˝y
(
⁄e
, "abcdefgh");

565 (Ë
	`memmove
(
⁄e
, one, 9);

566 
	`equÆ
(
⁄e
, "abcdefgh", 9);

568 (Ë
	`°r˝y
(
⁄e
, "abcde");

569 (Ë
	`memmove
(
⁄e
 + 1, "\0\0\0\0\0", 1);

570 
	`equÆ
(
⁄e
, "a", 10);

571 
	`equÆ
(
⁄e
 + 2, "cde", 11);

572 (Ë
	`memmove
(
⁄e
 + 1, "xyz" + 1, 2);

573 
	`equÆ
(
⁄e
, "ayzde", 12);

574 (Ë
	`memmove
(
⁄e
 + 1, "xyz" + 1, 3);

575 
	`equÆ
(
⁄e
, "ayz", 13);

576 (Ë
	`°r˝y
(
⁄e
, "abcdefgh");

577 (Ë
	`memmove
(
⁄e
 + 2, one + 1, 8);

578 
	`equÆ
(
⁄e
, "abbcdefgh", 14);

585 
ô
 = "memccpy";

586 
	`check
(
	`memc˝y
(
⁄e
, "abc", 'q', 4Ë=
NULL
, 1);

587 
	`equÆ
(
⁄e
, "abc", 2);

589 (Ë
	`°r˝y
(
⁄e
, "abcdefgh");

590 (Ë
	`memc˝y
(
⁄e
 + 1, "xyz", 'q', 2);

591 
	`equÆ
(
⁄e
, "axydefgh", 3);

593 (Ë
	`°r˝y
(
⁄e
, "abc");

594 (Ë
	`memc˝y
(
⁄e
, "xyz", 'q', 0);

595 
	`equÆ
(
⁄e
, "abc", 4);

597 (Ë
	`°r˝y
(
⁄e
, "hiÅhere");

598 (Ë
	`°r˝y
(
two
, "foo");

599 (Ë
	`memc˝y
(
two
, 
⁄e
, 'q', 9);

600 
	`equÆ
(
two
, "hiÅhere", 5);

601 
	`equÆ
(
⁄e
, "hiÅhere", 6);

603 (Ë
	`°r˝y
(
⁄e
, "abcdefgh");

604 (Ë
	`°r˝y
(
two
, "horsefeathers");

605 
	`check
–(*)
	`memc˝y
(
two
, 
⁄e
, 'f', 9) ==Åwo + 6, 7);

606 
	`equÆ
(
⁄e
, "abcdefgh", 8);

607 
	`equÆ
(
two
, "abcdefeathers", 9);

609 (Ë
	`°r˝y
(
⁄e
, "abcd");

610 (Ë
	`°r˝y
(
two
, "bumblebee");

611 
	`check
((*)
	`memc˝y
(
two
, 
⁄e
, 'a', 4) ==Åwo + 1, 10);

612 
	`equÆ
(
two
, "aumblebee", 11);

613 
	`check
((*)
	`memc˝y
(
two
, 
⁄e
, 'd', 4) ==Åwo + 4, 12);

614 
	`equÆ
(
two
, "abcdlebee", 13);

615 (Ë
	`°r˝y
(
⁄e
, "xyz");

616 
	`check
((*)
	`memc˝y
(
two
, 
⁄e
, 'x', 1) ==Åwo + 1, 14);

617 
	`equÆ
(
two
, "xbcdlebee", 15);

620 
ô
 = "memset";

621 (Ë
	`°r˝y
(
⁄e
, "abcdefgh");

622 
	`check
–(*Ë
	`mem£t
(
⁄e
 + 1, 'x', 3) == one + 1, 1);

623 
	`equÆ
(
⁄e
, "axxxefgh", 2);

625 (Ë
	`mem£t
(
⁄e
 + 2, 'y', 0);

626 
	`equÆ
(
⁄e
, "axxxefgh", 3);

628 (Ë
	`mem£t
(
⁄e
 + 5, 0, 1);

629 
	`equÆ
(
⁄e
, "axxxe", 4);

630 
	`equÆ
(
⁄e
 + 6, "gh", 5);

632 (Ë
	`mem£t
(
⁄e
 + 2, 010045, 1);

633 
	`equÆ
(
⁄e
, "ax\045xe", 6);

637 
ô
 = "bcopy";

638 (Ë
	`bc›y
("abc", 
⁄e
, 4);

639 
	`equÆ
(
⁄e
, "abc", 1);

641 (Ë
	`°r˝y
(
⁄e
, "abcdefgh");

642 (Ë
	`bc›y
("xyz", 
⁄e
 + 1, 2);

643 
	`equÆ
(
⁄e
, "axydefgh", 2);

645 (Ë
	`°r˝y
(
⁄e
, "abc");

646 (Ë
	`bc›y
("xyz", 
⁄e
, 0);

647 
	`equÆ
(
⁄e
, "abc", 3);

649 (Ë
	`°r˝y
(
⁄e
, "hiÅhere");

650 (Ë
	`°r˝y
(
two
, "foo");

651 (Ë
	`bc›y
(
⁄e
, 
two
, 9);

652 
	`equÆ
(
two
, "hiÅhere", 4);

653 
	`equÆ
(
⁄e
, "hiÅhere", 5);

656 
ô
 = "bzero";

657 (Ë
	`°r˝y
(
⁄e
, "abcdef");

658 
	`bzîo
(
⁄e
 + 2, 2);

659 
	`equÆ
(
⁄e
, "ab", 1);

660 
	`equÆ
(
⁄e
 + 3, "", 2);

661 
	`equÆ
(
⁄e
 + 4, "ef", 3);

663 (Ë
	`°r˝y
(
⁄e
, "abcdef");

664 
	`bzîo
(
⁄e
 + 2, 0);

665 
	`equÆ
(
⁄e
, "abcdef", 4);

668 
ô
 = "bcmp";

669 
	`check
(
	`bcmp
("a", "a", 1) == 0, 1);

670 
	`check
(
	`bcmp
("abc", "abc", 3) == 0, 2);

671 
	`check
(
	`bcmp
("abcd", "abce", 4) != 0, 3);

672 
	`check
(
	`bcmp
("abce", "abcd", 4) != 0, 4);

673 
	`check
(
	`bcmp
("alph", "beta", 4) != 0, 5);

674 
	`check
(
	`bcmp
("abce", "abcd", 3) == 0, 6);

675 
	`check
(
	`bcmp
("abc", "def", 0) == 0, 8);

677 #ifde‡
ERR


679 
ô
 = "strerror";

680 
f
 = 
	`›í
("/", 
O_WRONLY
);

681 
	`check
(
f
 < 0 && 
î∫o
 > 0 &&Éºnÿ< 
sys_√º
, 1);

682 
	`equÆ
(
	`°ªº‹
(
î∫o
), 
sys_îæi°
[errno], 2);

683 #ifde‡
UNIXERR


684 
	`equÆ
(
	`°ªº‹
(
î∫o
), "Isá directory", 3);

686 #ifde‡
BERKERR


687 
	`equÆ
(
	`°ªº‹
(
î∫o
), "Permission denied", 3);

690 
	}
}

692 
	$quô
()

695 
	`chdú
("..");

696 
	`sy°em
("rm -rf DIR*");

698 i‡(
îr˘
 == 0) {

699 
	`¥ötf
("ok\n");

700 
	`exô
(0);

702 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

703 
	`exô
(1);

705 
	}
}

	@test16.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/°©.h
>

5 
	~<î∫o.h
>

6 
	~<f˙é.h
>

7 
	~<°dlib.h
>

8 
	~<uni°d.h
>

9 
	~<utime.h
>

10 
	~<°dio.h
>

12 
	#MAX_ERROR
 4

	)

14 
	gîr˘
, 
	gsubã°
, 
	g∑s£s
;

16 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
 []));

17 
_PROTOTYPE
(
ã°16a
, ());

18 
_PROTOTYPE
(
gë_times
, (*
«me
, 
time_t
 *
a
,Åime_à*
c
,Åime_à*
m
));

19 
_PROTOTYPE
(
e
, (
n
));

20 
_PROTOTYPE
(
quô
, ());

22 
	$maö
(
¨gc
, 
¨gv
)

23 
¨gc
;

24 *
¨gv
[];

26 
i
, 
m
;

28 
m
 = (
¨gc
 =2 ? 
	`©oi
(
¨gv
[1]) : 0xFFFF);

30 
	`sy°em
("rm -rf DIR_16; mkdir DIR_16");

31 
	`chdú
("DIR_16");

33 
	`¥ötf
("Test 16 ");

34 
	`fÊush
(
°dout
);

35 
i
 = 0; i < 4; i++) {

36 i‡(
m
 & 0001Ë
	`ã°16a
();

37 
∑s£s
++;

39 
	`quô
();

41 
	}
}

44 
	$ã°16a
()

48 
fd
, 
fd1
, 
fd2
, 
fd3
, 
fd4
;

49 
time_t
 
a
, 
c
, 
m
, 
∑
, 
pc
, 
pm
, 
xa
, 
xc
, 
xm
, 
ya
, 
yc
, 
ym
, 
za
, 
zc
, 
zm
, 
è
, 
tc
, 
tm
;

50 
time_t
 
wa
, 
wc
, 
wm
;

51 
buf
[1024];

52 
°©
 
s
;

54 
subã°
 = 1;

55 i‡(
∑s£s
 > 0) ;

57 i‡–(
fd
 = 
	`¸ót
("T16.a", 0666)Ë< 0Ë
	`e
(1);

58 i‡(
	`wrôe
(
fd
, 
buf
, 1024Ë!1024Ë
	`e
(2);

59 i‡(
	`˛o£
(
fd
Ë< 0Ë
	`e
(3);

60 
	`¶ìp
(1);

61 i‡–(
fd
 = 
	`›í
("T16.a", 
O_RDONLY
)Ë< 0Ë
	`e
(4);

62 i‡(
	`ªad
(
fd
, 
buf
, 3Ë!3Ë
	`e
(5);

63 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(6);

64 i‡(
	`°©
("T16.a", &
s
Ë!0Ë
	`e
(7);

65 
a
 = 
s
.
°_©ime
;

66 
c
 = 
s
.
°_˘ime
;

67 
m
 = 
s
.
°_mtime
;

68 i‡(
a
 == 0) {

70 
	`¥ötf
(" (atime = 0. Probably V1 file system. V2Åests skipped.) ");

79 i‡–(
fd
 = 
	`¸ót
("T16.b", 0666)Ë< 0Ë
	`e
(8);

80 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(9);

81 
	`gë_times
("T16.b", &
a
, &
c
, &
m
);

82 
	`gë_times
(".", &
∑
, &
pc
, &
pm
);

83 i‡(
a
 !
c
Ë
	`e
(10);

84 i‡(
a
 !
m
Ë
	`e
(11);

85 i‡(
a
 !
pc
Ë
	`e
(12);

86 i‡(
a
 !
pm
Ë
	`e
(13);

87 i‡(
	`u∆ök
("T16.b"Ë< 0Ë
	`e
(14);

90 i‡–(
fd
 = 
	`mkfifo
("T16.c", 0666)Ë!0Ë
	`e
(15);

91 i‡(
	`ac˚ss
("T16.c", 
R_OK
 | 
W_OK
Ë!0Ë
	`e
(16);

92 
	`gë_times
("T16.c", &
a
, &
c
, &
m
);

93 
	`gë_times
(".", &
∑
, &
pc
, &
pm
);

94 i‡(
a
 !
c
Ë
	`e
(17);

95 i‡(
a
 !
m
Ë
	`e
(18);

96 i‡(
a
 !
pc
Ë
	`e
(19);

97 i‡(
a
 !
pm
Ë
	`e
(20);

98 i‡(
	`u∆ök
("T16.c"Ë< 0Ë
	`e
(21);

101 i‡(
	`mkdú
("T16.d", 0666Ë< 0Ë
	`e
(22);

102 
	`gë_times
("T16.d", &
a
, &
c
, &
m
);

103 
	`gë_times
(".", &
∑
, &
pc
, &
pm
);

104 i‡(
a
 !
c
Ë
	`e
(23);

105 i‡(
a
 !
m
Ë
	`e
(24);

106 i‡(
a
 !
pc
Ë
	`e
(25);

107 i‡(
a
 !
pm
Ë
	`e
(26);

108 
	`¶ìp
(1);

109 i‡(
	`rmdú
("T16.d"Ë< 0Ë
	`e
(27);

110 
	`gë_times
(".", &
xa
, &
xc
, &
xm
);

111 i‡(
c
 =
xc
Ë
	`e
(28);

112 i‡(
m
 =
xm
Ë
	`e
(29);

113 i‡(
xc
 !
xm
Ë
	`e
(30);

116 i‡–(
fd
 = 
	`›í
("T16.e", 
O_WRONLY
|
O_CREAT
, 0666)Ë< 0Ë
	`e
(31);

117 i‡(
	`wrôe
(
fd
, 
buf
, 1024Ë!1024Ë
	`e
(32);

118 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(33);

119 
	`gë_times
("T16.e", &
a
, &
c
, &
m
);

120 
	`gë_times
(".", &
∑
, &
pc
, &
pm
);

121 
	`¶ìp
(1);

122 i‡–(
fd
 = 
	`›í
("T16.e", 
O_WRONLY
|
O_TRUNC
)Ë< 0Ë
	`e
(34);

123 
	`gë_times
("T16.e", &
xa
, &
xc
, &
xm
);

124 
	`gë_times
(".", &
ya
, &
yc
, &
ym
);

125 i‡(
c
 !
m
Ë
	`e
(35);

126 i‡(
pc
 !
pm
Ë
	`e
(36);

127 i‡(
c
 =
xc
Ë
	`e
(37);

128 i‡(
m
 =
xm
Ë
	`e
(38);

129 i‡(
yc
 !
pc
Ë
	`e
(39);

130 i‡(
ym
 !
pm
Ë
	`e
(40);

131 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(41);

134 
	`gë_times
("T16.e", &
a
, &
c
, &
m
);

135 
	`gë_times
(".", &
ya
, &
yc
, &
ym
);

136 
	`¶ìp
(1);

137 i‡(
	`lök
("T16.e", "T16.f"Ë!0Ë
	`e
(42);

138 
	`gë_times
("T16.e", &
xa
, &
xc
, &
xm
);

139 
	`gë_times
(".", &
∑
, &
pc
, &
pm
);

140 i‡(
a
 !
xa
Ë
	`e
(43);

141 i‡(
m
 !
xm
Ë
	`e
(44);

142 #i‚de‡
V1_FILESYSTEM


143 i‡(
c
 =
xc
Ë
	`e
(45);

145 i‡(
ya
 !
∑
Ë
	`e
(46);

146 i‡(
yc
 =
pc
Ë
	`e
(47);

147 i‡(
ym
 =
pm
Ë
	`e
(48);

148 i‡(
yc
 !
ym
Ë
	`e
(49);

149 i‡(
pc
 !
pm
Ë
	`e
(50);

150 
	`¶ìp
(1);

151 i‡(
	`u∆ök
("T16.f"Ë!0Ë
	`e
(46);

152 
	`gë_times
("T16.e", &
a
, &
c
, &
m
);

153 
	`gë_times
(".", &
ya
, &
yc
, &
ym
);

154 i‡(
a
 !
xa
Ë
	`e
(51);

155 i‡(
m
 !
xm
Ë
	`e
(52);

156 #i‚de‡
V1_FILESYSTEM


157 i‡(
c
 =
xc
Ë
	`e
(53);

159 i‡(
∑
 !
ya
Ë
	`e
(54);

160 i‡(
pc
 =
yc
Ë
	`e
(55);

161 i‡(
pm
 =
ym
Ë
	`e
(56);

162 i‡(
yc
 !
ym
Ë
	`e
(57);

163 i‡(
	`u∆ök
("T16.e"Ë!0Ë
	`e
(58);

166 
	`gë_times
(".", &
∑
, &
pc
, &
pm
);

167 i‡–(
fd
 = 
	`›í
("T16.g", 
O_RDWR
|
O_CREAT
)Ë< 0Ë
	`e
(59);

168 i‡–(
fd1
 = 
	`›í
("T16.h", 
O_WRONLY
|
O_CREAT
, 0666)Ë< 0Ë
	`e
(60);

169 i‡–(
fd2
 = 
	`›í
("T16.i", 
O_WRONLY
|
O_CREAT
, 0666)Ë< 0Ë
	`e
(61);

170 i‡–(
fd3
 = 
	`›í
("T16.j", 
O_WRONLY
|
O_CREAT
, 0666)Ë< 0Ë
	`e
(62);

171 i‡–(
fd4
 = 
	`›í
("T16.k", 
O_RDWR
|
O_CREAT
, 0666)Ë< 0Ë
	`e
(63);

172 i‡(
	`wrôe
(
fd
, 
buf
, 1024Ë!1024Ë
	`e
(64);

173 
	`gë_times
("T16.g", &
a
, &
c
, &
m
);

174 
	`gë_times
("T16.h", &
∑
, &
pc
, &
pm
);

175 
	`gë_times
("T16.i", &
xa
, &
xc
, &
xm
);

176 
	`gë_times
("T16.j", &
ya
, &
yc
, &
ym
);

177 
	`gë_times
("T16.k", &
za
, &
zc
, &
zm
);

178 
	`gë_times
(".", &
wa
, &
wc
, &
wm
);

179 
	`¶ìp
(1);

180 
	`l£ek
(
fd
, 0L, 
SEEK_SET
);

181 i‡(
	`ªad
(
fd
, 
buf
, 35Ë!35Ë
	`e
(65);

182 
	`gë_times
("T16.g", &
è
, &
tc
, &
tm
);

183 i‡(
a
 =
è
 || 
c
 !
tc
 || 
m
 !
tm
Ë
	`e
(66);

184 i‡(
	`wrôe
(
fd1
, 
buf
, 35Ë!35Ë
	`e
(67);

185 
	`gë_times
("T16.h", &
è
, &
tc
, &
tm
);

186 i‡(
∑
 !
è
 || 
pc
 =
tc
 || 
pm
 =
tm
Ë
	`e
(69);

187 i‡(
	`ª«me
("T16.i", "T16.i1"Ë!0Ë
	`e
(70);

188 
	`gë_times
("T16.i1", &
è
, &
tc
, &
tm
);

189 i‡(
xa
 !
è
 || 
xc
 !
tc
 || 
xm
 !
tm
Ë
	`e
(71);

190 
	`gë_times
(".", &
a
, &
c
, &
m
);

191 i‡(
a
 !
wa
 || 
c
 =
wc
 || 
m
 =
wm
 || w¯!wmË
	`e
(72);

192 i‡(
	`chmod
("T16.j", 0777Ë!0Ë
	`e
(73);

193 
	`gë_times
("T16.j", &
è
, &
tc
, &
tm
);

194 i‡(
ya
 !
è
 || 
yc
 =
tc
 || 
ym
 !
tm
Ë
	`e
(74);

195 i‡(
	`utime
("T16.k", (*Ë0Ë!0Ë
	`e
(75);

196 
	`gë_times
("T16.k", &
è
, &
tc
, &
tm
);

197 i‡(
za
 =
è
 || 
zc
 =
tc
Ë
	`e
(76);

198 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(77);

199 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(78);

200 i‡(
	`˛o£
(
fd2
Ë!0Ë
	`e
(79);

201 i‡(
	`˛o£
(
fd3
Ë!0Ë
	`e
(80);

202 i‡(
	`˛o£
(
fd4
Ë!0Ë
	`e
(81);

203 i‡(
	`u∆ök
("T16.g"Ë!0Ë
	`e
(82);

204 i‡(
	`u∆ök
("T16.h"Ë!0Ë
	`e
(83);

205 i‡(
	`u∆ök
("T16.i1"Ë!0Ë
	`e
(84);

206 i‡(
	`u∆ök
("T16.j"Ë!0Ë
	`e
(85);

207 i‡(
	`u∆ök
("T16.k"Ë!0Ë
	`e
(86);

208 
	}
}

211 
	$gë_times
(
«me
, 
a
, 
c
, 
m
)

212 *
«me
;

213 
time_t
 *
a
, *
c
, *
m
;

215 
°©
 
s
;

217 i‡(
	`°©
(
«me
, &
s
Ë!0Ë
	`e
(500);

218 *
a
 = 
s
.
°_©ime
;

219 *
c
 = 
s
.
°_˘ime
;

220 *
m
 = 
s
.
°_mtime
;

221 
	}
}

225 
	$e
(
n
)

226 
n
;

228 
îr_num
 = 
î∫o
;

230 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d ", 
subã°
, 
n
, 
î∫o
);

231 
î∫o
 = 
îr_num
;

232 
	`≥º‹
("");

233 i‡(
îr˘
++ > 
MAX_ERROR
) {

234 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

235 
	`chdú
("..");

236 
	`sy°em
("rm -rf DIR*");

237 
	`exô
(1);

239 
	}
}

241 
	$quô
()

244 
	`chdú
("..");

245 
	`sy°em
("rm -rf DIR*");

247 i‡(
îr˘
 == 0) {

248 
	`¥ötf
("ok\n");

249 
	`exô
(0);

251 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

252 
	`exô
(1);

254 
	}
}

	@test17.c

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/waô.h
>

8 
	~<î∫o.h
>

9 
	~<f˙é.h
>

10 
	~<°dlib.h
>

11 
	~<°rög.h
>

12 
	~<uni°d.h
>

13 
	~<utime.h
>

14 
	~<°dio.h
>

16 
	#NOCRASH
 1

	)

17 
	#PDPNOHANG
 1

	)

18 
	#MAXERR
 2

	)

20 
	#USER_ID
 12

	)

21 
	#GROUP_ID
 1

	)

22 
	#FF
 3

	)

23 
	#USER
 1

	)

24 
	#GROUP
 0

	)

26 
	#ARSIZE
 256

	)

27 
	#PIPESIZE
 3584

	)

28 
	#MAXOPEN
 17

	)

29 
	#MAXLINK
 0177

	)

30 
	#LINKCOUNT
 5

	)

31 
	#MASK
 0777

	)

32 
	#END_FILE
 0

	)

34 
	#OK
 0

	)

35 
	#FAIL
 -1

	)

37 
	#R
 0

	)

38 
	#W
 1

	)

39 
	#RW
 2

	)

41 
	#RWX
 7

	)

43 
	#NIL
 ""

	)

44 
	#UMASK
 "umask"

	)

45 
	#CREAT
 "¸ót"

	)

46 
	#WRITE
 "wrôe"

	)

47 
	#READ
 "ªad"

	)

48 
	#OPEN
 "›í"

	)

49 
	#CLOSE
 "˛o£"

	)

50 
	#LSEEK
 "l£ek"

	)

51 
	#ACCESS
 "ac˚ss"

	)

52 
	#CHDIR
 "chdú"

	)

53 
	#CHMOD
 "chmod"

	)

54 
	#LINK
 "lök"

	)

55 
	#UNLINK
 "u∆ök"

	)

56 
	#PIPE
 "pùe"

	)

57 
	#STAT
 "°©"

	)

58 
	#FSTAT
 "f°©"

	)

59 
	#DUP
 "dup"

	)

60 
	#UTIME
 "utime"

	)

62 
	gîr˘
;

64 *
	gfûe
[];

65 *
	g‚ames
[];

66 *
	gdú
[];

71 *
	gfûe
[20] = {"f0", "f1", "f2", "f3", "f4", "f5", "f6",

73 "f14", "f15", "f16", "f17", "f18", "f19"}, *
	g‚ames
[8] = {"---", "--x", "-w-", "-wx", "r--",

74 "r-x", "rw-", "rwx"}, *
	gdú
[8] = {"d---", "d--x", "d-w-", "d-wx", "dr--", "dr-x",

80 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
 []));

81 
_PROTOTYPE
(
ã°
, (
mask
));

82 
_PROTOTYPE
(
ã°01
, ());

83 
_PROTOTYPE
(
ã°02
, ());

84 
_PROTOTYPE
(
ã°08
, ());

85 
_PROTOTYPE
(
ã°09
, ());

86 
_PROTOTYPE
(
ã°10
, ());

87 
_PROTOTYPE
(
lök_ÆŸ
, (*
bigboss
));

88 
_PROTOTYPE
(
u∆ök_ÆŸ
, (
numbî
));

89 
_PROTOTYPE
(
gë_√w
, (
«me
 []));

90 
_PROTOTYPE
(
ã°11
, ());

91 
_PROTOTYPE
(
comp_°©s
, (
°©
 *
°bf1
, °© *
°bf2
));

92 
_PROTOTYPE
(
comp_öodes
, (
m
, 
m1
));

93 
_PROTOTYPE
(
e
, (*
°rög
));

94 
_PROTOTYPE
(
∆¸
, ());

95 
_PROTOTYPE
(
°r
, (*
s
));

96 
_PROTOTYPE
(
îr
, (
numbî
, *
sˇŒ
, *
«me
));

97 
_PROTOTYPE
(
make_™d_fûl_dús
, ());

98 
_PROTOTYPE
(
put_fûe_ö_dú
, (*
dú«me
, 
mode
));

99 
_PROTOTYPE
(
öô_¨øy
, (*
a
));

100 
_PROTOTYPE
(
˛ór_¨øy
, (*
b
));

101 
_PROTOTYPE
(
comp_¨øy
, (*
a
, *
b
, 
ønge
));

102 
_PROTOTYPE
(
åy_˛o£
, (
fûedes
, *
«me
));

103 
_PROTOTYPE
(
åy_u∆ök
, (*
‚ame
));

104 
_PROTOTYPE
(
Remove
, (
fdes
, *
‚ame
));

105 
_PROTOTYPE
(
gë_mode
, (*
«me
));

106 
_PROTOTYPE
(
check
, (*
sˇŒ
, 
numbî
));

107 
_PROTOTYPE
(
put
, (
ƒ
));

108 
_PROTOTYPE
(
›í_ÆŸ
, ());

109 
_PROTOTYPE
(
˛o£_ÆŸ
, (
numbî
));

110 
_PROTOTYPE
(
˛ón_up_the_mess
, ());

111 
_PROTOTYPE
(
chmod_8_dús
, (
sw
));

112 
_PROTOTYPE
(
quô
, ());

117 
	$maö
(
¨gc
, 
¨gv
)

118 
¨gc
;

119 *
¨gv
[];

121 
n
, 
mask
;

123 
	`sync
();

124 i‡(
	`gëeuid
(Ë=0 || 
	`gëuid
() == 0) {

125 
	`¥ötf
("Test 17 cannotÑunásÑoot;Åestáborted\n");

126 
	`exô
(1);

129 
	`sy°em
("rm -rf DIR_18; mkdir DIR_18");

130 
	`chdú
("DIR_18");

132 
mask
 = (
¨gc
 =2 ? 
	`©oi
(
¨gv
[1]) : 0xFFFF);

134 i‡(
	`f‹k
()) {

135 
	`¥ötf
("Test 17 ");

136 
	`fÊush
(
°dout
);

138 
	`waô
(&
n
);

139 
	`˛ón_up_the_mess
();

140 
	`quô
();

142 
	`ã°
(
mask
);

143 
	`exô
(0);

146 
	}
}

148 
	$ã°
(
mask
)

149 
mask
;

151 
	`umask
(0);

153 i‡(
mask
 & 00001Ë
	`ã°01
();

154 i‡(
mask
 & 00002Ë
	`make_™d_fûl_dús
();

155 i‡(
mask
 & 00004Ë
	`ã°02
();

156 i‡(
mask
 & 00010Ë
	`ã°08
();

157 i‡(
mask
 & 00020Ë
	`ã°09
();

158 i‡(
mask
 & 00040Ë
	`ã°10
();

159 i‡(
mask
 & 00100Ë
	`ã°11
();

160 
	`umask
(022);

161 
	}
}

170 
	$ã°01
()

172 
ﬁdvÆue
, 
√wvÆue
, 
ãmpvÆue
;

173 
ƒ
;

175 i‡((
ﬁdvÆue
 = 
	`umask
(0777)Ë!0Ë
	`îr
(0, 
UMASK
, 
NIL
);

181 i‡((
√wvÆue
 = 
	`umask
(~0777)Ë!0777Ë
	`îr
(1, 
UMASK
, "illegal");

182 i‡(
ﬁdvÆue
 =
√wvÆue
Ë
	`îr
(11, 
UMASK
, "not change mask");

184 i‡((
ãmpvÆue
 = 
	`umask
(0)Ë!0Ë
	`îr
(2, 
UMASK
, "values");

187 
√wvÆue
 = 
MASK
;Çewvalue >= 0;Çewvalue -= 0111) {

188 
ãmpvÆue
 = 
	`umask
(
√wvÆue
);

189 i‡(
ãmpvÆue
 !
ﬁdvÆue
) {

190 
	`îr
(1, 
UMASK
, "illegal");

192 } i‡((
ƒ
 = 
	`¸ót
("file01", 0777)) < 0)

193 
	`îr
(5, 
CREAT
, "'file01'");

195 
	`åy_˛o£
(
ƒ
, "'file01'");

196 i‡(
	`gë_mode
("fûe01"Ë!(
MASK
 & ~
√wvÆue
))

197 
	`îr
(7, 
UMASK
, "mode computed");

198 
	`åy_u∆ök
("file01");

200 
ﬁdvÆue
 = 
√wvÆue
;

204 i‡((
ãmpvÆue
 = 
	`umask
(0)) != 0)

205 
	`îr
(7, 
UMASK
, "umask may influenceÑest ofÅests!");

206 
	}
}

211 
	$ã°02
()

213 
n
, 
n1
, 
mode
;

214 
a
[
ARSIZE
], 
b
[ARSIZE];

215 
°©
 
°bf1
;

217 
mode
 = 0;

219 
n
 = 0;Ç < 
MAXOPEN
;Ç++) {

220 i‡(
	`¸ót
(
fûe
[
n
], 
mode
Ë!
FF
 +Ç)

221 
	`îr
(13, 
CREAT
, 
fûe
[
n
]);

223 i‡(
	`gë_mode
(
fûe
[
n
]Ë!
mode
)

224 
	`îr
(7, 
CREAT
, "mode set while creating many files");

229 i‡(
	`chmod
(
fûe
[
n
], 0700Ë!
OK
Ë
	`îr
(5, 
CHMOD
, file[n]);

232 
mode
 = (mode + 0100) % 01000;

236 i‡(
	`¸ót
("fûe02", 0777Ë!
FAIL
)

237 
	`îr
(9, 
CREAT
, "created");

239 
	`check
(
CREAT
, 
EMFILE
);

243 i‡((
n
 = 
	`˛o£_ÆŸ
(
MAXOPEN
)Ë< MAXOPENË
	`îr
(5, 
CLOSE
, "MAXOPEN files");

246 i‡((
n
 = 
	`¸ót
("file02", 0777)) < 0)

247 
	`îr
(5, 
CREAT
, "'file02'");

249 
	`öô_¨øy
(
a
);

250 i‡(
	`wrôe
(
n
, 
a
, 
ARSIZE
Ë!ARSIZEË
	`îr
(1, 
WRITE
, "bad");

252 i‡((
n1
 = 
	`¸ót
("file02", 0755)) < 0)

253 
	`îr
(5, 
CREAT
, "'file02' (2ndÅime)");

256 i‡(
	`l£ek
(
n1
, 0L, 
SEEK_END
) != 0)

257 
	`îr
(11, 
CREAT
, "notÅruncate file byÑecreation");

260 
	`˛ór_¨øy
(
b
);

262 i‡(
	`l£ek
(
n1
, 0L, 
SEEK_SET
) != 0)

263 
	`îr
(5, 
LSEEK
, "toÅop of 2nd fd 'file02'");

264 i‡(
	`wrôe
(
n1
, 
a
, 
ARSIZE
) != ARSIZE)

265 
	`îr
(1, 
WRITE
, "(2) bad");

268 
	`åy_˛o£
(
n1
, "'file02' (2nd creation)");

269 i‡((
n1
 = 
	`›í
("fûe02", 
RW
)) < 0)

270 
	`îr
(5, 
OPEN
, "'file02' (2ndÑecreation)");

273 i‡(
	`l£ek
(
n1
, 0L, 
SEEK_SET
) != 0)

274 
	`îr
(5, 
LSEEK
, "toÅop 'file02'(2nd fd) (2)");

275 i‡(
	`ªad
(
n1
, 
b
, 
ARSIZE
) != ARSIZE)

276 
	`îr
(1, 
READ
, "wrong");

278 i‡(
	`comp_¨øy
(
a
, 
b
, 
ARSIZE
Ë!
OK
Ë
	`îr
(11, 
CREAT
,

281 i‡(
	`gë_mode
("file02") != 0777)

282 
	`îr
(11, 
CREAT
, "not maintain mode byÑecreation");

283 
	`åy_˛o£
(
n1
, "recreated 'file02'");

286 
	`Remove
(
n
, "file02");

290 i‡(
	`¸ót
("drw-/fûe02", 0777Ë!
FAIL
)

291 
	`îr
(4, 
CREAT
, "'drw-'");

293 
	`check
(
CREAT
, 
EACCES
);

296 i‡(
	`¸ót
("dr-x/fûe02", 0777Ë!
FAIL
)

297 
	`îr
(12, 
CREAT
, "'dr-x/file02'");

299 
	`check
(
CREAT
, 
EACCES
);

302 i‡(
	`¸ót
("drwx/r-x", 0777Ë!
FAIL
)

303 
	`îr
(11, 
CREAT
, "recreateÇon-writable file");

305 
	`check
(
CREAT
, 
EACCES
);

308 i‡((
n
 = 
	`¸ót
("dú", 040777)Ë!
FAIL
) {

309 i‡(
	`f°©
(
n
, &
°bf1
Ë!
OK
)

310 
	`îr
(5, 
FSTAT
, "'dir'");

311 i‡(
°bf1
.
°_mode
 !(
mode_t
) 0100777)

313 
	`îr
(11, 
CREAT
, "'creat'áÇew directory");

314 
	`Remove
(
n
, "dir");

321 i‡(
	`¸ót
("drwx", 0777Ë!
FAIL
)

322 
	`îr
(11, 
CREAT
, "createánÉxisting dir!");

324 
	`check
(
CREAT
, 
EISDIR
);

325 
	}
}

329 
	$ã°08
()

332 i‡(
	`chdú
("drwx"Ë!
OK
)

333 
	`îr
(5, 
CHDIR
, "toáccessible dir");

334 i‡(
	`chdú
(".."Ë!
OK
)

335 
	`îr
(11, 
CHDIR
, "notÑeturnÅo '..'");

338 i‡(
	`chdú
("drwx"Ë!
OK
)

339 
	`îr
(5, 
CHDIR
, "to 'drwx'");

341 i‡(
	`chdú
("."Ë!
OK
Ë
	`îr
(5, 
CHDIR
, "to working dir (.)");

345 i‡(
	`ac˚ss
("rwx", 0Ë!
OK
Ë
	`îr
(5, 
CHDIR
, "rightlyÅo '.'");

348 i‡(
	`chdú
("././../././d--x/../d--x/././.."Ë!
OK
)

349 
	`îr
(5, 
CHDIR
, "to motherdir (..)");

352 i‡(
	`chdú
("d--x"Ë!
OK
Ë
	`îr
(5, 
CHDIR
, "rightlyÅoá '..'");

356 i‡(
	`chdú
(".."Ë!
OK
Ë
	`îr
(5, 
CHDIR
, "to '..'");

358 i‡(
	`chdú
("././././drwx"Ë!
OK
)

359 
	`îr
(11, 
CHDIR
, "not followáÖath");

360 i‡(
	`chdú
("././././.."Ë!
OK
)

361 
	`îr
(11, 
CHDIR
, "notÑeturnÅoÖath");

364 i‡(
	`chdú
("drwx/rwx"Ë!
FAIL
)

365 
	`îr
(11, 
CHDIR
, "chdirÅoá file");

367 
	`check
(
CHDIR
, 
ENOTDIR
);

369 i‡(
	`chdú
("drw-"Ë!
FAIL
)

370 
	`îr
(4, 
CHDIR
, "'/drw-'");

372 
	`check
(
CHDIR
, 
EACCES
);

376 
	}
}

382 
	$ã°09
()

384 
n
;

387 i‡((
n
 = 
	`¸ót
("drwx/fûe09", 0644)Ë!
FF
Ë
	`îr
(5, 
CREAT
, "'drwx/file09'");

389 
	`åy_˛o£
(
n
, "'file09'");

392 i‡(
	`chmod
("drwx/fûe09", 0700Ë!
OK
)

393 
	`îr
(5, 
CHMOD
, "'drwx/file09'");

396 i‡(
	`gë_mode
("drwx/fûe09"Ë!0700Ë
	`îr
(7, 
CHMOD
, "mode");

399 i‡(
	`chdú
("drwx"Ë!
OK
)

400 
	`îr
(5, 
CHDIR
, "to '/drwx'");

401 i‡(
	`chmod
("fûe09", 0177Ë!
OK
)

402 
	`îr
(5, 
CHMOD
, "'h1'");

405 i‡(
	`gë_mode
("../drwx/file09") != 0177)

406 
	`îr
(7, 
CHMOD
, "restored mode");

410 i‡((
	`chmod
("fûe09", 04777Ë!
OK
Ë|| (
	`gë_mode
("file09") != 04777))

411 
	`îr
(11, 
CHMOD
, "not set uid-bit");

412 i‡((
	`chmod
("fûe09", 02777Ë!
OK
Ë|| (
	`gë_mode
("file09") != 02777))

413 
	`îr
(11, 
CHMOD
, "not set gid-bit");

416 
	`åy_u∆ök
("file09");

418 i‡(
	`chdú
(".."Ë!
OK
Ë
	`îr
(5, 
CHDIR
, "to '..'");

421 i‡(
	`chmod
("d---", 0777Ë!
OK
)

422 
	`îr
(5, 
CHMOD
, "dir 'd---'");

424 i‡(
	`gë_mode
("d---"Ë!0777Ë
	`îr
(7, 
CHMOD
, "protection value");

425 i‡(
	`chmod
("d---", 0000Ë!
OK
Ë
	`îr
(5, 
CHMOD
, "dir 'a' 2ndÅime");

428 i‡(
	`gë_mode
("d---") != 0000)

429 
	`îr
(7, 
CHMOD
, "restoredÖrotection value");

436 i‡(
	`chmod
("n⁄-fûe", 0777Ë!
FAIL
)

437 
	`îr
(3, 
CHMOD
, 
NIL
);

439 
	`check
(
CHMOD
, 
ENOENT
);

441 
	}
}

451 
	$ã°10
()

453 
n
, 
n1
;

454 
a
[
ARSIZE
], 
b
[ARSIZE], *
f
, *
lf
;

456 
f
 = "file10";

457 
lf
 = "linkfile10";

459 i‡((
n
 = 
	`¸ót
(
f
, 0702)Ë!
FF
)

460 
	`îr
(13, 
CREAT
, 
f
);

463 i‡(
	`lök
(
f
, 
lf
Ë!
OK
)

464 
	`îr
(5, 
LINK
, 
lf
);

465 i‡((
n1
 = 
	`›í
(
lf
, 
RW
)) < 0)

466 
	`îr
(5, 
OPEN
, "'linkfile10'");

468 
	`öô_¨øy
(
a
);

469 
	`˛ór_¨øy
(
b
);

473 i‡(
	`wrôe
(
n
, 
a
, 
ARSIZE
Ë!ARSIZEË
	`îr
(1, 
WRITE
, "bad");

474 i‡(
	`ªad
(
n1
, 
b
, 
ARSIZE
Ë!ARSIZEË
	`îr
(1, 
READ
, "bad");

475 i‡(
	`comp_¨øy
(
a
, 
b
, 
ARSIZE
Ë!
OK
Ë
	`îr
(8, "r/w", 
NIL
);

478 
	`Remove
(
n
, 
f
);

479 
	`åy_˛o£
(
n1
, "'linkfile10'");

483 i‡((
n1
 = 
	`›í
(
lf
, 
R
)) < 0)

484 
	`îr
(5, 
OPEN
, "'linkfile10'");

488 
	`˛ór_¨øy
(
b
);

489 i‡(
	`ªad
(
n1
, 
b
, 
ARSIZE
) != ARSIZE)

490 
	`îr
(1, 
READ
, "bad");

491 i‡(
	`comp_¨øy
(
a
, 
b
, 
ARSIZE
Ë!
OK
)

492 
	`îr
(8, "r/w", 
NIL
);

494 
	`åy_˛o£
(
n1
, "'linkfile10' 2ndÅime");

495 
	`åy_u∆ök
(
lf
);

502 i‡(
	`u∆ök
("n⁄-fûe"Ë!
FAIL
)

503 
	`îr
(2, 
UNLINK
, "name");

505 
	`check
(
UNLINK
, 
ENOENT
);

508 i‡(
	`u∆ök
("dr-x/rwx"Ë!
FAIL
)

509 
	`îr
(11, 
UNLINK
, "could unlink inÇon-writable dir.");

511 
	`check
(
UNLINK
, 
EACCES
);

514 i‡(
	`u∆ök
("drwx"Ë!
FAIL
)

515 
	`îr
(11, 
UNLINK
, "unlink dir'sás user");

517 
	`check
(
UNLINK
, 
EPERM
);

523 i‡(
	`lök
("n⁄-fûe", "lökfûe"Ë!
FAIL
)

524 
	`îr
(2, 
LINK
, "1stÇame");

526 
	`check
(
LINK
, 
ENOENT
);

529 i‡(
	`lök
("drwx/rwx", "drwx/rw-"Ë!
FAIL
)

530 
	`îr
(2, 
LINK
, "2ndÇame");

532 
	`check
(
LINK
, 
EEXIST
);

535 i‡(
	`lök
("drwx/rwx", "dr-x/lökfûe"Ë!
FAIL
)

536 
	`îr
(11, 
LINK
, "linkÇon-writable file");

538 
	`check
(
LINK
, 
EACCES
);

541 i‡(
	`lök
("drwx", "lökfûe"Ë!
FAIL
)

542 
	`îr
(11, 
LINK
, "linká dir without superuser!");

544 
	`check
(
LINK
, 
EPERM
);

547 i‡((
n
 = 
	`lök_ÆŸ
("drwx/rwx")Ë!
LINKCOUNT
 - 1)

549 
	`îr
(5, 
LINK
, "many files");

550 i‡(
	`u∆ök_ÆŸ
(
n
Ë!nË
	`îr
(5, 
UNLINK
, "allÜinked files");

552 
	}
}

555 
	$lök_ÆŸ
(
bigboss
)

556 *
bigboss
;

558 
i
;

559 
em∂oyì
[6] = "aaaaa";

562 
i
 = 1; i < 
LINKCOUNT
; i++) {

563 i‡(
	`lök
(
bigboss
, 
em∂oyì
Ë!
OK
)

566 
	`gë_√w
(
em∂oyì
);

569 (
i
 - 1);

570 
	}
}

572 
	$u∆ök_ÆŸ
(
numbî
)

573 
numbî
;

575 
j
;

576 
em∂oyì
[6] = "aaaaa";

578 
j
 = 0; j < 
numbî
; j++) {

579 i‡(
	`u∆ök
(
em∂oyì
Ë!
OK
)

582 
	`gë_√w
(
em∂oyì
);

585 (
j
);

586 
	}
}

588 
	$gë_√w
(
«me
)

589 
«me
[];

596 
i
;

598 
i
 = 4; i >= 0; i--)

599 i‡(
«me
[
i
] != 'z') {

600 
«me
[
i
]++;

603 
	}
}

610 
	$ã°11
()

612 
n
, 
fd
[2];

613 
a
[
ARSIZE
], 
b
[ARSIZE];

615 i‡(
	`pùe
(
fd
Ë!
OK
)

616 
	`îr
(13, 
PIPE
, 
NIL
);

619 
	`öô_¨øy
(
a
);

620 
	`˛ór_¨øy
(
b
);

622 i‡(
	`wrôe
(
fd
[1], 
a
, 
ARSIZE
) != ARSIZE)

623 
	`îr
(5, 
WRITE
, "onÖipe");

624 i‡(
	`ªad
(
fd
[0], 
b
, (
ARSIZE
 / 2)) != (ARSIZE / 2))

625 
	`îr
(5, 
READ
, "onÖipe (2ndÅime)");

626 i‡(
	`comp_¨øy
(
a
, 
b
, (
ARSIZE
 / 2)Ë!
OK
)

627 
	`îr
(7, 
PIPE
, "valuesÑead/written");

628 i‡(
	`ªad
(
fd
[0], 
b
, (
ARSIZE
 / 2)) != (ARSIZE / 2))

629 
	`îr
(5, 
READ
, "onÖipe 2");

630 i‡(
	`comp_¨øy
(&
a
[
ARSIZE
 / 2], 
b
, (ARSIZE / 2)Ë!
OK
)

631 
	`îr
(7, 
PIPE
, "pipe created");

634 i‡(
	`wrôe
(
fd
[0], 
a
, 
ARSIZE
Ë!
FAIL
)

635 
	`îr
(11, 
WRITE
, "write on fd[0]");

636 i‡(
	`ªad
(
fd
[1], 
b
, 
ARSIZE
Ë!
FAIL
Ë
	`îr
(11, 
READ
, "read on fd[1]");

638 
	`åy_˛o£
(
fd
[1], "'fd[1]'");

641 i‡(
	`ªad
(
fd
[0], 
b
, 
ARSIZE
Ë!
END_FILE
Ë
	`îr
(2, 
PIPE
, "'fd[1]'");

643 
	`åy_˛o£
(
fd
[0], "'fd[0]'");

645 i‡(
	`pùe
(
fd
) < 0)

646 
	`îr
(5, 
PIPE
, "2ndÅime");

649 i‡(
	`wrôe
(
fd
[1], 
a
, 
ARSIZE
) != ARSIZE)

650 
	`îr
(5, 
WRITE
, "onÖipe (2ndÅime)");

651 i‡(
	`l£ek
(
fd
[1], 10L, 
SEEK_SET
Ë!
FAIL
)

652 
	`îr
(11, 
LSEEK
, "lseek onáÖipe");

654 
	`check
(
PIPE
, 
ESPIPE
);

657 
	`åy_˛o£
(
fd
[0], "'fd[0]' (2ndÅime)");

660 #i‚de‡
NOCRASH


661 i‡(
	`wrôe
(
fd
[1], 
a
, 
ARSIZE
Ë!
FAIL
)

662 
	`îr
(11, 
WRITE
, "write on wrongÖipe");

664 
	`check
(
PIPE
, 
EPIPE
);

666 
	`åy_˛o£
(
fd
[1], "'fd[1]' (2ndÅime)");

675 i‡(
	`pùe
(
fd
) < 0)

676 
	`îr
(5, 
PIPE
, "3rdÅime");

678 
n
 = 0;Ç < (
PIPESIZE
 / 
ARSIZE
);Ç++)

679 i‡(
	`wrôe
(
fd
[1], 
a
, 
ARSIZE
) != ARSIZE)

680 
	`îr
(5, 
WRITE
, "onÖipe (3rdÅime) 4K");

681 
	`åy_˛o£
(
fd
[1], "'fd[1]' (3rdÅime)");

683 
n
 = 0;Ç < (
PIPESIZE
 / 
ARSIZE
);Ç++)

684 i‡(
	`ªad
(
fd
[0], 
b
, 
ARSIZE
) != ARSIZE)

685 
	`îr
(5, 
READ
, "fromÖipe (3rdÅime) 4K");

686 
	`åy_˛o£
(
fd
[0], "'fd[0]' (3rdÅime)");

690 i‡((
n
 = 
	`›í_ÆŸ
()Ë!
MAXOPEN
Ë
	`îr
(5, 
OPEN
, "MAXOPEN files");

691 i‡(
	`pùe
(
fd
Ë!
FAIL
)

692 
	`îr
(9, 
PIPE
, "open");

694 
	`check
(
PIPE
, 
EMFILE
);

695 i‡(
	`˛o£_ÆŸ
(
n
Ë!nË
	`îr
(5, 
CLOSE
, "all opened files");

696 
	}
}

701 
	$comp_°©s
(
°bf1
, 
°bf2
)

702 
°©
 *
°bf1
, *
°bf2
;

704 i‡(
°bf1
->
°_dev
 !
°bf2
->°_devË
	`îr
(7, "st/fst", "'dev'");

705 i‡(
°bf1
->
°_öo
 !
°bf2
->°_öoË
	`îr
(7, "st/fst", "'ino'");

706 i‡(
°bf1
->
°_mode
 !
°bf2
->°_modeË
	`îr
(7, "st/fst", "'mode'");

707 i‡(
°bf1
->
°_∆ök
 !
°bf2
->°_∆ökË
	`îr
(7, "st/fst", "'nlink'");

708 i‡(
°bf1
->
°_uid
 !
°bf2
->°_uidË
	`îr
(7, "st/fst", "'uid'");

709 i‡(
°bf1
->
°_gid
 !
°bf2
->°_gidË
	`îr
(7, "st/fst", "'gid'");

710 i‡(
°bf1
->
°_rdev
 !
°bf2
->°_rdevË
	`îr
(7, "st/fst", "'rdev'");

711 i‡(
°bf1
->
°_size
 !
°bf2
->°_sizeË
	`îr
(7, "st/fst", "'size'");

712 i‡(
°bf1
->
°_©ime
 !
°bf2
->°_©imeË
	`îr
(7, "st/fst", "'atime'");

713 i‡(
°bf1
->
°_mtime
 !
°bf2
->°_mtimeË
	`îr
(7, "st/fst", "'mtime'");

714 
	}
}

723 
	$comp_öodes
(
m
, 
m1
)

724 
m
, 
m1
;

726 
°©
 
°bf1
, 
°bf2
;

728 i‡(
	`f°©
(
m
, &
°bf1
Ë=
OK
)

729 i‡(
	`f°©
(
m1
, &
°bf2
Ë=
OK
) {

730 i‡(
°bf1
.
°_öo
 !
°bf2
.st_ino)

731 
	`îr
(7, 
DUP
, "inodeÇumber");

733 
	`îr
(100, "comp_inodes", "cannot 'fstat' (m1)");

735 
	`îr
(100, "comp_inodes", "cannot 'fstat' (m)");

736 
	}
}

751 
	$e
(
°rög
)

752 *
°rög
;

754 
	`¥ötf
("Eº‹: %†", 
°rög
);

755 
	}
}

757 
	$∆¸
()

759 
	`¥ötf
("\n");

760 
	}
}

762 
	$°r
(
s
)

763 *
s
;

765 
	`¥ötf
(
s
);

766 
	}
}

773 
	$îr
(
numbî
, 
sˇŒ
, 
«me
)

776 *
sˇŒ
, *
«me
;

777 
numbî
;

780 
îr˘
++;

781 i‡(
îr˘
 > 
MAXERR
) {

782 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

783 
	`quô
();

785 
	`e
("");

786 
	`°r
("\t");

787 
numbî
) {

789 
	`°r
(
sˇŒ
);

790 
	`°r
(": illegal initial value.");

793 
	`°r
(
sˇŒ
);

794 
	`°r
(": ");

795 
	`°r
(
«me
);

796 
	`°r
(" valueÑeturned.");

799 
	`°r
(
sˇŒ
);

800 
	`°r
(":áccepting illegal ");

801 
	`°r
(
«me
);

802 
	`°r
(".");

805 
	`°r
(
sˇŒ
);

806 
	`°r
(":ácceptingÇon-existing file.");

809 
	`°r
(
sˇŒ
);

810 
	`°r
(": could searchÇon-searchable dir (");

811 
	`°r
(
«me
);

812 
	`°r
(").");

815 
	`°r
(
sˇŒ
);

816 
	`°r
(": cannot ");

817 
	`°r
(
sˇŒ
);

818 
	`°r
(" ");

819 
	`°r
(
«me
);

820 
	`°r
(".");

823 
	`°r
(
sˇŒ
);

824 
	`°r
(": incorrect ");

825 
	`°r
(
«me
);

826 
	`°r
(".");

829 
	`°r
(
sˇŒ
);

830 
	`°r
(": wrong values.");

833 
	`°r
(
sˇŒ
);

834 
	`°r
(":ácceptingÅoo many ");

835 
	`°r
(
«me
);

836 
	`°r
(" files.");

839 
	`°r
(
sˇŒ
);

840 
	`°r
(":Évená superuser can't doánything!");

843 
	`°r
(
sˇŒ
);

844 
	`°r
(": could ");

845 
	`°r
(
«me
);

846 
	`°r
(".");

849 
	`°r
(
sˇŒ
);

850 
	`°r
(": could write inÇon-writable dir (");

851 
	`°r
(
«me
);

852 
	`°r
(").");

855 
	`°r
(
sˇŒ
);

856 
	`°r
(": wrong filedesÑeturned (");

857 
	`°r
(
«me
);

858 
	`°r
(").");

861 
	`°r
(
sˇŒ
);

862 
	`°r
(": ");

863 
	`°r
(
«me
);

864 
	`°r
(".");

866 : 
	`°r
("errornumber doesÇotÉxist!\n");

868 
	`∆¸
();

869 
	}
}

877 
	$make_™d_fûl_dús
()

882 
mode
, 
i
;

884 
i
 = 0; i < 8; i++) {

885 
	`mkdú
(
dú
[
i
], 0700);

886 
	`chown
(
dú
[
i
], 
USER_ID
, 
GROUP_ID
);

888 
	`£tuid
(
USER_ID
);

889 
	`£tgid
(
GROUP_ID
);

891 
mode
 = 0; modê< 8; mode++Ë
	`put_fûe_ö_dú
("drwx", mode);

893 
	`put_fûe_ö_dú
("d-wx", 
RWX
);

894 
	`put_fûe_ö_dú
("dr-x", 
RWX
);

895 
	`put_fûe_ö_dú
("drw-", 
RWX
);

897 
	`chmod_8_dús
(8);

899 
	}
}

901 
	$put_fûe_ö_dú
(
dú«me
, 
mode
)

902 *
dú«me
;

903 
mode
;

906 
ƒ
;

908 i‡(
	`chdú
(
dú«me
Ë!
OK
)

909 
	`îr
(5, 
CHDIR
, "to dirname (put_f_in_dir)");

912 i‡((
ƒ
 = 
	`¸ót
(
‚ames
[
mode
], mode * 0100)) < 0)

913 
	`îr
(13, 
CREAT
, 
‚ames
[
mode
]);

915 
	`åy_˛o£
(
ƒ
, 
‚ames
[
mode
]);

917 i‡(
	`chdú
(".."Ë!
OK
)

918 
	`îr
(5, 
CHDIR
, "toÖrevious dir (put_f_in_dir)");

920 
	}
}

930 
	$öô_¨øy
(
a
)

931 *
a
;

933 
i
;

935 
i
 = 0;

936 
i
++ < 
ARSIZE
Ë*
a
++ = 'a' + (i % 26);

937 
	}
}

939 
	$˛ór_¨øy
(
b
)

940 *
b
;

942 
i
;

944 
i
 = 0;

945 
i
++ < 
ARSIZE
Ë*
b
++ = '0';

947 
	}
}

949 
	$comp_¨øy
(
a
, 
b
, 
ønge
)

950 *
a
, *
b
;

951 
ønge
;

953 i‡((
ønge
 < 0Ë|| (øngê> 
ARSIZE
)) {

954 
	`îr
(100, "comp_array", "illegalÑange");

955 (
FAIL
);

957 
ønge
-- && (*
a
++ =*
b
++));

958 i‡(*--
a
 =*--
b
)

959 (
OK
);

961 (
FAIL
);

963 
	}
}

965 
	$åy_˛o£
(
fûedes
, 
«me
)

966 
fûedes
;

967 *
«me
;

969 i‡(
	`˛o£
(
fûedes
Ë!
OK
Ë
	`îr
(5, 
CLOSE
, 
«me
);

970 
	}
}

972 
	$åy_u∆ök
(
‚ame
)

973 *
‚ame
;

975 i‡(
	`u∆ök
(
‚ame
Ë!0Ë
	`îr
(5, 
UNLINK
, fname);

976 
	}
}

978 
	$Remove
(
fdes
, 
‚ame
)

979 
fdes
;

980 *
‚ame
;

982 
	`åy_˛o£
(
fdes
, 
‚ame
);

983 
	`åy_u∆ök
(
‚ame
);

984 
	}
}

986 
	$gë_mode
(
«me
)

987 *
«me
;

989 
°©
 
°bf1
;

991 i‡(
	`°©
(
«me
, &
°bf1
Ë!
OK
) {

992 
	`îr
(5, 
STAT
, 
«me
);

993 (
°bf1
.
°_mode
);

997 (
°bf1
.
°_mode
 & 07777);

998 
	}
}

1006 
	$check
(
sˇŒ
, 
numbî
)

1007 
numbî
;

1008 *
sˇŒ
;

1010 i‡(
î∫o
 !
numbî
) {

1011 
	`e
(
NIL
);

1012 
	`°r
("\t");

1013 
	`°r
(
sˇŒ
);

1014 
	`°r
(": badÉrrno-value: ");

1015 
	`put
(
î∫o
);

1016 
	`°r
(" should have been: ");

1017 
	`put
(
numbî
);

1018 
	`∆¸
();

1020 
	}
}

1022 
	$put
(
ƒ
)

1023 
ƒ
;

1025 
ƒ
) {

1026 0: 
	`°r
("unused"); ;

1027 1: 
	`°r
("EPERM"); ;

1028 2: 
	`°r
("ENOENT"); ;

1029 3: 
	`°r
("ESRCH"); ;

1030 4: 
	`°r
("EINTR"); ;

1031 5: 
	`°r
("EIO"); ;

1032 6: 
	`°r
("ENXIO"); ;

1033 7: 
	`°r
("E2BIG"); ;

1034 8: 
	`°r
("ENOEXEC"); ;

1035 9: 
	`°r
("EBADF"); ;

1036 10: 
	`°r
("ECHILD"); ;

1037 11: 
	`°r
("EAGAIN"); ;

1038 12: 
	`°r
("ENOMEM"); ;

1039 13: 
	`°r
("EACCES"); ;

1040 14: 
	`°r
("EFAULT"); ;

1041 15: 
	`°r
("ENOTBLK"); ;

1042 16: 
	`°r
("EBUSY"); ;

1043 17: 
	`°r
("EEXIST"); ;

1044 18: 
	`°r
("EXDEV"); ;

1045 19: 
	`°r
("ENODEV"); ;

1046 20: 
	`°r
("ENOTDIR"); ;

1047 21: 
	`°r
("EISDIR"); ;

1048 22: 
	`°r
("EINVAL"); ;

1049 23: 
	`°r
("ENFILE"); ;

1050 24: 
	`°r
("EMFILE"); ;

1051 25: 
	`°r
("ENOTTY"); ;

1052 26: 
	`°r
("ETXTBSY"); ;

1053 27: 
	`°r
("EFBIG"); ;

1054 28: 
	`°r
("ENOSPC"); ;

1055 29: 
	`°r
("ESPIPE"); ;

1056 30: 
	`°r
("EROFS"); ;

1057 31: 
	`°r
("EMLINK"); ;

1058 32: 
	`°r
("EPIPE"); ;

1059 33: 
	`°r
("EDOM"); ;

1060 34: 
	`°r
("ERANGE"); ;

1062 
	}
}

1071 
	$›í_ÆŸ
()

1073 
i
;

1075 
i
 = 0; i < 
MAXOPEN
; i++)

1076 i‡(
	`›í
(
fûe
[
i
], 
R
Ë=
FAIL
) ;

1077 i‡(
i
 =0Ë
	`îr
(5, "open_alot", "atáll");

1078 (
i
);

1079 
	}
}

1081 
	$˛o£_ÆŸ
(
numbî
)

1082 
numbî
;

1084 
i
, 
cou¡
 = 0;

1086 i‡(
numbî
 > 
MAXOPEN
)

1087 
	`îr
(5, "close_alot", "acceptÅhisárgument");

1089 
i
 = 
FF
; i < 
numbî
 + FF; i++)

1090 i‡(
	`˛o£
(
i
Ë!
OK
Ë
cou¡
++;

1092 (
numbî
 - 
cou¡
);

1093 
	}
}

1101 
	$˛ón_up_the_mess
()

1103 
i
;

1104 
dú«me
[6];

1107 
i
 = 0; i < 
MAXOPEN
; i++Ë
	`åy_u∆ök
(
fûe
[i]);

1110 i‡(
	`chdú
("drwx"Ë!
OK
)

1111 
	`îr
(5, 
CHDIR
, "to 'drwx'");

1113 
i
 = 0; i < 8; i++Ë
	`åy_u∆ök
(
‚ames
[i]);

1114 i‡(
	`chdú
(".."Ë!
OK
Ë
	`îr
(5, 
CHDIR
, "to '..'");

1118 
	`chmod_8_dús
(
RWX
);

1121 
	`åy_u∆ök
("d-wx/rwx");

1122 
	`åy_u∆ök
("dr-x/rwx");

1123 
	`åy_u∆ök
("drw-/rwx");

1126 
i
 = 0; i < 8; i++) {

1127 
	`°r˝y
(
dú«me
, "d");

1128 
	`°rˇt
(
dú«me
, 
‚ames
[
i
]);

1131 
	`rmdú
(
dú«me
);

1135 
	}
}

1137 
	$chmod_8_dús
(
sw
)

1138 
sw
;

1141 
mode
;

1142 
i
;

1144 i‡(
sw
 == 8)

1145 
mode
 = 0;

1147 
mode
 = 
sw
;

1149 
i
 = 0; i < 8; i++) {

1150 
	`chmod
(
dú
[
i
], 040000 + 
mode
 * 0100);

1151 i‡(
sw
 =8Ë
mode
++;

1153 
	}
}

1155 
	$quô
()

1158 
	`chdú
("..");

1159 
	`sy°em
("rm -rf DIR*");

1161 i‡(
îr˘
 == 0) {

1162 
	`¥ötf
("ok\n");

1163 
	`exô
(0);

1165 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

1166 
	`exô
(1);

1168 
	}
}

	@test18.c

7 
	~<sys/ty≥s.h
>

8 
	~<sys/°©.h
>

9 
	~<sys/waô.h
>

10 
	~<î∫o.h
>

11 
	~<f˙é.h
>

12 
	~<°dlib.h
>

13 
	~<uni°d.h
>

14 
	~<°rög.h
>

15 
	~<°dio.h
>

17 
	#NOCRASH
 1

	)

18 
	#PDPNOHANG
 1

	)

19 
	#MAXERR
 5

	)

21 
	#USER_ID
 12

	)

22 
	#GROUP_ID
 1

	)

23 
	#FF
 3

	)

24 
	#USER
 1

	)

25 
	#GROUP
 0

	)

27 
	#ARSIZE
 256

	)

28 
	#PIPESIZE
 3584

	)

29 
	#MAXOPEN
 17

	)

30 
	#MAXLINK
 0177

	)

31 
	#MASK
 0777

	)

32 
	#READ_EOF
 0

	)

34 
	#OK
 0

	)

35 
	#FAIL
 -1

	)

37 
	#R
 0

	)

38 
	#W
 1

	)

39 
	#RW
 2

	)

41 
	#RWX
 7

	)

43 
	#NIL
 ""

	)

44 
	#UMASK
 "umask"

	)

45 
	#CREAT
 "¸ót"

	)

46 
	#WRITE
 "wrôe"

	)

47 
	#READ
 "ªad"

	)

48 
	#OPEN
 "›í"

	)

49 
	#CLOSE
 "˛o£"

	)

50 
	#LSEEK
 "l£ek"

	)

51 
	#ACCESS
 "ac˚ss"

	)

52 
	#CHDIR
 "chdú"

	)

53 
	#CHMOD
 "chmod"

	)

54 
	#LINK
 "lök"

	)

55 
	#UNLINK
 "u∆ök"

	)

56 
	#PIPE
 "pùe"

	)

57 
	#STAT
 "°©"

	)

58 
	#FSTAT
 "f°©"

	)

59 
	#DUP
 "dup"

	)

60 
	#UTIME
 "utime"

	)

62 
	gîr˘
;

64 *
	gfûe
[];

65 *
	g‚ames
[];

66 *
	gdú
[];

71 *
	gfûe
[20] = {"f0", "f1", "f2", "f3", "f4", "f5", "f6",

73 "f14", "f15", "f16", "f17", "f18", "f19"}, *
	g‚ames
[8] = {"---", "--x", "-w-", "-wx", "r--",

74 "r-x", "rw-", "rwx"}, *
	gdú
[8] = {"d---", "d--x", "d-w-", "d-wx", "dr--", "dr-x",

80 
_PROTOTYPE
(
maö
, ());

81 
_PROTOTYPE
(
ã°
, ());

82 
_PROTOTYPE
(
ã°01
, ());

83 
_PROTOTYPE
(
ã°02
, ());

84 
_PROTOTYPE
(
ã°03
, ());

85 
_PROTOTYPE
(
wrôe_°™d¨ds
, (
fûedes
, 
a
 []));

86 
_PROTOTYPE
(
ã°04
, ());

87 
_PROTOTYPE
(
ªad_°™d¨ds
, (
fûedes
, 
a
 []));

88 
_PROTOTYPE
(
ªad_m‹e
, (
fûedes
, 
a
 []));

89 
_PROTOTYPE
(
ã°05
, ());

90 
_PROTOTYPE
(
åy_›í
, (*
‚ame
, 
mode
, 
ã°
));

91 
_PROTOTYPE
(
ã°06
, ());

92 
_PROTOTYPE
(
ã°07
, ());

93 
_PROTOTYPE
(
ac˚ss_°™d¨ds
, ());

94 
_PROTOTYPE
(
åy_ac˚ss
, (*
‚ame
, 
mode
, 
ã°
));

95 
_PROTOTYPE
(
e
, (*
°rög
));

96 
_PROTOTYPE
(
∆¸
, ());

97 
_PROTOTYPE
(
°r
, (*
s
));

98 
_PROTOTYPE
(
îr
, (
numbî
, *
sˇŒ
, *
«me
));

99 
_PROTOTYPE
(
make_™d_fûl_dús
, ());

100 
_PROTOTYPE
(
put_fûe_ö_dú
, (*
dú«me
, 
mode
));

101 
_PROTOTYPE
(
öô_¨øy
, (*
a
));

102 
_PROTOTYPE
(
˛ór_¨øy
, (*
b
));

103 
_PROTOTYPE
(
comp_¨øy
, (*
a
, *
b
, 
ønge
));

104 
_PROTOTYPE
(
åy_˛o£
, (
fûedes
, *
«me
));

105 
_PROTOTYPE
(
åy_u∆ök
, (*
‚ame
));

106 
_PROTOTYPE
(
Remove
, (
fdes
, *
‚ame
));

107 
_PROTOTYPE
(
gë_mode
, (*
«me
));

108 
_PROTOTYPE
(
check
, (*
sˇŒ
, 
numbî
));

109 
_PROTOTYPE
(
put
, (
ƒ
));

110 
_PROTOTYPE
(
›í_ÆŸ
, ());

111 
_PROTOTYPE
(
˛o£_ÆŸ
, (
numbî
));

112 
_PROTOTYPE
(
˛ón_up_the_mess
, ());

113 
_PROTOTYPE
(
chmod_8_dús
, (
sw
));

114 
_PROTOTYPE
(
quô
, ());

120 
	$maö
()

122 
n
;

124 i‡(
	`gëeuid
(Ë=0 || 
	`gëuid
() == 0) {

125 
	`¥ötf
("Test 18 cannotÑunásÑoot;Åestáborted\n");

126 
	`exô
(1);

129 
	`sy°em
("rm -rf DIR_18; mkdir DIR_18");

130 
	`chdú
("DIR_18");

132 i‡(
	`f‹k
()) {

133 
	`¥ötf
("Test 18 ");

134 
	`fÊush
(
°dout
);

136 
	`waô
(&
n
);

137 
	`˛ón_up_the_mess
();

138 
	`quô
();

140 
	`ã°
();

141 
	`exô
(0);

145 
	}
}

149 
	$ã°
()

151 
	`umask
(0);

153 
	`ã°01
();

154 
	`make_™d_fûl_dús
();

155 
	`ã°02
();

156 
	`ã°03
();

157 
	`ã°04
();

158 
	`ã°05
();

159 
	`ã°06
();

160 
	`ã°07
();

161 
	`umask
(022);

162 
	}
}

174 
	$ã°01
()

176 
ﬁdvÆue
, 
√wvÆue
, 
ãmpvÆue
;

177 
ƒ
;

179 i‡((
ﬁdvÆue
 = 
	`umask
(0777)Ë!0Ë
	`îr
(0, 
UMASK
, 
NIL
);

185 i‡((
√wvÆue
 = 
	`umask
(~0777)Ë!0777Ë
	`îr
(1, 
UMASK
, "illegal");

186 i‡(
ﬁdvÆue
 =
√wvÆue
Ë
	`îr
(11, 
UMASK
, "not change mask");

188 i‡((
ãmpvÆue
 = 
	`umask
(0)Ë!0Ë
	`îr
(2, 
UMASK
, "values");

192 
√wvÆue
 = 
MASK
;Çewvalue >= 0;Çewvalue -= 0111) {

193 
ãmpvÆue
 = 
	`umask
(
√wvÆue
);

194 i‡(
ãmpvÆue
 !
ﬁdvÆue
) {

195 
	`îr
(1, 
UMASK
, "illegal");

197 } i‡((
ƒ
 = 
	`¸ót
("file01", 0777)) < 0)

198 
	`îr
(5, 
CREAT
, "'file01'");

200 
	`åy_˛o£
(
ƒ
, "'file01'");

201 i‡(
	`gë_mode
("fûe01"Ë!(
MASK
 & ~
√wvÆue
))

202 
	`îr
(7, 
UMASK
, "mode computed");

203 
	`åy_u∆ök
("file01");

205 
ﬁdvÆue
 = 
√wvÆue
;

209 i‡((
ãmpvÆue
 = 
	`umask
(0)) != 0)

210 
	`îr
(7, 
UMASK
, "umask may influenceÑest ofÅests!");

211 
	}
}

218 
	$ã°02
()

220 
n
, 
n1
, 
mode
;

221 
a
[
ARSIZE
], 
b
[ARSIZE];

222 
°©
 
°bf1
;

224 
mode
 = 0;

226 
n
 = 0;Ç < 
MAXOPEN
;Ç++) {

227 i‡(
	`¸ót
(
fûe
[
n
], 
mode
Ë!
FF
 +Ç)

228 
	`îr
(13, 
CREAT
, 
fûe
[
n
]);

230 i‡(
	`gë_mode
(
fûe
[
n
]Ë!
mode
)

231 
	`îr
(7, 
CREAT
, "mode set while creating many files");

236 i‡(
	`chmod
(
fûe
[
n
], 0700Ë!
OK
Ë
	`îr
(5, 
CHMOD
, file[n]);

239 
mode
 = (mode + 0100) % 01000;

243 i‡(
	`¸ót
("fûe02", 0777Ë!
FAIL
)

244 
	`îr
(9, 
CREAT
, "created");

246 
	`check
(
CREAT
, 
EMFILE
);

250 i‡((
n
 = 
	`˛o£_ÆŸ
(
MAXOPEN
)Ë< MAXOPENË
	`îr
(5, 
CLOSE
, "MAXOPEN files");

253 i‡((
n
 = 
	`¸ót
("file02", 0777)) < 0)

254 
	`îr
(5, 
CREAT
, "'file02'");

256 
	`öô_¨øy
(
a
);

257 i‡(
	`wrôe
(
n
, 
a
, 
ARSIZE
Ë!ARSIZEË
	`îr
(1, 
WRITE
, "bad");

259 i‡((
n1
 = 
	`¸ót
("file02", 0755)) < 0)

260 
	`îr
(5, 
CREAT
, "'file02' (2ndÅime)");

263 i‡(
	`l£ek
(
n1
, 0L, 
SEEK_END
) != 0)

264 
	`îr
(11, 
CREAT
, "notÅruncate file byÑecreation");

267 
	`˛ór_¨øy
(
b
);

269 i‡(
	`l£ek
(
n1
, 0L, 
SEEK_SET
) != 0)

270 
	`îr
(5, 
LSEEK
, "toÅop of 2nd fd 'file02'");

271 i‡(
	`wrôe
(
n1
, 
a
, 
ARSIZE
) != ARSIZE)

272 
	`îr
(1, 
WRITE
, "(2) bad");

275 
	`åy_˛o£
(
n1
, "'file02' (2nd creation)");

276 i‡((
n1
 = 
	`›í
("fûe02", 
RW
)) < 0)

277 
	`îr
(5, 
OPEN
, "'file02' (2ndÑecreation)");

280 i‡(
	`l£ek
(
n1
, 0L, 
SEEK_SET
) != 0)

281 
	`îr
(5, 
LSEEK
, "toÅop 'file02'(2nd fd) (2)");

282 i‡(
	`ªad
(
n1
, 
b
, 
ARSIZE
) != ARSIZE)

283 
	`îr
(1, 
READ
, "wrong");

285 i‡(
	`comp_¨øy
(
a
, 
b
, 
ARSIZE
Ë!
OK
Ë
	`îr
(11, 
CREAT
,

288 i‡(
	`gë_mode
("file02") != 0777)

289 
	`îr
(11, 
CREAT
, "not maintain mode byÑecreation");

290 
	`åy_˛o£
(
n1
, "recreated 'file02'");

293 
	`Remove
(
n
, "file02");

297 i‡(
	`¸ót
("drw-/fûe02", 0777Ë!
FAIL
)

298 
	`îr
(4, 
CREAT
, "'drw-'");

300 
	`check
(
CREAT
, 
EACCES
);

303 i‡(
	`¸ót
("dr-x/fûe02", 0777Ë!
FAIL
)

304 
	`îr
(12, 
CREAT
, "'dr-x/file02'");

306 
	`check
(
CREAT
, 
EACCES
);

309 i‡(
	`¸ót
("drwx/r-x", 0777Ë!
FAIL
)

310 
	`îr
(11, 
CREAT
, "recreateÇon-writable file");

312 
	`check
(
CREAT
, 
EACCES
);

315 i‡((
n
 = 
	`¸ót
("dú", 040777)Ë!
FAIL
) {

316 i‡(
	`f°©
(
n
, &
°bf1
Ë!
OK
)

317 
	`îr
(5, 
FSTAT
, "'dir'");

318 i‡(
°bf1
.
°_mode
 !(
mode_t
) 0100777)

323 
	`îr
(11, 
CREAT
, "'creat'áÇew directory");

324 
	`Remove
(
n
, "dir");

331 i‡(
	`¸ót
("drwx", 0777Ë!
FAIL
)

332 
	`îr
(11, 
CREAT
, "createánÉxisting dir!");

334 
	`check
(
CREAT
, 
EISDIR
);

335 
	}
}

344 
	$ã°03
()

346 
n
, 
n1
;

347 
fd
[2];

348 
a
[
ARSIZE
];

350 
	`öô_¨øy
(
a
);

353 i‡((
n
 = 
	`¸ót
("fûe03", 0700)Ë!
FF
)

354 
	`îr
(13, 
CREAT
, "'file03'");

356 
	`wrôe_°™d¨ds
(
n
, 
a
);

357 
	`åy_˛o£
(
n
, "'file03'");

361 i‡((
n
 = 
	`›í
("fûe03", 
W
)) < 0)

362 
	`îr
(5, 
OPEN
, "'file03'");

364 
	`wrôe_°™d¨ds
(
n
, 
a
);

367 i‡((
n1
 = 
	`dup
(
n
)) < 0)

368 
	`îr
(5, 
DUP
, "'file03'");

370 
	`wrôe_°™d¨ds
(
n1
, 
a
);

371 
	`åy_˛o£
(
n1
, "duplicated fd 'file03'");

375 
	`Remove
(
n
, "file03");

378 i‡(
	`pùe
(
fd
) < 0)

379 
	`îr
(5, 
PIPE
, 
NIL
);

381 
	`wrôe_°™d¨ds
(
fd
[1], 
a
);

382 
	`åy_˛o£
(
fd
[0], "'fd[0]'");

383 
	`åy_˛o£
(
fd
[1], "'fd[1]'");

387 i‡((
n
 = 
	`›í
("drwx/r--", 
R
)) < 0)

388 
	`îr
(5, 
OPEN
, "'drwx/r--'");

390 i‡(
	`wrôe
(
n
, 
a
, 
ARSIZE
Ë!
FAIL
)

391 
	`îr
(11, 
WRITE
, "write onÇon-writ. file");

393 
	`check
(
WRITE
, 
EBADF
);

394 
	`åy_˛o£
(
n
, "'drwx/r--'");

396 
	}
}

399 
	$wrôe_°™d¨ds
(
fûedes
, 
a
)

400 
fûedes
;

401 
a
[];

405 i‡(
	`wrôe
(
fûedes
, 
a
, 
ARSIZE
Ë!ARSIZEË
	`îr
(1, 
WRITE
, "bad");

409 i‡(
	`wrôe
(-1, 
a
, 
ARSIZE
Ë!
FAIL
)

410 
	`îr
(2, 
WRITE
, "filedes");

412 
	`check
(
WRITE
, 
EBADF
);

415 #i‚de‡
PDPNOHANG


416 i‡(
	`wrôe
(
fûedes
, 
a
, -
ARSIZE
Ë!
FAIL
)

417 
	`îr
(2, 
WRITE
, "length");

419 
	`check
(
WRITE
, 
EINVAL
);

421 
	}
}

434 
	$ã°04
()

436 
n
, 
n1
, 
fd
[2];

437 
a
[
ARSIZE
];

440 i‡((
n
 = 
	`¸ót
("fûe04", 0700)Ë!
FF
)

442 
	`îr
(13, 
CREAT
, "'file04'");

445 
	`åy_˛o£
(
n
, "'file04'");

446 i‡((
n
 = 
	`›í
("fûe04", 
RW
)Ë< 0Ë
	`îr
(5, 
OPEN
, "'file04'");

448 
	`öô_¨øy
(
a
);

450 i‡(
	`wrôe
(
n
, 
a
, 
ARSIZE
) != ARSIZE)

451 
	`îr
(1, 
WRITE
, "bad");

453 i‡(
	`l£ek
(
n
, 0L, 
SEEK_SET
Ë!0Ë
	`îr
(5, 
LSEEK
, "'file04'");

454 
	`ªad_°™d¨ds
(
n
, 
a
);

455 
	`ªad_m‹e
(
n
, 
a
);

457 
	`åy_˛o£
(
n
, "'file04'");

461 i‡((
n
 = 
	`›í
("fûe04", 
R
)) < 0)

462 
	`îr
(5, 
OPEN
, "'file04'");

464 
	`ªad_°™d¨ds
(
n
, 
a
);

465 
	`ªad_m‹e
(
n
, 
a
);

466 
	`åy_˛o£
(
n
, "'file04'");

470 i‡((
n
 = 
	`›í
("fûe04", 
R
)Ë< 0Ë
	`îr
(5, 
OPEN
, "'file04'");

471 i‡((
n1
 = 
	`dup
(
n
)) < 0)

472 
	`îr
(5, 
DUP
, "'file04'");

474 
	`ªad_°™d¨ds
(
n1
, 
a
);

475 
	`ªad_m‹e
(
n1
, 
a
);

476 
	`åy_˛o£
(
n1
, "duplicated fd 'file04'");

480 
	`Remove
(
n
, "file04");

483 i‡(
	`pùe
(
fd
) < 0)

484 
	`îr
(5, 
PIPE
, 
NIL
);

486 i‡(
	`wrôe
(
fd
[1], 
a
, 
ARSIZE
) != ARSIZE) {

487 
	`îr
(5, 
WRITE
, "'fd[1]'");

488 
	`åy_˛o£
(
fd
[1], "'fd[1]'");

490 
	`åy_˛o£
(
fd
[1], "'fd[1]'");

491 
	`ªad_°™d¨ds
(
fd
[0], 
a
);

493 
	`åy_˛o£
(
fd
[0], "'fd[0]'");

497 i‡((
n
 = 
	`›í
("drwx/-wx", 
W
)) < 0)

498 
	`îr
(5, 
OPEN
, "'drwx/-wx'");

500 i‡(
	`ªad
(
n
, 
a
, 
ARSIZE
Ë!
FAIL
)

501 
	`îr
(11, 
READ
, "readáÇon-read. file");

503 
	`check
(
READ
, 
EBADF
);

504 
	`åy_˛o£
(
n
, "'/drwx/-wx'");

506 
	}
}

509 
	$ªad_°™d¨ds
(
fûedes
, 
a
)

510 
fûedes
;

511 
a
[];

513 
b
[
ARSIZE
];

515 
	`˛ór_¨øy
(
b
);

516 i‡(
	`ªad
(
fûedes
, 
b
, 
ARSIZE
) != ARSIZE)

517 
	`îr
(1, 
READ
, "bad");

518 i‡(
	`comp_¨øy
(
a
, 
b
, 
ARSIZE
Ë!
OK
)

519 
	`îr
(7, "read/write", "values");

520 i‡(
	`ªad
(
fûedes
, 
b
, 
ARSIZE
Ë!
READ_EOF
)

521 
	`îr
(11, 
READ
, "read beyondÉndoffile");

525 i‡(
	`ªad
(
FAIL
, 
b
, 
ARSIZE
) != FAIL)

526 
	`îr
(2, 
READ
, "filedes");

528 
	`check
(
READ
, 
EBADF
);

532 i‡(
	`ªad
(
fûedes
, 
b
, -
ARSIZE
Ë!
FAIL
)

533 
	`îr
(2, 
READ
, "length");

535 
	`check
(
READ
, 
EINVAL
);

536 
	}
}

540 
	$ªad_m‹e
(
fûedes
, 
a
)

541 
fûedes
;

542 
a
[];

545 
i
;

546 
b
[
ARSIZE
];

548 i‡(
	`l£ek
(
fûedes
, (Ë(
ARSIZE
 / 2), 
SEEK_SET
) != ARSIZE / 2)

549 
	`îr
(5, 
LSEEK
, "toÜocation ARSIZE/2");

551 
	`˛ór_¨øy
(
b
);

552 i‡(
	`ªad
(
fûedes
, 
b
, 
ARSIZE
Ë!ARSIZE / 2Ë
	`îr
(1, 
READ
, "bad");

554 
i
 = 0; i < 
ARSIZE
 / 2; i++)

555 i‡(
b
[
i
] !
a
[(
ARSIZE
 / 2) + i])

556 
	`îr
(7, 
READ
, "fromÜocation ARSIZE/2");

557 
	}
}

562 
	$ã°05
()

564 
n
, 
n1
, 
mode
, 
fd
[2];

565 
b
[
ARSIZE
];

568 i‡((
n
 = 
	`¸ót
("fûe05", 0700)Ë!
FF
)

569 
	`îr
(13, 
CREAT
, "'file05'");

571 i‡((
n1
 = 
	`›í
("fûe05", 
RW
)Ë!
FF
 + 1)

572 
	`îr
(13, 
OPEN
, "'file05'áfter creation");

573 
	`åy_˛o£
(
n1
, "'file05' (openáfter creation)");

575 
	`åy_˛o£
(
n
, "'file05'");

576 i‡((
n
 = 
	`›í
("fûe05", 
R
)Ë!
FF
)

577 
	`îr
(13, 
OPEN
, "after closing");

579 
	`åy_˛o£
(
n
, "'file05' (openáfter closing)");

582 
	`åy_u∆ök
("file05");

587 i‡((
n
 = 
	`¸ót
("file05", 0700)) < 0)

588 
	`îr
(5, 
CREAT
, "'file05' (2ndÅime)");

590 
	`åy_˛o£
(
n
, "file05");

591 
mode
 = 0; mode <= 0700; mode += 0100) {

592 i‡(
	`chmod
("fûe05", 
mode
Ë!
OK
Ë
	`îr
(5, 
CHMOD
, "'file05'");

594 i‡(
mode
 <= 0100) {

595 
	`åy_›í
("fûe05", 
R
, 
FAIL
);

596 
	`åy_›í
("fûe05", 
W
, 
FAIL
);

597 
	`åy_›í
("fûe05", 
RW
, 
FAIL
);

598 } i‡(
mode
 >= 0200 && mode <= 0300) {

599 
	`åy_›í
("fûe05", 
R
, 
FAIL
);

600 
	`åy_›í
("fûe05", 
W
, 
FF
);

601 
	`åy_›í
("fûe05", 
RW
, 
FAIL
);

602 } i‡(
mode
 >= 0400 && mode <= 0500) {

603 
	`åy_›í
("fûe05", 
R
, 
FF
);

604 
	`åy_›í
("fûe05", 
W
, 
FAIL
);

605 
	`åy_›í
("fûe05", 
RW
, 
FAIL
);

607 
	`åy_›í
("fûe05", 
R
, 
FF
);

608 
	`åy_›í
("fûe05", 
W
, 
FF
);

609 
	`åy_›í
("fûe05", 
RW
, 
FF
);

615 i‡((
n
 = 
	`›í
("drwx/rwx", 
R
)) < 0)

616 
	`îr
(13, 
OPEN
, "existing file");

618 i‡((
n1
 = 
	`dup
(
n
)) < 0)

619 
	`îr
(13, 
DUP
, "'drwx/rwx'");

621 
	`åy_˛o£
(
n1
, "duplicated fd 'drwx/rwx'");

623 i‡(
	`ªad
(
n1
, 
b
, 
ARSIZE
Ë!
FAIL
)

624 
	`îr
(11, 
READ
, "on closed dupped fd 'drwx/rwx'");

626 
	`check
(
READ
, 
EBADF
);

628 i‡(
	`ªad
(
n
, 
b
, 
ARSIZE
Ë=
FAIL
)

629 
	`îr
(13, 
READ
, "on fd '/drwx/rwx'");

631 
	`åy_˛o£
(
n
, "'drwx/rwx'");

635 i‡(
	`pùe
(
fd
) < 0)

636 
	`îr
(13, 
PIPE
, 
NIL
);

638 
	`åy_˛o£
(
fd
[1], "duplicated fd 'fd[1]'");

641 
	`˛ór_¨øy
(
b
);

642 i‡(
	`ªad
(
fd
[0], 
b
, 
ARSIZE
Ë!
READ_EOF
)

643 
	`îr
(11, 
READ
, "read onÉmptyÖipe (and fd[1] was closed)");

644 
	`åy_˛o£
(
fd
[0], "duplicated fd 'fd[0]'");

648 i‡(
	`›í
("n⁄-fûe", 
R
Ë!
FAIL
)

649 
	`îr
(11, 
OPEN
, "openÇon-executable file");

651 
	`check
(
OPEN
, 
ENOENT
);

654 i‡(
	`›í
("dzzz/fûe05", 
R
Ë!
FAIL
)

655 
	`îr
(11, 
OPEN
, "open inánÇon-searchable dir");

657 
	`check
(
OPEN
, 
ENOENT
);

660 i‡(
n
 = 
	`›í
("drw-/rwx", 
R
Ë!
FAIL
)

661 
	`îr
(11, 
OPEN
, "open inánÇon-searchabledir");

663 
	`check
(
OPEN
, 
EACCES
);

667 
	`åy_u∆ök
("file05");

671 i‡(
	`›í
("drwx/-wx", 
R
Ë!
FAIL
)

672 
	`îr
(11, 
OPEN
, "open unreadable file forÑeading");

674 
	`check
(
OPEN
, 
EACCES
);

677 i‡(
	`›í
("drwx/r-x", 
W
Ë!
FAIL
)

678 
	`îr
(11, 
OPEN
, "open unwritable file for writing");

680 
	`check
(
OPEN
, 
EACCES
);

683 i‡((
n
 = 
	`›í_ÆŸ
()Ë!
MAXOPEN
)

684 
	`îr
(13, 
OPEN
, "MAXOPEN files");

688 i‡(
	`›í
("drwx/rwx", 
RW
Ë!
FAIL
)

689 
	`îr
(9, 
OPEN
, "open");

691 
	`check
(
OPEN
, 
EMFILE
);

692 i‡(
	`˛o£_ÆŸ
(
n
Ë!nË
	`îr
(5, 
CLOSE
, "all opened files");

695 i‡(
	`˛o£
(-1Ë!
FAIL
)

696 
	`îr
(2, 
CLOSE
, "filedes");

698 
	`check
(
CLOSE
, 
EBADF
);

699 
	}
}

702 
	$åy_›í
(
‚ame
, 
mode
, 
ã°
)

703 
mode
, 
ã°
;

704 *
‚ame
;

706 
n
;

708 i‡((
n
 = 
	`›í
(
‚ame
, 
mode
)Ë!
ã°
)

709 
	`îr
(11, 
OPEN
, "breakÅhrough filepermission withán incorrect mode");

710 i‡(
n
 !
FAIL
Ë
	`åy_˛o£
“, 
‚ame
);

711 
	}
}

718 
	$ã°06
()

720 
a
[
ARSIZE
], 
b
[ARSIZE];

721 
fd
;

723 i‡((
fd
 = 
	`›í
("drwx/rwx", 
RW
)Ë!
FF
)

724 
	`îr
(13, 
OPEN
, "'drwx/rwx'");

726 
	`öô_¨øy
(
a
);

727 i‡(
	`wrôe
(
fd
, 
a
, 10) != 10)

728 
	`îr
(1, 
WRITE
, "bad");

731 i‡(
	`l£ek
(
fd
, 0L, 
SEEK_SET
) != 0)

732 
	`îr
(5, 
LSEEK
, "to begin file");

733 i‡(
	`ªad
(
fd
, 
b
, 10) != 10)

734 
	`îr
(1, 
READ
, "bad");

735 i‡(
	`comp_¨øy
(
a
, 
b
, 10Ë!
OK
)

736 
	`îr
(7, 
LSEEK
, "valuesÑ/wáfterÜseekÅo begin");

738 i‡(
	`l£ek
(
fd
, 0L, 
SEEK_END
) != 10)

739 
	`îr
(5, 
LSEEK
, "toÉnd of file");

740 i‡(
	`ªad
(
fd
, 
b
, 1Ë!
READ_EOF
)

741 
	`îr
(7, 
LSEEK
, "readátÉnd of file");

743 i‡(
	`l£ek
(
fd
, 10L, 
SEEK_CUR
) != 20)

744 
	`îr
(5, 
LSEEK
, "beyondÉnd of file");

745 i‡(
	`wrôe
(
fd
, 
a
, 10) != 10)

746 
	`îr
(1, 
WRITE
, "bad");

749 i‡(
	`l£ek
(
fd
, 20L, 
SEEK_SET
) != 20)

750 
	`îr
(5, 
LSEEK
, "'/drwx/rwx'");

751 i‡(
	`ªad
(
fd
, 
b
, 10) != 10)

752 
	`îr
(1, 
READ
, "bad");

753 i‡(
	`comp_¨øy
(
a
, 
b
, 10Ë!
OK
)

754 
	`îr
(7, 
LSEEK
,

760 i‡(
	`l£ek
(
fd
, -1L, 0Ë!
FAIL
)

761 
	`îr
(11, 
LSEEK
, "lseek before beginning of file");

763 
	`åy_˛o£
(
fd
, "'drwx/rwx'");

767 i‡(
	`l£ek
(-1, 0L, 
SEEK_SET
Ë!
FAIL
)

768 
	`îr
(2, 
LSEEK
, "filedes");

770 
	`check
(
LSEEK
, 
EBADF
);

772 
	}
}

783 
	$ã°07
()

786 i‡(
	`ac˚ss
("drwx/rwx", 
RWX
Ë!
OK
Ë
	`îr
(5, 
ACCESS
, "accessible file");

788 i‡(
	`ac˚ss
("./././drwx/././rwx", 0Ë!
OK
)

789 
	`îr
(5, 
ACCESS
, "'/./.(etc)/drwx///rwx'");

792 i‡(
	`chdú
("drwx"Ë!
OK
Ë
	`îr
(5, 
CHDIR
, "'drwx'");

794 
	`ac˚ss_°™d¨ds
();

796 i‡(
	`chdú
(".."Ë!
OK
Ë
	`îr
(5, 
CHDIR
, "'..'");

801 i‡(
	`ac˚ss
("n⁄-fûe", 0Ë!
FAIL
)

802 
	`îr
(11, 
ACCESS
, "accessÇon-existing file");

804 
	`check
(
ACCESS
, 
ENOENT
);

807 i‡(
	`ac˚ss
("drw-/rwx", 0Ë!
FAIL
)

808 
	`îr
(4, 
ACCESS
, "'drw-'");

810 
	`check
(
ACCESS
, 
EACCES
);

813 i‡(
	`ac˚ss
("drwx/--x", 
RWX
Ë!
FAIL
)

814 
	`îr
(11, 
ACCESS
, "aÇonáccessible file");

816 
	`check
(
ACCESS
, 
EACCES
);

818 
	}
}

821 
	$ac˚ss_°™d¨ds
()

823 
i
, 
mode
 = 0;

825 
i
 = 0; i < 8; i++)

826 i‡(
i
 == 0)

827 
	`åy_ac˚ss
(
‚ames
[
mode
], 
i
, 
OK
);

829 
	`åy_ac˚ss
(
‚ames
[
mode
], 
i
, 
FAIL
);

830 
mode
++;

832 
i
 = 0; i < 8; i++)

833 i‡(
i
 < 2)

834 
	`åy_ac˚ss
(
‚ames
[
mode
], 
i
, 
OK
);

836 
	`åy_ac˚ss
(
‚ames
[
mode
], 
i
, 
FAIL
);

837 
mode
++;

839 
i
 = 0; i < 8; i++)

840 i‡(
i
 == 0 || i == 2)

841 
	`åy_ac˚ss
(
‚ames
[
mode
], 
i
, 
OK
);

843 
	`åy_ac˚ss
(
‚ames
[
mode
], 
i
, 
FAIL
);

844 
mode
++;

846 
i
 = 0; i < 8; i++)

847 i‡(
i
 < 4)

848 
	`åy_ac˚ss
(
‚ames
[
mode
], 
i
, 
OK
);

850 
	`åy_ac˚ss
(
‚ames
[
mode
], 
i
, 
FAIL
);

851 
mode
++;

853 
i
 = 0; i < 8; i++)

854 i‡(
i
 == 0 || i == 4)

855 
	`åy_ac˚ss
(
‚ames
[
mode
], 
i
, 
OK
);

857 
	`åy_ac˚ss
(
‚ames
[
mode
], 
i
, 
FAIL
);

858 
mode
++;

860 
i
 = 0; i < 8; i++)

861 i‡(
i
 == 0 || i == 1 || i == 4 || i == 5)

862 
	`åy_ac˚ss
(
‚ames
[
mode
], 
i
, 
OK
);

864 
	`åy_ac˚ss
(
‚ames
[
mode
], 
i
, 
FAIL
);

865 
mode
++;

867 
i
 = 0; i < 8; i++)

868 i‡(
i
 % 2 == 0)

869 
	`åy_ac˚ss
(
‚ames
[
mode
], 
i
, 
OK
);

871 
	`åy_ac˚ss
(
‚ames
[
mode
], 
i
, 
FAIL
);

872 
mode
++;

874 
i
 = 0; i < 8; i++Ë
	`åy_ac˚ss
(
‚ames
[
mode
], i, 
OK
);

875 
	}
}

879 
	$åy_ac˚ss
(
‚ame
, 
mode
, 
ã°
)

880 
mode
, 
ã°
;

881 *
‚ame
;

883 i‡(
	`ac˚ss
(
‚ame
, 
mode
Ë!
ã°
)

884 
	`îr
(100, 
ACCESS
, "incorrectáccess oná file (try_access)");

885 
	}
}

908 
	$e
(
°rög
)

909 *
°rög
;

911 
	`¥ötf
("Te°ÖrogømÉº‹: %s\n", 
°rög
);

912 
îr˘
++;

913 
	}
}

915 
	$∆¸
()

917 
	`¥ötf
("\n");

918 
	}
}

920 
	$°r
(
s
)

921 *
s
;

923 
	`¥ötf
(
s
);

924 
	}
}

932 
	$îr
(
numbî
, 
sˇŒ
, 
«me
)

935 *
sˇŒ
, *
«me
;

936 
numbî
;

939 
îr˘
++;

940 i‡(
îr˘
 > 
MAXERR
) {

941 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

942 
	`chdú
("..");

943 
	`sy°em
("rm -rf DIR*");

944 
	`quô
();

946 
	`e
("");

947 
	`°r
("\t");

948 
numbî
) {

950 
	`°r
(
sˇŒ
);

951 
	`°r
(": illegal initial value.");

954 
	`°r
(
sˇŒ
);

955 
	`°r
(": ");

956 
	`°r
(
«me
);

957 
	`°r
(" valueÑeturned.");

960 
	`°r
(
sˇŒ
);

961 
	`°r
(":áccepting illegal ");

962 
	`°r
(
«me
);

963 
	`°r
(".");

966 
	`°r
(
sˇŒ
);

967 
	`°r
(":ácceptingÇon-existing file.");

970 
	`°r
(
sˇŒ
);

971 
	`°r
(": could searchÇon-searchable dir (");

972 
	`°r
(
«me
);

973 
	`°r
(").");

976 
	`°r
(
sˇŒ
);

977 
	`°r
(": cannot ");

978 
	`°r
(
sˇŒ
);

979 
	`°r
(" ");

980 
	`°r
(
«me
);

981 
	`°r
(".");

984 
	`°r
(
sˇŒ
);

985 
	`°r
(": incorrect ");

986 
	`°r
(
«me
);

987 
	`°r
(".");

990 
	`°r
(
sˇŒ
);

991 
	`°r
(": wrong values.");

994 
	`°r
(
sˇŒ
);

995 
	`°r
(":ácceptingÅoo many ");

996 
	`°r
(
«me
);

997 
	`°r
(" files.");

1000 
	`°r
(
sˇŒ
);

1001 
	`°r
(":Évená superuser can't doánything!");

1004 
	`°r
(
sˇŒ
);

1005 
	`°r
(": could ");

1006 
	`°r
(
«me
);

1007 
	`°r
(".");

1010 
	`°r
(
sˇŒ
);

1011 
	`°r
(": could write inÇon-writable dir (");

1012 
	`°r
(
«me
);

1013 
	`°r
(").");

1016 
	`°r
(
sˇŒ
);

1017 
	`°r
(": wrong filedesÑeturned (");

1018 
	`°r
(
«me
);

1019 
	`°r
(").");

1022 
	`°r
(
sˇŒ
);

1023 
	`°r
(": ");

1024 
	`°r
(
«me
);

1025 
	`°r
(".");

1027 : 
	`°r
("errornumber doesÇotÉxist!\n");

1029 
	`∆¸
();

1030 
	}
}

1039 
	$make_™d_fûl_dús
()

1044 
mode
, 
i
;

1046 
i
 = 0; i < 8; i++) {

1047 
	`mkdú
(
dú
[
i
], 0700);

1048 
	`chown
(
dú
[
i
], 
USER_ID
, 
GROUP_ID
);

1050 
	`£tuid
(
USER_ID
);

1051 
	`£tgid
(
GROUP_ID
);

1053 
mode
 = 0; modê< 8; mode++Ë
	`put_fûe_ö_dú
("drwx", mode);

1055 
	`put_fûe_ö_dú
("d-wx", 
RWX
);

1056 
	`put_fûe_ö_dú
("dr-x", 
RWX
);

1057 
	`put_fûe_ö_dú
("drw-", 
RWX
);

1059 
	`chmod_8_dús
(8);

1061 
	}
}

1065 
	$put_fûe_ö_dú
(
dú«me
, 
mode
)

1066 *
dú«me
;

1067 
mode
;

1070 
ƒ
;

1073 i‡(
	`chdú
(
dú«me
Ë!
OK
)

1074 
	`îr
(5, 
CHDIR
, "to dirname (put_f_in_dir)");

1077 i‡((
ƒ
 = 
	`¸ót
(
‚ames
[
mode
], mode * 0100)) < 0)

1078 
	`îr
(13, 
CREAT
, 
‚ames
[
mode
]);

1080 
	`åy_˛o£
(
ƒ
, 
‚ames
[
mode
]);

1082 i‡(
	`chdú
(".."Ë!
OK
)

1083 
	`îr
(5, 
CHDIR
, "toÖrevious dir (put_f_in_dir)");

1085 
	}
}

1097 
	$öô_¨øy
(
a
)

1098 *
a
;

1100 
i
;

1102 
i
 = 0;

1103 
i
++ < 
ARSIZE
Ë*
a
++ = 'a' + (i % 26);

1104 
	}
}

1106 
	$˛ór_¨øy
(
b
)

1107 *
b
;

1109 
i
;

1111 
i
 = 0;

1112 
i
++ < 
ARSIZE
Ë*
b
++ = '0';

1114 
	}
}

1117 
	$comp_¨øy
(
a
, 
b
, 
ønge
)

1118 *
a
, *
b
;

1119 
ønge
;

1121 i‡((
ønge
 < 0Ë|| (øngê> 
ARSIZE
)) {

1122 
	`îr
(100, "comp_array", "illegalÑange");

1123 (
FAIL
);

1125 
ønge
-- && (*
a
++ =*
b
++));

1126 i‡(*--
a
 =*--
b
)

1127 (
OK
);

1129 (
FAIL
);

1131 
	}
}

1134 
	$åy_˛o£
(
fûedes
, 
«me
)

1135 
fûedes
;

1136 *
«me
;

1138 i‡(
	`˛o£
(
fûedes
Ë!
OK
Ë
	`îr
(5, 
CLOSE
, 
«me
);

1139 
	}
}

1142 
	$åy_u∆ök
(
‚ame
)

1143 *
‚ame
;

1145 i‡(
	`u∆ök
(
‚ame
Ë!0Ë
	`îr
(5, 
UNLINK
, fname);

1146 
	}
}

1149 
	$Remove
(
fdes
, 
‚ame
)

1150 
fdes
;

1151 *
‚ame
;

1153 
	`åy_˛o£
(
fdes
, 
‚ame
);

1154 
	`åy_u∆ök
(
‚ame
);

1155 
	}
}

1158 
	$gë_mode
(
«me
)

1159 *
«me
;

1161 
°©
 
°bf1
;

1163 i‡(
	`°©
(
«me
, &
°bf1
Ë!
OK
) {

1164 
	`îr
(5, 
STAT
, 
«me
);

1165 (
°bf1
.
°_mode
);

1169 (
°bf1
.
°_mode
 & 07777);

1170 
	}
}

1180 
	$check
(
sˇŒ
, 
numbî
)

1181 
numbî
;

1182 *
sˇŒ
;

1184 i‡(
î∫o
 !
numbî
) {

1185 
	`e
(
NIL
);

1186 
	`°r
("\t");

1187 
	`°r
(
sˇŒ
);

1188 
	`°r
(": badÉrrno-value: ");

1189 
	`put
(
î∫o
);

1190 
	`°r
(" should have been: ");

1191 
	`put
(
numbî
);

1192 
	`∆¸
();

1194 
	}
}

1196 
	$put
(
ƒ
)

1197 
ƒ
;

1199 
ƒ
) {

1200 0: 
	`°r
("unused"); ;

1201 1: 
	`°r
("EPERM"); ;

1202 2: 
	`°r
("ENOENT"); ;

1203 3: 
	`°r
("ESRCH"); ;

1204 4: 
	`°r
("EINTR"); ;

1205 5: 
	`°r
("EIO"); ;

1206 6: 
	`°r
("ENXIO"); ;

1207 7: 
	`°r
("E2BIG"); ;

1208 8: 
	`°r
("ENOEXEC"); ;

1209 9: 
	`°r
("EBADF"); ;

1210 10: 
	`°r
("ECHILD"); ;

1211 11: 
	`°r
("EAGAIN"); ;

1212 12: 
	`°r
("ENOMEM"); ;

1213 13: 
	`°r
("EACCES"); ;

1214 14: 
	`°r
("EFAULT"); ;

1215 15: 
	`°r
("ENOTBLK"); ;

1216 16: 
	`°r
("EBUSY"); ;

1217 17: 
	`°r
("EEXIST"); ;

1218 18: 
	`°r
("EXDEV"); ;

1219 19: 
	`°r
("ENODEV"); ;

1220 20: 
	`°r
("ENOTDIR"); ;

1221 21: 
	`°r
("EISDIR"); ;

1222 22: 
	`°r
("EINVAL"); ;

1223 23: 
	`°r
("ENFILE"); ;

1224 24: 
	`°r
("EMFILE"); ;

1225 25: 
	`°r
("ENOTTY"); ;

1226 26: 
	`°r
("ETXTBSY"); ;

1227 27: 
	`°r
("EFBIG"); ;

1228 28: 
	`°r
("ENOSPC"); ;

1229 29: 
	`°r
("ESPIPE"); ;

1230 30: 
	`°r
("EROFS"); ;

1231 31: 
	`°r
("EMLINK"); ;

1232 32: 
	`°r
("EPIPE"); ;

1233 33: 
	`°r
("EDOM"); ;

1234 34: 
	`°r
("ERANGE"); ;

1236 
	}
}

1248 
	$›í_ÆŸ
()

1250 
i
;

1252 
i
 = 0; i < 
MAXOPEN
; i++)

1253 i‡(
	`›í
(
fûe
[
i
], 
R
Ë=
FAIL
) ;

1254 i‡(
i
 =0Ë
	`îr
(5, "open_alot", "atáll");

1255 (
i
);

1256 
	}
}

1259 
	$˛o£_ÆŸ
(
numbî
)

1260 
numbî
;

1262 
i
, 
cou¡
 = 0;

1264 i‡(
numbî
 > 
MAXOPEN
)

1265 
	`îr
(5, "close_alot", "acceptÅhisárgument");

1267 
i
 = 
FF
; i < 
numbî
 + FF; i++)

1268 i‡(
	`˛o£
(
i
Ë!
OK
Ë
cou¡
++;

1270 (
numbî
 - 
cou¡
);

1271 
	}
}

1281 
	$˛ón_up_the_mess
()

1283 
i
;

1284 
dú«me
[6];

1287 
i
 = 0; i < 
MAXOPEN
; i++Ë
	`åy_u∆ök
(
fûe
[i]);

1290 i‡(
	`chdú
("drwx"Ë!
OK
)

1291 
	`îr
(5, 
CHDIR
, "to 'drwx'");

1293 
i
 = 0; i < 8; i++Ë
	`åy_u∆ök
(
‚ames
[i]);

1294 i‡(
	`chdú
(".."Ë!
OK
Ë
	`îr
(5, 
CHDIR
, "to '..'");

1299 
	`chmod_8_dús
(
RWX
);

1302 
	`åy_u∆ök
("d-wx/rwx");

1303 
	`åy_u∆ök
("dr-x/rwx");

1304 
	`åy_u∆ök
("drw-/rwx");

1307 
i
 = 0; i < 8; i++) {

1308 
	`°r˝y
(
dú«me
, "d");

1309 
	`°rˇt
(
dú«me
, 
‚ames
[
i
]);

1311 
	`rmdú
(
dú«me
);

1315 
	}
}

1317 
	$chmod_8_dús
(
sw
)

1318 
sw
;

1321 
mode
;

1322 
i
;

1324 i‡(
sw
 == 8)

1325 
mode
 = 0;

1327 
mode
 = 
sw
;

1329 
i
 = 0; i < 8; i++) {

1330 
	`chmod
(
dú
[
i
], 040000 + 
mode
 * 0100);

1331 i‡(
sw
 =8Ë
mode
++;

1333 
	}
}

1337 
	$quô
()

1340 
	`chdú
("..");

1341 
	`sy°em
("rm -rf DIR*");

1343 i‡(
îr˘
 == 0) {

1344 
	`¥ötf
("ok\n");

1345 
	`exô
(0);

1347 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

1348 
	`exô
(1);

1350 
	}
}

	@test19.c

1 
	~<sys/ty≥s.h
>

2 
	~<sys/°©.h
>

3 
	~<î∫o.h
>

4 
	~<f˙é.h
>

5 
	~<sig«l.h
>

6 
	~<°dlib.h
>

7 
	~<uni°d.h
>

8 
	~<°dio.h
>

10 
	#MAX_ERROR
 4

	)

11 
	#NB
 30L

	)

12 
	#NBOUNDS
 6

	)

14 
	gîr˘
, 
	gsubã°
, 
	g∑s£s
, 
	gpùesigs
;

15 
	gt1
;

17 
	gØ
[100];

18 
	gb
[4] = {0, 1, 2, 3}, 
	gc
[4] = {10, 20, 30, 40}, 
	gd
[4] = {6, 7, 8, 9};

19 
	gbounds
[
NBOUNDS
] = {7, 9, 50, 519, 520, 40000L};

20 
	gbuff
[30000];

22 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

23 
_PROTOTYPE
(
ã°19a
, ());

24 
_PROTOTYPE
(
ã°19b
, ());

25 
_PROTOTYPE
(
ã°19c
, ());

26 
_PROTOTYPE
(
ã°19d
, ());

27 
_PROTOTYPE
(
ã°19e
, ());

28 
_PROTOTYPE
(
ã°19f
, ());

29 
_PROTOTYPE
(
ã°19g
, ());

30 
_PROTOTYPE
(
˛øa
, ());

31 
_PROTOTYPE
(
pùeˇtchî
, (
s
));

32 
_PROTOTYPE
(
e
, (
n
));

33 
_PROTOTYPE
(
quô
, ());

36 
	$maö
(
¨gc
, 
¨gv
)

37 
¨gc
;

38 *
¨gv
[];

40 
i
, 
m
;

42 
m
 = (
¨gc
 =2 ? 
	`©oi
(
¨gv
[1]) : 0xFFFF);

44 i‡(
	`gëeuid
(Ë=0 || 
	`gëuid
() == 0) {

45 
	`¥ötf
("Test 19 cannotÑunásÑoot;Åestáborted\n");

46 
	`exô
(1);

49 
	`sy°em
("rm -rf DIR_19; mkdir DIR_19");

50 
	`chdú
("DIR_19");

52 
	`¥ötf
("Test 19 ");

53 
	`fÊush
(
°dout
);

54 
i
 = 0; i < 4; i++) {

55 i‡(
m
 & 0001Ë
	`ã°19a
();

56 i‡(
m
 & 0002Ë
	`ã°19b
();

57 i‡(
m
 & 0004Ë
	`ã°19c
();

58 i‡(
m
 & 0010Ë
	`ã°19d
();

59 i‡(
m
 & 0020Ë
	`ã°19e
();

60 i‡(
m
 & 0040Ë
	`ã°19f
();

61 i‡(
m
 & 0100Ë
	`ã°19g
();

62 
∑s£s
++;

64 
	`quô
();

66 
	}
}

68 
	$ã°19a
()

72 
fd
;

74 
subã°
 = 1;

76 i‡–(
fd
 = 
	`¸ót
("T19.a1", 0777)Ë!3Ë
	`e
(1);

77 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(2);

78 i‡–(
fd
 = 
	`›í
("T19.a1", 
O_RDONLY
)Ë!3Ë
	`e
(3);

79 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(4);

80 i‡–(
fd
 = 
	`›í
("T19.a1", 
O_WRONLY
)Ë!3Ë
	`e
(5);

81 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(6);

82 i‡–(
fd
 = 
	`›í
("T19.a1", 
O_RDWR
)Ë!3Ë
	`e
(7);

83 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(8);

86 i‡–(
fd
 = 
	`›í
("T19.a2", 
O_RDONLY
)Ë!-1Ë
	`e
(9);

87 i‡–(
fd
 = 
	`›í
("T19.a2", 
O_RDONLY
 | 
O_CREAT
, 0444)Ë!3Ë
	`e
(10);

88 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(11);

89 i‡–(
fd
 = 
	`›í
("T19.a2", 
O_RDONLY
)Ë!3Ë
	`e
(12);

90 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(13);

91 i‡–(
fd
 = 
	`›í
("T19.a2", 
O_WRONLY
)Ë!-1Ë
	`e
(14);

92 i‡–(
fd
 = 
	`›í
("T19.a2", 
O_RDWR
)Ë!-1Ë
	`e
(15);

95 i‡–(
fd
 = 
	`›í
("T19.a2", 
O_RDONLY
 | 
O_CREAT
, 0777)Ë!3Ë
	`e
(16);

96 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(17);

97 i‡–(
fd
 = 
	`›í
("T19.a2", 
O_RDONLY
)Ë!3Ë
	`e
(18);

98 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(19);

99 i‡–(
fd
 = 
	`›í
("T19.a2", 
O_WRONLY
)Ë!-1Ë
	`e
(20);

100 i‡–(
fd
 = 
	`›í
("T19.a2", 
O_RDWR
)Ë!-1Ë
	`e
(21);

103 i‡–(
fd
 = 
	`›í
("T19.a2", 
O_RDONLY
 | 
O_EXCL
)Ë!3Ë
	`e
(22);

104 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(23);

105 i‡–(
fd
 = 
	`›í
("T19.a2", 
O_WRONLY
 | 
O_EXCL
)Ë!-1Ë
	`e
(24);

106 i‡–(
fd
 = 
	`›í
("T19.a3", 
O_RDONLY
 | 
O_EXCL
)Ë!-1Ë
	`e
(25);

107 i‡–(
fd
 = 
	`›í
("T19.a3", 
O_RDONLY
 | 
O_CREAT
 | 
O_EXCL
, 0444)Ë!3Ë
	`e
(26);

108 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(27);

109 
î∫o
 = 0;

110 i‡–(
fd
 = 
	`›í
("T19.a3", 
O_RDONLY
 | 
O_CREAT
 | 
O_EXCL
, 0444)Ë!-1Ë
	`e
(28);

111 i‡(
î∫o
 !
EEXIST
Ë
	`e
(29);

113 i‡(
	`u∆ök
("T19.a1"Ë!0Ë
	`e
(30);

114 i‡(
	`u∆ök
("T19.a2"Ë!0Ë
	`e
(31);

115 i‡(
	`u∆ök
("T19.a3"Ë!0Ë
	`e
(32);

116 
	}
}

119 
	$ã°19b
()

123 
fd
;

125 
subã°
 = 2;

127 i‡–(
fd
 = 
	`¸ót
("T19.b1", 0777)Ë!3Ë
	`e
(1);

128 i‡(
	`wrôe
(
fd
, 
b
, 4Ë!4Ë
	`e
(2);

129 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(3);

130 
	`˛øa
();

131 i‡–(
fd
 = 
	`›í
("T19.b1", 
O_RDWR
 | 
O_APPEND
)Ë!3Ë
	`e
(4);

132 i‡(
	`ªad
(
fd
, 
Ø
, 100Ë!4Ë
	`e
(5);

133 i‡(
Ø
[0] !0 ||áa[1] !1 ||áa[2] !2 ||áa[3] !3Ë
	`e
(6);

134 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(7);

135 i‡–(
fd
 = 
	`›í
("T19.b1", 
O_RDWR
 | 
O_APPEND
)Ë!3Ë
	`e
(8);

136 i‡(
	`wrôe
(
fd
, 
b
, 4Ë!4Ë
	`e
(9);

137 i‡(
	`l£ek
(
fd
, 0L, 
SEEK_SET
Ë!0LË
	`e
(10);

138 
	`˛øa
();

139 i‡(
	`ªad
(
fd
, 
Ø
, 100Ë!8Ë
	`e
(11);

140 i‡(
Ø
[4] !0 ||áa[5] !1 ||áa[6] !2 ||áa[7] !3Ë
	`e
(12);

141 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(13);

143 i‡–(
fd
 = 
	`›í
("T19.b1", 
O_RDWR
 | 
O_TRUNC
)Ë!3Ë
	`e
(14);

144 i‡(
	`ªad
(
fd
, 
Ø
, 100Ë!0Ë
	`e
(15);

145 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(16);

147 
	`u∆ök
("T19.b1");

148 
	}
}

151 
	$ã°19c
()

155 
i
, 
n
, 
n1
, 
n2
;

157 
subã°
 = 3;

158 i‡((
n
 = 
	`¸ót
("fo›", 0777)Ë!3Ë
	`e
(1);

159 i‡((
n1
 = 
	`¸ót
("fo›", 0777)Ë!4Ë
	`e
(2);

160 i‡((
n2
 = 
	`¸ót
("/", 0777)Ë!-1Ë
	`e
(3);

161 i‡(
	`˛o£
(
n
Ë!0Ë
	`e
(4);

162 i‡((
n
 = 
	`›í
("fo›", 
O_RDONLY
)Ë!3Ë
	`e
(5);

163 i‡((
n2
 = 
	`›í
("nofûe", 
O_RDONLY
)Ë!-1Ë
	`e
(6);

164 i‡(
	`˛o£
(
n1
Ë!0Ë
	`e
(7);

167 
i
 = 0; i < 2; i++) {

168 
n1
 = 
	`¸ót
("File2", 0777);

169 i‡(
n1
 != 4) {

170 
	`¥ötf
("¸óàyõlded fd=%d,Éx≥˘ed 4\n", 
n1
);

171 
	`e
(8);

173 i‡((
n2
 = 
	`›í
("Fûe2", 
O_RDONLY
)Ë!5Ë
	`e
(9);

174 i‡(
	`˛o£
(
n1
Ë!0Ë
	`e
(10);

175 i‡(
	`˛o£
(
n2
Ë!0Ë
	`e
(11);

177 
	`u∆ök
("File2");

178 i‡(
	`˛o£
(
n
Ë!0Ë
	`e
(12);

181 
i
 = 0; i < 2; i++) {

182 i‡((
n
 = 
	`¸ót
("fo›", 0777)Ë!3Ë
	`e
(13);

183 i‡(
	`˛o£
(
n
Ë!0Ë
	`e
(14);

184 i‡((
n
 = 
	`›í
("fo›", 
O_RDWR
)Ë!3Ë
	`e
(15);

187 i‡(
	`wrôe
(
n
, 
b
, 4Ë!4Ë
	`e
(16);

188 i‡(
	`ªad
(
n
, 
Ø
, 4Ë!0Ë
	`e
(17);

189 i‡(
	`l£ek
(
n
, 0L, 
SEEK_SET
Ë!0LË
	`e
(18);

190 i‡(
	`ªad
(
n
, 
Ø
, 4Ë!4Ë
	`e
(19);

191 i‡(
Ø
[0] !0 ||áa[1] !1 ||áa[2] !2 ||áa[3] !3Ë
	`e
(20);

192 i‡(
	`l£ek
(
n
, 0L, 
SEEK_SET
Ë!0LË
	`e
(21);

193 i‡(
	`l£ek
(
n
, 2L, 
SEEK_CUR
Ë!2LË
	`e
(22);

194 i‡(
	`ªad
(
n
, 
Ø
, 4Ë!2Ë
	`e
(23);

195 i‡(
Ø
[0] !2 ||áa[1] !3 ||áa[2] !2 ||áa[3] !3Ë
	`e
(24);

196 i‡(
	`l£ek
(
n
, 2L, 
SEEK_SET
Ë!2LË
	`e
(25);

197 
	`˛øa
();

198 i‡(
	`wrôe
(
n
, 
c
, 4Ë!4Ë
	`e
(26);

199 i‡(
	`l£ek
(
n
, 0L, 
SEEK_SET
Ë!0LË
	`e
(27);

200 i‡(
	`ªad
(
n
, 
Ø
, 10Ë!6Ë
	`e
(28);

201 i‡(
Ø
[0] !0 ||áa[1] !1 ||áa[2] !10 ||áa[3] !20Ë
	`e
(29);

202 i‡(
	`l£ek
(
n
, 16L, 
SEEK_SET
Ë!16LË
	`e
(30);

203 i‡(
	`l£ek
(
n
, 2040L, 
SEEK_END
Ë!2046LË
	`e
(31);

204 i‡(
	`ªad
(
n
, 
Ø
, 10Ë!0Ë
	`e
(32);

205 i‡(
	`l£ek
(
n
, 0L, 
SEEK_CUR
Ë!2046LË
	`e
(33);

206 
	`˛øa
();

207 i‡(
	`wrôe
(
n
, 
c
, 4Ë!4Ë
	`e
(34);

208 i‡(
	`l£ek
(
n
, 0L, 
SEEK_CUR
Ë!2050LË
	`e
(35);

209 i‡(
	`l£ek
(
n
, 2040L, 
SEEK_SET
Ë!2040LË
	`e
(36);

210 
	`˛øa
();

211 i‡(
	`ªad
(
n
, 
Ø
, 20Ë!10Ë
	`e
(37);

212 i‡(
Ø
[0] !0 ||áa[5] !0 ||áa[6] !10 ||áa[9] !40Ë
	`e
(38);

213 i‡(
	`l£ek
(
n
, 10239L, 
SEEK_SET
Ë!10239LË
	`e
(39);

214 i‡(
	`wrôe
(
n
, 
d
, 2Ë!2Ë
	`e
(40);

215 i‡(
	`l£ek
(
n
, -2L, 
SEEK_END
Ë!10239LË
	`e
(41);

216 i‡(
	`ªad
(
n
, 
Ø
, 2Ë!2Ë
	`e
(42);

217 i‡(
Ø
[0] !6 ||áa[1] !7Ë
	`e
(43);

218 i‡(
	`l£ek
(
n
, 
NB
 * 1024L - 2L, 
SEEK_SET
Ë!NB * 1024L - 2LË
	`e
(44);

219 i‡(
	`wrôe
(
n
, 
b
, 4Ë!4Ë
	`e
(45);

220 i‡(
	`l£ek
(
n
, 0L, 
SEEK_SET
Ë!0LË
	`e
(46);

221 i‡(
	`l£ek
(
n
, -6L, 
SEEK_END
Ë!1024L * 
NB
 - 4Ë
	`e
(47);

222 
	`˛øa
();

223 i‡(
	`ªad
(
n
, 
Ø
, 100Ë!6Ë
	`e
(48);

224 i‡(
Ø
[0] != 0 ||áa[1] != 0 ||áa[3] != 1 ||áa[4] != 2||áa[5] != 3)

225 
	`e
(49);

226 i‡(
	`l£ek
(
n
, 20000L, 
SEEK_SET
Ë!20000LË
	`e
(50);

227 i‡(
	`wrôe
(
n
, 
c
, 4Ë!4Ë
	`e
(51);

228 i‡(
	`l£ek
(
n
, -4L, 
SEEK_CUR
Ë!20000LË
	`e
(52);

229 i‡(
	`ªad
(
n
, 
Ø
, 4Ë!4Ë
	`e
(53);

230 i‡(
Ø
[0] !10 ||áa[1] !20 ||áa[2] !30 ||áa[3] !40Ë
	`e
(54);

231 i‡(
	`˛o£
(
n
Ë!0Ë
	`e
(55);

232 i‡((
n1
 = 
	`¸ót
("fo›", 0777)Ë!3Ë
	`e
(56);

233 i‡(
	`˛o£
(
n1
Ë!0Ë
	`e
(57);

234 
	`u∆ök
("foop");

237 
	}
}

239 
	$ã°19d
()

243 
i
, 
fd
, 
pd
[2];

244 
bb
[100];

246 
subã°
 = 4;

248 
i
 = 0; i < 100; i++Ë
bb
[i] = i;

249 i‡–(
fd
 = 
	`¸ót
("T19.d1", 0777)Ë!3Ë
	`e
(1);

250 i‡(
	`wrôe
(
fd
, 
bb
, 100Ë!100Ë
	`e
(2);

251 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(3);

252 
	`˛øa
();

253 i‡–(
fd
 = 
	`›í
("T19.d1", 
O_RDONLY
)Ë!3Ë
	`e
(4);

254 
î∫o
 = 1000;

255 i‡(
	`ªad
(
fd
, 
Ø
, 0Ë!0Ë
	`e
(5);

256 i‡(
î∫o
 !1000Ë
	`e
(6);

257 i‡(
	`ªad
(
fd
, 
Ø
, 100Ë!100Ë
	`e
(7);

258 i‡(
	`l£ek
(
fd
, 37L, 
SEEK_SET
Ë!37LË
	`e
(8);

259 i‡(
	`ªad
(
fd
, 
Ø
, 10Ë!10Ë
	`e
(9);

260 i‡(
	`l£ek
(
fd
, 0L, 
SEEK_CUR
Ë!47LË
	`e
(10);

261 i‡(
	`ªad
(
fd
, 
Ø
, 100Ë!53Ë
	`e
(11);

262 i‡(
Ø
[0] !47Ë
	`e
(12);

263 i‡(
	`ªad
(
fd
, 
Ø
, 1Ë!0Ë
	`e
(13);

264 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(14);

267 i‡(
	`pùe
(
pd
Ë!0Ë
	`e
(15);

268 i‡(
	`˛o£
(
pd
[1]Ë!0Ë
	`e
(16);

269 
î∫o
 = 2000;

270 i‡(
	`ªad
(
pd
[0], 
Ø
, 1Ë!0Ë
	`e
(17);

271 i‡(
î∫o
 !2000Ë
	`e
(18);

274 i‡(
	`f˙é
(
pd
[0], 
F_SETFL
, 
O_NONBLOCK
Ë!0Ë
	`e
(19);

279 i‡(
	`˛o£
(
pd
[0]Ë!0Ë
	`e
(19);

280 i‡(
	`u∆ök
("T19.d1"Ë!0Ë
	`e
(20);

281 
	}
}

285 
	$ã°19e
()

289 
i
, 
j
, 
n
, 
n1
, 
Êag
;

290 
a
[255], 
b
[255];

291 
°©
 
s
, 
s1
;

293 
subã°
 = 5;

294 
i
 = 0; i < 2; i++) {

295 
	`umask
(0);

297 i‡((
n
 = 
	`¸ót
("T3", 0702)Ë< 0Ë
	`e
(1);

298 i‡(
	`lök
("T3", "√wT3"Ë< 0Ë
	`e
(2);

299 i‡((
n1
 = 
	`›í
("√wT3", 
O_RDWR
)Ë< 0Ë
	`e
(3);

300 
j
 = 0; j < 255; j++Ë
a
[j] = j;

301 i‡(
	`wrôe
(
n
, 
a
, 255Ë!255Ë
	`e
(4);

302 i‡(
	`ªad
(
n1
, 
b
, 255Ë!255Ë
	`e
(5);

303 
Êag
 = 0;

304 
j
 = 0; j < 255; j++)

305 i‡(
a
[
j
] !
b
[j]Ë
Êag
++;

306 i‡(
Êag
Ë
	`e
(6);

307 i‡(
	`u∆ök
("T3"Ë< 0Ë
	`e
(7);

308 i‡(
	`˛o£
(
n
Ë< 0Ë
	`e
(8);

309 i‡(
	`˛o£
(
n1
Ë< 0Ë
	`e
(9);

310 i‡((
n1
 = 
	`›í
("√wT3", 
O_RDONLY
)Ë< 0Ë
	`e
(10);

311 i‡(
	`ªad
(
n1
, 
b
, 255Ë!255Ë
	`e
(11);

312 
Êag
 = 0;

313 
j
 = 0; j < 255; j++)

314 i‡(
a
[
j
] !
b
[j]Ë
Êag
++;

315 i‡(
Êag
Ë
	`e
(12);

318 i‡(
	`°©
("√wT3", &
s
Ë< 0Ë
	`e
(13);

319 i‡(
s
.
°_mode
 !(
mode_t
Ë0100702Ë
	`e
(14);

325 i‡(
s
.
°_∆ök
 !1Ë
	`e
(15);

326 i‡(
s
.
°_size
 !255LË
	`e
(16);

327 i‡(
	`f°©
(
n1
, &
s1
Ë< 0Ë
	`e
(17);

328 i‡(
s
.
°_dev
 !
s1
.°_devË
	`e
(18);

329 i‡(
s
.
°_öo
 !
s1
.°_öoË
	`e
(19);

330 i‡(
s
.
°_mode
 !
s1
.°_modeË
	`e
(20);

331 i‡(
s
.
°_∆ök
 !
s1
.°_∆ökË
	`e
(21);

332 i‡(
s
.
°_uid
 !
s1
.°_uidË
	`e
(22);

333 i‡(
s
.
°_gid
 !
s1
.°_gidË
	`e
(23);

334 i‡(
s
.
°_rdev
 !
s1
.°_rdevË
	`e
(24);

335 i‡(
s
.
°_size
 !
s1
.°_sizeË
	`e
(25);

336 i‡(
s
.
°_©ime
 !
s1
.°_©imeË
	`e
(26);

337 i‡(
	`˛o£
(
n1
Ë< 0Ë
	`e
(27);

338 i‡(
	`u∆ök
("√wT3"Ë< 0Ë
	`e
(28);

340 
	`umask
(040);

341 i‡((
n
 = 
	`¸ót
("T3a", 0777)Ë< 0Ë
	`e
(29);

342 i‡(
	`°©
("T3a", &
s
Ë< 0Ë
	`e
(30);

343 i‡(
s
.
°_mode
 !(
mode_t
Ë0100737Ë
	`e
(31);

344 i‡(
	`u∆ök
("T3a"Ë< 0Ë
	`e
(32);

345 i‡(
	`˛o£
(
n1
Ë< 0Ë
	`e
(33);

348 i‡((
n
 = 
	`¸ót
("T3b", 0777)Ë< 0Ë
	`e
(34);

349 i‡(
	`˛o£
(
n
Ë< 0Ë
	`e
(35);

350 i‡((
n
 = 
	`›í
("T3b", 
O_RDWR
)Ë< 0Ë
	`e
(36);

351 i‡((
n1
 = 
	`dup
(
n
)Ë!¿+ 1Ë
	`e
(37);

352 i‡(
	`wrôe
(
n
, 
a
, 255Ë!255Ë
	`e
(38);

353 
	`ªad
(
n1
, 
b
, 20);

354 i‡(
	`l£ek
(
n
, 0L, 
SEEK_SET
Ë!0LË
	`e
(39);

355 i‡((
j
 = 
	`ªad
(
n1
, 
b
, 1024)Ë!255Ë
	`e
(40);

356 i‡(
	`u∆ök
("T3b"Ë< 0Ë
	`e
(41);

357 i‡(
	`˛o£
(
n
Ë< 0Ë
	`e
(42);

358 i‡(
	`˛o£
(
n1
Ë< 0Ë
	`e
(43);

361 
	}
}

363 
	$ã°19f
()

367 
fd
, 
i
;

368 
pos
;

370 
subã°
 = 6;

372 i‡(
∑s£s
 > 0) ;

373 
i
 = 0; i < 
NBOUNDS
; i ++) {

374 
pos
 = 1024L * 
bounds
[
i
];

375 
fd
 = 
	`¸ót
("T19f", 0777);

376 i‡(
fd
 < 0Ë
	`e
(10*
i
+1);

377 i‡(
	`l£ek
(
fd
, 
pos
, 0Ë< 0Ë
	`e
(10*
i
+2);

378 i‡(
	`wrôe
(
fd
, 
buff
, 30720Ë!30720Ë
	`e
(10*
i
+3);

379 i‡(
	`˛o£
(
fd
Ë< 0Ë
	`e
(10*
i
+3);

380 i‡(
	`u∆ök
("T19f"Ë< 0Ë
	`e
(10*
i
+4);

382 
	}
}

385 
	$ã°19g
()

389 
pùefd
[2], 
n
, 
i
, 
fd
;

390 
buf
[512], 
buf2
[512];

392 
subã°
 = 7;

394 
i
 = 0; i < 512; i++Ë
buf
[i] = i % 128;

396 i‡(
	`pùe
(
pùefd
Ë< 0Ë
	`e
(1);

397 i‡(
	`wrôe
(
pùefd
[1], 
buf
, 512Ë!512Ë
	`e
(2);

398 i‡(
	`ªad
(
pùefd
[0], 
buf2
, 512Ë!512Ë
	`e
(3);

399 i‡(
	`˛o£
(
pùefd
[1]Ë!0Ë
	`e
(4);

400 i‡(
	`˛o£
(
pùefd
[1]Ë>0Ë
	`e
(5);

401 i‡(
	`ªad
(
pùefd
[0], 
buf2
, 1Ë!0Ë
	`e
(6);

402 i‡(
	`˛o£
(
pùefd
[0]Ë!0Ë
	`e
(7);

405 i‡(
	`pùe
(
pùefd
Ë< 0Ë
	`e
(8);

406 i‡(
	`f˙é
(
pùefd
[0], 
F_SETFL
, 
O_NONBLOCK
Ë!0Ë
	`e
(9);

407 i‡(
	`ªad
(
pùefd
[0], 
buf2
, 1Ë!-1Ë
	`e
(10);

408 i‡(
î∫o
 !
EAGAIN
Ë
	`e
(11);

409 i‡(
	`˛o£
(
pùefd
[0]Ë!0Ë
	`e
(12);

410 i‡(
	`˛o£
(
pùefd
[1]Ë!0Ë
	`e
(13);

413 i‡–(
fd
 = 
	`¸ót
("T19.g1", 0777)Ë!3Ë
	`e
(14);

414 i‡(
	`wrôe
(
fd
, 
buf
, 512Ë!512Ë
	`e
(15);

415 
î∫o
 = 3000;

416 i‡(
	`ªad
(
fd
, 
buf2
, 512Ë!-1Ë
	`e
(16);

417 i‡(
î∫o
 !
EBADF
Ë
	`e
(17);

418 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(18);

419 i‡–(
fd
 = 
	`›í
("T19.g1", 
O_RDWR
)Ë!3Ë
	`e
(19);

420 i‡(
	`ªad
(
fd
, 
buf2
, 512Ë!512Ë
	`e
(20);

421 i‡(
	`ªad
(
fd
, 
buf2
, 512Ë!0Ë
	`e
(21);

422 i‡(
	`l£ek
(
fd
, 100L, 
SEEK_SET
Ë!100LË
	`e
(22);

423 i‡(
	`ªad
(
fd
, 
buf2
, 512Ë!412Ë
	`e
(23);

424 i‡(
	`l£ek
(
fd
, 1000L, 
SEEK_SET
Ë!1000LË
	`e
(24);

427 i‡(
	`l£ek
(
fd
, -1000L, 
SEEK_CUR
Ë!0Ë
	`e
(25);

428 i‡(
	`wrôe
(
fd
, 
buf
, 512Ë!512Ë
	`e
(26);

429 i‡(
	`l£ek
(
fd
, 2L, 
SEEK_SET
Ë!2Ë
	`e
(27);

430 i‡(
	`wrôe
(
fd
, 
buf
, 3Ë!3Ë
	`e
(28);

431 i‡(
	`l£ek
(
fd
, -2L, 
SEEK_CUR
Ë!3Ë
	`e
(29);

432 i‡(
	`wrôe
(
fd
, &
buf
[30], 1Ë!1Ë
	`e
(30);

433 i‡(
	`l£ek
(
fd
, 2L, 
SEEK_CUR
Ë!6Ë
	`e
(31);

434 i‡(
	`wrôe
(
fd
, &
buf
[60], 1Ë!1Ë
	`e
(32);

435 i‡(
	`l£ek
(
fd
, -512L, 
SEEK_END
Ë!0Ë
	`e
(33);

436 i‡(
	`ªad
(
fd
, 
buf2
, 8Ë!8Ë
	`e
(34);

437 
î∫o
 = 4000;

438 i‡(
buf2
[0] !0 || buf2[1] !1 || buf2[2] !0 || buf2[3] !30Ë
	`e
(35);

439 i‡(
buf2
[4] !2 || buf2[5] !5 || buf2[6] !60 || buf2[7] !7Ë
	`e
(36);

442 i‡(
	`f˙é
(
fd
, 
F_SETFL
, 
O_APPEND
Ë!0Ë
	`e
(37);

443 i‡(
	`l£ek
(
fd
, 0L, 
SEEK_SET
Ë!0Ë
	`e
(38);

444 i‡(
	`wrôe
(
fd
, &
buf
[100], 1Ë!1Ë
	`e
(39);

445 i‡(
	`l£ek
(
fd
, 0L, 
SEEK_SET
Ë!0Ë
	`e
(40);

446 i‡(
	`ªad
(
fd
, 
buf2
, 10Ë!10Ë
	`e
(41);

447 i‡(
buf2
[0] !0Ë
	`e
(42);

448 i‡(
	`l£ek
(
fd
, -1L, 
SEEK_END
Ë!512Ë
	`e
(43);

449 i‡(
	`ªad
(
fd
, 
buf2
, 10Ë!1Ë
	`e
(44);

450 i‡(
buf2
[0] !100Ë
	`e
(45);

451 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(46);

454 i‡(
	`pùe
(
pùefd
Ë!0Ë
	`e
(47);

455 i‡(
	`f˙é
(
pùefd
[1], 
F_SETFL
, 
O_NONBLOCK
Ë!0Ë
	`e
(48);

456 i‡(
	`wrôe
(
pùefd
[1], 
buf
, 512Ë!512Ë
	`e
(49);

457 i‡(
	`wrôe
(
pùefd
[1], 
buf
, 512Ë!512Ë
	`e
(50);

458 
î∫o
 = 0;

459 
i
 = 1; i < 20; i++) {

460 
n
 = 
	`wrôe
(
pùefd
[1], 
buf
, 512);

461 i‡(
n
 == 512) ;

462 i‡(
n
 !-1 || 
î∫o
 !
EAGAIN
Ë{
	`e
(51); ;}

464 i‡(
	`ªad
(
pùefd
[0], 
buf
, 512Ë!512Ë
	`e
(52);

465 i‡(
	`˛o£
(
pùefd
[0]Ë!0Ë
	`e
(53);

468 
	`sig«l
(
SIGPIPE
, 
pùeˇtchî
);

469 
î∫o
 = 0;

470 i‡(
	`wrôe
(
pùefd
[1], 
buf
, 1Ë!-1Ë
	`e
(54);

471 i‡(
î∫o
 !
EPIPE
Ë
	`e
(55);

472 i‡(
pùesigs
 !
∑s£s
 + 1Ë
	`e
(56);

473 i‡(
	`˛o£
(
pùefd
[1]Ë!0Ë
	`e
(57);

474 
î∫o
 = 0;

475 i‡(
	`wrôe
(100, 
buf
, 512Ë!-1Ë
	`e
(58);

476 i‡(
î∫o
 !
EBADF
Ë
	`e
(59);

477 i‡(
	`u∆ök
("T19.g1"Ë!0Ë
	`e
(60);

478 
	}
}

481 
	$˛øa
()

483 
i
;

484 
i
 = 0; i < 100; i++Ë
Ø
[i] = 0;

485 
	}
}

488 
	$pùeˇtchî
(
s
)

489 
s
;

491 
pùesigs
++;

492 
	}
}

495 
	$e
(
n
)

496 
n
;

498 
îr_num
 = 
î∫o
;

500 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d ", 
subã°
, 
n
, 
î∫o
);

501 
	`fÊush
(
°dout
);

506 
î∫o
 = 
îr_num
;

507 
	`≥º‹
("");

508 i‡(
îr˘
++ > 
MAX_ERROR
) {

509 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

510 
	`chdú
("..");

511 
	`sy°em
("rm -rf DIR*");

512 
	`exô
(1);

514 
	}
}

516 
	$quô
()

519 
	`chdú
("..");

520 
	`sy°em
("rm -rf DIR*");

522 i‡(
îr˘
 == 0) {

523 
	`¥ötf
("ok\n");

524 
	`exô
(0);

526 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

527 
	`exô
(1);

529 
	}
}

	@test2.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/times.h
>

5 
	~<sys/waô.h
>

6 
	~<î∫o.h
>

7 
	~<sig«l.h
>

8 
	~<°dlib.h
>

9 
	~<uni°d.h
>

10 
	~<time.h
>

11 
	~<°dio.h
>

13 
	#ITERATIONS
 5

	)

14 
	#MAX_ERROR
 4

	)

16 
	gis
, 
	g¨øy
[4], 
	g∑rsigs
, 
	g∑rcum
, 
	gsig˘
, 
	gcumsig
, 
	gîr˘
, 
	gsubã°
;

17 
	gôî©i⁄
, 
	gkk
 = 0, 
	gîr˘
 = 0;

18 
	gbuf
[2048];

20 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
 []));

21 
_PROTOTYPE
(
ã°2a
, ());

22 
_PROTOTYPE
(
ã°2b
, ());

23 
_PROTOTYPE
(
ã°2c
, ());

24 
_PROTOTYPE
(
ã°2d
, ());

25 
_PROTOTYPE
(
ã°2e
, ());

26 
_PROTOTYPE
(
ã°2f
, ());

27 
_PROTOTYPE
(
ã°2g
, ());

28 
_PROTOTYPE
(
ã°2h
, ());

29 
_PROTOTYPE
(
sigpù
, (
s
));

30 
_PROTOTYPE
(
quô
, ());

31 
_PROTOTYPE
(
e
, (
n
));

33 
	$maö
(
¨gc
, 
¨gv
)

34 
¨gc
;

35 *
¨gv
[];

37 
i
, 
m
 = 0xFFFF;

39 
	`sync
();

41 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

43 
	`¥ötf
("Test 2 ");

44 
	`fÊush
(
°dout
);

46 
	`sy°em
("rm -rf DIR_02; mkdir DIR_02");

47 
	`chdú
("DIR_02");

49 
i
 = 0; i < 
ITERATIONS
; i++) {

50 
ôî©i⁄
 = 
i
;

51 i‡(
m
 & 0001Ë
	`ã°2a
();

52 i‡(
m
 & 0002Ë
	`ã°2b
();

53 i‡(
m
 & 0004Ë
	`ã°2c
();

54 i‡(
m
 & 0010Ë
	`ã°2d
();

55 i‡(
m
 & 0020Ë
	`ã°2e
();

56 i‡(
m
 & 0040Ë
	`ã°2f
();

57 i‡(
m
 & 0100Ë
	`ã°2g
();

58 i‡(
m
 & 0200Ë
	`ã°2h
();

60 
subã°
 = 100;

61 i‡(
cumsig
 !
ITERATIONS
Ë
	`e
(101);

62 
	`quô
();

64 
	}
}

67 
	$ã°2a
()

71 
fd
[2];

72 
n
, 
i
, 
j
, 
q
 = 0;

74 
subã°
 = 1;

75 i‡(
	`pùe
(
fd
) < 0) {

76 
	`¥ötf
("pùêîr‹.Éºno%d\n", 
î∫o
);

77 
îr˘
++;

78 
	`quô
();

80 
i
 = 
	`f‹k
();

81 i‡(
i
 < 0) {

82 
	`¥ötf
("fork failed\n");

83 
îr˘
++;

84 
	`quô
();

86 i‡(
i
 != 0) {

88 
	`˛o£
(
fd
[0]);

89 
i
 = 0; i < 2048; i++Ë
buf
[i] = i & 0377;

90 
q
 = 0; q < 8; q++) {

91 i‡(
	`wrôe
(
fd
[1], 
buf
, 2048) < 0) {

92 
	`¥ötf
("wrôêpùêîr.Éºno=%d\n", 
î∫o
);

93 
îr˘
++;

94 
	`quô
();

97 
	`˛o£
(
fd
[1]);

98 
	`waô
(&
q
);

99 i‡(
q
 != 256 * 58) {

100 
	`¥ötf
("wr⁄gÉxô codê%d\n", 
q
);

101 
îr˘
++;

102 
	`quô
();

106 
	`˛o£
(
fd
[1]);

107 
q
 = 0; q < 32; q++) {

108 
n
 = 
	`ªad
(
fd
[0], 
buf
, 512);

109 i‡(
n
 != 512) {

110 
	`¥ötf
("ªad yõlded %d byãs,ÇŸ 512\n", 
n
);

111 
îr˘
++;

112 
	`quô
();

114 
j
 = 0; j < 
n
; j++)

115 i‡((
buf
[
j
] & 0377Ë!(
kk
 & 0377)) {

116 
	`¥ötf
("wrong data: %d %d %d \n ",

117 
j
, 
buf
[j] & 0377, 
kk
 & 0377);

119 
kk
++;

122 
	`exô
(58);

124 
	}
}

127 
	$ã°2b
()

129 
fd
[2], 
n
;

130 
buf
[4];

132 
subã°
 = 2;

133 
sig˘
 = 0;

134 
	`sig«l
(
SIGPIPE
, 
sigpù
);

135 
	`pùe
(
fd
);

136 i‡(
	`f‹k
()) {

138 
	`˛o£
(
fd
[0]);

139 
sig˘
 == 0) {

140 
	`wrôe
(
fd
[1], 
buf
, 1);

142 
	`waô
(&
n
);

145 
	`˛o£
(
fd
[0]);

146 
	`˛o£
(
fd
[1]);

147 
	`exô
(0);

149 
	}
}

153 
	$ã°2c
()

155 
n
;

157 
subã°
 = 3;

158 
	`sig«l
(
SIGINT
, 
SIG_DFL
);

159 
is
 = 0;

160 i‡((
¨øy
[
is
++] = 
	`f‹k
()) > 0) {

161 i‡((
¨øy
[
is
++] = 
	`f‹k
()) > 0) {

162 i‡((
¨øy
[
is
++] = 
	`f‹k
()) > 0) {

163 i‡((
¨øy
[
is
++] = 
	`f‹k
()) > 0) {

164 
	`sig«l
(
SIGINT
, 
SIG_IGN
);

165 
	`kûl
(
¨øy
[0], 
SIGINT
);

166 
	`kûl
(
¨øy
[1], 
SIGINT
);

167 
	`kûl
(
¨øy
[2], 
SIGINT
);

168 
	`kûl
(
¨øy
[3], 
SIGINT
);

169 
	`waô
(&
n
);

170 
	`waô
(&
n
);

171 
	`waô
(&
n
);

172 
	`waô
(&
n
);

174 
	`∑u£
();

177 
	`∑u£
();

180 
	`∑u£
();

183 
	`∑u£
();

185 
	}
}

187 
	$ã°2d
()

190 
pid
, 
°©_loc
, 
s
;

193 
subã°
 = 4;

196 
pid
 = 
	`f‹k
();

197 i‡(
pid
 < 0Ë
	`e
(1);

198 i‡(
pid
 > 0) {

200 
s
 = 
	`waôpid
(
pid
, &
°©_loc
, 0);

201 i‡(
s
 !
pid
Ë
	`e
(2);

202 i‡(
	`WIFEXITED
(
°©_loc
Ë=0Ë
	`e
(3);

203 i‡(
	`WIFSIGNALED
(
°©_loc
Ë!0Ë
	`e
(4);

204 i‡(
	`WEXITSTATUS
(
°©_loc
Ë!22Ë
	`e
(5);

207 
	`exô
(22);

211 
pid
 = 
	`f‹k
();

212 i‡(
pid
 < 0Ë
	`e
(6);

213 i‡(
pid
 > 0) {

215 
s
 = 
	`waôpid
(-1, &
°©_loc
, 0);

216 i‡(
s
 !
pid
Ë
	`e
(7);

217 i‡(
	`WIFEXITED
(
°©_loc
Ë=0Ë
	`e
(8);

218 i‡(
	`WIFSIGNALED
(
°©_loc
Ë!0Ë
	`e
(9);

219 i‡(
	`WEXITSTATUS
(
°©_loc
Ë!33Ë
	`e
(10);

222 
	`exô
(33);

226 
pid
 = 
	`f‹k
();

227 i‡(
pid
 < 0Ë
	`e
(11);

228 i‡(
pid
 > 0) {

230 
s
 = 
	`waôpid
(0, &
°©_loc
, 0);

231 i‡(
s
 !
pid
Ë
	`e
(12);

232 i‡(
	`WIFEXITED
(
°©_loc
Ë=0Ë
	`e
(13);

233 i‡(
	`WIFSIGNALED
(
°©_loc
Ë!0Ë
	`e
(14);

234 i‡(
	`WEXITSTATUS
(
°©_loc
Ë!44Ë
	`e
(15);

237 
	`exô
(44);

241 
	`sig«l
(
SIGTERM
, 
SIG_DFL
);

242 
pid
 = 
	`f‹k
();

243 i‡(
pid
 < 0Ë
	`e
(16);

244 i‡(
pid
 > 0) {

246 
s
 = 
	`waôpid
(0, &
°©_loc
, 
WNOHANG
);

247 i‡(
s
 !0Ë
	`e
(17);

248 i‡(
	`kûl
(
pid
, 
SIGTERM
Ë!0Ë
	`e
(18);

249 i‡(
	`waôpid
(
pid
, &
°©_loc
, 0Ë!pidË
	`e
(19);

250 i‡(
	`WIFEXITED
(
°©_loc
Ë!0Ë
	`e
(20);

251 i‡(
	`WIFSIGNALED
(
°©_loc
Ë=0Ë
	`e
(21);

252 i‡(
	`WTERMSIG
(
°©_loc
Ë!
SIGTERM
Ë
	`e
(22);

255 
	`∑u£
();

259 
î∫o
 = 9999;

260 i‡(
	`waôpid
(0, &
°©_loc
, 0Ë!-1Ë
	`e
(23);

261 i‡(
î∫o
 !
ECHILD
Ë
	`e
(24);

262 
î∫o
 = 9999;

263 i‡(
	`waôpid
(0, &
°©_loc
, 
WNOHANG
Ë!-1Ë
	`e
(25);

264 i‡(
î∫o
 !
ECHILD
Ë
	`e
(26);

265 
	}
}

268 
	$ã°2e
()

271 
pid1
, 
pid2
, 
°©_loc
, 
s
;

274 
subã°
 = 5;

275 i‡(
ôî©i⁄
 > 1) ;

276 i‡–(
pid1
 = 
	`f‹k
())) {

278 i‡–(
pid2
 = 
	`f‹k
()) ) {

280 
s
 = 
	`waôpid
(
pid2
, &
°©_loc
, 0);

281 i‡(
s
 !
pid2
Ë
	`e
(1);

282 i‡(
	`WIFEXITED
(
°©_loc
Ë=0Ë
	`e
(2);

283 i‡(
	`WIFSIGNALED
(
°©_loc
Ë!0Ë
	`e
(3);

284 i‡(
	`WEXITSTATUS
(
°©_loc
Ë!222Ë
	`e
(4);

287 
s
 = 
	`waôpid
(
pid1
, &
°©_loc
, 0);

288 i‡(
s
 !
pid1
Ë
	`e
(5);

289 i‡(
	`WIFEXITED
(
°©_loc
Ë=0Ë
	`e
(6);

290 i‡(
	`WIFSIGNALED
(
°©_loc
Ë!0Ë
	`e
(7);

291 i‡(
	`WEXITSTATUS
(
°©_loc
Ë!111Ë
	`e
(8);

294 
	`¶ìp
(2);

295 
	`exô
(222);

299 
	`exô
(111);

302 
	}
}

305 
	$ã°2f
()

309 
pid_t
 
pid
, 
pid1
, 
µid
, 
˝id
, 
°©_loc
, 
îr
;

311 
subã°
 = 6;

312 
î∫o
 = -2000;

313 
îr
 = 0;

314 
pid
 = 
	`gëpid
();

315 i‡–(
pid1
 = 
	`f‹k
())) {

317 i‡(
	`waô
(&
°©_loc
Ë!
pid1
Ë
	`e
(1);

318 i‡(
	`WEXITSTATUS
(
°©_loc
Ë!(
pid1
 & 0377)Ë
	`e
(2);

321 
˝id
 = 
	`gëpid
();

322 
µid
 = 
	`gëµid
();

323 i‡(
µid
 !
pid
Ë
îr
 = 3;

324 i‡(
˝id
 =
µid
Ë
îr
 = 4;

325 
	`exô
(
˝id
 & 0377);

327 i‡(
îr
 !0Ë
	`e
(err);

328 
	}
}

330 
	$ã°2g
()

334 
time_t
 
t1
, 
t2
;

335 
˛ock_t
 
t3
, 
t4
;

336 
tms
 
tmsbuf
;

338 
subã°
 = 7;

339 
î∫o
 = -7000;

342 
t1
 = -1;

343 
t2
 = -2;

344 
t1
 = 
	`time
(&
t2
);

345 i‡(
t1
 < 650000000LË
	`e
(1);

346 i‡(
t1
 !
t2
Ë
	`e
(2);

347 
t1
 = -1;

348 
t1
 = 
	`time
–(
time_t
 *Ë
NULL
);

349 i‡(
t1
 < 650000000LË
	`e
(3);

350 
t3
 = 
	`times
(&
tmsbuf
);

351 
	`¶ìp
(1);

352 
t2
 = 
	`time
–(
time_t
 *Ë
NULL
);

353 i‡(
t2
 < 0LË
	`e
(4);

354 i‡(
t2
 - 
t1
 < 1Ë
	`e
(5);

357 
t4
 = 
	`times
(&
tmsbuf
);

358 i‡–
t4
 =(
˛ock_t
Ë-1Ë
	`e
(6);

359 i‡(
t4
 - 
t3
 < 
CLOCKS_PER_SEC
Ë
	`e
(7);

360 i‡(
tmsbuf
.
tms_utime
 < 0Ë
	`e
(8);

361 i‡(
tmsbuf
.
tms_°ime
 < 0Ë
	`e
(9);

362 i‡(
tmsbuf
.
tms_cutime
 < 0Ë
	`e
(10);

363 i‡(
tmsbuf
.
tms_c°ime
 < 0Ë
	`e
(11);

364 
	}
}

366 
	$ã°2h
()

370 
gid_t
 
g
[10];

372 
subã°
 = 8;

373 
î∫o
 = -8000;

374 i‡(
	`gëgroups
(10, 
g
Ë!0Ë
	`e
(1);

375 i‡(
	`gëgroups
(1, 
g
Ë!0Ë
	`e
(2);

376 i‡(
	`gëgroups
(0, 
g
Ë!0Ë
	`e
(3);

377 
	}
}

380 
	$sigpù
(
s
)

381 
s
;

383 
sig˘
++;

384 
cumsig
++;

385 
	}
}

387 
	$quô
()

390 
	`chdú
("..");

391 
	`sy°em
("rm -rf DIR*");

393 i‡(
îr˘
 == 0) {

394 
	`¥ötf
("ok\n");

395 
	`exô
(0);

397 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

398 
	`exô
(4);

400 
	}
}

402 
	$e
(
n
)

403 
n
;

405 
îr_num
 = 
î∫o
;

407 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d ", 
subã°
, 
n
, 
î∫o
);

408 
î∫o
 = 
îr_num
;

409 
	`≥º‹
("");

410 i‡(
îr˘
++ > 
MAX_ERROR
) {

411 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

412 
	`chdú
("..");

413 
	`sy°em
("rm -rf DIR*");

414 
	`exô
(1);

416 
	}
}

	@test20.c

14 
	~<sys/ty≥s.h
>

15 
	~<sys/°©.h
>

16 
	~<dúít.h
>

17 
	~<f˙é.h
>

18 
	~<î∫o.h
>

19 
	~<limôs.h
>

20 
	~<°dlib.h
>

21 
	~<°rög.h
>

22 
	~<time.h
>

23 
	~<uni°d.h
>

24 
	~<utime.h
>

25 
	~<°dio.h
>

27 
	#DIR_NULL
 (
DIR
*Ë
NULL


	)

28 
	#ITERATIONS
 5

	)

29 
	#MAX_FD
 100

	)

30 
	#BUF_SIZE
 
PATH_MAX
+20

	)

31 
	#ERR_CODE
 -1

	)

32 
	#RD_BUF
 200

	)

33 
	#MAX_ERROR
 4

	)

35 
	g°r
[] = {"TheÅime has comeÅhe walrus saidÅoÅalk of manyÅhings.\n"};

36 
	g°r2
[] = {"Of shipsánd shoesánd sealing wax, of cabbagesánd kings.\n"};

37 
	g°r3
[] = {"Of whyÅhe sea is boiling hotánd whetherÖigs have wings\n"};

39 
	gsubã°
, 
	gîr˘
;

41 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
 []));

42 
_PROTOTYPE
(
ã°20a
, ());

43 
_PROTOTYPE
(
checkdú
, (
DIR
 *
dúp
, 
t
));

44 
_PROTOTYPE
(
ã°20b
, ());

45 
_PROTOTYPE
(
ã°20c
, ());

46 
_PROTOTYPE
(
ã°20d
, ());

47 
_PROTOTYPE
(
ã°20e
, ());

48 
_PROTOTYPE
(
ã°20f
, ());

49 
_PROTOTYPE
(
ã°20g
, ());

50 
_PROTOTYPE
(
ã°20h
, ());

51 
_PROTOTYPE
(
ã°20i
, ());

52 
_PROTOTYPE
(
ã°20j
, ());

53 
_PROTOTYPE
(
e
, (
n
));

54 
_PROTOTYPE
(
quô
, ());

56 
	$maö
(
¨gc
, 
¨gv
)

57 
¨gc
;

58 *
¨gv
[];

61 
i
, 
m
 = 0xFFFF;

63 
	`sync
();

64 i‡(
	`gëeuid
(Ë=0 || 
	`gëuid
() == 0) {

65 
	`¥ötf
("Test 20 cannotÑunásÑoot;Åestáborted\n");

66 
	`exô
(1);

69 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

70 
	`¥ötf
("Test 20 ");

71 
	`fÊush
(
°dout
);

73 
	`sy°em
("rm -rf DIR_20; mkdir DIR_20");

74 
	`chdú
("DIR_20");

76 
i
 = 0; i < 
ITERATIONS
; i++) {

77 i‡(
m
 & 00001Ë
	`ã°20a
();

78 i‡(
m
 & 00002Ë
	`ã°20b
();

79 i‡(
m
 & 00004Ë
	`ã°20c
();

80 i‡(
m
 & 00010Ë
	`ã°20d
();

81 i‡(
m
 & 00020Ë
	`ã°20e
();

82 i‡(
m
 & 00040Ë
	`ã°20f
();

83 i‡(
m
 & 00100Ë
	`ã°20g
();

84 i‡(
m
 & 00200Ë
	`ã°20h
();

85 i‡(
m
 & 00400Ë
	`ã°20i
();

86 i‡(
m
 & 01000Ë
	`ã°20j
();

88 
	`quô
();

90 
	}
}

92 
	$ã°20a
()

96 
f1
, 
f2
, 
f3
, 
f4
, 
f5
;

97 
DIR
 *
dúp
;

100 
subã°
 = 1;

102 
	`sy°em
("rm -rf foo");

105 
	`mkdú
("foo", 0777);

106 i‡((
f1
 = 
	`¸ót
("foo/f1", 0666)Ë< 0Ë
	`e
(1);

107 i‡((
f2
 = 
	`¸ót
("foo/f2", 0666)Ë< 0Ë
	`e
(2);

108 i‡((
f3
 = 
	`¸ót
("foo/f3", 0666)Ë< 0Ë
	`e
(3);

109 i‡((
f4
 = 
	`¸ót
("foo/f4", 0666)Ë< 0Ë
	`e
(4);

110 i‡((
f5
 = 
	`¸ót
("foo/f5", 0666)Ë< 0Ë
	`e
(5);

113 i‡(
	`u∆ök
("foo/f2"Ë< 0Ë
	`e
(6);

114 i‡(
	`u∆ök
("foo/f4"Ë< 0Ë
	`e
(7);

117 
	`˛o£
(
f1
);

118 
	`˛o£
(
f2
);

119 
	`˛o£
(
f3
);

120 
	`˛o£
(
f4
);

121 
	`˛o£
(
f5
);

124 
dúp
 = 
	`›ídú
("./foo");

125 i‡(
dúp
 =
DIR_NULL
Ë
	`e
(6);

128 
	`checkdú
(
dúp
, 2);

131 
	`ªwöddú
(
dúp
);

132 
	`checkdú
(
dúp
, 3);

135 i‡(
	`˛o£dú
(
dúp
Ë< 0Ë
	`e
(7);

138 
	`sy°em
("rm -rf foo");

139 
	}
}

141 
	$checkdú
(
dúp
, 
t
)

142 
DIR
 *
dúp
;

143 
t
;

146 
i
, 
f1
, 
f2
, 
f3
, 
f4
, 
f5
, 
dŸ
, 
dŸdŸ
, 
subt
;

147 
dúít
 *
d
;

148 *
s
;

151 
subt
 = 
subã°
;

152 
subã°
 = 
t
;

155 
f1
 = 0;

156 
f2
 = 0;

157 
f3
 = 0;

158 
f4
 = 0;

159 
f5
 = 0;

160 
dŸ
 = 0;

161 
dŸdŸ
 = 0;

165 
i
 = 0; i < 5; i++) {

166 
d
 = 
	`ªaddú
(
dúp
);

167 i‡(
d
 =(
dúít
 *Ë
NULL
) {

168 
	`e
(1);

169 
subã°
 = 
subt
;

172 
s
 = 
d
->
d_«me
;

173 i‡(
	`°rcmp
(
s
, "."Ë=0Ë
dŸ
++;

174 i‡(
	`°rcmp
(
s
, ".."Ë=0Ë
dŸdŸ
++;

175 i‡(
	`°rcmp
(
s
, "f1"Ë=0Ë
f1
++;

176 i‡(
	`°rcmp
(
s
, "f2"Ë=0Ë
f2
++;

177 i‡(
	`°rcmp
(
s
, "f3"Ë=0Ë
f3
++;

178 i‡(
	`°rcmp
(
s
, "f4"Ë=0Ë
f4
++;

179 i‡(
	`°rcmp
(
s
, "f5"Ë=0Ë
f5
++;

183 
d
 = 
	`ªaddú
(
dúp
);

184 i‡(
d
 !(
dúít
 *Ë
NULL
Ë
	`e
(2);

185 i‡(
f1
 !1 || 
f3
 !1 || 
f5
 !1Ë
	`e
(3);

186 i‡(
f2
 !0 || 
f4
 !0Ë
	`e
(4);

187 i‡(
dŸ
 !1 || 
dŸdŸ
 !1Ë
	`e
(5);

188 
subã°
 = 
subt
;

190 
	}
}

193 
	$ã°20b
()

197 
fd
;

198 
DIR
 *
dúp
;

200 
subã°
 = 4;

202 i‡(
	`›ídú
("foo/xyz/---"Ë!
DIR_NULL
Ë
	`e
(1);

203 i‡(
î∫o
 !
ENOENT
Ë
	`e
(2);

204 i‡(
	`mkdú
("foo", 0777Ë< 0Ë
	`e
(3);

205 i‡(
	`chmod
("foo", 0Ë< 0Ë
	`e
(4);

206 i‡(
	`›ídú
("foo/xyz/--"Ë!
DIR_NULL
Ë
	`e
(5);

207 i‡(
î∫o
 !
EACCES
Ë
	`e
(6);

208 i‡(
	`chmod
("foo", 0777Ë!0Ë
	`e
(7);

209 i‡(
	`rmdú
("foo"Ë!0Ë
	`e
(8);

210 i‡((
fd
 = 
	`¸ót
("abc", 0666)Ë< 0Ë
	`e
(9);

211 i‡(
	`˛o£
(
fd
Ë< 0Ë
	`e
(10);

212 i‡(
	`›ídú
("abc/xyz"Ë!
DIR_NULL
Ë
	`e
(11);

213 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(12);

214 i‡((
dúp
 = 
	`›ídú
(".")Ë=
DIR_NULL
Ë
	`e
(13);

215 i‡(
	`˛o£dú
(
dúp
Ë!0Ë
	`e
(14);

216 i‡(
	`u∆ök
("abc"Ë!0Ë
	`e
(15);

218 
	}
}

221 
	$ã°20c
()

225 
i
, 
j
;

226 
DIR
 *
dúp
[
MAX_FD
];

228 
subã°
 = 5;

230 
i
 = 0; i < 
MAX_FD
; i++) {

231 
dúp
[
i
] = 
	`›ídú
(".");

232 i‡(
dúp
[
i
] =(
DIR
 *Ë
NULL
) {

234 i‡(
î∫o
 !
EMFILE
 &&Éºnÿ!
ENOMEM
Ë
	`e
(1);

235 
j
 = 0; j < 
i
; j++) {

236 i‡(
	`˛o£dú
(
dúp
[
j
]Ë!0Ë
	`e
(2);

243 
	`e
(3);

244 
i
 = 0; i < 
MAX_FD
; i++Ë
	`˛o£dú
(
dúp
[i]);

245 
	}
}

247 
	$ã°20d
()

251 
fd
;

252 *
s
;

253 
ba£
[
BUF_SIZE
], 
buf2
[BUF_SIZE], 
tmp
[BUF_SIZE];

255 
subã°
 = 6;

257 i‡(
	`gëcwd
(
ba£
, 
BUF_SIZE
Ë=(*Ë
NULL
Ë
	`e
(1);

258 i‡(
	`sy°em
("rm -r‡Dú"Ë!0Ë
	`e
(2);

259 i‡(
	`mkdú
("Dú", 0777Ë< 0Ë
	`e
(3);

262 i‡(
	`chdú
("Dú"Ë< 0Ë
	`e
(4);

263 
s
 = 
	`gëcwd
(
buf2
, 
BUF_SIZE
);

264 i‡(
s
 =(*Ë
NULL
Ë
	`e
(5);

265 i‡(
s
 !
buf2
Ë
	`e
(6);

266 
	`°r˝y
(
tmp
, 
ba£
);

267 
	`°rˇt
(
tmp
, "/");

268 
	`°rˇt
(
tmp
, "Dir");

269 i‡(
	`°rcmp
(
tmp
, 
s
Ë!0Ë
	`e
(7);

272 i‡(
	`chdú
(".."Ë< 0Ë
	`e
(8);

273 i‡(
	`gëcwd
(
buf2
, 
BUF_SIZE
Ë!buf2Ë
	`e
(9);

274 i‡(
	`°rcmp
(
buf2
, 
ba£
Ë!0Ë
	`e
(10);

277 i‡(
	`chdú
("Dú/.."Ë< 0Ë
	`e
(11);

278 i‡(
	`gëcwd
(
buf2
, 
BUF_SIZE
Ë!buf2Ë
	`e
(12);

279 i‡(
	`°rcmp
(
buf2
, 
ba£
Ë!0Ë
	`e
(13);

281 i‡(
	`chdú
("Dú/../Dú/.."Ë< 0Ë
	`e
(14);

282 i‡(
	`gëcwd
(
buf2
, 
BUF_SIZE
Ë!buf2Ë
	`e
(15);

283 i‡(
	`°rcmp
(
buf2
, 
ba£
Ë!0Ë
	`e
(16);

285 i‡(
	`chdú
("Dú/../Dú/../Dú/../Dú/../Dú/../Dú/../Dú/.."Ë< 0Ë
	`e
(17);

286 i‡(
	`gëcwd
(
buf2
, 
BUF_SIZE
Ë!buf2Ë
	`e
(18);

287 i‡(
	`°rcmp
(
buf2
, 
ba£
Ë!0Ë
	`e
(19);

290 i‡(
	`chmod
("Dú", 0Ë< 0Ë
	`e
(20);

291 i‡(
	`chdú
("Dú"Ë>0Ë
	`e
(21);

292 i‡(
î∫o
 !
EACCES
Ë
	`e
(22);

295 i‡(
	`chmod
("Dú", 0777Ë< 0Ë
	`e
(23);

296 i‡(
	`chdú
("Dú/x/y"Ë!
ERR_CODE
Ë
	`e
(24);

297 i‡(
î∫o
 !
ENOENT
Ë
	`e
(25);

299 i‡–(
fd
=
	`¸ót
("Dú/x", 0777)Ë< 0Ë
	`e
(26);

300 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(27);

301 i‡(
	`chdú
("Dú/x/y"Ë!
ERR_CODE
Ë
	`e
(28);

302 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(29);

305 i‡(
	`chdú
(""Ë!
ERR_CODE
Ë
	`e
(30);

306 i‡(
î∫o
 !
ENOENT
Ë
	`e
(31);

309 i‡(
	`u∆ök
("Dú/x"Ë!0Ë
	`e
(32);

310 i‡(
	`sy°em
("rmdú Dú"Ë!0Ë
	`e
(33);

311 
	}
}

314 
	$ã°20e
()

318 
fd
, 
byãs
, 
byãs2
;

319 
buf
[
RD_BUF
];

321 
subã°
 = 7;

323 
	`u∆ök
("T20");

326 
byãs
 = 
	`°æí
(
°r
);

327 
byãs2
 = 
	`°æí
(
°r2
);

328 i‡((
fd
 = 
	`¸ót
("T20", 0777)Ë< 0Ë
	`e
(1);

329 i‡(
	`wrôe
(
fd
, 
°r
, 
byãs
Ë!byãsË
	`e
(2);

330 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(3);

333 i‡((
fd
 = 
	`›í
("T20", 
O_RDONLY
)Ë< 0Ë
	`e
(4);

334 
buf
[0] = '\0';

335 i‡(
	`ªad
(
fd
, 
buf
, 
RD_BUF
Ë!
byãs
Ë
	`e
(5);

336 i‡(
	`°∫cmp
(
buf
, 
°r
, 
byãs
Ë!0Ë
	`e
(6);

337 i‡(
	`˛o£
(
fd
Ë< 0Ë
	`e
(7);

340 i‡((
fd
 = 
	`›í
("T20", 
O_RDWR
)Ë< 0Ë
	`e
(8);

341 
buf
[0] = '\0';

342 i‡(
	`ªad
(
fd
, 
buf
, 
RD_BUF
Ë!
byãs
Ë
	`e
(9);

343 i‡(
	`°∫cmp
(
buf
, 
°r
, 
byãs
Ë!0Ë
	`e
(10);

344 i‡(
	`˛o£
(
fd
Ë< 0Ë
	`e
(11);

347 i‡((
fd
 = 
	`›í
("T20", 
O_WRONLY
)Ë< 0Ë
	`e
(12);

348 
buf
[0] = '\0';

349 i‡(
	`ªad
(
fd
, 
buf
, 
RD_BUF
Ë>0Ë
	`e
(13);

350 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(14);

353 i‡((
fd
 = 
	`›í
("T20", 
O_RDWR
 | 
O_APPEND
)Ë< 0Ë
	`e
(15);

354 i‡(
	`l£ek
(
fd
, 0L, 
SEEK_SET
Ë< 0Ë
	`e
(16);

355 i‡–
	`wrôe
(
fd
, 
°r2
, 
byãs2
Ë!byãs2Ë
	`e
(17);

356 i‡(
	`l£ek
(
fd
, 0L, 
SEEK_SET
Ë< 0Ë
	`e
(18);

357 i‡(
	`ªad
(
fd
, 
buf
, 
RD_BUF
Ë!
byãs
 + 
byãs2
Ë
	`e
(19);

358 i‡(
	`°∫cmp
(
buf
, 
°r
, 
byãs
Ë!0Ë
	`e
(20);

359 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(21);

362 i‡(
	`u∆ök
("T20"Ë< 0Ë
	`e
(22);

363 
	}
}

365 
	$ã°20f
()

368 
i
, 
fd
;

369 
mode_t
 
m1
;

370 
°©
 
°buf1
, 
°buf2
;

371 
time_t
 
t
, 
t1
;

373 
subã°
 = 8;

375 
m1
 = 
	`umask
(~0777);

376 i‡(
	`sy°em
("rm -r‡foÿxxx"Ë!0Ë
	`e
(1);

377 i‡((
fd
 = 
	`¸ót
("foo", 0777)Ë< 0Ë
	`e
(2);

378 i‡(
	`°©
("foo", &
°buf1
Ë< 0Ë
	`e
(3);

379 i‡(
	`f°©
(
fd
, &
°buf2
Ë< 0Ë
	`e
(4);

380 i‡(
°buf1
.
°_mode
 !
°buf2
.°_modeË
	`e
(5);

381 i‡(
°buf1
.
°_öo
 !
°buf2
.°_öoË
	`e
(6);

382 i‡(
°buf1
.
°_dev
 !
°buf2
.°_devË
	`e
(7);

383 i‡(
°buf1
.
°_∆ök
 !
°buf2
.°_∆ökË
	`e
(8);

384 i‡(
°buf1
.
°_uid
 !
°buf2
.°_uidË
	`e
(9);

385 i‡(
°buf1
.
°_gid
 !
°buf2
.°_gidË
	`e
(10);

386 i‡(
°buf1
.
°_size
 !
°buf2
.°_sizeË
	`e
(11);

387 i‡(
°buf1
.
°_©ime
 !
°buf2
.°_©imeË
	`e
(12);

388 i‡(
°buf1
.
°_mtime
 !
°buf2
.°_mtimeË
	`e
(13);

389 i‡(
°buf1
.
°_˘ime
 !
°buf2
.°_˘imeË
	`e
(14);

391 i‡(!
	`S_ISREG
(
°buf1
.
°_mode
)Ë
	`e
(15);

392 i‡(
	`S_ISDIR
(
°buf1
.
°_mode
)Ë
	`e
(16);

393 i‡(
	`S_ISCHR
(
°buf1
.
°_mode
)Ë
	`e
(17);

394 i‡(
	`S_ISBLK
(
°buf1
.
°_mode
)Ë
	`e
(18);

395 i‡(
	`S_ISFIFO
(
°buf1
.
°_mode
)Ë
	`e
(19);

397 i‡((
°buf1
.
°_mode
 & (
S_IRWXU
 | 
S_IRWXG
 | 
S_IRWXO
)Ë!0777Ë
	`e
(20);

398 i‡(
°buf1
.
°_∆ök
 !1Ë
	`e
(21);

399 i‡(
°buf1
.
°_uid
 !
	`gëuid
()Ë
	`e
(22);

400 i‡(
°buf1
.
°_gid
 !
	`gëgid
()Ë
	`e
(23);

401 i‡(
°buf1
.
°_size
 !0LË
	`e
(24);

404 i‡(
	`u∆ök
("foo"Ë< 0Ë
	`e
(25);

405 i‡(
	`˛o£
(
fd
Ë< 0Ë
	`e
(26);

408 
fd
 = 0;

409 i‡((
i
 = 
	`umask
(~0704)Ë!0Ë
	`e
(27);

410 i‡((
fd
 = 
	`¸ót
("foo", 0777)Ë< 0Ë
	`e
(28);

411 i‡(
	`°©
("foo", &
°buf1
Ë< 0Ë
	`e
(29);

412 i‡(
	`f°©
(
fd
, &
°buf2
Ë< 0Ë
	`e
(30);

413 i‡(
°buf1
.
°_mode
 !
°buf2
.°_modeË
	`e
(31);

414 i‡((
°buf1
.
°_mode
 & (
S_IRWXU
 | 
S_IRWXG
 | 
S_IRWXO
)Ë!0704Ë
	`e
(32);

417 i‡(
	`u∆ök
("foo"Ë< 0Ë
	`e
(33);

418 i‡(
	`˛o£
(
fd
Ë< 0Ë
	`e
(34);

419 i‡(
	`umask
(
m1
Ë!073Ë
	`e
(35);

422 i‡(
	`sy°em
("mkdú Dú; d©ê>Dú/x; chmod 666 Dú"Ë!0Ë
	`e
(36);

423 i‡(
	`°©
("Dú/x", &
°buf1
Ë>0Ë
	`e
(37);

424 i‡(
î∫o
 !
EACCES
Ë
	`e
(38);

425 i‡(
	`°©
("......", &
°buf1
Ë>0Ë
	`e
(39);

426 i‡(
î∫o
 !
ENOENT
Ë
	`e
(40);

427 i‡(
	`°©
("", &
°buf1
Ë>0Ë
	`e
(41);

428 i‡(
î∫o
 !
ENOENT
Ë
	`e
(42);

429 i‡(
	`°©
("xxx/yyy/zzz", &
°buf1
Ë>0Ë
	`e
(43);

430 i‡(
î∫o
 !
ENOENT
Ë
	`e
(44);

431 i‡(
	`f°©
(10000, &
°buf1
Ë>0Ë
	`e
(45);

432 i‡(
î∫o
 !
EBADF
Ë
	`e
(46);

433 i‡(
	`chmod
("Dú", 0777Ë!0Ë
	`e
(47);

434 i‡(
	`sy°em
("rm -r‡foÿDú"Ë!0Ë
	`e
(48);

437 
î∫o
 = 0;

438 
t
 = 
	`time
(&
t1
);

439 i‡(
t
 < 650000000LË
	`e
(49);

440 
	`u∆ök
("T20f");

441 
fd
 = 
	`¸ót
("T20f", 0777);

442 i‡(
fd
 < 0Ë
	`e
(50);

443 i‡(
	`˛o£
(
fd
Ë< 0Ë
	`e
(51);

444 i‡(
	`°©
("T20f", &
°buf1
Ë< 0Ë
	`e
(52);

445 i‡(
°buf1
.
°_mtime
 < 
t
Ë
	`e
(53);

446 i‡(
	`u∆ök
("T20f"Ë< 0Ë
	`e
(54);

447 
	}
}

450 
	$ã°20g
()

453 
i
, 
fd
;

454 
°©
 
°buf
;

455 
«me
[4];

457 
subã°
 = 9;

459 i‡(
	`sy°em
("rm -r‡L? L?? Dú; mkdú Dú"Ë!0Ë
	`e
(1);

460 i‡–(
fd
 = 
	`¸ót
("L1", 0666)Ë< 0Ë
	`e
(2);

461 i‡(
	`f°©
(
fd
, &
°buf
Ë!0Ë
	`e
(3);

462 i‡(
°buf
.
°_∆ök
 !1Ë
	`e
(4);

463 i‡(
	`lök
("L1", "L2"Ë!0Ë
	`e
(5);

464 i‡(
	`f°©
(
fd
, &
°buf
Ë!0Ë
	`e
(6);

465 i‡(
°buf
.
°_∆ök
 !2Ë
	`e
(7);

466 i‡(
	`u∆ök
("L2"Ë!0Ë
	`e
(8);

467 i‡(
	`lök
("L1", "L2"Ë!0Ë
	`e
(9);

468 i‡(
	`u∆ök
("L1"Ë!0Ë
	`e
(10);

469 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(11);

472 i‡–(
fd
 = 
	`¸ót
("L1", 0666)Ë< 0Ë
	`e
(12);

473 i‡(
	`°©
("L1", &
°buf
Ë!0Ë
	`e
(13);

474 i‡(
°buf
.
°_∆ök
 !1Ë
	`e
(14);

475 i‡(
	`lök
("L1", "Dú/L2"Ë!0Ë
	`e
(15);

476 i‡(
	`°©
("L1", &
°buf
Ë!0Ë
	`e
(16);

477 i‡(
°buf
.
°_∆ök
 !2Ë
	`e
(17);

478 i‡(
	`°©
("Dú/L2", &
°buf
Ë!0Ë
	`e
(18);

479 i‡(
°buf
.
°_∆ök
 !2Ë
	`e
(19);

482 i‡(
	`u∆ök
("Dú/L2"Ë!0Ë
	`e
(20);

483 i‡(
	`lök
("L1", "Dú/L2"Ë!0Ë
	`e
(21);

484 i‡(
	`u∆ök
("L1"Ë!0Ë
	`e
(22);

485 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(23);

486 i‡(
	`chdú
("Dú"Ë!0Ë
	`e
(24);

487 i‡(
	`u∆ök
("L2"Ë!0Ë
	`e
(25);

488 i‡(
	`chdú
(".."Ë!0Ë
	`e
(26);

491 i‡(
	`lök
("L2", "Dú/L2"Ë!0Ë
	`e
(27);

492 i‡(
	`chmod
("Dú", 0666Ë!0Ë
	`e
(27);

493 i‡(
	`lök
("L2", "Dú/L2"Ë!-1Ë
	`e
(28);

494 i‡(
î∫o
 !
EACCES
Ë
	`e
(29);

495 
î∫o
 = 0;

496 i‡(
	`lök
("Dú/L2", "L3"Ë!-1Ë
	`e
(30);

497 i‡(
î∫o
 !
EACCES
Ë
	`e
(31);

498 i‡(
	`chmod
("Dú", 0777Ë!0Ë
	`e
(32);

499 i‡(
	`u∆ök
("Dú/L2"Ë!0Ë
	`e
(33);

500 i‡(
	`u∆ök
("L3"Ë=0Ë
	`e
(34);

503 i‡(
	`chmod
("Dú", 0555Ë!0Ë
	`e
(35);

504 i‡(
	`lök
("L2", "Dú/L2"Ë!-1Ë
	`e
(36);

505 i‡(
î∫o
 !
EACCES
Ë
	`e
(37);

506 i‡(
	`chmod
("Dú", 0777Ë!0Ë
	`e
(38);

509 i‡(
	`chmod
("L2", 0Ë!0Ë
	`e
(39);

510 i‡(
	`lök
("L2", "L3"Ë!0Ë
	`e
(40);

511 i‡(
	`°©
("L3", &
°buf
Ë!0Ë
	`e
(41);

512 i‡(
°buf
.
°_∆ök
 !2Ë
	`e
(42);

513 i‡(
	`u∆ök
("L2"Ë!0Ë
	`e
(43);

516 i‡–(
fd
 = 
	`¸ót
("L1", 0666)Ë< 0Ë
	`e
(44);

517 i‡(
	`lök
("L1", "L3"Ë!-1Ë
	`e
(45);

518 i‡(
î∫o
 !
EEXIST
Ë
	`e
(46);

519 
î∫o
 = 0;

520 i‡(
	`lök
("L1", "L1"Ë!-1Ë
	`e
(47);

521 i‡(
î∫o
 !
EEXIST
Ë
	`e
(48);

522 i‡(
	`u∆ök
("L3"Ë!0Ë
	`e
(49);

525 
«me
[0] = 'L';

526 
«me
[1] = 'x';

527 
«me
[2] = 1;

528 
«me
[3] = 0;

529 
i
 = 2; i <
LINK_MAX
; i++) {

530 i‡(
	`lök
("L1", 
«me
Ë!0Ë
	`e
(50);

531 
«me
[2]++;

533 i‡(
	`°©
("L1", &
°buf
Ë!0Ë
	`e
(51);

534 i‡(
°buf
.
°_∆ök
 !
LINK_MAX
Ë
	`e
(52);

535 i‡(
	`lök
("L1", "L2"Ë!-1Ë
	`e
(53);

536 i‡(
î∫o
 !
EMLINK
Ë
	`e
(54);

537 
«me
[2] = 1;

538 
i
 = 2; i <
LINK_MAX
; i++) {

539 i‡(
	`u∆ök
(
«me
Ë!0Ë
	`e
(55);

540 
«me
[2]++;

542 i‡(
	`°©
("L1", &
°buf
Ë!0Ë
	`e
(56);

543 i‡(
°buf
.
°_∆ök
 !1Ë
	`e
(57);

546 
î∫o
 = 0;

547 i‡(
	`lök
("xx/L1", "L2"Ë!-1Ë
	`e
(58);

548 i‡(
î∫o
 !
ENOENT
Ë
	`e
(59);

549 
î∫o
 = 0;

550 i‡(
	`lök
("L1", "xx/L2"Ë!-1Ë
	`e
(60);

551 i‡(
î∫o
 !
ENOENT
Ë
	`e
(61);

552 
î∫o
 = 0;

553 i‡(
	`lök
("L4", "L5"Ë!-1Ë
	`e
(62);

554 i‡(
î∫o
 !
ENOENT
Ë
	`e
(63);

555 
î∫o
 = 0;

556 i‡(
	`lök
("", "L5"Ë!-1Ë
	`e
(64);

557 i‡(
î∫o
 !
ENOENT
Ë
	`e
(65);

558 
î∫o
 = 0;

559 i‡(
	`lök
("L1", ""Ë!-1Ë
	`e
(66);

560 i‡(
î∫o
 !
ENOENT
Ë
	`e
(67);

563 
î∫o
 = 0;

564 i‡(
	`lök
("/dev/ây/x", "L2"Ë!-1Ë
	`e
(68);

565 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(69);

568 i‡(
	`lök
(".", "L2"Ë!-1Ë
	`e
(70);

569 i‡(
î∫o
 !
EPERM
Ë
	`e
(71);

572 i‡(
	`lök
("L1", "Dú/L1"Ë!0Ë
	`e
(72);

573 i‡(
	`chmod
("Dú", 0666Ë!0Ë
	`e
(73);

574 i‡(
	`u∆ök
("Dú/L1"Ë!-1Ë
	`e
(74);

575 i‡(
î∫o
 !
EACCES
Ë
	`e
(75);

576 
î∫o
 = 0;

577 i‡(
	`chmod
("Dú", 0555Ë!0Ë
	`e
(76);

578 i‡(
	`u∆ök
("Dú/L1"Ë!-1Ë
	`e
(77);

579 i‡(
î∫o
 !
EACCES
Ë
	`e
(78);

581 i‡(
	`u∆ök
("L7"Ë!-1Ë
	`e
(79);

582 i‡(
î∫o
 !
ENOENT
Ë
	`e
(80);

583 
î∫o
 = 0;

584 i‡(
	`u∆ök
(""Ë!-1Ë
	`e
(81);

585 i‡(
î∫o
 !
ENOENT
Ë
	`e
(82);

587 i‡(
	`u∆ök
("Dú/L1/L2"Ë!-1Ë
	`e
(83);

588 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(84);

590 i‡(
	`chmod
("Dú", 0777Ë!0Ë
	`e
(85);

591 i‡(
	`u∆ök
("Dú/L1"Ë!0Ë
	`e
(86);

592 i‡(
	`u∆ök
("Dú"Ë!-1Ë
	`e
(87);

593 i‡(
î∫o
 !
EPERM
Ë
	`e
(88);

594 i‡(
	`u∆ök
("L1"Ë!0Ë
	`e
(89);

595 i‡(
	`sy°em
("rm -r‡Dú"Ë!0Ë
	`e
(90);

596 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(91);

597 
	}
}

599 
	$ã°20h
()

603 
fd
;

605 
subã°
 = 10;

606 
	`sy°em
("rm -rf A1");

607 i‡–(
fd
 = 
	`¸ót
("A1", 0777)Ë< 0Ë
	`e
(1);

608 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(2);

609 i‡(
	`ac˚ss
("A1", 
R_OK
Ë!0Ë
	`e
(3);

610 i‡(
	`ac˚ss
("A1", 
W_OK
Ë!0Ë
	`e
(4);

611 i‡(
	`ac˚ss
("A1", 
X_OK
Ë!0Ë
	`e
(5);

612 i‡(
	`ac˚ss
("A1", (
R_OK
|
W_OK
|
X_OK
)Ë!0Ë
	`e
(6);

614 i‡(
	`chmod
("A1", 0400Ë!0Ë
	`e
(7);

615 i‡(
	`ac˚ss
("A1", 
R_OK
Ë!0Ë
	`e
(8);

616 i‡(
	`ac˚ss
("A1", 
W_OK
Ë!-1Ë
	`e
(9);

617 i‡(
	`ac˚ss
("A1", 
X_OK
Ë!-1Ë
	`e
(10);

618 i‡(
	`ac˚ss
("A1", (
R_OK
|
W_OK
|
X_OK
)Ë!-1Ë
	`e
(11);

620 i‡(
	`chmod
("A1", 0077Ë!0Ë
	`e
(12);

621 i‡(
	`ac˚ss
("A1", 
R_OK
Ë!-1Ë
	`e
(13);

622 i‡(
	`ac˚ss
("A1", 
W_OK
Ë!-1Ë
	`e
(14);

623 i‡(
	`ac˚ss
("A1", 
X_OK
Ë!-1Ë
	`e
(15);

624 i‡(
	`ac˚ss
("A1", (
R_OK
|
W_OK
|
X_OK
)Ë!-1Ë
	`e
(16);

625 i‡(
î∫o
 !
EACCES
Ë
	`e
(17);

627 i‡(
	`ac˚ss
("", 
R_OK
Ë!-1Ë
	`e
(18);

628 i‡(
î∫o
 !
ENOENT
Ë
	`e
(19);

629 i‡(
	`ac˚ss
("./A1/x", 
R_OK
Ë!-1Ë
	`e
(20);

630 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(21);

632 i‡(
	`u∆ök
("A1"Ë!0Ë
	`e
(22);

633 
	}
}

635 
	$ã°20i
()

639 
fd
, 
i
;

640 
°©
 
°buf
;

642 
subã°
 = 11;

643 
	`sy°em
("rm -rf A1");

644 i‡–(
fd
 = 
	`¸ót
("A1", 0777)Ë< 0Ë
	`e
(1);

646 
i
 = 0; i < 511; i++) {

647 i‡(
	`chmod
("A1", 
i
Ë!0Ë
	`e
(100+i);

648 i‡(
	`f°©
(
fd
, &
°buf
Ë!0Ë
	`e
(200+
i
);

649 i‡–(
°buf
.
°_mode
&(
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)Ë!
i
Ë
	`e
(300+i);

651 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(2);

653 i‡(
	`chmod
("A1/x", 0777Ë!-1Ë
	`e
(3);

654 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(4);

655 i‡(
	`chmod
("Axxx", 0777Ë!-1Ë
	`e
(5);

656 i‡(
î∫o
 !
ENOENT
Ë
	`e
(6);

657 
î∫o
 = 0;

658 i‡(
	`chmod
 ("", 0777Ë!-1Ë
	`e
(7);

659 i‡(
î∫o
 !
ENOENT
Ë
	`e
(8);

662 
i
 = 
	`gëuid
();

672 i‡(
	`u∆ök
("A1"Ë!0Ë
	`e
(9);

673 
	}
}

675 
	$ã°20j
()

679 
fd
;

680 
time_t
 
éoc
;

681 
utimbuf
 
times
;

682 
°©
 
°buf
;

684 
subã°
 = 12;

685 i‡(
	`sy°em
("rm -r‡A2"Ë!0Ë
	`e
(1);

686 i‡–(
fd
 = 
	`¸ót
("A2", 0666)Ë< 0Ë
	`e
(2);

687 
times
.
modtime
 = 100;

688 i‡(
	`utime
("A2", &
times
Ë!0Ë
	`e
(3);

689 i‡(
	`°©
("A2", &
°buf
Ë!0Ë
	`e
(4);

690 i‡(
°buf
.
°_mtime
 !100Ë
	`e
(5);

692 
éoc
 = 
	`time
((
time_t
 *)
NULL
);

693 
times
.
modtime
 = 
éoc
;

694 i‡(
	`utime
("A2", &
times
Ë!0Ë
	`e
(6);

695 i‡(
	`°©
("A2", &
°buf
Ë!0Ë
	`e
(7);

696 i‡(
°buf
.
°_mtime
 !
éoc
Ë
	`e
(8);

697 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(9);

698 i‡(
	`u∆ök
("A2"Ë!0Ë
	`e
(10);

699 
	}
}

701 
	$e
(
n
)

702 
n
;

704 
îr_num
 = 
î∫o
;

706 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d ", 
subã°
, 
n
, 
î∫o
);

707 
	`fÊush
(
°dout
);

708 
î∫o
 = 
îr_num
;

709 
	`≥º‹
("");

710 i‡(
îr˘
++ > 
MAX_ERROR
) {

711 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

712 
	`chdú
("..");

713 
	`sy°em
("rm -rf DIR*");

714 
	`exô
(1);

716 
	}
}

718 
	$quô
()

721 
	`chdú
("..");

722 
	`sy°em
("rm -rf DIR*");

724 i‡(
îr˘
 == 0) {

725 
	`¥ötf
("ok\n");

726 
	`exô
(0);

728 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

729 
	`exô
(1);

731 
	}
}

	@test21.c

8 
	~<sys/ty≥s.h
>

9 
	~<sys/°©.h
>

10 
	~<î∫o.h
>

11 
	~<f˙é.h
>

12 
	~<limôs.h
>

13 
	~<°dlib.h
>

14 
	~<°rög.h
>

15 
	~<uni°d.h
>

16 
	~<°dio.h
>

18 
	#ITERATIONS
 1

	)

19 
	#MAX_ERROR
 4

	)

21 
	gsubã°
, 
	gîr˘
;

23 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
 []));

24 
_PROTOTYPE
(
ã°21a
, ());

25 
_PROTOTYPE
(
ã°21b
, ());

26 
_PROTOTYPE
(
ã°21c
, ());

27 
_PROTOTYPE
(
ã°21d
, ());

28 
_PROTOTYPE
(
ã°21e
, ());

29 
_PROTOTYPE
(
ã°21f
, ());

30 
_PROTOTYPE
(
ã°21g
, ());

31 
_PROTOTYPE
(
ã°21h
, ());

32 
_PROTOTYPE
(
ã°21i
, ());

33 
_PROTOTYPE
(
ã°21k
, ());

34 
_PROTOTYPE
(
ã°21l
, ());

35 
_PROTOTYPE
(
ã°21m
, ());

36 
_PROTOTYPE
(
ã°21n
, ());

37 
_PROTOTYPE
(
ã°21o
, ());

38 
_PROTOTYPE
(
gë_lök
, (*
«me
));

39 
_PROTOTYPE
(
e
, (
n
));

40 
_PROTOTYPE
(
quô
, ());

42 
	$maö
(
¨gc
, 
¨gv
)

43 
¨gc
;

44 *
¨gv
[];

47 
i
, 
m
 = 0xFFFF;

49 
	`sync
();

50 i‡(
	`gëeuid
(Ë=0 || 
	`gëuid
() == 0) {

51 
	`¥ötf
("Test 21 cannotÑunásÑoot;Åestáborted\n");

52 
	`exô
(1);

55 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

56 
	`¥ötf
("Test 21 ");

57 
	`fÊush
(
°dout
);

59 
	`sy°em
("rm -rf DIR_21; mkdir DIR_21");

60 
	`chdú
("DIR_21");

62 
i
 = 0; i < 
ITERATIONS
; i++) {

63 i‡(
m
 & 00001Ë
	`ã°21a
();

64 i‡(
m
 & 00002Ë
	`ã°21b
();

65 i‡(
m
 & 00004Ë
	`ã°21c
();

66 i‡(
m
 & 00010Ë
	`ã°21d
();

67 i‡(
m
 & 00020Ë
	`ã°21e
();

68 i‡(
m
 & 00040Ë
	`ã°21f
();

69 i‡(
m
 & 01000Ë
	`ã°21g
();

70 i‡(
m
 & 00200Ë
	`ã°21h
();

71 i‡(
m
 & 00400Ë
	`ã°21i
();

72 i‡(
m
 & 01000Ë
	`ã°21k
();

73 i‡(
m
 & 02000Ë
	`ã°21l
();

74 i‡(
m
 & 04000Ë
	`ã°21m
();

75 i‡(
m
 & 010000Ë
	`ã°21n
();

76 i‡(
m
 & 020000Ë
	`ã°21o
();

78 
	`quô
();

80 
	}
}

82 
	$ã°21a
()

86 
fd
, 
fd2
;

87 
buf
[
PATH_MAX
+1], 
buf1
[PATH_MAX+1], 
buf2
[PATH_MAX+1];

88 
°©
 
°©1
, 
°©2
;

90 
subã°
 = 1;

92 
	`u∆ök
("A1");

93 
	`u∆ök
("A2");

94 
	`u∆ök
("A3");

95 
	`u∆ök
("A4");

96 
	`u∆ök
("A5");

97 
	`u∆ök
("A6");

98 
	`u∆ök
("A7");

101 i‡–(
fd
=
	`¸ót
("A1", 0666)Ë< 0Ë
	`e
(1);

102 i‡(
	`wrôe
(
fd
, 
buf
, 20Ë!20Ë
	`e
(2);

103 i‡(
	`˛o£
(
fd
Ë< 0Ë
	`e
(3);

104 i‡(
	`ª«me
("A1", "A2"Ë< 0Ë
	`e
(4);

105 i‡–(
fd
=
	`›í
("A2", 
O_RDONLY
)Ë< 0Ë
	`e
(5);

106 i‡(
	`ª«me
("A2", "A3"Ë< 0Ë
	`e
(6);

107 i‡–(
fd2
=
	`›í
("A3", 
O_RDONLY
)Ë< 0Ë
	`e
(7);

108 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(8);

109 i‡(
	`˛o£
(
fd2
Ë!0Ë
	`e
(9);

110 i‡(
	`u∆ök
("A3"Ë!0Ë
	`e
(10);

116 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë=(*Ë
NULL
Ë
	`e
(11);

117 i‡–(
fd
 = 
	`¸ót
("A4", 0666)Ë< 0Ë
	`e
(12);

118 i‡(
	`wrôe
(
fd
, 
buf
, 30Ë!30Ë
	`e
(13);

119 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(14);

120 
	`°r˝y
(
buf1
, 
buf
);

121 
	`°rˇt
(
buf1
, "/A4");

122 i‡(
	`ª«me
(
buf1
, "A5"Ë!0Ë
	`e
(15);

123 i‡(
	`ac˚ss
("A5", 6Ë!0Ë
	`e
(16);

124 
	`°r˝y
(
buf2
, 
buf
);

125 
	`°rˇt
(
buf2
, "/A6");

126 i‡(
	`ª«me
("A5", 
buf2
Ë!0Ë
	`e
(17);

127 i‡(
	`ac˚ss
("A6", 6Ë!0Ë
	`e
(18);

128 i‡(
	`ac˚ss
(
buf2
, 6Ë!0Ë
	`e
(19);

129 
	`°r˝y
(
buf1
, 
buf
);

130 
	`°rˇt
(
buf1
, "/A6");

131 
	`°r˝y
(
buf2
, 
buf
);

132 
	`°rˇt
(
buf2
, "/A7");

133 i‡(
	`ª«me
(
buf1
, 
buf2
Ë!0Ë
	`e
(20);

134 i‡(
	`ac˚ss
("A7", 6Ë!0Ë
	`e
(21);

135 i‡(
	`ac˚ss
(
buf2
, 6Ë!0Ë
	`e
(22);

138 i‡(
	`ª«me
("A7", "./A8"Ë!0Ë
	`e
(23);

139 i‡(
	`ac˚ss
("A8", 6Ë!0Ë
	`e
(24);

140 i‡(
	`ª«me
("./A8", "A9"Ë!0Ë
	`e
(25);

141 i‡(
	`ac˚ss
("A9", 6Ë!0Ë
	`e
(26);

142 i‡(
	`ª«me
("./A9", "./A10"Ë!0Ë
	`e
(27);

143 i‡(
	`ac˚ss
("A10", 6Ë!0Ë
	`e
(28);

144 i‡(
	`ac˚ss
("./A10", 6Ë!0Ë
	`e
(29);

145 i‡(
	`u∆ök
("A10"Ë!0Ë
	`e
(30);

148 i‡(
	`sy°em
("rm -r‡?uzzy scsi"Ë!0Ë
	`e
(31);

149 i‡(
	`sy°em
("mkdú fuzzy"Ë!0Ë
	`e
(32);

150 i‡(
	`ª«me
("fuzzy", "wuzzy"Ë!0Ë
	`e
(33);

151 i‡–(
fd
=
	`¸ót
("wuzzy/was_a_bór", 0666)Ë< 0Ë
	`e
(34);

152 i‡(
	`ac˚ss
("wuzzy/was_a_bór", 6Ë!0Ë
	`e
(35);

153 i‡(
	`u∆ök
("wuzzy/was_a_bór"Ë!0Ë
	`e
(36);

154 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(37);

155 i‡(
	`ª«me
("wuzzy", "buzzy"Ë!0Ë
	`e
(38);

156 i‡(
	`sy°em
("rmdú buzzy"Ë!0Ë
	`e
(39);

159 i‡–(
fd
 = 
	`¸ót
("h‹£", 0666)Ë< 0Ë
	`e
(40);

160 i‡–(
fd2
 = 
	`¸ót
("shìp", 0666)Ë< 0Ë
	`e
(41);

161 i‡(
	`wrôe
(
fd
, 
buf
, 
PATH_MAX
Ë!PATH_MAXË
	`e
(42);

162 i‡(
	`wrôe
(
fd2
, 
buf
, 23Ë!23Ë
	`e
(43);

163 i‡(
	`°©
("h‹£", &
°©1
Ë!0Ë
	`e
(44);

164 i‡(
	`ª«me
("h‹£", "shìp"Ë!0Ë
	`e
(45);

165 i‡(
	`°©
("shìp", &
°©2
Ë!0Ë
	`e
(46);

166 i‡(
°©1
.
°_dev
 !
°©2
.°_devË
	`e
(47);

167 i‡(
°©1
.
°_öo
 !
°©2
.°_öoË
	`e
(48);

168 i‡(
°©2
.
°_size
 !
PATH_MAX
Ë
	`e
(49);

169 i‡(
	`ac˚ss
("h‹£", 6Ë=0Ë
	`e
(50);

170 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(51);

171 i‡(
	`˛o£
(
fd2
Ë!0Ë
	`e
(52);

172 i‡(
	`ª«me
("shìp", "shìp"Ë!0Ë
	`e
(53);

173 i‡(
	`u∆ök
("shìp"Ë!0Ë
	`e
(54);

176 i‡(
	`sy°em
("mkdú fuzzy wuzzy"Ë!0Ë
	`e
(55);

177 i‡–(
fd
 = 
	`¸ót
("fuzzy/was_a_bór", 0666)Ë< 0Ë
	`e
(56);

178 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(57);

179 i‡(
	`ª«me
("fuzzy", "wuzzy"Ë!0Ë
	`e
(58);

180 i‡(
	`sy°em
("mkdú scsi"Ë!0Ë
	`e
(59);

181 i‡(
	`ª«me
("scsi", "wuzzy"Ë=0Ë
	`e
(60);

182 i‡(
î∫o
 !
EEXIST
 &&Éºnÿ!
ENOTEMPTY
Ë
	`e
(61);

185 i‡(
	`ª«me
("wuzzy/was_a_bór", "wuzzy/was_nŸ_a_bór"Ë!0Ë
	`e
(62);

186 i‡(
	`ac˚ss
("wuzzy/was_nŸ_a_bór", 6Ë!0Ë
	`e
(63);

187 i‡(
	`ª«me
("wuzzy/was_nŸ_a_bór", "wuzzy/was_nŸ_a_duck"Ë!0Ë
	`e
(64);

188 i‡(
	`ac˚ss
("wuzzy/was_nŸ_a_duck", 6Ë!0Ë
	`e
(65);

189 i‡(
	`ª«me
("wuzzy/was_nŸ_a_duck", "wuzzy/was_a_búd"Ë!0Ë
	`e
(65);

190 i‡(
	`ac˚ss
("wuzzy/was_a_búd", 6Ë!0Ë
	`e
(66);

193 i‡(
	`ª«me
("wuzzy/was_a_búd", "bó°"Ë!0Ë
	`e
(67);

194 i‡(
	`ac˚ss
("bó°", 6Ë!0Ë
	`e
(68);

195 i‡(
	`ª«me
("bó°", "wuzzy/was_a_ˇt"Ë!0Ë
	`e
(69);

196 i‡(
	`ac˚ss
("wuzzy/was_a_ˇt", 6Ë!0Ë
	`e
(70);

199 i‡(
	`ª«me
("wuzzy/was_a_ˇt", "wuzzy/was_a_dog"Ë!0Ë
	`e
(71);

200 i‡(
	`ac˚ss
("wuzzy/was_a_dog", 6Ë!0Ë
	`e
(72);

201 i‡(
	`chmod
("wuzzy", 0Ë!0Ë
	`e
(73);

203 
î∫o
 = 0;

204 i‡(
	`ª«me
("wuzzy/was_a_dog", "wuzzy/was_a_pig"Ë!-1Ë
	`e
(74);

205 i‡(
î∫o
 !
EACCES
Ë
	`e
(75);

207 
î∫o
 = 0;

208 i‡(
	`ª«me
("wuzzy/was_a_dog", "doggõ"Ë!-1Ë
	`e
(76);

209 i‡(
î∫o
 !
EACCES
Ë
	`e
(77);

211 
î∫o
 = 0;

212 i‡–(
fd
 = 
	`¸ót
("bó°", 0666)Ë< 0Ë
	`e
(78);

213 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(79);

214 i‡(
	`ª«me
("bó°", "wuzzy/was_a_twô"Ë!-1Ë
	`e
(80);

215 i‡(
î∫o
 !
EACCES
Ë
	`e
(81);

217 
î∫o
 = 0;

218 i‡(
	`ª«me
("bó°", "wuzzy"Ë!-1Ë
	`e
(82);

219 i‡(
î∫o
 !
EISDIR
Ë
	`e
(83);

221 
î∫o
 = 0;

222 i‡(
	`ª«me
("bì°", "ba°e"Ë!-1Ë
	`e
(84);

223 i‡(
î∫o
 !
ENOENT
Ë
	`e
(85);

225 
î∫o
 = 0;

226 i‡(
	`ª«me
("wuzzy", "bó°"Ë!-1Ë
	`e
(86);

227 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(87);

230 
î∫o
 = 0;

231 i‡(
	`chmod
("wuzzy", 0777Ë!0Ë
	`e
(88);

232 i‡(
	`u∆ök
("wuzzy/was_a_dog"Ë!0Ë
	`e
(89);

233 
	`°r˝y
(
buf1
, 
buf
);

234 
	`°rˇt
(
buf1
, "/wuzzy");

235 i‡(
	`ª«me
(
buf
, 
buf1
Ë!-1Ë
	`e
(90);

236 i‡(
î∫o
 !
EINVAL
Ë
	`e
(91);

238 i‡(
	`sy°em
("rm -r‡wuzzy bó° scsi"Ë!0Ë
	`e
(92);

239 
	}
}

243 
	$ã°21b
()

247 
i
;

248 
«me
[3];

249 
°©
 
°©buf
;

251 
subã°
 = 2;

254 i‡(
	`mkdú
("D1", 0700Ë!0Ë
	`e
(1);

255 i‡(
	`°©
("D1", &
°©buf
Ë!0Ë
	`e
(2);

256 i‡(!
	`S_ISDIR
(
°©buf
.
°_mode
)Ë
	`e
(3);

257 i‡–(
°©buf
.
°_mode
 & 0777Ë!0700Ë
	`e
(4);

258 i‡(
	`rmdú
("D1"Ë!0Ë
	`e
(5);

263 
«me
[0] = 'D';

264 
«me
[2] = '\0';

265 
i
 = 0; i < 40; i++) {

266 
«me
[1] = 'A' + 
i
;

267 i‡(
	`mkdú
(
«me
, 0700 + 
i
%7Ë!0Ë
	`e
(10+i);

269 
i
 = 0; i < 40; i++) {

270 
«me
[1] = 'A' + 
i
;

271 i‡(
	`rmdú
(
«me
Ë!0Ë
	`e
(50+
i
);

273 
	}
}

275 
	$ã°21c
()

279 
subã°
 = 3;

281 i‡(
	`mkdú
("D1", 0777Ë!0Ë
	`e
(1);

282 i‡(
	`mkdú
("D1/D2", 0777Ë!0Ë
	`e
(2);

283 i‡(
	`mkdú
("D1/D2/D3", 0777Ë!0Ë
	`e
(3);

284 i‡(
	`mkdú
("D1/D2/D3/D4", 0777Ë!0Ë
	`e
(4);

285 i‡(
	`mkdú
("D1/D2/D3/D4/D5", 0777Ë!0Ë
	`e
(5);

286 i‡(
	`mkdú
("D1/D2/D3/D4/D5/D6", 0777Ë!0Ë
	`e
(6);

287 i‡(
	`mkdú
("D1/D2/D3/D4/D5/D6/D7", 0777Ë!0Ë
	`e
(7);

288 i‡(
	`mkdú
("D1/D2/D3/D4/D5/D6/D7/D8", 0777Ë!0Ë
	`e
(8);

289 i‡(
	`mkdú
("D1/D2/D3/D4/D5/D6/D7/D8/D9", 0777Ë!0Ë
	`e
(9);

290 i‡(
	`ac˚ss
("D1/D2/D3/D4/D5/D6/D7/D8/D9", 7Ë!0Ë
	`e
(10);

291 i‡(
	`rmdú
("D1/D2/D3/D4/D5/D6/D7/D8/D9"Ë!0Ë
	`e
(11);

292 i‡(
	`rmdú
("D1/D2/D3/D4/D5/D6/D7/D8"Ë!0Ë
	`e
(12);

293 i‡(
	`rmdú
("D1/D2/D3/D4/D5/D6/D7"Ë!0Ë
	`e
(13);

294 i‡(
	`rmdú
("D1/D2/D3/D4/D5/D6"Ë!0Ë
	`e
(11);

295 i‡(
	`rmdú
("D1/D2/D3/D4/D5"Ë!0Ë
	`e
(13);

296 i‡(
	`rmdú
("D1/D2/D3/D4"Ë!0Ë
	`e
(14);

297 i‡(
	`rmdú
("D1/D2/D3"Ë!0Ë
	`e
(15);

298 i‡(
	`rmdú
("D1/D2"Ë!0Ë
	`e
(16);

299 i‡(
	`rmdú
("D1"Ë!0Ë
	`e
(17);

300 
	}
}

302 
	$ã°21d
()

306 
fd1
, 
fd2
, 
fd3
, 
fd4
, 
fd5
, 
fd6
, 
fd7
, 
fd8
, 
fd9
;

308 
subã°
 = 4;

310 i‡(
	`mkdú
("D1", 0777Ë!0Ë
	`e
(1);

311 i‡(
	`mkdú
("D1/D2", 0777Ë!0Ë
	`e
(2);

312 i‡(
	`mkdú
("./D1/D3", 0777Ë!0Ë
	`e
(3);

313 i‡(
	`mkdú
("././D1/D4", 0777Ë!0Ë
	`e
(4);

314 i‡–(
fd1
 = 
	`¸ót
("D1/D2/x", 0700)Ë< 0Ë
	`e
(5);

315 i‡–(
fd2
 = 
	`¸ót
("D1/D2/y", 0700)Ë< 0Ë
	`e
(6);

316 i‡–(
fd3
 = 
	`¸ót
("D1/D2/z", 0700)Ë< 0Ë
	`e
(7);

317 i‡–(
fd4
 = 
	`¸ót
("D1/D3/x", 0700)Ë< 0Ë
	`e
(8);

318 i‡–(
fd5
 = 
	`¸ót
("D1/D3/y", 0700)Ë< 0Ë
	`e
(9);

319 i‡–(
fd6
 = 
	`¸ót
("D1/D3/z", 0700)Ë< 0Ë
	`e
(10);

320 i‡–(
fd7
 = 
	`¸ót
("D1/D4/x", 0700)Ë< 0Ë
	`e
(11);

321 i‡–(
fd8
 = 
	`¸ót
("D1/D4/y", 0700)Ë< 0Ë
	`e
(12);

322 i‡–(
fd9
 = 
	`¸ót
("D1/D4/z", 0700)Ë< 0Ë
	`e
(13);

323 i‡(
	`u∆ök
("D1/D2/z"Ë!0Ë
	`e
(14);

324 i‡(
	`u∆ök
("D1/D2/y"Ë!0Ë
	`e
(15);

325 i‡(
	`u∆ök
("D1/D2/x"Ë!0Ë
	`e
(16);

326 i‡(
	`u∆ök
("D1/D3/x"Ë!0Ë
	`e
(17);

327 i‡(
	`u∆ök
("D1/D3/z"Ë!0Ë
	`e
(18);

328 i‡(
	`u∆ök
("D1/D3/y"Ë!0Ë
	`e
(19);

329 i‡(
	`u∆ök
("D1/D4/y"Ë!0Ë
	`e
(20);

330 i‡(
	`u∆ök
("D1/D4/z"Ë!0Ë
	`e
(21);

331 i‡(
	`u∆ök
("D1/D4/x"Ë!0Ë
	`e
(22);

332 i‡(
	`rmdú
("D1/D2"Ë!0Ë
	`e
(23);

333 i‡(
	`rmdú
("D1/D3"Ë!0Ë
	`e
(24);

334 i‡(
	`rmdú
("D1/D4"Ë!0Ë
	`e
(25);

335 i‡(
	`rmdú
("D1"Ë!0Ë
	`e
(26);

336 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(27);

337 i‡(
	`˛o£
(
fd2
Ë!0Ë
	`e
(28);

338 i‡(
	`˛o£
(
fd3
Ë!0Ë
	`e
(29);

339 i‡(
	`˛o£
(
fd4
Ë!0Ë
	`e
(30);

340 i‡(
	`˛o£
(
fd5
Ë!0Ë
	`e
(31);

341 i‡(
	`˛o£
(
fd6
Ë!0Ë
	`e
(32);

342 i‡(
	`˛o£
(
fd7
Ë!0Ë
	`e
(33);

343 i‡(
	`˛o£
(
fd8
Ë!0Ë
	`e
(34);

344 i‡(
	`˛o£
(
fd9
Ë!0Ë
	`e
(35);

346 
	}
}

349 
	$ã°21e
()

353 
subã°
 = 5;

355 i‡(
	`mkdú
("D1", 0677Ë!0Ë
	`e
(1);

356 
î∫o
 = 0;

357 i‡(
	`mkdú
("D1/D2", 0777Ë!-1Ë
	`e
(2);

358 i‡(
î∫o
 !
EACCES
Ë
	`e
(3);

359 i‡(
	`chmod
 ("D1", 0577Ë!0Ë
	`e
(4);

360 
î∫o
 = 0;

361 i‡(
	`mkdú
("D1/D2", 0777Ë!-1Ë
	`e
(5);

362 i‡(
î∫o
 !
EACCES
Ë
	`e
(6);

363 i‡(
	`chmod
 ("D1", 0777Ë!0Ë
	`e
(7);

364 
î∫o
 = 0;

365 i‡(
	`mkdú
("D1", 0777Ë!-1Ë
	`e
(8);

366 i‡(
î∫o
 !
EEXIST
Ë
	`e
(9);

367 #i‡
NAME_MAX
 == 14

368 i‡(
	`mkdú
("D1/ABCDEFGHIJKLMNOPQRSTUVWXYZ", 0777Ë!0Ë
	`e
(10);

369 i‡(
	`ac˚ss
("D1/ABCDEFGHIJKLMN", 7 ) !0Ë
	`e
(11);

370 i‡(
	`rmdú
("D1/ABCDEFGHIJKLMNOPQ"Ë!0Ë
	`e
(12);

371 i‡(
	`ac˚ss
("D1/ABCDEFGHIJKLMN", 7 ) !-1Ë
	`e
(13);

373 
î∫o
 = 0;

374 i‡(
	`mkdú
("D1/D2/x", 0777Ë!-1Ë
	`e
(14);

375 i‡(
î∫o
 !
ENOENT
Ë
	`e
(15);

380 i‡(
	`mkdú
("D1/D2", 0777Ë!0Ë
	`e
(16);

381 i‡(
	`chmod
("D1", 0Ë!0Ë
	`e
(17);

382 
î∫o
 = 0;

383 i‡(
	`rmdú
("D1/D2"Ë!-1Ë
	`e
(18);

384 i‡(
î∫o
 !
EACCES
Ë
	`e
(19);

385 i‡(
	`chmod
("D1", 0777Ë!0Ë
	`e
(20);

386 i‡(
	`rmdú
("D1/D2"Ë!0Ë
	`e
(21);

387 i‡(
	`rmdú
("D1"Ë!0Ë
	`e
(22);

388 
	}
}

390 
	$ã°21f
()

405 
fd
, 
D1_bef‹e
, 
D1_a·î
, 
x_lök
, 
y_lök
;

408 
subã°
 = 6;

409 i‡(
	`mkdú
("D1", 0777Ë!0Ë
	`e
(1);

410 i‡–(
fd
 = 
	`¸ót
("D1/x", 0777)Ë< 0Ë
	`e
(2);

411 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(3);

412 
D1_bef‹e
 = 
	`gë_lök
("D1");

413 
x_lök
 = 
	`gë_lök
("D1/x");

414 i‡(
	`ª«me
("D1/x", "D1/y"Ë!0Ë
	`e
(4);

415 
y_lök
 = 
	`gë_lök
("D1/y");

416 
D1_a·î
 = 
	`gë_lök
("D1");

417 i‡(
D1_bef‹e
 !2Ë
	`e
(5);

418 i‡(
D1_a·î
 !2Ë
	`e
(6);

419 i‡(
x_lök
 !1Ë
	`e
(7);

420 i‡(
y_lök
 !1Ë
	`e
(8);

421 i‡(
	`ac˚ss
("D1/y", 7Ë!0Ë
	`e
(9);

422 i‡(
	`u∆ök
("D1/y"Ë!0Ë
	`e
(10);

423 i‡(
	`rmdú
("D1"Ë!0Ë
	`e
(11);

424 
	}
}

427 
	$ã°21g
()

429 
fd
, 
D1_bef‹e
, 
D1_a·î
, 
D2_bef‹e
, 
D2_a·î
, 
x_lök
, 
y_lök
;

432 
subã°
 = 7;

433 i‡(
	`mkdú
("D1", 0777Ë!0Ë
	`e
(1);

434 i‡(
	`mkdú
("D2", 0777Ë!0Ë
	`e
(2);

435 i‡–(
fd
 = 
	`¸ót
("D1/x", 0777)Ë< 0Ë
	`e
(3);

436 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(4);

437 
D1_bef‹e
 = 
	`gë_lök
("D1");

438 
D2_bef‹e
 = 
	`gë_lök
("D2");

439 
x_lök
 = 
	`gë_lök
("D1/x");

440 i‡(
	`ª«me
("D1/x", "D2/y"Ë!0Ë
	`e
(5);

441 
y_lök
 = 
	`gë_lök
("D2/y");

442 
D1_a·î
 = 
	`gë_lök
("D1");

443 
D2_a·î
 = 
	`gë_lök
("D2");

444 i‡(
D1_bef‹e
 !2Ë
	`e
(6);

445 i‡(
D2_bef‹e
 !2Ë
	`e
(7);

446 i‡(
D1_a·î
 !2Ë
	`e
(8);

447 i‡(
D2_a·î
 !2Ë
	`e
(9);

448 i‡(
x_lök
 !1Ë
	`e
(10);

449 i‡(
y_lök
 !1Ë
	`e
(11);

450 i‡(
	`ac˚ss
("D2/y", 7Ë!0Ë
	`e
(12);

451 i‡(
	`u∆ök
("D2/y"Ë!0Ë
	`e
(13);

452 i‡(
	`rmdú
("D1"Ë!0Ë
	`e
(14);

453 i‡(
	`rmdú
("D2"Ë!0Ë
	`e
(15);

454 
	}
}

456 
	$ã°21h
()

458 
D1_bef‹e
, 
D1_a·î
, 
x_lök
, 
y_lök
;

461 
subã°
 = 8;

462 i‡(
	`mkdú
("D1", 0777Ë!0Ë
	`e
(1);

463 i‡(
	`mkdú
("D1/X", 0777Ë!0Ë
	`e
(2);

464 
D1_bef‹e
 = 
	`gë_lök
("D1");

465 
x_lök
 = 
	`gë_lök
("D1/X");

466 i‡(
	`ª«me
("D1/X", "D1/Y"Ë!0Ë
	`e
(3);

467 
y_lök
 = 
	`gë_lök
("D1/Y");

468 
D1_a·î
 = 
	`gë_lök
("D1");

469 i‡(
D1_bef‹e
 !3Ë
	`e
(4);

470 i‡(
D1_a·î
 !3Ë
	`e
(5);

471 i‡(
x_lök
 !2Ë
	`e
(6);

472 i‡(
y_lök
 !2Ë
	`e
(7);

473 i‡(
	`ac˚ss
("D1/Y", 7Ë!0Ë
	`e
(8);

474 i‡(
	`rmdú
("D1/Y"Ë!0Ë
	`e
(9);

475 i‡(
	`gë_lök
("D1"Ë!2Ë
	`e
(10);

476 i‡(
	`rmdú
("D1"Ë!0Ë
	`e
(11);

477 
	}
}

479 
	$ã°21i
()

481 
D1_bef‹e
, 
D1_a·î
, 
D2_bef‹e
, 
D2_a·î
, 
x_lök
, 
y_lök
;

484 
subã°
 = 9;

485 i‡(
	`mkdú
("D1", 0777Ë!0Ë
	`e
(1);

486 i‡(
	`mkdú
("D2", 0777Ë!0Ë
	`e
(2);

487 i‡(
	`mkdú
("D1/X", 0777Ë!0Ë
	`e
(3);

488 
D1_bef‹e
 = 
	`gë_lök
("D1");

489 
D2_bef‹e
 = 
	`gë_lök
("D2");

490 
x_lök
 = 
	`gë_lök
("D1/X");

491 i‡(
	`ª«me
("D1/X", "D2/Y"Ë!0Ë
	`e
(4);

492 
y_lök
 = 
	`gë_lök
("D2/Y");

493 
D1_a·î
 = 
	`gë_lök
("D1");

494 
D2_a·î
 = 
	`gë_lök
("D2");

495 i‡(
D1_bef‹e
 !3Ë
	`e
(5);

496 i‡(
D2_bef‹e
 !2Ë
	`e
(6);

497 i‡(
D1_a·î
 !2Ë
	`e
(7);

498 i‡(
D2_a·î
 !3Ë
	`e
(8);

499 i‡(
x_lök
 !2Ë
	`e
(9);

500 i‡(
y_lök
 !2Ë
	`e
(10);

501 i‡(
	`ac˚ss
("D2/Y", 7Ë!0Ë
	`e
(11);

502 i‡(
	`ª«me
("D2/Y", "D1/Z"Ë!0Ë
	`e
(12);

503 i‡(
	`gë_lök
("D1"Ë!3Ë
	`e
(13);

504 i‡(
	`gë_lök
("D2"Ë!2Ë
	`e
(14);

505 i‡(
	`rmdú
("D1/Z"Ë!0Ë
	`e
(15);

506 i‡(
	`gë_lök
("D1"Ë!2Ë
	`e
(16);

507 i‡(
	`rmdú
("D1"Ë!0Ë
	`e
(17);

508 i‡(
	`rmdú
("D2"Ë!0Ë
	`e
(18);

509 
	}
}

511 
	$ã°21k
()

515 
fd
, 
D1_bef‹e
, 
D1_a·î
, 
x_lök
, 
y_lök
;

518 
subã°
 = 10;

519 i‡(
	`mkdú
("D1", 0777Ë!0Ë
	`e
(1);

520 i‡–(
fd
 = 
	`¸ót
("D1/x", 0777)Ë< 0Ë
	`e
(2);

521 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(3);

522 i‡–(
fd
 = 
	`¸ót
("D1/y", 0777)Ë< 0Ë
	`e
(3);

523 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(4);

524 
D1_bef‹e
 = 
	`gë_lök
("D1");

525 
x_lök
 = 
	`gë_lök
("D1/x");

526 i‡(
	`ª«me
("D1/x", "D1/y"Ë!0Ë
	`e
(5);

527 
y_lök
 = 
	`gë_lök
("D1/y");

528 
D1_a·î
 = 
	`gë_lök
("D1");

529 i‡(
D1_bef‹e
 !2Ë
	`e
(6);

530 i‡(
D1_a·î
 !2Ë
	`e
(7);

531 i‡(
x_lök
 !1Ë
	`e
(8);

532 i‡(
y_lök
 !1Ë
	`e
(9);

533 i‡(
	`ac˚ss
("D1/y", 7Ë!0Ë
	`e
(10);

534 i‡(
	`u∆ök
("D1/y"Ë!0Ë
	`e
(11);

535 i‡(
	`rmdú
("D1"Ë!0Ë
	`e
(12);

536 
	}
}

538 
	$ã°21l
()

540 
fd
, 
D1_bef‹e
, 
D1_a·î
, 
D2_bef‹e
, 
D2_a·î
, 
x_lök
, 
y_lök
;

543 
subã°
 = 11;

544 i‡(
	`mkdú
("D1", 0777Ë!0Ë
	`e
(1);

545 i‡(
	`mkdú
("D2", 0777Ë!0Ë
	`e
(2);

546 i‡–(
fd
 = 
	`¸ót
("D1/x", 0777)Ë< 0Ë
	`e
(3);

547 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(4);

548 i‡–(
fd
 = 
	`¸ót
("D2/y", 0777)Ë< 0Ë
	`e
(5);

549 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(6);

550 
D1_bef‹e
 = 
	`gë_lök
("D1");

551 
D2_bef‹e
 = 
	`gë_lök
("D2");

552 
x_lök
 = 
	`gë_lök
("D1/x");

553 i‡(
	`ª«me
("D1/x", "D2/y"Ë!0Ë
	`e
(7);

554 
y_lök
 = 
	`gë_lök
("D2/y");

555 
D1_a·î
 = 
	`gë_lök
("D1");

556 
D2_a·î
 = 
	`gë_lök
("D2");

557 i‡(
D1_bef‹e
 !2Ë
	`e
(8);

558 i‡(
D2_bef‹e
 !2Ë
	`e
(9);

559 i‡(
D1_a·î
 !2Ë
	`e
(10);

560 i‡(
D2_a·î
 !2Ë
	`e
(11);

561 i‡(
x_lök
 !1Ë
	`e
(12);

562 i‡(
y_lök
 !1Ë
	`e
(13);

563 i‡(
	`ac˚ss
("D2/y", 7Ë!0Ë
	`e
(14);

564 i‡(
	`u∆ök
("D2/y"Ë!0Ë
	`e
(15);

565 i‡(
	`rmdú
("D1"Ë!0Ë
	`e
(16);

566 i‡(
	`rmdú
("D2"Ë!0Ë
	`e
(17);

567 
	}
}

569 
	$ã°21m
()

571 
D1_bef‹e
, 
D1_a·î
, 
x_lök
, 
y_lök
;

574 
subã°
 = 12;

575 i‡(
	`mkdú
("D1", 0777Ë!0Ë
	`e
(1);

576 i‡(
	`mkdú
("D1/X", 0777Ë!0Ë
	`e
(2);

577 i‡(
	`mkdú
("D1/Y", 0777Ë!0Ë
	`e
(3);

578 
D1_bef‹e
 = 
	`gë_lök
("D1");

579 
x_lök
 = 
	`gë_lök
("D1/X");

580 i‡(
	`ª«me
("D1/X", "D1/Y"Ë!0Ë
	`e
(4);

581 
y_lök
 = 
	`gë_lök
("D1/Y");

582 
D1_a·î
 = 
	`gë_lök
("D1");

583 i‡(
D1_bef‹e
 !4Ë
	`e
(5);

584 i‡(
D1_a·î
 !3Ë
	`e
(6);

585 i‡(
x_lök
 !2Ë
	`e
(7);

586 i‡(
y_lök
 !2Ë
	`e
(8);

587 i‡(
	`ac˚ss
("D1/Y", 7Ë!0Ë
	`e
(9);

588 i‡(
	`rmdú
("D1/Y"Ë!0Ë
	`e
(10);

589 i‡(
	`gë_lök
("D1"Ë!2Ë
	`e
(11);

590 i‡(
	`rmdú
("D1"Ë!0Ë
	`e
(12);

591 
	}
}

594 
	$ã°21n
()

596 
D1_bef‹e
, 
D1_a·î
, 
D2_bef‹e
, 
D2_a·î
, 
x_lök
, 
y_lök
;

599 
subã°
 = 13;

600 i‡(
	`mkdú
("D1", 0777Ë!0Ë
	`e
(1);

601 i‡(
	`mkdú
("D2", 0777Ë!0Ë
	`e
(2);

602 i‡(
	`mkdú
("D1/X", 0777Ë!0Ë
	`e
(3);

603 i‡(
	`mkdú
("D2/Y", 0777Ë!0Ë
	`e
(4);

604 
D1_bef‹e
 = 
	`gë_lök
("D1");

605 
D2_bef‹e
 = 
	`gë_lök
("D2");

606 
x_lök
 = 
	`gë_lök
("D1/X");

607 i‡(
	`ª«me
("D1/X", "D2/Y"Ë!0Ë
	`e
(5);

608 
y_lök
 = 
	`gë_lök
("D2/Y");

609 
D1_a·î
 = 
	`gë_lök
("D1");

610 
D2_a·î
 = 
	`gë_lök
("D2");

611 i‡(
D1_bef‹e
 !3Ë
	`e
(6);

612 i‡(
D2_bef‹e
 !3Ë
	`e
(7);

613 i‡(
D1_a·î
 !2Ë
	`e
(8);

614 i‡(
D2_a·î
 !3Ë
	`e
(9);

615 i‡(
x_lök
 !2Ë
	`e
(10);

616 i‡(
y_lök
 !2Ë
	`e
(11);

617 i‡(
	`ac˚ss
("D2/Y", 7Ë!0Ë
	`e
(12);

618 i‡(
	`ª«me
("D2/Y", "D1/Z"Ë!0Ë
	`e
(13);

619 i‡(
	`gë_lök
("D1"Ë!3Ë
	`e
(14);

620 i‡(
	`gë_lök
("D2"Ë!2Ë
	`e
(15);

621 i‡(
	`rmdú
("D1/Z"Ë!0Ë
	`e
(16);

622 i‡(
	`gë_lök
("D1"Ë!2Ë
	`e
(17);

623 i‡(
	`rmdú
("D1"Ë!0Ë
	`e
(18);

624 i‡(
	`rmdú
("D2"Ë!0Ë
	`e
(19);

625 
	}
}

628 
	$ã°21o
()

631 
subã°
 = 14;

632 i‡(
	`mkdú
("D1", 0777Ë!0Ë
	`e
(1);

633 i‡(
	`chdú
("D1"Ë!0Ë
	`e
(2);

634 i‡(
	`rmdú
("."Ë=0Ë
	`e
(3);

635 i‡(
	`rmdú
(".."Ë=0Ë
	`e
(4);

636 i‡(
	`mkdú
("D2", 0777Ë!0Ë
	`e
(5);

637 i‡(
	`mkdú
("D3", 0777Ë!0Ë
	`e
(6);

638 i‡(
	`mkdú
("D4", 0777Ë!0Ë
	`e
(7);

639 i‡(
	`rmdú
("D2/../D3/../D4"Ë!0Ë
	`e
(8);

640 i‡(
	`rmdú
("D2/../D3/../D2/.."Ë=0Ë
	`e
(9);

641 i‡(
	`rmdú
("D2/../D3/../D2/../.."Ë=0Ë
	`e
(10);

642 i‡(
	`rmdú
("../D1/../D1/D3"Ë!0Ë
	`e
(11);

643 i‡(
	`rmdú
("./D2/../D2"Ë!0Ë
	`e
(12);

644 i‡(
	`chdú
(".."Ë!0Ë
	`e
(13);

645 i‡(
	`rmdú
("D1"Ë!0Ë
	`e
(14);

646 
	}
}

649 
	$gë_lök
(
«me
)

650 *
«me
;

652 
°©
 
°©buf
;

654 i‡(
	`°©
(
«me
, &
°©buf
) != 0) {

655 
	`¥ötf
("U«bÀÅÿ°© %s\n", 
«me
);

656 
îr˘
++;

659 (
°©buf
.
°_∆ök
);

660 
	}
}

663 
	$e
(
n
)

664 
n
;

666 
îr_num
 = 
î∫o
;

668 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d ", 
subã°
, 
n
, 
î∫o
);

669 
î∫o
 = 
îr_num
;

670 
	`≥º‹
("");

671 i‡(
îr˘
++ > 
MAX_ERROR
) {

672 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

673 
	`chdú
("..");

674 
	`sy°em
("rm -rf DIR*");

675 
	`exô
(1);

677 
	}
}

679 
	$quô
()

681 
	`chdú
("..");

682 
	`sy°em
("rm -rf DIR*");

684 i‡(
îr˘
 == 0) {

685 
	`¥ötf
("ok\n");

686 
	`exô
(0);

688 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

689 
	`exô
(1);

691 
	}
}

	@test22.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/°©.h
>

5 
	~<î∫o.h
>

6 
	~<f˙é.h
>

7 
	~<uni°d.h
>

8 
	~<°dlib.h
>

9 
	~<sys/waô.h
>

10 
	~<°dio.h
>

12 
	#MAX_ERROR
 4

	)

13 
	#ITERATIONS
 2

	)

15 
	#Sy°em
(
cmd
Ëi‡(
	`sy°em
(cmdË!0Ë
	`¥ötf
("``%s'' faûed\n", cmd)

	)

16 
	#Chdú
(
dú
Ëi‡(
	`chdú
(dúË!0Ë
	`¥ötf
("C™'àgŸÿ%s\n", dú)

	)

17 
	#Sèt
(
a
,
b
Ëi‡(
	`°©
◊,bË!0Ë
	`¥ötf
("C™'à°© %s\n",á)

	)

19 
	gîr˘
 = 0;

20 
	gsubã°
 = 1;

22 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

23 
_PROTOTYPE
(
ã°22a
, ());

24 
_PROTOTYPE
(
mode
, (*
fûíame
));

25 
_PROTOTYPE
(
umode
, (*
fûíame
));

26 
_PROTOTYPE
(
e
, (
numbî
));

27 
_PROTOTYPE
(
quô
, ());

29 
	$maö
(
¨gc
, 
¨gv
)

30 
¨gc
;

31 *
¨gv
[];

33 
i
, 
m
 = 0xFFFF;

35 
	`sync
();

36 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

37 
	`¥ötf
("Test 22 ");

38 
	`fÊush
(
°dout
);

39 
	`sy°em
("chmod 777 DIR_22/* DIR_22/*/* > /dev/null 2>&1");

40 
	`Sy°em
("rm -rf DIR_22; mkdir DIR_22");

41 
	`Chdú
("DIR_22");

43 
i
 = 0; i < 
ITERATIONS
; i++) {

44 i‡(
m
 & 0001Ë
	`ã°22a
();

47 
	`quô
();

48 
	}
}

50 
	$ã°22a
()

52 
fd1
, 
fd2
;

53 
i
, 
ﬁdmask
;

54 
°©_loc
;

56 
subã°
 = 1;

58 
	`sy°em
("chmod 777 ../DIR_22/* ../DIR_22/*/* > /dev/null 2>&1");

59 
	`Sy°em
("rm -rf ../DIR_22/*");

61 
ﬁdmask
 = 0123;

62 
	`umask
(
ﬁdmask
);

65 
i
 = 0000; i <= 0777; i++) {

66 i‡(
ﬁdmask
 !
	`umask
(
i
)Ë
	`e
(1);

67 
fd1
 = 
	`›í
("›í", 
O_CREAT
, 0777);

68 i‡(
fd1
 !3Ë
	`e
(2);

69 
fd2
 = 
	`¸ót
("creat", 0777);

70 i‡(
fd2
 !4Ë
	`e
(3);

71 i‡(
	`mkdú
("dú", 0777Ë!0Ë
	`e
(4);

72 i‡(
	`mkfifo
("fifo", 0777Ë!0Ë
	`e
(5);

74 i‡(
	`umode
("›í"Ë!
i
Ë
	`e
(6);

75 i‡(
	`umode
("¸ót"Ë!
i
Ë
	`e
(7);

76 i‡(
	`umode
("dú"Ë!
i
Ë
	`e
(8);

77 i‡(
	`umode
("fifo"Ë!
i
Ë
	`e
(9);

80 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(10);

81 i‡(
	`˛o£
(
fd2
Ë!0Ë
	`e
(11);

82 
	`u∆ök
("open");

83 
	`u∆ök
("creat");

84 
	`rmdú
("dir");

85 
	`u∆ök
("fifo");

86 
ﬁdmask
 = 
i
;

90 i‡(
	`umask
(0124Ë!0777Ë
	`e
(12);

93 i‡(
	`umask
(0000Ë!0124Ë
	`e
(13);

94 
i
 = 0000; i <= 0777; i++) {

95 
fd1
 = 
	`›í
("›í", 
O_CREAT
, 
i
);

96 i‡(
fd1
 !3Ë
	`e
(14);

97 
fd2
 = 
	`¸ót
("¸ót", 
i
);

98 i‡(
fd2
 !4Ë
	`e
(15);

99 i‡(
	`mkdú
("dú", 
i
Ë!0Ë
	`e
(16);

100 i‡(
	`mkfifo
("fifo", 
i
Ë!0Ë
	`e
(17);

102 i‡(
	`mode
("›í"Ë!
i
Ë
	`e
(18);

103 i‡(
	`mode
("¸ót"Ë!
i
Ë
	`e
(19);

104 i‡(
	`mode
("dú"Ë!
i
Ë
	`e
(20);

105 i‡(
	`mode
("fifo"Ë!
i
Ë
	`e
(21);

108 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(22);

109 i‡(
	`˛o£
(
fd2
Ë!0Ë
	`e
(23);

110 i‡(
	`u∆ök
("›í"Ë!0Ë
	`e
(24);

111 
	`u∆ök
("creat");

112 
	`rmdú
("dir");

113 
	`u∆ök
("fifo");

117 i‡(
	`umask
(0124Ë!0000Ë
	`e
(25);

118 
	`f‹k
()) {

119 -1: 
	`Ârötf
(
°dîr
, "Can't fork\n"); ;

121 
	`mkdú
("bar", 0777);

122 
	`exô
(0);

124 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(26);

126 i‡(
	`umode
("b¨"Ë!0124Ë
	`e
(27);

127 
	`rmdú
("bar");

130 
	`f‹k
()) {

131 -1: 
	`Ârötf
(
°dîr
, "Can't fork\n"); ;

133 
	`f‹k
()) {

135 
	`Ârötf
(
°dîr
, "Can't fork\n");

138 i‡(
	`umask
(0432Ë!0124Ë
	`e
(28);

139 
	`exô
(0);

141 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(29);

143 i‡(
	`umask
(0423Ë!0124Ë
	`e
(30);

144 
	`exô
(0);

146 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(31);

148 i‡(
	`umask
(0342Ë!0124Ë
	`e
(32);

151 i‡(
	`umask
(0xFFFFË!0342Ë
	`e
(33);

152 i‡(
	`umask
(0xFE00Ë!0777Ë
	`e
(34);

153 i‡(
	`umask
(01777Ë!0000Ë
	`e
(35);

154 i‡(
	`umask
(0022Ë!0777Ë
	`e
(36);

155 
	}
}

157 
	$mode
(
¨g
)

158 *
¨g
;

160 
°©
 
°
;

161 
	`Sèt
(
¨g
, &
°
);

162  
°
.
°_mode
 & 0777;

163 
	}
}

165 
	$umode
(
¨g
)

166 *
¨g
;

168  0777 ^ 
	`mode
(
¨g
);

169 
	}
}

171 
	$e
(
n
)

172 
n
;

174 
îr_num
 = 
î∫o
;

176 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d: ", 
subã°
, 
n
, 
î∫o
);

177 
î∫o
 = 
îr_num
;

178 
	`≥º‹
("");

179 i‡(
îr˘
++ > 
MAX_ERROR
) {

180 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

181 
	`chdú
("..");

182 
	`sy°em
("rm -rf DIR*");

183 
	`exô
(1);

185 
î∫o
 = 0;

186 
	}
}

189 
	$quô
()

191 
	`Chdú
("..");

192 
	`sy°em
("chmod 777 ../DIR_22/* ../DIR_22/*/* > /dev/null 2>&1");

193 
	`Sy°em
("rm -rf DIR_22");

195 i‡(
îr˘
 == 0) {

196 
	`¥ötf
("ok\n");

197 
	`exô
(0);

199 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

200 
	`exô
(1);

202 
	}
}

	@test23.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/°©.h
>

5 
	~<sys/dú.h
>

6 
	~<limôs.h
>

7 
	~<î∫o.h
>

8 
	~<uni°d.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

11 
	~<f˙é.h
>

12 
	~<°dio.h
>

14 
	#MAX_ERROR
 4

	)

15 
	#ITERATIONS
 3

	)

17 
	#Sy°em
(
cmd
Ëi‡(
	`sy°em
(cmdË!0Ë
	`¥ötf
("``%s'' faûed\n", cmd)

	)

18 
	#Chdú
(
dú
Ëi‡(
	`chdú
(dúË!0Ë
	`¥ötf
("C™'àgŸÿ%s\n", dú)

	)

20 
	gîr˘
;

21 
	gsubã°
;

22 
	gsu≥ru£r
;

24 
	gcwd
[
PATH_MAX
];

25 
	gcwd2
[
PATH_MAX
];

26 
	gbuf
[
PATH_MAX
];

27 
	gMaxName
[
NAME_MAX
 + 1];

28 
	gMaxP©h
[
PATH_MAX
];

29 
	gToL⁄gName
[
NAME_MAX
 + 2];

30 
	gToL⁄gP©h
[
PATH_MAX
 + 1];

32 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

33 
_PROTOTYPE
(
ã°23a
, ());

34 
_PROTOTYPE
(
ã°23b
, ());

35 
_PROTOTYPE
(
ã°23c
, ());

36 
_PROTOTYPE
(
makñ⁄g«mes
, ());

37 
_PROTOTYPE
(*
œ°_ödex
, (*
°rög
, 
ch
));

38 
_PROTOTYPE
(*
my_gëcwd
, (*
buf
, 
size
));

39 
_PROTOTYPE
(
e
, (
numbî
));

40 
_PROTOTYPE
(
quô
, ());

42 
	$maö
(
¨gc
, 
¨gv
)

43 
¨gc
;

44 *
¨gv
[];

46 
i
, 
m
 = 0xFFFF;

48 
	`sync
();

49 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

50 
	`¥ötf
("Test 23 ");

51 
	`fÊush
(
°dout
);

52 
	`Sy°em
("rm -rf DIR_23; mkdir DIR_23");

53 
	`Chdú
("DIR_23");

54 
	`makñ⁄g«mes
();

55 
su≥ru£r
 = (
	`gëeuid
() == 0);

57 
i
 = 0; i < 
ITERATIONS
; i++) {

58 i‡(
m
 & 0001Ë
	`ã°23a
();

59 i‡(
m
 & 0002Ë
	`ã°23b
();

60 i‡(
m
 & 0004Ë
	`ã°23c
();

63 
	`quô
();

64 
	}
}

66 
	$ã°23a
()

68 
i
;

70 
subã°
 = 1;

72 
	`Sy°em
("rm -rf ../DIR_23/*");

75 i‡(
	`gëcwd
(
cwd
, 
PATH_MAX
Ë!cwdË
	`e
(1);

76 i‡(
	`chdú
(
cwd
Ë!0Ë
	`e
(2);

77 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(3);

78 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(4);

79 i‡(
	`chdú
("."Ë!0Ë
	`e
(5);

80 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(6);

81 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(7);

82 i‡(
	`chdú
("./././."Ë!0Ë
	`e
(8);

83 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(9);

84 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(10);

87 
	`Sy°em
("rm -rf foo");

88 i‡(
	`mkdú
("foo", 0777Ë!0Ë
	`e
(11);

91 i‡(
	`chdú
("foo/.././foo/.."Ë!0Ë
	`e
(12);

92 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(13);

93 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(13);

94 i‡(
	`chdú
("foo"Ë!0Ë
	`e
(14);

95 i‡(
	`chdú
(".."Ë!0Ë
	`e
(15);

96 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(16);

97 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(17);

100 
	`Sy°em
("rm -rf bar");

101 
i
 = 0; i < 30; i++) {

102 i‡(
	`mkdú
("b¨", 0777Ë!0Ë
	`e
(18);

103 i‡(
	`chdú
("b¨"Ë!0Ë
	`e
(19);

105 
i
 = 0; i < 30; i++) {

106 i‡(
	`chdú
(".."Ë!0Ë
	`e
(20);

107 i‡(
	`rmdú
("b¨"Ë!0Ë
	`e
(21);

111 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(22);

112 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(23);

113 
	`Sy°em
("rm -rf bar");

116 i‡(
	`chdú
("/"Ë!0Ë
	`e
(24);

117 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(25);

118 i‡(
	`°rcmp
(
buf
, "/"Ë!0Ë
	`e
(26);

119 i‡(
	`chdú
(".."Ë!0Ë
	`e
(27);

120 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(28);

121 i‡(
	`°rcmp
(
buf
, "/"Ë!0Ë
	`e
(29);

122 i‡(
	`chdú
(
cwd
Ë!0Ë
	`e
(30);

123 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(31);

124 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(32);

125 i‡(
	`chdú
("/ëc"Ë!0Ë
	`e
(33);

126 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(34);

127 i‡(
	`°rcmp
(
buf
, "/ëc"Ë!0Ë
	`e
(35);

128 i‡(
	`chdú
(
cwd
Ë!0Ë
	`e
(36);

129 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(37);

130 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(38);

131 i‡(
	`chdú
(".//.//"Ë!0Ë
	`e
(39);

132 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(40);

133 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(41);

134 #ifde‡
_MINIX


139 i‡(
	`my_gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(42);

140 i‡(
	`°rcmp
(
cwd
, 
buf
Ë!0Ë
	`e
(43);

142 
	`Sy°em
("rm -rf foo");

143 
	}
}

145 
	$ã°23b
()

147 
subã°
 = 2;

149 
	`Sy°em
("rm -rf ../DIR_23/*");

152 i‡(
	`gëcwd
(
cwd
, 
PATH_MAX
Ë!cwdË
	`e
(1);

153 i‡(
	`gëcwd
(
buf
, 
	`°æí
(
cwd
)Ë!(*Ë0Ë
	`e
(2);

154 i‡(
î∫o
 !
ERANGE
Ë
	`e
(3);

155 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(4);

156 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(5);

157 
	`Chdú
(
cwd
);

158 i‡(
	`gëcwd
(
buf
, 
	`°æí
(
cwd
Ë+ 1Ë!bufË
	`e
(6);

159 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(7);

160 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(8);

163 i‡(
	`mkdú
(
MaxName
, 0777Ë!0Ë
	`e
(9);

164 i‡(
	`chdú
(
MaxName
Ë!0Ë
	`e
(10);

165 i‡(
	`chdú
(".."Ë!0Ë
	`e
(11);

166 i‡(
	`rmdú
(
MaxName
Ë!0Ë
	`e
(12);

167 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(13);

168 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(14);

169 i‡(
	`chdú
(
MaxP©h
Ë!0Ë
	`e
(15);

170 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(16);

171 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(17);

173 i‡(
	`chdú
(
ToL⁄gName
Ë!-1Ë
	`e
(18);

174 #ifde‡
_POSIX_NO_TRUNC


175 #i‡
_POSIX_NO_TRUNC
 - 0 != -1

176 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(20);

178 i‡(
î∫o
 !
ENOENT
Ë
	`e
(20);

181 
	~"îr‹,Åhi†ˇ£Ñequúe†dy«mi¯check†™d i†nŸ h™dÀd
"

184 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(21);

185 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(22);

186 i‡(
	`chdú
(
ToL⁄gP©h
Ë!-1Ë
	`e
(23);

187 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(24);

188 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(25);

189 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(26);

190 
	}
}

192 
	$ã°23c
()

194 
subã°
 = 3;

196 
	`Sy°em
("rm -rf ../DIR_23/*");

198 i‡(
	`gëcwd
(
cwd
, 
PATH_MAX
Ë!cwdË
	`e
(1);

201 
	`Sy°em
("rm -rf foo; mkdir foo");

204 i‡(
	`chdú
(""Ë!-1Ë
	`e
(2);

205 i‡(
î∫o
 !
ENOENT
Ë
	`e
(3);

206 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(4);

207 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(5);

208 i‡(
	`gëcwd
(
buf
, 0Ë!(*Ë0Ë
	`e
(6);

209 i‡(
î∫o
 !
EINVAL
Ë
	`e
(7);

210 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(8);

211 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(9);

212 i‡(
	`gëcwd
(
buf
, 0Ë!(*Ë0Ë
	`e
(10);

213 i‡(
î∫o
 !
EINVAL
Ë
	`e
(11);

214 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(12);

215 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(13);

216 i‡(
	`chdú
(
cwd
Ë!0Ë
	`e
(14);

219 i‡(
	`chdú
("foo"Ë!0Ë
	`e
(15);

220 i‡(
	`mkdú
("b¨", 0777Ë!0Ë
	`e
(16);

221 i‡(
	`gëcwd
(
cwd2
, 
PATH_MAX
Ë!cwd2Ë
	`e
(17);

222 i‡(
	`gëcwd
(
buf
, 3Ë!(*Ë0Ë
	`e
(18);

223 i‡(
î∫o
 !
ERANGE
Ë
	`e
(19);

224 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(20);

225 i‡(
	`°rcmp
(
buf
, 
cwd2
Ë!0Ë
	`e
(21);

226 
	`Chdú
(
cwd2
);

227 
	`Sy°em
("chmod 377 .");

228 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(22);

229 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(23);

230 i‡(
	`°rcmp
(
buf
, 
cwd2
Ë!0Ë
	`e
(24);

231 i‡(
	`chdú
("b¨"Ë!0Ë
	`e
(25);

232 i‡(!
su≥ru£r
) {

233 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!(*Ë0Ë
	`e
(26);

234 i‡(
î∫o
 !
EACCES
Ë
	`e
(27);

236 i‡(
su≥ru£r
) {

237 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(28);

239 i‡(
	`chdú
(
cwd2
Ë!0Ë
	`e
(29);

240 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(30);

241 i‡(
	`°rcmp
(
buf
, 
cwd2
Ë!0Ë
	`e
(31);

242 
	`Sy°em
("chmod 677 .");

243 i‡(!
su≥ru£r
) {

244 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!(*Ë0Ë
	`e
(32);

245 i‡(
î∫o
 !
EACCES
Ë
	`e
(33);

246 i‡(
	`chdú
(".."Ë!-1Ë
	`e
(34);

247 i‡(
î∫o
 !
EACCES
Ë
	`e
(35);

248 i‡(
	`chdú
(
cwd
Ë!0Ë
	`e
(36);

250 i‡(
	`chdú
("foo/.."Ë!-1Ë
	`e
(37);

251 i‡(
	`chdú
("foo"Ë!-1Ë
	`e
(38);

252 i‡(
î∫o
 !
EACCES
Ë
	`e
(39);

253 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(40);

254 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(41);

256 i‡(
su≥ru£r
) {

257 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(42);

258 i‡(
	`°rcmp
(
buf
, 
cwd2
Ë!0Ë
	`e
(43);

259 i‡(
	`chdú
(".."Ë!0Ë
	`e
(44);

260 i‡(
	`chdú
("foo"Ë!0Ë
	`e
(45);

261 i‡(
	`chdú
(
cwd
Ë!0Ë
	`e
(46);

263 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(47);

264 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(48);

265 
	`Chdú
(
cwd
);

267 i‡(
	`chdú
("/ëc/∑sswd"Ë!-1Ë
	`e
(49);

268 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(50);

269 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(51);

270 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(52);

271 i‡(
	`chdú
("/nŸexi°"Ë!-1Ë
	`e
(53);

272 i‡(
î∫o
 !
ENOENT
Ë
	`e
(54);

273 i‡(
	`gëcwd
(
buf
, 
PATH_MAX
Ë!bufË
	`e
(55);

274 i‡(
	`°rcmp
(
buf
, 
cwd
Ë!0Ë
	`e
(56);

275 
	`Sy°em
("chmod 777 foo");

276 i‡(
	`chdú
("foo"Ë!0Ë
	`e
(57);

292 i‡(
	`chdú
(
cwd
Ë!0Ë
	`e
(58);

293 
	}
}

296 
	$makñ⁄g«mes
()

298 
i
;

300 
	`mem£t
(
MaxName
, 'a', 
NAME_MAX
);

301 
MaxName
[
NAME_MAX
] = '\0';

302 
i
 = 0; i < 
PATH_MAX
 - 1; i++) {

303 
MaxP©h
[
i
++] = '.';

304 
MaxP©h
[
i
] = '/';

306 
MaxP©h
[
PATH_MAX
 - 1] = '\0';

308 
	`°r˝y
(
ToL⁄gName
, 
MaxName
);

309 
	`°r˝y
(
ToL⁄gP©h
, 
MaxP©h
);

311 
ToL⁄gName
[
NAME_MAX
] = 'a';

312 
ToL⁄gName
[
NAME_MAX
 + 1] = '\0';

313 
ToL⁄gP©h
[
PATH_MAX
 - 1] = '/';

314 
ToL⁄gP©h
[
PATH_MAX
] = '\0';

315 
	}
}

321 *
	$œ°_ödex
(
°rög
, 
ch
)

322 *
°rög
;

323 
ch
;

325 *
ªtvÆ
 = '\0';

327 *
°rög
 != '\0') {

328 i‡(*
°rög
 =
ch
Ë
ªtvÆ
 = string;

329 
°rög
++;

331 (
ªtvÆ
);

332 
	}
}

335 *
	$my_gëcwd
(
buf
, 
size
)

336 *
buf
;

337 
size
;

339 
sd
;

340 
fd
;

341 *
n
;

342 
«me
[128];

343 
°©
 
s
, 
°
, 
sk
;

344 
dúe˘
 
d
;

346 i‡(
size
 <= 0) (*) 0;

348 *
buf
 = '\0';

349 *
«me
 = '\0';

350 
	`°©
(".", &
s
);

352 i‡((
fd
 = 
	`›í
("..", 
O_RDONLY
)) < 0) (*) 0;

353 
°
.
°_dev
 = 
s
.st_dev;

354 
°
.
°_öo
 = 
s
.st_ino;

355 
	`°©
("..", &
s
);

356 
	`Chdú
("..");

357 
sd
 = (
dúe˘
);

358 i‡(
s
.
°_dev
 =
°
.st_dev) {

360 i‡(
	`ªad
(
fd
, (*Ë&
d
, 
sd
) < sd) (*) 0;

361 } 
d
.
d_öo
 !
°
.
°_öo
);

364 i‡(
	`ªad
(
fd
, (*Ë&
d
, 
sd
) < sd) (*) 0;

365 
	`°©
(
d
.
d_«me
, &
sk
);

366 } (
sk
.
°_dev
 !
°
.st_dev) ||

367 (
sk
.
°_öo
 !
°
.st_ino));

369 
	`˛o£
(
fd
);

370 i‡(
	`°rcmp
(".", 
d
.
d_«me
) != 0) {

371 
	`°rˇt
(
«me
, "/");

372 
	`°rˇt
(
«me
, 
d
.
d_«me
);

374 } (
s
.
°_öo
 !
°
.°_öoË|| (s.
°_dev
 != st.st_dev));

375 i‡(*
«me
 == '\0')

376 
	`°∫ˇt
(
buf
, "/", 
size
);

378 (
n
 = 
	`œ°_ödex
(
«me
, '/')Ë!
NULL
) {

379 
n
[
NAME_MAX
] = '\0';

380 
	`°∫ˇt
(
buf
, 
n
, 
size
 - 
	`°æí
(buf));

381 *
n
 = '\0';

383 
	`°∫ˇt
(
buf
, 
«me
, 
size
 - 
	`°æí
(buf));

384 
buf
[
size
 - 1] = '\0';

385 
	`Chdú
(
buf
);

386  
buf
;

387 
	}
}

390 
	$e
(
n
)

391 
n
;

393 
îr_num
 = 
î∫o
;

395 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d: ", 
subã°
, 
n
, 
î∫o
);

396 
î∫o
 = 
îr_num
;

397 
	`≥º‹
("");

398 i‡(
îr˘
++ > 
MAX_ERROR
) {

399 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

400 
	`chdú
("..");

401 
	`sy°em
("rm -rf DIR*");

402 
	`exô
(1);

404 
î∫o
 = 0;

405 
	}
}

408 
	$quô
()

410 
	`Chdú
("..");

411 
	`Sy°em
("rm -rf DIR_23");

413 i‡(
îr˘
 == 0) {

414 
	`¥ötf
("ok\n");

415 
	`exô
(0);

417 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

418 
	`exô
(1);

420 
	}
}

	@test24.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/°©.h
>

5 
	~<sys/waô.h
>

6 
	~<°rög.h
>

7 
	~<°dlib.h
>

8 
	~<uni°d.h
>

9 
	~<limôs.h
>

10 
	~<f˙é.h
>

11 
	~<dúít.h
>

12 
	~<î∫o.h
>

13 
	~<time.h
>

14 
	~<°dio.h
>

16 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

17 
_PROTOTYPE
(
chk_dú
, (
DIR
 * 
dú≤å
));

18 
_PROTOTYPE
(
ã°24a
, ());

19 
_PROTOTYPE
(
ã°24b
, ());

20 
_PROTOTYPE
(
ã°24c
, ());

21 
_PROTOTYPE
(
makñ⁄g«mes
, ());

22 
_PROTOTYPE
(
e
, (
numbî
));

23 
_PROTOTYPE
(
quô
, ());

25 
	#OVERFLOW_DIR_NR
 (
OPEN_MAX
 + 1)

	)

26 
	#MAX_ERROR
 4

	)

27 
	#ITERATIONS
 5

	)

29 
	#DIRENT0
 ((
dúít
 *Ë
NULL
)

	)

30 
	#Sy°em
(
cmd
Ëi‡(
	`sy°em
(cmdË!0Ë
	`¥ötf
("``%s'' faûed\n", cmd)

	)

31 
	#Chdú
(
dú
Ëi‡(
	`chdú
(dúË!0Ë
	`¥ötf
("C™'àgŸÿ%s\n", dú)

	)

33 
	gîr˘
 = 0;

34 
	gsubã°
 = 1;

35 
	gsu≥ru£r
;

37 
	gMaxName
[
NAME_MAX
 + 1];

38 
	gMaxP©h
[
PATH_MAX
];

39 
	gToL⁄gName
[
NAME_MAX
 + 2];

40 
	gToL⁄gP©h
[
PATH_MAX
 + 1];

43 
	$maö
(
¨gc
, 
¨gv
)

44 
¨gc
;

45 *
¨gv
[];

47 
i
, 
m
 = 0xFFFF;

49 
	`sync
();

50 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

51 
	`¥ötf
("Test 24 ");

52 
	`fÊush
(
°dout
);

53 
	`Sy°em
("rm -rf DIR_24; mkdir DIR_24");

54 
	`Chdú
("DIR_24");

55 
	`makñ⁄g«mes
();

56 
su≥ru£r
 = (
	`gëeuid
() == 0);

58 
i
 = 0; i < 
ITERATIONS
; i++) {

59 i‡(
m
 & 0001Ë
	`ã°24a
();

60 i‡(
m
 & 0002Ë
	`ã°24b
();

61 i‡(
m
 & 0004Ë
	`ã°24c
();

63 
	`quô
();

64 
	}
}

66 
	$ã°24a
()

68 
fd3
, 
fd4
, 
fd5
;

69 
DIR
 *
dúp
;

70 
j
, 
ªt
, 
fd
, 
Êags
;

71 
°©
 
°1
, 
°2
;

72 
°©_loc
;

73 
time_t
 
time1
;

75 
subã°
 = 1;

77 
	`Sy°em
("rm -rf ../DIR_24/*");

79 i‡((
fd
 = 
	`dup
(0)Ë!3Ë
	`e
(1);

80 
	`˛o£
(
fd
);

81 
dúp
 = 
	`›ídú
("/");

82 i‡(
dúp
 =((
DIR
 *Ë
NULL
)Ë
	`e
(2);

83 i‡((
fd
 = 
	`dup
(0)Ë<2Ë
	`e
(3);

84 i‡(
fd
 > 3) {

85 
Êags
 = 
	`f˙é
(3, 
F_GETFD
);

86 i‡(!(
Êags
 & 
FD_CLOEXEC
)Ë
	`e
(4);

88 
	`˛o£
(
fd
);

89 
ªt
 = 
	`˛o£dú
(
dúp
);

90 i‡(
ªt
 =-1Ë
	`e
(5);

91 i‡(
ªt
 !0Ë
	`e
(6);

92 i‡((
fd
 = 
	`dup
(0)Ë!3Ë
	`e
(7);

93 
	`˛o£
(
fd
);

95 
	`Sy°em
("rm -rf foo; mkdir foo");

96 
	`Chdú
("foo");

97 
	`Sy°em
("touch f1 f2 f3 f4 f5");

98 
	`Sy°em
("rm f[24]");

99 
	`Chdú
("..");

101 i‡((
dúp
 = 
	`›ídú
("foo")Ë=((
DIR
 *Ë
NULL
)Ë
	`e
(8);

102 
	`chk_dú
(
dúp
);

103 
j
 = 0; j < 10; j++) {

104 
î∫o
 = 
j
 * 47 % 7;

105 i‡(
	`ªaddú
(
dúp
Ë!
DIRENT0
Ë
	`e
(9);

106 i‡(
î∫o
 !
j
 * 47 % 7Ë
	`e
(10);

108 
	`ªwöddú
(
dúp
);

109 
	`chk_dú
(
dúp
);

110 
j
 = 0; j < 10; j++) {

111 
î∫o
 = 
j
 * 23 % 7;

112 i‡(
	`ªaddú
(
dúp
Ë!
DIRENT0
Ë
	`e
(11);

113 i‡(
î∫o
 !
j
 * 23 % 7Ë
	`e
(12);

115 i‡((
fd4
 = 
	`¸ót
("foo/f4", 0666)Ë<2Ë
	`e
(13);

116 
	`Sy°em
("rm foo/f4");

117 
	`ªwöddú
(
dúp
);

118 i‡((
fd3
 = 
	`›í
("foo/f3", 
O_WRONLY
)Ë<2Ë
	`e
(14);

119 i‡((
fd5
 = 
	`›í
("foo/f5", 
O_WRONLY
)Ë<2Ë
	`e
(15);

120 i‡(
	`wrôe
(
fd3
, "Hñlo", 6Ë!6Ë
	`e
(16);

121 i‡(
	`wrôe
(
fd4
, "Hñlo", 6Ë!6Ë
	`e
(17);

122 i‡(
	`˛o£
(
fd5
Ë!0Ë
	`e
(18);

123 
	`chk_dú
(
dúp
);

124 
j
 = 0; j < 10; j++) {

125 
î∫o
 = 
j
 * 101 % 7;

126 i‡(
	`ªaddú
(
dúp
Ë!
DIRENT0
Ë
	`e
(19);

127 i‡(
î∫o
 !
j
 * 101 % 7Ë
	`e
(20);

129 i‡(
	`˛o£
(
fd4
Ë!0Ë
	`e
(21);

130 i‡(
	`˛o£
(
fd3
Ë!0Ë
	`e
(22);

131 i‡(
	`˛o£dú
(
dúp
Ë!0Ë
	`e
(23);

133 
	`Chdú
("foo");

134 i‡((
dúp
 = 
	`›ídú
(".//")Ë=((
DIR
 *Ë
NULL
)Ë
	`e
(24);

135 
	`Chdú
("..");

136 
	`chk_dú
(
dúp
);

137 
j
 = 0; j < 10; j++) {

138 
î∫o
 = (
j
 * 101) % 7;

139 i‡(
	`ªaddú
(
dúp
Ë!
DIRENT0
Ë
	`e
(25);

140 i‡(
î∫o
 !(
j
 * 101Ë% 7Ë
	`e
(26);

143 i‡(
	`˛o£dú
(
dúp
Ë!0Ë
	`e
(27);

145 
	`°©
("foo", &
°1
);

146 
	`time
(&
time1
);

147 
time1
 >
	`time
((
time_t
 *)0))

149 i‡((
dúp
 = 
	`›ídú
("foo")Ë=((
DIR
 *Ë
NULL
)Ë
	`e
(28);

150 i‡(
	`ªaddú
(
dúp
Ë=
DIRENT0
Ë
	`e
(29);

151 
	`°©
("foo", &
°2
);

152 i‡(
°1
.
°_©ime
 > 
°2
.°_©imeË
	`e
(30);

154 
	`f‹k
()) {

155 -1: 
	`¥ötf
("Can't fork\n"); ;

157 
	`ªwöddú
(
dúp
);

158 i‡(
	`ªaddú
(
dúp
Ë=
DIRENT0
Ë
	`e
(31);

159 i‡(
	`˛o£dú
(
dúp
Ë!0Ë
	`e
(32);

160 
	`exô
(0);

162 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(33);

165 i‡(
	`˛o£dú
(
dúp
Ë!0Ë
	`e
(34);

166 
	}
}

169 
	$ã°24b
()

175 
i
, 
j
;

176 
DIR
 *
dúp
[
OVERFLOW_DIR_NR
], *
dp
;

177 
dúít
 *
dï
, *
dï1
, *
dï2
;

178 
«me
[
NAME_MAX
 + 2];

179 
dŸ
 = 0, 
dŸdŸ
 = 0;

181 
subã°
 = 2;

183 
	`Sy°em
("rm -rf ../DIR_24/*");

185 
i
 = 0; i < 
OVERFLOW_DIR_NR
; i++) {

186 
dúp
[
i
] = 
	`›ídú
("/");

187 i‡(
dúp
[
i
] =((
DIR
 *Ë
NULL
)) {

188 i‡(
î∫o
 !
EMFILE
Ë
	`e
(1);

192 i‡(
i
 <4Ë
	`e
(2);

193 i‡(
i
 >
OVERFLOW_DIR_NR
Ë
	`e
(3);

194 
j
 = 0; j < 
i
; j++) {

195 i‡(
	`˛o£dú
(
dúp
[(
j
 + 5Ë% 
i
]Ë!0Ë
	`e
(4);

199 
	`Sy°em
("rm -rf foo; mkdir foo");

200 
	`Chdú
("foo");

201 
«me
[0] = 0;

202 
i
 = 0; i <
NAME_MAX
; i++) {

203 i‡(
	`°rˇt
(
«me
, "X"Ë!«meË
	`e
(5);

204 
	`˛o£
(
	`¸ót
(
«me
, 0666));

206 
	`Chdú
("..");

208 i‡((
dp
 = 
	`›ídú
("foo")Ë=((
DIR
 *Ë
NULL
)Ë
	`e
(6);

209 (
dï
 = 
	`ªaddú
(
dp
)Ë!
DIRENT0
) {

210 i‡(
	`°rcmp
("..", 
dï
->
d_«me
) == 0)

211 
dŸdŸ
++;

212 i‡(
	`°rcmp
(".", 
dï
->
d_«me
) == 0)

213 
dŸ
++;

215 
«me
[
	`°æí
(
dï
->
d_«me
)] += 1;

217 i‡(
	`˛o£dú
(
dp
Ë!0Ë
	`e
(7);

218 
i
 = 1; i <
NAME_MAX
; i++) {

219 i‡(
«me
[
i
] !'Y'Ë
	`e
(8);

223 i‡(
«me
[0] !'X'Ë
	`e
(9);

224 i‡(
«me
[
NAME_MAX
 + 1] !'\0'Ë
	`e
(10);

227 i‡((
dúp
[1] = 
	`›ídú
("foo")Ë=((
DIR
 *Ë
NULL
)Ë
	`e
(11);

228 i‡((
dúp
[2] = 
	`›ídú
("foo")Ë=((
DIR
 *Ë
NULL
)Ë
	`e
(12);

229 i‡((
dï1
 = 
	`ªaddú
(
dúp
[1])Ë=
DIRENT0
Ë
	`e
(13);

230 i‡((
dï2
 = 
	`ªaddú
(
dúp
[2])Ë=
DIRENT0
Ë
	`e
(14);

231 i‡(
dï1
->
d_«me
 =
dï2
->d_«meË
	`e
(15);

232 
	`°r˝y
(
«me
, 
dï2
->
d_«me
);

233 i‡(
	`°rcmp
(
dï1
->
d_«me
, 
«me
Ë!0Ë
	`e
(16);

234 i‡((
dï1
 = 
	`ªaddú
(
dúp
[1])Ë=
DIRENT0
Ë
	`e
(17);

235 i‡((
dï1
 = 
	`ªaddú
(
dúp
[1])Ë=
DIRENT0
Ë
	`e
(18);

236 i‡((
dï1
 = 
	`ªaddú
(
dúp
[1])Ë=
DIRENT0
Ë
	`e
(19);

237 i‡(
dï1
->
d_«me
 =
dï2
->d_«meË
	`e
(20);

238 i‡(
	`°rcmp
(
dï2
->
d_«me
, 
«me
Ë!0Ë
	`e
(21);

239 
	`ªwöddú
(
dúp
[1]);

240 i‡((
dï2
 = 
	`ªaddú
(
dúp
[2])Ë=
DIRENT0
Ë
	`e
(22);

241 i‡(
	`°rcmp
(
dï2
->
d_«me
, 
«me
Ë=0Ë
	`e
(23);

242 i‡(
	`˛o£dú
(
dúp
[1]Ë!0Ë
	`e
(24);

243 i‡((
dï2
 = 
	`ªaddú
(
dúp
[2])Ë=
DIRENT0
Ë
	`e
(25);

244 i‡(
	`°rcmp
(
dï2
->
d_«me
, 
«me
Ë=0Ë
	`e
(26);

245 i‡(
	`˛o£dú
(
dúp
[2]Ë!0Ë
	`e
(27);

246 
	}
}

249 
	$ã°24c
()

253 
DIR
 *
dúp
;

255 
subã°
 = 3;

257 
	`Sy°em
("rm -rf ../DIR_24/*");

259 i‡(
	`›ídú
("foo/b¨/n⁄o"Ë!((
DIR
 *Ë
NULL
)Ë
	`e
(1);

260 i‡(
î∫o
 !
ENOENT
Ë
	`e
(2);

261 
	`Sy°em
("mkdir foo; chmod 677 foo");

262 i‡(
	`›ídú
("foo/b¨/n⁄o"Ë!((
DIR
 *Ë
NULL
)Ë
	`e
(3);

263 i‡(
su≥ru£r
) {

264 i‡(
î∫o
 !
ENOENT
Ë
	`e
(4);

265 
	`Sy°em
("chmod 377 foo");

266 i‡((
dúp
 = 
	`›ídú
("foo")Ë=((
DIR
 *Ë
NULL
)Ë
	`e
(5);

267 i‡(
	`˛o£dú
(
dúp
Ë!0Ë
	`e
(6);

269 i‡(!
su≥ru£r
) {

270 i‡(
î∫o
 !
EACCES
Ë
	`e
(7);

271 
	`Sy°em
("chmod 377 foo");

272 i‡(
	`›ídú
("foo"Ë!((
DIR
 *Ë
NULL
)Ë
	`e
(8);

274 
	`Sy°em
("chmod 777 foo");

276 i‡(
	`mkdú
(
MaxName
, 0777Ë!0Ë
	`e
(9);

277 i‡((
dúp
 = 
	`›ídú
(
MaxName
)Ë=((
DIR
 *Ë
NULL
)Ë
	`e
(10);

278 i‡(
	`˛o£dú
(
dúp
Ë!0Ë
	`e
(11);

279 i‡(
	`rmdú
(
MaxName
Ë!0Ë
	`e
(12);

280 i‡((
dúp
 = 
	`›ídú
(
MaxP©h
)Ë=((
DIR
 *Ë
NULL
)Ë
	`e
(13);

281 i‡(
	`˛o£dú
(
dúp
Ë!0Ë
	`e
(14);

283 i‡(
	`˛o£dú
(
dúp
Ë!-1Ë
	`e
(15);

284 i‡(
	`˛o£dú
(
dúp
Ë!-1Ë
	`e
(16);

286 i‡(
	`›ídú
(
ToL⁄gName
Ë!((
DIR
 *Ë
NULL
)Ë
	`e
(17);

287 #ifde‡
_POSIX_NO_TRUNC


288 #i‡
_POSIX_NO_TRUNC
 - 0 != -1

289 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(18);

291 i‡(
î∫o
 !
ENOENT
Ë
	`e
(19);

294 
	~"îr‹,Åhi†ˇ£Ñequúe†dy«mi¯check†™d i†nŸ h™dÀd
"

296 i‡(
	`›ídú
(
ToL⁄gP©h
Ë!((
DIR
 *Ë
NULL
)Ë
	`e
(20);

297 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(21);

298 
	`Sy°em
("touch foo/abc");

299 i‡(
	`›ídú
("foo/abc"Ë!((
DIR
 *Ë
NULL
)Ë
	`e
(22);

300 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(23);

301 
	}
}

303 
	$chk_dú
(
dúp
)

304 
DIR
 *
dúp
;

306 
f1
 = 0, 
f2
 = 0, 
f3
 = 0, 
f4
 = 0, 
f5
 = 0,

307 
Ÿhî
 = 0, 
dŸ
 = 0, 
dŸdŸ
 = 0;

308 
i
;

309 
dúít
 *
dï
;

310 *
‚ame
;

311 
ﬁdsubã°
 = 
subã°
;

313 
subã°
 = 4;

315 
i
 = 0; i < 5; i++) {

316 
dï
 = 
	`ªaddú
(
dúp
);

317 i‡(
dï
 =
DIRENT0
) {

318 i‡(
dï
 =
DIRENT0
Ë
	`e
(1);

321 
‚ame
 = 
dï
->
d_«me
;

322 i‡(
	`°rcmp
(
‚ame
, ".") == 0)

323 
dŸ
++;

324 i‡(
	`°rcmp
(
‚ame
, "..") == 0)

325 
dŸdŸ
++;

326 i‡(
	`°rcmp
(
‚ame
, "f1") == 0)

327 
f1
++;

328 i‡(
	`°rcmp
(
‚ame
, "f2") == 0)

329 
f2
++;

330 i‡(
	`°rcmp
(
‚ame
, "f3") == 0)

331 
f3
++;

332 i‡(
	`°rcmp
(
‚ame
, "f4") == 0)

333 
f4
++;

334 i‡(
	`°rcmp
(
‚ame
, "f5") == 0)

335 
f5
++;

337 
Ÿhî
++;

340 i‡(
dŸ
 !1Ë
	`e
(2);

341 i‡(
dŸdŸ
 !1Ë
	`e
(3);

342 i‡(
f1
 !1Ë
	`e
(4);

343 i‡(
f3
 !1Ë
	`e
(5);

344 i‡(
f5
 !1Ë
	`e
(6);

345 i‡(
f2
 !0Ë
	`e
(7);

346 i‡(
f4
 !0Ë
	`e
(8);

347 i‡(
Ÿhî
 !0Ë
	`e
(9);

349 
subã°
 = 
ﬁdsubã°
;

350 
	}
}

353 
	$makñ⁄g«mes
()

355 
i
;

357 
	`mem£t
(
MaxName
, 'a', 
NAME_MAX
);

358 
MaxName
[
NAME_MAX
] = '\0';

359 
i
 = 0; i < 
PATH_MAX
 - 1; i++) {

360 
MaxP©h
[
i
++] = '.';

361 
MaxP©h
[
i
] = '/';

363 
MaxP©h
[
PATH_MAX
 - 1] = '\0';

365 
	`°r˝y
(
ToL⁄gName
, 
MaxName
);

366 
	`°r˝y
(
ToL⁄gP©h
, 
MaxP©h
);

368 
ToL⁄gName
[
NAME_MAX
] = 'a';

369 
ToL⁄gName
[
NAME_MAX
 + 1] = '\0';

370 
ToL⁄gP©h
[
PATH_MAX
 - 1] = '/';

371 
ToL⁄gP©h
[
PATH_MAX
] = '\0';

372 
	}
}

375 
	$e
(
n
)

376 
n
;

378 
îr_num
 = 
î∫o
;

380 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d: ", 
subã°
, 
n
, 
î∫o
);

381 
î∫o
 = 
îr_num
;

382 
	`≥º‹
("");

383 i‡(
îr˘
++ > 
MAX_ERROR
) {

384 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

385 
	`chdú
("..");

386 
	`sy°em
("rm -rf DIR*");

387 
	`exô
(1);

389 
î∫o
 = 0;

390 
	}
}

393 
	$quô
()

395 
	`Chdú
("..");

396 
	`Sy°em
("rm -rf DIR_24");

398 i‡(
îr˘
 == 0) {

399 
	`¥ötf
("ok\n");

400 
	`exô
(0);

402 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

403 
	`exô
(1);

405 
	}
}

	@test25.c

7 
	~<sys/ty≥s.h
>

8 
	~<sys/°©.h
>

9 
	~<sys/waô.h
>

10 
	~<°dlib.h
>

11 
	~<uni°d.h
>

12 
	~<°rög.h
>

13 
	~<f˙é.h
>

14 
	~<limôs.h
>

15 
	~<î∫o.h
>

16 
	~<time.h
>

17 
	~<°dio.h
>

19 
	#MAX_ERROR
 4

	)

20 
	#ITERATIONS
 2

	)

22 
	#Sy°em
(
cmd
Ëi‡(
	`sy°em
(cmdË!0Ë
	`¥ötf
("``%s'' faûed\n", cmd)

	)

23 
	#Chdú
(
dú
Ëi‡(
	`chdú
(dúË!0Ë
	`¥ötf
("C™'àgŸÿ%s\n", dú)

	)

24 
	#Sèt
(
a
,
b
Ëi‡(
	`°©
◊,bË!0Ë
	`¥ötf
("C™'à°© %s\n",á)

	)

25 
	#Cª©
(
f
Ëi‡(
	`˛o£
(
	`¸ót
(f,0777))!=0Ë
	`¥ötf
("C™'à¸óà%s\n",f)

	)

27 
	gîr˘
 = 0;

28 
	gsubã°
 = 1;

29 
	gsu≥ru£r
;

30 
	gMaxName
[
NAME_MAX
 + 1];

31 
	gMaxP©h
[
PATH_MAX
];

32 
	gToL⁄gName
[
NAME_MAX
 + 2];

33 
	gToL⁄gP©h
[
PATH_MAX
 + 1];

35 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

36 
_PROTOTYPE
(
ã°25a
, ());

37 
_PROTOTYPE
(
ã°25b
, ());

38 
_PROTOTYPE
(
ã°25c
, ());

39 
_PROTOTYPE
(
ã°25d
, ());

40 
_PROTOTYPE
(
ã°25e
, ());

41 
_PROTOTYPE
(
makñ⁄g«mes
, ());

42 
_PROTOTYPE
(
e
, (
numbî
));

43 
_PROTOTYPE
(
quô
, ());

45 
	$maö
(
¨gc
, 
¨gv
)

46 
¨gc
;

47 *
¨gv
[];

49 
i
, 
m
 = 0xFFFF;

51 
	`sync
();

52 i‡(
	`gëeuid
(Ë=0 || 
	`gëuid
() == 0) {

53 
	`¥ötf
("Test 25 cannotÑunásÑoot;Åestáborted\n");

54 
	`exô
(1);

57 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

58 
	`¥ötf
("Test 25 ");

59 
	`fÊush
(
°dout
);

60 
	`Sy°em
("rm -rf DIR_25; mkdir DIR_25");

61 
	`Chdú
("DIR_25");

62 
	`makñ⁄g«mes
();

63 
su≥ru£r
 = (
	`gëeuid
() == 0);

66 
i
 = 3; i < 100; i++Ë
	`˛o£
(i);

68 
i
 = 0; i < 
ITERATIONS
; i++) {

69 i‡(
m
 & 001Ë
	`ã°25a
();

70 i‡(
m
 & 002Ë
	`ã°25b
();

71 i‡(
m
 & 004Ë
	`ã°25c
();

72 i‡(
m
 & 010Ë
	`ã°25d
();

73 i‡(
m
 & 020Ë
	`ã°25e
();

75 
	`quô
();

76 
	}
}

78 
	$ã°25a
()

80 
subã°
 = 1;

82 
	#EXCLUDE
(
a
,
b
Ë((◊)^(b)Ë=(◊)|(b)))

	)

83 
	#ADDIT
 (
O_APPEND
 | 
O_CREAT
 | 
O_EXCL
 | 
O_NONBLOCK
 | 
O_TRUNC
)

	)

86 i‡(!(
	`EXCLUDE
(
O_NONBLOCK
, 
O_TRUNC
))Ë
	`e
(1);

87 i‡(!(
	`EXCLUDE
(
O_EXCL
, 
O_NONBLOCK
 | 
O_TRUNC
))Ë
	`e
(2);

88 i‡(!(
	`EXCLUDE
(
O_CREAT
, 
O_EXCL
 | 
O_NONBLOCK
 | 
O_TRUNC
))Ë
	`e
(3);

89 i‡(!(
	`EXCLUDE
(
O_APPEND
, 
O_CREAT
 | 
O_EXCL
 | 
O_NONBLOCK
 | 
O_TRUNC
))Ë
	`e
(4);

90 i‡(!(
	`EXCLUDE
(
O_RDONLY
, 
ADDIT
))Ë
	`e
(5);

91 i‡(!(
	`EXCLUDE
(
O_WRONLY
, 
ADDIT
))Ë
	`e
(6);

92 i‡(!(
	`EXCLUDE
(
O_RDWR
, 
ADDIT
))Ë
	`e
(7);

93 
	}
}

96 
	$ã°25b
()

99 
	#BUF_SIZE
 1024

	)

101 
fd1
, 
fd2
, 
fd3
, 
fd4
, 
fd5
;

102 
buf
[
BUF_SIZE
];

103 
°©
 
°1
, 
°2
, 
°3
;

104 
time_t
 
time1
, 
time2
;

105 
°©_loc
;

107 
subã°
 = 2;

109 
	`Sy°em
("rm -rf ../DIR_25/*");

111 
	`Sy°em
("echo Hello > he");

112 
	`Sy°em
("echo Hello > ha");

113 
	`Sy°em
("echo Hello > hi");

114 
	`Sy°em
("echo Hello > ho");

117 i‡((
fd1
 = 
	`›í
("he", 
O_RDONLY
)Ë!3Ë
	`e
(1);

118 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!6Ë
	`e
(2);

119 i‡((
fd2
 = 
	`›í
("./ha", 
O_RDONLY
)Ë!4Ë
	`e
(3);

120 i‡((
fd3
 = 
	`›í
("../DIR_25/he", 
O_RDWR
)Ë!5Ë
	`e
(4);

121 i‡((
fd4
 = 
	`›í
("ho", 
O_WRONLY
)Ë!6Ë
	`e
(5);

122 i‡(
	`˛o£
(
fd4
Ë!0Ë
	`e
(6);

123 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(7);

124 i‡((
fd1
 = 
	`›í
("./././ho", 
O_RDWR
)Ë!3Ë
	`e
(8);

125 i‡((
fd4
 = 
	`›í
("../DIR_25/he", 
O_RDONLY
)Ë!6Ë
	`e
(9);

126 i‡(
	`˛o£
(
fd2
Ë!0Ë
	`e
(10);

127 i‡(
	`˛o£
(
fd3
Ë!0Ë
	`e
(11);

128 i‡((
fd2
 = 
	`›í
("ha", 
O_RDONLY
)Ë!4Ë
	`e
(12);

129 i‡((
fd3
 = 
	`›í
("/ëc/∑sswd", 
O_RDONLY
)Ë!5Ë
	`e
(13);

130 i‡(
	`˛o£
(
fd4
Ë!0Ë
	`e
(14);

131 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(15);

132 i‡(
	`˛o£
(
fd3
Ë!0Ë
	`e
(16);

135 
	`Sy°em
("rm -rf /tmp/sema.25");

136 
	`f‹k
()) {

137 -1: 
	`¥ötf
("Can't fork\n"); ;

140 i‡((
fd1
 = 
	`›í
("he", 
O_WRONLY
)Ë!3Ë
	`e
(17);

141 i‡((
fd3
 = 
	`›í
("../././DIR_25/ha", 
O_WRONLY
)Ë!5Ë
	`e
(18);

142 i‡((
fd4
 = 
	`›í
("../DIR_25/hi", 
O_WRONLY
)Ë!6Ë
	`e
(19);

143 i‡((
fd5
 = 
	`›í
("ho", 
O_WRONLY
)Ë!7Ë
	`e
(20);

144 
	`sy°em
("whileÅest ! -f /tmp/sema.25; do sleep 1; done");

145 i‡(
	`ªad
(
fd2
, 
buf
, 
BUF_SIZE
Ë!3Ë
	`e
(21);

146 i‡(
	`°∫cmp
(
buf
, "lo\n", 3Ë!0Ë
	`e
(22);

147 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(23);

148 i‡(
	`˛o£
(
fd2
Ë!0Ë
	`e
(24);

149 i‡(
	`˛o£
(
fd3
Ë!0Ë
	`e
(25);

150 i‡(
	`˛o£
(
fd4
Ë!0Ë
	`e
(26);

151 i‡(
	`˛o£
(
fd5
Ë!0Ë
	`e
(27);

152 
	`exô
(0);

155 i‡((
fd1
 = 
	`›í
("ha", 
O_RDONLY
)Ë!3Ë
	`e
(28);

156 i‡((
fd3
 = 
	`›í
("./he", 
O_RDONLY
)Ë!5Ë
	`e
(29);

157 i‡((
fd4
 = 
	`›í
("../DIR_25/hi", 
O_RDWR
)Ë!6Ë
	`e
(30);

158 i‡((
fd5
 = 
	`›í
("ho", 
O_WRONLY
)Ë!7Ë
	`e
(31);

159 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(32);

160 i‡(
	`ªad
(
fd2
, 
buf
, 3Ë!3Ë
	`e
(33);

161 
	`Cª©
("/tmp/sema.25");

162 i‡(
	`°∫cmp
(
buf
, "Hñ", 3Ë!0Ë
	`e
(34);

163 i‡(
	`˛o£
(
fd2
Ë!0Ë
	`e
(35);

164 i‡(
	`˛o£
(
fd3
Ë!0Ë
	`e
(36);

165 i‡(
	`˛o£
(
fd4
Ë!0Ë
	`e
(37);

166 i‡(
	`˛o£
(
fd5
Ë!0Ë
	`e
(38);

167 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(39);

168 i‡(
°©_loc
 !0Ë
	`e
(40);

170 
	`Sy°em
("rm -f /tmp/sema.25");

173 
	`Sèt
("hi", &
°1
);

174 
	`Sèt
("ha", &
°2
);

175 
	`time
(&
time1
);

176 
time1
 >
	`time
((
time_t
 *)0))

178 i‡((
fd1
 = 
	`›í
("hi", 
O_RDONLY
)Ë!3Ë
	`e
(41);

179 i‡((
fd2
 = 
	`›í
("ha", 
O_WRONLY
)Ë!4Ë
	`e
(42);

180 i‡(
	`ªad
(
fd1
, 
buf
, 1Ë!1Ë
	`e
(43);

181 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(44);

182 
	`Sèt
("hi", &
°3
);

183 i‡(
°1
.
°_uid
 !
°3
.°_uidË
	`e
(45);

184 i‡(
°1
.
°_gid
 !
°3
.°_gidË
	`e
(46);

185 i‡(
°1
.
°_mode
 !
°3
.°_modeË
	`e
(47);

186 i‡(
°1
.
°_size
 !
°3
.°_sizeË
	`e
(48);

187 i‡(
°1
.
°_∆ök
 !
°3
.°_∆ökË
	`e
(49);

188 i‡(
°1
.
°_mtime
 !
°3
.°_mtimeË
	`e
(50);

189 i‡(
°1
.
°_˘ime
 !
°3
.°_˘imeË
	`e
(51);

190 #i‚de‡
V1_FILESYSTEM


191 i‡(
°1
.
°_©ime
 >
°3
.°_©imeË
	`e
(52);

193 i‡(
	`wrôe
(
fd2
, "Howdy\n", 6Ë!6Ë
	`e
(53);

194 i‡((
fd1
 = 
	`›í
("ha", 
O_RDWR
)Ë!3Ë
	`e
(54);

195 i‡(
	`ªad
(
fd1
, 
buf
, 6Ë!6Ë
	`e
(55);

196 i‡(
	`°∫cmp
(
buf
, "Howdy\n", 6Ë!0Ë
	`e
(56);

197 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(57);

198 
	`Sèt
("ha", &
°3
);

199 i‡(
°2
.
°_uid
 !
°3
.°_uidË
	`e
(58);

200 i‡(
°2
.
°_gid
 !
°3
.°_gidË
	`e
(59);

201 i‡(
°2
.
°_mode
 !
°3
.°_modeË
	`e
(60);

202 i‡(
°2
.
°_∆ök
 !
°3
.°_∆ökË
	`e
(61);

203 i‡(
°2
.
°_˘ime
 >
°3
.°_˘imeË
	`e
(62);

204 #i‚de‡
V1_FILESYSTEM


205 i‡(
°2
.
°_©ime
 >
°3
.°_©imeË
	`e
(63);

207 i‡(
°2
.
°_mtime
 >
°3
.°_mtimeË
	`e
(64);

208 i‡(
°2
.
°_size
 !
°3
.°_sizeË
	`e
(65);

209 i‡(
	`˛o£
(
fd2
Ë!0Ë
	`e
(66);

212 i‡((
fd1
 = 
	`›í
("hi", 
O_RDONLY
)Ë!3Ë
	`e
(67);

213 i‡(
	`wrôe
(
fd1
, "ágaö", 7Ë!-1Ë
	`e
(68);

214 i‡(
î∫o
 !
EBADF
Ë
	`e
(69);

215 i‡(
	`ªad
(
fd1
, 
buf
, 7Ë!6Ë
	`e
(70);

216 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(71);

219 i‡((
fd1
 = 
	`›í
("hi", 
O_WRONLY
)Ë!3Ë
	`e
(72);

220 i‡(
	`ªad
(
fd1
, 
buf
, 7Ë!-1Ë
	`e
(73);

221 i‡(
î∫o
 !
EBADF
Ë
	`e
(74);

222 i‡(
	`wrôe
(
fd1
, "hELLO", 6Ë!6Ë
	`e
(75);

223 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(76);

226 i‡(
	`˛o£
(
fd1
Ë!-1Ë
	`e
(77);

227 i‡(
î∫o
 !
EBADF
Ë
	`e
(78);

230 i‡(
	`˛o£
(10Ë!-1Ë
	`e
(79);

231 i‡(
î∫o
 !
EBADF
Ë
	`e
(80);

232 i‡(
	`˛o£
(111Ë!-1Ë
	`e
(81);

233 i‡(
î∫o
 !
EBADF
Ë
	`e
(82);

234 i‡(
	`˛o£
(-432Ë!-1Ë
	`e
(83);

235 i‡(
î∫o
 !
EBADF
Ë
	`e
(84);

238 i‡((
fd1
 = 
	`›í
("hi", 
O_RDWR
)Ë!3Ë
	`e
(85);

239 i‡(
	`ªad
(
fd1
, 
buf
, 6Ë!6Ë
	`e
(86);

240 i‡(
	`°∫cmp
(
buf
, "hELLO", 6Ë!0Ë
	`e
(87);

241 i‡(
	`wrôe
(
fd1
, "Hñlo", 6Ë!6Ë
	`e
(88);

242 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(89);

245 i‡((
fd1
 = 
	`›í
("hi", 
O_RDWR
 | 
O_APPEND
)Ë!3Ë
	`e
(90);

248 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!0Ë
	`e
(91);

251 i‡(
	`wrôe
(
fd1
, "", 0Ë!0Ë
	`e
(92);

252 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!0Ë
	`e
(93);

255 
	`Sèt
("hi", &
°1
);

256 i‡(
	`l£ek
(
fd1
, (
off_t
Ë- 3, 
SEEK_END
Ë!
°1
.
°_size
 - 3Ë
	`e
(94);

259 i‡(
	`wrôe
(
fd1
, "1", 1Ë!1Ë
	`e
(95);

260 
	`Sèt
("hi", &
°1
);

261 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!
°1
.
°_size
Ë
	`e
(96);

262 i‡(
	`wrôe
(
fd1
, "2", 1Ë!1Ë
	`e
(97);

263 
	`Sèt
("hi", &
°1
);

264 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!
°1
.
°_size
Ë
	`e
(98);

265 i‡(
	`wrôe
(
fd1
, "3", 1Ë!1Ë
	`e
(99);

266 
	`Sèt
("hi", &
°1
);

267 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!
°1
.
°_size
Ë
	`e
(100);

268 i‡(
	`l£ek
(
fd1
, (
off_t
Ë- 2, 
SEEK_CUR
Ë<0Ë
	`e
(101);

269 i‡(
	`wrôe
(
fd1
, "4", 1Ë!1Ë
	`e
(102);

272 
	`Sèt
("hi", &
°1
);

273 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!
°1
.
°_size
Ë
	`e
(103);

274 i‡(
	`l£ek
(
fd1
, (
off_t
Ë- 4, 
SEEK_CUR
Ë!
°1
.
°_size
 - 4Ë
	`e
(104);

275 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!4Ë
	`e
(105);

276 i‡(
	`°∫cmp
(
buf
, "1234", 4Ë!0Ë
	`e
(106);

277 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(107);

280 
	`Sèt
("ho", &
°1
);

281 
fd1
 = 
	`›í
("ho", 
O_RDWR
 | 
O_CREAT
, 0000);

282 i‡(
fd1
 !3Ë
	`e
(108);

283 
	`Sèt
("ho", &
°2
);

284 i‡(
	`memcmp
(&
°1
, &
°2
, (
°©
)Ë!0Ë
	`e
(109);

285 i‡(
	`ªad
(
fd1
, 
buf
, 6Ë!6Ë
	`e
(110);

286 i‡(
	`°∫cmp
(
buf
, "Hñlo\n", 6Ë!0Ë
	`e
(111);

287 i‡(
	`wrôe
(
fd1
, "@", 1Ë!1Ë
	`e
(112);

288 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(113);

289 (Ë
	`umask
(0000);

290 
fd1
 = 
	`›í
("ho", 
O_RDWR
 | 
O_CREAT
 | 
O_EXCL
, 0777);

291 i‡(
fd1
 !-1Ë
	`e
(114);

292 
	`Sy°em
("rm -rfÇew");

293 
	`time
(&
time1
);

294 
time1
 >
	`time
((
time_t
 *)0))

296 
fd1
 = 
	`›í
("√w", 
O_RDWR
 | 
O_CREAT
, 0716);

297 i‡(
fd1
 !3Ë
	`e
(115);

298 
	`Sèt
("√w", &
°1
);

299 
	`time
(&
time2
);

300 
time2
 >
	`time
((
time_t
 *)0))

302 
	`time
(&
time2
);

303 i‡(
°1
.
°_uid
 !
	`gëeuid
()Ë
	`e
(116);

304 i‡(
°1
.
°_gid
 !
	`gëegid
()Ë
	`e
(117);

305 i‡((
°1
.
°_mode
 & 0777Ë!0716Ë
	`e
(118);

306 i‡(
°1
.
°_∆ök
 !1Ë
	`e
(119);

307 i‡(
°1
.
°_mtime
 <
time1
Ë
	`e
(120);

308 i‡(
°1
.
°_mtime
 >
time2
Ë
	`e
(121);

309 #i‚de‡
V1_FILESYSTEM


310 i‡(
°1
.
°_©ime
 !°1.
°_mtime
Ë
	`e
(122);

312 i‡(
°1
.
°_˘ime
 !°1.
°_mtime
Ë
	`e
(123);

313 i‡(
°1
.
°_size
 !0Ë
	`e
(124);

314 i‡(
	`wrôe
(
fd1
, "I'mÇew i¿town", 16Ë!16Ë
	`e
(125);

315 i‡(
	`l£ek
(
fd1
, (
off_t
Ë- 5, 
SEEK_CUR
Ë!11Ë
	`e
(126);

316 i‡(
	`ªad
(
fd1
, 
buf
, 5Ë!5Ë
	`e
(127);

317 i‡(
	`°∫cmp
(
buf
, "town", 5Ë!0Ë
	`e
(128);

318 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(129);

321 
	`time
(&
time1
);

322 
time1
 >
	`time
((
time_t
 *)0));

323 i‡((
fd1
 = 
	`›í
("√w", 
O_RDWR
 | 
O_TRUNC
)Ë!3Ë
	`e
(130);

324 
	`Sèt
("√w", &
°1
);

325 
	`time
(&
time2
);

326 
time2
 >
	`time
((
time_t
 *)0));

327 
	`time
(&
time2
);

328 i‡((
°1
.
°_mode
 & 0777Ë!0716Ë
	`e
(131);

329 i‡(
°1
.
°_size
 !(
size_t
Ë0Ë
	`e
(132);

330 i‡(
°1
.
°_mtime
 <
time1
Ë
	`e
(133);

331 i‡(
°1
.
°_mtime
 >
time2
Ë
	`e
(134);

332 i‡(
°1
.
°_˘ime
 !°1.
°_mtime
Ë
	`e
(135);

333 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(136);

337 i‡(
su≥ru£r
) {

338 
	`Sy°em
("echo > bar; chmod 077 bar");

339 
	`Sy°em
("chown daemon bar");

340 
	`Sy°em
("chgrp daemon bar");

341 
fd1
 = 
	`›í
("b¨", 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
, 0777);

342 i‡(
fd1
 =-1Ë
	`e
(137);

343 i‡(
	`wrôe
(
fd1
, "foo", 3Ë!3Ë
	`e
(138);

344 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(139);

345 
	`Sèt
("b¨", &
°1
);

346 i‡(
°1
.
°_uid
 !1Ë
	`e
(140);

347 i‡(
°1
.
°_gid
 !1Ë
	`e
(141);

348 i‡((
°1
.
°_mode
 & 0777Ë!077Ë
	`e
(142);

349 i‡(
°1
.
°_size
 !(
size_t
Ë3Ë
	`e
(143);

352 
fd1
 = 
	`›í
("b¨", 
O_WRONLY
 | 
O_CREAT
 | 
O_TRUNC
, 0777);

353 i‡(
fd1
 =-1Ë
	`e
(144);

354 i‡(
	`wrôe
(
fd1
, "foob¨", 6Ë!6Ë
	`e
(145);

355 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(146);

356 
	`Sèt
("b¨", &
°1
);

357 i‡(
°1
.
°_uid
 !1Ë
	`e
(147);

358 i‡(
°1
.
°_gid
 !1Ë
	`e
(148);

359 i‡((
°1
.
°_mode
 & 0777Ë!077Ë
	`e
(149);

360 i‡(
°1
.
°_size
 !(
size_t
Ë6Ë
	`e
(150);

362 
	}
}

365 
	$ã°25c
()

367 
fd1
, 
fd2
;

368 
buf
[
BUF_SIZE
];

369 
°©
 
°
;

370 
°©_loc
;

372 
subã°
 = 3;

374 
	`Sy°em
("rm -rf ../DIR_25/*");

378 i‡(
	`mkfifo
("fifo", 0777Ë!0Ë
	`e
(1);

379 
	`f‹k
()) {

380 -1: 
	`¥ötf
("Can't fork\n"); ;

382 
	`Æ¨m
(20);

383 i‡((
fd1
 = 
	`›í
("fifo", 
O_RDONLY
)Ë!3Ë
	`e
(2);

384 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!23Ë
	`e
(3);

385 i‡(
	`°∫cmp
(
buf
, "1 2 3Åe°ögÅe°ög\n", 23Ë!0Ë
	`e
(4);

386 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(5);

387 
	`exô
(0);

389 i‡((
fd1
 = 
	`›í
("fifo", 
O_WRONLY
)Ë!3Ë
	`e
(6);

390 i‡(
	`wrôe
(
fd1
, "1 2 3Åe°ögÅe°ög\n", 23Ë!23Ë
	`e
(7);

391 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(8);

392 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(9);

393 i‡(
°©_loc
 !0Ë
	`e
(10);

397 
fd1
 = 
	`›í
("fifo", 
O_WRONLY
 | 
O_NONBLOCK
);

398 i‡(
fd1
 !-1Ë
	`e
(11);

399 i‡(
î∫o
 !
ENXIO
Ë
	`e
(12);

400 
	`˛o£
(
fd1
);

403 
fd1
 = 
	`›í
("fifo", 
O_WRONLY
 | 
O_CREAT
 | 
O_NONBLOCK
, 0777);

404 i‡(
fd1
 !-1Ë
	`e
(13);

405 i‡(
î∫o
 !
ENXIO
Ë
	`e
(14);

406 
	`˛o£
(
fd1
);

409 
fd1
 = 
	`›í
("fifo", 
O_WRONLY
 | 
O_CREAT
 | 
O_EXCL
 | 
O_NONBLOCK
, 0777);

410 i‡(
fd1
 !-1Ë
	`e
(15);

411 i‡(
î∫o
 !
EEXIST
 &&Éºnÿ!
ENXIO
Ë
	`e
(16);

412 
	`˛o£
(
fd1
);

415 
fd1
 = 
	`›í
("fifo", 
O_RDONLY
 | 
O_NONBLOCK
);

416 i‡(
fd1
 !3Ë
	`e
(17);

417 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(18);

421 
	`f‹k
()) {

422 -1: 
	`¥ötf
("Can't fork\n"); ;

424 
	`Æ¨m
(20);

425 i‡((
fd1
 = 
	`›í
("fifo", 
O_WRONLY
)Ë!3Ë
	`e
(19);

426 i‡((
fd2
 = 
	`›í
("fifo", 
O_WRONLY
)Ë!4Ë
	`e
(20);

427 i‡(
	`wrôe
(
fd1
, "I did sì Elvis.\n", 18Ë!18Ë
	`e
(21);

428 i‡(
	`wrôe
(
fd2
, "I DID.\n", 8Ë!8Ë
	`e
(22);

429 i‡(
	`˛o£
(
fd2
Ë!0Ë
	`e
(23);

430 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(24);

431 
	`exô
(0);

433 i‡((
fd1
 = 
	`›í
("fifo", 
O_RDONLY
)Ë!3Ë
	`e
(25);

434 i‡(
	`ªad
(
fd1
, 
buf
, 18Ë!18Ë
	`e
(26);

435 i‡(
	`°∫cmp
(
buf
, "I did sì Elvis.\n", 18Ë!0Ë
	`e
(27);

436 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!8Ë
	`e
(28);

437 i‡(
	`°∫cmp
(
buf
, "I DID.\n", 8Ë!0Ë
	`e
(29);

438 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(30);

439 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(31);

440 i‡(
°©_loc
 !0Ë
	`e
(32);

444 
	`f‹k
()) {

445 -1: 
	`¥ötf
("Can't fork\n"); ;

447 
	`Æ¨m
(20);

448 i‡((
fd1
 = 
	`›í
("fifo", 
O_WRONLY
)Ë!3Ë
	`e
(33);

449 i‡(
	`wrôe
(
fd1
, "I did sì Elvis.\n", 18Ë!18Ë
	`e
(34);

450 i‡((
fd2
 = 
	`›í
("fifo", 
O_WRONLY
 | 
O_TRUNC
)Ë!4Ë
	`e
(35);

451 i‡(
	`wrôe
(
fd2
, "I DID.\n", 8Ë!8Ë
	`e
(36);

452 i‡(
	`˛o£
(
fd2
Ë!0Ë
	`e
(37);

453 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(38);

454 
	`exô
(0);

456 i‡((
fd1
 = 
	`›í
("fifo", 
O_RDONLY
)Ë!3Ë
	`e
(39);

457 i‡(
	`ªad
(
fd1
, 
buf
, 18Ë!18Ë
	`e
(40);

458 i‡(
	`°∫cmp
(
buf
, "I did sì Elvis.\n", 18Ë!0Ë
	`e
(41);

459 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!8Ë
	`e
(42);

460 i‡(
	`°∫cmp
(
buf
, "I DID.\n", 8Ë!0Ë
	`e
(43);

461 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(44);

462 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(45);

463 i‡(
°©_loc
 !0Ë
	`e
(46);

467 
	`Sy°em
("rm -rf /tmp/sema.25");

468 
	`f‹k
()) {

469 -1: 
	`¥ötf
("Can't fork\n"); ;

472 
	`Æ¨m
(20);

473 i‡((
fd1
 = 
	`›í
("fifo", 
O_WRONLY
)Ë!3Ë
	`e
(47);

474 i‡(
	`wrôe
(
fd1
, "I did sì Elvis.\n", 18Ë!18Ë
	`e
(48);

475 
	`Cª©
("/tmp/sema.25");

476 
	`¶ìp
(1);

477 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(49);

478 
	`exô
(0);

481 i‡((
fd1
 = 
	`›í
("fifo", 
O_RDONLY
)Ë!3Ë
	`e
(50);

483 
	`°©
("/tmp/£ma.25", &
°
Ë!0Ë
	`¶ìp
(1);

484 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(51);

485 i‡((
fd1
 = 
	`›í
("fifo", 
O_RDONLY
 | 
O_NONBLOCK
)Ë!3Ë
	`e
(52);

486 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!18Ë
	`e
(53);

487 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(54);

488 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(55);

489 i‡(
°©_loc
 !0Ë
	`e
(56);

493 
	`Sy°em
("rm -rf /tmp/sema.25");

494 
	`f‹k
()) {

495 -1: 
	`¥ötf
("Can't fork\n"); ;

497 
	`Æ¨m
(20);

498 i‡((
fd1
 = 
	`›í
("fifo", 
O_WRONLY
)Ë!3Ë
	`e
(57);

499 i‡(
	`wrôe
(
fd1
, "I did sì Elvis.\n", 18Ë!18Ë
	`e
(58);

502 
	`°©
("/tmp/£ma.25", &
°
Ë!0Ë
	`¶ìp
(1);

503 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(59);

504 
	`exô
(0);

506 i‡((
fd1
 = 
	`›í
("fifo", 
O_RDONLY
)Ë!3Ë
	`e
(60);

507 i‡(
	`ªad
(
fd1
, 
buf
, 2Ë!2Ë
	`e
(61);

508 i‡(
	`°∫cmp
(
buf
, "I ", 2Ë!0Ë
	`e
(62);

509 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(63);

510 i‡((
fd1
 = 
	`›í
("fifo", 
O_RDONLY
)Ë!3Ë
	`e
(64);

513 
	`Cª©
("/tmp/sema.25");

514 i‡(
	`ªad
(
fd1
, 
buf
, 4Ë!4Ë
	`e
(65);

515 i‡(
	`°∫cmp
(
buf
, "did ", 4Ë!0Ë
	`e
(66);

516 i‡((
fd2
 = 
	`›í
("fifo", 
O_RDONLY
)Ë!4Ë
	`e
(67);

517 i‡(
	`ªad
(
fd2
, 
buf
, 
BUF_SIZE
Ë!12Ë
	`e
(68);

518 i‡(
	`°∫cmp
(
buf
, "£êElvis.\n", 12Ë!0Ë
	`e
(69);

519 i‡(
	`˛o£
(
fd2
Ë!0Ë
	`e
(70);

520 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(71);

521 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(72);

522 i‡(
°©_loc
 !0Ë
	`e
(73);

524 
	`Sy°em
("rm -rf fifo /tmp/sema.25");

527 
	`Sy°em
("mkdir dir;Åouch dir/f1 dir/f2 dir/f3");

528 i‡((
fd1
 = 
	`›í
("dú", 
O_WRONLY
 | 
O_TRUNC
)Ë!-1Ë
	`e
(74);

529 i‡(
î∫o
 !
EISDIR
Ë
	`e
(75);

530 
	`˛o£
(
fd1
);

533 i‡((
fd1
 = 
	`›í
("dú", 
O_RDONLY
)Ë!3Ë
	`e
(76);

534 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(77);

535 i‡(
	`u∆ök
("dú/f1"Ë!0Ë
	`e
(78);

536 i‡(
	`u∆ök
("dú/f2"Ë!0Ë
	`e
(79);

537 i‡(
	`u∆ök
("dú/f3"Ë!0Ë
	`e
(80);

538 i‡(
	`rmdú
("dú"Ë!0Ë
	`e
(81);

540 i‡(!
su≥ru£r
) {

542 (Ë
	`umask
(0200);

543 
	`Sy°em
("touchÇono");

544 (Ë
	`umask
(0000);

545 
fd1
 = 
	`›í
("n⁄o", 
O_RDWR
 | 
O_CREAT
, 0777);

546 i‡(
fd1
 !-1Ë
	`e
(82);

547 i‡(
î∫o
 !
EACCES
Ë
	`e
(83);

549 
	}
}

551 
	$ã°25d
()

553 
fd
;

555 
subã°
 = 4;

557 
	`Sy°em
("rm -rf ../DIR_25/*");

560 i‡((
fd
 = 
	`›í
(
MaxName
, 
O_RDWR
 | 
O_CREAT
, 0777)Ë!3Ë
	`e
(1);

561 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(2);

562 
MaxP©h
[
	`°æí
(MaxPath) - 2] = '/';

563 
MaxP©h
[
	`°æí
(MaxPath) - 1] = 'a';

564 i‡((
fd
 = 
	`›í
(
MaxP©h
, 
O_RDWR
 | 
O_CREAT
, 0777)Ë!3Ë
	`e
(3);

565 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(4);

566 
MaxP©h
[
	`°æí
(MaxPath) - 1] = '/';

567 
	}
}

570 
	$ã°25e
()

572 
fd
;

573 *
n‹ód
 = "noread";

574 *
nowrôe
 = "nowrite";

575 
°©_loc
;

577 
subã°
 = 5;

579 
	`Sy°em
("rm -rf ../DIR_25/*");

581 
	`mkdú
("bar", 0777);

584 
	`Sy°em
("chmod 677 bar");

585 i‡(
	`›í
("b¨/n⁄o", 
O_RDWR
 | 
O_CREAT
, 0666Ë!-1Ë
	`e
(1);

586 i‡(
î∫o
 !
EACCES
Ë
	`e
(2);

589 
	`Sy°em
("chmod 577 bar");

590 i‡(
	`›í
("b¨/n⁄o", 
O_RDWR
 | 
O_CREAT
, 0666Ë!-1Ë
	`e
(3);

591 i‡(
î∫o
 !
EACCES
Ë
	`e
(4);

594 
	`Sy°em
("rm -rf bar");

597 
	`Sy°em
("touchÇoread; chmod 377Çoread");

598 i‡(
	`›í
(
n‹ód
, 
O_RDONLY
Ë!-1Ë
	`e
(5);

599 i‡(
	`›í
(
n‹ód
, 
O_RDWR
Ë!-1Ë
	`e
(6);

600 i‡(
	`›í
(
n‹ód
, 
O_RDWR
 | 
O_CREAT
, 0777Ë!-1Ë
	`e
(7);

601 i‡(
	`›í
(
n‹ód
, 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
, 0777Ë!-1Ë
	`e
(8);

602 i‡((
fd
 = 
	`›í
(
n‹ód
, 
O_WRONLY
)Ë!3Ë
	`e
(9);

603 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(10);

604 
	`Sy°em
("touchÇowrite; chmod 577Çowrite");

605 i‡(
	`›í
(
nowrôe
, 
O_WRONLY
Ë!-1Ë
	`e
(11);

606 i‡(
	`›í
(
nowrôe
, 
O_RDWR
Ë!-1Ë
	`e
(12);

607 i‡(
	`›í
(
nowrôe
, 
O_RDWR
 | 
O_CREAT
, 0777Ë!-1Ë
	`e
(13);

608 i‡(
	`›í
(
nowrôe
, 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
, 0777Ë!-1Ë
	`e
(14);

609 i‡((
fd
 = 
	`›í
(
nowrôe
, 
O_RDONLY
)Ë!3Ë
	`e
(15);

610 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(16);

611 i‡(
su≥ru£r
) {

613 
	`Sy°em
("chmod 733Çoread");

614 
	`Sy°em
("chown binÇoread");

615 
	`Sy°em
("chgrp systemÇoread");

616 
	`Sy°em
("chmod 755Çowrite");

617 
	`Sy°em
("chown binÇowrite");

618 
	`Sy°em
("chgrp systemÇowrite");

619 
	`f‹k
()) {

620 -1: 
	`¥ötf
("Can't fork\n"); ;

622 
	`£tuid
(1);

623 
	`£tgid
(1);

624 i‡(
	`›í
(
n‹ód
, 
O_RDONLY
Ë!-1Ë
	`e
(17);

625 i‡(
	`›í
(
n‹ód
, 
O_RDWR
Ë!-1Ë
	`e
(18);

626 i‡(
	`›í
(
n‹ód
, 
O_RDWR
 | 
O_CREAT
, 0777Ë!-1Ë
	`e
(19);

627 
fd
 = 
	`›í
(
n‹ód
, 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
, 0777);

628 i‡(
fd
 !-1Ë
	`e
(20);

629 i‡((
fd
 = 
	`›í
(
n‹ód
, 
O_WRONLY
)Ë!3Ë
	`e
(21);

630 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(22);

631 i‡(
	`›í
(
nowrôe
, 
O_WRONLY
Ë!-1Ë
	`e
(23);

632 i‡(
	`›í
(
nowrôe
, 
O_RDWR
Ë!-1Ë
	`e
(24);

633 i‡(
	`›í
(
nowrôe
, 
O_RDWR
 | 
O_CREAT
, 0777Ë!-1Ë
	`e
(25);

634 
fd
 = 
	`›í
(
nowrôe
, 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
, 0777);

635 i‡(
fd
 !-1Ë
	`e
(26);

636 i‡((
fd
 = 
	`›í
(
nowrôe
, 
O_RDONLY
)Ë!3Ë
	`e
(27);

637 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(28);

638 
	`exô
(0);

640 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(29);

645 
	`Sy°em
("rm -rfÇoreadÇowrite");

648 
	`Sy°em
("echo >Éxists");

649 i‡(
	`›í
("exi°s", 
O_RDWR
 | 
O_CREAT
 | 
O_EXCL
, 0777Ë!-1Ë
	`e
(30);

650 i‡(
î∫o
 !
EEXIST
Ë
	`e
(31);

651 i‡(
	`›í
("exi°s", 
O_RDONLY
 | 
O_CREAT
 | 
O_EXCL
, 0777Ë!-1Ë
	`e
(32);

652 i‡(
î∫o
 !
EEXIST
Ë
	`e
(33);

653 i‡(
	`›í
("exi°s", 
O_WRONLY
 | 
O_CREAT
 | 
O_EXCL
, 0777Ë!-1Ë
	`e
(34);

654 i‡(
î∫o
 !
EEXIST
Ë
	`e
(35);

655 
fd
 = 
	`›í
("exi°s", 
O_RDWR
 | 
O_CREAT
 | 
O_EXCL
 | 
O_TRUNC
, 0777);

656 i‡(
fd
 !-1Ë
	`e
(36);

657 i‡(
î∫o
 !
EEXIST
Ë
	`e
(37);

658 
fd
 = 
	`›í
("exi°s", 
O_RDONLY
 | 
O_CREAT
 | 
O_EXCL
 | 
O_TRUNC
, 0777);

659 i‡(
fd
 !-1Ë
	`e
(38);

660 i‡(
î∫o
 !
EEXIST
Ë
	`e
(39);

661 
fd
 = 
	`›í
("exi°s", 
O_WRONLY
 | 
O_CREAT
 | 
O_EXCL
 | 
O_TRUNC
, 0777);

662 i‡(
fd
 !-1Ë
	`e
(40);

663 i‡(
î∫o
 !
EEXIST
Ë
	`e
(41);

666 i‡((
fd
 = 
	`›í
(
ToL⁄gName
, 
O_RDWR
 | 
O_CREAT
, 0777)Ë!3Ë
	`e
(45);

667 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(46);

668 
ToL⁄gP©h
[
PATH_MAX
 - 2] = '/';

669 
ToL⁄gP©h
[
PATH_MAX
 - 1] = 'a';

670 i‡((
fd
 = 
	`›í
(
ToL⁄gP©h
, 
O_RDWR
 | 
O_CREAT
, 0777)Ë!-1Ë
	`e
(47);

671 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(48);

672 i‡(
	`˛o£
(
fd
Ë!-1Ë
	`e
(49);

673 
ToL⁄gP©h
[
PATH_MAX
 - 1] = '/';

674 
	}
}

677 
	$makñ⁄g«mes
()

679 
i
;

681 
	`mem£t
(
MaxName
, 'a', 
NAME_MAX
);

682 
MaxName
[
NAME_MAX
] = '\0';

683 
i
 = 0; i < 
PATH_MAX
 - 1; i++) {

684 
MaxP©h
[
i
++] = '.';

685 
MaxP©h
[
i
] = '/';

687 
MaxP©h
[
PATH_MAX
 - 1] = '\0';

689 
	`°r˝y
(
ToL⁄gName
, 
MaxName
);

690 
	`°r˝y
(
ToL⁄gP©h
, 
MaxP©h
);

692 
ToL⁄gName
[
NAME_MAX
] = 'a';

693 
ToL⁄gName
[
NAME_MAX
 + 1] = '\0';

694 
ToL⁄gP©h
[
PATH_MAX
 - 1] = '/';

695 
ToL⁄gP©h
[
PATH_MAX
] = '\0';

696 
	}
}

700 
	$e
(
n
)

701 
n
;

703 
îr_num
 = 
î∫o
;

705 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d: ", 
subã°
, 
n
, 
î∫o
);

706 
î∫o
 = 
îr_num
;

707 
	`≥º‹
("");

708 i‡(
îr˘
++ > 
MAX_ERROR
) {

709 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

710 
	`chdú
("..");

711 
	`sy°em
("rm -rf DIR*");

712 
	`exô
(1);

714 
î∫o
 = 0;

715 
	}
}

718 
	$quô
()

720 
	`Chdú
("..");

721 
	`Sy°em
("rm -rf DIR_25");

723 i‡(
îr˘
 == 0) {

724 
	`¥ötf
("ok\n");

725 
	`exô
(0);

727 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

728 
	`exô
(1);

730 
	}
}

	@test26.c

9 
	~<sys/ty≥s.h
>

10 
	~<sys/°©.h
>

11 
	~<°dlib.h
>

12 
	~<uni°d.h
>

13 
	~<f˙é.h
>

14 
	~<î∫o.h
>

15 
	~<limôs.h
>

16 
	~<°rög.h
>

17 
	~<time.h
>

18 
	~<°dio.h
>

20 
	gîr˘
 = 0;

21 
	gsubã°
 = 1;

22 
	gsu≥ru£r
;

23 
	gMaxName
[
NAME_MAX
 + 1];

24 
	gMaxP©h
[
PATH_MAX
];

25 
	gToL⁄gName
[
NAME_MAX
 + 2];

26 
	gToL⁄gP©h
[
PATH_MAX
 + 1];

28 
	#MAX_ERROR
 4

	)

29 
	#ITERATIONS
 4

	)

31 
	#Sy°em
(
cmd
Ëi‡(
	`sy°em
(cmdË!0Ë
	`¥ötf
("``%s'' faûed\n", cmd)

	)

32 
	#Chdú
(
dú
Ëi‡(
	`chdú
(dúË!0Ë
	`¥ötf
("C™'àgŸÿ%s\n", dú)

	)

33 
	#Sèt
(
a
,
b
Ëi‡(
	`°©
◊,bË!0Ë
	`¥ötf
("C™'à°© %s\n",á)

	)

35 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

36 
_PROTOTYPE
(
ã°26a
, ());

37 
_PROTOTYPE
(
ã°26b
, ());

38 
_PROTOTYPE
(
ã°26c
, ());

39 
_PROTOTYPE
(
°©eq
, (
°©
 *
°p1
, °© *
°p2
));

40 
_PROTOTYPE
(
makñ⁄g«mes
, ());

41 
_PROTOTYPE
(
e
, (
__n
));

42 
_PROTOTYPE
(
quô
, ());

44 
	$maö
(
¨gc
, 
¨gv
)

45 
¨gc
;

46 *
¨gv
[];

48 
i
, 
m
 = 0xFFFF;

50 
	`sync
();

51 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

52 
	`¥ötf
("Test 26 ");

53 
	`fÊush
(
°dout
);

54 
	`Sy°em
("rm -rf DIR_26; mkdir DIR_26");

55 
	`Chdú
("DIR_26");

56 
su≥ru£r
 = (
	`gëuid
() == 0);

57 
	`makñ⁄g«mes
();

59 
i
 = 0; i < 
ITERATIONS
; i++) {

60 i‡(
m
 & 0001Ë
	`ã°26a
();

61 i‡(
m
 & 0002Ë
	`ã°26b
();

62 i‡(
m
 & 0004Ë
	`ã°26c
();

64 
	`quô
();

65 
	}
}

67 
	$ã°26a
()

69 
°©
 
°1
, 
°2
, 
°3
;

70 
time_t
 
time1
;

72 
subã°
 = 1;

75 
	`Sy°em
("rm -rf ../DIR_26/*");

77 
	`Sy°em
("touch foo");

78 
	`Sèt
("foo", &
°1
);

79 
	`Sèt
(".", &
°2
);

80 
	`time
(&
time1
);

81 
time1
 >
	`time
((
time_t
 *)0))

83 i‡(
	`lök
("foo", "b¨"Ë!0Ë
	`e
(1);

84 
	`Sèt
("foo", &
°3
);

85 i‡(
°1
.
°_∆ök
 + 1 !
°3
.°_∆ökË
	`e
(2);

86 #i‚de‡
V1_FILESYSTEM


87 i‡(
°1
.
°_˘ime
 >
°3
.°_˘imeË
	`e
(3);

89 
	`Sèt
(".", &
°1
);

90 i‡(
°2
.
°_˘ime
 >
°1
.°_˘imeË
	`e
(4);

91 i‡(
°2
.
°_mtime
 >
°1
.°_mtimeË
	`e
(5);

92 
	`Sèt
("b¨", &
°2
);

93 i‡(
°2
.
°_∆ök
 !
°3
.°_∆ökË
	`e
(6);

94 i‡(
°2
.
°_öo
 !
°3
.°_öoË
	`e
(7);

95 i‡(
°2
.
°_mode
 !
°3
.°_modeË
	`e
(8);

96 i‡(
°2
.
°_uid
 !
°3
.°_uidË
	`e
(9);

97 i‡(
°2
.
°_gid
 !
°3
.°_gidË
	`e
(10);

98 i‡(
°2
.
°_size
 !
°3
.°_sizeË
	`e
(11);

99 i‡(
°2
.
°_˘ime
 !
°3
.°_˘imeË
	`e
(12);

100 i‡(
°2
.
°_©ime
 !
°3
.°_©imeË
	`e
(13);

101 i‡(
°2
.
°_mtime
 !
°3
.°_mtimeË
	`e
(14);

102 
	`Sèt
("foo", &
°1
);

103 
	`Sèt
(".", &
°2
);

104 
	`time
(&
time1
);

105 
time1
 >
	`time
((
time_t
 *)0))

107 i‡(
	`u∆ök
("b¨"Ë!0Ë
	`e
(15);

108 i‡(
	`°©
("b¨", &
°2
Ë!-1Ë
	`e
(16);

109 
	`Sèt
("foo", &
°3
);

110 i‡(
°1
.
°_∆ök
 !
°3
.°_∆ök + 1Ë
	`e
(17);

111 #i‚de‡
V1_FILESYSTEM


112 i‡(
°1
.
°_˘ime
 >
°3
.°_˘imeË
	`e
(18);

114 
	`Sèt
(".", &
°3
);

115 i‡(
°2
.
°_˘ime
 >
°3
.°_˘imeË
	`e
(19);

116 i‡(
°2
.
°_mtime
 >
°3
.°_mtimeË
	`e
(20);

117 
	}
}

119 
	$ã°26b
()

121 
∆ök
;

122 *
b¨
 = "bar.xxx";

123 
°©
 
°
, 
°2
;

125 
subã°
 = 2;

128 
	`Sy°em
("rm -rf ../DIR_26/*");

131 
	`Sy°em
("touch foo");

132 i‡(
LINK_MAX
 >999Ë
	`e
(1);

133 
∆ök
 = 2;Çlök <
LINK_MAX
;Çlink++) {

134 
b¨
[4] = (Ë((
∆ök
 / 100) % 10) + '0';

135 
b¨
[5] = (Ë((
∆ök
 / 10) % 10) + '0';

136 
b¨
[6] = (Ë(
∆ök
 % 10) + '0';

137 i‡(
	`lök
("foo", 
b¨
Ë!0Ë
	`e
(2);

138 
	`Sèt
(
b¨
, &
°
);

139 i‡(
°
.
°_∆ök
 !
∆ök
Ë
	`e
(3);

140 
	`Sèt
("foo", &
°
);

141 i‡(
°
.
°_∆ök
 !
∆ök
Ë
	`e
(4);

145 
	`Sèt
("foo", &
°
);

146 i‡(
°
.
°_∆ök
 !
LINK_MAX
Ë
	`e
(5);

147 
∆ök
 = 2;Çlök <
LINK_MAX
;Çlink++) {

148 
b¨
[4] = (Ë((
∆ök
 / 100) % 10) + '0';

149 
b¨
[5] = (Ë((
∆ök
 / 10) % 10) + '0';

150 
b¨
[6] = (Ë(
∆ök
 % 10) + '0';

151 
	`Sèt
(
b¨
, &
°2
);

152 i‡(!
	`°©eq
(&
°
, &
°2
)Ë
	`e
(6);

156 i‡(
	`lök
("foo", "n⁄o"Ë!-1Ë
	`e
(7);

157 i‡(
	`°©
("n⁄o", &
°
Ë!-1Ë
	`e
(8);

158 
	`Sèt
("foo", &
°
);

159 i‡(
°
.
°_∆ök
 !
LINK_MAX
Ë
	`e
(9);

162 
∆ök
 = 
LINK_MAX
;Çlink >= 2;Çlink--) {

163 
b¨
[4] = (Ë((
∆ök
 / 100) % 10) + '0';

164 
b¨
[5] = (Ë((
∆ök
 / 10) % 10) + '0';

165 
b¨
[6] = (Ë(
∆ök
 % 10) + '0';

166 
	`Sèt
(
b¨
, &
°
);

167 i‡(
°
.
°_∆ök
 !
∆ök
Ë
	`e
(10);

168 
	`Sèt
("foo", &
°2
);

169 i‡(!
	`°©eq
(&
°
, &
°2
)Ë
	`e
(11);

170 i‡(
	`u∆ök
(
b¨
Ë!0Ë
	`e
(12);

172 
	`Sèt
("foo", &
°
);

173 i‡(
°
.
°_∆ök
 !1Ë
	`e
(13);

176 i‡(
	`lök
("foo", 
MaxName
Ë!0Ë
	`e
(14);

177 i‡(
	`u∆ök
(
MaxName
Ë!0Ë
	`e
(15);

178 
MaxP©h
[
	`°æí
(MaxPath) - 2] = '/';

179 
MaxP©h
[
	`°æí
(MaxPath) - 1] = 'a';

180 i‡(
	`lök
("foo", 
MaxP©h
Ë!0Ë
	`e
(16);

181 i‡(
	`u∆ök
(
MaxP©h
Ë!0Ë
	`e
(17);

183 
	`Sy°em
("rm -f ../DIR_26/*");

184 
	}
}

186 
	$ã°26c
()

188 
subã°
 = 3;

191 
	`Sy°em
("rm -rf ../DIR_26/*");

194 i‡(
	`lök
("b¨/n⁄o", "n⁄o"Ë!-1Ë
	`e
(1);

195 i‡(
î∫o
 !
ENOENT
Ë
	`e
(2);

196 
	`Chdú
("..");

197 
	`Sy°em
("touch DIR_26/foo");

198 
	`Sy°em
("chmod 677 DIR_26");

199 i‡(!
su≥ru£r
) {

200 i‡(
	`u∆ök
("DIR_26/foo"Ë!-1Ë
	`e
(3);

201 i‡(
î∫o
 !
EACCES
Ë
	`e
(4);

203 i‡(
	`lök
("DIR_26/b¨/n⁄o", "DIR_26/n⁄o"Ë!-1Ë
	`e
(5);

204 i‡(
su≥ru£r
) {

205 i‡(
î∫o
 !
ENOENT
Ë
	`e
(6);

207 i‡(!
su≥ru£r
) {

208 i‡(
î∫o
 !
EACCES
Ë
	`e
(7);

210 
	`Sy°em
("chmod 577 DIR_26");

211 i‡(
su≥ru£r
) {

212 i‡(
	`lök
("DIR_26/foo", "DIR_26/n⁄o"Ë!0Ë
	`e
(8);

213 i‡(
	`u∆ök
("DIR_26/n⁄o"Ë!0Ë
	`e
(9);

215 i‡(!
su≥ru£r
) {

216 i‡(
	`lök
("DIR_26/foo", "DIR_26/n⁄o"Ë!-1Ë
	`e
(10);

217 i‡(
î∫o
 !
EACCES
Ë
	`e
(11);

218 i‡(
	`u∆ök
("DIR_26/foo"Ë!-1Ë
	`e
(12);

219 i‡(
î∫o
 !
EACCES
Ë
	`e
(13);

221 
	`Sy°em
("chmod 755 DIR_26");

222 
	`Chdú
("DIR_26");

225 
ToL⁄gP©h
[
	`°æí
(ToLongPath) - 2] = '/';

226 
ToL⁄gP©h
[
	`°æí
(ToLongPath) - 1] = 'a';

227 i‡(
	`lök
("foo", 
ToL⁄gP©h
Ë!-1Ë
	`e
(18);

228 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(19);

229 i‡(
	`u∆ök
(
ToL⁄gP©h
Ë!-1Ë
	`e
(20);

230 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(21);

231 i‡(
	`lök
("foo", "foo"Ë!-1Ë
	`e
(22);

232 i‡(
î∫o
 !
EEXIST
Ë
	`e
(23);

233 i‡(
	`lök
("foo", "b¨"Ë!0Ë
	`e
(24);

234 i‡(
	`lök
("foo", "b¨"Ë!-1Ë
	`e
(25);

235 i‡(
î∫o
 !
EEXIST
Ë
	`e
(26);

236 i‡(
	`lök
("foo", "b¨"Ë!-1Ë
	`e
(27);

237 i‡(
î∫o
 !
EEXIST
Ë
	`e
(28);

238 i‡(
	`u∆ök
("n⁄o"Ë!-1Ë
	`e
(29);

239 i‡(
î∫o
 !
ENOENT
Ë
	`e
(30);

240 i‡(
	`u∆ök
(""Ë!-1Ë
	`e
(31);

241 i‡(
î∫o
 !
ENOENT
Ë
	`e
(32);

242 i‡(
	`lök
("foo", ""Ë!-1Ë
	`e
(33);

243 i‡(
î∫o
 !
ENOENT
Ë
	`e
(34);

244 i‡(
	`lök
("", "foo"Ë!-1Ë
	`e
(35);

245 i‡(
î∫o
 !
ENOENT
Ë
	`e
(36);

246 i‡(
	`lök
("", ""Ë!-1Ë
	`e
(37);

247 i‡(
î∫o
 !
ENOENT
Ë
	`e
(38);

248 i‡(
	`lök
("/foo/b¨/foo", "a"Ë!-1Ë
	`e
(39);

249 i‡(
î∫o
 !
ENOENT
Ë
	`e
(40);

250 i‡(
	`lök
("foo", "/foo/b¨/foo"Ë!-1Ë
	`e
(41);

251 i‡(
î∫o
 !
ENOENT
Ë
	`e
(42);

252 i‡(
	`lök
("/a/b/c", "/d/e/f"Ë!-1Ë
	`e
(43);

253 i‡(
î∫o
 !
ENOENT
Ë
	`e
(44);

254 i‡(
	`lök
("abc", "a"Ë!-1Ë
	`e
(45);

255 i‡(
î∫o
 !
ENOENT
Ë
	`e
(46);

256 i‡(
	`lök
("foo/b¨", "b¨"Ë!-1Ë
	`e
(47);

257 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(48);

258 i‡(
	`lök
("foo", "foo/b¨"Ë!-1Ë
	`e
(49);

259 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(50);

260 i‡(
	`u∆ök
("foo/b¨"Ë!-1Ë
	`e
(51);

261 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(52);

262 i‡(!
su≥ru£r
) {

263 i‡(
	`lök
(".", "roŸ"Ë!-1Ë
	`e
(55);

264 i‡(
î∫o
 !
EPERM
Ë
	`e
(56);

265 i‡(
	`u∆ök
("roŸ"Ë!-1Ë
	`e
(57);

266 i‡(
î∫o
 !
ENOENT
Ë
	`e
(58);

268 i‡(
	`mkdú
("dú", 0777Ë!0Ë
	`e
(59);

269 i‡(
su≥ru£r
) {

270 i‡(
	`rmdú
("dú"Ë!0Ë
	`e
(63);

272 i‡(!
su≥ru£r
) {

273 i‡(
	`u∆ök
("dú"Ë!-1Ë
	`e
(64);

274 i‡(
î∫o
 !
EPERM
Ë
	`e
(65);

275 i‡(
	`rmdú
("dú"Ë!0Ë
	`e
(66);

277 
	}
}

279 
	$°©eq
(
°p1
, 
°p2
)

280 
°©
 *
°p1
, *
°p2
;

282 i‡(
°p1
->
°_dev
 !
°p2
->st_dev)  0;

283 i‡(
°p1
->
°_öo
 !
°p2
->st_ino)  0;

284 i‡(
°p1
->
°_mode
 !
°p2
->st_mode)  0;

285 i‡(
°p1
->
°_∆ök
 !
°p2
->st_nlink)  0;

286 i‡(
°p1
->
°_uid
 !
°p2
->st_uid)  0;

287 i‡(
°p1
->
°_gid
 !
°p2
->st_gid)  0;

288 i‡(
°p1
->
°_rdev
 !
°p2
->st_rdev)  0;

289 i‡(
°p1
->
°_size
 !
°p2
->st_size)  0;

290 i‡(
°p1
->
°_©ime
 !
°p2
->st_atime)  0;

291 i‡(
°p1
->
°_mtime
 !
°p2
->st_mtime)  0;

292 i‡(
°p1
->
°_˘ime
 !
°p2
->st_ctime)  0;

294 
	}
}

296 
	$makñ⁄g«mes
()

298 
i
;

300 
	`mem£t
(
MaxName
, 'a', 
NAME_MAX
);

301 
MaxName
[
NAME_MAX
] = '\0';

302 
i
 = 0; i < 
PATH_MAX
 - 1; i++) {

303 
MaxP©h
[
i
++] = '.';

304 
MaxP©h
[
i
] = '/';

306 
MaxP©h
[
PATH_MAX
 - 1] = '\0';

308 
	`°r˝y
(
ToL⁄gName
, 
MaxName
);

309 
	`°r˝y
(
ToL⁄gP©h
, 
MaxP©h
);

311 
ToL⁄gName
[
NAME_MAX
] = 'a';

312 
ToL⁄gName
[
NAME_MAX
 + 1] = '\0';

314 
ToL⁄gP©h
[
PATH_MAX
 - 1] = '/';

315 
ToL⁄gP©h
[
PATH_MAX
] = '\0';

316 
	}
}

319 
	$e
(
n
)

320 
n
;

322 
îr_num
 = 
î∫o
;

324 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d: ", 
subã°
, 
n
, 
î∫o
);

325 
î∫o
 = 
îr_num
;

326 
	`≥º‹
("");

327 i‡(
îr˘
++ > 
MAX_ERROR
) {

328 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

329 
	`chdú
("..");

330 
	`sy°em
("rm -rf DIR*");

331 
	`exô
(1);

333 
î∫o
 = 0;

334 
	}
}

337 
	$quô
()

339 
	`chdú
("..");

340 
	`sy°em
("rm -rf DIR_26");

342 i‡(
îr˘
 == 0) {

343 
	`¥ötf
("ok\n");

344 
	`exô
(0);

346 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

347 
	`exô
(1);

349 
	}
}

	@test27.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/°©.h
>

5 
	~<f˙é.h
>

6 
	~<uni°d.h
>

7 
	~<°dlib.h
>

8 
	~<î∫o.h
>

9 
	~<limôs.h
>

10 
	~<°rög.h
>

11 
	~<limôs.h
>

12 
	~<time.h
>

13 
	~<°dio.h
>

15 
	#MODE_MASK
 (
S_IRWXU
 | 
S_IRWXG
 | 
S_IRWXO
 | 
S_ISUID
 | 
S_ISGID
)

	)

16 
	#MAX_ERROR
 4

	)

17 
	#ITERATIONS
 2

	)

19 
	#Sy°em
(
cmd
Ëi‡(
	`sy°em
(cmdË!0Ë
	`¥ötf
("``%s'' faûed\n", cmd)

	)

20 
	#Chdú
(
dú
Ëi‡(
	`chdú
(dúË!0Ë
	`¥ötf
("C™'àgŸÿ%s\n", dú)

	)

22 
	gîr˘
 = 0;

23 
	gsubã°
 = 1;

24 
	gsu≥ru£r
;

25 
	gMaxName
[
NAME_MAX
 + 1];

26 
	gMaxP©h
[
PATH_MAX
];

27 
	gToL⁄gName
[
NAME_MAX
 + 2];

28 
	gToL⁄gP©h
[
PATH_MAX
 + 1];

30 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

31 
_PROTOTYPE
(
ã°27a
, ());

32 
_PROTOTYPE
(
ã°27b
, ());

33 
_PROTOTYPE
(
ã°27c
, ());

34 
_PROTOTYPE
(
makñ⁄g«mes
, ());

35 
_PROTOTYPE
(
e
, (
__n
));

36 
_PROTOTYPE
(
quô
, ());

38 
	$maö
(
¨gc
, 
¨gv
)

39 
¨gc
;

40 *
¨gv
[];

42 
i
, 
m
 = 0xFFFF;

44 
	`sync
();

45 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

46 
	`¥ötf
("Test 27 ");

47 
	`fÊush
(
°dout
);

48 
	`Sy°em
("rm -rf DIR_27; mkdir DIR_27");

49 
	`Chdú
("DIR_27");

50 
su≥ru£r
 = (
	`gëuid
() == 0);

51 
	`makñ⁄g«mes
();

53 
i
 = 0; i < 
ITERATIONS
; i++) {

54 i‡(
m
 & 0001Ë
	`ã°27a
();

55 i‡(
m
 & 0002Ë
	`ã°27b
();

56 i‡(
m
 & 0004Ë
	`ã°27c
();

58 
	`quô
();

59 
	}
}

62 
	$ã°27a
()

64 
°©
 
°1
, 
°2
;

65 
time_t
 
time1
, 
time2
;

66 
fd
, 
pfd
[2];

68 
subã°
 = 1;

70 
	`time
(&
time1
);

71 
time1
 >
	`time
((
time_t
 *)0))

73 
	`Sy°em
("echo 7bytes > foo; chmod 4750 foo");

74 i‡(
	`°©
("foo", &
°1
Ë!0Ë
	`e
(1);

75 
	`time
(&
time2
);

76 
time2
 >
	`time
((
time_t
 *)0))

78 
	`time
(&
time2
);

79 i‡((
°1
.
°_mode
 & 
MODE_MASK
Ë!04750Ë
	`e
(2);

80 i‡(
°1
.
°_∆ök
 !1Ë
	`e
(3);

81 i‡(
°1
.
°_uid
 !
	`gëeuid
()Ë
	`e
(4);

82 #i‡
	`deföed
(
NGROUPS_MAX
) && NGROUPS_MAX == 0

83 i‡(
°1
.
°_gid
 !
	`gëegid
()Ë
	`e
(5);

85 i‡(
°1
.
°_size
 !(
size_t
Ë7Ë
	`e
(6);

86 i‡(
°1
.
°_©ime
 <
time1
Ë
	`e
(7);

87 i‡(
°1
.
°_©ime
 >
time2
Ë
	`e
(8);

88 i‡(
°1
.
°_˘ime
 <
time1
Ë
	`e
(9);

89 i‡(
°1
.
°_˘ime
 >
time2
Ë
	`e
(10);

90 i‡(
°1
.
°_mtime
 <
time1
Ë
	`e
(11);

91 i‡(
°1
.
°_mtime
 >
time2
Ë
	`e
(12);

94 
	`Sy°em
("echo 7bytes > bar");

95 
fd
 = 
	`›í
("b¨", 
O_RDWR
 | 
O_APPEND
);

96 i‡(
fd
 !3Ë
	`e
(13);

97 i‡(
	`°©
("b¨", &
°1
Ë!0Ë
	`e
(14);

98 i‡(
	`f°©
(
fd
, &
°2
Ë!0Ë
	`e
(15);

101 i‡(
°1
.
°_dev
 !
°2
.°_devË
	`e
(16);

102 i‡(
°1
.
°_öo
 !
°2
.°_öoË
	`e
(17);

103 i‡(
°1
.
°_mode
 !
°2
.°_modeË
	`e
(18);

104 i‡(
°1
.
°_∆ök
 !
°2
.°_∆ökË
	`e
(19);

105 i‡(
°1
.
°_uid
 !
°2
.°_uidË
	`e
(20);

106 i‡(
°1
.
°_gid
 !
°2
.°_gidË
	`e
(21);

107 i‡(
°1
.
°_size
 !
°2
.°_sizeË
	`e
(22);

108 i‡(
°1
.
°_©ime
 !
°2
.°_©imeË
	`e
(23);

109 i‡(
°1
.
°_˘ime
 !
°2
.°_˘imeË
	`e
(24);

110 i‡(
°1
.
°_mtime
 !
°2
.°_mtimeË
	`e
(25);

111 
	`time
(&
time1
);

112 
time1
 >
	`time
((
time_t
 *)0))

114 
	`Sy°em
("chmod 755 bar");

115 
	`Sy°em
("rm -f foobar;Ün bar foobar");

116 i‡(
	`wrôe
(
fd
, "foo", 4Ë!4Ë
	`e
(26);

117 i‡(
	`°©
("b¨", &
°2
Ë!0Ë
	`e
(27);

118 i‡(
°2
.
°_dev
 !
°1
.°_devË
	`e
(28);

119 i‡(
°2
.
°_öo
 !
°1
.°_öoË
	`e
(29);

120 i‡((
°2
.
°_mode
 & 
MODE_MASK
Ë!0755Ë
	`e
(30);

121 i‡(!
	`S_ISREG
(
°2
.
°_mode
)Ë
	`e
(31);

122 i‡(
°2
.
°_∆ök
 !
°1
.°_∆ök + 1Ë
	`e
(32);

123 i‡(
°2
.
°_uid
 !
°1
.°_uidË
	`e
(33);

124 i‡(
°2
.
°_gid
 !
°1
.°_gidË
	`e
(34);

125 i‡(
°2
.
°_size
 !(
size_t
Ë11Ë
	`e
(35);

126 i‡(
°2
.
°_©ime
 !
°1
.°_©imeË
	`e
(36);

127 i‡(
°2
.
°_˘ime
 <
°1
.°_˘imeË
	`e
(37);

128 i‡(
°2
.
°_mtime
 <
°1
.°_mtimeË
	`e
(38);

129 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(39);

132 i‡(
	`°©
("/dev/ây", &
°1
Ë!0Ë
	`e
(40);

133 i‡(!
	`S_ISCHR
(
°1
.
°_mode
)Ë
	`e
(41);

134 #ifde‡
_MINIX


135 i‡(
	`°©
("/dev/øm", &
°1
Ë!0Ë
	`e
(42);

136 i‡(!
	`S_ISBLK
(
°1
.
°_mode
)Ë
	`e
(43);

140 
	`time
(&
time1
);

141 
time1
 >
	`time
((
time_t
 *)0))

143 i‡(
	`mkfifo
("fifo", 0640Ë!0Ë
	`e
(44);

144 i‡(
	`°©
("fifo", &
°1
Ë!0Ë
	`e
(45);

145 
	`time
(&
time2
);

146 
time2
 >
	`time
((
time_t
 *)0))

148 
	`time
(&
time2
);

149 i‡(!
	`S_ISFIFO
(
°1
.
°_mode
)Ë
	`e
(46);

150 i‡(
°1
.
°_∆ök
 !1Ë
	`e
(47);

151 i‡(
°1
.
°_uid
 !
	`gëeuid
()Ë
	`e
(48);

152 #i‡
	`deföed
(
NGROUPS_MAX
) && NGROUPS_MAX == 0

153 i‡(
°1
.
°_gid
 !
	`gëegid
()Ë
	`e
(49);

155 i‡(
°1
.
°_size
 !(
size_t
Ë0Ë
	`e
(50);

156 i‡(
°1
.
°_©ime
 <
time1
Ë
	`e
(51);

157 i‡(
°1
.
°_©ime
 >
time2
Ë
	`e
(52);

158 i‡(
°1
.
°_˘ime
 <
time1
Ë
	`e
(53);

159 i‡(
°1
.
°_˘ime
 >
time2
Ë
	`e
(54);

160 i‡(
°1
.
°_mtime
 <
time1
Ë
	`e
(55);

161 i‡(
°1
.
°_mtime
 >
time2
Ë
	`e
(56);

165 
	`time
(&
time1
);

166 
time1
 >
	`time
((
time_t
 *)0))

168 i‡(
	`pùe
(
pfd
Ë!0Ë
	`e
(57);

169 i‡(
	`f°©
(
pfd
[0], &
°1
Ë!0Ë
	`e
(58);

170 
	`time
(&
time2
);

171 
time2
 >
	`time
((
time_t
 *)0))

173 
	`time
(&
time2
);

174 i‡(!(
	`S_ISFIFO
(
°1
.
°_mode
))Ë
	`e
(59);

175 i‡(
°1
.
°_uid
 !
	`gëeuid
()Ë
	`e
(60);

176 i‡(
°1
.
°_gid
 !
	`gëegid
()Ë
	`e
(61);

177 i‡(
°1
.
°_size
 !(
size_t
Ë0Ë
	`e
(62);

178 i‡(
°1
.
°_©ime
 <
time1
Ë
	`e
(63);

179 i‡(
°1
.
°_©ime
 >
time2
Ë
	`e
(64);

180 i‡(
°1
.
°_˘ime
 <
time1
Ë
	`e
(65);

181 i‡(
°1
.
°_˘ime
 >
time2
Ë
	`e
(66);

182 i‡(
°1
.
°_mtime
 <
time1
Ë
	`e
(67);

183 i‡(
°1
.
°_mtime
 >
time2
Ë
	`e
(68);

184 i‡(
	`f°©
(
pfd
[1], &
°1
Ë!0Ë
	`e
(69);

185 i‡(!(
	`S_ISFIFO
(
°1
.
°_mode
))Ë
	`e
(70);

186 i‡(
°1
.
°_uid
 !
	`gëeuid
()Ë
	`e
(71);

187 i‡(
°1
.
°_gid
 !
	`gëegid
()Ë
	`e
(72);

188 i‡(
°1
.
°_size
 !(
size_t
Ë0Ë
	`e
(73);

189 i‡(
°1
.
°_©ime
 < 
time1
Ë
	`e
(74);

190 i‡(
°1
.
°_©ime
 > 
time2
Ë
	`e
(75);

191 i‡(
°1
.
°_˘ime
 < 
time1
Ë
	`e
(76);

192 i‡(
°1
.
°_˘ime
 > 
time2
Ë
	`e
(77);

193 i‡(
°1
.
°_mtime
 < 
time1
Ë
	`e
(78);

194 i‡(
°1
.
°_mtime
 > 
time2
Ë
	`e
(79);

195 i‡(
	`˛o£
(
pfd
[0]Ë!0Ë
	`e
(80);

196 i‡(
	`˛o£
(
pfd
[1]Ë!0Ë
	`e
(81);

199 
	`time
(&
time1
);

200 
time1
 >
	`time
((
time_t
 *)0))

202 
	`Sy°em
("mkdir dir");

203 i‡(
	`°©
("dú", &
°1
Ë!0Ë
	`e
(82);

204 
	`time
(&
time2
);

205 
time2
 >
	`time
((
time_t
 *)0))

207 
	`time
(&
time2
);

208 i‡(!(
	`S_ISDIR
(
°1
.
°_mode
))Ë
	`e
(83);

209 i‡(
°1
.
°_uid
 !
	`gëeuid
()Ë
	`e
(84);

210 #i‡
	`deföed
(
NGROUPS_MAX
) && NGROUPS_MAX == 0

211 i‡(
°1
.
°_gid
 !
	`gëegid
()Ë
	`e
(85);

213 i‡(
°1
.
°_©ime
 < 
time1
Ë
	`e
(86);

214 i‡(
°1
.
°_©ime
 > 
time2
Ë
	`e
(87);

215 i‡(
°1
.
°_˘ime
 < 
time1
Ë
	`e
(88);

216 i‡(
°1
.
°_˘ime
 > 
time2
Ë
	`e
(89);

217 i‡(
°1
.
°_mtime
 < 
time1
Ë
	`e
(90);

218 i‡(
°1
.
°_mtime
 > 
time2
Ë
	`e
(91);

219 
	`Sy°em
("rm -rf ../DIR_27/*");

220 
	}
}

222 
	$ã°27b
()

224 
°©
 
°
;

225 
fd
;

227 
subã°
 = 2;

230 i‡(
	`mkdú
(
MaxName
, 0777Ë!0Ë
	`e
(1);

231 i‡(
	`°©
(
MaxName
, &
°
Ë!0Ë
	`e
(2);

232 i‡((
fd
 = 
	`›í
(
MaxName
, 
O_RDONLY
)Ë!3Ë
	`e
(3);

233 i‡(
	`f°©
(
fd
, &
°
Ë!0Ë
	`e
(4);

234 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(5);

235 i‡(
	`rmdú
(
MaxName
Ë!0Ë
	`e
(6);

236 i‡(
	`°©
(
MaxP©h
, &
°
Ë!0Ë
	`e
(7);

237 i‡((
fd
 = 
	`›í
(
MaxP©h
, 
O_RDONLY
)Ë!3Ë
	`e
(8);

238 i‡(
	`f°©
(
fd
, &
°
Ë!0Ë
	`e
(9);

239 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(10);

240 
	`Sy°em
("rm -rf ../DIR_27/*");

241 
	}
}

243 
	$ã°27c
()

245 
°©
 
°
;

246 
fd
, 
i
;

248 
subã°
 = 3;

250 
	`Sy°em
("echo Hi > foo");

252 
	`Chdú
("..");

253 
	`Sy°em
("chmod 677 DIR_27");

254 i‡(
	`°©
("DIR_27/n⁄o", &
°
Ë!-1Ë
	`e
(1);

255 i‡(
su≥ru£r
) {

256 i‡(
î∫o
 !
ENOENT
Ë
	`e
(2);

258 i‡(!
su≥ru£r
) {

259 i‡(
î∫o
 !
EACCES
Ë
	`e
(3);

261 
	`Sy°em
("chmod 777 DIR_27");

262 
	`Chdú
("DIR_27");

265 #ifde‡
_POSIX_NO_TRUNC


266 #i‡
_POSIX_NO_TRUNC
 - 0 != -1

267 i‡(
	`°©
(
ToL⁄gName
, &
°
Ë!-1Ë
	`e
(4);

268 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(5);

271 
	~"îr‹,Åhi†ˇ£Ñequúe†dy«mi¯check†™d i†nŸ h™dÀd
"

273 i‡(
	`°©
(
ToL⁄gP©h
, &
°
Ë!-1Ë
	`e
(6);

274 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(7);

277 i‡(
	`°©
("n⁄o", &
°
Ë!-1Ë
	`e
(8);

278 i‡(
î∫o
 !
ENOENT
Ë
	`e
(9);

279 i‡(
	`°©
("", &
°
Ë!-1Ë
	`e
(10);

280 i‡(
î∫o
 !
ENOENT
Ë
	`e
(11);

281 i‡(
	`°©
("foo/b¨", &
°
Ë!-1Ë
	`e
(12);

282 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(13);

285 
i
 = 3; i < 6; i++) {

286 i‡(
	`f°©
(
i
, &
°
Ë!-1Ë
	`e
(14);

287 i‡(
î∫o
 !
EBADF
Ë
	`e
(15);

291 i‡((
fd
 = 
	`›í
("foo", 
O_RDONLY
)Ë!3Ë
	`e
(16);

292 i‡(
	`f°©
(
fd
, &
°
Ë!0Ë
	`e
(17);

293 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(18);

294 i‡(
	`f°©
(
fd
, &
°
Ë!-1Ë
	`e
(19);

295 i‡(
î∫o
 !
EBADF
Ë
	`e
(20);

296 
	`Sy°em
("rm -rf ../DIR_27/*");

297 
	}
}

300 
	$makñ⁄g«mes
()

302 
i
;

304 
	`mem£t
(
MaxName
, 'a', 
NAME_MAX
);

305 
MaxName
[
NAME_MAX
] = '\0';

306 
i
 = 0; i < 
PATH_MAX
 - 1; i++) {

307 
MaxP©h
[
i
++] = '.';

308 
MaxP©h
[
i
] = '/';

310 
MaxP©h
[
PATH_MAX
 - 1] = '\0';

312 
	`°r˝y
(
ToL⁄gName
, 
MaxName
);

313 
	`°r˝y
(
ToL⁄gP©h
, 
MaxP©h
);

315 
ToL⁄gName
[
NAME_MAX
] = 'a';

316 
ToL⁄gName
[
NAME_MAX
 + 1] = '\0';

317 
ToL⁄gP©h
[
PATH_MAX
 - 1] = '/';

318 
ToL⁄gP©h
[
PATH_MAX
] = '\0';

319 
	}
}

321 
	$e
(
n
)

322 
n
;

324 
îr_num
 = 
î∫o
;

326 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d: ", 
subã°
, 
n
, 
î∫o
);

327 
î∫o
 = 
îr_num
;

328 
	`≥º‹
("");

329 i‡(
îr˘
++ > 
MAX_ERROR
) {

330 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

331 
	`chdú
("..");

332 
	`sy°em
("rm -rf DIR*");

333 
	`exô
(1);

335 
î∫o
 = 0;

336 
	}
}

339 
	$quô
()

341 
	`Chdú
("..");

342 
	`Sy°em
("rm -rf DIR_27");

344 i‡(
îr˘
 == 0) {

345 
	`¥ötf
("ok\n");

346 
	`exô
(0);

348 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

349 
	`exô
(1);

351 
	}
}

	@test28.c

10 
	~<sys/ty≥s.h
>

11 
	~<sys/°©.h
>

12 
	~<sys/waô.h
>

13 
	~<°rög.h
>

14 
	~<°dlib.h
>

15 
	~<uni°d.h
>

16 
	~<f˙é.h
>

17 
	~<î∫o.h
>

18 
	~<dúít.h
>

19 
	~<limôs.h
>

20 
	~<time.h
>

21 
	~<°dio.h
>

23 
	#MAX_ERROR
 4

	)

24 
	#ITERATIONS
 2

	)

26 
	#DIRENT0
 ((
dúít
 *Ë
NULL
)

	)

28 
	#Sy°em
(
cmd
Ëi‡(
	`sy°em
(cmdË!0Ë
	`¥ötf
("``%s'' faûed\n", cmd)

	)

29 
	#Chdú
(
dú
Ëi‡(
	`chdú
(dúË!0Ë
	`¥ötf
("C™'àgŸÿ%s\n", dú)

	)

31 
	gîr˘
 = 0;

32 
	gsubã°
 = 1;

33 
	gsu≥ru£r
;

34 
	gMaxName
[
NAME_MAX
 + 1];

35 
	gMaxP©h
[
PATH_MAX
];

36 
	gToL⁄gName
[
NAME_MAX
 + 2];

37 
	gToL⁄gP©h
[
PATH_MAX
 + 1];

39 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

40 
_PROTOTYPE
(
ã°28a
, ());

41 
_PROTOTYPE
(
ã°28c
, ());

42 
_PROTOTYPE
(
ã°28b
, ());

43 
_PROTOTYPE
(
makñ⁄g«mes
, ());

44 
_PROTOTYPE
(
e
, (
n
));

45 
_PROTOTYPE
(
quô
, ());

47 
	$maö
(
¨gc
, 
¨gv
)

48 
¨gc
;

49 *
¨gv
[];

51 
i
, 
m
 = 0xFFFF;

53 
	`sync
();

54 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

55 
	`¥ötf
("Test 28 ");

56 
	`fÊush
(
°dout
);

57 
su≥ru£r
 = (
	`gëuid
() == 0);

58 
	`makñ⁄g«mes
();

59 
	`sy°em
("chmod 777 DIR_28/* DIR_28/*/* > /dev/null 2>&1");

60 
	`Sy°em
("rm -rf DIR_28; mkdir DIR_28");

61 
	`Chdú
("DIR_28");

62 
	`umask
(0000);

64 
i
 = 0; i < 
ITERATIONS
; i++) {

65 i‡(
m
 & 0001Ë
	`ã°28a
();

66 i‡(
m
 & 0002Ë
	`ã°28b
();

67 i‡(
m
 & 0004Ë
	`ã°28c
();

69 
	`quô
();

70 
	}
}

73 
	$ã°28a
()

75 
mode
;

76 
°©
 
°
;

77 
time_t
 
time1
, 
time2
;

78 
DIR
 *
dúp
;

79 
dúít
 *
dï
;

80 
dŸ
 = 0, 
dŸdŸ
 = 0;

82 
subã°
 = 1;

84 
	`Sy°em
("rm -rf foo /tmp/foo");

87 i‡(
	`mkdú
("./foo", 0777Ë!0Ë
	`e
(1);

88 i‡(
	`mkdú
("./foo/b¨", 0777Ë!0Ë
	`e
(2);

89 i‡(
	`rmdú
("foo/b¨"Ë!0Ë
	`e
(3);

90 i‡(
	`mkdú
("foo/../foo/b¨", 0777Ë!0Ë
	`e
(4);

91 i‡(
	`rmdú
("./foo/b¨"Ë!0Ë
	`e
(5);

94 i‡((
dúp
 = 
	`›ídú
("foo")Ë=(
DIR
 *Ë
NULL
Ë
	`e
(6);

95 i‡((
dï
 = 
	`ªaddú
(
dúp
)Ë=
DIRENT0
Ë
	`e
(7);

96 i‡(
	`°rcmp
(
dï
->
d_«me
, "."Ë=0Ë
dŸ
 += 1;

97 i‡(
	`°rcmp
(
dï
->
d_«me
, ".."Ë=0Ë
dŸdŸ
 += 1;

98 i‡((
dï
 = 
	`ªaddú
(
dúp
)Ë=
DIRENT0
Ë
	`e
(8);

99 i‡(
	`°rcmp
(
dï
->
d_«me
, "."Ë=0Ë
dŸ
 += 1;

100 i‡(
	`°rcmp
(
dï
->
d_«me
, ".."Ë=0Ë
dŸdŸ
 += 1;

101 i‡((
dï
 = 
	`ªaddú
(
dúp
)Ë!
DIRENT0
Ë
	`e
(9);

102 i‡(
dŸ
 =1 && 
dŸdŸ
 !1Ë
	`e
(10);

103 i‡(
	`˛o£dú
(
dúp
Ë!0Ë
	`e
(11);

104 i‡(
	`rmdú
("./foo"Ë!0Ë
	`e
(12);

107 i‡(
	`mkdú
("/tmp/foo", 0777Ë!0Ë
	`e
(13);

108 i‡(
	`mkdú
("/tmp/foo/b¨", 0777Ë!0Ë
	`e
(14);

109 i‡(
	`rmdú
("/tmp/foo/b¨"Ë!0Ë
	`e
(15);

110 i‡(
	`rmdú
("/tmp/foo"Ë!0Ë
	`e
(16);

113 
mode
 = 0; mode <= 0777; mode++) {

114 i‡(
	`mkdú
("foo", 
mode
Ë!0Ë
	`e
(17);

115 i‡(
	`°©
("foo", &
°
Ë!0Ë
	`e
(18);

116 i‡((
°
.
°_mode
 & 0777Ë!
mode
Ë
	`e
(19);

117 i‡(
	`rmdú
("foo"Ë!0Ë
	`e
(20);

121 
	`time
(&
time1
);

122 
time1
 >
	`time
((
time_t
 *)0))

124 i‡(
	`mkdú
("foo", 0765Ë!0Ë
	`e
(21);

125 i‡(
	`°©
("foo", &
°
Ë!0Ë
	`e
(22);

126 
	`time
(&
time2
);

127 
time2
 >
	`time
((
time_t
 *)0))

129 
	`time
(&
time2
);

130 i‡(
°
.
°_∆ök
 !2Ë
	`e
(23);

131 i‡(
°
.
°_uid
 !
	`gëeuid
()Ë
	`e
(24);

132 i‡(
°
.
°_gid
 !
	`gëegid
()Ë
	`e
(25);

133 i‡(
°
.
°_size
 < 0Ë
	`e
(26);

134 i‡((
°
.
°_mode
 & 0777Ë!0765Ë
	`e
(27);

135 i‡(
°
.
°_©ime
 <
time1
Ë
	`e
(28);

136 i‡(
°
.
°_©ime
 >
time2
Ë
	`e
(29);

137 i‡(
°
.
°_˘ime
 <
time1
Ë
	`e
(30);

138 i‡(
°
.
°_˘ime
 >
time2
Ë
	`e
(31);

139 i‡(
°
.
°_mtime
 <
time1
Ë
	`e
(32);

140 i‡(
°
.
°_mtime
 >
time2
Ë
	`e
(33);

143 i‡(
	`°©
(".", &
°
Ë!0Ë
	`e
(34);

144 
	`time
(&
time2
);

145 
time2
 >
	`time
((
time_t
 *)0))

147 
	`time
(&
time2
);

148 i‡(
°
.
°_˘ime
 <
time1
Ë
	`e
(35);

149 i‡(
°
.
°_˘ime
 >
time2
Ë
	`e
(36);

150 i‡(
°
.
°_mtime
 <
time1
Ë
	`e
(37);

151 i‡(
°
.
°_mtime
 >
time2
Ë
	`e
(38);

152 
	`time
(&
time1
);

153 
time1
 >
	`time
((
time_t
 *)0))

155 i‡(
	`rmdú
("foo"Ë!0Ë
	`e
(39);

156 i‡(
	`°©
(".", &
°
Ë!0Ë
	`e
(40);

157 
	`time
(&
time2
);

158 
time2
 >
	`time
((
time_t
 *)0))

160 
	`time
(&
time2
);

161 i‡(
°
.
°_˘ime
 <
time1
Ë
	`e
(41);

162 i‡(
°
.
°_˘ime
 >
time2
Ë
	`e
(42);

163 i‡(
°
.
°_mtime
 <
time1
Ë
	`e
(43);

164 i‡(
°
.
°_mtime
 >
time2
Ë
	`e
(44);

165 
	}
}

168 
	$ã°28b
()

170 
°©
 
°
;

171 
DIR
 *
dúp
;

172 
dúít
 *
dï
;

173 
fd
;

174 
Ÿhî
 = 0, 
dŸ
 = 0, 
dŸdŸ
 = 0;

175 
rmdú_ªsu…
;

176 
∆ök_t
 
∆ök
;

177 
b¨
[] = "foo/bar.xxx";

178 
°©_loc
;

180 
subã°
 = 2;

182 
	`Sy°em
("rm -rf ../DIR_28/*");

185 i‡(
	`mkdú
("/../../..////.//../tmp/foo/", 0777Ë!0Ë
	`e
(1);

186 i‡(
	`mkdú
("/tmp/foo//////..//foo//../foo/b¨/", 0777Ë!0Ë
	`e
(2);

187 i‡(
	`rmdú
("///tmp/..//tmp/foo/b¨//../..//foo/b¨"Ë!0Ë
	`e
(3);

188 i‡(
	`mkdú
("///tmp/foo/foob¨//", 0777Ë!0Ë
	`e
(4);

189 i‡(
	`rmdú
("/tmp/foo/foob¨//"Ë!0Ë
	`e
(5);

190 i‡(
	`rmdú
("/.././/././/tmp/foo///////////////"Ë!0Ë
	`e
(6);

191 i‡(
	`rmdú
("/tmp/foo"Ë!-1Ë
	`e
(7);

193 i‡(
LINK_MAX
 >999Ë
	`e
(8);

196 i‡(
	`mkdú
(
MaxName
, 0777Ë!0Ë
	`e
(9);

197 i‡(
	`rmdú
(
MaxName
Ë!0Ë
	`e
(10);

198 
MaxP©h
[
	`°æí
(MaxPath) - 2] = '/';

199 
MaxP©h
[
	`°æí
(MaxPath) - 1] = 'a';

200 i‡(
	`mkdú
(
MaxP©h
, 0777Ë!0Ë
	`e
(11);

201 i‡(
	`rmdú
(
MaxP©h
Ë!0Ë
	`e
(12);

204 i‡(
	`mkdú
(
ToL⁄gName
, 0777Ë!0Ë
	`e
(17);

205 i‡(
	`rmdú
(
ToL⁄gName
Ë!0Ë
	`e
(18);

206 
ToL⁄gP©h
[
	`°æí
(ToLongPath) - 2] = '/';

207 
ToL⁄gP©h
[
	`°æí
(ToLongPath) - 1] = 'a';

208 i‡(
	`mkdú
(
ToL⁄gP©h
, 0777Ë!-1Ë
	`e
(19);

209 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(20);

210 i‡(
	`rmdú
(
ToL⁄gP©h
Ë!-1Ë
	`e
(21);

211 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(22);

214 i‡(
	`mkdú
("foo", 0777Ë!0Ë
	`e
(23);

215 
∆ök
 = 2;Çlök < 
LINK_MAX
;Çlink++) {

216 
b¨
[8] = (Ë((
∆ök
 / 100) % 10) + '0';

217 
b¨
[9] = (Ë((
∆ök
 / 10) % 10) + '0';

218 
b¨
[10] = (Ë(
∆ök
 % 10) + '0';

219 i‡(
	`mkdú
(
b¨
, 0777Ë!0Ë
	`e
(24);

221 i‡(
	`°©
("foo", &
°
Ë!0Ë
	`e
(25);

222 i‡(
°
.
°_∆ök
 !
LINK_MAX
Ë
	`e
(26);

223 i‡(
	`mkdú
("foo/n⁄o", 0777Ë!-1Ë
	`e
(27);

224 i‡(
î∫o
 !
EMLINK
Ë
	`e
(28);

225 
	`Sy°em
("rm -rf foo/nono");

228 i‡(
	`rmdú
("foo"Ë!-1Ë
	`e
(29);

229 i‡(
î∫o
 !
EEXIST
 &&Éºnÿ!
ENOTEMPTY
Ë
	`e
(30);

232 
	`Sy°em
("rm -rf foo");

233 i‡(
	`mkdú
("foo", 0777Ë!0Ë
	`e
(31);

234 
	`Sy°em
("> foo/empty");

235 i‡(
	`rmdú
("foo"Ë!-1Ë
	`e
(32);

236 i‡(
î∫o
 !
EEXIST
 &&Éºnÿ!
ENOTEMPTY
Ë
	`e
(33);

237 i‡(
	`u∆ök
("foo/em±y"Ë!0Ë
	`e
(34);

240 i‡(
su≥ru£r
) {

241 i‡(
	`lök
("foo", "foŸoo"Ë!0Ë
	`e
(35);

242 i‡(
	`rmdú
("foŸoo"Ë!0Ë
	`e
(36);

243 i‡(
	`chdú
("foŸoo"Ë!-1Ë
	`e
(37);

244 i‡(
î∫o
 !
ENOENT
Ë
	`e
(38);

246 #ifde‡
_MINIX


248 i‡(!
su≥ru£r
) {

249 i‡(
	`lök
("foo", "foŸoo"Ë!-1Ë
	`e
(39);

250 i‡(
î∫o
 !
EPERM
Ë
	`e
(40);

251 i‡(
	`u∆ök
("foo"Ë!-1Ë
	`e
(41);

252 i‡(
î∫o
 !
EPERM
Ë
	`e
(42);

262 
	`Sy°em
("rm -rf /tmp/sema[12].07");

263 
	`f‹k
()) {

264 -1: 
	`¥ötf
("Can't fork\n"); ;

267 
	`Æ¨m
(20);

268 i‡((
fd
 = 
	`›í
("foo", 
O_RDONLY
)Ë<2Ë
	`e
(43);

269 i‡((
dúp
 = 
	`›ídú
("foo")Ë=(
DIR
 *Ë
NULL
Ë
	`e
(44);

271 
	`sy°em
(">/tmp/sema1.07; whileÅest -f /tmp/sema1.07; do sleep 1;done");

272 (
dï
 = 
	`ªaddú
(
dúp
)Ë!
DIRENT0
) {

273 i‡(
	`°rcmp
(
dï
->
d_«me
, "..") == 0)

274 
dŸdŸ
 += 1;

275 i‡(
	`°rcmp
(
dï
->
d_«me
, ".") == 0)

276 
dŸ
 += 1;

278 
Ÿhî
 += 1;

280 i‡(
dŸdŸ
 !0Ë
	`e
(45);

281 i‡(
dŸ
 !0Ë
	`e
(46);

282 i‡(
Ÿhî
 !0Ë
	`e
(47);

285 i‡(
	`¸ót
("foo/n⁄o", 0777Ë!-1Ë
	`e
(48);

286 i‡(
	`˛o£dú
(
dúp
Ë!0Ë
	`e
(49);

287 
	`sy°em
("whileÅest ! -f /tmp/sema2.07; do sleep 1; done");

288 
	`Sy°em
("rm -f /tmp/sema2.07");

291 i‡(
	`f°©
(
fd
, &
°
Ë!0Ë
	`e
(50);

292 i‡(
°
.
°_∆ök
 !(
∆ök_t
Ë0Ë
	`e
(51);

293 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(52);

294 
	`exô
(0);

297 
	`sy°em
("whileÅest ! -f /tmp/sema1.07; do sleep 1; done");

298 i‡(
	`rmdú
("foo"Ë!0Ë
	`e
(53);

299 
	`Sy°em
("rm -f /tmp/sema1.07");

300 i‡(
	`chdú
("foo"Ë!-1Ë
	`e
(54);

301 i‡(
î∫o
 !
ENOENT
Ë
	`e
(55);

302 
	`Sy°em
("> /tmp/sema2.07");

303 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(56);

304 i‡(
°©_loc
 !0Ë
	`e
(57);

308 i‡(
	`chdú
("foo"Ë!-1Ë
	`e
(58);

309 i‡(
î∫o
 !
ENOENT
Ë
	`e
(59);

312 i‡(
	`mkdú
("foo", 0777Ë!0Ë
	`e
(60);

313 
	`Sy°em
("rm -f /tmp/sema.07");

314 
	`f‹k
()) {

315 -1: 
	`¥ötf
("Can't fork\n"); ;

317 
	`Æ¨m
(20);

318 i‡(
	`chdú
("foo"Ë!0Ë
	`e
(61);

319 
	`Sy°em
("> /tmp/sema.07");

320 
	`sy°em
("whileÅest -f /tmp/sema.07; do sleep 1; done");

321 
	`¶ìp
(1);

322 
	`exô
(0);

324 
	`sy°em
("whileÅest ! -f /tmp/sema.07; do sleep 1; done");

325 
rmdú_ªsu…
 = 
	`rmdú
("foo");

326 i‡(
rmdú_ªsu…
 == -1) {

327 i‡(
î∫o
 !
EBUSY
Ë
	`e
(62);

329 i‡(
rmdú_ªsu…
 !0Ë
	`e
(63);

330 i‡(
	`rmdú
("foo"Ë!-1Ë
	`e
(64);

331 i‡(
î∫o
 !
ENOENT
Ë
	`e
(65);

332 i‡(
	`chdú
("foo"Ë!-1Ë
	`e
(66);

333 i‡(
î∫o
 !
ENOENT
Ë
	`e
(67);

334 i‡(
	`mkdú
("foo", 0777Ë!0Ë
	`e
(68);

336 
	`Sy°em
("rm -f /tmp/sema.07");

337 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(69);

338 i‡(
°©_loc
 !0Ë
	`e
(70);

340 i‡(
	`rmdú
("foo"Ë!0Ë
	`e
(71);

341 
	}
}

343 
	$ã°28c
()

345 
subã°
 = 3;

347 
	`Sy°em
("rm -rf ../DIR_28/*");

348 
	`Sy°em
("rm -rf foo /tmp/foo");

351 i‡(
	`mkdú
("foo", 0777Ë!0Ë
	`e
(1);

352 i‡(
	`mkdú
("foo", 0777Ë!-1Ë
	`e
(2);

353 i‡(
î∫o
 !
EEXIST
Ë
	`e
(3);

354 i‡(
	`rmdú
("foo"Ë!0Ë
	`e
(4);

355 i‡(
	`rmdú
("foo"Ë!-1Ë
	`e
(5);

356 i‡(
î∫o
 !
ENOENT
Ë
	`e
(6);

358 i‡(
	`mkdú
("foo", 0777Ë!0Ë
	`e
(7);

359 i‡(
	`mkdú
("foo/b¨", 0777Ë!0Ë
	`e
(8);

360 i‡(!
su≥ru£r
) {

361 
	`Sy°em
("chmod 677 foo");

362 i‡(
	`mkdú
("foo/foo", 0777Ë!-1Ë
	`e
(9);

363 i‡(
î∫o
 !
EACCES
Ë
	`e
(10);

364 i‡(
	`rmdú
("foo/b¨"Ë!-1Ë
	`e
(11);

365 i‡(
î∫o
 !
EACCES
Ë
	`e
(12);

366 
	`Sy°em
("chmod 577 foo");

367 i‡(
	`mkdú
("foo/foo", 0777Ë!-1Ë
	`e
(13);

368 i‡(
î∫o
 !
EACCES
Ë
	`e
(14);

369 i‡(
	`rmdú
("foo/b¨"Ë!-1Ë
	`e
(15);

370 i‡(
î∫o
 !
EACCES
Ë
	`e
(16);

371 
	`Sy°em
("chmod 777 foo");

373 i‡(
	`rmdú
("foo/b¨"Ë!0Ë
	`e
(17);

374 i‡(
	`mkdú
("foo/no/foo", 0777Ë!-1Ë
	`e
(18);

375 i‡(
î∫o
 !
ENOENT
Ë
	`e
(19);

376 i‡(
	`mkdú
("", 0777Ë!-1Ë
	`e
(20);

377 i‡(
î∫o
 !
ENOENT
Ë
	`e
(21);

378 i‡(
	`rmdú
(""Ë!-1Ë
	`e
(22);

379 i‡(
î∫o
 !
ENOENT
Ë
	`e
(23);

380 
	`Sy°em
("> foo/no");

381 i‡(
	`mkdú
("foo/no/foo", 0777Ë!-1Ë
	`e
(24);

382 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(25);

383 i‡(
	`rmdú
("foo/no/foo"Ë!-1Ë
	`e
(26);

384 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(27);

385 
	`Sy°em
("rm -rf foo");

386 
	}
}

389 
	$makñ⁄g«mes
()

391 
i
;

393 
	`mem£t
(
MaxName
, 'a', 
NAME_MAX
);

394 
MaxName
[
NAME_MAX
] = '\0';

395 
i
 = 0; i < 
PATH_MAX
 - 1; i++) {

396 
MaxP©h
[
i
++] = '.';

397 
MaxP©h
[
i
] = '/';

399 
MaxP©h
[
PATH_MAX
 - 1] = '\0';

401 
	`°r˝y
(
ToL⁄gName
, 
MaxName
);

402 
	`°r˝y
(
ToL⁄gP©h
, 
MaxP©h
);

404 
ToL⁄gName
[
NAME_MAX
] = 'a';

405 
ToL⁄gName
[
NAME_MAX
 + 1] = '\0';

406 
ToL⁄gP©h
[
PATH_MAX
 - 1] = '/';

407 
ToL⁄gP©h
[
PATH_MAX
] = '\0';

408 
	}
}

411 
	$e
(
n
)

412 
n
;

414 
îr_num
 = 
î∫o
;

416 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d: ", 
subã°
, 
n
, 
î∫o
);

417 
î∫o
 = 
îr_num
;

418 
	`≥º‹
("");

419 i‡(
îr˘
++ > 
MAX_ERROR
) {

420 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

421 
	`chdú
("..");

422 
	`sy°em
("rm -rf DIR*");

423 
	`exô
(1);

425 
î∫o
 = 0;

426 
	}
}

429 
	$quô
()

431 
	`Chdú
("..");

432 
	`Sy°em
("rm -rf DIR_28");

434 i‡(
îr˘
 == 0) {

435 
	`¥ötf
("ok\n");

436 
	`exô
(0);

438 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

439 
	`exô
(1);

441 
	}
}

	@test29.c

4 
	#SIGACTION


	)

8 
	~<sys/ty≥s.h
>

9 
	~<sys/°©.h
>

10 
	~<sys/waô.h
>

11 
	~<°dlib.h
>

12 
	~<uni°d.h
>

13 
	~<°rög.h
>

14 
	~<f˙é.h
>

15 
	~<limôs.h
>

16 
	~<î∫o.h
>

17 
	~<time.h
>

18 
	~<sig«l.h
>

19 
	~<°dio.h
>

21 
	#MAX_ERROR
 4

	)

22 
	#ITERATIONS
 3

	)

23 
	#BUF_SIZE
 1024

	)

25 
	#Sy°em
(
cmd
Ëi‡(
	`sy°em
(cmdË!0Ë
	`¥ötf
("``%s'' faûed\n", cmd)

	)

26 
	#Chdú
(
dú
Ëi‡(
	`chdú
(dúË!0Ë
	`¥ötf
("C™'àgŸÿ%s\n", dú)

	)

27 
	#Sèt
(
a
,
b
Ëi‡(
	`°©
◊,bË!0Ë
	`¥ötf
("C™'à°© %s\n",á)

	)

29 
	gîr˘
 = 0;

30 
	gsubã°
 = 1;

31 
	gsu≥ru£r
;

32 
	gsignumbî
 = 0;

34 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

35 
_PROTOTYPE
(
ã°29a
, ());

36 
_PROTOTYPE
(
ã°29b
, ());

37 
_PROTOTYPE
(
ã°29c
, ());

38 
_PROTOTYPE
(
£tsignumbî
, (
_signumbî
));

39 
_PROTOTYPE
(
e
, (
numbî
));

40 
_PROTOTYPE
(
quô
, ());

42 
	$maö
(
¨gc
, 
¨gv
)

43 
¨gc
;

44 *
¨gv
[];

46 
i
, 
m
 = 0xFFFF;

48 
	`sync
();

49 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

50 
	`¥ötf
("Test 29 ");

51 
	`fÊush
(
°dout
);

52 
	`Sy°em
("rm -rf DIR_29; mkdir DIR_29");

53 
	`Chdú
("DIR_29");

54 
su≥ru£r
 = (
	`gëeuid
() == 0);

55 
	`umask
(0000);

57 
i
 = 0; i < 
ITERATIONS
; i++) {

58 i‡(
m
 & 0001Ë
	`ã°29a
();

59 i‡(
m
 & 0002Ë
	`ã°29b
();

60 i‡(
m
 & 0004Ë
	`ã°29c
();

62 
	`quô
();

63 
	}
}

65 
	$ã°29a
()

67 
fd1
;

68 
°©
 
°1
, 
°2
;

69 
time_t
 
time1
;

70 
buf
[
BUF_SIZE
];

71 
°©_loc
;

72 
i
, 
j
;

73 
tube
[2];

75 
subã°
 = 1;

76 
	`Sy°em
("rm -rf ../DIR_29/*");

79 i‡((
fd1
 = 
	`›í
("b¨", 
O_RDWR
 | 
O_CREAT
, 0777)Ë!3Ë
	`e
(1);

80 
	`Sèt
("b¨", &
°1
);

83 i‡(
	`wrôe
(
fd1
, "", 0Ë!0Ë
	`e
(2);

84 
	`Sèt
("b¨", &
°2
);

85 i‡(
°1
.
°_uid
 !
°2
.°_uidË
	`e
(3);

86 i‡(
°1
.
°_gid
 !
°2
.°_gidË
	`e
(4);

87 i‡(
°1
.
°_mode
 !
°2
.°_modeË
	`e
(5);

88 i‡(
°1
.
°_size
 !
°2
.°_sizeË
	`e
(6);

89 i‡(
°1
.
°_∆ök
 !
°2
.°_∆ökË
	`e
(7);

90 i‡(
°1
.
°_mtime
 !
°2
.°_mtimeË
	`e
(8);

91 i‡(
°1
.
°_˘ime
 !
°2
.°_˘imeË
	`e
(9);

92 i‡(
°1
.
°_©ime
 !
°2
.°_©imeË
	`e
(10);

95 
	`time
(&
time1
);

96 
time1
 >
	`time
((
time_t
 *)0))

98 i‡(
	`wrôe
(
fd1
, "foo", 4Ë!4Ë
	`e
(11);

99 
	`Sèt
("b¨", &
°2
);

100 i‡(
°1
.
°_mode
 !
°2
.°_modeË
	`e
(12);

101 i‡(
°1
.
°_size
 >
°2
.°_sizeË
	`e
(13);

102 i‡((
off_t
Ë4 !
°2
.
°_size
Ë
	`e
(14);

103 i‡(
°1
.
°_∆ök
 !
°2
.°_∆ökË
	`e
(15);

104 i‡(
°1
.
°_mtime
 >
°2
.°_mtimeË
	`e
(16);

105 i‡(
°1
.
°_˘ime
 >
°2
.°_˘imeË
	`e
(17);

106 i‡(
°1
.
°_©ime
 !
°2
.°_©imeË
	`e
(18);

109 i‡(
	`l£ek
(
fd1
, (
off_t
Ë- 2, 
SEEK_END
Ë!2Ë
	`e
(19);

110 
	`Sèt
("b¨", &
°1
);

111 i‡(
°1
.
°_mode
 !
°2
.°_modeË
	`e
(20);

112 i‡(
°1
.
°_size
 !
°2
.°_sizeË
	`e
(21);

113 i‡(
°1
.
°_∆ök
 !
°2
.°_∆ökË
	`e
(22);

114 i‡(
°1
.
°_mtime
 !
°2
.°_mtimeË
	`e
(23);

115 i‡(
°1
.
°_˘ime
 !
°2
.°_˘imeË
	`e
(24);

116 i‡(
°1
.
°_©ime
 !
°2
.°_©imeË
	`e
(25);

119 i‡(
	`wrôe
(
fd1
, "foo", 4Ë!4Ë
	`e
(26);

120 
	`Sèt
("b¨", &
°2
);

121 i‡(
°1
.
°_mode
 !
°2
.°_modeË
	`e
(27);

122 i‡(
°1
.
°_size
 >
°2
.°_sizeË
	`e
(28);

123 i‡((
off_t
Ë6 !
°2
.
°_size
Ë
	`e
(29);

124 i‡(
°1
.
°_∆ök
 !
°2
.°_∆ökË
	`e
(30);

125 i‡(
°1
.
°_mtime
 > 
°2
.°_mtimeË
	`e
(31);

126 i‡(
°1
.
°_˘ime
 > 
°2
.°_˘imeË
	`e
(32);

127 i‡(
°1
.
°_©ime
 !
°2
.°_©imeË
	`e
(33);

130 i‡(
	`ªad
(
fd1
, 
buf
, 0Ë!0Ë
	`e
(34);

131 
	`Sèt
("b¨", &
°1
);

132 i‡(
°1
.
°_uid
 !
°2
.°_uidË
	`e
(35);

133 i‡(
°1
.
°_gid
 !
°2
.°_gidË
	`e
(36);

134 i‡(
°1
.
°_mode
 !
°2
.°_modeË
	`e
(37);

135 i‡(
°1
.
°_size
 !
°2
.°_sizeË
	`e
(38);

136 i‡(
°1
.
°_∆ök
 !
°2
.°_∆ökË
	`e
(39);

137 i‡(
°1
.
°_mtime
 !
°2
.°_mtimeË
	`e
(40);

138 i‡(
°1
.
°_˘ime
 !
°2
.°_˘imeË
	`e
(41);

139 i‡(
°1
.
°_©ime
 !
°2
.°_©imeË
	`e
(42);

142 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_SET
Ë!0Ë
	`e
(43);

143 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!6Ë
	`e
(44);

144 i‡(
	`°rcmp
(
buf
, "fofoo"Ë!0Ë
	`e
(45);

147 
	`Sèt
("b¨", &
°2
);

148 i‡(
°1
.
°_mtime
 !
°2
.°_mtimeË
	`e
(46);

149 i‡(
°1
.
°_˘ime
 !
°2
.°_˘imeË
	`e
(47);

150 i‡(
°1
.
°_©ime
 >
°2
.°_©imeË
	`e
(48);

153 
	`time
(&
time1
);

154 
time1
 >
	`time
((
time_t
 *)0))

156 i‡(
	`ªad
(
fd1
, 
buf
, 0Ë!0Ë
	`e
(49);

157 
	`Sèt
("b¨", &
°1
);

158 i‡(
°1
.
°_size
 !
°2
.°_sizeË
	`e
(50);

159 i‡(
°1
.
°_mtime
 !
°2
.°_mtimeË
	`e
(51);

160 i‡(
°1
.
°_˘ime
 !
°2
.°_˘imeË
	`e
(52);

161 i‡(
°1
.
°_©ime
 !
°2
.°_©imeË
	`e
(53);

164 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!0Ë
	`e
(54);

165 i‡(
	`l£ek
(
fd1
, (
off_t
Ë2, 
SEEK_SET
Ë!2Ë
	`e
(55);

166 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!4Ë
	`e
(56);

167 i‡(
	`°rcmp
(
buf
, "foo"Ë!0Ë
	`e
(57);

170 i‡(
	`l£ek
(
fd1
, (
off_t
Ë2, 
SEEK_SET
Ë!2Ë
	`e
(58);

171 i‡(
	`ªad
(
fd1
, 
buf
, 1Ë!1Ë
	`e
(59);

172 i‡(*
buf
 !'f'Ë
	`e
(60);

173 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!3Ë
	`e
(61);

174 i‡(
	`ªad
(
fd1
, 
buf
, 1Ë!1Ë
	`e
(62);

175 i‡(*
buf
 !'o'Ë
	`e
(63);

176 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!4Ë
	`e
(64);

177 i‡(
	`ªad
(
fd1
, 
buf
, 1Ë!1Ë
	`e
(65);

178 i‡(*
buf
 !'o'Ë
	`e
(66);

179 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!5Ë
	`e
(67);

180 i‡(
	`ªad
(
fd1
, 
buf
, 1Ë!1Ë
	`e
(68);

181 i‡(*
buf
 !'\0'Ë
	`e
(69);

182 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!6Ë
	`e
(70);

185 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!0Ë
	`e
(71);

186 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!6Ë
	`e
(72);

187 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!0Ë
	`e
(73);

188 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!6Ë
	`e
(74);

189 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!0Ë
	`e
(75);

190 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!6Ë
	`e
(76);

191 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!0Ë
	`e
(77);

192 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!6Ë
	`e
(78);

193 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!0Ë
	`e
(79);

194 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!6Ë
	`e
(80);

197 i‡(
	`l£ek
(
fd1
, (
off_t
Ë2, 
SEEK_SET
Ë!2Ë
	`e
(81);

198 i‡(
	`wrôe
(
fd1
, "ba", 2Ë!2Ë
	`e
(82);

199 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!4Ë
	`e
(83);

200 
	`Sèt
("b¨", &
°1
);

201 i‡(
°1
.
°_size
 !6Ë
	`e
(84);

204 i‡(
	`l£ek
(
fd1
, (
off_t
Ë5, 
SEEK_SET
Ë!5Ë
	`e
(85);

205 i‡(
	`wrôe
(
fd1
, "x", 1Ë!1Ë
	`e
(86);

208 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(87);

211 i‡((
fd1
 = 
	`›í
("b¨", 
O_RDWR
 | 
O_APPEND
)Ë!3Ë
	`e
(88);

214 i‡(
	`l£ek
(
fd1
, (
off_t
Ë2, 
SEEK_SET
Ë!2Ë
	`e
(89);

215 i‡(
	`wrôe
(
fd1
, "y", 1Ë!1Ë
	`e
(90);

216 
	`Sèt
("b¨", &
°1
);

217 i‡(
°1
.
°_size
 !(
off_t
Ë7Ë
	`e
(91);

218 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!7Ë
	`e
(92);

219 i‡(
	`l£ek
(
fd1
, (
off_t
Ë2, 
SEEK_SET
Ë!2Ë
	`e
(93);

220 i‡(
	`wrôe
(
fd1
, "z", 2Ë!2Ë
	`e
(94);

223 
	`Sèt
("b¨", &
°1
);

224 i‡(
°1
.
°_size
 !(
off_t
Ë9Ë
	`e
(95);

225 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!9Ë
	`e
(96);

228 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_SET
Ë!0Ë
	`e
(97);

229 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!9Ë
	`e
(98);

230 i‡(
	`°rcmp
(
buf
, "fobaoxyz"Ë!0Ë
	`e
(99);

231 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!9Ë
	`e
(100);

233 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(101);

236 i‡(
	`mkfifo
("fifo", 0777Ë!0Ë
	`e
(102);

239 
	`Sy°em
("rm -rf /tmp/sema.29a");

240 
	`f‹k
()) {

241 -1: 
	`¥ötf
("Can't fork\n"); ;

244 
	`Æ¨m
(20);

245 i‡((
fd1
 = 
	`›í
("fifo", 
O_RDONLY
)Ë!3Ë
	`e
(103);

246 
	`sy°em
("> /tmp/sema.29a");

247 
	`sy°em
("whileÅest -f /tmp/sema.29a; do sleep 1; done");

248 
î∫o
 =0;

249 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!0Ë
	`e
(104);

250 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!0Ë
	`e
(105);

251 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!0Ë
	`e
(106);

252 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(107);

253 
	`exô
(0);

256 i‡((
fd1
 = 
	`›í
("fifo", 
O_WRONLY
)Ë!3Ë
	`e
(108);

257 
	`°©
("/tmp/£ma.29a", &
°1
Ë!0Ë
	`¶ìp
(1);

258 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(109);

259 
	`u∆ök
("/tmp/sema.29a");

260 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(110);

261 i‡(
°©_loc
 !0Ë
	`e
(111);

265 
	`f‹k
()) {

266 -1: 
	`¥ötf
("Can't fork\n"); ;

269 
	`Æ¨m
(20);

270 i‡((
fd1
 = 
	`›í
("fifo", 
O_RDONLY
)Ë!3Ë
	`e
(112);

271 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!10Ë
	`e
(113);

272 i‡(
	`°rcmp
(
buf
, "Hòªadî"Ë!0Ë
	`e
(114);

273 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(115);

274 
	`exô
(0);

277 i‡((
fd1
 = 
	`›í
("fifo", 
O_WRONLY
)Ë!3Ë
	`e
(116);

278 
	`¶ìp
(1);

279 i‡(
	`wrôe
(
fd1
, "Hòªadî", 10Ë!10Ë
	`e
(117);

280 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(118);

281 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(119);

282 i‡(
°©_loc
 !0Ë
	`e
(120);

286 
	`f‹k
()) {

287 -1: 
	`¥ötf
("Can't fork\n"); ;

290 
	`Æ¨m
(20);

291 
	`f‹k
()) {

292 -1: 
	`¥ötf
("Can't fork\n"); ;

294 
	`Æ¨m
(20);

295 i‡((
fd1
 = 
	`›í
("fifo", 
O_WRONLY
)Ë!3Ë
	`e
(121);

296 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(122);

297 
	`exô
(0);

299 i‡((
fd1
 = 
	`›í
("fifo", 
O_WRONLY
)Ë!3Ë
	`e
(123);

300 
	`¶ìp
(1);

301 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(124);

302 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(125);

303 i‡(
°©_loc
 !0Ë
	`e
(126);

305 
	`exô
(
°©_loc
);

308 i‡((
fd1
 = 
	`›í
("fifo", 
O_RDONLY
)Ë!3Ë
	`e
(127);

309 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!0Ë
	`e
(128);

310 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(129);

311 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(130);

312 i‡(
°©_loc
 !0Ë
	`e
(131);

316 i‡(
PIPE_BUF
 < 5Ë
	`e
(132);

317 i‡(
BUF_SIZE
 < 1000Ë
	`e
(133);

320 
	`Sy°em
("rm -rf /tmp/sema.29b;> /tmp/sema.29b");

321 
	`f‹k
()) {

322 -1: 
	`¥ötf
("Can't fork\n"); ;

325 
	`Æ¨m
(20);

326 
	`f‹k
()) {

327 -1: 
	`¥ötf
("Can't fork\n"); ;

330 
	`Æ¨m
(20);

331 i‡((
fd1
 = 
	`›í
("fifo", 
O_WRONLY
)Ë!3Ë
	`e
(134);

332 
i
 = 0; i < 100; i++Ë
	`wrôe
(
fd1
, "1234 ", 5);

333 
	`sy°em
("whileÅest -f /tmp/sema.29b; do sleep 1; done");

334 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(135);

335 
	`exô
(0);

338 i‡((
fd1
 = 
	`›í
("fifo", 
O_WRONLY
)Ë!3Ë
	`e
(136);

339 
i
 = 0; i < 100; i++Ë
	`wrôe
(
fd1
, "1234 ", 5);

340 
	`°©
("/tmp/£ma.29b", &
°1
Ë=0Ë
	`¶ìp
(1);

341 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(137);

342 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(138);

343 i‡(
°©_loc
 !0Ë
	`e
(139);

345 
	`exô
(
°©_loc
);

348 i‡((
fd1
 = 
	`›í
("fifo", 
O_RDONLY
)Ë!3Ë
	`e
(140);

349 
i
 = 0;

350 
	`mem£t
(
buf
, '\0', 
BUF_SIZE
);

354 
j
 = 
	`ªad
(
fd1
, 
buf
 + 
i
, 
BUF_SIZE
 - i);

355 i‡(
j
 > 0) {

356 i‡(
j
 % 5 !0Ë
	`e
(141);

357 
i
 +
j
;

359 } 
j
 > 0 && 
i
 < 1000);

363 
	`u∆ök
("/tmp/sema.29b");

364 i‡(
j
 < 0Ë
	`e
(142);

365 i‡(
i
 !1000Ë
	`e
(143);

366 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(144);

367 i‡(
°©_loc
 !0Ë
	`e
(145);

370 
i
 = 0; i < 200; i++)

371 i‡(
	`°∫cmp
(
buf
 + (
i
 * 5), "1234 ", 5) != 0) ;

372 i‡(
i
 !200Ë
	`e
(146);

373 i‡(
buf
[1000] !'\0'Ë
	`e
(147);

374 i‡(
buf
[1005] !'\0'Ë
	`e
(148);

375 i‡(
buf
[1010] !'\0'Ë
	`e
(149);

376 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!0Ë
	`e
(150);

377 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(151);

381 i‡(
	`pùe
(
tube
Ë!0Ë
	`e
(152);

382 
	`f‹k
()) {

383 -1: 
	`¥ötf
("Can't fork\n"); ;

385 
	`Æ¨m
(20);

386 i‡(
	`˛o£
(
tube
[1]Ë!0Ë
	`e
(153);

387 i‡(
	`ªad
(
tube
[0], 
buf
, 
BUF_SIZE
Ë!10Ë
	`e
(154);

388 i‡(
	`°rcmp
(
buf
, "Hòªadî"Ë!0Ë
	`e
(155);

389 i‡(
	`˛o£
(
tube
[0]Ë!0Ë
	`e
(156);

390 
	`exô
(0);

392 i‡(
	`˛o£
(
tube
[0]Ë!0Ë
	`e
(157);

393 
	`¶ìp
(1);

394 i‡(
	`wrôe
(
tube
[1], "Hòªadî", 10Ë!10Ë
	`e
(158);

395 i‡(
	`˛o£
(
tube
[1]Ë!0Ë
	`e
(159);

396 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(160);

397 i‡(
°©_loc
 !0Ë
	`e
(161);

401 i‡(
	`pùe
(
tube
Ë!0Ë
	`e
(162);

402 
	`f‹k
()) {

403 -1: 
	`¥ötf
("Can't fork\n"); ;

405 
	`Æ¨m
(20);

406 i‡(
	`˛o£
(
tube
[0]Ë!0Ë
	`e
(163);

407 
	`f‹k
()) {

408 -1: 
	`¥ötf
("Can't fork\n"); ;

410 
	`Æ¨m
(20);

411 i‡(
	`˛o£
(
tube
[1]Ë!0Ë
	`e
(164);

412 
	`exô
(0);

414 
	`¶ìp
(1);

415 i‡(
	`˛o£
(
tube
[1]Ë!0Ë
	`e
(165);

416 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(166);

417 i‡(
°©_loc
 !0Ë
	`e
(167);

419 
	`exô
(
°©_loc
);

421 i‡(
	`˛o£
(
tube
[1]Ë!0Ë
	`e
(168);

422 i‡(
	`ªad
(
tube
[0], 
buf
, 
BUF_SIZE
Ë!0Ë
	`e
(169);

423 i‡(
	`˛o£
(
tube
[0]Ë!0Ë
	`e
(170);

424 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(171);

425 i‡(
°©_loc
 !0Ë
	`e
(172);

429 
	`Sy°em
("rm -rf /tmp/sema.29c;> /tmp/sema.29c");

430 i‡(
	`pùe
(
tube
Ë!0Ë
	`e
(173);

431 
	`f‹k
()) {

432 -1: 
	`¥ötf
("Can't fork\n"); ;

434 
	`Æ¨m
(20);

435 i‡(
	`˛o£
(
tube
[0]Ë!0Ë
	`e
(174);

436 
	`f‹k
()) {

437 -1: 
	`¥ötf
("Can't fork\n"); ;

439 
	`Æ¨m
(20);

440 
i
 = 0; i < 100; i++Ë
	`wrôe
(
tube
[1], "1234 ", 5);

441 
	`sy°em
("whileÅest -f /tmp/sema.29c; do sleep 1; done");

442 i‡(
	`˛o£
(
tube
[1]Ë!0Ë
	`e
(175);

443 
	`exô
(0);

445 
i
 = 0; i < 100; i++Ë
	`wrôe
(
tube
[1], "1234 ", 5);

446 
	`°©
("/tmp/£ma.29c", &
°1
Ë=0Ë
	`¶ìp
(1);

447 i‡(
	`˛o£
(
tube
[1]Ë!0Ë
	`e
(176);

448 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(177);

449 i‡(
°©_loc
 !0Ë
	`e
(178);

451 
	`exô
(
°©_loc
);

453 
i
 = 0;

454 i‡(
	`˛o£
(
tube
[1]Ë!0Ë
	`e
(179);

455 
	`mem£t
(
buf
, '\0', 
BUF_SIZE
);

457 
j
 = 
	`ªad
(
tube
[0], 
buf
 + 
i
, 
BUF_SIZE
 - i);

458 i‡(
j
 > 0) {

459 i‡(
j
 % 5 !0Ë
	`e
(180);

460 
i
 +
j
;

463 } 
i
 < 1000);

464 
	`u∆ök
("/tmp/sema.29c");

465 i‡(
j
 < 0Ë
	`e
(181);

466 i‡(
i
 !1000Ë
	`e
(182);

467 i‡(
	`˛o£
(
tube
[0]Ë!0Ë
	`e
(183);

468 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(184);

469 i‡(
°©_loc
 !0Ë
	`e
(185);

472 
i
 = 0; i < 200; i++)

473 i‡(
	`°∫cmp
(
buf
 + (
i
 * 5), "1234 ", 5) != 0) ;

474 i‡(
i
 !200Ë
	`e
(186);

476 
	}
}

479 
	$ã°29b
()

481 
i
, 
fd
, 
°©_loc
;

482 
buf
[
BUF_SIZE
];

483 
buf2
[
BUF_SIZE
];

484 
°©
 
°
;

486 
subã°
 = 2;

487 
	`Sy°em
("rm -rf ../DIR_29/*");

490 
	`sy°em
("rm -rf /tmp/sema.29d");

491 
	`Sy°em
(">Åesting");

492 
	`f‹k
()) {

493 -1: 
	`¥ötf
("Can't fork\n"); ;

495 
	`Æ¨m
(20);

496 i‡((
fd
 = 
	`›í
("ã°ög", 
O_WRONLY
 | 
O_APPEND
)Ë!3Ë
	`e
(1);

497 i‡(
	`wrôe
(
fd
, "⁄ê", 4Ë!4Ë
	`e
(2);

498 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(3);

499 
	`sy°em
("> /tmp/sema.29d");

500 
	`sy°em
("whileÅest -f /tmp/sema.29d; do sleep 1; done");

501 i‡((
fd
 = 
	`›í
("ã°ög", 
O_WRONLY
 | 
O_APPEND
)Ë!3Ë
	`e
(4);

502 i‡(
	`wrôe
(
fd
, "thªê", 6Ë!6Ë
	`e
(5);

503 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(6);

504 
	`sy°em
("> /tmp/sema.29d");

505 
	`exô
(0);

507 
	`°©
("/tmp/£ma.29d", &
°
Ë!0Ë
	`¶ìp
(1);

508 i‡((
fd
 = 
	`›í
("ã°ög", 
O_WRONLY
 | 
O_APPEND
)Ë!3Ë
	`e
(7);

509 i‡(
	`wrôe
(
fd
, "twÿ", 4Ë!4Ë
	`e
(8);

510 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(9);

511 
	`u∆ök
("/tmp/sema.29d");

512 
	`°©
("/tmp/£ma.29d", &
°
Ë!0Ë
	`¶ìp
(1);

513 i‡((
fd
 = 
	`›í
("ã°ög", 
O_WRONLY
 | 
O_APPEND
)Ë!3Ë
	`e
(10);

514 i‡(
	`wrôe
(
fd
, "four", 5Ë!5Ë
	`e
(11);

515 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(12);

516 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(13);

517 i‡(
°©_loc
 !0Ë
	`e
(14);

518 
	`u∆ök
("/tmp/sema.29d");

520 i‡((
fd
 = 
	`›í
("ã°ög", 
O_RDONLY
)Ë!3Ë
	`e
(15);

521 i‡(
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
Ë!19Ë
	`e
(16);

522 i‡(
	`°rcmp
(
buf
, "⁄êtwÿthªêfour"Ë!0Ë
	`e
(17);

523 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(18);

527 
	`mem£t
(
buf2
, '\0', 
BUF_SIZE
);

528 i‡((
fd
 = 
	`›í
("bigfûe", 
O_RDWR
 | 
O_CREAT
, 0644)Ë!3Ë
	`e
(19);

529 i‡(
	`l£ek
(
fd
, (
off_t
Ë102400, 
SEEK_SET
Ë!(off_tË102400LË
	`e
(20);

530 i‡(
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
Ë!0Ë
	`e
(21);

531 i‡(
	`wrôe
(
fd
, ".", 1Ë!1Ë
	`e
(22);

532 
	`Sèt
("bigfûe", &
°
);

533 i‡(
°
.
°_size
 !(
off_t
Ë102401Ë
	`e
(23);

534 i‡(
	`l£ek
(
fd
, (
off_t
Ë0, 
SEEK_SET
Ë!0Ë
	`e
(24);

535 
i
 = 0; i < 102400 / 
BUF_SIZE
; i++) {

536 i‡(
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
Ë!BUF_SIZEË
	`e
(25);

537 i‡(
	`memcmp
(
buf
, 
buf2
, 
BUF_SIZE
Ë!0Ë
	`e
(26);

539 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(27);

540 
	}
}

542 
	$ã°29c
()

544 
buf
[
BUF_SIZE
];

545 
fd
, 
tube
[2], 
°©_loc
;

546 
°©
 
°
;

547 
pid_t
 
pid
;

548 #ifde‡
SIGACTION


549 
siga˘i⁄
 
a˘
, 
ﬂ˘
;

551 #i‡
_ANSI


552 (*
ﬁdfunc
) ();

554 (*
ﬁdfunc
) ();

558 
subã°
 = 3;

559 
	`Sy°em
("rm -rf ../DIR_29/*");

562 #ifde‡
SIGACTION


563 
a˘
.
ß_h™dÀr
 = 
£tsignumbî
;

564 
	`sigem±y£t
(&
a˘
.
ß_mask
);

565 
a˘
.
ß_Êags
 = 0;

566 i‡(
	`siga˘i⁄
(
SIGPIPE
, &
a˘
, &
ﬂ˘
Ë!0Ë
	`e
(1);

568 
ﬁdfunc
 = 
	`sig«l
(
SIGPIPE
, 
£tsignumbî
);

572 
fd
 = -111; fd < 0; fd++) {

573 
î∫o
 = 0;

574 i‡(
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
Ë!-1Ë
	`e
(2);

575 i‡(
î∫o
 !
EBADF
Ë
	`e
(3);

577 
fd
 = 3; fd < 111; fd++) {

578 
î∫o
 = 0;

579 i‡(
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
Ë!-1Ë
	`e
(4);

580 i‡(
î∫o
 !
EBADF
Ë
	`e
(5);

582 
fd
 = -111; fd < 0; fd++) {

583 
î∫o
 = 0;

584 i‡(
	`wrôe
(
fd
, 
buf
, 
BUF_SIZE
Ë!-1Ë
	`e
(6);

585 i‡(
î∫o
 !
EBADF
Ë
	`e
(7);

587 
fd
 = 3; fd < 111; fd++) {

588 
î∫o
 = 0;

589 i‡(
	`wrôe
(
fd
, 
buf
, 
BUF_SIZE
Ë!-1Ë
	`e
(8);

590 i‡(
î∫o
 !
EBADF
Ë
	`e
(9);

594 i‡(
	`pùe
(
tube
Ë!0Ë
	`e
(10);

595 
	`˛o£
(
tube
[0]);

596 
	`f‹k
()) {

597 -1: 
	`¥ötf
("Can't fork\n"); ;

599 
	`Æ¨m
(20);

600 
signumbî
 = 0;

601 i‡(
	`wrôe
(
tube
[1], 
buf
, 
BUF_SIZE
Ë!-1Ë
	`e
(11);

602 i‡(
î∫o
 !
EPIPE
Ë
	`e
(12);

603 i‡(
signumbî
 !
SIGPIPE
Ë
	`e
(13);

604 i‡(
	`˛o£
(
tube
[1]Ë!0Ë
	`e
(14);

605 
	`exô
(0);

607 
	`˛o£
(
tube
[1]);

608 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(15);

609 i‡(
°©_loc
 !0Ë
	`e
(16);

613 
	`Sy°em
("> /tmp/sema.29e");

614 i‡(
	`mkfifo
("fifo", 0666Ë!0Ë
	`e
(17);

615 
	`f‹k
()) {

616 -1: 
	`¥ötf
("Can't fork\n"); ;

618 
	`Æ¨m
(20);

619 i‡((
fd
 = 
	`›í
("fifo", 
O_WRONLY
)Ë!3Ë
	`e
(18);

620 
	`sy°em
("whileÅest -f /tmp/sema.29e; do sleep 1; done");

621 
signumbî
 = 0;

622 i‡(
	`wrôe
(
fd
, 
buf
, 
BUF_SIZE
Ë!-1Ë
	`e
(19);

623 i‡(
î∫o
 !
EPIPE
Ë
	`e
(20);

624 i‡(
signumbî
 !
SIGPIPE
Ë
	`e
(21);

625 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(22);

626 
	`exô
(0);

628 i‡((
fd
 = 
	`›í
("fifo", 
O_RDONLY
)Ë!3Ë
	`e
(23);

629 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(24);

630 
	`u∆ök
("/tmp/sema.29e");

631 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(25);

632 i‡(
°©_loc
 !0Ë
	`e
(26);

635 #ifde‡
SIGACTION


637 i‡(
	`siga˘i⁄
(
SIGPIPE
, &
ﬂ˘
, 
NULL
Ë!0Ë
	`e
(27);

639 
	`sig«l
(
SIGPIPE
, 
ﬁdfunc
);

643 
	`Sy°em
("rm -rf /tmp/sema.29[fgh]");

644 
	`f‹k
()) {

645 -1: 
	`¥ötf
("Can't fork\n"); ;

647 
	`Æ¨m
(20);

648 
	`sy°em
("whileÅest ! -f /tmp/sema.29f; do sleep 1; done");

649 
	`Sy°em
("rm -rf /tmp/sema.29f");

650 i‡((
fd
 = 
	`›í
("fifo", 
O_WRONLY
 | 
O_NONBLOCK
)Ë!3Ë
	`e
(28);

651 
	`˛o£
(
	`¸ót
("/tmp/sema.29g", 0666));

652 
	`sy°em
("whileÅest ! -f /tmp/sema.29h; do sleep 1; done");

653 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(29);

654 
	`Sy°em
("rm -rf /tmp/sema.29h");

655 
	`exô
(0);

657 i‡((
fd
 = 
	`›í
("fifo", 
O_RDONLY
 | 
O_NONBLOCK
)Ë!3Ë
	`e
(30);

658 
	`˛o£
(
	`¸ót
("/tmp/sema.29f", 0666));

659 
	`sy°em
("whileÅest ! -f /tmp/sema.29g; do sleep 1; done");

660 
	`Sy°em
("rm -rf /tmp/sema.29g");

661 i‡(
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
Ë!-1Ë
	`e
(31);

662 i‡(
î∫o
 !
EAGAIN
Ë
	`e
(32);

663 i‡(
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
Ë!-1Ë
	`e
(33);

664 i‡(
î∫o
 !
EAGAIN
Ë
	`e
(34);

665 i‡(
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
Ë!-1Ë
	`e
(35);

666 i‡(
î∫o
 !
EAGAIN
Ë
	`e
(36);

667 
	`˛o£
(
	`¸ót
("/tmp/sema.29h", 0666));

668 
	`°©
("/tmp/£ma.29h", &
°
Ë=0Ë
	`¶ìp
(1);

669 i‡(
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
Ë!0Ë
	`e
(37);

670 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(38);

671 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(39);

672 i‡(
°©_loc
 !0Ë
	`e
(40);

674 
	`Sy°em
("rm -rf fifo");

677 i‡(
	`pùe
(
tube
Ë!0Ë
	`e
(41);

678 
pid
 = 
	`f‹k
()) {

679 -1: 
	`¥ötf
("Can't fork\n"); ;

681 
	`Æ¨m
(20);

682 #ifde‡
SIGACTION


683 
a˘
.
ß_h™dÀr
 = 
£tsignumbî
;

684 
	`sigem±y£t
(&
a˘
.
ß_mask
);

685 
a˘
.
ß_Êags
 = 0;

686 i‡(
	`siga˘i⁄
(
SIGUSR1
, &
a˘
, &
ﬂ˘
Ë!0Ë
	`e
(42);

688 
ﬁdfunc
 = 
	`sig«l
(
SIGUSR1
, 
£tsignumbî
);

690 i‡(
	`ªad
(
tube
[0], 
buf
, 
BUF_SIZE
Ë!-1Ë
	`e
(43);

691 i‡(
î∫o
 !
EINTR
Ë
	`e
(44);

692 i‡(
signumbî
 !
SIGUSR1
Ë
	`e
(45);

693 #ifde‡
SIGACTION


695 i‡(
	`siga˘i⁄
(
SIGUSR1
, &
ﬂ˘
, 
NULL
Ë!0Ë
	`e
(46);

697 
	`sig«l
(
SIGUSR1
, 
ﬁdfunc
);

699 
	`˛o£
(
tube
[0]);

700 
	`˛o£
(
tube
[1]);

701 
	`exô
(0);

704 
	`¶ìp
(1);

705 
	`˛o£
(
tube
[0]);

706 
	`kûl
(
pid
, 
SIGUSR1
);

707 
	`waô
(&
°©_loc
);

708 i‡(
°©_loc
 !0Ë
	`e
(47);

709 
	`˛o£
(
tube
[1]);

711 
	}
}

714 
	$£tsignumbî
(
signum
)

715 
signum
;

717 
signumbî
 = 
signum
;

718 
	}
}

720 
	$e
(
n
)

721 
n
;

723 
îr_num
 = 
î∫o
;

725 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d: ", 
subã°
, 
n
, 
î∫o
);

726 
î∫o
 = 
îr_num
;

727 
	`≥º‹
("");

728 i‡(
îr˘
++ > 
MAX_ERROR
) {

729 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

730 
	`chdú
("..");

731 
	`sy°em
("rm -rf DIR*");

732 
	`exô
(1);

734 
î∫o
 = 0;

735 
	}
}

738 
	$quô
()

740 
	`Chdú
("..");

741 
	`Sy°em
("rm -rf DIR_29");

743 i‡(
îr˘
 == 0) {

744 
	`¥ötf
("ok\n");

745 
	`exô
(0);

747 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

748 
	`exô
(1);

750 
	}
}

	@test3.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/ut¢ame.h
>

5 
	~<î∫o.h
>

6 
	~<f˙é.h
>

7 
	~<limôs.h
>

8 
	~<sig«l.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

11 
	~<uni°d.h
>

12 
	~<°dio.h
>

14 
	#ITERATIONS
 10

	)

15 
	#MAX_ERROR
 4

	)

16 
	#SIZE
 64

	)

18 
	gîr˘
, 
	gsubã°
;

19 
	gñ_weúdo
[] = "\n\t\\\e@@!!##\e\e\n\n";

21 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
 []));

22 
_PROTOTYPE
(
ã°3a
, ());

23 
_PROTOTYPE
(
ã°3b
, ());

24 
_PROTOTYPE
(
ã°3c
, ());

25 
_PROTOTYPE
(
ã°3d
, ());

26 
_PROTOTYPE
(
ã°3e
, ());

27 
_PROTOTYPE
(
quô
, ());

28 
_PROTOTYPE
(
e
, (
n
));

30 
	$maö
(
¨gc
, 
¨gv
)

31 
¨gc
;

32 *
¨gv
[];

34 
i
, 
m
 = 0xFFFF;

36 
	`sync
();

37 i‡(
	`gëeuid
(Ë=0 || 
	`gëuid
() == 0) {

38 
	`¥ötf
("Test 3 cannotÑunásÑoot;Åestáborted\n");

39 
	`exô
(1);

42 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

44 
	`¥ötf
("Test 3 ");

45 
	`fÊush
(
°dout
);

47 
	`sy°em
("rm -rf DIR_03; mkdir DIR_03");

48 
	`chdú
("DIR_03");

50 
i
 = 0; i < 
ITERATIONS
; i++) {

51 i‡(
m
 & 0001Ë
	`ã°3a
();

52 i‡(
m
 & 0002Ë
	`ã°3b
();

53 i‡(
m
 & 0004Ë
	`ã°3c
();

54 i‡(
m
 & 0010Ë
	`ã°3d
();

55 i‡(
m
 & 0020Ë
	`ã°3e
();

57 
	`quô
();

60 
	}
}

62 
	$ã°3a
()

66 
sig£t_t
 
s
, 
s1
;

68 
subã°
 = 1;

69 
î∫o
 = -1000;

70 i‡(
	`sigem±y£t
(&
s
Ë!0Ë
	`e
(1);

71 i‡(
	`sigem±y£t
(&
s1
Ë!0Ë
	`e
(2);

72 i‡(
	`sigadd£t
(&
s
, 
SIGABRT
Ë!0Ë
	`e
(3);

73 i‡(
	`sigadd£t
(&
s
, 
SIGALRM
Ë!0Ë
	`e
(4);

74 i‡(
	`sigadd£t
(&
s
, 
SIGFPE
 ) !0Ë
	`e
(5);

75 i‡(
	`sigadd£t
(&
s
, 
SIGHUP
 ) !0Ë
	`e
(6);

76 i‡(
	`sigadd£t
(&
s
, 
SIGILL
 ) !0Ë
	`e
(7);

77 i‡(
	`sigadd£t
(&
s
, 
SIGINT
 ) !0Ë
	`e
(8);

78 i‡(
	`sigadd£t
(&
s
, 
SIGKILL
Ë!0Ë
	`e
(9);

79 i‡(
	`sigadd£t
(&
s
, 
SIGPIPE
Ë!0Ë
	`e
(10);

80 i‡(
	`sigadd£t
(&
s
, 
SIGQUIT
Ë!0Ë
	`e
(11);

81 i‡(
	`sigadd£t
(&
s
, 
SIGSEGV
Ë!0Ë
	`e
(12);

82 i‡(
	`sigadd£t
(&
s
, 
SIGTERM
Ë!0Ë
	`e
(13);

83 i‡(
	`sigadd£t
(&
s
, 
SIGUSR1
Ë!0Ë
	`e
(14);

84 i‡(
	`sigadd£t
(&
s
, 
SIGUSR2
Ë!0Ë
	`e
(15);

86 i‡(
	`sigismembî
(&
s
, 
SIGABRT
Ë!1Ë
	`e
(16);

87 i‡(
	`sigismembî
(&
s
, 
SIGALRM
Ë!1Ë
	`e
(17);

88 i‡(
	`sigismembî
(&
s
, 
SIGFPE
 ) !1Ë
	`e
(18);

89 i‡(
	`sigismembî
(&
s
, 
SIGHUP
 ) !1Ë
	`e
(19);

90 i‡(
	`sigismembî
(&
s
, 
SIGILL
 ) !1Ë
	`e
(20);

91 i‡(
	`sigismembî
(&
s
, 
SIGINT
 ) !1Ë
	`e
(21);

92 i‡(
	`sigismembî
(&
s
, 
SIGKILL
Ë!1Ë
	`e
(22);

93 i‡(
	`sigismembî
(&
s
, 
SIGPIPE
Ë!1Ë
	`e
(23);

94 i‡(
	`sigismembî
(&
s
, 
SIGQUIT
Ë!1Ë
	`e
(24);

95 i‡(
	`sigismembî
(&
s
, 
SIGSEGV
Ë!1Ë
	`e
(25);

96 i‡(
	`sigismembî
(&
s
, 
SIGTERM
Ë!1Ë
	`e
(26);

97 i‡(
	`sigismembî
(&
s
, 
SIGUSR1
Ë!1Ë
	`e
(27);

98 i‡(
	`sigismembî
(&
s
, 
SIGUSR2
Ë!1Ë
	`e
(28);

100 i‡(
	`sigdñ£t
(&
s
, 
SIGABRT
Ë!0Ë
	`e
(29);

101 i‡(
	`sigdñ£t
(&
s
, 
SIGALRM
Ë!0Ë
	`e
(30);

102 i‡(
	`sigdñ£t
(&
s
, 
SIGFPE
 ) !0Ë
	`e
(31);

103 i‡(
	`sigdñ£t
(&
s
, 
SIGHUP
 ) !0Ë
	`e
(32);

104 i‡(
	`sigdñ£t
(&
s
, 
SIGILL
 ) !0Ë
	`e
(33);

105 i‡(
	`sigdñ£t
(&
s
, 
SIGINT
 ) !0Ë
	`e
(34);

106 i‡(
	`sigdñ£t
(&
s
, 
SIGKILL
Ë!0Ë
	`e
(35);

107 i‡(
	`sigdñ£t
(&
s
, 
SIGPIPE
Ë!0Ë
	`e
(36);

108 i‡(
	`sigdñ£t
(&
s
, 
SIGQUIT
Ë!0Ë
	`e
(37);

109 i‡(
	`sigdñ£t
(&
s
, 
SIGSEGV
Ë!0Ë
	`e
(38);

110 i‡(
	`sigdñ£t
(&
s
, 
SIGTERM
Ë!0Ë
	`e
(39);

111 i‡(
	`sigdñ£t
(&
s
, 
SIGUSR1
Ë!0Ë
	`e
(40);

112 i‡(
	`sigdñ£t
(&
s
, 
SIGUSR2
Ë!0Ë
	`e
(41);

114 i‡(
s
 !
s1
Ë
	`e
(42);

116 i‡(
	`sigadd£t
(&
s
, 
SIGILL
Ë!0Ë
	`e
(43);

117 i‡(
s
 =
s1
Ë
	`e
(44);

119 i‡(
	`sigfûl£t
(&
s
Ë!0Ë
	`e
(45);

120 i‡(
	`sigismembî
(&
s
, 
SIGABRT
Ë!1Ë
	`e
(46);

121 i‡(
	`sigismembî
(&
s
, 
SIGALRM
Ë!1Ë
	`e
(47);

122 i‡(
	`sigismembî
(&
s
, 
SIGFPE
 ) !1Ë
	`e
(48);

123 i‡(
	`sigismembî
(&
s
, 
SIGHUP
 ) !1Ë
	`e
(49);

124 i‡(
	`sigismembî
(&
s
, 
SIGILL
 ) !1Ë
	`e
(50);

125 i‡(
	`sigismembî
(&
s
, 
SIGINT
 ) !1Ë
	`e
(51);

126 i‡(
	`sigismembî
(&
s
, 
SIGKILL
Ë!1Ë
	`e
(52);

127 i‡(
	`sigismembî
(&
s
, 
SIGPIPE
Ë!1Ë
	`e
(53);

128 i‡(
	`sigismembî
(&
s
, 
SIGQUIT
Ë!1Ë
	`e
(54);

129 i‡(
	`sigismembî
(&
s
, 
SIGSEGV
Ë!1Ë
	`e
(55);

130 i‡(
	`sigismembî
(&
s
, 
SIGTERM
Ë!1Ë
	`e
(56);

131 i‡(
	`sigismembî
(&
s
, 
SIGUSR1
Ë!1Ë
	`e
(57);

132 i‡(
	`sigismembî
(&
s
, 
SIGUSR2
Ë!1Ë
	`e
(58);

135 i‡(
	`sigadd£t
(&
s
, -1Ë!-1Ë
	`e
(59);

136 i‡(
	`sigadd£t
(&
s
, -1Ë!-1Ë
	`e
(60);

137 i‡(
	`sigismembî
(&
s
, -1Ë!-1Ë
	`e
(61);

138 i‡(
	`sigadd£t
(&
s
, 10000Ë!-1Ë
	`e
(62);

139 i‡(
	`sigadd£t
(&
s
, 10000Ë!-1Ë
	`e
(63);

140 i‡(
	`sigismembî
(&
s
, 10000Ë!-1Ë
	`e
(64);

142 
	}
}

144 
	$ã°3b
()

148 
ut¢ame
 
u
;

150 
subã°
 = 2;

152 
î∫o
 = -2000;

153 i‡(
	`u«me
(&
u
Ë!0Ë
	`e
(1);

154 i‡(
	`°rcmp
(
u
.
sy¢ame
, "MINIX") != 0

155 && 
	`°rcmp
(
u
.
sy¢ame
, "Möix"Ë!0Ë
	`e
(2);

157 
	}
}

159 
	$ã°3c
()

163 *
p
, 
«me
[
SIZE
];

165 
subã°
 = 3;

166 
î∫o
 = -3000;

167 i‡–(
p
 = 
	`gëív
("HOME")Ë=
NULL
Ë
	`e
(1);

168 i‡(*
p
 !'/'Ë
	`e
(2);

169 i‡–(
p
 = 
	`gëív
("PATH")Ë=
NULL
Ë
	`e
(3);

170 i‡–(
p
 = 
	`gëív
("LOGNAME")Ë=
NULL
Ë
	`e
(5);

171 
	`°r˝y
(
«me
, 
p
);

172 
p
 = 
	`gëlogö
();

173 i‡(
	`°rcmp
(
p
, 
«me
Ë!0Ë
	`e
(6);

178 i‡(
	`gëív
(
ñ_weúdo
Ë!
NULL
Ë
	`e
(7);

179 
	}
}

181 
	$ã°3d
()

185 
fd
;

186 *
p
, 
«me
[
L_˘îmid
];

188 
subã°
 = 4;

189 
î∫o
 = -4000;

192 i‡–(
p
 = 
	`˘îmid
(
«me
)Ë=
NULL
Ë
	`e
(1);

193 i‡(
	`°rcmp
(
p
, 
«me
Ë!0Ë
	`e
(2);

194 i‡(
	`°∫cmp
(
p
, "/dev/ây", 8Ë!0Ë
	`e
(3);

196 i‡–(
p
 = 
	`ây«me
(0)Ë=
NULL
Ë
	`e
(4);

197 i‡(
	`°∫cmp
(
p
, "/dev/ây", 8Ë!0 && 
	`°rcmp
’, "/dev/c⁄sﬁe"Ë!0Ë
	`e
(5);

198 i‡–(
p
 = 
	`ây«me
(3)Ë!
NULL
Ë
	`e
(6);

199 i‡(
	`ây«me
(5000Ë!
NULL
Ë
	`e
(7);

200 i‡–(
fd
 = 
	`¸ót
("T3a", 0777)Ë< 0Ë
	`e
(8);

201 i‡(
	`ây«me
(
fd
Ë!
NULL
Ë
	`e
(9);

203 i‡(
	`ißây
(0Ë!1Ë
	`e
(10);

204 i‡(
	`ißây
(3Ë!0Ë
	`e
(11);

205 i‡(
	`ißây
(
fd
Ë!0Ë
	`e
(12);

206 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(13);

207 i‡(
	`ây«me
(
fd
Ë!
NULL
Ë
	`e
(14);

208 
	}
}

210 
	$ã°3e
()

214 
subã°
 = 5;

215 
î∫o
 = -5000;

217 i‡(
	`sysc⁄f
(
_SC_ARG_MAX
Ë< 
_POSIX_ARG_MAX
Ë
	`e
(1);

218 i‡(
	`sysc⁄f
(
_SC_CHILD_MAX
Ë< 
_POSIX_CHILD_MAX
Ë
	`e
(2);

219 i‡(
	`sysc⁄f
(
_SC_NGROUPS_MAX
Ë< 0Ë
	`e
(3);

220 i‡(
	`sysc⁄f
(
_SC_OPEN_MAX
Ë< 
_POSIX_OPEN_MAX
Ë
	`e
(4);

223 i‡(
	`sysc⁄f
(
_SC_JOB_CONTROL
Ë>0Ë
	`e
(5);

224 
	}
}

226 
	$quô
()

228 
	`chdú
("..");

229 
	`sy°em
("rm -rf DIR*");

231 i‡(
îr˘
 == 0) {

232 
	`¥ötf
("ok\n");

233 
	`exô
(0);

235 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

236 
	`exô
(4);

238 
	}
}

242 
	$e
(
n
)

243 
n
;

245 
îr_num
 = 
î∫o
;

247 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d ", 
subã°
, 
n
, 
î∫o
);

248 
î∫o
 = 
îr_num
;

249 
	`≥º‹
("");

250 i‡(
îr˘
++ > 
MAX_ERROR
) {

251 
	`¥ötf
("Testáborted. Too manyÉrrors: ");

252 
	`chdú
("..");

253 
	`sy°em
("rm -rf DIR*");

254 
	`exô
(1);

256 
	}
}

	@test30.c

10 
	~<sys/ty≥s.h
>

11 
	~<sys/°©.h
>

12 
	~<sys/waô.h
>

13 
	~<°dlib.h
>

14 
	~<uni°d.h
>

15 
	~<°rög.h
>

16 
	~<f˙é.h
>

17 
	~<limôs.h
>

18 
	~<î∫o.h
>

19 
	~<time.h
>

20 
	~<°dio.h
>

22 
	#MAX_ERROR
 4

	)

23 
	#ITERATIONS
 10

	)

25 
	#Sy°em
(
cmd
Ëi‡(
	`sy°em
(cmdË!0Ë
	`¥ötf
("``%s'' faûed\n", cmd)

	)

26 
	#Chdú
(
dú
Ëi‡(
	`chdú
(dúË!0Ë
	`¥ötf
("C™'àgŸÿ%s\n", dú)

	)

27 
	#Sèt
(
a
,
b
Ëi‡(
	`°©
◊,bË!0Ë
	`¥ötf
("C™'à°© %s\n",á)

	)

29 
	gîr˘
 = 0;

30 
	gsubã°
 = 1;

31 
	gsu≥ru£r
;

32 
	gMaxName
[
NAME_MAX
 + 1];

33 
	gMaxP©h
[
PATH_MAX
];

34 
	gToL⁄gName
[
NAME_MAX
 + 2];

35 
	gToL⁄gP©h
[
PATH_MAX
 + 1];

37 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

38 
_PROTOTYPE
(
ã°30a
, ());

39 
_PROTOTYPE
(
ã°30b
, ());

40 
_PROTOTYPE
(
ã°30c
, ());

41 
_PROTOTYPE
(
makñ⁄g«mes
, ());

42 
_PROTOTYPE
(
e
, (
numbî
));

43 
_PROTOTYPE
(
quô
, ());

45 
	$maö
(
¨gc
, 
¨gv
)

46 
¨gc
;

47 *
¨gv
[];

49 
i
, 
m
 = 0xFFFF;

51 
	`sync
();

52 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

53 
	`¥ötf
("Test 30 ");

54 
	`fÊush
(
°dout
);

55 
	`Sy°em
("rm -rf DIR_30; mkdir DIR_30");

56 
	`Chdú
("DIR_30");

57 
	`makñ⁄g«mes
();

58 
su≥ru£r
 = (
	`gëeuid
() == 0);

60 
	`umask
(0000);

62 
i
 = 0; i < 
ITERATIONS
; i++) {

63 i‡(
m
 & 0001Ë
	`ã°30a
();

64 i‡(
m
 & 0002Ë
	`ã°30b
();

65 i‡(
m
 & 0004Ë
	`ã°30c
();

67 
	`quô
();

68 
	}
}

71 
	$ã°30a
()

74 
	#BUF_SIZE
 1024

	)

76 
fd1
, 
fd2
;

77 
buf
[
BUF_SIZE
];

78 
°©
 
°
, 
dú°
;

79 
time_t
 
time1
, 
time2
;

80 
°©_loc
, 
˙t
;

82 
subã°
 = 1;

84 
	`Sy°em
("rm -rf ../DIR_30/*");

87 
	`f‹k
()) {

88 -1: 
	`¥ötf
("Can't fork\n"); ;

90 
	`Æ¨m
(20);

91 i‡((
fd1
 = 
	`¸ót
("myfûe", 0644)Ë!3Ë
	`e
(1);

92 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(2);

93 
	`exô
(0);

95 i‡((
fd1
 = 
	`¸ót
("myfûe", 0644)Ë!3Ë
	`e
(3);

96 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(4);

97 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(5);

98 i‡(
°©_loc
 !0Ë
	`e
(6);

102 
	`Sèt
(".", &
dú°
);

103 
	`time
(&
time1
);

104 
time1
 =
	`time
((
time_t
 *)0))

108 
˙t
 = 0;

109 
	`Sy°em
("rm -rf myfile");

111 
	`time
(&
time1
);

112 i‡((
fd1
 = 
	`¸ót
("myfûe", 0644)Ë!3Ë
	`e
(7);

113 
	`Sèt
("myfûe", &
°
);

114 
	`time
(&
time2
);

115 } 
time1
 !
time2
 && 
˙t
++ < 100);

116 i‡(
˙t
 >100Ë
	`e
(8);

117 i‡(
°
.
°_uid
 !
	`gëeuid
()Ë
	`e
(9);

118 #i‡
	`deföed
(
NGROUPS_MAX
) && NGROUPS_MAX == 0

119 i‡(
°
.
°_gid
 !
	`gëegid
()Ë
	`e
(10);

121 i‡(!
	`S_ISREG
(
°
.
°_mode
)Ë
	`e
(11);

122 i‡(
°
.
°_mode
 & 0777 !0644Ë
	`e
(12);

123 i‡(
°
.
°_∆ök
 !1Ë
	`e
(13);

124 i‡(
°
.
°_˘ime
 !
time1
Ë
	`e
(14);

125 i‡(
°
.
°_©ime
 !
time1
Ë
	`e
(15);

126 i‡(
°
.
°_mtime
 !
time1
Ë
	`e
(16);

127 i‡(
°
.
°_size
 !0Ë
	`e
(17);

130 
	`Sèt
(".", &
°
);

131 i‡(
°
.
°_˘ime
 <
dú°
.°_˘imeË
	`e
(18);

132 i‡(
°
.
°_mtime
 <
dú°
.°_mtimeË
	`e
(19);

135 i‡(
	`ªad
(
fd1
, 
buf
, 7Ë!-1Ë
	`e
(20);

136 i‡(
î∫o
 !
EBADF
Ë
	`e
(21);

137 i‡(
	`wrôe
(
fd1
, "HELLO", 6Ë!6Ë
	`e
(22);

140 i‡(
	`l£ek
(
fd1
, (
off_t
Ë1, 
SEEK_SET
Ë!1Ë
	`e
(23);

141 i‡(
	`wrôe
(
fd1
, "ñlo", 5Ë!5Ë
	`e
(24);

142 
	`Sèt
("myfûe", &
°
);

143 i‡(
°
.
°_size
 !6Ë
	`e
(25);

144 i‡(
°
.
°_size
 =11Ë
	`e
(26);

145 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(27);

148 i‡((
fd1
 = 
	`¸ót
("myfûe", 0644)Ë!3Ë
	`e
(28);

149 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!0Ë
	`e
(29);

150 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(30);

154 i‡(
su≥ru£r
) {

155 
	`Sy°em
("echo > bar; chmod 073 bar");

156 i‡(
	`chown
("b¨", 1, 1Ë!0Ë
	`e
(1137);

157 
fd1
 = 
	`¸ót
("bar", 0777);

158 i‡(
fd1
 =-1Ë
	`e
(31);

159 
	`Sèt
("b¨", &
°
);

160 i‡(
°
.
°_size
 !(
size_t
Ë0Ë
	`e
(32);

161 i‡(
	`wrôe
(
fd1
, "foo", 3Ë!3Ë
	`e
(33);

162 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(34);

163 
	`Sèt
("b¨", &
°
);

164 i‡(
°
.
°_uid
 !1Ë
	`e
(35);

165 i‡(
°
.
°_gid
 !1Ë
	`e
(36);

166 i‡((
°
.
°_mode
 & 0777Ë!073Ë
	`e
(37);

167 i‡(
°
.
°_size
 !(
size_t
Ë3Ë
	`e
(38);

171 i‡(
	`mkfifo
("fifo", 0644Ë!0Ë
	`e
(39);

174 
	`f‹k
()) {

175 -1: 
	`¥ötf
("Can't fork\n"); ;

177 
	`Æ¨m
(20);

178 i‡((
fd1
 = 
	`›í
("fifo", 
O_WRONLY
)Ë!3Ë
	`e
(40);

179 i‡(
	`wrôe
(
fd1
, "I did sì Elvis.\n", 18Ë!18Ë
	`e
(41);

180 i‡((
fd2
 = 
	`¸ót
("fifo", 0644)Ë!4Ë
	`e
(42);

181 i‡(
	`wrôe
(
fd2
, "I DID.\n", 8Ë!8Ë
	`e
(43);

182 i‡(
	`˛o£
(
fd2
Ë!0Ë
	`e
(44);

183 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(45);

184 
	`exô
(0);

186 i‡((
fd1
 = 
	`›í
("fifo", 
O_RDONLY
)Ë!3Ë
	`e
(46);

187 i‡(
	`ªad
(
fd1
, 
buf
, 18Ë!18Ë
	`e
(47);

188 i‡(
	`°rcmp
(
buf
, "I did sì Elvis.\n"Ë!0Ë
	`e
(48);

189 i‡(
	`°rcmp
(
buf
, "I DID.\n"Ë=0Ë
	`e
(49);

190 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!8Ë
	`e
(50);

191 i‡(
	`°rcmp
(
buf
, "I DID.\n"Ë!0Ë
	`e
(51);

192 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(52);

193 i‡(
	`waô
(&
°©_loc
Ë=-1Ë
	`e
(53);

194 i‡(
°©_loc
 !0Ë
	`e
(54);

198 
	`Sy°em
("mkdir dir;Åouch dir/f1 dir/f2 dir/f3");

199 i‡((
fd1
 = 
	`¸ót
("dú", 0644)Ë!-1Ë
	`e
(55);

200 i‡(
î∫o
 !
EISDIR
Ë
	`e
(56);

201 
	`˛o£
(
fd1
);

204 i‡((
fd1
 = 
	`¸ót
("dú/f1/n⁄o", 0644)Ë!-1Ë
	`e
(57);

205 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(58);

206 
	`˛o£
(
fd1
);

209 i‡((
fd1
 = 
	`¸ót
("", 0644)Ë!-1Ë
	`e
(59);

210 i‡(
î∫o
 !
ENOENT
Ë
	`e
(60);

211 
	`˛o£
(
fd1
);

212 i‡((
fd1
 = 
	`¸ót
("dú/noso/n⁄o", 0644)Ë!-1Ë
	`e
(61);

213 i‡(
î∫o
 !
ENOENT
Ë
	`e
(62);

214 
	`˛o£
(
fd1
);

216 
	}
}

218 
	$ã°30b
()

220 
fd
;

222 
subã°
 = 2;

224 
	`Sy°em
("rm -rf ../DIR_30/*");

227 i‡((
fd
 = 
	`¸ót
(
MaxName
, 0777)Ë!3Ë
	`e
(1);

228 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(2);

229 
MaxP©h
[
	`°æí
(MaxPath) - 2] = '/';

230 
MaxP©h
[
	`°æí
(MaxPath) - 1] = 'a';

231 i‡((
fd
 = 
	`¸ót
(
MaxP©h
, 0777)Ë!3Ë
	`e
(3);

232 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(4);

233 
MaxP©h
[
	`°æí
(MaxPath) - 1] = '/';

234 
	}
}

237 
	$ã°30c
()

239 
fd
;

241 
subã°
 = 3;

243 
	`Sy°em
("rm -rf ../DIR_30/*");

245 i‡(!
su≥ru£r
) {

247 
	`Sy°em
(">Çono; chmod 177Çono");

248 
fd
 = 
	`¸ót
("nono", 0777);

249 i‡(
fd
 !-1Ë
	`e
(1);

250 i‡(
î∫o
 !
EACCES
Ë
	`e
(2);

252 i‡(
	`mkdú
("b¨", 0777Ë!0Ë
	`e
(3);

255 
	`Sy°em
("chmod 577 bar");

256 i‡(!
su≥ru£r
) {

258 i‡(
	`¸ót
("b¨/n⁄o", 0666Ë!-1Ë
	`e
(4);

259 i‡(
î∫o
 !
EACCES
Ë
	`e
(5);

260 i‡(
	`¸ót
("b¨/../n⁄o", 0666Ë!-1Ë
	`e
(6);

261 i‡(
î∫o
 !
EACCES
Ë
	`e
(7);

263 i‡(
su≥ru£r
) {

265 i‡((
fd
 = 
	`¸ót
("b¨/n⁄o", 0666)Ë!3Ë
	`e
(8);

266 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(9);

267 i‡(
	`u∆ök
("b¨/n⁄o"Ë!0Ë
	`e
(10);

271 
	`Sy°em
("rm -rf bar");

274 #ifde‡
_POSIX_NO_TRUNC


275 #i‡
_POSIX_NO_TRUNC
 - 0 != -1

276 i‡((
fd
 = 
	`¸ót
(
ToL⁄gName
, 0777)Ë!-1Ë
	`e
(11);

277 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(12);

278 
	`˛o£
(
fd
);

280 i‡((
fd
 = 
	`¸ót
(
ToL⁄gName
, 0777)Ë!3Ë
	`e
(13);

281 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(14);

284 
	~"îr‹,Åhi†ˇ£Ñequúe†dy«mi¯check†™d i†nŸ h™dÀd
"

286 
ToL⁄gP©h
[
PATH_MAX
 - 2] = '/';

287 
ToL⁄gP©h
[
PATH_MAX
 - 1] = 'a';

288 i‡((
fd
 = 
	`¸ót
(
ToL⁄gP©h
, 0777)Ë!-1Ë
	`e
(15);

289 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(16);

290 i‡(
	`˛o£
(
fd
Ë!-1Ë
	`e
(17);

291 
ToL⁄gP©h
[
PATH_MAX
 - 1] = '/';

292 
	}
}

295 
	$makñ⁄g«mes
()

297 
i
;

299 
	`mem£t
(
MaxName
, 'a', 
NAME_MAX
);

300 
MaxName
[
NAME_MAX
] = '\0';

301 
i
 = 0; i < 
PATH_MAX
 - 1; i++) {

302 
MaxP©h
[
i
++] = '.';

303 
MaxP©h
[
i
] = '/';

305 
MaxP©h
[
PATH_MAX
 - 1] = '\0';

307 
	`°r˝y
(
ToL⁄gName
, 
MaxName
);

308 
	`°r˝y
(
ToL⁄gP©h
, 
MaxP©h
);

310 
ToL⁄gName
[
NAME_MAX
] = 'a';

311 
ToL⁄gName
[
NAME_MAX
 + 1] = '\0';

312 
ToL⁄gP©h
[
PATH_MAX
 - 1] = '/';

313 
ToL⁄gP©h
[
PATH_MAX
] = '\0';

314 
	}
}

318 
	$e
(
n
)

319 
n
;

321 
îr_num
 = 
î∫o
;

323 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d: ", 
subã°
, 
n
, 
î∫o
);

324 
î∫o
 = 
îr_num
;

325 
	`≥º‹
("");

326 i‡(
îr˘
++ > 
MAX_ERROR
) {

327 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

328 
	`chdú
("..");

329 
	`sy°em
("rm -rf DIR*");

330 
	`exô
(1);

332 
î∫o
 = 0;

333 
	}
}

336 
	$quô
()

338 
	`Chdú
("..");

339 
	`Sy°em
("rm -rf DIR_30");

341 i‡(
îr˘
 == 0) {

342 
	`¥ötf
("ok\n");

343 
	`exô
(0);

345 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

346 
	`exô
(1);

348 
	}
}

	@test31.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/°©.h
>

5 
	~<sys/waô.h
>

6 
	~<°dlib.h
>

7 
	~<uni°d.h
>

8 
	~<°rög.h
>

9 
	~<f˙é.h
>

10 
	~<limôs.h
>

11 
	~<î∫o.h
>

12 
	~<time.h
>

13 
	~<°dio.h
>

15 
	#MAX_ERROR
 4

	)

16 
	#ITERATIONS
 10

	)

18 
	#Sy°em
(
cmd
Ëi‡(
	`sy°em
(cmdË!0Ë
	`¥ötf
("``%s'' faûed\n", cmd)

	)

19 
	#Chdú
(
dú
Ëi‡(
	`chdú
(dúË!0Ë
	`¥ötf
("C™'àgŸÿ%s\n", dú)

	)

20 
	#Sèt
(
a
,
b
Ëi‡(
	`°©
◊,bË!0Ë
	`¥ötf
("C™'à°© %s\n",á)

	)

22 
	gîr˘
 = 0;

23 
	gsubã°
 = 1;

24 
	gsu≥ru£r
;

25 
	gMaxName
[
NAME_MAX
 + 1];

26 
	gMaxP©h
[
PATH_MAX
];

27 
	gToL⁄gName
[
NAME_MAX
 + 2];

28 
	gToL⁄gP©h
[
PATH_MAX
 + 1];

30 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

31 
_PROTOTYPE
(
ã°31a
, ());

32 
_PROTOTYPE
(
ã°31b
, ());

33 
_PROTOTYPE
(
ã°31c
, ());

34 
_PROTOTYPE
(
makñ⁄g«mes
, ());

35 
_PROTOTYPE
(
e
, (
numbî
));

36 
_PROTOTYPE
(
quô
, ());

38 
	$maö
(
¨gc
, 
¨gv
)

39 
¨gc
;

40 *
¨gv
[];

42 
i
, 
m
 = 0xFFFF;

44 
	`sync
();

45 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

46 
	`¥ötf
("Test 31 ");

47 
	`fÊush
(
°dout
);

48 
	`Sy°em
("rm -rf DIR_31; mkdir DIR_31");

49 
	`Chdú
("DIR_31");

50 
	`makñ⁄g«mes
();

51 
su≥ru£r
 = (
	`gëeuid
() == 0);

53 
	`umask
(0000);

55 
i
 = 0; i < 
ITERATIONS
; i++) {

56 i‡(
m
 & 0001Ë
	`ã°31a
();

57 i‡(
m
 & 0002Ë
	`ã°31b
();

58 i‡(
m
 & 0004Ë
	`ã°31c
();

60 
	`quô
();

61 
	}
}

64 
	$ã°31a
()

67 
	#BUF_SIZE
 1024

	)

69 
fd
;

70 
buf
[
BUF_SIZE
];

71 
°©
 
°
, 
dú°
;

72 
time_t
 
time1
, 
time2
;

73 
°©_loc
, 
˙t
;

75 
subã°
 = 1;

77 
	`Sy°em
("rm -rf ../DIR_31/*");

80 
	`Sy°em
("rm -rf fifo");

81 
˙t
 = 0;

82 
	`Sèt
(".", &
dú°
);

83 
	`time
(&
time1
);

84 
time1
 =
	`time
((
time_t
 *)0))

88 
	`time
(&
time1
);

89 i‡(
	`mkfifo
("fifo", 0644Ë!0Ë
	`e
(1);

90 
	`Sèt
("fifo", &
°
);

91 
	`time
(&
time2
);

92 } 
time1
 !
time2
 && 
˙t
++ < 100);

94 i‡(
˙t
 >100Ë
	`e
(2);

95 i‡(
°
.
°_uid
 !
	`gëeuid
()Ë
	`e
(3);

96 #i‡
	`deföed
(
NGROUPS_MAX
) && NGROUPS_MAX == 0

97 i‡(
°
.
°_gid
 !
	`gëegid
()Ë
	`e
(4);

99 i‡(!
	`S_ISFIFO
(
°
.
°_mode
)Ë
	`e
(5);

100 i‡(
°
.
°_mode
 & 0777 !0644Ë
	`e
(6);

101 i‡(
°
.
°_∆ök
 !1Ë
	`e
(7);

102 i‡(
°
.
°_˘ime
 !
time1
Ë
	`e
(8);

103 i‡(
°
.
°_©ime
 !
time1
Ë
	`e
(9);

104 i‡(
°
.
°_mtime
 !
time1
Ë
	`e
(10);

105 i‡(
°
.
°_size
 !0Ë
	`e
(11);

108 
	`Sèt
(".", &
°
);

109 i‡(
°
.
°_˘ime
 <
dú°
.°_˘imeË
	`e
(12);

110 i‡(
°
.
°_mtime
 <
dú°
.°_mtimeË
	`e
(13);

113 
	`Æ¨m
(10);

114 
	`f‹k
()) {

115 -1: 
	`¥ötf
("Can't fork\n"); ;

117 i‡((
fd
 = 
	`›í
("fifo", 
O_RDONLY
)Ë!3Ë
	`e
(14);

118 i‡(
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
Ë!7Ë
	`e
(15);

119 i‡(
	`°rcmp
(
buf
, "b™™a"Ë!0Ë
	`e
(16);

120 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(17);

121 i‡((
fd
 = 
	`›í
("fifo", 
O_WRONLY
)Ë!3Ë
	`e
(18);

122 i‡(
	`wrôe
(
fd
, "th™ks", 7Ë!7Ë
	`e
(19);

123 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(20);

124 
	`exô
(0);

127 i‡((
fd
 = 
	`›í
("fifo", 
O_WRONLY
)Ë!3Ë
	`e
(21);

128 i‡(
	`wrôe
(
fd
, "b™™a", 7Ë!7Ë
	`e
(22);

129 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(23);

130 i‡((
fd
 = 
	`›í
("fifo", 
O_RDONLY
)Ë!3Ë
	`e
(24);

131 i‡(
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
Ë!7Ë
	`e
(25);

132 i‡(
	`°rcmp
(
buf
, "th™ks"Ë!0Ë
	`e
(26);

133 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(27);

134 
	`waô
(&
°©_loc
);

135 i‡(
°©_loc
 !0Ë
	`e
(28);

137 
	`Æ¨m
(0);

138 
	}
}

140 
	$ã°31b
()

142 
subã°
 = 2;

144 
	`Sy°em
("rm -rf ../DIR_31/*");

147 i‡(
	`mkfifo
(
MaxName
, 0777Ë!0Ë
	`e
(1);

148 i‡(
	`u∆ök
(
MaxName
Ë!0Ë
	`e
(2);

149 
MaxP©h
[
	`°æí
(MaxPath) - 2] = '/';

150 
MaxP©h
[
	`°æí
(MaxPath) - 1] = 'a';

151 i‡(
	`mkfifo
(
MaxP©h
, 0777Ë!0Ë
	`e
(3);

152 i‡(
	`u∆ök
(
MaxP©h
Ë!0Ë
	`e
(4);

153 
MaxP©h
[
	`°æí
(MaxPath) - 1] = '/';

154 
	}
}

157 
	$ã°31c
()

159 
subã°
 = 3;

161 
	`Sy°em
("rm -rf ../DIR_31/*");

164 i‡(
	`mkfifo
("fifo", 0777Ë!0Ë
	`e
(1);

165 
	`Sy°em
("mkdir dir; > file");

166 i‡(
	`mkfifo
("fifo", 0777Ë!-1Ë
	`e
(2);

167 i‡(
î∫o
 !
EEXIST
Ë
	`e
(3);

168 i‡(
	`mkfifo
("dú", 0777Ë!-1Ë
	`e
(4);

169 i‡(
î∫o
 !
EEXIST
Ë
	`e
(5);

170 i‡(
	`mkfifo
("fûe", 0777Ë!-1Ë
	`e
(6);

171 i‡(
î∫o
 !
EEXIST
Ë
	`e
(7);

174 i‡(
	`mkfifo
("", 0777Ë!-1Ë
	`e
(8);

175 i‡(
î∫o
 !
ENOENT
Ë
	`e
(9);

176 i‡(
	`mkfifo
("/tmp/noway/out", 0777Ë!-1Ë
	`e
(10);

177 i‡(
î∫o
 !
ENOENT
Ë
	`e
(11);

180 i‡(
	`mkfifo
("/ëc/∑sswd/n⁄o", 0777Ë!-1Ë
	`e
(12);

181 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(13);

183 
	`mkdú
("bar", 0777);

186 
	`Sy°em
("chmod 577 bar");

187 i‡(!
su≥ru£r
) {

188 i‡(
	`mkfifo
("b¨/n⁄o", 0666Ë!-1Ë
	`e
(14);

189 i‡(
î∫o
 !
EACCES
Ë
	`e
(15);

191 i‡(
su≥ru£r
) {

192 i‡(
	`mkfifo
("b¨/n⁄o", 0666Ë!0Ë
	`e
(14);

193 i‡(
	`u∆ök
("b¨/n⁄o"Ë!0Ë
	`e
(666);

195 
	`Sy°em
("chmod 677 bar");

196 i‡(!
su≥ru£r
) {

197 i‡(
	`mkfifo
("b¨/../n⁄o", 0666Ë!-1Ë
	`e
(16);

198 i‡(
î∫o
 !
EACCES
Ë
	`e
(17);

200 i‡(
	`u∆ök
("n⁄o"Ë!-1Ë
	`e
(18);

203 
	`Sy°em
("rm -rf bar");

206 #ifde‡
_POSIX_NO_TRUNC


207 #i‡
_POSIX_NO_TRUNC
 - 0 != -1

208 i‡(
	`mkfifo
(
ToL⁄gName
, 0777Ë!-1Ë
	`e
(19);

209 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(20);

211 i‡(
	`mkfifo
(
ToL⁄gName
, 0777Ë!0Ë
	`e
(21);

214 
	~"îr‹,Åhi†ˇ£Ñequúe†dy«mi¯check†™d i†nŸ h™dÀd
"

216 
ToL⁄gP©h
[
PATH_MAX
 - 2] = '/';

217 
ToL⁄gP©h
[
PATH_MAX
 - 1] = 'a';

218 i‡(
	`mkfifo
(
ToL⁄gP©h
, 0777Ë!-1Ë
	`e
(22);

219 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(23);

220 
ToL⁄gP©h
[
PATH_MAX
 - 1] = '/';

221 
	}
}

224 
	$makñ⁄g«mes
()

226 
i
;

228 
	`mem£t
(
MaxName
, 'a', 
NAME_MAX
);

229 
MaxName
[
NAME_MAX
] = '\0';

230 
i
 = 0; i < 
PATH_MAX
 - 1; i++) {

231 
MaxP©h
[
i
++] = '.';

232 
MaxP©h
[
i
] = '/';

234 
MaxP©h
[
PATH_MAX
 - 1] = '\0';

236 
	`°r˝y
(
ToL⁄gName
, 
MaxName
);

237 
	`°r˝y
(
ToL⁄gP©h
, 
MaxP©h
);

239 
ToL⁄gName
[
NAME_MAX
] = 'a';

240 
ToL⁄gName
[
NAME_MAX
 + 1] = '\0';

241 
ToL⁄gP©h
[
PATH_MAX
 - 1] = '/';

242 
ToL⁄gP©h
[
PATH_MAX
] = '\0';

243 
	}
}

245 
	$e
(
n
)

246 
n
;

248 
îr_num
 = 
î∫o
;

250 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d: ", 
subã°
, 
n
, 
î∫o
);

251 
î∫o
 = 
îr_num
;

252 
	`≥º‹
("");

253 i‡(
îr˘
++ > 
MAX_ERROR
) {

254 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

255 
	`chdú
("..");

256 
	`sy°em
("rm -rf DIR*");

257 
	`exô
(1);

259 
î∫o
 = 0;

260 
	}
}

263 
	$quô
()

265 
	`Chdú
("..");

266 
	`Sy°em
("rm -rf DIR_31");

268 i‡(
îr˘
 == 0) {

269 
	`¥ötf
("ok\n");

270 
	`exô
(0);

272 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

273 
	`exô
(1);

275 
	}
}

	@test32.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/°©.h
>

5 
	~<sys/waô.h
>

6 
	~<°dlib.h
>

7 
	~<uni°d.h
>

8 
	~<°rög.h
>

9 
	~<f˙é.h
>

10 
	~<limôs.h
>

11 
	~<î∫o.h
>

12 
	~<time.h
>

13 
	~<°dio.h
>

15 
	#MAX_ERROR
 4

	)

16 
	#ITERATIONS
 2

	)

18 
	#Sy°em
(
cmd
Ëi‡(
	`sy°em
(cmdË!0Ë
	`¥ötf
("``%s'' faûed\n", cmd)

	)

19 
	#Chdú
(
dú
Ëi‡(
	`chdú
(dúË!0Ë
	`¥ötf
("C™'àgŸÿ%s\n", dú)

	)

20 
	#Sèt
(
a
,
b
Ëi‡(
	`°©
◊,bË!0Ë
	`¥ötf
("C™'à°© %s\n",á)

	)

21 
	#Cª©
(
f
Ëi‡(
	`˛o£
(
	`¸ót
(f,0777))!=0Ë
	`¥ötf
("C™'à¸óà%s\n",f)

	)

23 
	gîr˘
 = 0;

24 
	gsubã°
 = 1;

25 
	gsu≥ru£r
;

26 
	gMaxName
[
NAME_MAX
 + 1];

27 
	gMaxP©h
[
PATH_MAX
];

28 
	gToL⁄gName
[
NAME_MAX
 + 2];

29 
	gToL⁄gP©h
[
PATH_MAX
 + 1];

31 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

32 
_PROTOTYPE
(
ã°32a
, ());

33 
_PROTOTYPE
(
ã°32b
, ());

34 
_PROTOTYPE
(
ã°32c
, ());

35 
_PROTOTYPE
(
makñ⁄g«mes
, ());

36 
_PROTOTYPE
(
e
, (
numbî
));

37 
_PROTOTYPE
(
quô
, ());

39 
	$maö
(
¨gc
, 
¨gv
)

40 
¨gc
;

41 *
¨gv
[];

43 
i
, 
m
 = 0xFFFF;

45 
	`sync
();

46 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

47 
	`¥ötf
("Test 32 ");

48 
	`fÊush
(
°dout
);

49 
	`Sy°em
("rm -rf DIR_32; mkdir DIR_32");

50 
	`Chdú
("DIR_32");

51 
	`makñ⁄g«mes
();

52 
su≥ru£r
 = (
	`gëeuid
() == 0);

54 
i
 = 0; i < 
ITERATIONS
; i++) {

55 i‡(
m
 & 0001Ë
	`ã°32a
();

56 i‡(
m
 & 0002Ë
	`ã°32b
();

57 i‡(
m
 & 0004Ë
	`ã°32c
();

59 
	`quô
();

60 
	}
}

62 
	#BUF_SIZE
 1024

	)

64 
	$ã°32a
()

66 
°©
 
°1
, 
°2
;

67 
fd1
, 
fd2
;

68 
time_t
 
time1
, 
time2
, 
time3
;

69 
buf
[
BUF_SIZE
];

71 
subã°
 = 1;

72 
	`Sy°em
("rm -rf ../DIR_32/*");

75 
	`Sy°em
("echo haha > old");

76 
	`Sèt
("ﬁd", &
°1
);

77 i‡(
	`ª«me
("ﬁd", "√w"Ë!0Ë
	`e
(1);

78 
	`Sèt
("√w", &
°2
);

81 i‡(
°1
.
°_dev
 !
°2
.°_devË
	`e
(2);

82 i‡(
°1
.
°_öo
 !
°2
.°_öoË
	`e
(3);

83 i‡(
°1
.
°_mode
 !
°2
.°_modeË
	`e
(4);

84 i‡(
°1
.
°_∆ök
 !
°2
.°_∆ökË
	`e
(5);

85 i‡(
°1
.
°_uid
 !
°2
.°_uidË
	`e
(6);

86 i‡(
°1
.
°_gid
 !
°2
.°_gidË
	`e
(7);

87 i‡(
°1
.
°_rdev
 !
°2
.°_rdevË
	`e
(8);

88 i‡(
°1
.
°_size
 !
°2
.°_sizeË
	`e
(9);

89 i‡(
°1
.
°_©ime
 !
°2
.°_©imeË
	`e
(10);

90 i‡(
°1
.
°_mtime
 !
°2
.°_mtimeË
	`e
(11);

91 i‡(
°1
.
°_˘ime
 !
°2
.°_˘imeË
	`e
(12);

94 
	`Sy°em
("lnÇewÇew2");

95 
	`Sy°em
("echo foobar > old");

96 
	`Sèt
("ﬁd", &
°1
);

97 i‡(
	`ª«me
("ﬁd", "√w"Ë!0Ë
	`e
(13);

98 
	`Sèt
("√w", &
°2
);

101 i‡(
°1
.
°_dev
 !
°2
.°_devË
	`e
(14);

102 i‡(
°1
.
°_öo
 !
°2
.°_öoË
	`e
(15);

103 i‡(
°1
.
°_mode
 !
°2
.°_modeË
	`e
(16);

104 i‡(
°1
.
°_∆ök
 !
°2
.°_∆ökË
	`e
(17);

105 i‡(
°1
.
°_uid
 !
°2
.°_uidË
	`e
(18);

106 i‡(
°1
.
°_gid
 !
°2
.°_gidË
	`e
(19);

107 i‡(
°1
.
°_rdev
 !
°2
.°_rdevË
	`e
(20);

108 i‡(
°1
.
°_size
 !
°2
.°_sizeË
	`e
(21);

109 i‡(
°1
.
°_©ime
 !
°2
.°_©imeË
	`e
(22);

110 i‡(
°1
.
°_mtime
 !
°2
.°_mtimeË
	`e
(23);

111 i‡(
°1
.
°_˘ime
 !
°2
.°_˘imeË
	`e
(24);

114 
	`Sèt
("√w2", &
°1
);

115 i‡(
°1
.
°_∆ök
 !1Ë
	`e
(25);

118 
	`Sy°em
("> OLD");

119 
	`Sèt
(".", &
°1
);

120 
	`time
(&
time1
);

121 
time1
 =
	`time
((
time_t
 *)0))

123 
	`time
(&
time2
);

124 
	`ª«me
("OLD", "NEW");

125 
	`Sèt
(".", &
°2
);

126 
	`time
(&
time3
);

127 
time3
 =
	`time
((
time_t
 *)0))

129 
	`time
(&
time3
);

130 i‡(
°1
.
°_˘ime
 >
°2
.°_˘imeË
	`e
(26);

131 i‡(
°1
.
°_mtime
 >
°2
.°_mtimeË
	`e
(27);

132 i‡(
°1
.
°_˘ime
 > 
time1
Ë
	`e
(28);

133 i‡(
°1
.
°_mtime
 > 
time1
Ë
	`e
(29);

134 i‡(
°1
.
°_˘ime
 >
time2
Ë
	`e
(30);

135 i‡(
°1
.
°_mtime
 >
time2
Ë
	`e
(31);

136 i‡(
°2
.
°_˘ime
 < 
time2
Ë
	`e
(32);

137 i‡(
°2
.
°_mtime
 < 
time2
Ë
	`e
(33);

138 i‡(
°2
.
°_˘ime
 >
time3
Ë
	`e
(34);

139 i‡(
°2
.
°_mtime
 >
time3
Ë
	`e
(35);

143 
	`Sy°em
("rm -rfÇew NEW old OLD");

144 i‡((
fd1
 = 
	`¸ót
("√w", 0644)Ë!3Ë
	`e
(36);

145 i‡(
	`wrôe
(
fd1
, "Hòthîe! Iám SammyÅhê°rög", 33Ë!33Ë
	`e
(37);

146 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(38);

147 i‡((
fd1
 = 
	`¸ót
("ﬁd", 0644)Ë!3Ë
	`e
(39);

148 i‡(
	`wrôe
(
fd1
, "IÇìdáÇewÇame", 18Ë!18Ë
	`e
(40);

149 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(41);

150 i‡((
fd1
 = 
	`›í
("√w", 
O_RDONLY
)Ë!3Ë
	`e
(42);

151 i‡((
fd2
 = 
	`›í
("√w", 
O_RDONLY
)Ë!4Ë
	`e
(43);

152 i‡(
	`ª«me
("ﬁd", "√w"Ë!0Ë
	`e
(44);

153 i‡(
	`°©
("ﬁd", &
°1
Ë=0Ë
	`e
(45);

154 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(46);

155 i‡((
fd1
 = 
	`›í
("√w", 
O_RDONLY
)Ë!3Ë
	`e
(47);

156 i‡(
	`ªad
(
fd2
, 
buf
, 
BUF_SIZE
Ë!33Ë
	`e
(48);

157 i‡(
	`°rcmp
(
buf
, "Hòthîe! Iám SammyÅhê°rög"Ë!0Ë
	`e
(49);

158 i‡(
	`ªad
(
fd1
, 
buf
, 
BUF_SIZE
Ë!18Ë
	`e
(50);

159 i‡(
	`°rcmp
(
buf
, "IÇìdáÇewÇame"Ë!0Ë
	`e
(51);

160 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(52);

161 i‡(
	`˛o£
(
fd2
Ë!0Ë
	`e
(53);

162 
	}
}

164 
	$ã°32b
()

166 
MaxP©h2
[
PATH_MAX
];

167 
MaxName2
[
NAME_MAX
 + 1];

168 
fd
, 
i
;

169 
°©_loc
;

170 
°©
 
°
;

172 
subã°
 = 2;

173 
	`Sy°em
("rm -rf ../DIR_32/*");

176 i‡((
fd
 = 
	`¸ót
(
MaxName
, 0777)Ë!3Ë
	`e
(1);

177 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(2);

178 
	`°r˝y
(
MaxName2
, 
MaxName
);

179 
MaxName2
[
	`°æí
(MaxName2) - 1] ^= 1;

180 i‡(
	`ª«me
(
MaxName
, 
MaxName2
Ë!0Ë
	`e
(3);

181 i‡(
	`ª«me
(
MaxName2
, 
MaxName
Ë!0Ë
	`e
(4);

182 
MaxName2
[
	`°æí
(MaxName2) - 1] ^= 2;

183 i‡(
	`ª«me
(
MaxName
, 
MaxName2
Ë!0Ë
	`e
(5);

184 
MaxP©h
[
	`°æí
(MaxPath) - 2] = '/';

185 
MaxP©h
[
	`°æí
(MaxPath) - 1] = 'a';

186 i‡((
fd
 = 
	`¸ót
(
MaxP©h
, 0777)Ë!3Ë
	`e
(6);

187 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(7);

188 
	`°r˝y
(
MaxP©h2
, 
MaxP©h
);

189 
MaxP©h2
[
	`°æí
(MaxPath2) - 1] ^= 1;

190 i‡(
	`ª«me
(
MaxP©h
, 
MaxP©h2
Ë!0Ë
	`e
(8);

191 i‡(
	`ª«me
(
MaxP©h2
, 
MaxP©h
Ë!0Ë
	`e
(9);

192 
MaxP©h2
[
	`°æí
(MaxPath2) - 1] ^= 2;

193 i‡(
	`ª«me
(
MaxP©h
, 
MaxP©h2
Ë!0Ë
	`e
(10);

194 
MaxP©h
[
	`°æí
(MaxPath) - 1] = '/';

197 
	`Sy°em
("> foo;Ün foo bar");

198 i‡(
	`ª«me
("foo", "b¨"Ë!0Ë
	`e
(11);

199 i‡(
	`ª«me
("b¨", "foo"Ë!0Ë
	`e
(12);

200 
	`Sy°em
("ln foo foobar");

201 i‡(
	`ª«me
("foo", "foob¨"Ë!0Ë
	`e
(13);

202 i‡(
	`ª«me
("b¨", "foob¨"Ë!0Ë
	`e
(14);

205 i‡(
	`ª«me
("b¨", "b¨"Ë!0Ë
	`e
(15);

206 i‡(
	`ª«me
("foo", "foo"Ë!0Ë
	`e
(16);

207 i‡(
	`ª«me
("foob¨", "foob¨"Ë!0Ë
	`e
(17);

211 
i
 = 0; i < 5; i++) {

212 
	`Sy°em
("echo old > old");

213 
	`Sy°em
("echoÇews >Çew");

214 
	`f‹k
()) {

215 -1: 
	`¥ötf
("Can't fork\n"); ;

217 
	`Æ¨m
(20);

218 
	`¶ìp
(1);

219 
	`ª«me
("old", "new");

220 
	`exô
(0);

222 
	`°©
("ﬁd", &
°
) != 0)

223 i‡(
	`°©
("√w", &
°
Ë!0Ë
	`e
(18);

224 
	`waô
(&
°©_loc
);

225 i‡(
°©_loc
 !0Ë
	`e
(19);

229 
	}
}

231 
	$ã°32c
()

233 
°©
 
°1
;

234 
°©_loc
;

236 
subã°
 = 3;

237 
	`Sy°em
("rm -rf ../DIR_32/*");

240 
	`sy°em
("chmod 777ÇoaccÇowrite > /dev/null 2>/dev/null");

241 
	`sy°em
("rm -rfÇoaccÇowrite");

243 
	`Sy°em
("mkdirÇoaccÇowrite");

244 
	`Sy°em
(">Çoacc/file");

245 
	`Sy°em
(">Çowrite/file");

246 
	`Sy°em
("> file");

247 
	`Sy°em
("chmod 677Çoacc");

248 
	`Sy°em
("chmod 577Çowrite");

249 i‡(!
su≥ru£r
) {

250 i‡(
	`ª«me
("nﬂcc/fûe", "n⁄o"Ë!-1Ë
	`e
(1);

251 i‡(
î∫o
 !
EACCES
Ë
	`e
(2);

252 i‡(
	`ª«me
("nowrôe/fûe", "n⁄o"Ë!-1Ë
	`e
(3);

253 i‡(
î∫o
 !
EACCES
Ë
	`e
(4);

254 i‡(
	`ª«me
("fûe", "nﬂcc/fûe"Ë!-1Ë
	`e
(5);

255 i‡(
î∫o
 !
EACCES
Ë
	`e
(6);

256 i‡(
	`ª«me
("fûe", "nowrôe/fûe"Ë!-1Ë
	`e
(7);

257 i‡(
î∫o
 !
EACCES
Ë
	`e
(8);

259 i‡(
su≥ru£r
) {

261 i‡(
	`ª«me
("nﬂcc/fûe", "nﬂcc/yes"Ë!0Ë
	`e
(9);

262 i‡(
	`ª«me
("nowrôe/fûe", "nowrôe/yes"Ë!0Ë
	`e
(10);

263 i‡(
	`ª«me
("fûe", "yes"Ë!0Ë
	`e
(11);

264 i‡(
	`ª«me
("nﬂcc/yes", "nﬂcc/fûe"Ë!0Ë
	`e
(12);

265 i‡(
	`ª«me
("nowrôe/yes", "nowrôe/fûe"Ë!0Ë
	`e
(13);

266 i‡(
	`ª«me
("yes", "fûe"Ë!0Ë
	`e
(14);

268 
	`Sy°em
("chmod 777ÇoaccÇowrite");

271 
	`Sy°em
("mkdirÇewdir olddir");

272 
	`Sy°em
("rm -rf /tmp/sema.11[ab]");

273 
	`f‹k
()) {

274 -1: 
	`¥ötf
("Can't fork\n"); ;

276 
	`Æ¨m
(20);

277 
	`f‹k
()) {

278 -1: 
	`¥ötf
("Can't fork\n"); ;

281 
	`Æ¨m
(20);

282 i‡(
	`chdú
("√wdú"Ë!0Ë
	`e
(15);

283 
	`Cª©
("/tmp/sema.11a");

284 
	`°©
("/tmp/£ma.11a", &
°1
Ë=-1Ë
	`¶ìp
(1);

285 
	`exô
(0);

287 
	`waô
(&
°©_loc
);

288 i‡(
°©_loc
 !0Ë
	`e
(16);

292 i‡(
	`chdú
("ﬁddú"Ë!0Ë
	`e
(17);

293 
	`Cª©
("/tmp/sema.11b");

294 
	`°©
("/tmp/£ma.11b", &
°1
Ë=-1Ë
	`¶ìp
(1);

295 
	`exô
(0);

298 
	`°©
("/tmp/£ma.11a", &
°1
Ë=-1Ë
	`¶ìp
(1);

299 i‡(
	`rmdú
("newdir") == -1) {

300 i‡(
	`ª«me
("ﬁddú", "√wdú"Ë!-1Ë
	`e
(18);

301 i‡(
î∫o
 !
EBUSY
Ë
	`e
(19);

303 (Ë
	`u∆ök
("/tmp/sema.11a");

306 
	`°©
("/tmp/£ma.11b", &
°1
Ë=-1Ë
	`¶ìp
(1);

307 i‡(
	`rmdú
("olddir") == -1) {

308 i‡(
	`ª«me
("ﬁddú", "√wdú"Ë!-1Ë
	`e
(20);

309 i‡(
î∫o
 !
EBUSY
Ë
	`e
(21);

311 (Ë
	`u∆ök
("/tmp/sema.11b");

312 
	`waô
(&
°©_loc
);

313 i‡(
°©_loc
 !0Ë
	`e
(22);

315 
	}
}

317 
	$makñ⁄g«mes
()

319 
i
;

321 
	`mem£t
(
MaxName
, 'a', 
NAME_MAX
);

322 
MaxName
[
NAME_MAX
] = '\0';

323 
i
 = 0; i < 
PATH_MAX
 - 1; i++) {

324 
MaxP©h
[
i
++] = '.';

325 
MaxP©h
[
i
] = '/';

327 
MaxP©h
[
PATH_MAX
 - 1] = '\0';

329 
	`°r˝y
(
ToL⁄gName
, 
MaxName
);

330 
	`°r˝y
(
ToL⁄gP©h
, 
MaxP©h
);

332 
ToL⁄gName
[
NAME_MAX
] = 'a';

333 
ToL⁄gName
[
NAME_MAX
 + 1] = '\0';

334 
ToL⁄gP©h
[
PATH_MAX
 - 1] = '/';

335 
ToL⁄gP©h
[
PATH_MAX
] = '\0';

336 
	}
}

340 
	$e
(
n
)

341 
n
;

343 
îr_num
 = 
î∫o
;

345 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d: ", 
subã°
, 
n
, 
î∫o
);

346 
î∫o
 = 
îr_num
;

347 
	`≥º‹
("");

348 i‡(
îr˘
++ > 
MAX_ERROR
) {

349 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

350 
	`chdú
("..");

351 
	`sy°em
("rm -rf DIR*");

352 
	`exô
(1);

354 
î∫o
 = 0;

355 
	}
}

358 
	$quô
()

360 
	`Chdú
("..");

361 
	`Sy°em
("rm -rf DIR_32");

363 i‡(
îr˘
 == 0) {

364 
	`¥ötf
("ok\n");

365 
	`exô
(0);

367 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

368 
	`exô
(1);

370 
	}
}

	@test33.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/°©.h
>

5 
	~<sys/waô.h
>

6 
	~<°dlib.h
>

7 
	~<uni°d.h
>

8 
	~<°rög.h
>

9 
	~<f˙é.h
>

10 
	~<limôs.h
>

11 
	~<î∫o.h
>

12 
	~<time.h
>

13 
	~<°dio.h
>

15 
	#MAX_ERROR
 1

	)

16 
	#ITERATIONS
 2

	)

18 
	#Sy°em
(
cmd
Ëi‡(
	`sy°em
(cmdË!0Ë
	`¥ötf
("``%s'' faûed\n", cmd)

	)

19 
	#Chdú
(
dú
Ëi‡(
	`chdú
(dúË!0Ë
	`¥ötf
("C™'àgŸÿ%s\n", dú)

	)

20 
	#Sèt
(
a
,
b
Ëi‡(
	`°©
◊,bË!0Ë
	`¥ötf
("C™'à°© %s\n",á)

	)

21 
	#Chmod
(
a
,
b
Ëi‡(
	`chmod
◊,bË!0Ë
	`¥ötf
("C™'àchmod %s\n",á)

	)

22 
	#Mkfifo
(
f
Ëi‡(
	`mkfifo
(f,0777)!=0Ë
	`¥ötf
("C™'àmakêfifÿ%s\n", f)

	)

24 
	gîr˘
 = 0;

25 
	gsubã°
 = 1;

26 
	gsu≥ru£r
;

27 
	gMaxName
[
NAME_MAX
 + 1];

28 
	gMaxP©h
[
PATH_MAX
];

29 
	gToL⁄gName
[
NAME_MAX
 + 2];

30 
	gToL⁄gP©h
[
PATH_MAX
 + 1];

32 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

33 
_PROTOTYPE
(
ã°33a
, ());

34 
_PROTOTYPE
(
ã°33b
, ());

35 
_PROTOTYPE
(
ã°33c
, ());

36 
_PROTOTYPE
(
ã°33d
, ());

37 
_PROTOTYPE
(
ã°_ac˚ss
, ());

38 
_PROTOTYPE
(
makñ⁄g«mes
, ());

39 
_PROTOTYPE
(
e
, (
numbî
));

40 
_PROTOTYPE
(
quô
, ());

42 
	$maö
(
¨gc
, 
¨gv
)

43 
¨gc
;

44 *
¨gv
[];

46 
i
, 
m
 = 0xFFFF;

48 
	`sync
();

49 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

50 
	`¥ötf
("Test 33 ");

51 
	`fÊush
(
°dout
);

53 i‡(
	`gëeuid
() != 0) {

54 
	`¥ötf
("must be setuidÑoot;Åestáborted\n");

55 
	`exô
(1);

57 i‡(
	`gëuid
() == 0) {

58 
	`¥ötf
("must be setuidÑootÜogged inás someoneÉlse;Åestáborted\n");

59 
	`exô
(1);

62 
	`umask
(0000);

63 
	`Sy°em
("rm -rf DIR_33; mkdir DIR_33");

64 
	`Chdú
("DIR_33");

65 
	`makñ⁄g«mes
();

66 
su≥ru£r
 = (
	`gëuid
() == 0);

68 
i
 = 0; i < 
ITERATIONS
; i++) {

69 i‡(
m
 & 0001Ë
	`ã°33a
();

70 i‡(
m
 & 0002Ë
	`ã°33b
();

71 i‡(
m
 & 0004Ë
	`ã°33c
();

72 i‡(
m
 & 0010Ë
	`ã°33d
();

74 
	`quô
();

75 
	}
}

77 
	$ã°33a
()

79 
°©_loc
;

81 
subã°
 = 1;

82 
	`Sy°em
("rm -rf ../DIR_33/*");

85 
	`f‹k
()) {

86 -1: 
	`¥ötf
("Can't fork\n"); ;

88 
	`Æ¨m
(20);

89 
	`£tuid
(
	`gëuid
());

91 
	`£tgid
(
	`gëgid
());

92 
	`Sy°em
(">Ñwx; chmod 700Ñwx");

93 
	`Sy°em
(">Ñw_; chmod 600Ñw_");

94 
	`Sy°em
(">Ñ_x; chmod 500Ñ_x");

95 
	`Sy°em
(">Ñ__; chmod 400Ñ__");

96 
	`Sy°em
("> _wx; chmod 300 _wx");

97 
	`Sy°em
("> _w_; chmod 200 _w_");

98 
	`Sy°em
("> __x; chmod 100 __x");

99 
	`Sy°em
("> ___; chmod 000 ___");

100 
	`exô
(0);

103 
	`waô
(&
°©_loc
);

104 i‡(
°©_loc
 !0Ë
	`e
(1);

106 
	`ã°_ac˚ss
();

109 
	`f‹k
()) {

110 -1: 
	`¥ötf
("Can't fork\n"); ;

112 
	`Æ¨m
(20);

113 
	`£tuid
(
	`gëuid
());

115 
	`£tgid
(
	`gëgid
());

116 
	`Sy°em
("rm -rf [_r][_w][_x]");

117 
	`Sy°em
("mkdirÑwx; chmod 700Ñwx");

118 
	`Sy°em
("mkdirÑw_; chmod 600Ñw_");

119 
	`Sy°em
("mkdirÑ_x; chmod 500Ñ_x");

120 
	`Sy°em
("mkdirÑ__; chmod 400Ñ__");

121 
	`Sy°em
("mkdir _wx; chmod 300 _wx");

122 
	`Sy°em
("mkdir _w_; chmod 200 _w_");

123 
	`Sy°em
("mkdir __x; chmod 100 __x");

124 
	`Sy°em
("mkdir ___; chmod 000 ___");

125 
	`exô
(0);

128 
	`waô
(&
°©_loc
);

129 i‡(
°©_loc
 !0Ë
	`e
(2);

131 
	`ã°_ac˚ss
();

133 
	`f‹k
()) {

134 -1: 
	`¥ötf
("Can't fork\n"); ;

136 
	`Æ¨m
(20);

137 
	`£tuid
(
	`gëuid
());

139 
	`£tgid
(
	`gëgid
());

140 
	`Sy°em
("rmdir [_r][_w][_x]");

141 
	`Mkfifo
("rwx");

142 
	`Sy°em
("chmod 700Ñwx");

143 
	`Mkfifo
("rw_");

144 
	`Sy°em
("chmod 600Ñw_");

145 
	`Mkfifo
("r_x");

146 
	`Sy°em
("chmod 500Ñ_x");

147 
	`Mkfifo
("r__");

148 
	`Sy°em
("chmod 400Ñ__");

149 
	`Mkfifo
("_wx");

150 
	`Sy°em
("chmod 300 _wx");

151 
	`Mkfifo
("_w_");

152 
	`Sy°em
("chmod 200 _w_");

153 
	`Mkfifo
("__x");

154 
	`Sy°em
("chmod 100 __x");

155 
	`Mkfifo
("___");

156 
	`Sy°em
("chmod 000 ___");

157 
	`exô
(0);

160 
	`waô
(&
°©_loc
);

161 i‡(
°©_loc
 !0Ë
	`e
(3);

163 
	`ã°_ac˚ss
();

166 
	`f‹k
()) {

167 -1: 
	`¥ötf
("Can't fork\n"); ;

169 
	`Æ¨m
(20);

170 
	`£tuid
(
	`gëuid
());

171 
	`£tgid
(
	`gëgid
());

172 
	`Sy°em
("rm -rf [_r][_w][_x]");

173 
	`exô
(0);

176 
	`waô
(&
°©_loc
);

177 i‡(
°©_loc
 !0Ë
	`e
(4);

179 
	}
}

183 
	$ã°33b
()

185 
°©_loc
;

187 
subã°
 = 2;

188 
	`Sy°em
("rm -rf ../DIR_33/*");

190 
	`f‹k
()) {

191 -1: 
	`¥ötf
("Can't fork\n"); ;

193 
	`Æ¨m
(20);

196 
	`£tuid
(
	`gëuid
());

197 
	`£tgid
(
	`gëgid
());

198 
	`Sy°em
("> ______rwx; chmod 007 ______rwx");

199 
	`Sy°em
("> ________x; chmod 001 ________x");

200 
	`Sy°em
("> _________; chmod 000 _________");

201 
	`exô
(0);

204 
	`waô
(&
°©_loc
);

205 i‡(
°©_loc
 !0Ë
	`e
(1);

210 i‡(
su≥ru£r
) {

211 i‡(
	`ac˚ss
("_________", 
R_OK
Ë!0Ë
	`e
(2);

212 i‡(
	`ac˚ss
("_________", 
W_OK
Ë!0Ë
	`e
(3);

213 i‡(
	`ac˚ss
("________x", 
R_OK
Ë!0Ë
	`e
(4);

214 i‡(
	`ac˚ss
("________x", 
W_OK
Ë!0Ë
	`e
(5);

215 i‡(
	`ac˚ss
("________x", 
X_OK
Ë!0Ë
	`e
(6);

216 i‡(
	`ac˚ss
("______rwx", 
R_OK
Ë!0Ë
	`e
(7);

217 i‡(
	`ac˚ss
("______rwx", 
W_OK
Ë!0Ë
	`e
(8);

218 i‡(
	`ac˚ss
("______rwx", 
X_OK
Ë!0Ë
	`e
(9);

220 i‡(!
su≥ru£r
) {

221 i‡(
	`ac˚ss
("_________", 
R_OK
Ë!-1Ë
	`e
(10);

222 i‡(
î∫o
 !
EACCES
Ë
	`e
(11);

223 i‡(
	`ac˚ss
("_________", 
W_OK
Ë!-1Ë
	`e
(12);

224 i‡(
î∫o
 !
EACCES
Ë
	`e
(13);

225 i‡(
	`ac˚ss
("_________", 
X_OK
Ë!-1Ë
	`e
(14);

226 i‡(
î∫o
 !
EACCES
Ë
	`e
(15);

227 i‡(
	`ac˚ss
("________x", 
R_OK
Ë!-1Ë
	`e
(16);

228 i‡(
î∫o
 !
EACCES
Ë
	`e
(17);

229 i‡(
	`ac˚ss
("________x", 
W_OK
Ë!-1Ë
	`e
(18);

230 i‡(
î∫o
 !
EACCES
Ë
	`e
(19);

231 i‡(
	`ac˚ss
("________x", 
X_OK
Ë!-1Ë
	`e
(20);

232 i‡(
î∫o
 !
EACCES
Ë
	`e
(21);

233 i‡(
	`ac˚ss
("______rwx", 
R_OK
Ë!-1Ë
	`e
(22);

234 i‡(
î∫o
 !
EACCES
Ë
	`e
(23);

235 i‡(
	`ac˚ss
("______rwx", 
W_OK
Ë!-1Ë
	`e
(24);

236 i‡(
î∫o
 !
EACCES
Ë
	`e
(25);

237 i‡(
	`ac˚ss
("______rwx", 
X_OK
Ë!-1Ë
	`e
(26);

238 i‡(
î∫o
 !
EACCES
Ë
	`e
(27);

242 i‡(!
su≥ru£r
) {

243 
	`Sy°em
("rm -rf [_r][_w][_x]");

244 
	`Sy°em
(">Ñwx");

245 
	`Chmod
("rwx", 0700);

246 
	`Sy°em
(">Ñw_");

247 
	`Chmod
("rw_", 0600);

248 
	`Sy°em
(">Ñ_x");

249 
	`Chmod
("r_x", 0500);

250 
	`Sy°em
(">Ñ__");

251 
	`Chmod
("r__", 0400);

252 
	`Sy°em
("> _wx");

253 
	`Chmod
("_wx", 0300);

254 
	`Sy°em
("> _w_");

255 
	`Chmod
("_w_", 0200);

256 
	`Sy°em
("> __x");

257 
	`Chmod
("__x", 0100);

258 
	`Sy°em
("> ___");

259 
	`Chmod
("___", 0000);

261 i‡(
	`ac˚ss
("rwx", 
F_OK
Ë!0Ë
	`e
(28);

262 i‡(
	`ac˚ss
("rwx", 
R_OK
Ë!-1Ë
	`e
(29);

263 i‡(
î∫o
 !
EACCES
Ë
	`e
(30);

264 i‡(
	`ac˚ss
("rwx", 
W_OK
Ë!-1Ë
	`e
(31);

265 i‡(
î∫o
 !
EACCES
Ë
	`e
(32);

266 i‡(
	`ac˚ss
("rwx", 
X_OK
Ë!-1Ë
	`e
(33);

267 i‡(
î∫o
 !
EACCES
Ë
	`e
(34);

269 i‡(
	`ac˚ss
("rw_", 
F_OK
Ë!0Ë
	`e
(35);

270 i‡(
	`ac˚ss
("rw_", 
R_OK
Ë!-1Ë
	`e
(36);

271 i‡(
î∫o
 !
EACCES
Ë
	`e
(37);

272 i‡(
	`ac˚ss
("rw_", 
W_OK
Ë!-1Ë
	`e
(38);

273 i‡(
î∫o
 !
EACCES
Ë
	`e
(39);

274 i‡(
	`ac˚ss
("rw_", 
X_OK
Ë!-1Ë
	`e
(40);

275 i‡(
î∫o
 !
EACCES
Ë
	`e
(41);

277 i‡(
	`ac˚ss
("r_x", 
F_OK
Ë!0Ë
	`e
(42);

278 i‡(
	`ac˚ss
("r_x", 
R_OK
Ë!-1Ë
	`e
(43);

279 i‡(
î∫o
 !
EACCES
Ë
	`e
(44);

280 i‡(
	`ac˚ss
("r_x", 
W_OK
Ë!-1Ë
	`e
(45);

281 i‡(
î∫o
 !
EACCES
Ë
	`e
(46);

282 i‡(
	`ac˚ss
("r_x", 
X_OK
Ë!-1Ë
	`e
(47);

283 i‡(
î∫o
 !
EACCES
Ë
	`e
(48);

285 i‡(
	`ac˚ss
("r__", 
F_OK
Ë!0Ë
	`e
(49);

286 i‡(
	`ac˚ss
("r__", 
R_OK
Ë!-1Ë
	`e
(50);

287 i‡(
î∫o
 !
EACCES
Ë
	`e
(51);

288 i‡(
	`ac˚ss
("r__", 
W_OK
Ë!-1Ë
	`e
(52);

289 i‡(
î∫o
 !
EACCES
Ë
	`e
(53);

290 i‡(
	`ac˚ss
("r__", 
X_OK
Ë!-1Ë
	`e
(54);

291 i‡(
î∫o
 !
EACCES
Ë
	`e
(55);

293 i‡(
	`ac˚ss
("_wx", 
F_OK
Ë!0Ë
	`e
(56);

294 i‡(
	`ac˚ss
("_wx", 
R_OK
Ë!-1Ë
	`e
(57);

295 i‡(
î∫o
 !
EACCES
Ë
	`e
(58);

296 i‡(
	`ac˚ss
("_wx", 
W_OK
Ë!-1Ë
	`e
(59);

297 i‡(
î∫o
 !
EACCES
Ë
	`e
(60);

298 i‡(
	`ac˚ss
("_wx", 
X_OK
Ë!-1Ë
	`e
(61);

299 i‡(
î∫o
 !
EACCES
Ë
	`e
(62);

301 i‡(
	`ac˚ss
("_w_", 
F_OK
Ë!0Ë
	`e
(63);

302 i‡(
	`ac˚ss
("_w_", 
R_OK
Ë!-1Ë
	`e
(64);

303 i‡(
î∫o
 !
EACCES
Ë
	`e
(65);

304 i‡(
	`ac˚ss
("_w_", 
W_OK
Ë!-1Ë
	`e
(66);

305 i‡(
î∫o
 !
EACCES
Ë
	`e
(67);

306 i‡(
	`ac˚ss
("_w_", 
X_OK
Ë!-1Ë
	`e
(68);

307 i‡(
î∫o
 !
EACCES
Ë
	`e
(69);

309 i‡(
	`ac˚ss
("__x", 
F_OK
Ë!0Ë
	`e
(70);

310 i‡(
	`ac˚ss
("__x", 
R_OK
Ë!-1Ë
	`e
(71);

311 i‡(
î∫o
 !
EACCES
Ë
	`e
(72);

312 i‡(
	`ac˚ss
("__x", 
W_OK
Ë!-1Ë
	`e
(73);

313 i‡(
î∫o
 !
EACCES
Ë
	`e
(74);

314 i‡(
	`ac˚ss
("__x", 
X_OK
Ë!-1Ë
	`e
(75);

315 i‡(
î∫o
 !
EACCES
Ë
	`e
(76);

317 i‡(
	`ac˚ss
("___", 
F_OK
Ë!0Ë
	`e
(77);

318 i‡(
	`ac˚ss
("___", 
R_OK
Ë!-1Ë
	`e
(78);

319 i‡(
î∫o
 !
EACCES
Ë
	`e
(79);

320 i‡(
	`ac˚ss
("___", 
W_OK
Ë!-1Ë
	`e
(80);

321 i‡(
î∫o
 !
EACCES
Ë
	`e
(81);

322 i‡(
	`ac˚ss
("___", 
X_OK
Ë!-1Ë
	`e
(82);

323 i‡(
î∫o
 !
EACCES
Ë
	`e
(83);

325 
	`Sy°em
("rm -rf [_r][_w][_x]");

327 
	}
}

329 
	$ã°33c
()

331 
i
;

333 
subã°
 = 3;

334 
	`Sy°em
("rm -rf ../DIR_33/*");

337 
	`Sy°em
("rm -rfÇonexist");

338 i‡(
	`ac˚ss
("n€xi°", 
F_OK
Ë!-1Ë
	`e
(1);

339 i‡(
î∫o
 !
ENOENT
Ë
	`e
(2);

340 i‡(
	`ac˚ss
("n€xi°", 
R_OK
Ë!-1Ë
	`e
(3);

341 i‡(
î∫o
 !
ENOENT
Ë
	`e
(4);

342 i‡(
	`ac˚ss
("n€xi°", 
W_OK
Ë!-1Ë
	`e
(5);

343 i‡(
î∫o
 !
ENOENT
Ë
	`e
(6);

344 i‡(
	`ac˚ss
("n€xi°", 
X_OK
Ë!-1Ë
	`e
(7);

345 i‡(
î∫o
 !
ENOENT
Ë
	`e
(8);

346 i‡(
	`ac˚ss
("n€xi°", 
R_OK
 | 
W_OK
Ë!-1Ë
	`e
(9);

347 i‡(
î∫o
 !
ENOENT
Ë
	`e
(10);

348 i‡(
	`ac˚ss
("n€xi°", 
R_OK
 | 
X_OK
Ë!-1Ë
	`e
(11);

349 i‡(
î∫o
 !
ENOENT
Ë
	`e
(12);

350 i‡(
	`ac˚ss
("n€xi°", 
W_OK
 | 
X_OK
Ë!-1Ë
	`e
(13);

351 i‡(
î∫o
 !
ENOENT
Ë
	`e
(14);

352 i‡(
	`ac˚ss
("n€xi°", 
R_OK
 | 
W_OK
 | 
X_OK
Ë!-1Ë
	`e
(15);

353 i‡(
î∫o
 !
ENOENT
Ë
	`e
(16);

356 i‡(
	`mkdú
("no£¨ch", 0777Ë!0Ë
	`e
(1000);

357 i‡–(
i
 = 
	`¸ót
("no£¨ch/fûe", 0666)Ë< 0Ë
	`e
(1001);

358 i‡(
	`˛o£
(
i
Ë< 0Ë
	`e
(1002);

359 i‡–(
i
 = 
	`¸ót
("fûe", 0666Ë< 0)Ë
	`e
(1003);

360 i‡(
	`˛o£
(
i
Ë< 0Ë
	`e
(1004);

361 i‡(
	`chmod
("no£¨ch/fûe", 05777Ë< 0Ë
	`e
(1005);

362 i‡(
	`chmod
("fûe", 05777Ë< 0Ë
	`e
(1006);

363 i‡(
	`chmod
("no£¨ch", 0677Ë!0Ë
	`e
(1007);

364 i‡(
	`ac˚ss
("no£¨ch/fûe", 
F_OK
Ë!0Ë
	`e
(17);

367 #ifde‡
_POSIX_NO_TRUNC


368 #i‡
_POSIX_NO_TRUNC
 - 0 != -1

369 i‡(
	`ac˚ss
(
ToL⁄gName
, 
F_OK
Ë!-1Ë
	`e
(23);

370 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(24);

372 i‡(
	`˛o£
(
	`¸ót
(
ToL⁄gName
, 0777)Ë!0Ë
	`e
(25);

373 i‡(
	`ac˚ss
(
ToL⁄gName
, 
F_OK
Ë!0Ë
	`e
(26);

376 
	~"îr‹,Åhi†ˇ£Ñequúe†dy«mi¯check†™d i†nŸ h™dÀd
"

378 
ToL⁄gP©h
[
PATH_MAX
 - 2] = '/';

379 
ToL⁄gP©h
[
PATH_MAX
 - 1] = 'a';

380 i‡(
	`ac˚ss
(
ToL⁄gP©h
, 
F_OK
Ë!-1Ë
	`e
(27);

381 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(28);

382 
ToL⁄gP©h
[
PATH_MAX
 - 1] = '/';

385 i‡(
	`ac˚ss
("", 
F_OK
Ë!-1Ë
	`e
(29);

386 i‡(
î∫o
 !
ENOENT
Ë
	`e
(30);

387 
	`Sy°em
("rm -rf idonotexist");

388 i‡(
	`ac˚ss
("id⁄Ÿexi°", 
F_OK
Ë!-1Ë
	`e
(31);

389 i‡(
î∫o
 !
ENOENT
Ë
	`e
(32);

392 i‡(
	`ac˚ss
("/ëc/∑sswd/dú/foo", 
F_OK
Ë!-1Ë
	`e
(33);

393 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(34);

394 
	`Sy°em
("rm -rfÇodir; >Çodir");

395 i‡(
	`ac˚ss
("nodú/foo", 
F_OK
Ë!-1Ë
	`e
(35);

396 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(36);

399 
	`Sy°em
(">állmod");

400 
	`Chmod
("allmod", 05777);

401 
i
 = -1025; i < 1025; i++) {

402 i‡((
mode_t
Ë
i
 !
F_OK
 && ((mode_tËò& ~(
R_OK
 | 
W_OK
 | 
X_OK
)) != 0) {

403 i‡(
	`ac˚ss
("Ælmod", (
mode_t
Ë
i
Ë!-1Ë
	`e
(37);

404 i‡(
î∫o
 !
EINVAL
Ë
	`e
(38);

406 i‡(
	`ac˚ss
("Ælmod", (
mode_t
Ë
i
Ë!0Ë
	`e
(39);

408 
	}
}

410 
	$ã°33d
()

412 
	#EXCLUDE
(
a
,
b
Ë((◊)^(b)Ë=(◊)|(b)))

	)

413 
subã°
 = 4;

414 
	`Sy°em
("rm -rf ../DIR_33/*");

419 i‡(!
	`EXCLUDE
(
R_OK
, 
W_OK
 | 
X_OK
)Ë
	`e
(1);

420 i‡(!
	`EXCLUDE
(
W_OK
, 
R_OK
 | 
X_OK
)Ë
	`e
(2);

421 i‡(!
	`EXCLUDE
(
X_OK
, 
R_OK
 | 
W_OK
)Ë
	`e
(3);

422 i‡(
F_OK
 =
R_OK
Ë
	`e
(4);

423 i‡(
F_OK
 =
W_OK
Ë
	`e
(5);

424 i‡(
F_OK
 =
X_OK
Ë
	`e
(6);

425 i‡(
F_OK
 =(
R_OK
 | 
W_OK
)Ë
	`e
(7);

426 i‡(
F_OK
 =(
W_OK
 | 
X_OK
)Ë
	`e
(8);

427 i‡(
F_OK
 =(
R_OK
 | 
X_OK
)Ë
	`e
(9);

428 i‡(
F_OK
 =(
R_OK
 | 
W_OK
 | 
X_OK
)Ë
	`e
(10);

429 
	}
}

431 
	$ã°_ac˚ss
()

433 i‡(!
su≥ru£r
) {

435 i‡(
	`ac˚ss
("rwx", 
F_OK
Ë!0Ë
	`e
(11);

436 i‡(
	`ac˚ss
("rwx", 
R_OK
Ë!0Ë
	`e
(12);

437 i‡(
	`ac˚ss
("rwx", 
W_OK
Ë!0Ë
	`e
(13);

438 i‡(
	`ac˚ss
("rwx", 
X_OK
Ë!0Ë
	`e
(14);

439 i‡(
	`ac˚ss
("rwx", 
R_OK
 | 
W_OK
Ë!0Ë
	`e
(15);

440 i‡(
	`ac˚ss
("rwx", 
R_OK
 | 
X_OK
Ë!0Ë
	`e
(16);

441 i‡(
	`ac˚ss
("rwx", 
W_OK
 | 
X_OK
Ë!0Ë
	`e
(17);

442 i‡(
	`ac˚ss
("rwx", 
R_OK
 | 
W_OK
 | 
X_OK
Ë!0Ë
	`e
(18);

444 i‡(
	`ac˚ss
("rw_", 
F_OK
Ë!0Ë
	`e
(19);

445 i‡(
	`ac˚ss
("rw_", 
R_OK
Ë!0Ë
	`e
(20);

446 i‡(
	`ac˚ss
("rw_", 
W_OK
Ë!0Ë
	`e
(21);

447 i‡(
	`ac˚ss
("rw_", 
X_OK
Ë!-1Ë
	`e
(22);

448 i‡(
î∫o
 !
EACCES
Ë
	`e
(23);

449 i‡(
	`ac˚ss
("rw_", 
R_OK
 | 
W_OK
Ë!0Ë
	`e
(24);

450 i‡(
	`ac˚ss
("rw_", 
R_OK
 | 
X_OK
Ë!-1Ë
	`e
(25);

451 i‡(
î∫o
 !
EACCES
Ë
	`e
(26);

452 i‡(
	`ac˚ss
("rw_", 
W_OK
 | 
X_OK
Ë!-1Ë
	`e
(27);

453 i‡(
î∫o
 !
EACCES
Ë
	`e
(28);

454 i‡(
	`ac˚ss
("rw_", 
R_OK
 | 
W_OK
 | 
X_OK
Ë!-1Ë
	`e
(29);

455 i‡(
î∫o
 !
EACCES
Ë
	`e
(30);

457 i‡(
	`ac˚ss
("r_x", 
F_OK
Ë!0Ë
	`e
(31);

458 i‡(
	`ac˚ss
("r_x", 
R_OK
Ë!0Ë
	`e
(32);

459 i‡(
	`ac˚ss
("r_x", 
W_OK
Ë!-1Ë
	`e
(33);

460 i‡(
î∫o
 !
EACCES
Ë
	`e
(34);

461 i‡(
	`ac˚ss
("r_x", 
X_OK
Ë!0Ë
	`e
(35);

462 i‡(
	`ac˚ss
("r_x", 
R_OK
 | 
W_OK
Ë!-1Ë
	`e
(36);

463 i‡(
î∫o
 !
EACCES
Ë
	`e
(37);

464 i‡(
	`ac˚ss
("r_x", 
R_OK
 | 
X_OK
Ë!0Ë
	`e
(38);

465 i‡(
	`ac˚ss
("r_x", 
W_OK
 | 
X_OK
Ë!-1Ë
	`e
(39);

466 i‡(
î∫o
 !
EACCES
Ë
	`e
(40);

467 i‡(
	`ac˚ss
("r_x", 
R_OK
 | 
W_OK
 | 
X_OK
Ë!-1Ë
	`e
(41);

468 i‡(
î∫o
 !
EACCES
Ë
	`e
(42);

470 i‡(
	`ac˚ss
("r__", 
F_OK
Ë!0Ë
	`e
(43);

471 i‡(
	`ac˚ss
("r__", 
R_OK
Ë!0Ë
	`e
(44);

472 i‡(
	`ac˚ss
("r__", 
W_OK
Ë!-1Ë
	`e
(45);

473 i‡(
î∫o
 !
EACCES
Ë
	`e
(46);

474 i‡(
	`ac˚ss
("r__", 
X_OK
Ë!-1Ë
	`e
(47);

475 i‡(
î∫o
 !
EACCES
Ë
	`e
(48);

476 i‡(
	`ac˚ss
("r__", 
R_OK
 | 
W_OK
Ë!-1Ë
	`e
(49);

477 i‡(
î∫o
 !
EACCES
Ë
	`e
(50);

478 i‡(
	`ac˚ss
("r__", 
R_OK
 | 
X_OK
Ë!-1Ë
	`e
(51);

479 i‡(
î∫o
 !
EACCES
Ë
	`e
(52);

480 i‡(
	`ac˚ss
("r__", 
W_OK
 | 
X_OK
Ë!-1Ë
	`e
(53);

481 i‡(
î∫o
 !
EACCES
Ë
	`e
(54);

482 i‡(
	`ac˚ss
("r__", 
R_OK
 | 
W_OK
 | 
X_OK
Ë!-1Ë
	`e
(55);

483 i‡(
î∫o
 !
EACCES
Ë
	`e
(56);

485 i‡(
	`ac˚ss
("_wx", 
F_OK
Ë!0Ë
	`e
(57);

486 i‡(
	`ac˚ss
("_wx", 
R_OK
Ë!-1Ë
	`e
(58);

487 i‡(
î∫o
 !
EACCES
Ë
	`e
(59);

488 i‡(
	`ac˚ss
("_wx", 
W_OK
Ë!0Ë
	`e
(60);

489 i‡(
	`ac˚ss
("_wx", 
X_OK
Ë!0Ë
	`e
(61);

490 i‡(
	`ac˚ss
("_wx", 
R_OK
 | 
W_OK
Ë!-1Ë
	`e
(62);

491 i‡(
î∫o
 !
EACCES
Ë
	`e
(63);

492 i‡(
	`ac˚ss
("_wx", 
R_OK
 | 
X_OK
Ë!-1Ë
	`e
(64);

493 i‡(
î∫o
 !
EACCES
Ë
	`e
(65);

494 i‡(
	`ac˚ss
("_wx", 
W_OK
 | 
X_OK
Ë!0Ë
	`e
(66);

495 i‡(
	`ac˚ss
("_wx", 
R_OK
 | 
W_OK
 | 
X_OK
Ë!-1Ë
	`e
(67);

496 i‡(
î∫o
 !
EACCES
Ë
	`e
(68);

498 i‡(
	`ac˚ss
("_w_", 
F_OK
Ë!0Ë
	`e
(69);

499 i‡(
	`ac˚ss
("_w_", 
R_OK
Ë!-1Ë
	`e
(70);

500 i‡(
î∫o
 !
EACCES
Ë
	`e
(71);

501 i‡(
	`ac˚ss
("_w_", 
W_OK
Ë!0Ë
	`e
(72);

502 i‡(
	`ac˚ss
("_w_", 
X_OK
Ë!-1Ë
	`e
(73);

503 i‡(
î∫o
 !
EACCES
Ë
	`e
(74);

504 i‡(
	`ac˚ss
("_w_", 
R_OK
 | 
W_OK
Ë!-1Ë
	`e
(75);

505 i‡(
î∫o
 !
EACCES
Ë
	`e
(76);

506 i‡(
	`ac˚ss
("_w_", 
R_OK
 | 
X_OK
Ë!-1Ë
	`e
(77);

507 i‡(
î∫o
 !
EACCES
Ë
	`e
(78);

508 i‡(
	`ac˚ss
("_w_", 
W_OK
 | 
X_OK
Ë!-1Ë
	`e
(79);

509 i‡(
î∫o
 !
EACCES
Ë
	`e
(80);

510 i‡(
	`ac˚ss
("_w_", 
R_OK
 | 
W_OK
 | 
X_OK
Ë!-1Ë
	`e
(81);

511 i‡(
î∫o
 !
EACCES
Ë
	`e
(82);

513 i‡(
	`ac˚ss
("__x", 
F_OK
Ë!0Ë
	`e
(83);

514 i‡(
	`ac˚ss
("__x", 
R_OK
Ë!-1Ë
	`e
(84);

515 i‡(
î∫o
 !
EACCES
Ë
	`e
(85);

516 i‡(
	`ac˚ss
("__x", 
W_OK
Ë!-1Ë
	`e
(86);

517 i‡(
î∫o
 !
EACCES
Ë
	`e
(87);

518 i‡(
	`ac˚ss
("__x", 
X_OK
Ë!0Ë
	`e
(88);

519 i‡(
	`ac˚ss
("__x", 
R_OK
 | 
W_OK
Ë!-1Ë
	`e
(89);

520 i‡(
î∫o
 !
EACCES
Ë
	`e
(90);

521 i‡(
	`ac˚ss
("__x", 
R_OK
 | 
X_OK
Ë!-1Ë
	`e
(91);

522 i‡(
î∫o
 !
EACCES
Ë
	`e
(92);

523 i‡(
	`ac˚ss
("__x", 
W_OK
 | 
X_OK
Ë!-1Ë
	`e
(93);

524 i‡(
î∫o
 !
EACCES
Ë
	`e
(94);

525 i‡(
	`ac˚ss
("__x", 
R_OK
 | 
W_OK
 | 
X_OK
Ë!-1Ë
	`e
(95);

526 i‡(
î∫o
 !
EACCES
Ë
	`e
(96);

528 i‡(
	`ac˚ss
("___", 
F_OK
Ë!0Ë
	`e
(97);

529 i‡(
	`ac˚ss
("___", 
R_OK
Ë!-1Ë
	`e
(98);

530 i‡(
î∫o
 !
EACCES
Ë
	`e
(99);

531 i‡(
	`ac˚ss
("___", 
W_OK
Ë!-1Ë
	`e
(100);

532 i‡(
î∫o
 !
EACCES
Ë
	`e
(101);

533 i‡(
	`ac˚ss
("___", 
X_OK
Ë!-1Ë
	`e
(102);

534 i‡(
î∫o
 !
EACCES
Ë
	`e
(103);

535 i‡(
	`ac˚ss
("___", 
R_OK
 | 
W_OK
Ë!-1Ë
	`e
(104);

536 i‡(
î∫o
 !
EACCES
Ë
	`e
(105);

537 i‡(
	`ac˚ss
("___", 
R_OK
 | 
X_OK
Ë!-1Ë
	`e
(106);

538 i‡(
î∫o
 !
EACCES
Ë
	`e
(107);

539 i‡(
	`ac˚ss
("___", 
W_OK
 | 
X_OK
Ë!-1Ë
	`e
(108);

540 i‡(
î∫o
 !
EACCES
Ë
	`e
(109);

541 i‡(
	`ac˚ss
("___", 
R_OK
 | 
W_OK
 | 
X_OK
Ë!-1Ë
	`e
(110);

542 i‡(
î∫o
 !
EACCES
Ë
	`e
(111);

544 i‡(
su≥ru£r
) {

546 i‡(
	`ac˚ss
("rwx", 
F_OK
Ë!0Ë
	`e
(112);

547 i‡(
	`ac˚ss
("rwx", 
R_OK
Ë!0Ë
	`e
(113);

548 i‡(
	`ac˚ss
("rwx", 
W_OK
Ë!0Ë
	`e
(114);

549 i‡(
	`ac˚ss
("rwx", 
X_OK
Ë!0Ë
	`e
(115);

550 i‡(
	`ac˚ss
("rwx", 
R_OK
 | 
W_OK
Ë!0Ë
	`e
(116);

551 i‡(
	`ac˚ss
("rwx", 
R_OK
 | 
X_OK
Ë!0Ë
	`e
(117);

552 i‡(
	`ac˚ss
("rwx", 
W_OK
 | 
X_OK
Ë!0Ë
	`e
(118);

553 i‡(
	`ac˚ss
("rwx", 
R_OK
 | 
W_OK
 | 
X_OK
Ë!0Ë
	`e
(119);

555 i‡(
	`ac˚ss
("rw_", 
F_OK
Ë!0Ë
	`e
(120);

556 i‡(
	`ac˚ss
("rw_", 
R_OK
Ë!0Ë
	`e
(121);

557 i‡(
	`ac˚ss
("rw_", 
W_OK
Ë!0Ë
	`e
(122);

558 i‡(
	`ac˚ss
("rw_", 
R_OK
 | 
W_OK
Ë!0Ë
	`e
(123);

560 i‡(
	`ac˚ss
("r_x", 
F_OK
Ë!0Ë
	`e
(124);

561 i‡(
	`ac˚ss
("r_x", 
R_OK
Ë!0Ë
	`e
(125);

562 i‡(
	`ac˚ss
("r_x", 
W_OK
Ë!0Ë
	`e
(126);

563 i‡(
	`ac˚ss
("r_x", 
X_OK
Ë!0Ë
	`e
(127);

564 i‡(
	`ac˚ss
("r_x", 
R_OK
 | 
W_OK
Ë!0Ë
	`e
(128);

565 i‡(
	`ac˚ss
("r_x", 
R_OK
 | 
X_OK
Ë!0Ë
	`e
(129);

566 i‡(
	`ac˚ss
("r_x", 
W_OK
 | 
X_OK
Ë!0Ë
	`e
(130);

567 i‡(
	`ac˚ss
("r_x", 
R_OK
 | 
W_OK
 | 
X_OK
Ë!0Ë
	`e
(131);

569 i‡(
	`ac˚ss
("r__", 
F_OK
Ë!0Ë
	`e
(132);

570 i‡(
	`ac˚ss
("r__", 
R_OK
Ë!0Ë
	`e
(133);

571 i‡(
	`ac˚ss
("r__", 
W_OK
Ë!0Ë
	`e
(134);

572 i‡(
	`ac˚ss
("r__", 
R_OK
 | 
W_OK
Ë!0Ë
	`e
(135);

574 i‡(
	`ac˚ss
("_wx", 
F_OK
Ë!0Ë
	`e
(136);

575 i‡(
	`ac˚ss
("_wx", 
R_OK
Ë!0Ë
	`e
(137);

576 i‡(
	`ac˚ss
("_wx", 
W_OK
Ë!0Ë
	`e
(138);

577 i‡(
	`ac˚ss
("_wx", 
X_OK
Ë!0Ë
	`e
(139);

578 i‡(
	`ac˚ss
("_wx", 
R_OK
 | 
W_OK
Ë!0Ë
	`e
(140);

579 i‡(
	`ac˚ss
("_wx", 
R_OK
 | 
X_OK
Ë!0Ë
	`e
(141);

580 i‡(
	`ac˚ss
("_wx", 
W_OK
 | 
X_OK
Ë!0Ë
	`e
(142);

581 i‡(
	`ac˚ss
("_wx", 
R_OK
 | 
W_OK
 | 
X_OK
Ë!0Ë
	`e
(143);

583 i‡(
	`ac˚ss
("_w_", 
F_OK
Ë!0Ë
	`e
(144);

584 i‡(
	`ac˚ss
("_w_", 
R_OK
Ë!0Ë
	`e
(145);

585 i‡(
	`ac˚ss
("_w_", 
W_OK
Ë!0Ë
	`e
(146);

586 i‡(
	`ac˚ss
("_w_", 
R_OK
 | 
W_OK
Ë!0Ë
	`e
(147);

588 i‡(
	`ac˚ss
("__x", 
F_OK
Ë!0Ë
	`e
(148);

589 i‡(
	`ac˚ss
("__x", 
R_OK
Ë!0Ë
	`e
(149);

590 i‡(
	`ac˚ss
("__x", 
W_OK
Ë!0Ë
	`e
(150);

591 i‡(
	`ac˚ss
("__x", 
X_OK
Ë!0Ë
	`e
(151);

592 i‡(
	`ac˚ss
("__x", 
R_OK
 | 
W_OK
Ë!0Ë
	`e
(152);

593 i‡(
	`ac˚ss
("__x", 
R_OK
 | 
X_OK
Ë!0Ë
	`e
(153);

594 i‡(
	`ac˚ss
("__x", 
W_OK
 | 
X_OK
Ë!0Ë
	`e
(154);

595 i‡(
	`ac˚ss
("__x", 
R_OK
 | 
W_OK
 | 
X_OK
Ë!0Ë
	`e
(155);

597 i‡(
	`ac˚ss
("___", 
F_OK
Ë!0Ë
	`e
(156);

598 i‡(
	`ac˚ss
("___", 
R_OK
Ë!0Ë
	`e
(157);

599 i‡(
	`ac˚ss
("___", 
W_OK
Ë!0Ë
	`e
(158);

600 i‡(
	`ac˚ss
("___", 
R_OK
 | 
W_OK
Ë!0Ë
	`e
(159);

602 
	}
}

605 
	$makñ⁄g«mes
()

607 
i
;

609 
	`mem£t
(
MaxName
, 'a', 
NAME_MAX
);

610 
MaxName
[
NAME_MAX
] = '\0';

611 
i
 = 0; i < 
PATH_MAX
 - 1; i++) {

612 
MaxP©h
[
i
++] = '.';

613 
MaxP©h
[
i
] = '/';

615 
MaxP©h
[
PATH_MAX
 - 1] = '\0';

617 
	`°r˝y
(
ToL⁄gName
, 
MaxName
);

618 
	`°r˝y
(
ToL⁄gP©h
, 
MaxP©h
);

620 
ToL⁄gName
[
NAME_MAX
] = 'a';

621 
ToL⁄gName
[
NAME_MAX
 + 1] = '\0';

622 
ToL⁄gP©h
[
PATH_MAX
 - 1] = '/';

623 
ToL⁄gP©h
[
PATH_MAX
] = '\0';

624 
	}
}

628 
	$e
(
n
)

629 
n
;

631 
îr_num
 = 
î∫o
;

633 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d: ", 
subã°
, 
n
, 
î∫o
);

634 
î∫o
 = 
îr_num
;

635 
	`≥º‹
("");

636 i‡(
îr˘
++ > 
MAX_ERROR
) {

637 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

638 
	`chdú
("..");

639 
	`sy°em
("rm -rf DIR*");

640 
	`exô
(1);

642 
î∫o
 = 0;

643 
	}
}

646 
	$quô
()

648 
	`Chdú
("..");

649 
	`Sy°em
("rm -rf DIR_33");

651 i‡(
îr˘
 == 0) {

652 
	`¥ötf
("ok\n");

653 
	`exô
(0);

655 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

656 
	`exô
(1);

658 
	}
}

	@test34.c

9 
	~<sys/ty≥s.h
>

10 
	~<sys/°©.h
>

11 
	~<sys/waô.h
>

12 
	~<°dlib.h
>

13 
	~<uni°d.h
>

14 
	~<°rög.h
>

15 
	~<f˙é.h
>

16 
	~<limôs.h
>

17 
	~<î∫o.h
>

18 
	~<˘y≥.h
>

19 
	~<time.h
>

20 
	~<°dio.h
>

22 
	#MAX_ERROR
 4

	)

23 
	#ITERATIONS
 4

	)

24 
	#N
 100

	)

26 
	#ALL_RWXB
 (
S_IRWXU
 | 
S_IRWXG
 | 
S_IRWXO
)

	)

27 
	#ALL_SETB
 (
S_ISUID
 | 
S_ISGID
)

	)

28 
	#ALL_BITS
 (
ALL_RWXB
 | 
ALL_SETB
)

	)

30 
	#Sy°em
(
cmd
Ëi‡(
	`sy°em
(cmdË!0Ë
	`¥ötf
("``%s'' faûed\n", cmd)

	)

31 
	#Chdú
(
dú
Ëi‡(
	`chdú
(dúË!0Ë
	`¥ötf
("C™'àgŸÿ%s\n", dú)

	)

32 
	#Sèt
(
a
,
b
Ëi‡(
	`°©
◊,bË!0Ë
	`¥ötf
("C™'à°© %s\n",á)

	)

33 
	#Mkfifo
(
f
Ëi‡(
	`mkfifo
(f,0777)!=0Ë
	`¥ötf
("C™'àmakêfifÿ%s\n", f)

	)

34 
	#Mkdú
(
f
Ëi‡(
	`mkdú
(f,0777)!=0Ë
	`¥ötf
("C™'àmakêdú %s\n", f)

	)

35 
	#Cª©
(
f
Ëi‡(
	`˛o£
(
	`¸ót
(f,0777))!=0Ë
	`¥ötf
("C™'à¸óà%s\n",f)

	)

38 
	#PASSWD_FILE
 "/ëc/∑sswd"

	)

40 
	gîr˘
 = 0;

41 
	gsubã°
 = 1;

42 
	gsu≥ru£r
;

43 
	gI_ˇn_chown
;

44 
	gMaxName
[
NAME_MAX
 + 1];

45 
	gMaxP©h
[
PATH_MAX
];

46 
	gNameTooL⁄g
[
NAME_MAX
 + 2];

47 
	gP©hTooL⁄g
[
PATH_MAX
 + 1];

49 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

50 
_PROTOTYPE
(
ã°34a
, ());

51 
_PROTOTYPE
(
ã°34b
, ());

52 
_PROTOTYPE
(
ã°34c
, ());

53 
_PROTOTYPE
(
mode_t
 
mode
, (*
fûe_«me
));

54 
_PROTOTYPE
(
makñ⁄g«mes
, ());

55 
_PROTOTYPE
(
e
, (
numbî
));

56 
_PROTOTYPE
(
quô
, ());

57 
_PROTOTYPE
(
gëids
, (
uid_t
 * 
uid
, 
gid_t
 * 
gid
));

59 
	$maö
(
¨gc
, 
¨gv
)

60 
¨gc
;

61 *
¨gv
[];

63 
i
, 
m
 = 0xFFFF;

65 
	`sync
();

66 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

67 
	`¥ötf
("Test 34 ");

68 
	`fÊush
(
°dout
);

69 (Ë
	`sy°em
("chmod 777 DIR_34/* > /dev/null 2> /dev/null");

70 
	`Sy°em
("rm -rf DIR_34; mkdir DIR_34");

71 i‡(
	`chdú
("DIR_34") != 0) {

72 
	`Ârötf
(
°dîr
, "Can't goÅo DIR_34\n");

73 
	`sy°em
("rm -rf DIR_34");

74 
	`exô
(1);

76 
	`makñ⁄g«mes
();

77 
su≥ru£r
 = (
	`gëeuid
(Ë=(
uid_t
) 0);

79 #ifde‡
_POSIX_CHOWN_RESTRICTED


80 
I_ˇn_chown
 = 
su≥ru£r
;

82 
I_ˇn_chown
 = 1;

85 
	`umask
(0000);

87 
i
 = 1; i < 
ITERATIONS
; i++) {

88 i‡(
m
 & 0001Ë
	`ã°34a
();

89 i‡(
m
 & 0002Ë
	`ã°34b
();

90 i‡(
m
 & 0004Ë
	`ã°34c
();

92 
	`quô
();

93 
	}
}

95 
	$ã°34a
()

97 
time_t
 
time1
, 
time2
;

98 
mode_t
 
mod
;

99 
°©
 
°1
, 
°2
;

100 
˙t
;

101 
uid_t
 
uid
, 
uid2
;

102 
gid_t
 
gid
, 
gid2
;

103 
°©_loc
;

105 
subã°
 = 1;

108 
	`Cª©
("foo");

110 
mod
 = 0; mod <
ALL_BITS
; mod++) {

111 i‡((
mod
 & 
ALL_BITS
) != mod)

113 
	`Sèt
("foo", &
°1
);

114 i‡(
	`time
(&
time1
Ë=(
time_t
Ë- 1Ë
	`e
(1);

115 i‡(
	`chmod
("foo", 
mod
Ë!0Ë
	`e
(2);

116 
	`Sèt
("foo", &
°2
);

117 i‡(
	`time
(&
time2
Ë=(
time_t
Ë- 1Ë
	`e
(3);

118 i‡(
su≥ru£r
)

119 i‡((
°2
.
°_mode
 & 
ALL_BITS
Ë!
mod
Ë
	`e
(4);

120 i‡(!
su≥ru£r
)

121 i‡((
°2
.
°_mode
 & 
ALL_RWXB
Ë!(
mod
 & ALL_RWXB)Ë
	`e
(5);

124 i‡(
°1
.
°_˘ime
 > 
°2
.°_˘imeË
	`e
(6);

125 i‡(
°1
.
°_˘ime
 > 
time1
Ë
	`e
(7);

126 i‡(
°1
.
°_˘ime
 > 
time2
Ë
	`e
(8);

127 #i‚de‡
V1_FILESYSTEM


128 i‡(
°2
.
°_˘ime
 < 
time1
Ë
	`e
(9);

130 i‡(
°2
.
°_˘ime
 > 
time2
Ë
	`e
(10);

131 i‡(
°1
.
°_©ime
 !
°2
.°_©imeË
	`e
(11);

132 i‡(
°1
.
°_mtime
 !
°2
.°_mtimeË
	`e
(12);

136 
˙t
 = 0; cnt < 20; cnt++) {

138 i‡(
	`chmod
("foo", 
ALL_BITS
Ë!0Ë
	`e
(13);

139 
	`Sèt
("foo", &
°1
);

140 i‡(
	`time
(&
time1
Ë=(
time_t
Ë-1Ë
	`e
(14);

142 i‡(
	`chown
("foo", 
	`gëeuid
(), 
	`gëegid
()Ë!0Ë
	`e
(15);

143 
	`Sèt
("foo", &
°2
);

144 i‡(
	`time
(&
time2
Ë=(
time_t
Ë-1Ë
	`e
(16);

147 i‡(!
su≥ru£r
) {

148 i‡((
°1
.
°_mode
 & 
ALL_RWXB
Ë!ALL_RWXBË
	`e
(17);

149 i‡((
°2
.
°_mode
 & 
ALL_BITS
Ë!
ALL_RWXB
Ë
	`e
(18);

151 i‡(
su≥ru£r
) {

152 i‡((
°1
.
°_mode
 & 
ALL_BITS
Ë!ALL_BITSË
	`e
(19);

153 i‡((
°1
.
°_mode
 & 
ALL_RWXB
Ë!ALL_RWXBË
	`e
(20);

157 i‡(
°1
.
°_˘ime
 > 
°2
.°_˘imeË
	`e
(21);

158 i‡(
°1
.
°_˘ime
 > 
time1
Ë
	`e
(22);

159 i‡(
°1
.
°_˘ime
 > 
time2
Ë
	`e
(23);

160 #i‚de‡
V1_FILESYSTEM


161 i‡(
°2
.
°_˘ime
 < 
time1
Ë
	`e
(24);

163 i‡(
°2
.
°_˘ime
 > 
time2
Ë
	`e
(25);

164 i‡(
°1
.
°_©ime
 !
°2
.°_©imeË
	`e
(26);

165 i‡(
°1
.
°_mtime
 !
°2
.°_mtimeË
	`e
(27);

169 i‡(
	`chmod
("foo", 
ALL_RWXB
Ë!0Ë
	`e
(28);

171 i‡(
I_ˇn_chown
) {

173 
˙t
 = 0; cnt < 20; cnt++) {

175 
	`gëids
(&
uid
, &
gid
);

176 
	`Sèt
("foo", &
°1
);

177 i‡(
	`time
(&
time1
Ë=(
time_t
Ë-1Ë
	`e
(29);

178 i‡(
	`chown
("foo", (
uid_t
Ë0, (
gid_t
Ë0Ë!0Ë
	`e
(30);

179 
	`Sèt
("foo", &
°2
);

180 i‡(
	`time
(&
time2
Ë=(
time_t
Ë-1Ë
	`e
(31);

183 i‡(
°1
.
°_˘ime
 > 
°2
.°_˘imeË
	`e
(32);

184 i‡(
°1
.
°_˘ime
 > 
time1
Ë
	`e
(33);

185 i‡(
°1
.
°_˘ime
 > 
time2
Ë
	`e
(34);

186 i‡(
°2
.
°_˘ime
 < 
time1
Ë
	`e
(35);

187 i‡(
°2
.
°_˘ime
 > 
time2
Ë
	`e
(36);

188 i‡(
°1
.
°_©ime
 !
°2
.°_©imeË
	`e
(37);

189 i‡(
°1
.
°_mtime
 !
°2
.°_mtimeË
	`e
(38);

192 i‡(
	`chown
("foo", (
uid_t
Ë0, 
gid
Ë!0Ë
	`e
(39);

193 i‡(
	`chown
("foo", 
uid
, (
gid_t
Ë0Ë!0Ë
	`e
(40);

194 i‡(
	`chown
("foo", 
uid
, 
gid
Ë!0Ë
	`e
(41);

197 i‡(
su≥ru£r
) {

200 
˙t
 = 0; cnt < 5; cnt++) {

201 
	`f‹k
()) {

203 
	`¥ötf
("Can't fork\n");

206 
	`Æ¨m
(20);

208 
	`gëids
(&
uid
, &
gid
);

209 i‡(
uid
 == 0) {

210 
	`gëids
(&
uid
, &
gid
);

211 i‡(
uid
 =0Ë
	`e
(42);

213 
	`gëids
(&
uid2
, &
gid2
);

214 i‡(
gid
 =
gid2
Ë
	`e
(43);

217 
	`Cª©
("boo");

218 i‡(
	`chown
("boo", 
uid
, 
gid
Ë!0Ë
	`e
(44);

219 i‡(
	`chmod
("boo", 
ALL_BITS
Ë!0Ë
	`e
(45);

220 
	`Cª©
("bar");

221 i‡(
	`chown
("b¨", 
uid
, 
gid
Ë!0Ë
	`e
(46);

222 i‡(
	`chmod
("b¨", 
ALL_BITS
Ë!0Ë
	`e
(47);

225 
	`£tgid
(
gid2
);

226 
	`£tuid
(
uid
);

228 
	`Sèt
("b¨", &
°1
);

229 i‡(
	`time
(&
time1
Ë=(
time_t
Ë-1Ë
	`e
(48);

230 i‡(
	`chown
("b¨", 
uid
, 
gid2
Ë!0Ë
	`e
(49);

231 
	`Sèt
("b¨", &
°2
);

232 i‡(
	`time
(&
time2
Ë=(
time_t
Ë-1Ë
	`e
(50);

235 i‡((
°1
.
°_mode
 & 
ALL_BITS
Ë!ALL_BITSË
	`e
(51);

236 i‡((
°2
.
°_mode
 & 
ALL_BITS
Ë!
ALL_RWXB
Ë
	`e
(52);

239 i‡(
°1
.
°_˘ime
 > 
°2
.°_˘imeË
	`e
(53);

240 i‡(
°1
.
°_˘ime
 > 
time1
Ë
	`e
(54);

241 i‡(
°1
.
°_˘ime
 > 
time2
Ë
	`e
(55);

242 i‡(
°2
.
°_˘ime
 < 
time1
Ë
	`e
(56);

243 i‡(
°2
.
°_˘ime
 > 
time2
Ë
	`e
(57);

244 i‡(
°1
.
°_©ime
 !
°2
.°_©imeË
	`e
(58);

245 i‡(
°1
.
°_mtime
 !
°2
.°_mtimeË
	`e
(59);

247 
	`Sèt
("boo", &
°1
);

248 i‡(
	`chmod
("boo", 
ALL_BITS
Ë!0Ë
	`e
(60);

249 
	`Sèt
("boo", &
°2
);

252 i‡((
°1
.
°_mode
 & 
ALL_RWXB
Ë!ALL_RWXBË
	`e
(61);

253 i‡((
°2
.
°_mode
 & 
S_ISGID
Ë!0Ë
	`e
(62);

255 i‡(
	`chown
("boo", 
uid
, 
gid2
Ë!0Ë
	`e
(63);

256 
	`Sèt
("boo", &
°1
);

259 i‡((
°1
.
°_mode
 & 
S_ISUID
Ë!0Ë
	`e
(64);

261 
	`exô
(0);

263 
	`waô
(&
°©_loc
);

264 i‡(
°©_loc
 !0Ë
	`e
(65);

268 i‡(
	`chmod
("foo", 
ALL_BITS
Ë!0Ë
	`e
(66);

269 
	`Sèt
("foo", &
°1
);

270 i‡(
	`chown
("foo", 
	`gëeuid
(), 
	`gëegid
()Ë!0Ë
	`e
(67);

271 
	`Sèt
("foo", &
°2
);

272 i‡((
°1
.
°_mode
 & 
ALL_BITS
Ë!ALL_BITSË
	`e
(68);

273 i‡(
su≥ru£r
)

274 i‡((
°2
.
°_mode
 & 
ALL_RWXB
Ë!ALL_RWXBË
	`e
(69);

275 i‡(!
su≥ru£r
)

276 i‡((
°2
.
°_mode
 & 
ALL_BITS
Ë!
ALL_RWXB
Ë
	`e
(70);

278 (Ë
	`sy°em
("chmod 777 ../DIR_34/* > /dev/null 2> /dev/null");

279 
	`Sy°em
("rm -rf ../DIR_34/*");

280 
	}
}

282 
	$ã°34b
()

284 
time_t
 
time1
, 
time2
;

285 
mode_t
 
mod
;

286 
°©
 
°1
, 
°2
;

288 
subã°
 = 2;

293 
	`Mkfifo
("fifo");

294 
	`Mkdú
("dir");

295 
	`Cª©
(
MaxName
);

296 
MaxP©h
[
	`°æí
(MaxPath) - 2] = '/';

297 
MaxP©h
[
	`°æí
(MaxPath) - 1] = 'a';

298 
	`Cª©
(
MaxP©h
);

300 
mod
 = 1; mod <
ALL_BITS
; mod <<= 1) {

301 i‡((
mod
 & 
ALL_BITS
) != mod) ;

302 
	`Sèt
("dú", &
°1
);

303 i‡(
	`time
(&
time1
Ë=(
time_t
Ë-1Ë
	`e
(1);

304 i‡(
	`chmod
("dú", 
mod
Ë!0Ë
	`e
(2);

305 
	`Sèt
("dú", &
°2
);

306 i‡(
	`time
(&
time2
Ë=(
time_t
Ë-1Ë
	`e
(3);

307 i‡(
su≥ru£r
)

308 i‡((
°2
.
°_mode
 & 
ALL_BITS
Ë!
mod
Ë
	`e
(4);

309 i‡(!
su≥ru£r
)

310 i‡((
°2
.
°_mode
 & 
ALL_RWXB
Ë!(
mod
 & ALL_RWXB)Ë
	`e
(5);

313 i‡(
°1
.
°_˘ime
 > 
°2
.°_˘imeË
	`e
(6);

314 i‡(
°1
.
°_˘ime
 > 
time1
Ë
	`e
(7);

315 i‡(
°1
.
°_˘ime
 > 
time2
Ë
	`e
(8);

316 #i‚de‡
V1_FILESYSTEM


317 i‡(
°2
.
°_˘ime
 < 
time1
Ë
	`e
(9);

319 i‡(
°2
.
°_˘ime
 > 
time2
Ë
	`e
(10);

320 i‡(
°1
.
°_©ime
 !
°2
.°_©imeË
	`e
(11);

321 i‡(
°1
.
°_mtime
 !
°2
.°_mtimeË
	`e
(12);

323 
	`Sèt
("fifo", &
°1
);

324 i‡(
	`time
(&
time1
Ë=(
time_t
Ë-1Ë
	`e
(13);

325 i‡(
	`chmod
("fifo", 
mod
Ë!0Ë
	`e
(14);

326 
	`Sèt
("fifo", &
°2
);

327 i‡(
	`time
(&
time2
Ë=(
time_t
Ë-1Ë
	`e
(15);

328 i‡(
su≥ru£r
)

329 i‡((
°2
.
°_mode
 & 
ALL_BITS
Ë!
mod
Ë
	`e
(16);

330 i‡(!
su≥ru£r
)

331 i‡((
°2
.
°_mode
 & 
ALL_RWXB
Ë!(
mod
 & ALL_RWXB)Ë
	`e
(17);

334 i‡(
°1
.
°_˘ime
 > 
°2
.°_˘imeË
	`e
(18);

335 i‡(
°1
.
°_˘ime
 > 
time1
Ë
	`e
(19);

336 i‡(
°1
.
°_˘ime
 > 
time2
Ë
	`e
(20);

337 #i‚de‡
V1_FILESYSTEM


338 i‡(
°2
.
°_˘ime
 < 
time1
Ë
	`e
(21);

340 i‡(
°2
.
°_˘ime
 > 
time2
Ë
	`e
(22);

341 i‡(
°1
.
°_©ime
 !
°2
.°_©imeË
	`e
(23);

342 i‡(
°1
.
°_mtime
 !
°2
.°_mtimeË
	`e
(24);

344 
	`Sèt
(
MaxName
, &
°1
);

345 i‡(
	`time
(&
time1
Ë=(
time_t
Ë-1Ë
	`e
(25);

346 i‡(
	`chmod
(
MaxName
, 
mod
Ë!0Ë
	`e
(26);

347 
	`Sèt
(
MaxName
, &
°2
);

348 i‡(
	`time
(&
time2
Ë=(
time_t
Ë-1Ë
	`e
(27);

349 i‡(
su≥ru£r
)

350 i‡((
°2
.
°_mode
 & 
ALL_BITS
Ë!
mod
Ë
	`e
(28);

351 i‡(!
su≥ru£r
)

352 i‡((
°2
.
°_mode
 & 
ALL_RWXB
Ë!(
mod
 & ALL_RWXB)Ë
	`e
(29);

355 i‡(
°1
.
°_˘ime
 > 
°2
.°_˘imeË
	`e
(30);

356 i‡(
°1
.
°_˘ime
 > 
time1
Ë
	`e
(31);

357 i‡(
°1
.
°_˘ime
 > 
time2
Ë
	`e
(32);

358 #i‚de‡
V1_FILESYSTEM


359 i‡(
°2
.
°_˘ime
 < 
time1
Ë
	`e
(33);

361 i‡(
°2
.
°_˘ime
 > 
time2
Ë
	`e
(34);

362 i‡(
°1
.
°_©ime
 !
°2
.°_©imeË
	`e
(35);

363 i‡(
°1
.
°_mtime
 !
°2
.°_mtimeË
	`e
(36);

365 
	`Sèt
(
MaxP©h
, &
°1
);

366 i‡(
	`time
(&
time1
Ë=(
time_t
Ë-1Ë
	`e
(37);

367 i‡(
	`chmod
(
MaxP©h
, 
mod
Ë!0Ë
	`e
(38);

368 
	`Sèt
(
MaxP©h
, &
°2
);

369 i‡(
	`time
(&
time2
Ë=(
time_t
Ë-1Ë
	`e
(39);

370 i‡(
su≥ru£r
)

371 i‡((
°2
.
°_mode
 & 
ALL_BITS
Ë!
mod
Ë
	`e
(40);

372 i‡(!
su≥ru£r
)

373 i‡((
°2
.
°_mode
 & 
ALL_RWXB
Ë!(
mod
 & ALL_RWXB)Ë
	`e
(41);

376 i‡(
°1
.
°_˘ime
 > 
°2
.°_˘imeË
	`e
(42);

377 i‡(
°1
.
°_˘ime
 > 
time1
Ë
	`e
(43);

378 i‡(
°1
.
°_˘ime
 > 
time2
Ë
	`e
(44);

379 #i‚de‡
V1_FILESYSTEM


380 i‡(
°2
.
°_˘ime
 < 
time1
Ë
	`e
(45);

382 i‡(
°2
.
°_˘ime
 > 
time2
Ë
	`e
(46);

383 i‡(
°1
.
°_©ime
 !
°2
.°_©imeË
	`e
(47);

384 i‡(
°1
.
°_mtime
 !
°2
.°_mtimeË
	`e
(48);

387 i‡(
	`chmod
("dú", 0777Ë!0Ë
	`e
(49);

388 i‡(
	`chmod
("fifo", 0777Ë!0Ë
	`e
(50);

389 i‡(
	`chmod
(
MaxName
, 0777Ë!0Ë
	`e
(51);

390 i‡(
	`chmod
(
MaxP©h
, 0777Ë!0Ë
	`e
(52);

392 (Ë
	`sy°em
("chmod 777 ../DIR_34/* > /dev/null 2> /dev/null");

393 
	`Sy°em
("rm -rf ../DIR_34/*");

394 
	}
}

396 
	$ã°34c
()

398 
°©
 
°
;

399 
uid_t
 
uid
, 
uid2
;

400 
gid_t
 
gid
, 
gid2
;

401 
°©_loc
;

403 
subã°
 = 3;

405 
	`Mkdú
("dir");

406 
	`Cª©
("dir/try_me");

411 i‡(
	`chmod
("dú", 
ALL_BITS
 & ~
S_IXUSR
Ë!0Ë
	`e
(1);

412 i‡(!
su≥ru£r
) {

413 i‡(
	`chmod
("dú/åy_me", 0Ë!-1Ë
	`e
(2);

414 i‡(
î∫o
 !
EACCES
Ë
	`e
(3);

415 i‡(
I_ˇn_chown
) {

416 i‡(
	`chown
("dú/åy_me", 
	`gëeuid
(), 
	`gëegid
()Ë!-1Ë
	`e
(4);

417 i‡(
î∫o
 !
EACCES
Ë
	`e
(5);

422 
	`Mkfifo
("fifo");

423 i‡(
	`chmod
("fifo/åy_me", 0Ë!-1Ë
	`e
(6);

424 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(7);

425 i‡(
	`chown
("fifo/åy_me", 
	`gëeuid
(), 
	`gëegid
()Ë!-1Ë
	`e
(8);

426 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(9);

428 
	`Cª©
("file");

429 i‡(
	`chmod
("fûe/åy_me", 0Ë!-1Ë
	`e
(10);

430 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(11);

431 i‡(
	`chown
("fûe/åy_me", 
	`gëeuid
(), 
	`gëegid
()Ë!-1Ë
	`e
(12);

432 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(13);

435 i‡(
	`chmod
("", 0Ë!-1Ë
	`e
(14);

436 i‡(
î∫o
 !
ENOENT
Ë
	`e
(15);

437 i‡(
	`chown
("", 
	`gëeuid
(), 
	`gëegid
()Ë!-1Ë
	`e
(16);

438 i‡(
î∫o
 !
ENOENT
Ë
	`e
(17);

441 i‡(
	`chmod
("n⁄_exi°", 0Ë!-1Ë
	`e
(18);

442 i‡(
î∫o
 !
ENOENT
Ë
	`e
(19);

443 i‡(
	`chown
("n⁄_exi°", 
	`gëeuid
(), 
	`gëegid
()Ë!-1Ë
	`e
(20);

444 i‡(
î∫o
 !
ENOENT
Ë
	`e
(21);

447 i‡(!
su≥ru£r
) {

448 
	`Sèt
("/", &
°
);

449 i‡(
°
.
°_uid
 =
	`gëeuid
()Ë
	`e
(22);

452 i‡(
	`chmod
("/", 
°
.
°_mode
Ë!-1Ë
	`e
(23);

453 i‡(
î∫o
 !
EPERM
Ë
	`e
(24);

455 i‡(!
I_ˇn_chown
) {

456 
	`Sèt
("/", &
°
);

457 i‡(
°
.
°_uid
 =
	`gëeuid
()Ë
	`e
(25);

458 i‡(
	`chown
("/", 
	`gëeuid
(), 
	`gëegid
()Ë!-1Ë
	`e
(26);

459 i‡(
î∫o
 !
EPERM
Ë
	`e
(27);

463 i‡(
su≥ru£r
) {

464 
	`f‹k
()) {

465 -1: 
	`¥ötf
("Can't fork\n"); ;

467 
	`Æ¨m
(20);

469 
	`gëids
(&
uid
, &
gid
);

470 i‡(
uid
 == 0) {

471 
	`gëids
(&
uid
, &
gid
);

472 i‡(
uid
 =0Ë
	`e
(28);

474 
	`gëids
(&
uid2
, &
gid2
);

475 i‡(
gid
 =
gid2
Ë
	`e
(29);

476 i‡(
uid
 =
uid2
Ë
	`e
(30);

479 
	`Cª©
("boo");

480 i‡(
	`chmod
("boo", 
ALL_BITS
Ë!0Ë
	`e
(31);

483 
	`Cª©
("bar");

484 i‡(
	`chown
("b¨", 
uid2
, 
gid2
Ë!0Ë
	`e
(32);

485 i‡(
	`chmod
("b¨", 
ALL_BITS
Ë!0Ë
	`e
(33);

488 
	`Cª©
("my_gid");

489 i‡(
	`chown
("my_gid", 
uid2
, 
gid
Ë!0Ë
	`e
(34);

490 i‡(
	`chmod
("my_gid", 
ALL_BITS
Ë!0Ë
	`e
(35);

493 
	`Cª©
("my_uid");

494 i‡(
	`chown
("my_uid", 
uid
, 
gid
Ë!0Ë
	`e
(36);

495 i‡(
	`chmod
("my_uid", 
ALL_BITS
Ë!0Ë
	`e
(37);

498 
	`£tgid
(
gid
);

499 
	`£tuid
(
uid
);

501 i‡(
	`chown
("boo", 
uid
, 
gid
Ë!-1Ë
	`e
(38);

502 i‡(
î∫o
 !
EPERM
Ë
	`e
(39);

503 i‡(
	`chown
("b¨", 
uid
, 
gid
Ë!-1Ë
	`e
(40);

504 i‡(
î∫o
 !
EPERM
Ë
	`e
(41);

505 i‡(
	`chown
("my_gid", 
uid
, 
gid
Ë!-1Ë
	`e
(42);

506 i‡(
î∫o
 !
EPERM
Ë
	`e
(43);

507 i‡(
	`chown
("my_uid", 
uid
, 
gid2
Ë!-1Ë
	`e
(44);

510 i‡(
î∫o
 !
EPERM
Ë
	`e
(45);

512 i‡(
	`chmod
("boo", 0Ë!-1Ë
	`e
(46);

513 i‡(
î∫o
 !
EPERM
Ë
	`e
(47);

514 i‡(
	`chmod
("b¨", 0Ë!-1Ë
	`e
(48);

515 i‡(
î∫o
 !
EPERM
Ë
	`e
(49);

516 i‡(
	`chmod
("my_gid", 0Ë!-1Ë
	`e
(50);

517 i‡(
î∫o
 !
EPERM
Ë
	`e
(51);

519 
	`exô
(0);

521 
	`waô
(&
°©_loc
);

522 i‡(
°©_loc
 !0Ë
	`e
(52);

527 
	`Cª©
(
NameTooL⁄g
);

528 i‡(
	`chmod
(
NameTooL⁄g
, 0777Ë!0Ë
	`e
(57);

529 i‡(
	`chown
(
NameTooL⁄g
, 
	`gëeuid
(), 
	`gëegid
()Ë!0Ë
	`e
(58);

532 
P©hTooL⁄g
[
	`°æí
(PathTooLong) - 2] = '/';

533 
P©hTooL⁄g
[
	`°æí
(PathTooLong) - 1] = 'a';

534 
	`Cª©
("a");

535 i‡(
	`chmod
(
P©hTooL⁄g
, 0777Ë!-1Ë
	`e
(59);

536 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(60);

537 i‡(
	`chown
(
P©hTooL⁄g
, 
	`gëeuid
(), 
	`gëegid
()Ë!-1Ë
	`e
(61);

538 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(62);

540 (Ë
	`sy°em
("chmod 777 ../DIR_34/* > /dev/null 2> /dev/null");

541 
	`Sy°em
("rm -rf ../DIR_34/*");

542 
	}
}

544 
	$makñ⁄g«mes
()

546 
i
;

548 
	`mem£t
(
MaxName
, 'a', 
NAME_MAX
);

549 
MaxName
[
NAME_MAX
] = '\0';

550 
i
 = 0; i < 
PATH_MAX
 - 1; i++) {

551 
MaxP©h
[
i
++] = '.';

552 
MaxP©h
[
i
] = '/';

554 
MaxP©h
[
PATH_MAX
 - 1] = '\0';

556 
	`°r˝y
(
NameTooL⁄g
, 
MaxName
);

557 
	`°r˝y
(
P©hTooL⁄g
, 
MaxP©h
);

559 
NameTooL⁄g
[
NAME_MAX
] = 'a';

560 
NameTooL⁄g
[
NAME_MAX
 + 1] = '\0';

561 
P©hTooL⁄g
[
PATH_MAX
 - 1] = '/';

562 
P©hTooL⁄g
[
PATH_MAX
] = '\0';

563 
	}
}

565 
	$e
(
n
)

566 
n
;

568 
îr_num
 = 
î∫o
;

570 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d: ", 
subã°
, 
n
, 
î∫o
);

571 
î∫o
 = 
îr_num
;

572 
	`≥º‹
("");

573 i‡(
îr˘
++ > 
MAX_ERROR
) {

574 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

575 
	`chdú
("..");

576 
	`sy°em
("rm -rf DIR*");

577 
	`sy°em
("rm -rf DIR_34");

578 
	`exô
(1);

580 
î∫o
 = 0;

581 
	}
}

583 
	$quô
()

585 
	`Chdú
("..");

586 (Ë
	`sy°em
("chmod 777 DIR_34/* > /dev/null 2> /dev/null");

587 
	`Sy°em
("rm -rf DIR_34");

589 i‡(
îr˘
 == 0) {

590 
	`¥ötf
("ok\n");

591 
	`exô
(0);

593 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

594 
	`exô
(1);

596 
	}
}

603 
	$gëids
(
r_uid
, 
r_gid
)

604 
uid_t
 * 
r_uid
;

605 
gid_t
 * 
r_gid
;

607 
löe
[
N
];

608 *
p
;

609 
uid_t
 
uid
;

610 
gid_t
 
gid
;

611 
FILE
 *
Â
;

612 
i
;

614 
uid_t
 
a_uid
[
N
];

615 
gid_t
 
a_gid
[
N
];

616 
nuid
 = 0, 
ngid
 = 0;

617 
cuid
 = 0, 
cgid
 = 0;

620 i‡(
nuid
 == 0) {

621 
a_uid
[
nuid
++] = 0;

622 
a_gid
[
ngid
++] = 0;

623 i‡((
Â
 = 
	`f›í
(
PASSWD_FILE
, "r")Ë=
NULL
) {

624 
	`¥ötf
("Can't open ");

625 
	`≥º‹
(
PASSWD_FILE
);

627 
Â
 !
NULL
 && 
	`fgës
(
löe
, (line), fp) != NULL) {

628 
p
 = 
	`°rchr
(
löe
, ':');

629 i‡(
p
 !
NULL
Ë∞
	`°rchr
(p + 1, ':');

630 i‡(
p
 !
NULL
) {

631 
p
++;

632 
uid
 = 0;

633 
	`isdigô
(*
p
)) {

634 
uid
 *= 10;

635 
uid
 +(
uid_t
Ë(*
p
 - '0');

636 
p
++;

638 i‡(*
p
 != ':') ;

639 
p
++;

640 
gid
 = 0;

641 
	`isdigô
(*
p
)) {

642 
gid
 *= 10;

643 
gid
 +(
gid_t
Ë(*
p
 - '0');

644 
p
++;

646 i‡(*
p
 != ':') ;

647 i‡(
nuid
 < 
N
) {

648 
i
 = 0; i < 
nuid
; i++)

649 i‡(
a_uid
[
i
] =
uid
) ;

650 i‡(
i
 =
nuid
Ë
a_uid
[nuid++] = 
uid
;

652 i‡(
ngid
 < 
N
) {

653 
i
 = 0; i < 
ngid
; i++)

654 i‡(
a_gid
[
i
] =
gid
) ;

655 i‡(
i
 =
ngid
Ë
a_gid
[ngid++] = 
gid
;

657 i‡(
nuid
 >
N
 && 
ngid
 >= N) ;

660 i‡(
Â
 !
NULL
Ë
	`f˛o£
(fp);

664 i‡(
cuid
 >
nuid
) cuid = 0;

665 i‡(
cgid
 >
ngid
) cgid = 0;

666 *
r_uid
 = 
a_uid
[
cuid
++];

667 *
r_gid
 = 
a_gid
[
cgid
++];

668 
	}
}

	@test35.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/°©.h
>

5 
	~<sys/waô.h
>

6 
	~<°dlib.h
>

7 
	~<uni°d.h
>

8 
	~<°rög.h
>

9 
	~<f˙é.h
>

10 
	~<limôs.h
>

11 
	~<utime.h
>

12 
	~<î∫o.h
>

13 
	~<time.h
>

14 
	~<˘y≥.h
>

15 
	~<°dio.h
>

17 
	#MAX_ERROR
 1

	)

18 
	#ITERATIONS
 10

	)

19 
	#N
 100

	)

21 
	#Sy°em
(
cmd
Ëi‡(
	`sy°em
(cmdË!0Ë
	`¥ötf
("``%s'' faûed\n", cmd)

	)

22 
	#Chdú
(
dú
Ëi‡(
	`chdú
(dúË!0Ë
	`¥ötf
("C™'àgŸÿ%s\n", dú)

	)

23 
	#Sèt
(
a
,
b
Ëi‡(
	`°©
◊,bË!0Ë
	`¥ötf
("C™'à°© %s\n",á)

	)

24 
	#Mkfifo
(
f
Ëi‡(
	`mkfifo
(f,0777)!=0Ë
	`¥ötf
("C™'àmakêfifÿ%s\n", f)

	)

25 
	#Mkdú
(
f
Ëi‡(
	`mkdú
(f,0777)!=0Ë
	`¥ötf
("C™'àmakêdú %s\n", f)

	)

26 
	#Cª©
(
f
Ëi‡(
	`˛o£
(
	`¸ót
(f,0777))!=0Ë
	`¥ötf
("C™'à¸óà%s\n",f)

	)

27 
	#Time
(
t
Ëi‡(
	`time
—Ë=(
time_t
)-1Ë
	`¥ötf
("Timêîr‹\n")

	)

28 
	#Chown
(
f
,
u
,
g
Ëi‡(
	`chown
(f,u,gË!0Ë
	`¥ötf
("C™'àchow¿%s\n", f)

	)

29 
	#Chmod
(
f
,
m
Ëi‡(
	`chmod
(f,mË!0Ë
	`¥ötf
("C™'àchmod %s\n", f)

	)

31 
	#PASSWD_FILE
 "/ëc/∑sswd"

	)

33 
	gîr˘
 = 0;

34 
	gsubã°
 = 1;

35 
	gI_ˇn_chown
;

36 
	gsu≥ru£r
;

37 
	gMaxName
[
NAME_MAX
 + 1];

38 
	gMaxP©h
[
PATH_MAX
];

39 
	gNameTooL⁄g
[
NAME_MAX
 + 2];

40 
	gP©hTooL⁄g
[
PATH_MAX
 + 1];

42 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

43 
_PROTOTYPE
(
ã°35a
, ());

44 
_PROTOTYPE
(
ã°35b
, ());

45 
_PROTOTYPE
(
ã°35c
, ());

46 
_PROTOTYPE
(
makñ⁄g«mes
, ());

47 
_PROTOTYPE
(
e
, (
numbî
));

48 
_PROTOTYPE
(
quô
, ());

49 
_PROTOTYPE
(
gëids
, (
uid_t
 * 
uid
, 
gid_t
 * 
gid
));

51 
	$maö
(
¨gc
, 
¨gv
)

52 
¨gc
;

53 *
¨gv
[];

55 
i
, 
m
 = 0xFFFF;

57 
	`sync
();

58 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

59 
	`¥ötf
("Test 35 ");

60 
	`fÊush
(
°dout
);

61 
	`Sy°em
("rm -rf DIR_35; mkdir DIR_35");

62 
	`Chdú
("DIR_35");

63 
	`makñ⁄g«mes
();

64 
su≥ru£r
 = (
	`gëeuid
() == 0);

66 #ifde‡
_POSIX_CHOWN_RESTRICTED


67 #i‡
_POSIX_CHOWN_RESTRICTED
 - 0 != -1

68 
I_ˇn_chown
 = 
su≥ru£r
;

70 
I_ˇn_chown
 = 1;

73 
	~"îr‹,Åhi†ˇ£Ñequúe†dy«mi¯check†™d i†nŸ h™dÀd
"

76 
i
 = 0; i < 
ITERATIONS
; i++) {

77 i‡(
m
 & 0001Ë
	`ã°35a
();

78 i‡(
m
 & 0002Ë
	`ã°35b
();

79 i‡(
m
 & 0004Ë
	`ã°35c
();

81 
	`quô
();

82 
	}
}

84 
	$ã°35a
()

86 
°©
 
°
;

87 
utimbuf
 
ub
;

88 
time_t
 
time1
, 
time2
;

89 
˙t
;

91 
subã°
 = 1;

94 
	`Cª©
("foo");

97 
	`Sèt
("foo", &
°
);

98 
ub
.
a˘ime
 = 
°
.
°_©ime
 - 2;

99 
ub
.
modtime
 = 
°
.
°_mtime
 - 2;

100 
	`Time
(&
time1
);

101 
	`utime
("foo", &
ub
);

102 
	`Time
(&
time2
);

103 
	`Sèt
("foo", &
°
);

104 i‡(
ub
.
a˘ime
 !
°
.
°_©ime
Ë
	`e
(1);

105 i‡(
ub
.
modtime
 !
°
.
°_mtime
Ë
	`e
(2);

108 #i‚de‡
V1_FILESYSTEM


109 i‡(
°
.
°_˘ime
 < 
time1
Ë
	`e
(3);

111 i‡(
°
.
°_˘ime
 > 
time2
Ë
	`e
(4);

114 
	`Sèt
("foo", &
°
);

115 
ub
.
a˘ime
 = 
°
.
°_©ime
 + 20;

116 
ub
.
modtime
 = 
°
.
°_mtime
 + 20;

117 
	`Time
(&
time1
);

118 
	`utime
("foo", &
ub
);

119 
	`Time
(&
time2
);

120 
	`Sèt
("foo", &
°
);

121 i‡(
ub
.
a˘ime
 !
°
.
°_©ime
Ë
	`e
(5);

122 i‡(
ub
.
modtime
 !
°
.
°_mtime
Ë
	`e
(6);

123 i‡(
°
.
°_˘ime
 < 
time1
Ë
	`e
(7);

124 #i‚de‡
V1_FILESYSTEM


125 i‡(
°
.
°_˘ime
 > 
time2
Ë
	`e
(8);

129 
˙t
 = 0;

131 
	`Time
(&
time1
);

132 
	`utime
("foo", (
utimbuf
 *Ë
NULL
);

133 
	`Time
(&
time2
);

134 } 
time1
 !
time2
 && 
˙t
++ < 100);

135 i‡(
time1
 =
time2
) {

136 
	`Sèt
("foo", &
°
);

137 
	`Time
(&
time2
);

138 i‡(
°
.
°_©ime
 !
time1
Ë
	`e
(9);

139 i‡(
°
.
°_mtime
 !
time1
Ë
	`e
(10);

141 
	`Sèt
("foo", &
°
);

142 i‡(
°
.
°_©ime
 > 
time2
Ë
	`e
(11);

143 i‡(
°
.
°_mtime
 > 
time2
Ë
	`e
(12);

144 
	`Time
(&
time2
);

145 i‡(
°
.
°_©ime
 < 
time1
Ë
	`e
(13);

146 i‡(
°
.
°_mtime
 < 
time1
Ë
	`e
(14);

148 i‡(
°
.
°_˘ime
 < 
time1
Ë
	`e
(15);

149 i‡(
°
.
°_˘ime
 > 
time2
Ë
	`e
(16);

151 
	`Sy°em
("rm -rf ../DIR_35/*");

152 
	}
}

154 
	$ã°35b
()

156 
subã°
 = 2;

159 
	`Cª©
(
MaxName
);

160 
MaxP©h
[
	`°æí
(MaxPath) - 2] = '/';

161 
MaxP©h
[
	`°æí
(MaxPath) - 1] = 'a';

162 
	`Cª©
(
MaxP©h
);

163 i‡(
	`utime
(
MaxName
, 
NULL
Ë!0Ë
	`e
(1);

164 i‡(
	`utime
(
MaxP©h
, 
NULL
Ë!0Ë
	`e
(2);

167 
	`Cª©
("foo");

168 i‡(
	`chmod
("foo", 0Ë!0Ë
	`e
(3);

169 i‡(
	`utime
("foo", 
NULL
Ë!0Ë
	`e
(4);

170 i‡(
	`chmod
("foo", 0777Ë!0Ë
	`e
(5);

171 i‡(
	`utime
("foo", 
NULL
Ë!0Ë
	`e
(6);

175 
	`Sy°em
("rm -rf ../DIR_35/*");

176 
	}
}

178 
	$ã°35c
()

180 
gid_t
 
gid
, 
gid2
;

181 
uid_t
 
uid
, 
uid2
;

182 
utimbuf
 
ub
;

183 
°©_loc
;

185 
subã°
 = 3;

188 
	`Mkdú
("bar");

189 
	`Cª©
("bar/tryme");

190 i‡(
su≥ru£r
) {

191 
	`Chmod
("bar", 0000);

192 i‡(
	`utime
("b¨/åyme", 
NULL
Ë!0Ë
	`e
(1);

194 i‡(!
su≥ru£r
) {

195 
	`Chmod
("bar", 0677);

196 i‡(
	`utime
("b¨/åyme", 
NULL
Ë!-1Ë
	`e
(2);

197 i‡(
î∫o
 !
EACCES
Ë
	`e
(3);

199 
	`Chmod
("bar", 0777);

201 i‡(
I_ˇn_chown
) {

202 
	`f‹k
()) {

203 -1: 
	`¥ötf
("Can't fork\n"); ;

205 
	`Æ¨m
(20);

208 i‡(
su≥ru£r
) {

209 
	`gëids
(&
uid
, &
gid
);

210 i‡(
uid
 =0Ë
	`gëids
(&uid, &
gid
);

211 i‡(
uid
 =0Ë
	`e
(4);

213 i‡(!
su≥ru£r
) {

214 
uid
 = 
	`gëeuid
();

215 
gid
 = 
	`gëegid
();

217 
	`gëids
(&
uid2
, &
gid
);

218 i‡(
uid
 =
uid2
Ë
	`gëids
(&uid2, &
gid2
);

219 i‡(
uid
 =
uid2
Ë
	`e
(5);

222 
	`Cª©
("rootfile");

223 
	`Chmod
("rootfile", 0600);

224 
	`Chown
("rootfile", 0, 0);

225 
	`Cª©
("user2file");

226 
	`Chmod
("user2file", 0020);

227 
	`Chown
("u£r2fûe", 
uid2
, 
gid
);

228 
	`Cª©
("user2private");

229 
	`Chmod
("user2private", 0600);

230 
	`Chown
("u£r2¥iv©e", 
uid2
, 
gid
);

232 i‡(
su≥ru£r
) {

233 
	`£tgid
(
gid
);

234 
	`£tuid
(
uid
);

238 
ub
.
a˘ime
 = (
time_t
) 12345L;

239 
ub
.
modtime
 = (
time_t
) 12345L;

241 i‡(
	`utime
("roŸfûe", 
NULL
Ë!-1Ë
	`e
(6);

242 i‡(
î∫o
 !
EACCES
Ë
	`e
(7);

243 i‡(
	`utime
("roŸfûe", &
ub
Ë!-1Ë
	`e
(8);

244 i‡(
î∫o
 !
EPERM
Ë
	`e
(9);

246 i‡(
	`utime
("u£r2fûe", 
NULL
Ë!0Ë
	`e
(10);

247 i‡(
	`utime
("u£r2fûe", &
ub
Ë!-1Ë
	`e
(11);

248 i‡(
î∫o
 !
EPERM
Ë
	`e
(12);

250 i‡(
	`utime
("u£r2¥iv©e", 
NULL
Ë!-1Ë
	`e
(13);

251 i‡(
î∫o
 !
EACCES
Ë
	`e
(14);

252 i‡(
	`utime
("u£r2¥iv©e", &
ub
Ë!-1Ë
	`e
(15);

253 i‡(
î∫o
 !
EPERM
Ë
	`e
(16);

255 
	`exô
(
îr˘
 ? 1 : 0);

257 
	`waô
(&
°©_loc
);

258 i‡(
°©_loc
 !0Ë
	`e
(17);

263 #ifde‡
_POSIX_NO_TRUNC


264 #i‡
_POSIX_NO_TRUNC
 - 0 != -1

266 i‡(
	`utime
(
NameTooL⁄g
, 
NULL
Ë!-1Ë
	`e
(18);

267 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(19);

269 
	`Cª©
(
NameTooL⁄g
);

270 i‡(
	`utime
(
NameTooL⁄g
, 
NULL
Ë!0Ë
	`e
(20);

273 
	~"îr‹,Åhi†ˇ£Ñequúe†dy«mi¯check†™d i†nŸ h™dÀd
"

277 
P©hTooL⁄g
[
	`°æí
(PathTooLong) - 2] = '/';

278 
P©hTooL⁄g
[
	`°æí
(PathTooLong) - 1] = 'a';

279 
	`Cª©
("a");

280 i‡(
	`utime
(
P©hTooL⁄g
, 
NULL
Ë!-1Ë
	`e
(21);

281 i‡(
î∫o
 !
ENAMETOOLONG
Ë
	`e
(22);

284 i‡(
	`utime
("n⁄exi°", 
NULL
Ë!-1Ë
	`e
(23);

285 i‡(
î∫o
 !
ENOENT
Ë
	`e
(24);

288 i‡(
	`utime
("", 
NULL
Ë!-1Ë
	`e
(25);

289 i‡(
î∫o
 !
ENOENT
Ë
	`e
(26);

291 
	`Sy°em
("rm -rf ../DIR_35/*");

292 
	}
}

296 
	$makñ⁄g«mes
()

298 
i
;

300 
	`mem£t
(
MaxName
, 'a', 
NAME_MAX
);

301 
MaxName
[
NAME_MAX
] = '\0';

302 
i
 = 0; i < 
PATH_MAX
 - 1; i++) {

303 
MaxP©h
[
i
++] = '.';

304 
MaxP©h
[
i
] = '/';

306 
MaxP©h
[
PATH_MAX
 - 1] = '\0';

308 
	`°r˝y
(
NameTooL⁄g
, 
MaxName
);

309 
	`°r˝y
(
P©hTooL⁄g
, 
MaxP©h
);

311 
NameTooL⁄g
[
NAME_MAX
] = 'a';

312 
NameTooL⁄g
[
NAME_MAX
 + 1] = '\0';

313 
P©hTooL⁄g
[
PATH_MAX
 - 1] = '/';

314 
P©hTooL⁄g
[
PATH_MAX
] = '\0';

315 
	}
}

319 
	$e
(
n
)

320 
n
;

322 
îr_num
 = 
î∫o
;

324 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d: ", 
subã°
, 
n
, 
î∫o
);

325 
î∫o
 = 
îr_num
;

326 
	`≥º‹
("");

327 i‡(
îr˘
++ > 
MAX_ERROR
) {

328 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

329 
	`chdú
("..");

330 
	`sy°em
("rm -rf DIR* > /dev/null 2>/dev/null");

331 
	`exô
(1);

333 
î∫o
 = 0;

334 
	}
}

337 
	$quô
()

339 
	`Chdú
("..");

340 
	`Sy°em
("rm -rf DIR_35");

342 i‡(
îr˘
 == 0) {

343 
	`¥ötf
("ok\n");

344 
	`exô
(0);

346 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

347 
	`exô
(1);

349 
	}
}

357 
	$gëids
(
r_uid
, 
r_gid
)

358 
uid_t
 *
r_uid
;

359 
gid_t
 *
r_gid
;

361 
löe
[
N
];

362 *
p
;

363 
uid_t
 
uid
;

364 
gid_t
 
gid
;

365 
FILE
 *
Â
;

366 
i
;

368 
uid_t
 
a_uid
[
N
];

369 
gid_t
 
a_gid
[
N
];

370 
nuid
 = 0, 
ngid
 = 0;

371 
cuid
 = 0, 
cgid
 = 0;

374 i‡(
nuid
 == 0) {

375 
a_uid
[
nuid
++] = 0;

376 
a_gid
[
ngid
++] = 0;

377 i‡((
Â
 = 
	`f›í
(
PASSWD_FILE
, "r")Ë=
NULL
) {

378 
	`¥ötf
("Can't open ");

379 
	`≥º‹
(
PASSWD_FILE
);

381 
Â
 !
NULL
 && 
	`fgës
(
löe
, (line), fp) != NULL) {

382 
p
 = 
	`°rchr
(
löe
, ':');

383 i‡(
p
 !
NULL
Ë∞
	`°rchr
(p + 1, ':');

384 i‡(
p
 !
NULL
) {

385 
p
++;

386 
uid
 = 0;

387 
	`isdigô
(*
p
)) {

388 
uid
 *= 10;

389 
uid
 +(
uid_t
Ë(*
p
 - '0');

390 
p
++;

392 i‡(*
p
 != ':') ;

393 
p
++;

394 
gid
 = 0;

395 
	`isdigô
(*
p
)) {

396 
gid
 *= 10;

397 
gid
 +(
gid_t
Ë(*
p
 - '0');

398 
p
++;

400 i‡(*
p
 != ':') ;

401 i‡(
nuid
 < 
N
) {

402 
i
 = 0; i < 
nuid
; i++)

403 i‡(
a_uid
[
i
] =
uid
) ;

404 i‡(
i
 =
nuid
Ë
a_uid
[nuid++] = 
uid
;

406 i‡(
ngid
 < 
N
) {

407 
i
 = 0; i < 
ngid
; i++)

408 i‡(
a_gid
[
i
] =
gid
) ;

409 i‡(
i
 =
ngid
Ë
a_gid
[ngid++] = 
gid
;

411 i‡(
nuid
 >
N
 && 
ngid
 >= N) ;

414 i‡(
Â
 !
NULL
Ë
	`f˛o£
(fp);

418 i‡(
cuid
 >
nuid
) cuid = 0;

419 i‡(
cgid
 >
ngid
) cgid = 0;

420 *
r_uid
 = 
a_uid
[
cuid
++];

421 *
r_gid
 = 
a_gid
[
cgid
++];

422 
	}
}

	@test36.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/°©.h
>

5 
	~<sys/waô.h
>

6 
	~<°dlib.h
>

7 
	~<uni°d.h
>

8 
	~<°rög.h
>

9 
	~<f˙é.h
>

10 
	~<limôs.h
>

11 
	~<î∫o.h
>

12 
	~<time.h
>

13 
	~<°dio.h
>

15 
	#MAX_ERROR
 4

	)

16 
	#ITERATIONS
 10

	)

18 
	#Sy°em
(
cmd
Ëi‡(
	`sy°em
(cmdË!0Ë
	`¥ötf
("``%s'' faûed\n", cmd)

	)

19 
	#Chdú
(
dú
Ëi‡(
	`chdú
(dúË!0Ë
	`¥ötf
("C™'àgŸÿ%s\n", dú)

	)

20 
	#Sèt
(
a
,
b
Ëi‡(
	`°©
◊,bË!0Ë
	`¥ötf
("C™'à°© %s\n",á)

	)

22 
	gîr˘
 = 0;

23 
	gsubã°
 = 1;

24 
	gsu≥ru£r
;

25 
	gMaxName
[
NAME_MAX
 + 1];

26 
	gMaxP©h
[
PATH_MAX
];

27 
	gToL⁄gName
[
NAME_MAX
 + 2];

28 
	gToL⁄gP©h
[
PATH_MAX
 + 1];

30 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

31 
_PROTOTYPE
(
ã°36a
, ());

32 
_PROTOTYPE
(
ã°36b
, ());

33 
_PROTOTYPE
(
ã°36c
, ());

34 
_PROTOTYPE
(
ã°36d
, ());

35 
_PROTOTYPE
(
makñ⁄g«mes
, ());

36 
_PROTOTYPE
(
e
, (
numbî
));

37 
_PROTOTYPE
(
quô
, ());

38 
_PROTOTYPE
(
nŸ_¥ovided_›ti⁄
, (
_›ti⁄
));

39 
_PROTOTYPE
(
¥ovided_›ti⁄
, (
_›ti⁄
, 
_möimum_vÆue
));

40 
_PROTOTYPE
(
v¨ütög_›ti⁄
, (
_›ti⁄
, 
_möimum_vÆue
));

43 *
	gã°dús
[] = {

50 
NULL


53 *
	gã°fûes
[] = {

62 
NULL


65 
	$maö
(
¨gc
, 
¨gv
)

66 
¨gc
;

67 *
¨gv
[];

69 
i
, 
m
 = 0xFFFF;

71 
	`sync
();

72 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

73 
	`¥ötf
("Test 36 ");

74 
	`fÊush
(
°dout
);

75 
	`Sy°em
("rm -rf DIR_36; mkdir DIR_36");

76 
	`Chdú
("DIR_36");

77 
	`makñ⁄g«mes
();

78 
su≥ru£r
 = (
	`gëeuid
() == 0);

80 
i
 = 0; i < 
ITERATIONS
; i++) {

81 i‡(
m
 & 0001Ë
	`ã°36a
();

82 i‡(
m
 & 0002Ë
	`ã°36b
();

83 i‡(
m
 & 0004Ë
	`ã°36c
();

84 i‡(
m
 & 0010Ë
	`ã°36d
();

86 
	`quô
();

87 
	}
}

89 
	$ã°36a
()

91 
subã°
 = 1;

92 
	`Sy°em
("rm -rf ../DIR_36/*");

94 #ifde‡
_POSIX_CHOWN_RESTRICTED


95 #i‡
_POSIX_CHOWN_RESTRICTED
 - 0 == -1

96 i‡(
	`nŸ_¥ovided_›ti⁄
(
_PC_CHOWN_RESTRICTED
Ë!0Ë
	`e
(1);

98 i‡(
	`¥ovided_›ti⁄
(
_PC_CHOWN_RESTRICTED
, 0Ë!0Ë
	`e
(2);

101 i‡(
	`v¨ütög_›ti⁄
(
_PC_CHOWN_RESTRICTED
, 0Ë!0Ë
	`e
(3);

104 #ifde‡
_POSIX_NO_TRUNC


105 #i‡
_POSIX_NO_TRUNC
 - 0 == -1

106 i‡(
	`nŸ_¥ovided_›ti⁄
(
_PC_NO_TRUNC
Ë!0Ë
	`e
(4);

108 i‡(
	`¥ovided_›ti⁄
(
_PC_NO_TRUNC
, 0Ë!0Ë
	`e
(5);

111 i‡(
	`v¨ütög_›ti⁄
(
_PC_NO_TRUNC
, 0Ë!0Ë
	`e
(6);

114 #ifde‡
_POSIX_VDISABLE


115 #i‡
_POSIX_VDISABLE
 - 0 == -1

116 i‡(
	`nŸ_¥ovided_›ti⁄
(
_PC_VDISABLE
Ë!0Ë
	`e
(7);

118 i‡(
	`¥ovided_›ti⁄
(
_PC_VDISABLE
, 0Ë!0Ë
	`e
(8);

121 i‡(
	`v¨ütög_›ti⁄
(
_PC_VDISABLE
, 0Ë!0Ë
	`e
(9);

124 
	}
}

126 
	$ã°36b
()

128 
subã°
 = 2;

129 
	`Sy°em
("rm -rf ../DIR_36/*");

130 
	}
}

132 
	$ã°36c
()

134 
subã°
 = 3;

135 
	`Sy°em
("rm -rf ../DIR_36/*");

136 
	}
}

138 
	$ã°36d
()

140 
subã°
 = 4;

141 
	`Sy°em
("rm -rf ../DIR_36/*");

142 
	}
}

145 
	$makñ⁄g«mes
()

147 
i
;

149 
	`mem£t
(
MaxName
, 'a', 
NAME_MAX
);

150 
MaxName
[
NAME_MAX
] = '\0';

151 
i
 = 0; i < 
PATH_MAX
 - 1; i++) {

152 
MaxP©h
[
i
++] = '.';

153 
MaxP©h
[
i
] = '/';

155 
MaxP©h
[
PATH_MAX
 - 1] = '\0';

157 
	`°r˝y
(
ToL⁄gName
, 
MaxName
);

158 
	`°r˝y
(
ToL⁄gP©h
, 
MaxP©h
);

160 
ToL⁄gName
[
NAME_MAX
] = 'a';

161 
ToL⁄gName
[
NAME_MAX
 + 1] = '\0';

162 
ToL⁄gP©h
[
PATH_MAX
 - 1] = '/';

163 
ToL⁄gP©h
[
PATH_MAX
] = '\0';

164 
	}
}

168 
	$e
(
n
)

169 
n
;

171 
îr_num
 = 
î∫o
;

173 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d: ", 
subã°
, 
n
, 
î∫o
);

174 
î∫o
 = 
îr_num
;

175 
	`≥º‹
("");

176 i‡(
îr˘
++ > 
MAX_ERROR
) {

177 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

178 
	`chdú
("..");

179 
	`sy°em
("rm -rf DIR*");

180 
	`exô
(1);

182 
î∫o
 = 0;

183 
	}
}

186 
	$quô
()

188 
	`Chdú
("..");

189 
	`Sy°em
("rm -rf DIR_36");

191 i‡(
îr˘
 == 0) {

192 
	`¥ötf
("ok\n");

193 
	`exô
(0);

195 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

196 
	`exô
(1);

198 
	}
}

200 
	$nŸ_¥ovided_›ti⁄
(
›ti⁄
)

201 
›ti⁄
;

203 **
p
;

205 
p
 = 
ã°fûes
; *∞!(*Ë
NULL
;Ö++) {

206 i‡(
	`∑thc⁄f
(*
p
, 
›ti⁄
Ë!-1Ë 
	`¥ötf
("*p == %s\n", *p), 1;

209 
	}
}

212 
	$¥ovided_›ti⁄
(
›ti⁄
, 
möimum
)

213 
›ti⁄
, 
möimum
;

215 **
p
;

218 i‡(
›ti⁄
 =
_PC_NO_TRUNC


219 || 
›ti⁄
 =
_PC_NAME_MAX


220 || 
›ti⁄
 =
_PC_PATH_MAX
)

221 
p
 = 
ã°dús
;

223 
p
 = 
ã°fûes
;

225 ; *
p
 !
NULL
;Ö++) {

226 i‡(
	`∑thc⁄f
(*
p
, 
›ti⁄
Ë< 
möimum
)

227  
	`¥ötf
("*∞=%s\n", *
p
), 1;

230 
	}
}

233 
	$v¨ütög_›ti⁄
(
›ti⁄
, 
möimum
)

234 
›ti⁄
, 
möimum
;

236 **
p
;

239 i‡(
›ti⁄
 =
_PC_NO_TRUNC


240 || 
›ti⁄
 =
_PC_NAME_MAX


241 || 
›ti⁄
 =
_PC_PATH_MAX
)

242 
p
 = 
ã°dús
;

244 
p
 = 
ã°fûes
;

246 ; *
p
 !
NULL
;Ö++) {

247 i‡(
	`∑thc⁄f
(*
p
, 
›ti⁄
Ë< 
möimum
)

248  
	`¥ötf
("*∞=%s\n", *
p
), 1;

251 
	}
}

	@test37.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/°©.h
>

5 
	~<sys/waô.h
>

6 
	~<°dlib.h
>

7 
	~<uni°d.h
>

8 
	~<°rög.h
>

9 
	~<f˙é.h
>

10 
	~<limôs.h
>

11 
	~<î∫o.h
>

12 
	~<time.h
>

13 
	~<°dio.h
>

15 
	#MAX_ERROR
 4

	)

16 
	#ITERATIONS
 60

	)

18 
	#F°©
(
a
,
b
Ëi‡(
	`f°©
◊,bË!0Ë
	`¥ötf
("C™'àf°© %d\n",á)

	)

19 
	#Time
(
t
Ëi‡(
	`time
—Ë=(
time_t
)-1Ë
	`¥ötf
("Timêîr‹\n")

	)

21 
	gîr˘
 = 0;

22 
	gsubã°
 = 1;

23 
	gMaxName
[
NAME_MAX
 + 1];

24 
	gMaxP©h
[
PATH_MAX
];

25 
	gToL⁄gName
[
NAME_MAX
 + 2];

26 
	gToL⁄gP©h
[
PATH_MAX
 + 1];

28 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

29 
_PROTOTYPE
(
ã°37a
, ());

30 
_PROTOTYPE
(
ã°37b
, ());

31 
_PROTOTYPE
(
e
, (
numbî
));

32 
_PROTOTYPE
(
quô
, ());

34 
	$maö
(
¨gc
, 
¨gv
)

35 
¨gc
;

36 *
¨gv
[];

38 
i
, 
m
 = 0xFFFF;

40 
	`sync
();

41 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

42 
	`¥ötf
("Test 37 ");

43 
	`fÊush
(
°dout
);

45 
i
 = 0; i < 
ITERATIONS
; i++) {

46 i‡(
m
 & 0001Ë
	`ã°37a
();

47 i‡(
m
 & 0002Ë
	`ã°37b
();

49 
	`quô
();

50 
	}
}

52 
	$ã°37a
()

54 
tube
[2], 
t1
[2], 
t2
[2], 
t3
[2];

55 
time_t
 
time1
, 
time2
;

56 
buf
[128];

57 
°©
 
°1
, 
°2
;

58 
°©_loc
, 
Êags
;

60 
subã°
 = 1;

63 i‡(
	`pùe
(
tube
Ë!0Ë
	`e
(1);

64 i‡(
tube
[0] !3 &&Åube[1] !3Ë
	`e
(2);

65 i‡(
tube
[1] !4 &&Åube[0] !4Ë
	`e
(3);

66 i‡(
tube
[1] =tube[0]Ë
	`e
(4);

67 i‡(
	`pùe
(
t1
Ë!0Ë
	`e
(5);

68 i‡(
t1
[0] !5 &&Å1[1] !5Ë
	`e
(6);

69 i‡(
t1
[1] !6 &&Å1[0] !6Ë
	`e
(7);

70 i‡(
t1
[1] =t1[0]Ë
	`e
(8);

71 i‡(
	`˛o£
(
t1
[0]Ë!0Ë
	`e
(9);

72 i‡(
	`˛o£
(
tube
[0]Ë!0Ë
	`e
(10);

73 i‡(
	`pùe
(
t2
Ë!0Ë
	`e
(11);

74 i‡(
t2
[0] !
tube
[0] &&Å2[1] !tube[0]Ë
	`e
(12);

75 i‡(
t2
[1] !
t1
[0] &&Å2[0] !t1[0]Ë
	`e
(13);

76 i‡(
t2
[1] =t2[0]Ë
	`e
(14);

77 i‡(
	`pùe
(
t3
Ë!0Ë
	`e
(15);

78 i‡(
t3
[0] !7 &&Å3[1] !7Ë
	`e
(16);

79 i‡(
t3
[1] !8 &&Å3[0] !8Ë
	`e
(17);

80 i‡(
t3
[1] =t3[0]Ë
	`e
(18);

81 i‡(
	`˛o£
(
tube
[1]Ë!0Ë
	`e
(19);

82 i‡(
	`˛o£
(
t1
[1]Ë!0Ë
	`e
(20);

83 i‡(
	`˛o£
(
t2
[0]Ë!0Ë
	`e
(21);

84 i‡(
	`˛o£
(
t2
[1]Ë!0Ë
	`e
(22);

85 i‡(
	`˛o£
(
t3
[0]Ë!0Ë
	`e
(23);

86 i‡(
	`˛o£
(
t3
[1]Ë!0Ë
	`e
(24);

89 
	`Time
(&
time1
);

90 i‡(
	`pùe
(
tube
Ë!0Ë
	`e
(25);

91 
	`F°©
(
tube
[0], &
°1
);

92 
	`F°©
(
tube
[1], &
°2
);

93 
	`Time
(&
time2
);

94 i‡(
°1
.
°_©ime
 < 
time1
Ë
	`e
(26);

95 i‡(
°1
.
°_˘ime
 < 
time1
Ë
	`e
(27);

96 i‡(
°1
.
°_mtime
 < 
time1
Ë
	`e
(28);

97 i‡(
°1
.
°_©ime
 > 
time2
Ë
	`e
(29);

98 i‡(
°1
.
°_˘ime
 > 
time2
Ë
	`e
(30);

99 i‡(
°1
.
°_mtime
 > 
time2
Ë
	`e
(31);

100 i‡(
°2
.
°_©ime
 < 
time1
Ë
	`e
(32);

101 i‡(
°2
.
°_˘ime
 < 
time1
Ë
	`e
(33);

102 i‡(
°2
.
°_mtime
 < 
time1
Ë
	`e
(34);

103 i‡(
°2
.
°_©ime
 > 
time2
Ë
	`e
(35);

104 i‡(
°2
.
°_˘ime
 > 
time2
Ë
	`e
(36);

105 i‡(
°2
.
°_mtime
 > 
time2
Ë
	`e
(37);

108 i‡((
Êags
 = 
	`f˙é
(
tube
[0], 
F_GETFD
)Ë!0Ë
	`e
(38);

109 i‡((
Êags
 & 
FD_CLOEXEC
Ë!0Ë
	`e
(39);

110 i‡((
Êags
 = 
	`f˙é
(
tube
[0], 
F_GETFL
)Ë!0Ë
	`e
(40);

111 i‡((
Êags
 & 
O_RDONLY
Ë!O_RDONLYË
	`e
(41);

112 i‡((
Êags
 & 
O_NONBLOCK
Ë!0Ë
	`e
(42);

113 i‡((
Êags
 & 
O_RDWR
Ë!0Ë
	`e
(43);

114 i‡((
Êags
 & 
O_WRONLY
Ë!0Ë
	`e
(44);

116 i‡((
Êags
 = 
	`f˙é
(
tube
[1], 
F_GETFD
)Ë!0Ë
	`e
(45);

117 i‡((
Êags
 & 
FD_CLOEXEC
Ë!0Ë
	`e
(46);

118 i‡((
Êags
 = 
	`f˙é
(
tube
[1], 
F_GETFL
)Ë=-1Ë
	`e
(47);

119 i‡((
Êags
 & 
O_WRONLY
Ë!O_WRONLYË
	`e
(48);

120 i‡((
Êags
 & 
O_NONBLOCK
Ë!0Ë
	`e
(49);

121 i‡((
Êags
 & 
O_RDWR
Ë!0Ë
	`e
(50);

122 i‡((
Êags
 & 
O_RDONLY
Ë!0Ë
	`e
(51);

125 
	`f‹k
()) {

126 -1: 
	`¥ötf
("Can't fork\n"); ;

128 
	`Æ¨m
(20);

129 i‡(
	`˛o£
(
tube
[0]Ë!0Ë
	`e
(52);

130 i‡(
	`wrôe
(
tube
[1], "Hñlo", 6Ë!6Ë
	`e
(53);

131 i‡(
	`˛o£
(
tube
[1]Ë!0Ë
	`e
(54);

132 
	`exô
(0);

134 i‡(
	`ªad
(
tube
[0], 
buf
, (buf)Ë!6Ë
	`e
(55);

135 i‡(
	`°∫cmp
(
buf
, "Hñlo", 6Ë!0Ë
	`e
(56);

136 
	`waô
(&
°©_loc
);

137 i‡(
°©_loc
 !0Ë
	`e
(57);

139 i‡(
	`˛o£
(
tube
[0]Ë!0Ë
	`e
(58);

140 i‡(
	`˛o£
(
tube
[1]Ë!0Ë
	`e
(59);

141 
	}
}

144 
	$ã°37b
()

146 
tube
[2], 
chûd2∑ª¡
[2], 
∑ª¡2chûd
[2];

147 
i
, 
nchûd
 = 0, 
n›í
 = 3, 
°©_loc
;

148 
fd
;

149 
f‹kÁûed
 = 0;

150 
c
;

152 
subã°
 = 2;

155 
n›í
 < 
OPEN_MAX
 - 2) {

156 i‡(
	`pùe
(
tube
) != 0) {

158 i‡(
î∫o
 !
ENFILE
Ë
	`e
(1);

159 
	`¶ìp
(2);

162 
n›í
 += 2;

165 i‡(
n›í
 < 
OPEN_MAX
 - 2) {

166 i‡(
	`pùe
(
tube
Ë!-1Ë
	`e
(2);

167 
î∫o
) {

168 
EMFILE
:

170 
ENFILE
:

171 
	`f‹k
()) {

173 
	`¥ötf
("Can't fork\n");

176 
	`Æ¨m
(20);

177 i‡(
	`›í
("/", 
O_RDONLY
Ë!-1Ë
	`e
(3);

178 i‡(
î∫o
 !
ENFILE
Ë
	`e
(4);

179 
	`exô
(0);

181 
	`waô
(&
°©_loc
);

182 i‡(
°©_loc
 !0Ë
	`e
(5);

186 
	`e
(6);

191 
i
 = 3; i < 
OPEN_MAX
; i++Ë(Ë
	`˛o£
(i);

194 i‡(
	`pùe
(
chûd2∑ª¡
Ë!0Ë
	`e
(7);

195 i‡(
	`pùe
(
∑ª¡2chûd
Ë!0Ë
	`e
(8);

196 !
f‹kÁûed
 && (
fd
 = 
	`›í
("/", 
O_RDONLY
)) != -1) {

197 
	`˛o£
(
fd
);

198 
	`f‹k
()) {

200 
f‹kÁûed
 = 1;

203 
	`Æ¨m
(60);

206 
	`pùe
(
tube
) != -1);

207 
	`›í
("/", 
O_RDONLY
) != -1);

210 i‡(
	`wrôe
(
chûd2∑ª¡
[1], "*", 1Ë!1Ë
	`e
(9);

213 i‡(
	`ªad
(
∑ª¡2chûd
[0], &
c
, 1Ë!1Ë
	`e
(10);

214 
	`exô
(0);

218 i‡(
	`ªad
(
chûd2∑ª¡
[0], &
c
, 1Ë!1Ë
	`e
(11);

219 
nchûd
++;

224 i‡(!
f‹kÁûed
) {

225 i‡(
	`pùe
(
tube
Ë!-1Ë
	`e
(12);

226 i‡(
î∫o
 !
ENFILE
Ë
	`e
(13);

230 
nchûd
-- > 0) {

231 i‡(
	`wrôe
(
∑ª¡2chûd
[1], "*", 1Ë!1Ë
	`e
(14);

232 
	`waô
(&
°©_loc
);

233 i‡(
°©_loc
 !0Ë
	`e
(15);

237 
i
 = 3; i < 
OPEN_MAX
; i++Ë(Ë
	`˛o£
(i);

238 
	}
}

241 
	$e
(
n
)

242 
n
;

244 
îr_num
 = 
î∫o
;

246 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d: ", 
subã°
, 
n
, 
î∫o
);

247 
î∫o
 = 
îr_num
;

248 
	`≥º‹
("");

249 i‡(
îr˘
++ > 
MAX_ERROR
) {

250 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

251 
	`chdú
("..");

252 
	`sy°em
("rm -rf DIR*");

253 
	`exô
(1);

255 
î∫o
 = 0;

256 
	}
}

259 
	$quô
()

261 i‡(
îr˘
 == 0) {

262 
	`¥ötf
("ok\n");

263 
	`exô
(0);

265 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

266 
	`exô
(1);

268 
	}
}

	@test38.c

15 
	~<sys/ty≥s.h
>

16 
	~<sys/°©.h
>

17 
	~<sys/waô.h
>

18 
	~<°dlib.h
>

19 
	~<uni°d.h
>

20 
	~<°rög.h
>

21 
	~<f˙é.h
>

22 
	~<limôs.h
>

23 
	~<î∫o.h
>

24 
	~<time.h
>

25 
	~<°dio.h
>

27 
	#MAX_ERROR
 4

	)

28 
	#ITERATIONS
 10

	)

30 
	#Sy°em
(
cmd
Ëi‡(
	`sy°em
(cmdË!0Ë
	`¥ötf
("``%s'' faûed\n", cmd)

	)

31 
	#Chdú
(
dú
Ëi‡(
	`chdú
(dúË!0Ë
	`¥ötf
("C™'àgŸÿ%s\n", dú)

	)

32 
	#Sèt
(
a
,
b
Ëi‡(
	`°©
◊,bË!0Ë
	`¥ötf
("C™'à°© %s\n",á)

	)

34 
	#IS_CLOEXEC
(
fd
Ë((
	`f˙é
(fd, 
F_GETFD
Ë& 
FD_CLOEXEC
Ë=FD_CLOEXEC)

	)

35 
	#SET_CLOEXEC
(
fd
Ë
	`f˙é
(fd, 
F_SETFD
, 
FD_CLOEXEC
)

	)

37 
	gîr˘
 = 0;

38 
	gsubã°
 = 1;

39 
	gsu≥ru£r
;

40 
	gMaxName
[
NAME_MAX
 + 1];

41 
	gMaxP©h
[
PATH_MAX
];

42 
	gToL⁄gName
[
NAME_MAX
 + 2];

43 
	gToL⁄gP©h
[
PATH_MAX
 + 1];

45 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

46 
_PROTOTYPE
(
ã°38a
, ());

47 
_PROTOTYPE
(
ã°38b
, ());

48 
_PROTOTYPE
(
ã°38c
, ());

49 
_PROTOTYPE
(
e
, (
numbî
));

50 
_PROTOTYPE
(
quô
, ());

52 
	$maö
(
¨gc
, 
¨gv
)

53 
¨gc
;

54 *
¨gv
[];

56 
i
, 
m
 = 0xFFFF;

58 
	`sync
();

59 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

60 
	`¥ötf
("Test 38 ");

61 
	`fÊush
(
°dout
);

62 
	`Sy°em
("rm -rf DIR_38; mkdir DIR_38");

63 
	`Chdú
("DIR_38");

64 
su≥ru£r
 = (
	`gëeuid
() == 0);

66 
i
 = 0; i < 
ITERATIONS
; i++) {

67 i‡(
m
 & 0001Ë
	`ã°38a
();

68 i‡(
m
 & 0002Ë
	`ã°38b
();

69 i‡(
m
 & 0004Ë
	`ã°38c
();

71 
	`quô
();

72 
	}
}

74 
	$ã°38a
()

76 
fd1
, 
fd2
, 
fd3
, 
fd4
, 
fd5
;

77 
Êock
 flock;

79 
subã°
 = 1;

82 i‡((
fd1
 = 
	`dup
(0)Ë!3Ë
	`e
(1);

83 i‡((
fd2
 = 
	`dup
(0)Ë!4Ë
	`e
(2);

84 i‡((
fd3
 = 
	`dup
(0)Ë!5Ë
	`e
(3);

85 i‡((
fd4
 = 
	`dup
(0)Ë!6Ë
	`e
(4);

86 i‡((
fd5
 = 
	`dup
(0)Ë!7Ë
	`e
(5);

87 i‡(
	`˛o£
(
fd2
Ë!0Ë
	`e
(6);

88 i‡(
	`˛o£
(
fd4
Ë!0Ë
	`e
(7);

89 i‡((
fd2
 = 
	`dup
(0)Ë!4Ë
	`e
(8);

90 i‡((
fd4
 = 
	`dup
(0)Ë!6Ë
	`e
(9);

91 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(10);

92 i‡(
	`˛o£
(
fd3
Ë!0Ë
	`e
(11);

93 i‡(
	`˛o£
(
fd5
Ë!0Ë
	`e
(12);

94 i‡((
fd1
 = 
	`dup
(0)Ë!3Ë
	`e
(13);

95 i‡((
fd3
 = 
	`dup
(0)Ë!5Ë
	`e
(14);

96 i‡((
fd5
 = 
	`dup
(0)Ë!7Ë
	`e
(15);

97 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(16);

98 i‡(
	`˛o£
(
fd2
Ë!0Ë
	`e
(17);

99 i‡(
	`˛o£
(
fd3
Ë!0Ë
	`e
(18);

100 i‡(
	`˛o£
(
fd4
Ë!0Ë
	`e
(19);

101 i‡(
	`˛o£
(
fd5
Ë!0Ë
	`e
(20);

104 i‡((
fd1
 = 
	`dup
(0)Ë!3Ë
	`e
(21);

105 i‡(
	`SET_CLOEXEC
(
fd1
Ë=-1Ë
	`e
(22);

106 i‡(!
	`IS_CLOEXEC
(
fd1
)Ë
	`e
(23);

107 i‡((
fd2
 = 
	`dup
(
fd1
)Ë!4Ë
	`e
(24);

108 i‡((
fd3
 = 
	`dup
(
fd2
)Ë!5Ë
	`e
(25);

109 i‡(
	`IS_CLOEXEC
(
fd2
)Ë
	`e
(26);

110 i‡(
	`IS_CLOEXEC
(
fd3
)Ë
	`e
(27);

111 i‡(
	`SET_CLOEXEC
(
fd2
Ë=-1Ë
	`e
(28);

112 i‡(!
	`IS_CLOEXEC
(
fd2
)Ë
	`e
(29);

113 i‡(
	`IS_CLOEXEC
(
fd3
)Ë
	`e
(30);

114 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(31);

115 i‡(
	`˛o£
(
fd2
Ë!0Ë
	`e
(32);

116 i‡(
	`˛o£
(
fd3
Ë!0Ë
	`e
(33);

119 
	`Sy°em
("echo 'Hallo' > file");

120 i‡((
fd1
 = 
	`›í
("fûe", 
O_RDWR
)Ë!3Ë
	`e
(34);

121 
Êock
.
l_whí˚
 = 
SEEK_SET
;

122 
Êock
.
l_°¨t
 = 0;

123 
Êock
.
l_Àn
 = 10;

124 
Êock
.
l_ty≥
 = 
F_WRLCK
;

125 i‡(
	`f˙é
(
fd1
, 
F_SETLK
, &
Êock
Ë=-1Ë
	`e
(35);

126 i‡(
	`f˙é
(
fd1
, 
F_SETLK
, &
Êock
Ë=-1Ë
	`e
(36);

127 i‡((
fd2
 = 
	`dup
(
fd1
)Ë!4Ë
	`e
(37);

128 i‡(
	`f˙é
(
fd1
, 
F_SETLK
, &
Êock
Ë=-1Ë
	`e
(38);

129 i‡(
	`f˙é
(
fd1
, 
F_GETLK
, &
Êock
Ë=-1Ë
	`e
(39);

131 i‡(
Êock
.
l_ty≥
 !
F_WRLCK
Ë
	`e
(40);

132 i‡(
Êock
.
l_pid
 !
	`gëpid
()Ë
	`e
(41);

134 
Êock
.
l_ty≥
 = 
F_WRLCK
;

135 i‡(
	`f˙é
(
fd2
, 
F_GETLK
, &
Êock
Ë=-1Ë
	`e
(42);

137 i‡(
Êock
.
l_ty≥
 !
F_WRLCK
Ë
	`e
(43);

138 i‡(
Êock
.
l_pid
 !
	`gëpid
()Ë
	`e
(44);

140 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(45);

141 i‡(
	`˛o£
(
fd2
Ë!0Ë
	`e
(46);

143 
	`Sy°em
("rm -rf ../DIR_38/*");

144 
	}
}

146 
	$ã°38b
()

148 
fd
;

149 
buf
[32];

151 
subã°
 = 2;

154 
	`Sy°em
("echo 'Hallo!' > file");

157 i‡((
fd
 = 
	`›í
("fûe", 
O_RDONLY
)Ë!3Ë
	`e
(1);

158 i‡(
	`ªad
(
fd
, 
buf
, 2Ë!2Ë
	`e
(2);

159 i‡(
	`°∫cmp
(
buf
, "Ha", 2Ë!0Ë
	`e
(3);

160 i‡(
	`dup2
(
fd
, fdË!fdË
	`e
(4);

161 i‡(
	`ªad
(
fd
, 
buf
, 2Ë!2Ë
	`e
(5);

162 i‡(
	`°∫cmp
(
buf
, "Œ", 2Ë!0Ë
	`e
(6);

163 i‡(
	`dup2
(
fd
, fdË!fdË
	`e
(7);

164 i‡(
	`ªad
(
fd
, 
buf
, 2Ë!2Ë
	`e
(8);

165 i‡(
	`°∫cmp
(
buf
, "o!", 2Ë!0Ë
	`e
(9);

166 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(10);

169 i‡((
fd
 = 
	`›í
("fûe", 
O_RDONLY
)Ë!3Ë
	`e
(11);

170 i‡(
	`ªad
(
fd
, 
buf
, 2Ë!2Ë
	`e
(12);

171 i‡(
	`°∫cmp
(
buf
, "Ha", 2Ë!0Ë
	`e
(13);

172 i‡(
	`dup2
(
OPEN_MAX
 + 3, 
fd
Ë!-1Ë
	`e
(14);

173 i‡(
î∫o
 !
EBADF
Ë
	`e
(15);

174 i‡(
	`ªad
(
fd
, 
buf
, 2Ë!2Ë
	`e
(16);

175 i‡(
	`°∫cmp
(
buf
, "Œ", 2Ë!0Ë
	`e
(17);

176 i‡(
	`dup2
(-4, 
fd
Ë!-1Ë
	`e
(18);

177 i‡(
î∫o
 !
EBADF
Ë
	`e
(19);

178 i‡(
	`ªad
(
fd
, 
buf
, 2Ë!2Ë
	`e
(20);

179 i‡(
	`°∫cmp
(
buf
, "o!", 2Ë!0Ë
	`e
(21);

180 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(22);

183 
	`Sy°em
("rm -rf ../DIR_38/*");

184 
	}
}

186 
	$ã°38c
()

188 
i
;

190 
subã°
 = 3;

193 
i
 = -
OPEN_MAX
; i < OPEN_MAX * 2; i++) {

196 i‡(
i
 >= 0 && i < 3) ;

199 i‡(
	`dup
(
i
Ë!-1Ë
	`e
(1);

200 i‡(
î∫o
 !
EBADF
Ë
	`e
(2);

203 i‡(
i
 =
OPEN_MAX
) {

204 i‡(
	`dup2
(0, 
i
Ë!-1Ë
	`e
(3);

205 i‡(
î∫o
 !
EINVAL
Ë
	`e
(4);

209 i‡(
i
 < 0 || i > 
OPEN_MAX
) {

210 i‡(
	`dup2
(0, 
i
Ë!-1Ë
	`e
(5);

211 i‡(
î∫o
 !
EBADF
Ë
	`e
(6);

215 
	`Sy°em
("rm -rf ../DIR_38/*");

216 
	}
}

220 
	$e
(
n
)

221 
n
;

223 
îr_num
 = 
î∫o
;

225 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d: ", 
subã°
, 
n
, 
î∫o
);

226 
î∫o
 = 
îr_num
;

227 
	`≥º‹
("");

228 i‡(
îr˘
++ > 
MAX_ERROR
) {

229 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

230 
	`chdú
("..");

231 
	`sy°em
("rm -rf DIR*");

232 
	`exô
(1);

234 
î∫o
 = 0;

235 
	}
}

238 
	$quô
()

240 
	`Chdú
("..");

241 
	`Sy°em
("rm -rf DIR_38");

243 i‡(
îr˘
 == 0) {

244 
	`¥ötf
("ok\n");

245 
	`exô
(0);

247 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

248 
	`exô
(1);

250 
	}
}

	@test39.c

11 
	~<sys/ty≥s.h
>

12 
	~<sys/°©.h
>

13 
	~<sys/waô.h
>

14 
	~<°dlib.h
>

15 
	~<uni°d.h
>

16 
	~<°rög.h
>

17 
	~<f˙é.h
>

18 
	~<limôs.h
>

19 
	~<î∫o.h
>

20 
	~<time.h
>

21 
	~<°dio.h
>

23 
	#MAX_ERROR
 4

	)

24 
	#ITERATIONS
 10

	)

26 
	#Sy°em
(
cmd
Ëi‡(
	`sy°em
(cmdË!0Ë
	`¥ötf
("``%s'' faûed\n", cmd)

	)

27 
	#Chdú
(
dú
Ëi‡(
	`chdú
(dúË!0Ë
	`¥ötf
("C™'àgŸÿ%s\n", dú)

	)

28 
	#Sèt
(
a
,
b
Ëi‡(
	`°©
◊,bË!0Ë
	`¥ötf
("C™'à°© %s\n",á)

	)

30 
	gîr˘
 = 0;

31 
	gsubã°
 = 1;

32 
	gsu≥ru£r
;

33 
	gMaxName
[
NAME_MAX
 + 1];

34 
	gMaxP©h
[
PATH_MAX
];

35 
	gToL⁄gName
[
NAME_MAX
 + 2];

36 
	gToL⁄gP©h
[
PATH_MAX
 + 1];

38 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

39 
_PROTOTYPE
(
ã°39a
, ());

40 
_PROTOTYPE
(
ã°39b
, ());

41 
_PROTOTYPE
(
ã°39c
, ());

42 
_PROTOTYPE
(
ã°39d
, ());

43 
_PROTOTYPE
(
do_check
, ());

44 
_PROTOTYPE
(
makñ⁄g«mes
, ());

45 
_PROTOTYPE
(
e
, (
numbî
));

46 
_PROTOTYPE
(
quô
, ());

48 
	gexecuèbÀ
[1024];

50 
	$maö
(
¨gc
, 
¨gv
)

51 
¨gc
;

52 *
¨gv
[];

54 
i
, 
m
 = 0xFFFF;

56 
	`sync
();

57 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

60 i‡(
	`°rcmp
(
¨gv
[0], "DO CHECK"Ë=0Ë
	`exô
(
	`do_check
());

63 
	`°r˝y
(
execuèbÀ
, "../");

64 
	`°rˇt
(
execuèbÀ
, 
¨gv
[0]);

66 
	`¥ötf
("Test 39 ");

67 
	`fÊush
(
°dout
);

68 
	`Sy°em
("rm -rf DIR_39; mkdir DIR_39");

69 
	`Chdú
("DIR_39");

70 
	`makñ⁄g«mes
();

71 
su≥ru£r
 = (
	`gëeuid
() == 0);

73 
i
 = 0; i < 
ITERATIONS
; i++) {

74 
	`ã°39a
();

75 
	`ã°39b
();

76 
	`ã°39c
();

77 
	`ã°39d
();

79 
	`quô
();

80 
	}
}

82 
	$ã°39a
()

84 
subã°
 = 1;

85 
	`Sy°em
("rm -rf ../DIR_39/*");

86 
	}
}

88 
	$ã°39b
()

90 
subã°
 = 2;

91 
	`Sy°em
("rm -rf ../DIR_39/*");

92 
	}
}

94 
	$ã°39c
()

96 
subã°
 = 3;

97 
	`Sy°em
("rm -rf ../DIR_39/*");

98 
	}
}

105 
	$ã°39d
()

107 
fd3
, 
fd4
, 
fd5
, 
fd6
, 
fd7
, 
fd8
;

108 
°©_loc
;

109 
do_check_ªtvÆ
;

110 *
¨gv
[2];

111 
Êock
 
Ê
;

113 
subã°
 = 4;

115 
¨gv
[0] = "DO CHECK";

116 
¨gv
[1] = (*Ë
NULL
;

118 
Ê
.
l_whí˚
 = 
SEEK_SET
;

119 
Ê
.
l_°¨t
 = 0;

120 
Ê
.
l_Àn
 = 10;

123 
	`Sy°em
("echo 'Great Balls Of Fire!' > file3");

124 
	`Sy°em
("echo 'Great Balls Of Fire!' > file4");

125 
	`Sy°em
("echo 'Great Balls Of Fire!' > file7");

126 
	`Sy°em
("echo 'Great Balls Of Fire!' > file8");

127 
	`Sy°em
("echo 'Great Balls Of Fire!' > file");

128 i‡((
fd3
 = 
	`›í
("fûe3", 
O_RDWR
)Ë!3Ë
	`e
(1);

129 i‡((
fd4
 = 
	`›í
("fûe4", 
O_RDWR
)Ë!4Ë
	`e
(2);

130 i‡((
fd5
 = 
	`›í
("fûe", 
O_RDWR
)Ë!5Ë
	`e
(3);

131 i‡((
fd6
 = 
	`›í
("fûe", 
O_RDWR
)Ë!6Ë
	`e
(4);

132 i‡((
fd7
 = 
	`›í
("fûe7", 
O_RDWR
)Ë!7Ë
	`e
(5);

133 i‡((
fd8
 = 
	`›í
("fûe8", 
O_RDWR
)Ë!8Ë
	`e
(6);

136 i‡(
	`f˙é
(
fd5
, 
F_SETFD
, 
FD_CLOEXEC
Ë=-1Ë
	`e
(7);

137 i‡(
	`f˙é
(
fd6
, 
F_SETFD
, 
FD_CLOEXEC
Ë=-1Ë
	`e
(8);

140 
Ê
.
l_ty≥
 = 
F_WRLCK
;

141 i‡(
	`f˙é
(
fd3
, 
F_SETLK
, &
Ê
Ë=-1Ë
	`e
(9);

144 
Ê
.
l_ty≥
 = 
F_RDLCK
;

145 i‡(
	`f˙é
(
fd7
, 
F_SETLK
, &
Ê
Ë=-1Ë
	`e
(10);

148 
	`f‹k
()) {

149 -1: 
	`¥ötf
("Can't fork\n"); ;

151 
	`Æ¨m
(20);

154 
Ê
.
l_ty≥
 = 
F_WRLCK
;

155 i‡(
	`f˙é
(
fd8
, 
F_SETLK
, &
Ê
Ë=-1Ë
	`e
(11);

158 
Ê
.
l_ty≥
 = 
F_WRLCK
;

159 i‡(
	`f˙é
(
fd3
, 
F_GETLK
, &
Ê
Ë=-1Ë
	`e
(12);

160 i‡(
Ê
.
l_ty≥
 !
F_WRLCK
Ë
	`e
(13);

161 i‡(
Ê
.
l_pid
 !
	`gëµid
()Ë
	`e
(14);

162 
Ê
.
l_ty≥
 = 
F_WRLCK
;

163 i‡(
	`f˙é
(
fd7
, 
F_GETLK
, &
Ê
Ë=-1Ë
	`e
(15);

164 i‡(
Ê
.
l_ty≥
 !
F_RDLCK
Ë
	`e
(16);

165 i‡(
Ê
.
l_pid
 !
	`gëµid
()Ë
	`e
(17);

168 i‡((
	`f˙é
(
fd3
, 
F_GETFD
Ë& 
FD_CLOEXEC
Ë!0Ë
	`e
(18);

169 i‡((
	`f˙é
(
fd4
, 
F_GETFD
Ë& 
FD_CLOEXEC
Ë!0Ë
	`e
(19);

170 i‡((
	`f˙é
(
fd5
, 
F_GETFD
Ë& 
FD_CLOEXEC
Ë!FD_CLOEXECË
	`e
(20);

171 i‡((
	`f˙é
(
fd6
, 
F_GETFD
Ë& 
FD_CLOEXEC
Ë!FD_CLOEXECË
	`e
(21);

172 i‡((
	`f˙é
(
fd7
, 
F_GETFD
Ë& 
FD_CLOEXEC
Ë!0Ë
	`e
(22);

173 i‡((
	`f˙é
(
fd8
, 
F_GETFD
Ë& 
FD_CLOEXEC
Ë!0Ë
	`e
(23);

175 
	`exe˛p
(
execuèbÀ
 + 3, "DO CHECK", (*Ë
NULL
);

176 
	`exe˛p
(
execuèbÀ
, "DO CHECK", (*Ë
NULL
);

177 
	`¥ötf
("C™'àexe¯%†‹ %s\n", 
execuèbÀ
 + 3,Éxecutable);

178 
	`exô
(0);

181 
	`waô
(&
°©_loc
);

182 i‡(
	`WIFSIGNALED
(
°©_loc
)Ë
	`e
(24);

183 i‡(
	`WIFEXITED
(
°©_loc
) == 0) {

184 
îr˘
=10000;

185 
	`quô
();

190 
do_check_ªtvÆ
 = 
	`WEXITSTATUS
(
°©_loc
);

191 i‡((
do_check_ªtvÆ
 & 0x11Ë=0x11Ë
	`e
(25);

192 i‡((
do_check_ªtvÆ
 & 0x12Ë=0x12Ë
	`e
(26);

193 i‡((
do_check_ªtvÆ
 & 0x14Ë=0x14Ë
	`e
(27);

194 i‡((
do_check_ªtvÆ
 & 0x18Ë=0x18Ë
	`e
(28);

195 i‡((
do_check_ªtvÆ
 & 0x21Ë=0x21Ë
	`e
(29);

196 i‡((
do_check_ªtvÆ
 & 0x22Ë=0x22Ë
	`e
(30);

197 i‡((
do_check_ªtvÆ
 & 0x24Ë=0x24Ë
	`e
(31);

198 i‡((
do_check_ªtvÆ
 & 0x28Ë=0x28Ë
	`e
(32);

199 i‡((
do_check_ªtvÆ
 & 0x41Ë=0x41Ë
	`e
(33);

200 i‡((
do_check_ªtvÆ
 & 0x42Ë=0x42Ë
	`e
(34);

201 i‡((
do_check_ªtvÆ
 & 0x44Ë=0x44Ë
	`e
(35);

202 i‡((
do_check_ªtvÆ
 & 0x48Ë=0x48Ë
	`e
(36);

203 i‡((
do_check_ªtvÆ
 & 0x81Ë=0x81Ë
	`e
(37);

204 i‡((
do_check_ªtvÆ
 & 0x82Ë=0x82Ë
	`e
(38);

205 i‡((
do_check_ªtvÆ
 & 0x84Ë=0x84Ë
	`e
(39);

206 i‡((
do_check_ªtvÆ
 & 0x88Ë=0x88Ë
	`e
(40);

208 
	`f‹k
()) {

209 -1: 
	`¥ötf
("Can't fork\n"); ;

211 
	`Æ¨m
(20);

214 
Ê
.
l_ty≥
 = 
F_WRLCK
;

215 i‡(
	`f˙é
(
fd8
, 
F_SETLK
, &
Ê
Ë=-1Ë
	`e
(41);

217 
	`execvp
(
execuèbÀ
 + 3, 
¨gv
);

218 
	`execvp
(
execuèbÀ
, 
¨gv
);

219 
	`¥ötf
("C™'àexe¯%†‹ %s\n", 
execuèbÀ
 + 3,Éxecutable);

220 
	`exô
(0);

223 
	`waô
(&
°©_loc
);

224 i‡(
	`WIFSIGNALED
(
°©_loc
)Ë
	`e
(48);

228 
do_check_ªtvÆ
 = 
	`WEXITSTATUS
(
°©_loc
);

229 i‡((
do_check_ªtvÆ
 & 0x11Ë=0x11Ë
	`e
(49);

230 i‡((
do_check_ªtvÆ
 & 0x12Ë=0x12Ë
	`e
(50);

231 i‡((
do_check_ªtvÆ
 & 0x14Ë=0x14Ë
	`e
(51);

232 i‡((
do_check_ªtvÆ
 & 0x18Ë=0x18Ë
	`e
(52);

233 i‡((
do_check_ªtvÆ
 & 0x21Ë=0x21Ë
	`e
(53);

234 i‡((
do_check_ªtvÆ
 & 0x22Ë=0x22Ë
	`e
(54);

235 i‡((
do_check_ªtvÆ
 & 0x24Ë=0x24Ë
	`e
(55);

236 i‡((
do_check_ªtvÆ
 & 0x28Ë=0x28Ë
	`e
(56);

237 i‡((
do_check_ªtvÆ
 & 0x41Ë=0x41Ë
	`e
(57);

238 i‡((
do_check_ªtvÆ
 & 0x42Ë=0x42Ë
	`e
(58);

239 i‡((
do_check_ªtvÆ
 & 0x44Ë=0x44Ë
	`e
(59);

240 i‡((
do_check_ªtvÆ
 & 0x48Ë=0x48Ë
	`e
(60);

241 i‡((
do_check_ªtvÆ
 & 0x81Ë=0x81Ë
	`e
(61);

242 i‡((
do_check_ªtvÆ
 & 0x82Ë=0x82Ë
	`e
(62);

243 i‡((
do_check_ªtvÆ
 & 0x84Ë=0x84Ë
	`e
(63);

244 i‡((
do_check_ªtvÆ
 & 0x88Ë=0x88Ë
	`e
(64);

246 
Ê
.
l_ty≥
 = 
F_UNLCK
;

247 i‡(
	`f˙é
(
fd3
, 
F_SETLK
, &
Ê
Ë=-1Ë
	`e
(65);

248 i‡(
	`f˙é
(
fd7
, 
F_SETLK
, &
Ê
Ë=-1Ë
	`e
(66);

250 i‡(
	`˛o£
(
fd3
Ë!0Ë
	`e
(67);

251 i‡(
	`˛o£
(
fd4
Ë!0Ë
	`e
(68);

252 i‡(
	`˛o£
(
fd5
Ë!0Ë
	`e
(69);

253 i‡(
	`˛o£
(
fd6
Ë!0Ë
	`e
(70);

254 i‡(
	`˛o£
(
fd7
Ë!0Ë
	`e
(71);

255 i‡(
	`˛o£
(
fd8
Ë!0Ë
	`e
(72);

257 
	`Sy°em
("rm -f ../DIR_39/*\n");

258 
	}
}

266 
	$do_check
()

268 
i
;

269 
ªtvÆ
 = 0;

270 
Êock
 
Ê
;

272 
Ê
.
l_whí˚
 = 
SEEK_SET
;

273 
Ê
.
l_°¨t
 = 0;

274 
Ê
.
l_Àn
 = 10;

277 i‡(
	`f˙é
(0, 
F_GETFD
Ë=-1Ë
ªtvÆ
 |= 0x11;

278 i‡(
	`f˙é
(1, 
F_GETFD
Ë=-1Ë
ªtvÆ
 |= 0x11;

279 i‡(
	`f˙é
(2, 
F_GETFD
Ë=-1Ë
ªtvÆ
 |= 0x11;

282 i‡(
	`f˙é
(3, 
F_GETFD
Ë=-1Ë
ªtvÆ
 |= 0x12;

283 i‡(
	`f˙é
(4, 
F_GETFD
Ë=-1Ë
ªtvÆ
 |= 0x12;

284 i‡(
	`f˙é
(7, 
F_GETFD
Ë=-1Ë
ªtvÆ
 |= 0x12;

287 i‡(
	`f˙é
(5, 
F_GETFD
Ë!-1Ë
ªtvÆ
 |= 0x14;

288 i‡(
	`f˙é
(6, 
F_GETFD
Ë!-1Ë
ªtvÆ
 |= 0x14;

289 
i
 = 9; i < 
OPEN_MAX
; i++)

290 i‡(
	`f˙é
(
i
, 
F_GETFD
Ë!-1Ë
ªtvÆ
 |= 0x18;

294 
Ê
.
l_ty≥
 = 
F_WRLCK
;

295 i‡(
	`f˙é
(3, 
F_SETLK
, &
Ê
Ë!-1Ë
ªtvÆ
 |= 0x21;

296 i‡(
î∫o
 !
EACCES
 &&Éºnÿ!
EAGAIN
Ë
ªtvÆ
 |= 0x22;

297 
Ê
.
l_ty≥
 = 
F_RDLCK
;

298 i‡(
	`f˙é
(3, 
F_SETLK
, &
Ê
Ë!-1Ë
ªtvÆ
 |= 0x24;

299 i‡(
î∫o
 !
EACCES
 &&Éºnÿ!
EAGAIN
Ë
ªtvÆ
 |= 0x22;

300 
Ê
.
l_ty≥
 = 
F_RDLCK
;

301 i‡(
	`f˙é
(3, 
F_GETLK
, &
Ê
Ë=-1Ë
ªtvÆ
 |= 0x28;

302 i‡(
Ê
.
l_ty≥
 !
F_WRLCK
Ë
ªtvÆ
 |= 0x28;

303 i‡(
Ê
.
l_pid
 !
	`gëpid
()Ë
ªtvÆ
 |= 0x28;

304 
Ê
.
l_ty≥
 = 
F_WRLCK
;

305 i‡(
	`f˙é
(3, 
F_GETLK
, &
Ê
Ë=-1Ë
ªtvÆ
 |= 0x28;

306 i‡(
Ê
.
l_ty≥
 !
F_WRLCK
Ë
ªtvÆ
 |= 0x28;

307 i‡(
Ê
.
l_pid
 !
	`gëpid
()Ë
ªtvÆ
 |= 0x28;

311 
Ê
.
l_ty≥
 = 
F_WRLCK
;

312 i‡(
	`f˙é
(4, 
F_SETLK
, &
Ê
Ë=-1Ë
ªtvÆ
 |= 0x41;

313 i‡(
	`f˙é
(4, 
F_GETLK
, &
Ê
Ë=-1Ë
ªtvÆ
 |= 0x42;

315 i‡(
Ê
.
l_ty≥
 !
F_WRLCK
Ë
ªtvÆ
 |= 0x42;

316 i‡(
Ê
.
l_pid
 !
	`gëpid
()Ë
ªtvÆ
 |= 0x42;

320 
Ê
.
l_ty≥
 = 
F_WRLCK
;

321 i‡(
	`f˙é
(8, 
F_SETLK
, &
Ê
Ë=-1Ë
ªtvÆ
 |= 0x44;

322 i‡(
	`f˙é
(8, 
F_GETLK
, &
Ê
Ë=-1Ë
ªtvÆ
 |= 0x48;

324 i‡(
Ê
.
l_ty≥
 !
F_WRLCK
Ë
ªtvÆ
 |= 0x48;

325 i‡(
Ê
.
l_pid
 !
	`gëpid
()Ë
ªtvÆ
 |= 0x48;

330 
Ê
.
l_ty≥
 = 
F_WRLCK
;

331 i‡(
	`f˙é
(7, 
F_SETLK
, &
Ê
Ë!-1Ë
ªtvÆ
 |= 0x81;

332 i‡(
î∫o
 !
EACCES
 &&Éºnÿ!
EAGAIN
Ë
ªtvÆ
 |= 0x82;

333 
Ê
.
l_ty≥
 = 
F_RDLCK
;

334 i‡(
	`f˙é
(7, 
F_SETLK
, &
Ê
Ë=-1Ë
ªtvÆ
 |= 0x84;

335 
Ê
.
l_ty≥
 = 
F_RDLCK
;

336 i‡(
	`f˙é
(7, 
F_GETLK
, &
Ê
Ë=-1Ë
ªtvÆ
 |= 0x88;

337 i‡(
Ê
.
l_ty≥
 !
F_UNLCK
Ë
ªtvÆ
 |= 0x88;

338 
Ê
.
l_ty≥
 = 
F_WRLCK
;

339 i‡(
	`f˙é
(7, 
F_GETLK
, &
Ê
Ë=-1Ë
ªtvÆ
 |= 0x88;

340 i‡(
Ê
.
l_ty≥
 !
F_RDLCK
Ë
ªtvÆ
 |= 0x88;

341 i‡(
Ê
.
l_pid
 !
	`gëµid
()Ë
ªtvÆ
 |= 0x88;

344  
ªtvÆ
;

345 
	}
}

347 
	$makñ⁄g«mes
()

349 
i
;

351 
	`mem£t
(
MaxName
, 'a', 
NAME_MAX
);

352 
MaxName
[
NAME_MAX
] = '\0';

353 
i
 = 0; i < 
PATH_MAX
 - 1; i++) {

354 
MaxP©h
[
i
++] = '.';

355 
MaxP©h
[
i
] = '/';

357 
MaxP©h
[
PATH_MAX
 - 1] = '\0';

359 
	`°r˝y
(
ToL⁄gName
, 
MaxName
);

360 
	`°r˝y
(
ToL⁄gP©h
, 
MaxP©h
);

362 
ToL⁄gName
[
NAME_MAX
] = 'a';

363 
ToL⁄gName
[
NAME_MAX
 + 1] = '\0';

364 
ToL⁄gP©h
[
PATH_MAX
 - 1] = '/';

365 
ToL⁄gP©h
[
PATH_MAX
] = '\0';

366 
	}
}

370 
	$e
(
n
)

371 
n
;

373 
îr_num
 = 
î∫o
;

375 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d: ", 
subã°
, 
n
, 
î∫o
);

376 
î∫o
 = 
îr_num
;

377 
	`≥º‹
("");

378 i‡(
îr˘
++ > 
MAX_ERROR
) {

379 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

380 
	`chdú
("..");

381 
	`sy°em
("rm -rf DIR*");

382 
	`exô
(1);

384 
î∫o
 = 0;

385 
	}
}

388 
	$quô
()

390 
	`Chdú
("..");

391 
	`Sy°em
("rm -rf DIR_39");

393 i‡(
îr˘
 == 0) {

394 
	`¥ötf
("ok\n");

395 
	`exô
(0);

396 } i‡(
îr˘
 < 10000) {

397 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

398 
	`exô
(1);

400 
	`¥ötf
("errors\n");

401 
	`exô
(2);

403 
	}
}

	@test4.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/waô.h
>

5 
	~<f˙é.h
>

6 
	~<sig«l.h
>

7 
	~<°dlib.h
>

8 
	~<uni°d.h
>

9 
	~<°dio.h
>

11 
pid_t
 
	gpid0
, 
	gpid1
, 
	gpid2
, 
	gpid3
;

12 
	gs
, 
	gi
, 
	gfd
, 
	g√xtb
, 
	gîr˘
 = 0;

13 *
	gãmpfûe
 = "test4.temp";

14 
	gbuf
[1024];

16 
_PROTOTYPE
(
maö
, ());

17 
_PROTOTYPE
(
subr
, ());

18 
_PROTOTYPE
(
nof‹k
, ());

19 
_PROTOTYPE
(
quô
, ());

21 
	$maö
()

23 
k
;

25 
	`¥ötf
("Test 4 ");

26 
	`fÊush
(
°dout
);

28 
	`sy°em
("rm -rf DIR_04; mkdir DIR_04");

29 
	`chdú
("DIR_04");

31 
	`¸ót
(
ãmpfûe
, 0777);

32 
k
 = 0; k < 20; k++) {

33 
	`subr
();

35 
	`u∆ök
(
ãmpfûe
);

36 
	`quô
();

38 
	}
}

41 
	$subr
()

43 i‡–(
pid0
 = 
	`f‹k
()) != 0) {

45 i‡(
pid0
 < 0Ë
	`nof‹k
();

46 i‡–(
pid1
 = 
	`f‹k
()) != 0) {

48 i‡(
pid1
 < 0Ë
	`nof‹k
();

49 i‡–(
pid2
 = 
	`f‹k
()) != 0) {

51 i‡(
pid2
 < 0Ë
	`nof‹k
();

52 i‡–(
pid3
 = 
	`f‹k
()) != 0) {

54 i‡(
pid3
 < 0Ë
	`nof‹k
();

55 
i
 = 0; i < 10000; i++);

56 
	`kûl
(
pid2
, 9);

57 
	`kûl
(
pid1
, 9);

58 
	`kûl
(
pid0
, 9);

59 
	`waô
(&
s
);

60 
	`waô
(&
s
);

61 
	`waô
(&
s
);

62 
	`waô
(&
s
);

64 
fd
 = 
	`›í
(
ãmpfûe
, 
O_RDONLY
);

65 
	`l£ek
(
fd
, 20480L * 
√xtb
, 0);

66 
i
 = 0; i < 10; i++Ë
	`ªad
(
fd
, 
buf
, 1024);

67 
√xtb
++;

68 
	`˛o£
(
fd
);

69 
	`exô
(0);

72 1Ë
	`gëpid
();

75 1Ë
	`gëpid
();

78 1Ë
	`gëpid
();

80 
	}
}

82 
	$nof‹k
()

84 
	`¥ötf
("Fork failed. NotÉnough memory.\n");

85 
	`exô
(1);

86 
	}
}

88 
	$quô
()

91 
	`chdú
("..");

92 
	`sy°em
("rm -rf DIR*");

94 i‡(
îr˘
 == 0) {

95 
	`¥ötf
("ok\n");

96 
	`exô
(0);

98 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

99 
	`exô
(1);

101 
	}
}

	@test40.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/°©.h
>

5 
	~<sys/waô.h
>

6 
	~<°dlib.h
>

7 
	~<uni°d.h
>

8 
	~<°rög.h
>

9 
	~<f˙é.h
>

10 
	~<limôs.h
>

11 
	~<î∫o.h
>

12 
	~<time.h
>

13 
	~<°dio.h
>

15 
	#MAX_ERROR
 4

	)

16 
	#ITERATIONS
 10

	)

18 
	#Sy°em
(
cmd
Ëi‡(
	`sy°em
(cmdË!0Ë
	`¥ötf
("``%s'' faûed\n", cmd)

	)

19 
	#Chdú
(
dú
Ëi‡(
	`chdú
(dúË!0Ë
	`¥ötf
("C™'àgŸÿ%s\n", dú)

	)

20 
	#Sèt
(
a
,
b
Ëi‡(
	`°©
◊,bË!0Ë
	`¥ötf
("C™'à°© %s\n",á)

	)

21 
	#Mkfifo
(
f
Ëi‡(
	`mkfifo
(f,0777)!=0Ë
	`¥ötf
("C™'àmakêfifÿ%s\n", f)

	)

23 
	gîr˘
 = 0;

24 
	gsubã°
 = 1;

25 
	gMaxName
[
NAME_MAX
 + 1];

26 
	gMaxP©h
[
PATH_MAX
];

27 
	gToL⁄gName
[
NAME_MAX
 + 2];

28 
	gToL⁄gP©h
[
PATH_MAX
 + 1];

30 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

31 
_PROTOTYPE
(
ã°40a
, ());

32 
_PROTOTYPE
(
ã°40b
, ());

33 
_PROTOTYPE
(
ã°40c
, ());

34 
_PROTOTYPE
(
e
, (
numbî
));

35 
_PROTOTYPE
(
quô
, ());

37 
	$maö
(
¨gc
, 
¨gv
)

38 
¨gc
;

39 *
¨gv
[];

41 
i
, 
m
 = 0xFFFF;

43 
	`sync
();

44 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

45 
	`¥ötf
("Test 40 ");

46 
	`fÊush
(
°dout
);

47 
	`Sy°em
("rm -rf DIR_40; mkdir DIR_40");

48 
	`Chdú
("DIR_40");

50 
i
 = 0; i < 10; i++) {

51 i‡(
m
 & 0001Ë
	`ã°40a
();

52 i‡(
m
 & 0002Ë
	`ã°40b
();

53 i‡(
m
 & 0004Ë
	`ã°40c
();

55 
	`quô
();

56 
	}
}

58 
	$ã°40a
()

60 
fd
;

61 
buf
[20];

62 
i
, 
j
;

63 
°©
 
°
;

65 
subã°
 = 1;

66 
	`Sy°em
("rm -rf ../DIR_40/*");

69 
	`Sy°em
("echo -n hihaho > hihaho");

70 i‡((
fd
 = 
	`›í
("hihaho", 
O_RDONLY
)Ë!3Ë
	`e
(1);

71 i‡(
	`l£ek
(
fd
, (
off_t
Ë3, 
SEEK_SET
Ë!(off_tË3Ë
	`e
(2);

72 i‡(
	`ªad
(
fd
, 
buf
, 1Ë!1Ë
	`e
(3);

73 i‡(
buf
[0] !'a'Ë
	`e
(4);

74 i‡(
	`l£ek
(
fd
, (
off_t
Ë- 1, 
SEEK_END
Ë!5Ë
	`e
(5);

75 i‡(
	`ªad
(
fd
, 
buf
, 1Ë!1Ë
	`e
(6);

76 i‡(
buf
[0] !'o'Ë
	`e
(7);

79 i‡(
	`l£ek
(
fd
, (
off_t
Ë1000, 
SEEK_END
Ë!1006Ë
	`e
(8);

80 i‡(
	`ªad
(
fd
, 
buf
, 1Ë!0Ë
	`e
(9);

83 i‡(
	`f°©
(
fd
, &
°
Ë!0Ë
	`e
(10);

84 i‡(
°
.
°_size
 !(
off_t
Ë6Ë
	`e
(11);

85 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(12);

88 i‡((
fd
 = 
	`›í
("hihaho", 
O_WRONLY
)Ë!3Ë
	`e
(13);

89 i‡(
	`l£ek
(
fd
, (
off_t
Ë3, 
SEEK_SET
Ë!(off_tË3Ë
	`e
(14);

90 i‡(
	`wrôe
(
fd
, "e", 1Ë!1Ë
	`e
(15);

91 i‡(
	`l£ek
(
fd
, (
off_t
Ë1000, 
SEEK_END
Ë!1006Ë
	`e
(16);

94 i‡(
	`f°©
(
fd
, &
°
Ë!0Ë
	`e
(17);

95 i‡(
°
.
°_size
 !(
off_t
Ë6Ë
	`e
(18);

96 i‡(
	`wrôe
(
fd
, "e", 1Ë!1Ë
	`e
(19);

99 i‡(
	`f°©
(
fd
, &
°
Ë!0Ë
	`e
(20);

100 i‡(
°
.
°_size
 !(
off_t
Ë1007Ë
	`e
(21);

102 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(22);

105 i‡((
fd
 = 
	`›í
("hihaho", 
O_RDONLY
)Ë!3Ë
	`e
(23);

106 i‡(
	`ªad
(
fd
, 
buf
, 6Ë!6Ë
	`e
(24);

107 i‡(
	`°∫cmp
(
buf
, "hiheho", 6Ë!0Ë
	`e
(25);

110 i‡((
buf
Ë< 10Ë
	`e
(26);

111 
i
 = 1; i <= 20; i++) {

112 i‡(
	`ªad
(
fd
, 
buf
, 10Ë!10Ë
	`e
(27);

113 
j
 = 0; j < 10; j++)

114 i‡(
buf
[
j
] != '\0') ;

115 i‡(
j
 !10Ë
	`e
(28);

116 i‡(
	`l£ek
(
fd
, (
off_t
Ë15, 
SEEK_CUR
Ë!(off_tË
i
 * 25 + 6Ë
	`e
(29);

119 i‡(
	`l£ek
(
fd
, (
off_t
Ë1006, 
SEEK_SET
Ë!(off_tË1006Ë
	`e
(30);

120 i‡(
	`ªad
(
fd
, 
buf
, (buf)Ë!1Ë
	`e
(31);

121 i‡(
buf
[0] !'e'Ë
	`e
(32);

123 i‡(
	`l£ek
(
fd
, (
off_t
Ë- 1, 
SEEK_END
Ë!(off_tË1006Ë
	`e
(33);

124 i‡(
	`ªad
(
fd
, 
buf
, (buf)Ë!1Ë
	`e
(34);

125 i‡(
buf
[0] !'e'Ë
	`e
(35);

128 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(36);

129 
	}
}

131 
	$ã°40b
()

133 
fd1
, 
fd2
, 
fd3
;

134 
°©_loc
;

136 
subã°
 = 2;

137 
	`Sy°em
("rm -rf ../DIR_40/*");

143 i‡((
fd1
 = 
	`›í
("ß¡a", 
O_WRONLY
 | 
O_CREAT
, 0777)Ë!3Ë
	`e
(1);

144 i‡(
	`wrôe
(
fd1
, "hÿhÿhÿho", 11Ë!11Ë
	`e
(2);

145 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(3);

148 i‡((
fd1
 = 
	`›í
("ß¡a", 
O_RDONLY
)Ë!3Ë
	`e
(4);

149 i‡((
fd2
 = 
	`›í
("ß¡a", 
O_WRONLY
)Ë!4Ë
	`e
(5);

150 i‡((
fd3
 = 
	`›í
("ß¡a", 
O_RDWR
)Ë!5Ë
	`e
(6);

153 i‡(
	`l£ek
(
fd1
, (
off_t
Ë2, 
SEEK_SET
Ë!2Ë
	`e
(7);

154 i‡(
	`l£ek
(
fd2
, (
off_t
Ë4, 
SEEK_SET
Ë!4Ë
	`e
(8);

155 i‡(
	`l£ek
(
fd3
, (
off_t
Ë7, 
SEEK_SET
Ë!7Ë
	`e
(9);

158 
	`f‹k
()) {

159 -1: 
	`¥ötf
("Can't fork\n"); ;

161 
	`Æ¨m
(20);

162 i‡(
	`l£ek
(
fd1
, (
off_t
Ë1, 
SEEK_CUR
Ë!3Ë
	`e
(10);

163 i‡(
	`l£ek
(
fd2
, (
off_t
Ë5, 
SEEK_SET
Ë!5Ë
	`e
(11);

164 i‡(
	`l£ek
(
fd3
, (
off_t
Ë- 4, 
SEEK_END
Ë!7Ë
	`e
(12);

165 
	`exô
(0);

167 
	`waô
(&
°©_loc
);

168 i‡(
°©_loc
 !0Ë
	`e
(13);

172 i‡(
	`l£ek
(
fd1
, (
off_t
Ë0, 
SEEK_CUR
Ë!3Ë
	`e
(14);

173 i‡(
	`l£ek
(
fd2
, (
off_t
Ë0, 
SEEK_CUR
Ë!5Ë
	`e
(15);

174 i‡(
	`l£ek
(
fd3
, (
off_t
Ë0, 
SEEK_CUR
Ë!7Ë
	`e
(16);

177 i‡(
	`˛o£
(
fd1
Ë!0Ë
	`e
(17);

178 i‡(
	`˛o£
(
fd2
Ë!0Ë
	`e
(18);

179 i‡(
	`˛o£
(
fd3
Ë!0Ë
	`e
(19);

180 
	}
}

182 
	$ã°40c
()

184 
fd
;

185 
tube
[2];

186 
i
, 
°©_loc
;

188 
subã°
 = 3;

189 
	`Sy°em
("rm -rf ../DIR_40/*");

192 
	`Mkfifo
("fifo");

193 
	`f‹k
()) {

194 -1: 
	`¥ötf
("Can't fork\n"); ;

196 
	`Æ¨m
(3);

197 i‡((
fd
 = 
	`›í
("fifo", 
O_RDONLY
)Ë!3Ë
	`e
(1);

198 i‡(
	`l£ek
(
fd
, (
off_t
Ë0, 
SEEK_SET
Ë!(off_tË- 1Ë
	`e
(2);

199 i‡(
î∫o
 !
ESPIPE
Ë
	`e
(3);

200 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(4);

201 
	`exô
(0);

203 i‡((
fd
 = 
	`›í
("fifo", 
O_WRONLY
)Ë!3Ë
	`e
(5);

204 
	`waô
(&
°©_loc
);

205 i‡(
°©_loc
 !0Ë
	`e
(6);

206 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(7);

210 i‡(
	`pùe
(
tube
Ë!0Ë
	`e
(8);

211 
	`f‹k
()) {

212 -1: 
	`¥ötf
("Can't fork\n"); ;

214 
	`Æ¨m
(3);

215 i‡(
	`l£ek
(
tube
[0], (
off_t
Ë0, 
SEEK_SET
Ë!(off_tË- 1Ë
	`e
(9);

216 i‡(
î∫o
 !
ESPIPE
Ë
	`e
(10);

217 i‡(
	`l£ek
(
tube
[1], (
off_t
Ë0, 
SEEK_SET
Ë!(off_tË- 1Ë
	`e
(11);

218 i‡(
î∫o
 !
ESPIPE
Ë
	`e
(12);

219 
	`exô
(0);

221 
	`waô
(&
°©_loc
);

222 i‡(
°©_loc
 !0Ë
	`e
(14);

226 i‡(
	`˛o£
(
tube
[0]Ë!0Ë
	`e
(15);

227 i‡(
	`˛o£
(
tube
[1]Ë!0Ë
	`e
(16);

230 
	`Sy°em
("echo -n contact > file");

231 i‡((
fd
 = 
	`›í
("fûe", 
O_RDWR
)Ë!3Ë
	`e
(17);

232 
i
 = -1000; i < 1000; i++) {

233 i‡(
i
 =
SEEK_SET
 || i =
SEEK_END
 || i =
SEEK_CUR
) ;

234 i‡(
	`l£ek
(
fd
, (
off_t
Ë0, 
i
Ë!(off_tË-1Ë
	`e
(18);

235 i‡(
î∫o
 !
EINVAL
Ë
	`e
(19);

237 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(20);

240 
i
 = -1000; i < 1000; i++) {

241 i‡(
i
 >0 && i < 
OPEN_MAX
) ;

242 i‡(
	`l£ek
(
i
, (
off_t
Ë0, 
SEEK_SET
Ë!(off_tË- 1Ë
	`e
(21);

243 i‡(
	`l£ek
(
i
, (
off_t
Ë0, 
SEEK_END
Ë!(off_tË- 1Ë
	`e
(22);

244 i‡(
	`l£ek
(
i
, (
off_t
Ë0, 
SEEK_CUR
Ë!(off_tË- 1Ë
	`e
(23);

246 
	}
}

249 
	$e
(
n
)

250 
n
;

252 
îr_num
 = 
î∫o
;

254 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d: ", 
subã°
, 
n
, 
î∫o
);

255 
î∫o
 = 
îr_num
;

256 
	`≥º‹
("");

257 i‡(
îr˘
++ > 
MAX_ERROR
) {

258 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

259 
	`chdú
("..");

260 
	`sy°em
("rm -rf DIR*");

261 
	`exô
(1);

263 
î∫o
 = 0;

264 
	}
}

267 
	$quô
()

269 
	`Chdú
("..");

270 
	`Sy°em
("rm -rf DIR_40");

272 i‡(
îr˘
 == 0) {

273 
	`¥ötf
("ok\n");

274 
	`exô
(0);

276 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

277 
	`exô
(1);

279 
	}
}

	@test5.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/waô.h
>

5 
	~<î∫o.h
>

6 
	~<f˙é.h
>

7 
	~<sig«l.h
>

8 
	~<°dlib.h
>

9 
	~<uni°d.h
>

10 
	~<°dio.h
>

12 
	#ITERATIONS
 2

	)

13 
	#MAX_ERROR
 4

	)

15 
	gîr˘
;

16 
	gsubã°
;

17 
	gzîo
[1024];

19 
	gsigm≠
[5] = {9, 10, 11};

21 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
[]));

22 
_PROTOTYPE
(
ã°5a
, ());

23 
_PROTOTYPE
(
∑ª¡
, (
chûdpid
));

24 
_PROTOTYPE
(
chûd
, (
∑Ωid
));

25 
_PROTOTYPE
(
func1
, (
s
));

26 
_PROTOTYPE
(
func8
, (
s
));

27 
_PROTOTYPE
(
func10
, (
s
));

28 
_PROTOTYPE
(
func11
, (
s
));

29 
_PROTOTYPE
(
ã°5b
, ());

30 
_PROTOTYPE
(
ã°5c
, ());

31 
_PROTOTYPE
(
ã°5d
, ());

32 
_PROTOTYPE
(
ã°5e
, ());

33 
_PROTOTYPE
(
ã°5f
, ());

34 
_PROTOTYPE
(
ã°5g
, ());

35 
_PROTOTYPE
(
funˇÃm
, (
s
));

36 
_PROTOTYPE
(
ã°5h
, ());

37 
_PROTOTYPE
(
ã°5i
, ());

38 
_PROTOTYPE
(
ex
, ());

39 
_PROTOTYPE
(
e
, (
n
));

40 
_PROTOTYPE
(
quô
, ());

43 #ifde‡
_ANSI


44 (*
Sig«l
(
_sig
, (*
_func
)()))();

45 
	#SIG_ZERO
 (((*)())0Ë

	)

47 
sigh™dÀr_t
 
	`Sig«l
();

49 
	#SIG_ZERO
 (((*)())0Ë

	)

52 
_VOLATILE
 
chûdsigs
, 
∑rsigs
, 
Æ¨ms
;

54 
	$maö
(
¨gc
, 
¨gv
)

55 
¨gc
;

56 *
¨gv
[];

58 
i
, 
m
 = 0x7777;

60 
	`¥ötf
("Test 5 ");

61 
	`fÊush
(
°dout
);

63 
	`sy°em
("rm -rf DIR_05; mkdir DIR_05");

64 
	`chdú
("DIR_05");

66 
i
 = 0; i < 
ITERATIONS
; i++) {

67 i‡(
m
 & 0001Ë
	`ã°5a
();

68 i‡(
m
 & 0002Ë
	`ã°5b
();

69 i‡(
m
 & 0004Ë
	`ã°5c
();

70 i‡(
m
 & 0010Ë
	`ã°5d
();

71 i‡(
m
 & 0020Ë
	`ã°5e
();

72 i‡(
m
 & 0040Ë
	`ã°5f
();

73 i‡(
m
 & 0100Ë
	`ã°5g
();

74 i‡(
m
 & 0200Ë
	`ã°5h
();

75 i‡(
m
 & 0400Ë
	`ã°5i
();

77 
	`quô
();

79 
	}
}

83 
	$ã°5a
()

85 
∑Ωid
, 
chûdpid
, 
Êag
, *
zp
;

87 
subã°
 = 0;

88 
Êag
 = 0;

89 
zp
 = &
zîo
[0]; zp < &zero[1024]; zp++)

90 i‡(*
zp
 !0Ë
Êag
 = 1;

91 i‡(
Êag
Ë
	`e
(0);

92 i‡(
	`Sig«l
(1, 
func1
Ë=
SIG_ERR
Ë
	`e
(1);

93 i‡(
	`Sig«l
(10, 
func10
Ë< 
SIG_ZERO
Ë
	`e
(2);

94 
∑Ωid
 = 
	`gëpid
();

95 i‡(
chûdpid
 = 
	`f‹k
()) {

96 i‡(
chûdpid
 < 0Ë
	`ex
();

97 
	`∑ª¡
(
chûdpid
);

99 
	`chûd
(
∑Ωid
);

101 i‡(
	`Sig«l
(1, 
SIG_DFL
Ë< 
SIG_ZERO
Ë
	`e
(4);

102 i‡(
	`Sig«l
(10, 
SIG_DFL
Ë< 
SIG_ZERO
Ë
	`e
(5);

103 
	}
}

105 
	$∑ª¡
(
chûdpid
)

106 
chûdpid
;

108 
i
, 
pid
;

110 
i
 = 0; i < 3; i++) {

111 i‡(
	`kûl
(
chûdpid
, 1Ë< 0Ë
	`e
(6);

112 
∑rsigs
 == 0);

113 
∑rsigs
--;

115 i‡–(
pid
 = 
	`waô
(&
i
)Ë< 0Ë
	`e
(7);

116 i‡(
i
 !256 * 6Ë
	`e
(8);

117 
	}
}

119 
	$chûd
(
∑Ωid
)

120 
∑Ωid
;

123 
i
;

125 
i
 = 0; i < 3; i++) {

126 
chûdsigs
 == 0);

127 
chûdsigs
--;

128 i‡(
	`kûl
(
∑Ωid
, 10Ë< 0Ë
	`e
(9);

130 
	`exô
(6);

131 
	}
}

133 
	$func1
(
s
)

134 
s
;

136 i‡(
	`Sig«l
(1, 
func1
Ë< 
SIG_ZERO
Ë
	`e
(10);

137 
chûdsigs
++;

138 
	}
}

140 
	$func8
(
s
)

141 
s
;

143 
	}
}

145 
	$func10
(
s
)

146 
s
;

148 i‡(
	`Sig«l
(10, 
func10
Ë< 
SIG_ZERO
Ë
	`e
(11);

149 
∑rsigs
++;

150 
	}
}

152 
	$func11
(
s
)

153 
s
;

155 
	`e
(38);

156 
	}
}

159 
	$ã°5b
()

161 
˝id
, 
n
, 
pid
;

163 
subã°
 = 1;

164 i‡((
pid
 = 
	`f‹k
())) {

165 i‡(
pid
 < 0Ë
	`ex
();

166 i‡((
pid
 = 
	`f‹k
())) {

167 i‡(
pid
 < 0Ë
	`ex
();

168 i‡(
˝id
 = 
	`f‹k
()) {

169 i‡(
˝id
 < 0Ë
	`ex
();

170 i‡(
	`kûl
(
˝id
, 9Ë< 0Ë
	`e
(12);

171 i‡(
	`waô
(&
n
Ë< 0Ë
	`e
(13);

172 i‡(
	`waô
(&
n
Ë< 0Ë
	`e
(14);

173 i‡(
	`waô
(&
n
Ë< 0Ë
	`e
(15);

175 
	`∑u£
();

179 
	`exô
(0);

182 
	`exô
(0);

184 
	}
}

187 
	$ã°5c
()

189 
n
, 
i
, 
pid
, 
wpid
;

192 
subã°
 = 3;

193 
i
 = 0; i < 2; i++) {

194 i‡(
pid
 = 
	`f‹k
()) {

195 i‡(
pid
 < 0Ë
	`ex
();

196 
	`¶ìp
(2);

197 i‡(
	`kûl
(
pid
, 
sigm≠
[
i
]) < 0) {

198 
	`e
(20);

199 
	`exô
(1);

201 i‡((
wpid
 = 
	`waô
(&
n
)Ë< 0Ë
	`e
(21);

202 i‡((
n
 & 077Ë!
sigm≠
[
i
]Ë
	`e
(22);

203 i‡(
pid
 !
wpid
Ë
	`e
(23);

205 
	`∑u£
();

206 
	`exô
(0);

209 
	}
}

211 
	$ã°5d
()

215 
i
;

217 
subã°
 = 4;

218 
Æ¨ms
 = 0;

219 
i
 = 0; i < 8; i++) {

220 
	`Sig«l
(
SIGALRM
, 
funˇÃm
);

221 
	`Æ¨m
(1);

222 
	`∑u£
();

223 i‡(
Æ¨ms
 !
i
 + 1Ë
	`e
(24);

225 
	}
}

229 
	$ã°5e
()

234 
n
, 
j
;

236 
subã°
 = 5;

237 i‡(
	`Sig«l
(8, 
func8
Ë< 
SIG_ZERO
Ë
	`e
(25);

238 i‡(
n
 = 
	`f‹k
()) {

240 i‡(
n
 < 0Ë
	`ex
();

241 
	`¶ìp
(1);

242 i‡(
	`kûl
(
n
, 8Ë< 0Ë
	`e
(26);

243 i‡(
	`waô
(&
n
Ë< 0Ë
	`e
(27);

244 i‡(
	`Sig«l
(8, 
SIG_DFL
Ë< 
SIG_ZERO
Ë
	`e
(28);

246 
j
 = 
	`∑u£
();

247 i‡(
î∫o
 !
EINTR
 && -î∫ÿ!EINTRË
	`e
(29);

248 
	`exô
(0);

250 
	}
}

253 
	$ã°5f
()

255 
i
, 
j
, 
k
, 
n
;

257 
subã°
 = 6;

258 i‡(
	`gëuid
() != 0) ;

259 
n
 = 
	`f‹k
();

260 i‡(
n
 < 0Ë
	`ex
();

261 i‡(
n
) {

262 
	`waô
(&
i
);

263 
i
 = (i >> 8) & 0377;

264 i‡(
i
 !(
n
 & 0377)Ë
	`e
(30);

266 
i
 = 
	`gëgid
();

267 
j
 = 
	`gëegid
();

268 
k
 = (
i
 + 
j
 + 7) & 0377;

269 i‡(
	`£tgid
(
k
Ë< 0Ë
	`e
(31);

270 i‡(
	`gëgid
(Ë!
k
Ë
	`e
(32);

271 i‡(
	`gëegid
(Ë!
k
Ë
	`e
(33);

272 
i
 = 
	`gëuid
();

273 
j
 = 
	`gëeuid
();

274 
k
 = (
i
 + 
j
 + 1) & 0377;

275 i‡(
	`£tuid
(
k
Ë< 0Ë
	`e
(34);

276 i‡(
	`gëuid
(Ë!
k
Ë
	`e
(35);

277 i‡(
	`gëeuid
(Ë!
k
Ë
	`e
(36);

278 
i
 = 
	`gëpid
() & 0377;

279 i‡(
	`waô
(&
j
Ë!-1Ë
	`e
(37);

280 
	`exô
(
i
);

282 
	}
}

285 
	$ã°5g
()

287 
n
;

289 
subã°
 = 7;

290 
	`Sig«l
(11, 
func11
);

291 
	`Sig«l
(11, 
SIG_IGN
);

292 
n
 = 
	`gëpid
();

293 i‡(
	`kûl
(
n
, 11Ë!0Ë
	`e
(1);

294 
	`Sig«l
(11, 
SIG_DFL
);

295 
	}
}

297 
	$funˇÃm
(
s
)

298 
s
;

300 
Æ¨ms
++;

301 
	}
}

304 
	$ã°5h
()

309 
n
, 
j
, 
fd
[2];

311 
subã°
 = 8;

312 
	`u∆ök
("XXX.test5");

313 i‡(
	`Sig«l
(8, 
func8
Ë< 
SIG_ZERO
Ë
	`e
(1);

314 
	`pùe
(
fd
);

315 i‡(
n
 = 
	`f‹k
()) {

317 i‡(
n
 < 0Ë
	`ex
();

318 
	`ac˚ss
("XXX.test5", 0) != 0) ;

319 
	`¶ìp
(1);

320 
	`u∆ök
("XXX.test5");

321 i‡(
	`kûl
(
n
, 8Ë< 0Ë
	`e
(2);

322 i‡(
	`waô
(&
n
Ë< 0Ë
	`e
(3);

323 i‡(
	`Sig«l
(8, 
SIG_DFL
Ë< 
SIG_ZERO
Ë
	`e
(4);

324 i‡(
	`˛o£
(
fd
[0]Ë!0Ë
	`e
(5);

325 i‡(
	`˛o£
(
fd
[1]Ë!0Ë
	`e
(6);

327 i‡(
	`¸ót
("XXX.ã°5", 0777Ë< 0Ë
	`e
(7);

328 
j
 = 
	`ªad
(
fd
[0], (*Ë&
n
, 1);

329 i‡(
î∫o
 !
EINTR
Ë
	`e
(8);

330 
	`exô
(0);

332 
	}
}

334 
	$ã°5i
()

336 
fd
[2], 
pid
, 
buf
[10], 
n
;

338 
subã°
 = 9;

339 
	`pùe
(
fd
);

340 
	`u∆ök
("XXXxxxXXX");

342 i‡–(
pid
 = 
	`f‹k
())) {

345 
	`ac˚ss
("XXXxxxXXX", 0) != 0) ;

346 
	`¶ìp
(1);

347 i‡(
	`kûl
(
pid
, 
SIGKILL
Ë!0Ë
	`e
(1);

348 i‡(
	`waô
(&
n
Ë< 0Ë
	`e
(2);

349 i‡(
	`˛o£
(
fd
[0]Ë!0Ë
	`e
(3);

350 i‡(
	`˛o£
(
fd
[1]Ë!0Ë
	`e
(4);

352 i‡(
	`¸ót
("XXXxxxXXX", 0777Ë< 0Ë
	`e
(5);

353 
	`ªad
(
fd
[0], (*Ë
buf
, 1);

354 
	`e
(5);

356 
	`u∆ök
("XXXxxxXXX");

357 
	}
}

360 
	$ex
()

362 
	`¥ötf
("Te° 5. f‹k faûed. Eºno=%d\n", 
î∫o
);

363 
	`exô
(1);

364 
	}
}

367 
	$e
(
n
)

368 
n
;

370 
îr_num
 = 
î∫o
;

372 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d ", 
subã°
, 
n
, 
î∫o
);

373 
î∫o
 = 
îr_num
;

374 
	`≥º‹
("");

375 i‡(
îr˘
++ > 
MAX_ERROR
) {

376 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

377 
	`chdú
("..");

378 
	`sy°em
("rm -rf DIR*");

379 
	`exô
(1);

381 
	}
}

383 #ifde‡
_ANSI


384 (*
Sig«l
(
a
, (*
b
)()))()

386 
sigh™dÀr_t
 
	$Sig«l
(
a
, 
b
)

387 
a
;

388 (*
b
)();

391 i‡(
	`sig«l
(
a
, ((*Ë()Ë
b
) == ((*)()) -1)

392 (
SIG_ERR
);

394 (
SIG_ZERO
);

395 
	}
}

398 
	$quô
()

401 
	`chdú
("..");

402 
	`sy°em
("rm -rf DIR*");

404 i‡(
îr˘
 == 0) {

405 
	`¥ötf
("ok\n");

406 
	`exô
(0);

408 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

409 
	`exô
(1);

411 
	}
}

	@test6.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/°©.h
>

5 
	~<î∫o.h
>

6 
	~<f˙é.h
>

7 
	~<limôs.h
>

8 
	~<sig«l.h
>

9 
	~<°dlib.h
>

10 
	~<uni°d.h
>

11 
	~<°dio.h
>

13 
	#MAX_ERROR
 4

	)

15 
	gîr˘
;

16 
	gsubã°
 = 1;

17 
	gzûch
[5000];

18 
	gcurdú
[
PATH_MAX
];

20 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
 []));

21 
_PROTOTYPE
(
ã°6a
, ());

22 
_PROTOTYPE
(
ã°6b
, ());

23 
_PROTOTYPE
(
ã°6c
, ());

24 
_PROTOTYPE
(
e
, (
n
));

25 
_PROTOTYPE
(
quô
, ());

27 
	$maö
(
¨gc
, 
¨gv
)

28 
¨gc
;

29 *
¨gv
[];

31 
i
, 
m
 = 0xFFFF;

33 
	`sync
();

34 i‡(
	`gëeuid
(Ë=0 || 
	`gëuid
() == 0) {

35 
	`¥ötf
("Test 6 cannotÑunásÑoot;Åestáborted\n");

36 
	`exô
(1);

39 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

41 
	`¥ötf
("Test 6 ");

42 
	`fÊush
(
°dout
);

44 
	`gëcwd
(
curdú
, 
PATH_MAX
);

45 
	`sy°em
("rm -rf DIR_06; mkdir DIR_06");

46 
	`chdú
("DIR_06");

48 
i
 = 0; i < 70; i++) {

49 i‡(
m
 & 00001Ë
	`ã°6a
();

50 i‡(
m
 & 00002Ë
	`ã°6b
();

51 i‡(
m
 & 00004Ë
	`ã°6c
();

54 
	`quô
();

56 
	}
}

60 
	$ã°6a
()

64 *
addr
, *
addr2
, *
addr3
;

65 
i
, 
dñ
, 
˛ick
, 
˛ick2
;

67 
subã°
 = 1;

68 
addr
 = 
	`sbrk
(0);

69 
addr
 = 
	`sbrk
(0);

70 
i
 = 0; i < 10; i++Ë
	`sbrk
(7 * i);

71 
i
 = 0; i < 10; i++Ë
	`sbrk
(-7 * i);

72 i‡(
	`sbrk
(0Ë!
addr
Ë
	`e
(1);

73 
	`sbrk
(30);

74 i‡(
	`brk
(
addr
Ë!0Ë
	`e
(2);

75 i‡(
	`sbrk
(0Ë!
addr
Ë
	`e
(3);

77 
dñ
 = 0;

79 
dñ
++;

80 
	`brk
(
addr
 + 
dñ
);

81 
addr2
 = 
	`sbrk
(0);

82 } 
addr2
 =
addr
);

83 
˛ick
 = 
addr2
 - 
addr
;

84 
	`sbrk
(-1);

85 i‡(
	`sbrk
(0Ë!
addr
Ë
	`e
(4);

86 
	`brk
(
addr
);

87 i‡(
	`sbrk
(0Ë!
addr
Ë
	`e
(5);

89 
dñ
 = 0;

91 
dñ
++;

92 
	`brk
(
addr
 - 
dñ
);

93 
addr3
 = 
	`sbrk
(0);

94 } 
addr3
 =
addr
);

95 
˛ick2
 = 
addr
 - 
addr3
;

96 
	`sbrk
(1);

97 i‡(
	`sbrk
(0Ë!
addr
Ë
	`e
(6);

98 
	`brk
(
addr
);

99 i‡(
	`sbrk
(0Ë!
addr
Ë
	`e
(8);

100 i‡(
˛ick
 !
˛ick2
Ë
	`e
(9);

102 
	`brk
(
addr
 + 2 * 
˛ick
);

103 i‡(
	`sbrk
(0Ë!
addr
 + 2 * 
˛ick
Ë
	`e
(10);

104 
	`sbrk
(3 * 
˛ick
);

105 i‡(
	`sbrk
(0Ë!
addr
 + 5 * 
˛ick
Ë
	`e
(11);

106 
	`sbrk
(-5 * 
˛ick
);

107 i‡(
	`sbrk
(0Ë!
addr
Ë
	`e
(12);

108 
	}
}

111 
	$ã°6b
()

113 
i
, 
îr
;

115 
subã°
 = 2;

116 
	`sig«l
(
SIGQUIT
, 
SIG_IGN
);

117 
îr
 = 0;

118 
i
 = 0; i < 5000; i++)

119 i‡(
zûch
[
i
] !0Ë
îr
++;

120 i‡(
îr
 > 0Ë
	`e
(1);

121 
	`kûl
(
	`gëpid
(), 
SIGQUIT
);

122 
	}
}

126 
	$ã°6c
()

130 
i
, 
j
;

131 
°©
 
s
;

133 
subã°
 = 3;

134 i‡(
	`gëuid
() != 0) ;

135 
j
 = 0; j < 2; j++) {

136 
	`umask
(0);

138 i‡(
	`chdú
("/"Ë< 0Ë
	`e
(1);

139 i‡(
	`mknod
("dú", 040700, 0Ë< 0Ë
	`e
(2);

140 i‡(
	`lök
("/", "/dú/.."Ë< 0Ë
	`e
(3);

141 i‡(
	`mknod
("T3a", 0777, 0Ë< 0Ë
	`e
(4);

142 i‡(
	`mknod
("/dú/T3b", 0777, 0Ë< 0Ë
	`e
(5);

143 i‡(
	`mknod
("dú/T3c", 0777, 0Ë< 0Ë
	`e
(6);

144 i‡((
i
 = 
	`›í
("/dú/T3b", 0)Ë< 0Ë
	`e
(7);

145 i‡(
	`˛o£
(
i
Ë< 0Ë
	`e
(8);

146 i‡((
i
 = 
	`›í
("dú/T3c", 
O_RDONLY
)Ë< 0Ë
	`e
(9);

147 i‡(
	`˛o£
(
i
Ë< 0Ë
	`e
(10);

148 i‡(
	`chdú
("dú"Ë< 0Ë
	`e
(11);

149 i‡((
i
 = 
	`›í
("T3b", 0)Ë< 0Ë
	`e
(12);

150 i‡(
	`˛o£
(
i
Ë< 0Ë
	`e
(13);

151 i‡((
i
 = 
	`›í
("../T3a", 
O_RDONLY
)Ë< 0Ë
	`e
(14);

152 i‡(
	`˛o£
(
i
Ë< 0Ë
	`e
(15);

153 i‡((
i
 = 
	`›í
("../dú/../dú/../dú/../dú/../dú/T3c", 
O_RDONLY
)) < 0)

154 
	`e
(16);

155 i‡(
	`˛o£
(
i
Ë< 0Ë
	`e
(17);

157 i‡(
	`chmod
("../dú/../dú/../dú/../dú/../T3a", 0123Ë< 0Ë
	`e
(18);

158 i‡(
	`°©
("../dú/../dú/../dú/../T3a", &
s
Ë< 0Ë
	`e
(19);

159 i‡((
s
.
°_mode
 & 077777Ë!0123Ë
	`e
(20);

160 i‡(
	`chmod
("../dú/../dú/../T3a", 0456Ë< 0Ë
	`e
(21);

161 i‡(
	`°©
("../T3a", &
s
Ë< 0Ë
	`e
(22);

162 i‡((
s
.
°_mode
 & 077777Ë!0456Ë
	`e
(23);

163 i‡(
	`chown
("../dú/../dú/../T3a", 20, 30Ë< 0Ë
	`e
(24);

164 i‡(
	`°©
("../T3a", &
s
Ë< 0Ë
	`e
(25);

165 i‡(
s
.
°_uid
 !20Ë
	`e
(26);

166 i‡(
s
.
°_gid
 !30Ë
	`e
(27);

168 i‡((
i
 = 
	`›í
("/T3c", 
O_RDONLY
)Ë>0Ë
	`e
(28);

169 i‡((
i
 = 
	`›í
("/T3a", 
O_RDONLY
)Ë< 0Ë
	`e
(29);

170 i‡(
	`˛o£
(
i
Ë< 0Ë
	`e
(30);

172 i‡(
	`ac˚ss
("/T3a", 4Ë< 0Ë
	`e
(31);

173 i‡(
	`ac˚ss
("/dú/T3b", 4Ë< 0Ë
	`e
(32);

174 i‡(
	`ac˚ss
("/dú/T3d", 4Ë>0Ë
	`e
(33);

176 i‡(
	`u∆ök
("T3b"Ë< 0Ë
	`e
(34);

177 i‡(
	`u∆ök
("T3c"Ë< 0Ë
	`e
(35);

178 i‡(
	`u∆ök
(".."Ë< 0Ë
	`e
(36);

179 i‡(
	`chdú
("/"Ë< 0Ë
	`e
(37);

180 i‡(
	`u∆ök
("dú"Ë< 0Ë
	`e
(38);

181 i‡(
	`u∆ök
("/T3a"Ë< 0Ë
	`e
(39);

184 
	}
}

186 
	$e
(
n
)

187 
n
;

190 
îr_num
 = 
î∫o
;

192 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d ", 
subã°
, 
n
, 
î∫o
);

193 
î∫o
 = 
îr_num
;

194 
	`≥º‹
("");

195 i‡(
îr˘
++ > 
MAX_ERROR
) {

196 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

197 
	`chdú
("..");

198 
	`sy°em
("rm -rf DIR*");

199 
	`exô
(1);

201 
	}
}

203 
	$quô
()

206 
	`chdú
("..");

207 
	`sy°em
("rm -rf DIR*");

209 
	`chdú
(
curdú
);

210 
	`sy°em
("rm -rf DIR*");

211 i‡(
îr˘
 == 0) {

212 
	`¥ötf
("ok\n");

213 
	`exô
(0);

215 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

216 
	`exô
(1);

218 
	}
}

	@test7.c

9 
	~<sys/ty≥s.h
>

10 
	~<sys/°©.h
>

11 
	~<sys/waô.h
>

12 
	~<î∫o.h
>

13 
	~<f˙é.h
>

14 
	~<limôs.h
>

15 
	~<sig«l.h
>

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

18 
	~<uni°d.h
>

19 
	~<°dio.h
>

21 
	#ITERATIONS
 4

	)

22 
	#MAX_ERROR
 4

	)

23 
	#ITEMS
 32

	)

24 
	#READ
 10

	)

25 
	#WRITE
 20

	)

26 
	#UNLOCK
 30

	)

27 
	#U
 70

	)

28 
	#L
 80

	)

30 
	gbuf
[
ITEMS
] = {0,1,2,3,4,5,6,7,8,9,8,7,6,5,4,3,2,1,0,1,2,3,4,5,6,7,8,9};

32 
	gsubã°
, 
	gîr˘
, 
	gxfd
;

33 
	gwhí˚
 = 
SEEK_SET
, 
	gfunc_code
 = 
F_SETLK
;

34 **
ívú⁄
;

36 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
 []));

37 
_PROTOTYPE
(
ã°7a
, ());

38 
_PROTOTYPE
(
ã°7b
, ());

39 
_PROTOTYPE
(
ã°7c
, ());

40 
_PROTOTYPE
(
ã°7d
, ());

41 
_PROTOTYPE
(
ã°7e
, ());

42 
_PROTOTYPE
(
ã°7f
, ());

43 
_PROTOTYPE
(
ã°7g
, ());

44 
_PROTOTYPE
(
ã°7h
, ());

45 
_PROTOTYPE
(
ã°7i
, ());

46 
_PROTOTYPE
(
ã°7j
, ());

47 
_PROTOTYPE
(
˛€xec_ã°
, ());

48 
_PROTOTYPE
(
£t
, (
how
, 
fú°
, 
œ°
));

49 
_PROTOTYPE
(
locked
, (
b
));

50 
_PROTOTYPE
(
e
, (
n
));

51 
_PROTOTYPE
(
sigfunc
, (
s
));

52 
_PROTOTYPE
(
quô
, ());

55 
	$maö
(
¨gc
, 
¨gv
)

56 
¨gc
;

57 *
¨gv
[];

60 
i
, 
m
 = 0xFFFF;

62 
	`sync
();

64 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

65 i‡(
m
 =0Ë
	`˛€xec_ã°
();

66 
	`¥ötf
("Test 7 ");

67 
	`fÊush
(
°dout
);

69 
	`sy°em
("rm -rf DIR_07; mkdir DIR_07");

70 
	`chdú
("DIR_07");

72 
i
 = 0; i < 
ITERATIONS
; i++) {

73 i‡(
m
 & 00001Ë
	`ã°7a
();

74 i‡(
m
 & 00002Ë
	`ã°7b
();

75 i‡(
m
 & 00004Ë
	`ã°7c
();

76 i‡(
m
 & 00010Ë
	`ã°7d
();

77 i‡(
m
 & 00020Ë
	`ã°7e
();

78 i‡(
m
 & 00040Ë
	`ã°7f
();

79 i‡(
m
 & 00100Ë
	`ã°7g
();

80 i‡(
m
 & 00200Ë
	`ã°7h
();

81 i‡(
m
 & 00400Ë
	`ã°7i
();

82 i‡(
m
 & 01000Ë
	`ã°7j
();

84 
	`quô
();

86 
	}
}

88 
	$ã°7a
()

92 
i
, 
fd
[2], 
e˘
;

93 
buf2
[
ITEMS
+1];

96 
subã°
 = 1;

97 i‡(
	`pùe
(
fd
Ë!0Ë
	`e
(1);

98 i‡(
	`wrôe
(
fd
[1], 
buf
, 
ITEMS
Ë!ITEMSË
	`e
(2);

99 
buf2
[0] = 0;

100 i‡(
	`ªad
(
fd
[0], 
buf2
, 
ITEMS
+1Ë!ITEMSË
	`e
(3);

101 
e˘
 = 0;

102 
i
 = 0; i < 
ITEMS
; i++Ëi‡(
buf
[i] !
buf2
[i]Ë
e˘
++;

103 i‡(
e˘
 !0Ë
	`e
(4);

104 i‡(
	`˛o£
(
fd
[0]Ë!0Ë
	`e
(5);

105 i‡(
	`˛o£
(
fd
[1]Ë!0Ë
	`e
(6);

108 
î∫o
 = 0;

110 i‡(
	`pùe
(
fd
) < 0) ;

112 i‡(
î∫o
 !
EMFILE
Ë
	`e
(7);

115 
i
 = 3; i < 
OPEN_MAX
; i++Ë
	`˛o£
(i);

116 
	}
}

119 
	$ã°7b
()

123 
fdr
, 
fdw
, 
°©us
;

124 
buf2
[
ITEMS
+1];

127 
subã°
 = 2;

128 i‡(
	`mkfifo
("T7.b", 0777Ë!0Ë
	`e
(1);

129 i‡(
	`f‹k
()) {

131 i‡–(
fdw
 = 
	`›í
("T7.b", 
O_WRONLY
)Ë< 0Ë
	`e
(2);

132 i‡(
	`wrôe
(
fdw
, 
buf
, 
ITEMS
Ë!ITEMSË
	`e
(3);

133 
	`waô
(&
°©us
);

134 i‡(
	`˛o£
(
fdw
Ë!0Ë
	`e
(4);

137 i‡–(
fdr
 = 
	`›í
("T7.b", 
O_RDONLY
)Ë< 0Ë
	`e
(5);

138 i‡(
	`ªad
(
fdr
, 
buf2
, 
ITEMS
+1Ë!ITEMSË
	`e
(6);

139 i‡(
	`°rcmp
(
buf
, 
buf2
Ë!0Ë
	`e
(7);

140 i‡(
	`˛o£
(
fdr
Ë!0Ë
	`e
(8);

141 
	`exô
(0);

145 i‡(
	`mkfifo
("T7.b", 0777Ë!-1Ë
	`e
(9);

146 
î∫o
 = 0;

147 i‡(
	`mkfifo
("a/b/c", 0777Ë!-1Ë
	`e
(10);

148 i‡(
î∫o
 !
ENOENT
Ë
	`e
(11);

149 
î∫o
 = 0;

150 i‡(
	`mkfifo
("", 0777Ë!-1Ë
	`e
(12);

151 i‡(
î∫o
 !
ENOENT
Ë
	`e
(13);

152 
î∫o
 = 0;

153 i‡(
	`mkfifo
("T7.b/x", 0777Ë!-1Ë
	`e
(14);

154 i‡(
î∫o
 !
ENOTDIR
Ë
	`e
(15);

155 i‡(
	`u∆ök
("T7.b"Ë!0Ë
	`e
(16);

158 i‡(
	`mkfifo
("T7.b", 0600Ë!0Ë
	`e
(17);

159 
î∫o
 = 0;

160 i‡(
	`›í
("T7.b", 
O_WRONLY
 | 
O_NONBLOCK
Ë!-1Ë
	`e
(18);

161 i‡(
î∫o
 !
ENXIO
Ë
	`e
(19);

162 i‡–(
fdr
 = 
	`›í
("T7.b", 
O_RDONLY
 | 
O_NONBLOCK
)Ë< 0Ë
	`e
(20);

163 i‡(
	`f‹k
()) {

165 
	`waô
(&
°©us
);

166 i‡––(
°©us
>>8Ë& 0377Ë!77Ë
	`e
(21);

167 i‡(
	`ªad
(
fdr
, 
buf2
, 
ITEMS
+1Ë!ITEMSË
	`e
(22);

168 i‡(
	`°rcmp
(
buf
, 
buf2
Ë!0Ë
	`e
(23);

169 i‡(
	`˛o£
(
fdr
Ë!0Ë
	`e
(24);

172 i‡–(
fdw
 = 
	`›í
("T7.b", 
O_WRONLY
 | 
O_NONBLOCK
)Ë< 0Ë
	`e
(25);

173 i‡(
	`wrôe
(
fdw
, 
buf
, 
ITEMS
Ë!ITEMSË
	`e
(26);

174 i‡(
	`˛o£
(
fdw
Ë!0Ë
	`e
(27);

175 
	`exô
(77);

178 i‡(
	`u∆ök
("T7.b"Ë!0Ë
	`e
(28);

179 
	}
}

182 
	$ã°7c
()

186 
fd
, 
m
, 
s
, 
√wfd
, 
√wfd2
;

187 
°©
 
°©1
, 
°©2
, 
°©3
;

189 
subã°
 = 3;

190 
î∫o
 = -100;

191 i‡–(
fd
 = 
	`¸ót
("T7.c", 0777)Ë< 0Ë
	`e
(1);

194 i‡(
	`f˙é
(
fd
, 
F_GETFD
Ë!0Ë
	`e
(2);

195 i‡(
	`f˙é
(
fd
, 
F_SETFD
, 
FD_CLOEXEC
Ë!0Ë
	`e
(3);

196 i‡(
	`f˙é
(
fd
, 
F_GETFD
Ë!
FD_CLOEXEC
Ë
	`e
(4);

197 i‡(
	`f˙é
(
fd
, 
F_SETFD
, 0Ë!0Ë
	`e
(5);

198 i‡(
	`f˙é
(
fd
, 
F_GETFD
Ë!0Ë
	`e
(6);

201 
m
 = 
O_WRONLY
;

202 i‡(
	`f˙é
(
fd
, 
F_GETFL
Ë!
m
Ë
	`e
(7);

203 i‡(
	`f˙é
(
fd
, 
F_SETFL
, 
O_APPEND
Ë!0Ë
	`e
(8);

204 i‡(
	`f˙é
(
fd
, 
F_GETFL
Ë!(
O_APPEND
 | 
m
)Ë
	`e
(9);

205 i‡(
	`f˙é
(
fd
, 
F_SETFL
, 0Ë!0Ë
	`e
(10);

206 i‡(
	`f˙é
(
fd
, 
F_GETFL
Ë!
m
Ë
	`e
(11);

209 i‡(
	`f˙é
(
fd
, 
F_SETFL
, 
O_NONBLOCK
Ë!0Ë
	`e
(12);

210 i‡(
	`f˙é
(
fd
, 
F_GETFL
Ë!(
O_NONBLOCK
 | 
m
)Ë
	`e
(13);

211 i‡(
	`f˙é
(
fd
, 
F_SETFL
, 0Ë!0Ë
	`e
(14);

212 i‡(
	`f˙é
(
fd
, 
F_GETFL
Ë!
m
Ë
	`e
(15);

215 i‡(
	`f˙é
(
fd
, 
F_SETFL
, 
O_APPEND
|
O_NONBLOCK
Ë!0Ë
	`e
(16);

216 i‡(
	`f˙é
(
fd
, 
F_GETFL
Ë!(
O_NONBLOCK
 | 
O_APPEND
 | 
m
)Ë
	`e
(17);

217 i‡(
	`f˙é
(
fd
, 
F_SETFL
, 0Ë!0Ë
	`e
(18);

218 i‡(
	`f˙é
(
fd
, 
F_GETFL
Ë!
m
Ë
	`e
(19);

221 i‡–(
√wfd
 = 
	`f˙é
(
fd
, 
F_DUPFD
, 0)Ë!4Ë
	`e
(20);

222 i‡–(
√wfd2
 = 
	`f˙é
(
fd
, 
F_DUPFD
, 0)Ë!5Ë
	`e
(21);

223 i‡(
	`˛o£
(
√wfd
Ë!0Ë
	`e
(22);

224 i‡–(
√wfd
 = 
	`f˙é
(
fd
, 
F_DUPFD
, 0)Ë!4Ë
	`e
(23);

225 i‡(
	`˛o£
(
√wfd
Ë!0Ë
	`e
(24);

226 i‡–(
√wfd
 = 
	`f˙é
(
fd
, 
F_DUPFD
, 5)Ë!6Ë
	`e
(25);

227 i‡(
	`˛o£
(
√wfd2
Ë!0Ë
	`e
(26);

230 i‡(
	`f˙é
(
fd
, 
F_SETFD
, 
FD_CLOEXEC
Ë!0Ë
	`e
(26);

231 i‡(
	`f˙é
(
fd
, 
F_SETFL
, 
O_APPEND
Ë!0Ë
	`e
(27);

232 i‡–(
√wfd2
 = 
	`f˙é
(
fd
, 
F_DUPFD
, 10)Ë!10Ë
	`e
(28);

233 i‡(
	`f˙é
(
√wfd2
, 
F_GETFD
Ë!0Ë
	`e
(29);

234 i‡(
	`f˙é
(
√wfd2
, 
F_GETFL
Ë!(
O_APPEND
 | 
m
)Ë
	`e
(30);

235 i‡(
	`f˙é
(
fd
, 
F_SETFD
, 0Ë!0Ë
	`e
(31);

238 i‡(
	`f°©
(
fd
, &
°©1
Ë!0Ë
	`e
(32);

239 i‡(
	`f°©
(
fd
, &
°©2
Ë!0Ë
	`e
(33);

240 i‡(
	`f°©
(
fd
, &
°©3
Ë!0Ë
	`e
(34);

241 i‡(
°©1
.
°_dev
 !
°©2
.°_devË
	`e
(35);

242 i‡(
°©1
.
°_dev
 !
°©3
.°_devË
	`e
(36);

243 i‡(
°©1
.
°_öo
 !
°©2
.°_öoË
	`e
(37);

244 i‡(
°©1
.
°_öo
 !
°©3
.°_öoË
	`e
(38);

247 i‡(
fd
 !3 || 
√wfd2
 !10 || 
√wfd
 !6Ë
	`e
(39);

248 i‡(
	`f˙é
(
fd
, 
F_SETFD
, 
FD_CLOEXEC
Ë!0Ë
	`e
(40);

249 i‡(
	`f˙é
(
√wfd2
, 
F_SETFD
, 
FD_CLOEXEC
Ë!0Ë
	`e
(41);

250 i‡(
	`f˙é
(
√wfd
, 
F_SETFD
, 0Ë!0Ë
	`e
(42);

251 i‡(
	`f‹k
()) {

252 
	`waô
(&
s
);

253 i‡(
	`WEXITSTATUS
(
s
Ë!0Ë
	`e
(43);

255 
	`exe˛e
("../ã°7", "ã°7", "0", (*Ë0, 
ívú⁄
);

256 
	`exô
(1);

260 i‡(
	`f˙é
(
fd
, 
F_SETFD
, 0Ë!0Ë
	`e
(44);

261 i‡(
	`f˙é
(
√wfd2
, 
F_SETFD
, 0Ë!0Ë
	`e
(45);

262 i‡(
	`˛o£
(
fd
Ë!0Ë
	`e
(46);

263 i‡(
	`˛o£
(
√wfd
Ë!0Ë
	`e
(47);

264 i‡(
	`˛o£
(
√wfd2
Ë!0Ë
	`e
(48);

265 
	}
}

268 
	$ã°7d
()

272 
subã°
 = 4;

274 i‡–(
xfd
 = 
	`¸ót
("T7.d", 0777)Ë!3Ë
	`e
(1);

275 
	`˛o£
(
xfd
);

276 i‡–(
xfd
 = 
	`›í
("T7.d", 
O_RDWR
)Ë< 0Ë
	`e
(2);

277 i‡(
	`wrôe
(
xfd
, 
buf
, 
ITEMS
Ë!ITEMSË
	`e
(3);

278 i‡(
	`£t
(
WRITE
, 0, 3Ë!0Ë
	`e
(4);

279 i‡(
	`£t
(
WRITE
, 5, 9Ë!0Ë
	`e
(5);

280 i‡(
	`£t
(
UNLOCK
, 0, 3Ë!0Ë
	`e
(6);

281 i‡(
	`£t
(
UNLOCK
, 4, 9Ë!0Ë
	`e
(7);

283 i‡(
	`£t
(
READ
, 1, 4Ë!0Ë
	`e
(8);

284 i‡(
	`£t
(
READ
, 4, 7Ë!0Ë
	`e
(9);

285 i‡(
	`£t
(
UNLOCK
, 4, 7Ë!0Ë
	`e
(10);

286 i‡(
	`£t
(
UNLOCK
, 1, 4Ë!0Ë
	`e
(11);

288 i‡(
	`£t
(
WRITE
, 0, 3Ë!0Ë
	`e
(12);

289 i‡(
	`£t
(
WRITE
, 5, 7Ë!0Ë
	`e
(13);

290 i‡(
	`£t
(
WRITE
, 9 ,10Ë!0Ë
	`e
(14);

291 i‡(
	`£t
(
UNLOCK
, 0, 4Ë!0Ë
	`e
(15);

292 i‡(
	`£t
(
UNLOCK
, 0, 7Ë!0Ë
	`e
(16);

293 i‡(
	`£t
(
UNLOCK
, 0, 2000Ë!0Ë
	`e
(17);

295 i‡(
	`£t
(
WRITE
, 0, 3Ë!0Ë
	`e
(18);

296 i‡(
	`£t
(
WRITE
, 5, 7Ë!0Ë
	`e
(19);

297 i‡(
	`£t
(
WRITE
, 9 ,10Ë!0Ë
	`e
(20);

298 i‡(
	`£t
(
UNLOCK
, 0, 100Ë!0Ë
	`e
(21);

300 i‡(
	`£t
(
WRITE
, 0, 9Ë!0Ë
	`e
(22);

301 i‡(
	`£t
(
UNLOCK
, 8, 9Ë!0Ë
	`e
(23);

302 i‡(
	`£t
(
UNLOCK
, 0, 2Ë!0Ë
	`e
(24);

303 i‡(
	`£t
(
UNLOCK
, 5, 5Ë!0Ë
	`e
(25);

304 i‡(
	`£t
(
UNLOCK
, 4, 6Ë!0Ë
	`e
(26);

305 i‡(
	`£t
(
UNLOCK
, 3, 3Ë!0Ë
	`e
(27);

306 i‡(
	`£t
(
UNLOCK
, 7, 7Ë!0Ë
	`e
(28);

308 i‡(
	`£t
(
WRITE
, 0, 10Ë!0Ë
	`e
(29);

309 i‡(
	`£t
(
UNLOCK
, 0, 1000Ë!0Ë
	`e
(30);

312 i‡(
	`£t
(
WRITE
, 0, 4Ë!0Ë
	`e
(31);

313 i‡(
	`£t
(
WRITE
, 4, 7Ë!0Ë
	`e
(32);

314 i‡(
	`£t
(
WRITE
, 5, 10Ë!0Ë
	`e
(33);

315 i‡(
	`£t
(
UNLOCK
, 0, 11Ë!0Ë
	`e
(34);

318 i‡(
	`£t
(
WRITE
, 2, 1Ë!0Ë
	`e
(35);

319 i‡(
	`£t
(
WRITE
, 9,10Ë!0Ë
	`e
(36);

320 i‡(
	`£t
(
WRITE
, 3, 3Ë!0Ë
	`e
(37);

321 i‡(
	`£t
(
UNLOCK
, 0, -1Ë!0Ë
	`e
(38);

324 i‡(
	`£t
(
WRITE
, 2, 3Ë!0Ë
	`e
(39);

325 i‡(
	`locked
(1Ë!
U
Ë
	`e
(40);

326 i‡(
	`locked
(2Ë!
L
Ë
	`e
(41);

327 i‡(
	`locked
(3Ë!
L
Ë
	`e
(42);

328 i‡(
	`locked
(4Ë!
U
Ë
	`e
(43);

329 i‡(
	`£t
(
UNLOCK
, 2, 3Ë!0Ë
	`e
(44);

330 i‡(
	`locked
(2Ë!
U
Ë
	`e
(45);

331 i‡(
	`locked
(3Ë!
U
Ë
	`e
(46);

333 
	`˛o£
(
xfd
);

334 
	}
}

336 
	$ã°7e
()

340 
pid
, 
s
;

342 
subã°
 = 5;

344 i‡–(
xfd
 = 
	`¸ót
("T7.e", 0777)Ë!3Ë
	`e
(1);

345 i‡(
	`˛o£
(
xfd
Ë!0Ë
	`e
(2);

346 i‡–(
xfd
 = 
	`›í
("T7.e", 
O_RDWR
)Ë< 0Ë
	`e
(3);

347 i‡(
	`wrôe
(
xfd
, 
buf
, 
ITEMS
Ë!ITEMSË
	`e
(4);

348 i‡(
	`£t
(
WRITE
, 0, 3Ë!0Ë
	`e
(5);

350 i‡–(
pid
 = 
	`f‹k
()) ) {

352 
	`ac˚ss
("T7.e1", 0) != 0) ;

353 
	`u∆ök
("T7.e1");

354 
	`¶ìp
(1);

355 i‡(
	`kûl
(
pid
, 
SIGKILL
Ë< 0Ë
	`e
(6);

356 i‡(
	`waô
(&
s
Ë!
pid
Ë
	`e
(7);

359 i‡(
	`¸ót
("T7.e1", 0777Ë< 0Ë
	`e
(8);

360 
func_code
 = 
F_SETLKW
;

361 i‡(
	`£t
(
WRITE
, 0, 3Ë!0Ë
	`e
(9);

362 
î∫o
 = -1000;

363 
	`e
(10);

364 
	`exô
(0);

366 
	`˛o£
(
xfd
);

367 
	}
}

369 
	$ã°7f
()

373 
pid
, 
s
;

375 
subã°
 = 6;

377 i‡–(
xfd
 = 
	`¸ót
("T7.f", 0777)Ë!3Ë
	`e
(1);

378 i‡(
	`˛o£
(
xfd
Ë!0Ë
	`e
(2);

379 i‡–(
xfd
 = 
	`›í
("T7.f", 
O_RDWR
)Ë< 0Ë
	`e
(3);

380 i‡(
	`wrôe
(
xfd
, 
buf
, 
ITEMS
Ë!ITEMSË
	`e
(4);

381 i‡(
	`£t
(
WRITE
, 0, 3Ë!0Ë
	`e
(5);

383 i‡–(
pid
 = 
	`f‹k
()) ) {

385 
	`ac˚ss
("T7.f1", 0) != 0) ;

386 
	`u∆ök
("T7.f1");

387 
	`¶ìp
(1);

388 i‡(
	`kûl
(
pid
, 
SIGTERM
Ë< 0Ë
	`e
(6);

389 i‡(
	`waô
(&
s
Ë!
pid
Ë
	`e
(7);

390 i‡–(
s
>>8Ë!19Ë
	`e
(8);

398 
siga˘i⁄
 
ß
, 
oß
;

400 
ß
.
ß_h™dÀr
 = 
sigfunc
;

401 
	`sigem±y£t
(&
ß
.
ß_mask
);

402 
ß
.
ß_Êags
 = 0;

403 i‡(
	`siga˘i⁄
(
SIGTERM
, &
ß
, &
oß
Ë< 0Ë
	`e
(999);

404 i‡(
	`¸ót
("T7.f1", 0777Ë< 0Ë
	`e
(9);

405 
func_code
 = 
F_SETLKW
;

406 i‡(
	`£t
(
WRITE
, 0, 3Ë!-1Ë
	`e
(10);

407 i‡(
î∫o
 !
EINTR
Ë
	`e
(11);

408 
	`exô
(19);

410 
	`˛o£
(
xfd
);

411 
	}
}

414 
	$ã°7g
()

418 
pid
, 
s
;

420 
subã°
 = 7;

422 i‡–(
xfd
 = 
	`¸ót
("T7.g", 0777)Ë!3Ë
	`e
(1);

423 i‡(
	`˛o£
(
xfd
Ë!0Ë
	`e
(2);

424 i‡–(
xfd
 = 
	`›í
("T7.g", 
O_RDWR
)Ë< 0Ë
	`e
(3);

425 i‡(
	`wrôe
(
xfd
, 
buf
, 
ITEMS
Ë!ITEMSË
	`e
(4);

426 i‡(
	`£t
(
WRITE
, 0, 3Ë!0Ë
	`e
(5);

428 i‡–(
pid
 = 
	`f‹k
()) ) {

430 
	`ac˚ss
("T7.g1", 0) != 0) ;

431 
	`u∆ök
("T7.g1");

432 
	`¶ìp
(1);

433 i‡(
	`£t
(
UNLOCK
, 0, 3Ë!0Ë
	`e
(5);

434 i‡(
	`waô
(&
s
Ë!
pid
Ë
	`e
(6);

435 i‡–(
s
 >> 8Ë!29Ë
	`e
(7);

438 
func_code
 = 
F_SETLKW
;

439 i‡(
	`¸ót
("T7.g1", 0777Ë< 0Ë
	`e
(8);

440 i‡(
	`£t
(
WRITE
, 3, 3Ë!0Ë
	`e
(9);

441 i‡(
	`£t
(
UNLOCK
, 3, 3Ë!0Ë
	`e
(10);

442 
	`exô
(29);

444 
	`˛o£
(
xfd
);

445 
	}
}

448 
	$ã°7h
()

452 
pid
, 
pid2
, 
s
, 
w
;

454 
subã°
 = 8;

456 i‡–(
xfd
 = 
	`¸ót
("T7.h", 0777)Ë!3Ë
	`e
(1);

457 i‡(
	`˛o£
(
xfd
Ë!0Ë
	`e
(2);

458 i‡–(
xfd
 = 
	`›í
("T7.h", 
O_RDWR
)Ë< 0Ë
	`e
(3);

459 i‡(
	`wrôe
(
xfd
, 
buf
, 
ITEMS
Ë!ITEMSË
	`e
(4);

460 i‡(
	`£t
(
WRITE
, 0, 3Ë!0Ë
	`e
(5);

462 i‡–(
pid
 = 
	`f‹k
()) ) {

463 i‡–(
pid2
 = 
	`f‹k
()) ) {

465 
	`ac˚ss
("T7.h1", 0) != 0) ;

466 
	`ac˚ss
("T7.h2", 0) != 0) ;

467 
	`u∆ök
("T7.h1");

468 
	`u∆ök
("T7.h2");

469 
	`¶ìp
(1);

470 i‡(
	`£t
(
UNLOCK
, 0, 3Ë!0Ë
	`e
(6);

471 
w
 = 
	`waô
(&
s
);

472 i‡(
w
 !
pid
 && w !
pid2
Ë
	`e
(7);

473 
s
 = s >> 8;

474 i‡(
s
 !39 && s !49Ë
	`e
(8);

475 
w
 = 
	`waô
(&
s
);

476 i‡(
w
 !
pid
 && w !
pid2
Ë
	`e
(9);

477 
s
 = s >> 8;

478 i‡(
s
 !39 && s !49Ë
	`e
(10);

480 
func_code
 = 
F_SETLKW
;

481 i‡(
	`¸ót
("T7.h1", 0777Ë< 0Ë
	`e
(11);

482 i‡(
	`£t
(
WRITE
, 0, 0Ë!0Ë
	`e
(12);

483 i‡(
	`£t
(
UNLOCK
, 0, 0Ë!0Ë
	`e
(13);

484 
	`exô
(39);

488 
func_code
 = 
F_SETLKW
;

489 i‡(
	`¸ót
("T7.h2", 0777Ë< 0Ë
	`e
(14);

490 i‡(
	`£t
(
WRITE
, 0, 1Ë!0Ë
	`e
(15);

491 i‡(
	`£t
(
UNLOCK
, 0, 1Ë!0Ë
	`e
(16);

492 
	`exô
(49);

494 
	`˛o£
(
xfd
);

495 
	}
}

497 
	$ã°7i
()

501 
tfd
, 
i
;

503 
subã°
 = 9;

505 
î∫o
 = 0;

506 i‡–(
xfd
 = 
	`¸ót
("T7.i", 0777)Ë!3Ë
	`e
(1);

507 i‡(
	`˛o£
(
xfd
Ë!0Ë
	`e
(2);

508 i‡–(
xfd
 = 
	`›í
("T7.i", 
O_RDWR
)Ë< 0Ë
	`e
(3);

509 i‡(
	`wrôe
(
xfd
, 
buf
, 
ITEMS
Ë!ITEMSË
	`e
(4);

510 i‡(
	`£t
(
WRITE
, 0, 3Ë!0Ë
	`e
(5);

511 i‡(
	`£t
(
WRITE
, 0, 0Ë!0Ë
	`e
(6);

512 i‡(
î∫o
 !0Ë
	`e
(7);

513 
î∫o
 = 0;

514 i‡(
	`£t
(
WRITE
, 3, 3Ë!0Ë
	`e
(8);

515 i‡(
î∫o
 !0Ë
	`e
(9);

516 
tfd
 = 
xfd
;

517 
xfd
 = -99;

518 
î∫o
 = 0;

519 i‡(
	`£t
(
WRITE
, 0, 0Ë!-1Ë
	`e
(10);

520 i‡(
î∫o
 !
EBADF
Ë
	`e
(11);

522 
î∫o
 = 0;

523 i‡–(
xfd
 = 
	`›í
("T7.i", 
O_WRONLY
)Ë< 0Ë
	`e
(12);

524 i‡(
	`£t
(
READ
, 0, 0Ë!-1Ë
	`e
(13);

525 i‡(
î∫o
 !
EBADF
Ë
	`e
(14);

526 i‡(
	`˛o£
(
xfd
Ë!0Ë
	`e
(15);

528 
î∫o
 = 0;

529 i‡–(
xfd
 = 
	`›í
("T7.i", 
O_RDONLY
)Ë< 0Ë
	`e
(16);

530 i‡(
	`£t
(
WRITE
, 0, 0Ë!-1Ë
	`e
(17);

531 i‡(
î∫o
 !
EBADF
Ë
	`e
(18);

532 i‡(
	`˛o£
(
xfd
Ë!0Ë
	`e
(19);

533 
xfd
 = 
tfd
;

536 
î∫o
 = 0;

537 i‡(
	`f˙é
(
xfd
, 
F_DUPFD
, 
OPEN_MAX
Ë!-1Ë
	`e
(20);

538 i‡(
î∫o
 !
EINVAL
Ë
	`e
(21);

539 
î∫o
 = 0;

540 i‡(
	`f˙é
(
xfd
, 
F_DUPFD
, -1Ë!-1Ë
	`e
(22);

541 i‡(
î∫o
 !
EINVAL
Ë
	`e
(23);

543 
xfd
 = 0;

544 
î∫o
 = 0;

545 i‡(
	`£t
(
READ
, 0, 0Ë!-1Ë
	`e
(24);

546 i‡(
î∫o
 !
EINVAL
Ë
	`e
(25);

547 
xfd
 = 
tfd
;

550 
i
 = 0; i < 
ITEMS
; i++) {

551 i‡(
	`£t
(
WRITE
, 
i
, i) == 0) ;

552 i‡(
î∫o
 !
ENOLCK
) {

553 
	`e
(26);

560 
i
 = 
xfd
 + 1; i < 
OPEN_MAX
; i++Ë
	`›í
("T7.i", 0);

561 
î∫o
 = 0;

562 i‡(
	`f˙é
(
xfd
, 
F_DUPFD
, 0Ë!-1Ë
	`e
(27);

563 i‡(
î∫o
 !
EMFILE
Ë
	`e
(28);

565 
i
 = 
xfd
; i < 
OPEN_MAX
; i++Ëi‡(
	`˛o£
(iË!0Ë
	`e
(29);

566 
	}
}

569 
	$ã°7j
()

573 
s
;

575 
subã°
 = 10;

577 i‡–(
xfd
 = 
	`¸ót
("T7.j", 0777)Ë!3Ë
	`e
(1);

578 
	`˛o£
(
xfd
);

579 i‡–(
xfd
 = 
	`›í
("T7.j", 
O_RDWR
)Ë< 0Ë
	`e
(2);

580 i‡(
	`wrôe
(
xfd
, 
buf
, 
ITEMS
Ë!ITEMSË
	`e
(3);

581 i‡(
	`£t
(
WRITE
, 0, 4Ë!0Ë
	`e
(4);

582 i‡(
	`£t
(
READ
, 10, 16Ë!0Ë
	`e
(5);

585 i‡(
	`f‹k
()) {

587 
	`waô
(&
s
);

590 
î∫o
 = -100;

591 i‡(
	`£t
(
WRITE
, 5, 7Ë< 0Ë
	`e
(6);

592 i‡(
	`£t
(
WRITE
, 4, 7Ë>0Ë
	`e
(7);

593 i‡(
î∫o
 !
EACCES
 &&Éºnÿ!
EAGAIN
Ë
	`e
(8);

594 i‡(
	`£t
(
WRITE
, 5, 9Ë!0Ë
	`e
(9);

595 i‡(
	`£t
(
UNLOCK
, 5, 9Ë!0Ë
	`e
(10);

596 i‡(
	`£t
(
READ
, 9, 17Ë< 0Ë
	`e
(11);

597 
	`exô
(0);

599 
	`˛o£
(
xfd
);

600 
	}
}

602 
	$˛€xec_ã°
()

611 i‡(
	`˛o£
(3Ë=0Ë
	`e
(1001);

612 i‡(
	`˛o£
(6Ë!0Ë
	`e
(1002);

613 i‡(
	`˛o£
(10Ë=0Ë
	`e
(1003);

614 
	`fÊush
(
°dout
);

615 
	`exô
(0);

616 
	}
}

619 
	$£t
(
how
, 
fú°
, 
œ°
)

620 
how
, 
fú°
, 
œ°
;

622 
r
;

623 
Êock
 flock;

625 i‡(
how
 =
READ
Ë
Êock
.
l_ty≥
 = 
F_RDLCK
;

626 i‡(
how
 =
WRITE
Ë
Êock
.
l_ty≥
 = 
F_WRLCK
;

627 i‡(
how
 =
UNLOCK
Ë
Êock
.
l_ty≥
 = 
F_UNLCK
;

628 
Êock
.
l_whí˚
 = 
whí˚
;

629 
Êock
.
l_°¨t
 = (Ë
fú°
;

630 
Êock
.
l_Àn
 = (Ë
œ°
 - (Ë
fú°
 + 1;

631 
r
 = 
	`f˙é
(
xfd
, 
func_code
, &
Êock
);

632 i‡(
r
 != -1)

636 
	}
}

638 
	$locked
(
b
)

639 
b
;

642 
Êock
 flock;

643 
pid_t
 
pid
;

644 
°©us
;

646 
Êock
.
l_ty≥
 = 
F_WRLCK
;

647 
Êock
.
l_whí˚
 = 
whí˚
;

648 
Êock
.
l_°¨t
 = (Ë
b
;

649 
Êock
.
l_Àn
 = 1;

652 
pid
 = 
	`f‹k
();

653 i‡(
pid
 == 0) {

654 i‡(
	`f˙é
(
xfd
, 
F_GETLK
, &
Êock
Ë!0Ë
	`e
(2000);

655 
	`exô
(
Êock
.
l_ty≥
 =
F_UNLCK
 ? 
U
 : 
L
);

657 i‡(
pid
 =-1Ë
	`e
(2001);

658 i‡(
	`f˙é
(
xfd
, 
F_GETLK
, &
Êock
Ë!0Ë
	`e
(2002);

659 i‡(
Êock
.
l_ty≥
 !
F_UNLCK
Ë
	`e
(2003);

660 i‡(
	`waô
(&
°©us
Ë!
pid
Ë
	`e
(2004);

661 i‡(!
	`WIFEXITED
(
°©us
)Ë
	`e
(2005);

662 (
	`WEXITSTATUS
(
°©us
));

663 
	}
}

665 
	$e
(
n
)

666 
n
;

668 
îr_num
 = 
î∫o
;

670 
	`¥ötf
("Subã° %d,Éº‹ %dÉºno=%d ", 
subã°
, 
n
, 
î∫o
);

671 
	`fÊush
(
°dout
);

672 
î∫o
 = 
îr_num
;

673 
	`≥º‹
("");

674 i‡(
îr˘
++ > 
MAX_ERROR
) {

675 
	`¥ötf
("Too manyÉrrors;Åestáborted\n");

676 
	`chdú
("..");

677 
	`sy°em
("rm -rf DIR*");

678 
	`exô
(1);

680 
	}
}

682 
	$sigfunc
(
s
)

683 
s
;

685 
	}
}

687 
	$quô
()

690 
	`chdú
("..");

691 
	`sy°em
("rm -rf DIR*");

693 i‡(
îr˘
 == 0) {

694 
	`¥ötf
("ok\n");

695 
	`exô
(0);

697 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

698 
	`exô
(1);

700 
	}
}

	@test8.c

3 
	~<sys/ty≥s.h
>

4 
	~<sys/times.h
>

5 #ifde‡
_MINIX


6 
	~<sys/sigc⁄ãxt.h
>

8 
	~<sys/waô.h
>

9 
	~<î∫o.h
>

10 
	~<sig«l.h
>

11 
	~<£tjmp.h
>

12 
	~<°dlib.h
>

13 
	~<uni°d.h
>

14 
	~<°dio.h
>

16 
	#ITERATIONS
 2

	)

17 
	#SIGS
 14

	)

18 
	#MAX_ERROR
 4

	)

20 
	gôî©i⁄
, 
	gcumsig
, 
	gsubã°
, 
	gîr˘
 = 0, 
	gsig1
, 
	gsig2
;

22 
	gsig¨øy
[
SIGS
] = {
SIGHUP
, 
SIGILL
, 
SIGTRAP
, 
SIGABRT
, 
SIGIOT
, 
SIGUNUSED
,

23 
SIGFPE
, 
SIGUSR1
, 
SIGSEGV
, 
SIGUSR2
, 
SIGPIPE
, 
SIGALRM
,

24 
SIGTERM
};

27 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
 []));

28 
_PROTOTYPE
(
ã°8a
, ());

29 
_PROTOTYPE
(
func1
, (
sig
));

30 
_PROTOTYPE
(
func2
, (
sig
));

31 
_PROTOTYPE
(
ã°8b
, ());

32 
_PROTOTYPE
(
ˇtch1
, (
signo
));

33 
_PROTOTYPE
(
ˇtch2
, (
signo
));

34 
_PROTOTYPE
(
ã°8c
, ());

35 
_PROTOTYPE
(
ˇtch3
, (
signo
));

36 
_PROTOTYPE
(
ã°8d
, ());

37 
_PROTOTYPE
(
ˇtch4
, (
signo
));

38 
_PROTOTYPE
(
ã°8e
, ());

39 
_PROTOTYPE
(
ˇtch5
, (
signo
));

40 
_PROTOTYPE
(
ã°8f
, ());

41 
_PROTOTYPE
(
sigöt_h™dÀr
, (
signo
));

42 
_PROTOTYPE
(
sigpùe_h™dÀr
, (
signo
));

43 
_PROTOTYPE
(
ã°8g
, ());

44 
_PROTOTYPE
(
sighup8
, (
signo
));

45 
_PROTOTYPE
(
sigpù8
, (
signo
));

46 
_PROTOTYPE
(
sigãr8
, (
signo
));

47 
_PROTOTYPE
(
ã°8h
, ());

48 
_PROTOTYPE
(
sighup9
, (
signo
));

49 
_PROTOTYPE
(
sigãr9
, (
signo
));

50 
_PROTOTYPE
(
ã°8i
, ());

51 
_PROTOTYPE
(
sighup10
, (
signo
));

52 
_PROTOTYPE
(
sigÆrm_h™dÀr10
, (
signo
));

53 
_PROTOTYPE
(
ã°8j
, ());

54 
_PROTOTYPE
(
ã°8k
, ());

55 
_PROTOTYPE
(
ã°8l
, ());

56 
_PROTOTYPE
(
func_m1
, ());

57 
_PROTOTYPE
(
func_m2
, ());

58 
_PROTOTYPE
(
ã°8m
, ());

59 
_PROTOTYPE
(
l⁄gjîr
, ());

60 
_PROTOTYPE
(
ˇtch14
, (
signo
, 
code
, 
sigc⁄ãxt
 * 
s˝
));

61 
_PROTOTYPE
(
ã°8n
, ());

62 
_PROTOTYPE
(
ˇtch15
, (
signo
));

63 
_PROTOTYPE
(
ã°8o
, ());

64 
_PROTOTYPE
(
˛órsig°©e
, ());

65 
_PROTOTYPE
(
quô
, ());

66 
_PROTOTYPE
(
waô_f‹
, (
pid
));

67 
_PROTOTYPE
(
e
, (
n
));

69 
	$maö
(
¨gc
, 
¨gv
)

70 
¨gc
;

71 *
¨gv
[];

73 
i
, 
m
 = 0xFFFF;

75 
	`sync
();

77 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

79 
	`¥ötf
("Test 8 ");

80 
	`fÊush
(
°dout
);

82 
	`sy°em
("rm -rf DIR_08; mkdir DIR_08");

83 
	`chdú
("DIR_08");

86 
i
 = 0; i < 
ITERATIONS
; i++) {

87 
ôî©i⁄
 = 
i
;

88 i‡(
m
 & 0000001Ë
	`ã°8a
();

89 i‡(
m
 & 0000002Ë
	`ã°8b
();

90 i‡(
m
 & 0000004Ë
	`ã°8c
();

91 i‡(
m
 & 0000010Ë
	`ã°8d
();

92 i‡(
m
 & 0000020Ë
	`ã°8e
();

93 i‡(
m
 & 0000040Ë
	`ã°8f
();

94 i‡(
m
 & 0000100Ë
	`ã°8g
();

95 i‡(
m
 & 0000200Ë
	`ã°8h
();

96 i‡(
m
 & 0000400Ë
	`ã°8i
();

97 i‡(
m
 & 0001000Ë
	`ã°8j
();

98 i‡(
m
 & 0002000Ë
	`ã°8k
();

99 i‡(
m
 & 0004000Ë
	`ã°8l
();

100 i‡(
m
 & 0010000Ë
	`ã°8m
();

101 i‡(
m
 & 0020000Ë
	`ã°8n
();

102 i‡(
m
 & 0040000Ë
	`ã°8o
();

105 
	`quô
();

107 
	}
}

110 
	$ã°8a
()

114 
sig£t_t
 
s
;

116 
subã°
 = 1;

117 
	`˛órsig°©e
();

120 i‡(
	`sigem±y£t
(&
s
Ë!0Ë
	`e
(1);

121 i‡(
	`sigismembî
(&
s
, 
SIGHUP
Ë!0Ë
	`e
(2);

122 i‡(
	`sigismembî
(&
s
, 
SIGINT
Ë!0Ë
	`e
(3);

123 i‡(
	`sigismembî
(&
s
, 
SIGQUIT
Ë!0Ë
	`e
(4);

124 i‡(
	`sigismembî
(&
s
, 
SIGILL
Ë!0Ë
	`e
(5);

125 i‡(
	`sigismembî
(&
s
, 
SIGTRAP
Ë!0Ë
	`e
(6);

126 i‡(
	`sigismembî
(&
s
, 
SIGABRT
Ë!0Ë
	`e
(7);

127 i‡(
	`sigismembî
(&
s
, 
SIGIOT
Ë!0Ë
	`e
(8);

128 i‡(
	`sigismembî
(&
s
, 
SIGUNUSED
Ë!0Ë
	`e
(9);

129 i‡(
	`sigismembî
(&
s
, 
SIGFPE
Ë!0Ë
	`e
(10);

130 i‡(
	`sigismembî
(&
s
, 
SIGKILL
Ë!0Ë
	`e
(11);

131 i‡(
	`sigismembî
(&
s
, 
SIGUSR1
Ë!0Ë
	`e
(12);

132 i‡(
	`sigismembî
(&
s
, 
SIGSEGV
Ë!0Ë
	`e
(13);

133 i‡(
	`sigismembî
(&
s
, 
SIGUSR2
Ë!0Ë
	`e
(14);

134 i‡(
	`sigismembî
(&
s
, 
SIGPIPE
Ë!0Ë
	`e
(15);

135 i‡(
	`sigismembî
(&
s
, 
SIGALRM
Ë!0Ë
	`e
(16);

136 i‡(
	`sigismembî
(&
s
, 
SIGTERM
Ë!0Ë
	`e
(17);

139 i‡(
	`sigfûl£t
(&
s
Ë!0Ë
	`e
(19);

140 i‡(
	`sigem±y£t
(&
s
Ë!0Ë
	`e
(20);

141 i‡(
	`sigfûl£t
(&
s
Ë!0Ë
	`e
(21);

142 i‡(
	`sigismembî
(&
s
, 
SIGHUP
Ë!1Ë
	`e
(22);

143 i‡(
	`sigismembî
(&
s
, 
SIGINT
Ë!1Ë
	`e
(23);

144 i‡(
	`sigismembî
(&
s
, 
SIGQUIT
Ë!1Ë
	`e
(24);

145 i‡(
	`sigismembî
(&
s
, 
SIGILL
Ë!1Ë
	`e
(25);

146 i‡(
	`sigismembî
(&
s
, 
SIGTRAP
Ë!1Ë
	`e
(26);

147 i‡(
	`sigismembî
(&
s
, 
SIGABRT
Ë!1Ë
	`e
(27);

148 i‡(
	`sigismembî
(&
s
, 
SIGIOT
Ë!1Ë
	`e
(28);

149 i‡(
	`sigismembî
(&
s
, 
SIGUNUSED
Ë!1Ë
	`e
(29);

150 i‡(
	`sigismembî
(&
s
, 
SIGFPE
Ë!1Ë
	`e
(30);

151 i‡(
	`sigismembî
(&
s
, 
SIGKILL
Ë!1Ë
	`e
(31);

152 i‡(
	`sigismembî
(&
s
, 
SIGUSR1
Ë!1Ë
	`e
(32);

153 i‡(
	`sigismembî
(&
s
, 
SIGSEGV
Ë!1Ë
	`e
(33);

154 i‡(
	`sigismembî
(&
s
, 
SIGUSR2
Ë!1Ë
	`e
(34);

155 i‡(
	`sigismembî
(&
s
, 
SIGPIPE
Ë!1Ë
	`e
(35);

156 i‡(
	`sigismembî
(&
s
, 
SIGALRM
Ë!1Ë
	`e
(36);

157 i‡(
	`sigismembî
(&
s
, 
SIGTERM
Ë!1Ë
	`e
(37);

160 i‡(
	`sigem±y£t
(&
s
Ë!0Ë
	`e
(39);

161 i‡(
	`sigadd£t
(&
s
, 
SIGHUP
Ë!0Ë
	`e
(40);

162 i‡(
	`sigadd£t
(&
s
, 
SIGINT
Ë!0Ë
	`e
(41);

163 i‡(
	`sigadd£t
(&
s
, 
SIGQUIT
Ë!0Ë
	`e
(42);

164 i‡(
	`sigadd£t
(&
s
, 
SIGILL
Ë!0Ë
	`e
(43);

165 i‡(
	`sigadd£t
(&
s
, 
SIGTRAP
Ë!0Ë
	`e
(44);

168 i‡(
	`sigismembî
(&
s
, 
SIGHUP
Ë!1Ë
	`e
(45);

169 i‡(
	`sigismembî
(&
s
, 
SIGINT
Ë!1Ë
	`e
(46);

170 i‡(
	`sigismembî
(&
s
, 
SIGQUIT
Ë!1Ë
	`e
(47);

171 i‡(
	`sigismembî
(&
s
, 
SIGILL
Ë!1Ë
	`e
(48);

172 i‡(
	`sigismembî
(&
s
, 
SIGTRAP
Ë!1Ë
	`e
(49);

175 i‡(
	`sigismembî
(&
s
, 
SIGABRT
Ë!0Ë
	`e
(50);

176 i‡(
	`sigismembî
(&
s
, 
SIGIOT
Ë!0Ë
	`e
(51);

177 i‡(
	`sigismembî
(&
s
, 
SIGUNUSED
Ë!0Ë
	`e
(52);

178 i‡(
	`sigismembî
(&
s
, 
SIGFPE
Ë!0Ë
	`e
(53);

179 i‡(
	`sigismembî
(&
s
, 
SIGKILL
Ë!0Ë
	`e
(54);

180 i‡(
	`sigismembî
(&
s
, 
SIGUSR1
Ë!0Ë
	`e
(55);

181 i‡(
	`sigismembî
(&
s
, 
SIGSEGV
Ë!0Ë
	`e
(56);

182 i‡(
	`sigismembî
(&
s
, 
SIGUSR2
Ë!0Ë
	`e
(57);

183 i‡(
	`sigismembî
(&
s
, 
SIGPIPE
Ë!0Ë
	`e
(58);

184 i‡(
	`sigismembî
(&
s
, 
SIGALRM
Ë!0Ë
	`e
(59);

185 i‡(
	`sigismembî
(&
s
, 
SIGTERM
Ë!0Ë
	`e
(60);

188 i‡(
	`sigdñ£t
(&
s
, 
SIGHUP
Ë!0Ë
	`e
(62);

189 i‡(
	`sigdñ£t
(&
s
, 
SIGINT
Ë!0Ë
	`e
(63);

190 i‡(
	`sigdñ£t
(&
s
, 
SIGQUIT
Ë!0Ë
	`e
(64);

191 i‡(
	`sigdñ£t
(&
s
, 
SIGILL
Ë!0Ë
	`e
(65);

192 i‡(
	`sigdñ£t
(&
s
, 
SIGTRAP
Ë!0Ë
	`e
(66);

194 i‡(
	`sigismembî
(&
s
, 
SIGHUP
Ë!0Ë
	`e
(67);

195 i‡(
	`sigismembî
(&
s
, 
SIGINT
Ë!0Ë
	`e
(68);

196 i‡(
	`sigismembî
(&
s
, 
SIGQUIT
Ë!0Ë
	`e
(69);

197 i‡(
	`sigismembî
(&
s
, 
SIGILL
Ë!0Ë
	`e
(70);

198 i‡(
	`sigismembî
(&
s
, 
SIGTRAP
Ë!0Ë
	`e
(71);

199 i‡(
	`sigismembî
(&
s
, 
SIGABRT
Ë!0Ë
	`e
(72);

200 i‡(
	`sigismembî
(&
s
, 
SIGIOT
Ë!0Ë
	`e
(73);

201 i‡(
	`sigismembî
(&
s
, 
SIGUNUSED
Ë!0Ë
	`e
(74);

202 i‡(
	`sigismembî
(&
s
, 
SIGFPE
Ë!0Ë
	`e
(75);

203 i‡(
	`sigismembî
(&
s
, 
SIGKILL
Ë!0Ë
	`e
(76);

204 i‡(
	`sigismembî
(&
s
, 
SIGUSR1
Ë!0Ë
	`e
(77);

205 i‡(
	`sigismembî
(&
s
, 
SIGSEGV
Ë!0Ë
	`e
(78);

206 i‡(
	`sigismembî
(&
s
, 
SIGUSR2
Ë!0Ë
	`e
(79);

207 i‡(
	`sigismembî
(&
s
, 
SIGPIPE
Ë!0Ë
	`e
(80);

208 i‡(
	`sigismembî
(&
s
, 
SIGALRM
Ë!0Ë
	`e
(81);

209 i‡(
	`sigismembî
(&
s
, 
SIGTERM
Ë!0Ë
	`e
(82);

210 
	}
}

212 
	$func1
(
sig
)

213 
sig
;

215 
sig1
++;

216 
	}
}

218 
	$func2
(
sig
)

219 
sig
;

221 
sig2
++;

222 
	}
}

224 
	$ã°8b
()

227 
i
;

228 
pid_t
 
p
;

229 
sig£t_t
 
s
, 
s1
, 
s_em±y
, 
s_fuŒ
, 
s_ûl
, 
s_ûl_pù
, 
s_nokûl
;

230 
siga˘i⁄
 
ß
, 
oß
;

232 
subã°
 = 2;

233 
	`˛órsig°©e
();

236 i‡(
	`sigem±y£t
(&
s_em±y
Ë!0Ë
	`e
(1);

237 i‡(
	`sigem±y£t
(&
s_ûl
Ë!0Ë
	`e
(2);

238 i‡(
	`sigem±y£t
(&
s_ûl_pù
Ë!0Ë
	`e
(3);

239 i‡(
	`sigadd£t
(&
s_ûl
, 
SIGILL
Ë!0Ë
	`e
(4);

240 i‡(
	`sigadd£t
(&
s_ûl_pù
, 
SIGILL
Ë!0Ë
	`e
(5);

241 i‡(
	`sigadd£t
(&
s_ûl_pù
, 
SIGPIPE
Ë!0Ë
	`e
(6);

242 i‡(
	`sigfûl£t
(&
s_fuŒ
Ë!0Ë
	`e
(7);

243 
s_nokûl
 = 
s_fuŒ
;

244 i‡(
	`sigdñ£t
(&
s_nokûl
, 
SIGKILL
Ë!0Ë
	`e
(8);

245 #i‚de‡
_MINIX


246 i‡(
SIGSTOP
 > 
_NSIG
Ë
	`e
(666);

248 i‡(
SIGSTOP
 <
_NSIG
 && 
	`sigdñ£t
(&
s_nokûl
, SIGSTOPË!0Ë
	`e
(888);

253 
ß
.
ß_h™dÀr
 = 
SIG_DFL
;

254 
ß
.
ß_mask
 = 
s_em±y
;

255 
ß
.
ß_Êags
 = 0;

256 
i
 = 0; i < 
SIGS
; i++Ë
	`siga˘i⁄
(i, &
ß
, &
oß
);

259 
i
 = 0; i < 
SIGS
; i++Ë
	`siga˘i⁄
(i, (
siga˘i⁄
 *Ë
NULL
, &
oß
);

262 
ß
.
ß_h™dÀr
 = 
func1
;

263 
ß
.
ß_mask
 = 
s_ûl
;

264 
ß
.
ß_Êags
 = 
SA_NODEFER
 | 
SA_NOCLDSTOP
;

265 
oß
.
ß_h™dÀr
 = 
SIG_IGN
;

266 
oß
.
ß_mask
 = 
s_em±y
;

267 
oß
.
ß_Êags
 = 0;

268 i‡(
	`siga˘i⁄
(
SIGHUP
, &
ß
, &
oß
Ë!0Ë
	`e
(9);

269 i‡(
oß
.
ß_h™dÀr
 !
SIG_DFL
Ë
	`e
(10);

270 i‡(
oß
.
ß_mask
 !0Ë
	`e
(11);

271 i‡(
oß
.
ß_Êags
 !
s_em±y
Ë
	`e
(12);

274 
ß
.
ß_h™dÀr
 = 
func2
;

275 
ß
.
ß_mask
 = 
s_ûl_pù
;

276 
ß
.
ß_Êags
 = 
SA_RESETHAND
 | 
SA_NODEFER
;

277 
oß
.
ß_h™dÀr
 = 
SIG_IGN
;

278 
oß
.
ß_mask
 = 
s_em±y
;

279 
oß
.
ß_Êags
 = 0;

280 i‡(
	`siga˘i⁄
(
SIGHUP
, &
ß
, &
oß
Ë!0Ë
	`e
(13);

281 i‡(
oß
.
ß_h™dÀr
 !
func1
Ë
	`e
(14);

282 i‡(
oß
.
ß_mask
 !
s_ûl
Ë
	`e
(15);

283 i‡(
oß
.
ß_Êags
 !
SA_NODEFER


284 && 
oß
.
ß_Êags
 !(
SA_NODEFER
 | 
SA_NOCLDSTOP
)Ë
	`e
(16);

287 
ß
.
ß_h™dÀr
 = 
SIG_DFL
;

288 
ß
.
ß_mask
 = 
s_em±y
;

289 
oß
.
ß_h™dÀr
 = 
SIG_IGN
;

290 
oß
.
ß_mask
 = 
s_em±y
;

291 
oß
.
ß_Êags
 = 0;

292 i‡(
	`siga˘i⁄
(
SIGHUP
, &
ß
, &
oß
Ë!0Ë
	`e
(17);

293 i‡(
oß
.
ß_h™dÀr
 !
func2
Ë
	`e
(18);

294 i‡(
oß
.
ß_mask
 !
s_ûl_pù
Ë
	`e
(19);

295 i‡(
oß
.
ß_Êags
 !(
SA_RESETHAND
 | 
SA_NODEFER
)Ë
	`e
(20);

298 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
s_fuŒ
, &
s1
Ë!0Ë
	`e
(18);

299 i‡(
	`sigem±y£t
(&
s1
Ë!0Ë
	`e
(19);

300 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
s_em±y
, &
s1
Ë!0Ë
	`e
(20);

301 i‡(
s1
 !
s_nokûl
Ë
	`e
(21);

302 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
s_ûl
, &
s1
Ë!0Ë
	`e
(22);

303 i‡(
s1
 !
s_em±y
Ë
	`e
(23);

304 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
s_ûl_pù
, &
s1
Ë!0Ë
	`e
(24);

305 i‡(
s1
 !
s_ûl
Ë
	`e
(25);

306 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
s_fuŒ
, &
s1
Ë!0Ë
	`e
(26);

307 i‡(
s1
 !
s_ûl_pù
Ë
	`e
(27);

310 i‡(
	`sig¥ocmask
(
SIG_UNBLOCK
, &
s_ûl
, &
s1
Ë!0Ë
	`e
(28);

311 i‡(
s1
 !
s_nokûl
Ë
	`e
(29);

312 i‡(
	`sig¥ocmask
(
SIG_UNBLOCK
, &
s_ûl_pù
, &
s1
Ë!0Ë
	`e
(30);

313 
s
 = 
s_nokûl
;

314 i‡(
	`sigdñ£t
(&
s
, 
SIGILL
Ë!0Ë
	`e
(31);

315 i‡(
s
 !
s1
Ë
	`e
(32);

316 i‡(
	`sig¥ocmask
(
SIG_UNBLOCK
, &
s_em±y
, &
s1
Ë!0Ë
	`e
(33);

317 
s
 = 
s_nokûl
;

318 i‡(
	`sigdñ£t
(&
s
, 
SIGILL
Ë!0Ë
	`e
(34);

319 i‡(
	`sigdñ£t
(&
s
, 
SIGPIPE
Ë!0Ë
	`e
(35);

320 i‡(
s
 !
s1
Ë
	`e
(36);

321 
s1
 = 
s_nokûl
;

322 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
s_em±y
, &
s1
Ë!0Ë
	`e
(37);

323 i‡(
s
 !
s1
Ë
	`e
(38);

326 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
s_ûl
, &
s1
Ë!0Ë
	`e
(39);

327 i‡(
s1
 !
s_em±y
Ë
	`e
(40);

328 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
s_ûl_pù
, &
s1
Ë!0Ë
	`e
(41);

329 i‡(
s1
 !
s_ûl
Ë
	`e
(42);

330 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
s_fuŒ
, &
s1
Ë!0Ë
	`e
(43);

331 i‡(
s1
 !
s_ûl_pù
Ë
	`e
(44);

334 
î∫o
 = 0;

335 i‡(
	`sig¥ocmask
(20000, &
s_fuŒ
, &
s1
Ë!-1Ë
	`e
(45);

336 i‡(
î∫o
 !
EINVAL
Ë
	`e
(46);

337 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
s_fuŒ
, &
s1
Ë!0Ë
	`e
(47);

338 i‡(
s1
 !
s_nokûl
Ë
	`e
(48);

341 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, (
sig£t_t
 *Ë
NULL
, &
s1
Ë!0Ë
	`e
(49);

342 i‡(
s1
 !
s_nokûl
Ë
	`e
(50);

343 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
s_ûl_pù
, &
s1
Ë!0Ë
	`e
(51);

344 i‡(
s1
 !
s_nokûl
Ë
	`e
(52);

345 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, (
sig£t_t
 *Ë
NULL
, &
s1
Ë!0Ë
	`e
(53);

346 i‡(
s1
 !
s_ûl_pù
Ë
	`e
(54);

347 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, (
sig£t_t
 *Ë
NULL
, &
s1
Ë!0Ë
	`e
(55);

348 i‡(
s1
 !
s_ûl_pù
Ë
	`e
(56);

349 i‡(
	`sig¥ocmask
(
SIG_UNBLOCK
, (
sig£t_t
 *Ë
NULL
, &
s1
Ë!0Ë
	`e
(57);

350 i‡(
s1
 !
s_ûl_pù
Ë
	`e
(58);

353 
s
 = 
s_em±y
;

354 i‡(
	`sigadd£t
(&
s
, 
SIGKILL
Ë!0Ë
	`e
(59);

355 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
s
, &
s1
Ë!0Ë
	`e
(60);

356 i‡(
s1
 !
s_ûl_pù
Ë
	`e
(61);

357 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
s_fuŒ
, &
s1
Ë!0Ë
	`e
(62);

358 i‡(
s1
 !
s_ûl_pù
Ë
	`e
(63);

361 
ß
.
ß_h™dÀr
 = 
func2
;

362 
ß
.
ß_mask
 = 
s_em±y
;

363 i‡(
	`siga˘i⁄
(
SIGHUP
, &
ß
, &
oß
Ë!0Ë
	`e
(64);

364 
p
 = 
	`gëpid
();

365 
	`kûl
(
p
, 
SIGHUP
);

366 i‡(
	`sig≥ndög
(&
s
Ë!0Ë
	`e
(65);

367 i‡(
	`sigem±y£t
(&
s1
Ë!0Ë
	`e
(66);

368 i‡(
	`sigadd£t
(&
s1
, 
SIGHUP
Ë!0Ë
	`e
(67);

369 i‡(
s
 !
s1
Ë
	`e
(68);

370 
ß
.
ß_h™dÀr
 = 
SIG_IGN
;

371 i‡(
	`siga˘i⁄
(
SIGHUP
, &
ß
, &
oß
Ë!0Ë
	`e
(69);

372 i‡(
	`sig≥ndög
(&
s
Ë!0Ë
	`e
(70);

373 i‡(
s
 !
s_em±y
Ë
	`e
(71);

374 
	}
}

377 
	gx
;

378 
sig£t_t
 
	gglo_vﬁ_£t
;

380 
	$ˇtch1
(
signo
)

381 
signo
;

383 
x
 = 42;

384 
	}
}

386 
	$ˇtch2
(
signo
)

387 
signo
;

389 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, (
sig£t_t
 *)
NULL
, (sig£t_à*Ë&
glo_vﬁ_£t
) != 0)

390 
	`e
(1);

391 
	}
}

396 
	$ã°8c
()

398 
pid_t
 
pid
;

399 
sig£t_t
 
sig£t_v¨
;

401 
subã°
 = 3;

402 
	`˛órsig°©e
();

403 
x
 = 0;

406 i‡(
	`sig«l
(
SIGTERM
, 
ˇtch1
Ë=
SIG_ERR
Ë
	`e
(1);

407 
pid
 = 
	`f‹k
()) {

409 
îr˘
 = 0;

410 
x
 == 0);

411 i‡(
x
 !42Ë
	`e
(2);

412 
	`exô
(
îr˘
 == 0 ? 0 : 1);

413 -1: 
	`e
(3); ;

415 
	`¶ìp
(1);

416 i‡(
	`kûl
(
pid
, 
SIGTERM
Ë!0Ë
	`e
(4);

417 
	`waô_f‹
(
pid
);

422 
	`sig«l
(
SIGINT
, 
SIG_IGN
);

423 i‡(
	`sig«l
(
SIGINT
, 
ˇtch2
Ë!
SIG_IGN
Ë
	`e
(5);

424 i‡(
	`sig«l
(
SIGINT
, 
ˇtch1
Ë!
ˇtch2
Ë
	`e
(6);

425 i‡(
	`sig«l
(
SIGINT
, 
SIG_DFL
Ë!
ˇtch1
Ë
	`e
(7);

426 i‡(
	`sig«l
(
SIGINT
, 
ˇtch1
Ë!
SIG_DFL
Ë
	`e
(8);

427 i‡(
	`sig«l
(
SIGINT
, 
SIG_DFL
Ë!
ˇtch1
Ë
	`e
(9);

428 i‡(
	`sig«l
(
SIGINT
, 
SIG_DFL
Ë!SIG_DFLË
	`e
(10);

429 i‡(
	`sig«l
(
SIGINT
, 
ˇtch1
Ë!
SIG_DFL
Ë
	`e
(11);

432 i‡(
	`sig«l
(
_NSIG
 + 1, 
ˇtch1
Ë!
SIG_ERR
Ë
	`e
(12);

433 i‡(
	`sig«l
(0, 
ˇtch1
Ë!
SIG_ERR
Ë
	`e
(13);

434 i‡(
	`sig«l
(-1, 
SIG_DFL
Ë!
SIG_ERR
Ë
	`e
(14);

440 i‡(
	`sig«l
(
SIGTERM
, 
ˇtch1
Ë=
SIG_ERR
Ë
	`e
(15);

441 (
pid
 = 
	`f‹k
())) {

443 
îr˘
 = 0;

444 
x
 == 0);

445 i‡(
x
 !42Ë
	`e
(16);

446 i‡(
	`sigismembî
((
sig£t_t
 *Ë&
glo_vﬁ_£t
, 
SIGTERM
)Ë
	`e
(17);

447 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, (
sig£t_t
 *)
NULL
, &
sig£t_v¨
Ë!0Ë
	`e
(18);

448 i‡(
	`sigismembî
(&
sig£t_v¨
, 
SIGTERM
)Ë
	`e
(19);

452 i‡(
	`sig«l
(
SIGTERM
, 
ˇtch1
Ë!
SIG_DFL
Ë
	`e
(20);

454 i‡(
	`sig«l
(
SIGTERM
, 
ˇtch1
Ë!ˇtch1Ë
	`e
(20);

456 
	`exô
(
îr˘
 == 0 ? 0 : 1);

458 
	`¶ìp
(1);

459 i‡(
	`kûl
(
pid
, 
SIGTERM
Ë!0Ë
	`e
(21);

460 
	`waô_f‹
(
pid
);

462 -1: 
	`e
(22); ;

464 
	}
}

471 
	gy
;

472 
	gz
;

474 
	$ˇtch3
(
signo
)

475 
signo
;

477 i‡(
z
 == 1) {

478 
y
 = 2;

481 
z
 = 1;

482 i‡(
	`kûl
(
	`gëpid
(), 
SIGHUP
Ë!0Ë
	`e
(1);

483 
y
 != 2);

484 
y
 = 1;

485 
	}
}

487 
	$ã°8d
()

489 
siga˘i⁄
 
a˘
;

491 
subã°
 = 4;

492 
	`˛órsig°©e
();

493 
y
 = 0;

494 
z
 = 0;

496 
a˘
.
ß_h™dÀr
 = 
ˇtch3
;

497 
a˘
.
ß_mask
 = 0;

498 
a˘
.
ß_Êags
 = 
SA_NODEFER
;

500 i‡(
	`siga˘i⁄
(
SIGHUP
, &
a˘
, (
siga˘i⁄
 *Ë
NULL
Ë!0Ë
	`e
(2);

501 i‡(
	`kûl
(
	`gëpid
(), 
SIGHUP
Ë!0Ë
	`e
(3);

502 i‡(
y
 !1Ë
	`e
(4);

503 
	}
}

512 
	$ˇtch4
(
signo
)

513 
signo
;

515 
sig£t_t
 
o£t
;

516 
sig£t_t
 
£t
;

518 i‡(
	`sigem±y£t
(&
£t
Ë=-1Ë
	`e
(5001);

519 i‡(
	`sigadd£t
(&
£t
, 
SIGTERM
Ë=-1Ë
	`e
(5002);

520 i‡(
	`sigadd£t
(&
£t
, 
SIGHUP
Ë=-1Ë
	`e
(5003);

521 i‡(
	`sigadd£t
(&
£t
, 
SIGINT
Ë=-1Ë
	`e
(5004);

522 i‡(
	`sigadd£t
(&
£t
, 
SIGPIPE
Ë=-1Ë
	`e
(5005);

523 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, (
sig£t_t
 *)
NULL
, &
o£t
Ë!0Ë
	`e
(5006);

524 i‡(
o£t
 !
£t
Ë
	`e
(5007);

525 
	}
}

527 
	$ã°8e
()

529 
siga˘i⁄
 
a˘
, 
ﬂ˘
;

530 
sig£t_t
 
£t
, 
o£t
;

532 
subã°
 = 5;

533 
	`˛órsig°©e
();

535 
a˘
.
ß_h™dÀr
 = 
ˇtch4
;

536 
	`sigem±y£t
(&
a˘
.
ß_mask
);

537 
	`sigadd£t
(&
a˘
.
ß_mask
, 
SIGTERM
);

538 
	`sigadd£t
(&
a˘
.
ß_mask
, 
SIGHUP
);

539 
a˘
.
ß_Êags
 = 0;

540 i‡(
	`siga˘i⁄
(
SIGINT
, &
a˘
, &
ﬂ˘
Ë=-1Ë
	`e
(2);

542 i‡(
	`sigem±y£t
(&
£t
Ë=-1Ë
	`e
(3);

543 i‡(
	`sigadd£t
(&
£t
, 
SIGPIPE
Ë=-1Ë
	`e
(4);

544 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
£t
, &
o£t
Ë=-1Ë
	`e
(5);

545 i‡(
	`kûl
(
	`gëpid
(), 
SIGINT
Ë=-1Ë
	`e
(6);

546 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, (
sig£t_t
 *)
NULL
, &
o£t
Ë=-1Ë
	`e
(7);

547 i‡(
	`sigem±y£t
(&
£t
Ë=-1Ë
	`e
(8);

548 i‡(
	`sigadd£t
(&
£t
, 
SIGPIPE
Ë=-1Ë
	`e
(9);

549 i‡(
£t
 !
o£t
Ë
	`e
(10);

550 
	}
}

556 
	$ˇtch5
(
signo
)

557 
signo
;

559 
x
 = 1;

560 
	}
}

562 
	$ã°8f
()

564 
sig£t_t
 
£t
;

565 
r
;

566 
siga˘i⁄
 
a˘
;

567 
pid_t
 
pid
;

569 
subã°
 = 6;

570 
	`˛órsig°©e
();

572 
pid
 = 
	`f‹k
()) {

574 
îr˘
 = 0;

575 
	`¶ìp
(1);

576 i‡(
	`kûl
(
	`gëµid
(), 
SIGINT
Ë=-1Ë
	`e
(1);

577 
	`exô
(
îr˘
 == 0 ? 0 : 1);

578 -1: 
	`e
(2); ;

580 i‡(
	`sigem±y£t
(&
a˘
.
ß_mask
Ë=-1Ë
	`e
(3);

581 
a˘
.
ß_Êags
 = 0;

582 
a˘
.
ß_h™dÀr
 = 
ˇtch5
;

583 i‡(
	`siga˘i⁄
(
SIGINT
, &
a˘
, (
siga˘i⁄
 *Ë
NULL
Ë=-1Ë
	`e
(4);

585 i‡(
	`sigem±y£t
(&
£t
Ë=-1Ë
	`e
(5);

586 
r
 = 
	`sigsu•íd
(&
£t
);

588 i‡(
r
 !-1 || 
î∫o
 !
EINTR
 || 
x
 !1Ë
	`e
(6);

589 
	`waô_f‹
(
pid
);

592 
	}
}

608 
	$sigöt_h™dÀr
(
signo
)

609 
signo
;

611 
x
 = 1;

612 
z
++;

613 
	}
}

615 
	$sigpùe_h™dÀr
(
signo
)

616 
signo
;

618 
x
 = 2;

619 
z
++;

620 
	}
}

622 
	$ã°8g
()

624 
sig£t_t
 
£t
;

625 
r
;

626 
siga˘i⁄
 
a˘
;

627 
pid_t
 
pid
;

629 
subã°
 = 7;

630 
	`˛órsig°©e
();

631 
x
 = 0;

632 
z
 = 0;

634 
pid
 = 
	`f‹k
()) {

636 
îr˘
 = 0;

637 
	`¶ìp
(1);

638 i‡(
	`kûl
(
	`gëµid
(), 
SIGINT
Ë=-1Ë
	`e
(1);

639 
	`¶ìp
(1);

640 i‡(
	`kûl
(
	`gëµid
(), 
SIGPIPE
Ë=-1Ë
	`e
(2);

641 
	`exô
(
îr˘
 == 0 ? 0 : 1);

642 -1: 
	`e
(3); ;

644 i‡(
	`sigem±y£t
(&
a˘
.
ß_mask
Ë=-1Ë
	`e
(3);

645 
a˘
.
ß_Êags
 = 0;

646 
a˘
.
ß_h™dÀr
 = 
sigöt_h™dÀr
;

647 i‡(
	`siga˘i⁄
(
SIGINT
, &
a˘
, (
siga˘i⁄
 *Ë
NULL
Ë=-1Ë
	`e
(4);

649 
a˘
.
ß_h™dÀr
 = 
sigpùe_h™dÀr
;

650 i‡(
	`siga˘i⁄
(
SIGPIPE
, &
a˘
, (
siga˘i⁄
 *Ë
NULL
Ë=-1Ë
	`e
(5);

652 i‡(
	`sigem±y£t
(&
£t
Ë=-1Ë
	`e
(6);

653 i‡(
	`sigadd£t
(&
£t
, 
SIGINT
Ë=-1Ë
	`e
(7);

654 
r
 = 
	`sigsu•íd
(&
£t
);

655 i‡(
r
 !-1Ë
	`e
(8);

656 i‡(
î∫o
 !
EINTR
Ë
	`e
(9);

657 i‡(
z
 !2Ë
	`e
(10);

658 i‡(
x
 !1Ë
	`e
(11);

659 
	`waô_f‹
(
pid
);

662 
	}
}

678 
	$sighup8
(
signo
)

679 
signo
;

681 
x
 = 1;

682 
z
++;

683 
	}
}

685 
	$sigpù8
(
signo
)

686 
signo
;

688 
x
 = 1;

689 
z
++;

690 
	}
}

692 
	$sigãr8
(
signo
)

693 
signo
;

695 
x
 = 2;

696 
z
++;

697 
	}
}

699 
	$ã°8h
()

701 
sig£t_t
 
£t
;

702 
r
;

703 
siga˘i⁄
 
a˘
;

704 
pid_t
 
pid
;

706 
subã°
 = 8;

707 
	`˛órsig°©e
();

708 
x
 = 0;

709 
z
 = 0;

711 
pid
 = 
	`f‹k
()) {

713 
îr˘
 = 0;

714 
	`¶ìp
(1);

715 i‡(
	`kûl
(
	`gëµid
(), 
SIGHUP
Ë=-1Ë
	`e
(1);

716 
	`¶ìp
(1);

717 i‡(
	`kûl
(
	`gëµid
(), 
SIGPIPE
Ë=-1Ë
	`e
(2);

718 
	`¶ìp
(1);

719 i‡(
	`kûl
(
	`gëµid
(), 
SIGTERM
Ë=-1Ë
	`e
(3);

720 
	`exô
(
îr˘
 == 0 ? 0 : 1);

721 -1: 
	`e
(5); ;

723 i‡(
	`sigem±y£t
(&
a˘
.
ß_mask
Ë=-1Ë
	`e
(6);

724 
a˘
.
ß_Êags
 = 0;

725 
a˘
.
ß_h™dÀr
 = 
sighup8
;

726 i‡(
	`siga˘i⁄
(
SIGHUP
, &
a˘
, (
siga˘i⁄
 *Ë
NULL
Ë=-1Ë
	`e
(7);

728 
a˘
.
ß_h™dÀr
 = 
sigpù8
;

729 i‡(
	`siga˘i⁄
(
SIGPIPE
, &
a˘
, (
siga˘i⁄
 *Ë
NULL
Ë=-1Ë
	`e
(8);

731 
a˘
.
ß_h™dÀr
 = 
sigãr8
;

732 i‡(
	`siga˘i⁄
(
SIGTERM
, &
a˘
, (
siga˘i⁄
 *Ë
NULL
Ë=-1Ë
	`e
(9);

734 i‡(
	`sigem±y£t
(&
£t
Ë=-1Ë
	`e
(10);

735 i‡(
	`sigadd£t
(&
£t
, 
SIGHUP
Ë=-1Ë
	`e
(11);

736 i‡(
	`sigadd£t
(&
£t
, 
SIGPIPE
Ë=-1Ë
	`e
(12);

737 
r
 = 
	`sigsu•íd
(&
£t
);

738 i‡(
r
 !-1Ë
	`e
(13);

739 i‡(
î∫o
 !
EINTR
Ë
	`e
(14);

740 i‡(
z
 !3Ë
	`e
(15);

741 i‡(
x
 !1Ë
	`e
(16);

742 
	`waô_f‹
(
pid
);

745 
	}
}

754 
	$sighup9
(
signo
)

755 
signo
;

757 
y
++;

758 
	}
}

760 
	$sigãr9
(
signo
)

761 
signo
;

763 
z
++;

764 
	}
}

766 
	$ã°8i
()

768 
sig£t_t
 
£t
;

769 
siga˘i⁄
 
a˘
;

771 
subã°
 = 9;

772 
	`˛órsig°©e
();

773 
y
 = 0;

774 
z
 = 0;

776 i‡(
	`sigem±y£t
(&
a˘
.
ß_mask
Ë=-1Ë
	`e
(1);

777 
a˘
.
ß_Êags
 = 0;

779 
a˘
.
ß_h™dÀr
 = 
sighup9
;

780 i‡(
	`siga˘i⁄
(
SIGHUP
, &
a˘
, (
siga˘i⁄
 *Ë
NULL
Ë=-1Ë
	`e
(2);

782 
a˘
.
ß_h™dÀr
 = 
sigãr9
;

783 i‡(
	`siga˘i⁄
(
SIGTERM
, &
a˘
, (
siga˘i⁄
 *Ë
NULL
Ë=-1Ë
	`e
(3);

785 i‡(
	`sigem±y£t
(&
£t
Ë=-1Ë
	`e
(4);

786 i‡(
	`sigadd£t
(&
£t
, 
SIGTERM
Ë=-1Ë
	`e
(5);

787 i‡(
	`sigadd£t
(&
£t
, 
SIGHUP
Ë=-1Ë
	`e
(6);

788 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
£t
, (
sig£t_t
 *)
NULL
Ë=-1Ë
	`e
(7);

790 i‡(
	`kûl
(
	`gëpid
(), 
SIGHUP
Ë=-1Ë
	`e
(8);

791 i‡(
	`kûl
(
	`gëpid
(), 
SIGTERM
Ë=-1Ë
	`e
(9);

792 i‡(
y
 !0Ë
	`e
(10);

793 i‡(
z
 !0Ë
	`e
(11);

795 i‡(
	`sigem±y£t
(&
£t
Ë=-1Ë
	`e
(12);

796 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
£t
, (
sig£t_t
 *)
NULL
Ë=-1Ë
	`e
(12);

797 i‡(
y
 !1Ë
	`e
(13);

798 i‡(
z
 !1Ë
	`e
(14);

799 
	}
}

813 
	$sighup10
(
signo
)

814 
signo
;

816 
y
++;

817 
	}
}

819 
	$sigÆrm_h™dÀr10
(
signo
)

820 
signo
;

822 
z
++;

823 
	}
}

825 
	$ã°8j
()

827 
sig£t_t
 
£t
, 
£t2
;

828 
siga˘i⁄
 
a˘
;

830 
subã°
 = 10;

831 
	`˛órsig°©e
();

832 
y
 = 0;

833 
z
 = 0;

835 i‡(
	`sigem±y£t
(&
a˘
.
ß_mask
Ë=-1Ë
	`e
(1);

836 
a˘
.
ß_Êags
 = 0;

838 
a˘
.
ß_h™dÀr
 = 
sighup10
;

839 i‡(
	`siga˘i⁄
(
SIGHUP
, &
a˘
, (
siga˘i⁄
 *Ë
NULL
Ë=-1Ë
	`e
(2);

841 
a˘
.
ß_h™dÀr
 = 
sigÆrm_h™dÀr10
;

842 i‡(
	`siga˘i⁄
(
SIGALRM
, &
a˘
, (
siga˘i⁄
 *Ë
NULL
Ë=-1Ë
	`e
(3);

844 i‡(
	`sigem±y£t
(&
£t
Ë=-1Ë
	`e
(4);

845 i‡(
	`sigadd£t
(&
£t
, 
SIGHUP
Ë=-1Ë
	`e
(5);

846 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
£t
, (
sig£t_t
 *)
NULL
Ë=-1Ë
	`e
(6);

848 i‡(
	`kûl
(
	`gëpid
(), 
SIGHUP
Ë=-1Ë
	`e
(7);

849 i‡(
	`sig≥ndög
(&
£t
Ë=-1Ë
	`e
(8);

850 i‡(
	`sigem±y£t
(&
£t2
Ë=-1Ë
	`e
(9);

851 i‡(
	`sigadd£t
(&
£t2
, 
SIGHUP
Ë=-1Ë
	`e
(10);

852 i‡(
£t2
 !
£t
Ë
	`e
(11);

853 
	`Æ¨m
(6);

854 
	`¶ìp
(7);

855 i‡(
	`sig≥ndög
(&
£t
Ë=-1Ë
	`e
(12);

856 i‡(
£t
 !
£t2
Ë
	`e
(13);

857 i‡(
y
 !0Ë
	`e
(14);

858 i‡(
z
 !1Ë
	`e
(15);

859 
	}
}

863 
	$ã°8k
()

865 
subã°
 = 11;

866 
	}
}

867 
	$ã°8l
()

869 
subã°
 = 12;

870 
	}
}

878 
	$ã°8m
()

880 
jmp_buf
 
jb
;

881 
sig£t_t
 
ss
;

883 
subã°
 = 13;

884 
	`˛órsig°©e
();

886 
ss
 = 0x32;

887 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ss
, (
sig£t_t
 *)
NULL
Ë=-1Ë
	`e
(1);

888 i‡(
	`£tjmp
(
jb
)) {

889 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, (
sig£t_t
 *)
NULL
, &
ss
Ë=-1Ë
	`e
(2);

890 i‡(
ss
 !0x32Ë
	`e
(388);

893 
ss
 = 0x3abc;

894 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ss
, (
sig£t_t
 *)
NULL
Ë=-1Ë
	`e
(4);

895 
	`l⁄gjmp
(
jb
, 1);

896 
	}
}

898 
	$l⁄gjîr
()

900 
	`e
(5);

901 
	}
}

910 
	$ˇtch14
(
signo
, 
code
, 
s˝
)

911 
signo
;

912 
code
;

913 
sigc⁄ãxt
 *
s˝
;

915 
jmp_buf
 
jb
;

917 i‡(
	`£tjmp
(
jb
)) {

918 
x
++;

919 
	`sigªtu∫
(
s˝
);

920 
	`e
(1);

922 
y
++;

923 
	`l⁄gjmp
(
jb
, 1);

924 
	`e
(2);

925 
	}
}

927 
	$ã°8n
()

929 
siga˘i⁄
 
a˘
;

930 
	`_PROTOTYPE
–(*
	tsigh™dÀr_t
), (
	tsig
) );

932 
subã°
 = 14;

933 
	`˛órsig°©e
();

934 
x
 = 0;

935 
y
 = 0;

937 
a˘
.
ß_Êags
 = 0;

938 
a˘
.
ß_mask
 = 0;

939 
a˘
.
ß_h™dÀr
 = (
sigh™dÀr_t
Ë
ˇtch14
;

940 i‡(
	`siga˘i⁄
(
SIGSEGV
, &
a˘
, (
siga˘i⁄
 *Ë
NULL
Ë=-1Ë
	`e
(3);

941 i‡(
	`kûl
(
	`gëpid
(), 
SIGSEGV
Ë=-1Ë
	`e
(4);

943 i‡(
x
 !1Ë
	`e
(5);

944 i‡(
y
 !1Ë
	`e
(6);

945 
	}
}

953 
jmp_buf
 
	gglo_jb
;

955 
	$ˇtch15
(
signo
)

956 
signo
;

958 
z
++;

959 
	`l⁄gjmp
(
glo_jb
, 7);

960 
	`e
(1);

962 
	}
}

964 
	$ã°8o
()

966 
siga˘i⁄
 
a˘
;

967 
k
;

969 
subã°
 = 15;

970 
	`˛órsig°©e
();

971 
z
 = 0;

973 
a˘
.
ß_Êags
 = 0;

974 
a˘
.
ß_mask
 = 0;

975 
a˘
.
ß_h™dÀr
 = 
ˇtch15
;

976 i‡(
	`siga˘i⁄
(
SIGALRM
, &
a˘
, (
siga˘i⁄
 *Ë
NULL
Ë=-1Ë
	`e
(2);

978 i‡((
k
 = 
	`£tjmp
(
glo_jb
))) {

979 i‡(
z
 !1Ë
	`e
(399);

980 i‡(
k
 !7Ë
	`e
(4);

983 i‡(
	`kûl
(
	`gëpid
(), 
SIGALRM
Ë=-1Ë
	`e
(5);

984 
	}
}

986 
	$˛órsig°©e
()

988 
i
;

989 
sig£t_t
 
sig£t_v¨
;

992 
i
 = 1; i <
_NSIG
; i++Ë
	`sig«l
(i, 
SIG_IGN
);

993 
i
 = 1; i <
_NSIG
; i++Ë
	`sig«l
(i, 
SIG_DFL
);

994 
	`sigfûl£t
(&
sig£t_v¨
);

995 
	`sig¥ocmask
(
SIG_UNBLOCK
, &
sig£t_v¨
, (
sig£t_t
 *)
NULL
);

996 
	}
}

998 
	$quô
()

1001 
	`chdú
("..");

1002 
	`sy°em
("rm -rf DIR*");

1004 i‡(
îr˘
 == 0) {

1005 
	`¥ötf
("ok\n");

1006 
	`exô
(0);

1008 
	`¥ötf
("%dÉº‹s\n", 
îr˘
);

1009 
	`exô
(4);

1011 
	}
}

1013 
	$waô_f‹
(
pid
)

1014 
pid_t
 
pid
;

1018 
r
;

1019 
°©us
;

1021 
î∫o
 = 0;

1023 
î∫o
 = 0;

1024 
r
 = 
	`waô
(&
°©us
);

1025 i‡(
r
 =
pid
) {

1026 
î∫o
 = 0;

1027 i‡(
°©us
 !0Ë
	`e
(90);

1030 i‡(
r
 < 0) {

1031 
	`e
(91);

1034 
	`e
(92);

1036 
	}
}

1038 
	$e
(
n
)

1039 
n
;

1041 
msgbuf
[80];

1043 
	`•rötf
(
msgbuf
, "Subã° %d,Éº‹ %dÉºno=%d ", 
subã°
, 
n
, 
î∫o
);

1044 
	`≥º‹
(
msgbuf
);

1045 i‡(
îr˘
++ > 
MAX_ERROR
) {

1046 
	`Ârötf
(
°dîr
, "Too manyÉrrors;Åestáborted\n");

1047 
	`chdú
("..");

1048 
	`sy°em
("rm -rf DIR*");

1049 
	`exô
(1);

1051 
	}
}

	@test9.c

3 
	~<sys/ty≥s.h
>

4 
	~<£tjmp.h
>

5 
	~<sig«l.h
>

7 
	#MAX_ERROR
 4

	)

9 
	~"comm⁄.c
"

11 *
	gtm∑
;

13 
_PROTOTYPE
(
maö
, (
¨gc
, *
¨gv
 []));

14 
_PROTOTYPE
(
ã°9a
, ());

15 
_PROTOTYPE
(
ã°9b
, ());

16 
_PROTOTYPE
(
ã°9c
, ());

17 
_PROTOTYPE
(
ã°9d
, ());

18 
_PROTOTYPE
(
ã°9e
, ());

19 
_PROTOTYPE
(
ã°9f
, ());

20 
_PROTOTYPE
(*
addr
, ());

21 
_PROTOTYPE
(
g¨bage
, ());

22 
_PROTOTYPE
(
Àvñ1
, ());

23 
_PROTOTYPE
(
Àvñ2
, ());

24 
_PROTOTYPE
(
dﬁev
, ());

25 
_PROTOTYPE
(
ˇtch
, (
s
));

26 
_PROTOTYPE
(
h¨d
, ());

28 
	$maö
(
¨gc
, 
¨gv
)

29 
¨gc
;

30 *
¨gv
[];

32 
jmp_buf
 
ívm
;

33 
i
, 
j
, 
m
 = 0xFFFF;

35 
	`°¨t
(9);

36 i‡(
¨gc
 =2Ë
m
 = 
	`©oi
(
¨gv
[1]);

37 
j
 = 0; j < 100; j++) {

38 i‡(
m
 & 00001Ë
	`ã°9a
();

39 i‡(
m
 & 00002Ë
	`ã°9b
();

40 i‡(
m
 & 00004Ë
	`ã°9c
();

41 i‡(
m
 & 00010Ë
	`ã°9d
();

42 i‡(
m
 & 00020Ë
	`ã°9e
();

43 i‡(
m
 & 00040Ë
	`ã°9f
();

45 i‡(
îr˘
Ë
	`quô
();

46 
i
 = 1;

47 i‡(
	`£tjmp
(
ívm
) == 0) {

48 
i
 = 2;

49 
	`l⁄gjmp
(
ívm
, 1);

51 i‡(
i
 == 2) {

53 } i‡(
i
 == 1) {

54 
	`¥ötf
("WARNING: The setjmp/longjmp ofÅhis machineÑestoreÑegister variables\n\

55 
to
 
the
 
vÆue
 
they
 
had
 
©
Åhê
time
 
of
Åhê
Sëjmp
\
n
");

57 
	`¥ötf
("Aha, I just found oneÜastÉrror\n");

61 
	`quô
();

63 
	}
}

66 
	$ã°9a
()

68 
p
;

70 
subã°
 = 1;

71 
p
 = 200;

72 
	`g¨bage
();

73 i‡(
p
 !200Ë
	`e
(1);

74 
	}
}

76 
	$ã°9b
()

78 
p
, 
q
;

80 
subã°
 = 2;

81 
p
 = 200;

82 
q
 = 300;

83 
	`g¨bage
();

84 i‡(
p
 !200Ë
	`e
(1);

85 i‡(
q
 !300Ë
	`e
(2);

86 
	}
}

88 
	$ã°9c
()

90 
p
, 
q
, 
r
;

92 
subã°
 = 3;

93 
p
 = 200;

94 
q
 = 300;

95 
r
 = 400;

96 
	`g¨bage
();

97 i‡(
p
 !200Ë
	`e
(1);

98 i‡(
q
 !300Ë
	`e
(2);

99 i‡(
r
 !400Ë
	`e
(3);

100 
	}
}

102 
	gbuf
[512];

104 
	$ã°9d
()

106 *
p
;

108 
subã°
 = 4;

109 
p
 = &
buf
[100];

110 
	`g¨bage
();

111 i‡(
p
 !&
buf
[100]Ë
	`e
(1);

112 
	}
}

114 
	$ã°9e
()

116 *
p
, *
q
;

118 
subã°
 = 5;

119 
p
 = &
buf
[100];

120 
q
 = &
buf
[200];

121 
	`g¨bage
();

122 i‡(
p
 !&
buf
[100]Ë
	`e
(1);

123 i‡(
q
 !&
buf
[200]Ë
	`e
(2);

124 
	}
}

126 
	$ã°9f
()

128 *
p
, *
q
, *
r
;

130 
subã°
 = 6;

131 
p
 = &
buf
[100];

132 
q
 = &
buf
[200];

133 
r
 = &
buf
[300];

134 
	`g¨bage
();

135 i‡(
p
 !&
buf
[100]Ë
	`e
(1);

136 i‡(
q
 !&
buf
[200]Ë
	`e
(2);

137 i‡(
r
 !&
buf
[300]Ë
	`e
(3);

138 
	}
}

140 
jmp_buf
 
	gív
;

146 
	$addr
()

148 
a
;

150  &
a
;

151 
	}
}

153 
	$g¨bage
()

155 
i
, 
j
, 
k
;

156 *
p
, *
q
, *
r
;

157 *
a
;

159 
p
 = &
buf
[300];

160 
q
 = &
buf
[400];

161 
r
 = &
buf
[500];

162 
i
 = 10;

163 
j
 = 20;

164 
k
 = 30;

165 
	`£tjmp
(
ív
)) {

167 
a
 = 
	`addr
();

168 #ifde‡
__GNUC__


175 
	`§™d
(()&
a
);

177 
	`l⁄gjmp
(
ív
, 1);

180 i‡(
i
 !10Ë
	`e
(11);

181 i‡(
j
 !20Ë
	`e
(12);

182 i‡(
k
 !30Ë
	`e
(13);

183 i‡(
p
 !&
buf
[300]Ë
	`e
(14);

184 i‡(
q
 !&
buf
[400]Ë
	`e
(15);

185 i‡(
r
 !&
buf
[500]Ë
	`e
(16);

186 
tm∑
 = 
	`addr
();

187 i‡(
a
 !
tm∑
Ë
	`e
(17);

188 
	`Àvñ1
();

191 i‡(
i
 !10Ë
	`e
(21);

192 i‡(
j
 !20Ë
	`e
(22);

193 i‡(
k
 !30Ë
	`e
(23);

194 i‡(
p
 !&
buf
[300]Ë
	`e
(24);

195 i‡(
q
 !&
buf
[400]Ë
	`e
(25);

196 i‡(
r
 !&
buf
[500]Ë
	`e
(26);

197 
tm∑
 = 
	`addr
();

198 i‡(
a
 !
tm∑
Ë
	`e
(27);

199 
	`Àvñ2
();

202 i‡(
i
 !10Ë
	`e
(31);

203 i‡(
j
 !20Ë
	`e
(32);

204 i‡(
k
 !30Ë
	`e
(33);

205 i‡(
p
 !&
buf
[300]Ë
	`e
(34);

206 i‡(
q
 !&
buf
[400]Ë
	`e
(35);

207 i‡(
r
 !&
buf
[500]Ë
	`e
(36);

208 
tm∑
 = 
	`addr
();

209 i‡(
a
 !
tm∑
Ë
	`e
(37);

210 
	`h¨d
();

212 i‡(
i
 !10Ë
	`e
(41);

213 i‡(
j
 !20Ë
	`e
(42);

214 i‡(
k
 !30Ë
	`e
(43);

215 i‡(
p
 !&
buf
[300]Ë
	`e
(44);

216 i‡(
q
 !&
buf
[400]Ë
	`e
(45);

217 i‡(
r
 !&
buf
[500]Ë
	`e
(46);

218 
tm∑
 = 
	`addr
();

219 i‡(
a
 !
tm∑
Ë
	`e
(47);

222 : 
	`e
(100);

224 
	`e
(200);

225 
	}
}

227 
	$Àvñ1
()

229 *
p
;

230 
i
;

232 
i
 = 1000;

233 
p
 = &
buf
[10];

234 
i
 = 200;

235 
p
 = &
buf
[20];

236 
	`l⁄gjmp
(
ív
, 2);

237 
	}
}

239 
	$Àvñ2
()

241 *
p
;

242 
i
;

244 
i
 = 0200;

245 
p
 = &
buf
[2];

246 *
p
 = 
i
;

247 
	`dﬁev
();

248 
	}
}

250 
	$dﬁev
()

252 *
p
;

253 
i
;

255 
i
 = 010;

256 
p
 = &
buf
[3];

257 *
p
 = 
i
;

258 
	`l⁄gjmp
(
ív
, 3);

259 
	}
}

261 
	$ˇtch
(
s
)

262 
s
;

264 
	`l⁄gjmp
(
ív
, 4);

265 
	}
}

267 
	$h¨d
()

269 *
p
;

271 
	`sig«l
(
SIGHUP
, 
ˇtch
);

272 
p
 = 
buf
;Ö <= &buf[511];Ö++) *p = 025;

273 
	`kûl
(
	`gëpid
(), 
SIGHUP
);

274 
	}
}

	@testit.c

6 
	~<°dio.h
>

7 #if 
deföed
(
HAVE_STDLIB
)

8 
	~<°dlib.h
>

11 *
ªadlöe
();

12 
add_hi°‹y
();

14 #if !
deföed
(
HAVE_STDLIB
)

15 
chdú
();

16 
‰ì
();

17 
°∫cmp
();

18 
sy°em
();

19 
exô
();

20 *
gëív
();

24 #if 
deföed
(
NEED_PERROR
)

26 
	$≥º‹
(
s
)

27 *
s
;

29 
î∫o
;

31 (
voidf
)
	`¥ötf
(
°dîr
, "%s:Éº‹ %d\n", 
s
, 
î∫o
);

32 
	}
}

38 
	$maö
(
ac
, 
av
)

39 
ac
;

40 *
av
[];

42 *
¥om±
;

43 *
p
;

44 
doô
;

46 
doô
 = 
ac
 == 1;

47 i‡((
¥om±
 = 
	`gëív
("TESTPROMPT")Ë=
NULL
)

48 
¥om±
 = "testit> ";

50 (
p
 = 
	`ªadlöe
(
¥om±
)Ë!
NULL
) {

51 ()
	`¥ötf
("\t\t\t|%s|\n", 
p
);

52 i‡(
doô
)

53 i‡(
	`°∫cmp
(
p
, "cd ", 3) == 0) {

54 i‡(
	`chdú
(&
p
[3]) < 0)

55 
	`≥º‹
(&
p
[3]);

57 i‡(
	`sy°em
(
p
) != 0)

58 
	`≥º‹
(
p
);

59 
	`add_hi°‹y
(
p
);

60 
	`‰ì
(
p
);

62 
	`exô
(0);

64 
	}
}

	@time.c

10 
	~"fs.h
"

11 
	~<möix/ˇŒƒ.h
>

12 
	~<möix/com.h
>

13 
	~"fûe.h
"

14 
	~"Âroc.h
"

15 
	~"öode.h
"

16 
	~"∑øm.h
"

18 
PRIVATE
 
mesßge
 
	g˛ock_mess
;

23 
PUBLIC
 
	$do_utime
()

27 
öode
 *
rù
;

28 
Àn
, 
r
;

31 
Àn
 = 
utime_Àngth
;

32 i‡(
Àn
 =0ËÀ¿
m
.
m2_i2
;

35 i‡(
	`„tch_«me
(
utime_fûe
, 
Àn
, 
M1
Ë!
OK
Ë(
îr_code
);

36 i‡–(
rù
 = 
	`ót_∑th
(
u£r_∑th
)Ë=
NIL_INODE
Ë(
îr_code
);

39 
r
 = 
OK
;

40 i‡(
rù
->
i_uid
 !
Â
->
Â_effuid
 && !
su≥r_u£r
Ë
r
 = 
EPERM
;

41 i‡(
utime_Àngth
 =0 && 
r
 !
OK
Ë∏
	`f‹biddí
(
rù
, 
W_BIT
);

42 i‡(
	`ªad_⁄ly
(
rù
Ë!
OK
Ë
r
 = 
EROFS
;

43 i‡(
r
 =
OK
) {

44 i‡(
utime_Àngth
 == 0) {

45 
rù
->
i_©ime
 = 
	`˛ock_time
();

46 
rù
->
i_mtime
 =Ñù->
i_©ime
;

48 
rù
->
i_©ime
 = 
utime_a˘ime
;

49 
rù
->
i_mtime
 = 
utime_modtime
;

51 
rù
->
i_upd©e
 = 
CTIME
;

52 
rù
->
i_dút
 = 
DIRTY
;

55 
	`put_öode
(
rù
);

56 (
r
);

57 
	}
}

63 
PUBLIC
 
	$do_time
()

68 
ª∂y_l1
 = 
	`˛ock_time
();

69 (
OK
);

70 
	}
}

76 
PUBLIC
 
	$do_°ime
()

80 
k
;

82 i‡(!
su≥r_u£r
Ë(
EPERM
);

83 
˛ock_mess
.
m_ty≥
 = 
SET_TIME
;

84 
˛ock_mess
.
NEW_TIME
 = (Ë
ç
;

85 i‡–(
k
 = 
	`£ndªc
(
CLOCK
, &
˛ock_mess
)Ë!
OK
Ë
	`∑nic
("do_stimeÉrror", k);

86 (
OK
);

87 
	}
}

93 
PUBLIC
 
	$do_tims
()

97 
˛ock_t
 
t
[5];

99 
	`sys_times
(
who
, 
t
);

100 
ª∂y_t1
 = 
t
[0];

101 
ª∂y_t2
 = 
t
[1];

102 
ª∂y_t3
 = 
t
[2];

103 
ª∂y_t4
 = 
t
[3];

104 
ª∂y_t5
 = 
t
[4];

105 (
OK
);

106 
	}
}

	@tmpfile.c

6 #if 
deföed
(
_POSIX_SOURCE
)

7 
	~<sys/ty≥s.h
>

9 
	~<°dio.h
>

10 
	~<°rög.h
>

11 
	~"loc_ö˛.h
"

13 
pid_t
 
_gëpid
();

15 
FILE
 *

16 
	$tmpfûe
() {

17 
«me_buf„r
[
L_tm≤am
] = "/tmp/tmp." ;

18 *
«me
 = 
NULL
;

19 
FILE
 *
fûe
;

21 i‡(!
«me
) {

22 
«me
 = 
«me_buf„r
 + 
	`°æí
(name_buffer);

23 
«me
 = 
	`_i_compuã
(
	`_gëpid
(), 10,Çame, 5);

24 *
«me
 = '\0';

27 
fûe
 = 
	`f›í
(
«me_buf„r
,"wb+");

28 i‡(!
fûe
Ë (
FILE
 *)
NULL
;

29 (Ë
	`ªmove
(
«me_buf„r
);

30  
fûe
;

31 
	}
}

	@tmpnam.c

6 #if 
deföed
(
_POSIX_SOURCE
)

7 
	~<sys/ty≥s.h
>

9 
	~<°dio.h
>

10 
	~<°rög.h
>

11 
	~"loc_ö˛.h
"

13 
pid_t
 
_gëpid
();

16 
	$tm≤am
(*
s
) {

17 
«me_buf„r
[
L_tm≤am
] = "/tmp/tmp.";

18 
cou¡
 = 0;

19 *
«me
 = 
NULL
;

21 i‡(!
«me
) {

22 
«me
 = 
«me_buf„r
 + 
	`°æí
(name_buffer);

23 
«me
 = 
	`_i_compuã
(()
	`_gëpid
(), 10,Çame, 5);

24 *
«me
++ = '.';

25 *
«me
 = '\0';

27 i‡(++
cou¡
 > 
TMP_MAX
) count = 1;

28 *
	`_i_compuã
(
cou¡
, 10, 
«me
, 3) = '\0';

29 i‡(
s
Ë 
	`°r˝y
(s, 
«me_buf„r
);

30  
«me_buf„r
;

31 
	}
}

	@tolower.c

1 
	~<˘y≥.h
>

3 
	$tﬁowî
(
c
) {

4  
	`isuµî
(
c
) ? c - 'A' + 'a' : c ;

5 
	}
}

	@toupper.c

1 
	~<˘y≥.h
>

3 
	$touµî
(
c
) {

4  
	`i¶owî
(
c
) ? c - 'a' + 'A' : c ;

5 
	}
}

	@trace.c

23 
	~"mm.h
"

24 
	~<sys/±ø˚.h
>

25 
	~<sig«l.h
>

26 
	~"m¥oc.h
"

27 
	~"∑øm.h
"

29 
	#NIL_MPROC
 ((
m¥oc
 *Ë0)

	)

31 
FORWARD
 
_PROTOTYPE
–
m¥oc
 *
föd¥oc
, (
pid_t
 
Õid
) );

36 
PUBLIC
 
	$do_åa˚
()

38 
m¥oc
 *
chûd
;

43 i‡(
ªque°
 =
T_OK
) {

44 
mp
->
mp_Êags
 |
TRACED
;

45 
mm_out
.
m2_l2
 = 0;

46 (
OK
);

48 i‡((
chûd
 = 
	`föd¥oc
(
pid
)Ë=
NIL_MPROC
 || !(chûd->
mp_Êags
 & 
STOPPED
)) {

49 (
ESRCH
);

54 
ªque°
) {

55 
T_EXIT
:

56 
	`mm_exô
(
chûd
, ()
d©a
);

57 
mm_out
.
m2_l2
 = 0;

58 (
OK
);

59 
T_RESUME
:

60 
T_STEP
:

61 i‡(
d©a
 < 0 || d©®> 
_NSIG
Ë(
EIO
);

62 i‡(
d©a
 > 0) {

63 
chûd
->
mp_Êags
 &~
TRACED
;

64 
	`sig_¥oc
(
chûd
, (Ë
d©a
);

65 
chûd
->
mp_Êags
 |
TRACED
;

67 
chûd
->
mp_Êags
 &~
STOPPED
;

70 i‡(
	`sys_åa˚
(
ªque°
, (Ë(
chûd
 - 
m¥oc
), 
èddr
, &
d©a
Ë!
OK
)

71 (-
î∫o
);

72 
mm_out
.
m2_l2
 = 
d©a
;

73 (
OK
);

74 
	}
}

79 
PRIVATE
 
m¥oc
 *
	$föd¥oc
(
Õid
)

80 
pid_t
 
Õid
;

82 
m¥oc
 *
rmp
;

84 
rmp
 = &
m¥oc
[
INIT_PROC_NR
 + 1];Ñm∞< &m¥oc[
NR_PROCS
];Ñmp++)

85 i‡(
rmp
->
mp_Êags
 & 
IN_USE
 &&Ñmp->
mp_pid
 =
Õid
) (rmp);

86 (
NIL_MPROC
);

87 
	}
}

92 
PUBLIC
 
	$°›_¥oc
(
rmp
, 
signo
)

93 
m¥oc
 *
rmp
;

94 
signo
;

98 
m¥oc
 *
Ωmp
 = m¥o¯+ 
rmp
->
mp_∑ª¡
;

100 i‡(
	`sys_åa˚
(-1, (Ë(
rmp
 - 
m¥oc
), 0L, (*Ë0Ë!
OK
) ;

101 
rmp
->
mp_Êags
 |
STOPPED
;

102 i‡(
Ωmp
->
mp_Êags
 & 
WAITING
) {

103 
Ωmp
->
mp_Êags
 &~
WAITING
;

104 
	`ª∂y
(
rmp
->
mp_∑ª¡
,Ñmp->
mp_pid
, 0177 | (
signo
 << 8), 
NIL_PTR
);

106 
rmp
->
mp_sig°©us
 = 
signo
;

109 
	}
}

	@tty.c

47 
	~"kî√l.h
"

48 
	~<ãrmios.h
>

49 #i‡
ENABLE_SRCCOMPAT
 || 
ENABLE_BINCOMPAT


50 
	~<sgây.h
>

52 
	~<sys/io˘l.h
>

53 
	~<sig«l.h
>

54 
	~<möix/ˇŒƒ.h
>

55 
	~<möix/com.h
>

56 #i‡(
CHIP
 =
INTEL
)

57 
	~<möix/keym≠.h
>

59 
	~"ây.h
"

60 
	~"¥oc.h
"

63 
	#ây_addr
(
löe
Ë(&
ây_èbÀ
[löe])

	)

66 
	#CONS_MINOR
 0

	)

67 
	#LOG_MINOR
 15

	)

68 
	#RS232_MINOR
 16

	)

69 
	#TTYPX_MINOR
 128

	)

70 
	#PTYPX_MINOR
 192

	)

73 
	#isc⁄sﬁe
(
ç
Ë(—pË< 
	`ây_addr
(
NR_CONS
))

	)

76 
	#FIRST_TTY
 
	`ây_addr
(0)

	)

77 
	#END_TTY
 
	`ây_addr
((
ây_èbÀ
Ë/ —ty_èbÀ[0]))

	)

80 
	#ây_a˘ive
(
ç
Ë(—p)->
ây_devªad
 !
NULL
)

	)

83 #i‡
NR_RS_LINES
 == 0

84 
	#rs_öô
(
ç
Ë((Ë0)

	)

86 #i‡
NR_PTYS
 == 0

87 
	#±y_öô
(
ç
Ë((Ë0)

	)

88 
	#do_±y
(
ç
, 
mp
Ë((Ë0)

	)

91 
FORWARD
 
_PROTOTYPE
–
do_ˇn˚l
, (
ây_t
 *
ç
, 
mesßge
 *
m_±r
) );

92 
FORWARD
 
_PROTOTYPE
–
do_io˘l
, (
ây_t
 *
ç
, 
mesßge
 *
m_±r
) );

93 
FORWARD
 
_PROTOTYPE
–
do_›í
, (
ây_t
 *
ç
, 
mesßge
 *
m_±r
) );

94 
FORWARD
 
_PROTOTYPE
–
do_˛o£
, (
ây_t
 *
ç
, 
mesßge
 *
m_±r
) );

95 
FORWARD
 
_PROTOTYPE
–
do_ªad
, (
ây_t
 *
ç
, 
mesßge
 *
m_±r
) );

96 
FORWARD
 
_PROTOTYPE
–
do_wrôe
, (
ây_t
 *
ç
, 
mesßge
 *
m_±r
) );

97 
FORWARD
 
_PROTOTYPE
–
ö_å™s„r
, (
ây_t
 *
ç
) );

98 
FORWARD
 
_PROTOTYPE
–
echo
, (
ây_t
 *
ç
, 
ch
) );

99 
FORWARD
 
_PROTOTYPE
–
øwecho
, (
ây_t
 *
ç
, 
ch
) );

100 
FORWARD
 
_PROTOTYPE
–
back_ovî
, (
ây_t
 *
ç
) );

101 
FORWARD
 
_PROTOTYPE
–
ª¥öt
, (
ây_t
 *
ç
) );

102 
FORWARD
 
_PROTOTYPE
–
dev_io˘l
, (
ây_t
 *
ç
) );

103 
FORWARD
 
_PROTOTYPE
–
£èâr
, (
ây_t
 *
ç
) );

104 
FORWARD
 
_PROTOTYPE
–
ây_iˇn˚l
, (
ây_t
 *
ç
) );

105 
FORWARD
 
_PROTOTYPE
–
ây_öô
, (
ây_t
 *
ç
) );

106 
FORWARD
 
_PROTOTYPE
–
£âimî
, (
ây_t
 *
ç
, 
⁄
) );

107 #i‡
ENABLE_SRCCOMPAT
 || 
ENABLE_BINCOMPAT


108 
FORWARD
 
_PROTOTYPE
–
com∑t_gëp
, (
ây_t
 *
ç
, 
sgâyb
 *
sg
) );

109 
FORWARD
 
_PROTOTYPE
–
com∑t_gëc
, (
ây_t
 *
ç
, 
tch¨s
 *
sg
) );

110 
FORWARD
 
_PROTOTYPE
–
com∑t_£ç
, (
ây_t
 *
ç
, 
sgâyb
 *
sg
) );

111 
FORWARD
 
_PROTOTYPE
–
com∑t_£tc
, (
ây_t
 *
ç
, 
tch¨s
 *
sg
) );

112 
FORWARD
 
_PROTOTYPE
–
t•d2sg•d
, (
•ìd_t
 
t•d
) );

113 
FORWARD
 
_PROTOTYPE
–
•ìd_t
 
sg•d2t•d
, (
sg•d
) );

114 #i‡
ENABLE_BINCOMPAT


115 
FORWARD
 
_PROTOTYPE
–
do_io˘l_com∑t
, (
ây_t
 *
ç
, 
mesßge
 *
m_±r
) );

120 
PRIVATE
 
ãrmios
 
	gãrmios_deÁu…s
 = {

121 
TINPUT_DEF
, 
TOUTPUT_DEF
, 
TCTRL_DEF
, 
TLOCAL_DEF
, 
TSPEED_DEF
, TSPEED_DEF,

123 
TEOF_DEF
, 
TEOL_DEF
, 
TERASE_DEF
, 
TINTR_DEF
, 
TKILL_DEF
, 
TMIN_DEF
,

124 
TQUIT_DEF
, 
TTIME_DEF
, 
TSUSP_DEF
, 
TSTART_DEF
, 
TSTOP_DEF
,

125 
TREPRINT_DEF
, 
TLNEXT_DEF
, 
TDISCARD_DEF
,

128 
PRIVATE
 
wösize
 
	gwösize_deÁu…s
;

134 
PUBLIC
 
	$ây_èsk
()

138 
mesßge
 
ây_mess
;

139 
ây_t
 *
ç
;

140 
löe
;

143 
ç
 = 
FIRST_TTY
;Å∞< 
END_TTY
;Åp++Ë
	`ây_öô
(tp);

146 
	`¥ötf
("Minix %s.%s Copyright 1997 Prentice-Hall, Inc.\n\n",

147 
OS_RELEASE
, 
OS_VERSION
);

149 #i‡(
CHIP
 =
INTEL
)

151 #i‡
_WORD_SIZE
 == 4

152 
	`¥ötf
("Executing in 32-bitÖrotected mode\n\n");

154 
	`¥ötf
("Executing in %s mode\n\n",

155 
¥Ÿe˘ed_mode
 ? "16-bitÖrotected" : "real");

159 
TRUE
) {

161 
ç
 = 
FIRST_TTY
;Å∞< 
END_TTY
;Åp++) {

162 i‡(
ç
->
ây_evíts
Ë
	`h™dÀ_evíts
(tp);

165 
	`ª˚ive
(
ANY
, &
ây_mess
);

168 i‡(
ây_mess
.
m_ty≥
 =
HARD_INT
) ;

171 
löe
 = 
ây_mess
.
TTY_LINE
;

172 i‡((
löe
 - 
CONS_MINOR
Ë< 
NR_CONS
) {

173 
ç
 = 
	`ây_addr
(
löe
 - 
CONS_MINOR
);

175 i‡(
löe
 =
LOG_MINOR
) {

176 
ç
 = 
	`ây_addr
(0);

178 i‡((
löe
 - 
RS232_MINOR
Ë< 
NR_RS_LINES
) {

179 
ç
 = 
	`ây_addr
(
löe
 - 
RS232_MINOR
 + 
NR_CONS
);

181 i‡((
löe
 - 
TTYPX_MINOR
Ë< 
NR_PTYS
) {

182 
ç
 = 
	`ây_addr
(
löe
 - 
TTYPX_MINOR
 + 
NR_CONS
 + 
NR_RS_LINES
);

184 i‡((
löe
 - 
PTYPX_MINOR
Ë< 
NR_PTYS
) {

185 
ç
 = 
	`ây_addr
(
löe
 - 
PTYPX_MINOR
 + 
NR_CONS
 + 
NR_RS_LINES
);

186 
	`do_±y
(
ç
, &
ây_mess
);

189 
ç
 = 
NULL
;

193 i‡(
ç
 =
NULL
 || !
	`ây_a˘ive
(tp)) {

194 
	`ây_ª∂y
(
TASK_REPLY
, 
ây_mess
.
m_sour˚
,

195 
ây_mess
.
PROC_NR
, 
ENXIO
);

200 
ây_mess
.
m_ty≥
) {

201 
DEV_READ
: 
	`do_ªad
(
ç
, &
ây_mess
); ;

202 
DEV_WRITE
: 
	`do_wrôe
(
ç
, &
ây_mess
); ;

203 
DEV_IOCTL
: 
	`do_io˘l
(
ç
, &
ây_mess
); ;

204 
DEV_OPEN
: 
	`do_›í
(
ç
, &
ây_mess
); ;

205 
DEV_CLOSE
: 
	`do_˛o£
(
ç
, &
ây_mess
); ;

206 
CANCEL
: 
	`do_ˇn˚l
(
ç
, &
ây_mess
); ;

207 : 
	`ây_ª∂y
(
TASK_REPLY
, 
ây_mess
.
m_sour˚
,

208 
ây_mess
.
PROC_NR
, 
EINVAL
);

211 
	}
}

217 
PRIVATE
 
	$do_ªad
(
ç
, 
m_±r
)

218 
ây_t
 *
ç
;

219 
mesßge
 *
m_±r
;

222 
r
;

227 i‡(
ç
->
ây_öÀ·
 > 0) {

228 
r
 = 
EIO
;

230 i‡(
m_±r
->
COUNT
 <= 0) {

231 
r
 = 
EINVAL
;

233 i‡(
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
Ëm_±r->
ADDRESS
, m_±r->
COUNT
) == 0) {

234 
r
 = 
EFAULT
;

237 
ç
->
ây_öªpcode
 = 
TASK_REPLY
;

238 
ç
->
ây_öˇŒî
 = 
m_±r
->
m_sour˚
;

239 
ç
->
ây_ö¥oc
 = 
m_±r
->
PROC_NR
;

240 
ç
->
ây_ö_vú
 = (
vú_byãs
Ë
m_±r
->
ADDRESS
;

241 
ç
->
ây_öÀ·
 = 
m_±r
->
COUNT
;

243 i‡(!(
ç
->
ây_ãrmios
.
c_lÊag
 & 
ICANON
)

244 && 
ç
->
ây_ãrmios
.
c_cc
[
VTIME
] > 0) {

245 i‡(
ç
->
ây_ãrmios
.
c_cc
[
VMIN
] == 0) {

249 
	`lock
();

250 
	`£âimî
(
ç
, 
TRUE
);

251 
ç
->
ây_mö
 = 1;

252 
	`u∆ock
();

257 i‡(
ç
->
ây_eŸ˘
 == 0) {

258 
	`lock
();

259 
	`£âimî
(
ç
, 
FALSE
);

260 
	`u∆ock
();

261 
ç
->
ây_mö
 =Åp->
ây_ãrmios
.
c_cc
[
VMIN
];

267 
	`ö_å™s„r
(
ç
);

269 
	`h™dÀ_evíts
(
ç
);

270 i‡(
ç
->
ây_öÀ·
 == 0) ;

275 i‡(
m_±r
->
TTY_FLAGS
 & 
O_NONBLOCK
) {

276 
r
 = 
EAGAIN
;

277 
ç
->
ây_öÀ·
 =Åp->
ây_öcum
 = 0;

279 
r
 = 
SUSPEND
;

280 
ç
->
ây_öªpcode
 = 
REVIVE
;

283 
	`ây_ª∂y
(
TASK_REPLY
, 
m_±r
->
m_sour˚
, m_±r->
PROC_NR
, 
r
);

284 
	}
}

290 
PRIVATE
 
	$do_wrôe
(
ç
, 
m_±r
)

291 
ây_t
 *
ç
;

292 
mesßge
 *
m_±r
;

295 
r
;

300 i‡(
ç
->
ây_ouée·
 > 0) {

301 
r
 = 
EIO
;

303 i‡(
m_±r
->
COUNT
 <= 0) {

304 
r
 = 
EINVAL
;

306 i‡(
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
Ëm_±r->
ADDRESS
, m_±r->
COUNT
) == 0) {

307 
r
 = 
EFAULT
;

310 
ç
->
ây_ouåïcode
 = 
TASK_REPLY
;

311 
ç
->
ây_outˇŒî
 = 
m_±r
->
m_sour˚
;

312 
ç
->
ây_ouçroc
 = 
m_±r
->
PROC_NR
;

313 
ç
->
ây_out_vú
 = (
vú_byãs
Ë
m_±r
->
ADDRESS
;

314 
ç
->
ây_ouée·
 = 
m_±r
->
COUNT
;

317 
	`h™dÀ_evíts
(
ç
);

318 i‡(
ç
->
ây_ouée·
 == 0) ;

323 i‡(
m_±r
->
TTY_FLAGS
 & 
O_NONBLOCK
) {

324 
r
 = 
ç
->
ây_outcum
 > 0 ?Åp->ây_outcum : 
EAGAIN
;

325 
ç
->
ây_ouée·
 =Åp->
ây_outcum
 = 0;

327 
r
 = 
SUSPEND
;

328 
ç
->
ây_ouåïcode
 = 
REVIVE
;

331 
	`ây_ª∂y
(
TASK_REPLY
, 
m_±r
->
m_sour˚
, m_±r->
PROC_NR
, 
r
);

332 
	}
}

338 
PRIVATE
 
	$do_io˘l
(
ç
, 
m_±r
)

339 
ây_t
 *
ç
;

340 
mesßge
 *
m_±r
;

346 
r
;

348 
i
;

349 #i‡
ENABLE_SRCCOMPAT


350 
sgâyb
 
sg
;

351 
tch¨s
 
tc
;

353 } 
∑øm
;

354 
phys_byãs
 
u£r_phys
;

355 
size_t
 
size
;

358 
m_±r
->
TTY_REQUEST
) {

359 
TCGETS
:

360 
TCSETS
:

361 
TCSETSW
:

362 
TCSETSF
:

363 
size
 = (
ãrmios
);

366 
TCSBRK
:

367 
TCFLOW
:

368 
TCFLSH
:

369 
TIOCGPGRP
:

370 
TIOCSPGRP
:

371 
size
 = ();

374 
TIOCGWINSZ
:

375 
TIOCSWINSZ
:

376 
size
 = (
wösize
);

379 #i‡
ENABLE_SRCCOMPAT


380 
TIOCGETP
:

381 
TIOCSETP
:

382 
size
 = (
sgâyb
);

385 
TIOCGETC
:

386 
TIOCSETC
:

387 
size
 = (
tch¨s
);

390 #i‡(
MACHINE
 =
IBM_PC
)

391 
KIOCSMAP
:

392 
size
 = (
keym≠_t
);

395 
TIOCSFON
:

396 
size
 = (
u8_t
 [8192]);

400 
TCDRAIN
:

401 : 
size
 = 0;

404 i‡(
size
 != 0) {

405 
u£r_phys
 = 
	`num≠
(
m_±r
->
PROC_NR
, (
vú_byãs
Ëm_±r->
ADDRESS
, 
size
);

406 i‡(
u£r_phys
 == 0) {

407 
	`ây_ª∂y
(
TASK_REPLY
, 
m_±r
->
m_sour˚
, m_±r->
PROC_NR
, 
EFAULT
);

412 
r
 = 
OK
;

413 
m_±r
->
TTY_REQUEST
) {

414 
TCGETS
:

416 
	`phys_c›y
(
	`vú2phys
(&
ç
->
ây_ãrmios
), 
u£r_phys
, (
phys_byãs
Ë
size
);

419 
TCSETSW
:

420 
TCSETSF
:

421 
TCDRAIN
:

422 i‡(
ç
->
ây_ouée·
 > 0) {

424 
ç
->
ây_ioˇŒî
 = 
m_±r
->
m_sour˚
;

425 
ç
->
ây_i›roc
 = 
m_±r
->
PROC_NR
;

426 
ç
->
ây_i‹eq
 = 
m_±r
->
REQUEST
;

427 
ç
->
ây_iovú
 = (
vú_byãs
Ë
m_±r
->
ADDRESS
;

428 
r
 = 
SUSPEND
;

431 i‡(
m_±r
->
TTY_REQUEST
 =
TCDRAIN
) ;

432 i‡(
m_±r
->
TTY_REQUEST
 =
TCSETSF
Ë
	`ây_iˇn˚l
(
ç
);

434 
TCSETS
:

436 
	`phys_c›y
(
u£r_phys
, 
	`vú2phys
(&
ç
->
ây_ãrmios
), (
phys_byãs
Ë
size
);

437 
	`£èâr
(
ç
);

440 
TCFLSH
:

441 
	`phys_c›y
(
u£r_phys
, 
	`vú2phys
(&
∑øm
.
i
), (
phys_byãs
Ë
size
);

442 
∑øm
.
i
) {

443 
TCIFLUSH
: 
	`ây_iˇn˚l
(
ç
); ;

444 
TCOFLUSH
: (*
ç
->
ây_oˇn˚l
)(tp); ;

445 
TCIOFLUSH
: 
	`ây_iˇn˚l
(
ç
); (*ç->
ây_oˇn˚l
)(tp);;

446 : 
r
 = 
EINVAL
;

450 
TCFLOW
:

451 
	`phys_c›y
(
u£r_phys
, 
	`vú2phys
(&
∑øm
.
i
), (
phys_byãs
Ë
size
);

452 
∑øm
.
i
) {

453 
TCOOFF
:

454 
TCOON
:

455 
ç
->
ây_öhibôed
 = (
∑øm
.
i
 =
TCOOFF
);

456 
ç
->
ây_evíts
 = 1;

458 
TCIOFF
:

459 (*
ç
->
ây_echo
)—p,Åp->
ây_ãrmios
.
c_cc
[
VSTOP
]);

461 
TCION
:

462 (*
ç
->
ây_echo
)—p,Åp->
ây_ãrmios
.
c_cc
[
VSTART
]);

465 
r
 = 
EINVAL
;

469 
TCSBRK
:

470 i‡(
ç
->
ây_bªak
 !
NULL
) (*tp->tty_break)(tp);

473 
TIOCGWINSZ
:

474 
	`phys_c›y
(
	`vú2phys
(&
ç
->
ây_wösize
), 
u£r_phys
, (
phys_byãs
Ë
size
);

477 
TIOCSWINSZ
:

478 
	`phys_c›y
(
u£r_phys
, 
	`vú2phys
(&
ç
->
ây_wösize
), (
phys_byãs
Ë
size
);

482 #i‡
ENABLE_SRCCOMPAT


483 
TIOCGETP
:

484 
	`com∑t_gëp
(
ç
, &
∑øm
.
sg
);

485 
	`phys_c›y
(
	`vú2phys
(&
∑øm
.
sg
), 
u£r_phys
, (
phys_byãs
Ë
size
);

488 
TIOCSETP
:

489 
	`phys_c›y
(
u£r_phys
, 
	`vú2phys
(&
∑øm
.
sg
), (
phys_byãs
Ë
size
);

490 
	`com∑t_£ç
(
ç
, &
∑øm
.
sg
);

493 
TIOCGETC
:

494 
	`com∑t_gëc
(
ç
, &
∑øm
.
tc
);

495 
	`phys_c›y
(
	`vú2phys
(&
∑øm
.
tc
), 
u£r_phys
, (
phys_byãs
Ë
size
);

498 
TIOCSETC
:

499 
	`phys_c›y
(
u£r_phys
, 
	`vú2phys
(&
∑øm
.
tc
), (
phys_byãs
Ë
size
);

500 
	`com∑t_£tc
(
ç
, &
∑øm
.
tc
);

504 #i‡(
MACHINE
 =
IBM_PC
)

505 
KIOCSMAP
:

507 i‡(
	`isc⁄sﬁe
(
ç
)Ë
r
 = 
	`kbd_lﬂdm≠
(
u£r_phys
);

510 
TIOCSFON
:

512 i‡(
	`isc⁄sﬁe
(
ç
)Ë
r
 = 
	`c⁄_lﬂdf⁄t
(
u£r_phys
);

516 #i‡(
MACHINE
 =
ATARI
)

517 
VDU_LOADFONT
:

518 
r
 = 
	`vdu_lﬂdf⁄t
(
m_±r
);

525 
TIOCGPGRP
:

526 
TIOCSPGRP
:

528 #i‡
ENABLE_BINCOMPAT


529 
	`do_io˘l_com∑t
(
ç
, 
m_±r
);

532 
r
 = 
ENOTTY
;

537 
	`ây_ª∂y
(
TASK_REPLY
, 
m_±r
->
m_sour˚
, m_±r->
PROC_NR
, 
r
);

538 
	}
}

544 
PRIVATE
 
	$do_›í
(
ç
, 
m_±r
)

545 
ây_t
 *
ç
;

546 
mesßge
 *
m_±r
;

552 
r
 = 
OK
;

554 i‡(
m_±r
->
TTY_LINE
 =
LOG_MINOR
) {

556 i‡(
m_±r
->
COUNT
 & 
R_BIT
Ë
r
 = 
EACCES
;

558 i‡(!(
m_±r
->
COUNT
 & 
O_NOCTTY
)) {

559 
ç
->
ây_pgΩ
 = 
m_±r
->
PROC_NR
;

560 
r
 = 1;

562 
ç
->
ây_›í˘
++;

564 
	`ây_ª∂y
(
TASK_REPLY
, 
m_±r
->
m_sour˚
, m_±r->
PROC_NR
, 
r
);

565 
	}
}

571 
PRIVATE
 
	$do_˛o£
(
ç
, 
m_±r
)

572 
ây_t
 *
ç
;

573 
mesßge
 *
m_±r
;

577 i‡(
m_±r
->
TTY_LINE
 !
LOG_MINOR
 && --
ç
->
ây_›í˘
 == 0) {

578 
ç
->
ây_pgΩ
 = 0;

579 
	`ây_iˇn˚l
(
ç
);

580 (*
ç
->
ây_oˇn˚l
)(tp);

581 (*
ç
->
ây_˛o£
)(tp);

582 
ç
->
ây_ãrmios
 = 
ãrmios_deÁu…s
;

583 
ç
->
ây_wösize
 = 
wösize_deÁu…s
;

584 
	`£èâr
(
ç
);

586 
	`ây_ª∂y
(
TASK_REPLY
, 
m_±r
->
m_sour˚
, m_±r->
PROC_NR
, 
OK
);

587 
	}
}

593 
PRIVATE
 
	$do_ˇn˚l
(
ç
, 
m_±r
)

594 
ây_t
 *
ç
;

595 
mesßge
 *
m_±r
;

601 
¥oc_ƒ
;

602 
mode
;

605 
¥oc_ƒ
 = 
m_±r
->
PROC_NR
;

606 
mode
 = 
m_±r
->
COUNT
;

607 i‡((
mode
 & 
R_BIT
Ë&& 
ç
->
ây_öÀ·
 !0 && 
¥oc_ƒ
 =ç->
ây_ö¥oc
) {

609 
	`ây_iˇn˚l
(
ç
);

610 
ç
->
ây_öÀ·
 =Åp->
ây_öcum
 = 0;

612 i‡((
mode
 & 
W_BIT
Ë&& 
ç
->
ây_ouée·
 !0 && 
¥oc_ƒ
 =ç->
ây_ouçroc
) {

614 (*
ç
->
ây_oˇn˚l
)(tp);

615 
ç
->
ây_ouée·
 =Åp->
ây_outcum
 = 0;

617 i‡(
ç
->
ây_i‹eq
 !0 && 
¥oc_ƒ
 =ç->
ây_i›roc
) {

619 
ç
->
ây_i‹eq
 = 0;

621 
ç
->
ây_evíts
 = 1;

622 
	`ây_ª∂y
(
TASK_REPLY
, 
m_±r
->
m_sour˚
, 
¥oc_ƒ
, 
EINTR
);

623 
	}
}

629 
PUBLIC
 
	$h™dÀ_evíts
(
ç
)

630 
ây_t
 *
ç
;

645 *
buf
;

646 
cou¡
;

649 
ç
->
ây_evíts
 = 0;

652 (*
ç
->
ây_devªad
)(tp);

655 (*
ç
->
ây_devwrôe
)(tp);

658 i‡(
ç
->
ây_i‹eq
 !0Ë
	`dev_io˘l
(tp);

659 } 
ç
->
ây_evíts
);

662 
	`ö_å™s„r
(
ç
);

665 i‡(
ç
->
ây_öcum
 >ç->
ây_mö
 &&Åp->
ây_öÀ·
 > 0) {

666 
	`ây_ª∂y
(
ç
->
ây_öªpcode
,Åp->
ây_öˇŒî
,Åp->
ây_ö¥oc
,

667 
ç
->
ây_öcum
);

668 
ç
->
ây_öÀ·
 =Åp->
ây_öcum
 = 0;

670 
	}
}

676 
PRIVATE
 
	$ö_å™s„r
(
ç
)

677 
ây_t
 *
ç
;

681 
ch
;

682 
cou¡
;

683 
phys_byãs
 
buf_phys
, 
u£r_ba£
;

684 
buf
[64], *
bp
;

687 i‡(
ç
->
ây_öÀ·
 =0 ||Åp->
ây_eŸ˘
 <Åp->
ây_mö
) ;

689 
buf_phys
 = 
	`vú2phys
(
buf
);

690 
u£r_ba£
 = 
	`¥oc_vú2phys
(
	`¥oc_addr
(
ç
->
ây_ö¥oc
), 0);

691 
bp
 = 
buf
;

692 
ç
->
ây_öÀ·
 > 0 &&Åp->
ây_eŸ˘
 > 0) {

693 
ch
 = *
ç
->
ây_öèû
;

695 i‡(!(
ch
 & 
IN_EOF
)) {

697 *
bp
 = 
ch
 & 
IN_CHAR
;

698 
ç
->
ây_öÀ·
--;

699 i‡(++
bp
 =
	`bu„nd
(
buf
)) {

701 
	`phys_c›y
(
buf_phys
, 
u£r_ba£
 + 
ç
->
ây_ö_vú
,

702 (
phys_byãs
Ë
	`buÊí
(
buf
));

703 
ç
->
ây_ö_vú
 +
	`buÊí
(
buf
);

704 
ç
->
ây_öcum
 +
	`buÊí
(
buf
);

705 
bp
 = 
buf
;

710 i‡(++
ç
->
ây_öèû
 =
	`bu„nd
—p->
ây_öbuf
))

711 
ç
->
ây_öèû
 =Åp->
ây_öbuf
;

712 
ç
->
ây_öcou¡
--;

713 i‡(
ch
 & 
IN_EOT
) {

714 
ç
->
ây_eŸ˘
--;

716 i‡(
ç
->
ây_ãrmios
.
c_lÊag
 & 
ICANON
Ëç->
ây_öÀ·
 = 0;

720 i‡(
bp
 > 
buf
) {

722 
cou¡
 = 
bp
 - 
buf
;

723 
	`phys_c›y
(
buf_phys
, 
u£r_ba£
 + 
ç
->
ây_ö_vú
, (
phys_byãs
Ë
cou¡
);

724 
ç
->
ây_ö_vú
 +
cou¡
;

725 
ç
->
ây_öcum
 +
cou¡
;

729 i‡(
ç
->
ây_öÀ·
 == 0) {

730 
	`ây_ª∂y
(
ç
->
ây_öªpcode
,Åp->
ây_öˇŒî
,Åp->
ây_ö¥oc
,

731 
ç
->
ây_öcum
);

732 
ç
->
ây_öÀ·
 =Åp->
ây_öcum
 = 0;

734 
	}
}

740 
PUBLIC
 
	$ö_¥o˚ss
(
ç
, 
buf
, 
cou¡
)

741 
ây_t
 *
ç
;

742 *
buf
;

743 
cou¡
;

749 
ch
, 
sig
, 
˘
;

750 
time£t
 = 
FALSE
;

751 
csize_mask
[] = { 0x1F, 0x3F, 0x7F, 0xFF };

753 
˘
 = 0; cà< 
cou¡
; ct++) {

755 
ch
 = *
buf
++ & 
BYTE
;

758 i‡(
ç
->
ây_ãrmios
.
c_iÊag
 & 
ISTRIP
Ë
ch
 &= 0x7F;

761 i‡(
ç
->
ây_ãrmios
.
c_lÊag
 & 
IEXTEN
) {

764 i‡(
ç
->
ây_esˇ≥d
) {

765 
ç
->
ây_esˇ≥d
 = 
NOT_ESCAPED
;

766 
ch
 |
IN_ESC
;

770 i‡(
ch
 =
ç
->
ây_ãrmios
.
c_cc
[
VLNEXT
]) {

771 
ç
->
ây_esˇ≥d
 = 
ESCAPED
;

772 
	`øwecho
(
ç
, '^');

773 
	`øwecho
(
ç
, '\b');

778 i‡(
ch
 =
ç
->
ây_ãrmios
.
c_cc
[
VREPRINT
]) {

779 
	`ª¥öt
(
ç
);

785 i‡(
ch
 =
_POSIX_VDISABLE
Ëch |
IN_ESC
;

788 i‡(
ch
 == '\r') {

789 i‡(
ç
->
ây_ãrmios
.
c_iÊag
 & 
IGNCR
) ;

790 i‡(
ç
->
ây_ãrmios
.
c_iÊag
 & 
ICRNL
Ë
ch
 = '\n';

792 i‡(
ch
 == '\n') {

793 i‡(
ç
->
ây_ãrmios
.
c_iÊag
 & 
INLCR
Ë
ch
 = '\r';

797 i‡(
ç
->
ây_ãrmios
.
c_lÊag
 & 
ICANON
) {

800 i‡(
ch
 =
ç
->
ây_ãrmios
.
c_cc
[
VERASE
]) {

801 (Ë
	`back_ovî
(
ç
);

802 i‡(!(
ç
->
ây_ãrmios
.
c_lÊag
 & 
ECHOE
)) {

803 (Ë
	`echo
(
ç
, 
ch
);

809 i‡(
ch
 =
ç
->
ây_ãrmios
.
c_cc
[
VKILL
]) {

810 
	`back_ovî
(
ç
)) {}

811 i‡(!(
ç
->
ây_ãrmios
.
c_lÊag
 & 
ECHOE
)) {

812 (Ë
	`echo
(
ç
, 
ch
);

813 i‡(
ç
->
ây_ãrmios
.
c_lÊag
 & 
ECHOK
)

814 
	`øwecho
(
ç
, '\n');

820 i‡(
ch
 =
ç
->
ây_ãrmios
.
c_cc
[
VEOF
]Ëch |
IN_EOT
 | 
IN_EOF
;

823 i‡(
ch
 ='\n'Ëch |
IN_EOT
;

826 i‡(
ch
 =
ç
->
ây_ãrmios
.
c_cc
[
VEOL
]Ëch |
IN_EOT
;

830 i‡(
ç
->
ây_ãrmios
.
c_iÊag
 & 
IXON
) {

833 i‡(
ch
 =
ç
->
ây_ãrmios
.
c_cc
[
VSTOP
]) {

834 
ç
->
ây_öhibôed
 = 
STOPPED
;

835 
ç
->
ây_evíts
 = 1;

840 i‡(
ç
->
ây_öhibôed
) {

841 i‡(
ch
 =
ç
->
ây_ãrmios
.
c_cc
[
VSTART
]

842 || (
ç
->
ây_ãrmios
.
c_iÊag
 & 
IXANY
)) {

843 
ç
->
ây_öhibôed
 = 
RUNNING
;

844 
ç
->
ây_evíts
 = 1;

845 i‡(
ch
 =
ç
->
ây_ãrmios
.
c_cc
[
VSTART
])

851 i‡(
ç
->
ây_ãrmios
.
c_lÊag
 & 
ISIG
) {

853 i‡(
ch
 =
ç
->
ây_ãrmios
.
c_cc
[
VINTR
]

854 || 
ch
 =
ç
->
ây_ãrmios
.
c_cc
[
VQUIT
]) {

855 
sig
 = 
SIGINT
;

856 i‡(
ch
 =
ç
->
ây_ãrmios
.
c_cc
[
VQUIT
]Ë
sig
 = 
SIGQUIT
;

857 
	`sigch¨
(
ç
, 
sig
);

858 (Ë
	`echo
(
ç
, 
ch
);

864 i‡(
ç
->
ây_öcou¡
 =
	`buÊí
—p->
ây_öbuf
)) {

866 i‡(
ç
->
ây_ãrmios
.
c_lÊag
 & 
ICANON
) ;

870 i‡(!(
ç
->
ây_ãrmios
.
c_lÊag
 & 
ICANON
)) {

872 
ch
 |
IN_EOT
;

875 i‡(!
time£t
 && 
ç
->
ây_ãrmios
.
c_cc
[
VMIN
] > 0

876 && 
ç
->
ây_ãrmios
.
c_cc
[
VTIME
] > 0) {

877 
	`lock
();

878 
	`£âimî
(
ç
, 
TRUE
);

879 
	`u∆ock
();

880 
time£t
 = 
TRUE
;

885 i‡(
ç
->
ây_ãrmios
.
c_lÊag
 & (
ECHO
|
ECHONL
)Ë
ch
 = 
	`echo
(tp, ch);

888 *
ç
->
ây_öhód
++ = 
ch
;

889 i‡(
ç
->
ây_öhód
 =
	`bu„nd
—p->
ây_öbuf
))

890 
ç
->
ây_öhód
 =Åp->
ây_öbuf
;

891 
ç
->
ây_öcou¡
++;

892 i‡(
ch
 & 
IN_EOT
Ë
ç
->
ây_eŸ˘
++;

895 i‡(
ç
->
ây_öcou¡
 =
	`buÊí
—p->
ây_öbuf
)Ë
	`ö_å™s„r
(tp);

897  
˘
;

898 
	}
}

904 
PRIVATE
 
	$echo
(
ç
, 
ch
)

905 
ây_t
 *
ç
;

906 
ch
;

914 
Àn
, 
Ω
;

916 
ch
 &~
IN_LEN
;

917 i‡(!(
ç
->
ây_ãrmios
.
c_lÊag
 & 
ECHO
)) {

918 i‡(
ch
 =('\n' | 
IN_EOT
Ë&& (
ç
->
ây_ãrmios
.
c_lÊag


919 & (
ICANON
|
ECHONL
)) == (ICANON|ECHONL))

920 (*
ç
->
ây_echo
)(tp, '\n');

921 (
ch
);

925 
Ω
 = 
ç
->
ây_öcou¡
 =0 ? 
FALSE
 :Åp->
ây_ª¥öt
;

927 i‡((
ch
 & 
IN_CHAR
) < ' ') {

928 
ch
 & (
IN_ESC
|
IN_EOF
|
IN_EOT
|
IN_CHAR
)) {

930 
Àn
 = 0;

932 (*
ç
->
ây_echo
)(tp, ' ');

933 
Àn
++;

934 } 
Àn
 < 
TAB_SIZE
 && (
ç
->
ây_posôi⁄
 & 
TAB_MASK
) != 0);

936 '\r' | 
IN_EOT
:

937 '\n' | 
IN_EOT
:

938 (*
ç
->
ây_echo
)—p, 
ch
 & 
IN_CHAR
);

939 
Àn
 = 0;

942 (*
ç
->
ây_echo
)(tp, '^');

943 (*
ç
->
ây_echo
)—p, '@' + (
ch
 & 
IN_CHAR
));

944 
Àn
 = 2;

947 i‡((
ch
 & 
IN_CHAR
) == '\177') {

949 (*
ç
->
ây_echo
)(tp, '^');

950 (*
ç
->
ây_echo
)(tp, '?');

951 
Àn
 = 2;

953 (*
ç
->
ây_echo
)—p, 
ch
 & 
IN_CHAR
);

954 
Àn
 = 1;

956 i‡(
ch
 & 
IN_EOF
Ë
Àn
 > 0Ë{ (*
ç
->
ây_echo
)(tp, '\b');Üen--; }

958 
ç
->
ây_ª¥öt
 = 
Ω
;

959 (
ch
 | (
Àn
 << 
IN_LSHIFT
));

960 
	}
}

966 
PRIVATE
 
	$øwecho
(
ç
, 
ch
)

967 
ây_t
 *
ç
;

968 
ch
;

971 
Ω
 = 
ç
->
ây_ª¥öt
;

972 i‡(
ç
->
ây_ãrmios
.
c_lÊag
 & 
ECHO
Ë(*ç->
ây_echo
)—p, 
ch
);

973 
ç
->
ây_ª¥öt
 = 
Ω
;

974 
	}
}

980 
PRIVATE
 
	$back_ovî
(
ç
)

981 
ây_t
 *
ç
;

984 
u16_t
 *
hód
;

985 
Àn
;

987 i‡(
ç
->
ây_öcou¡
 == 0) (0);

988 
hód
 = 
ç
->
ây_öhód
;

989 i‡(
hód
 =
ç
->
ây_öbuf
Ëhód = 
	`bu„nd
(tp->tty_inbuf);

990 i‡(*--
hód
 & 
IN_EOT
) (0);

991 i‡(
ç
->
ây_ª¥öt
Ë
	`ª¥öt
(tp);

992 
ç
->
ây_öhód
 = 
hód
;

993 
ç
->
ây_öcou¡
--;

994 i‡(
ç
->
ây_ãrmios
.
c_lÊag
 & 
ECHOE
) {

995 
Àn
 = (*
hód
 & 
IN_LEN
Ë>> 
IN_LSHIFT
;

996 
Àn
 > 0) {

997 
	`øwecho
(
ç
, '\b');

998 
	`øwecho
(
ç
, ' ');

999 
	`øwecho
(
ç
, '\b');

1000 
Àn
--;

1004 
	}
}

1010 
PRIVATE
 
	$ª¥öt
(
ç
)

1011 
ây_t
 *
ç
;

1016 
cou¡
;

1017 
u16_t
 *
hód
;

1019 
ç
->
ây_ª¥öt
 = 
FALSE
;

1022 
hód
 = 
ç
->
ây_öhód
;

1023 
cou¡
 = 
ç
->
ây_öcou¡
;

1024 
cou¡
 > 0) {

1025 i‡(
hód
 =
ç
->
ây_öbuf
Ëhód = 
	`bu„nd
(tp->tty_inbuf);

1026 i‡(
hód
[-1] & 
IN_EOT
) ;

1027 
hód
--;

1028 
cou¡
--;

1030 i‡(
cou¡
 =
ç
->
ây_öcou¡
) ;

1033 (Ë
	`echo
(
ç
,Åp->
ây_ãrmios
.
c_cc
[
VREPRINT
] | 
IN_ESC
);

1034 
	`øwecho
(
ç
, '\r');

1035 
	`øwecho
(
ç
, '\n');

1039 i‡(
hód
 =
	`bu„nd
(
ç
->
ây_öbuf
)) head =Åp->tty_inbuf;

1040 *
hód
 = 
	`echo
(
ç
, *head);

1041 
hód
++;

1042 
cou¡
++;

1043 } 
cou¡
 < 
ç
->
ây_öcou¡
);

1044 
	}
}

1050 
PUBLIC
 
	$out_¥o˚ss
(
ç
, 
b°¨t
, 
bpos
, 
bíd
, 
icou¡
, 
ocou¡
)

1051 
ây_t
 *
ç
;

1052 *
b°¨t
, *
bpos
, *
bíd
;

1053 *
icou¡
;

1054 *
ocou¡
;

1063 
èbÀn
;

1064 
i˘
 = *
icou¡
;

1065 
o˘
 = *
ocou¡
;

1066 
pos
 = 
ç
->
ây_posôi⁄
;

1068 
i˘
 > 0) {

1069 *
bpos
) {

1073 
pos
--;

1076 
pos
 = 0;

1079 i‡((
ç
->
ây_ãrmios
.
c_oÊag
 & (
OPOST
|
ONLCR
))

1080 =(
OPOST
|
ONLCR
)) {

1085 i‡(
o˘
 >= 2) {

1086 *
bpos
 = '\r';

1087 i‡(++
bpos
 =
bíd
Ëbpo†
b°¨t
;

1088 *
bpos
 = '\n';

1089 
pos
 = 0;

1090 
i˘
--;

1091 
o˘
 -= 2;

1093 
out_d⁄e
;

1098 
èbÀn
 = 
TAB_SIZE
 - (
pos
 & 
TAB_MASK
);

1100 i‡((
ç
->
ây_ãrmios
.
c_oÊag
 & (
OPOST
|
XTABS
))

1101 =(
OPOST
|
XTABS
)) {

1103 i‡(
o˘
 >
èbÀn
) {

1104 
pos
 +
èbÀn
;

1105 
i˘
--;

1106 
o˘
 -
èbÀn
;

1108 *
bpos
 = ' ';

1109 i‡(++
bpos
 =
bíd
Ëbpo†
b°¨t
;

1110 } --
èbÀn
 != 0);

1112 
out_d⁄e
;

1115 
pos
 +
èbÀn
;

1119 
pos
++;

1121 i‡(++
bpos
 =
bíd
Ëbpo†
b°¨t
;

1122 
i˘
--;

1123 
o˘
--;

1125 
out_d⁄e
:

1126 
ç
->
ây_posôi⁄
 = 
pos
 & 
TAB_MASK
;

1128 *
icou¡
 -
i˘
;

1129 *
ocou¡
 -
o˘
;

1130 
	}
}

1136 
PRIVATE
 
	$dev_io˘l
(
ç
)

1137 
ây_t
 *
ç
;

1143 
phys_byãs
 
u£r_phys
;

1145 i‡(
ç
->
ây_ouée·
 > 0) ;

1147 i‡(
ç
->
ây_i‹eq
 !
TCDRAIN
) {

1148 i‡(
ç
->
ây_i‹eq
 =
TCSETSF
Ë
	`ây_iˇn˚l
(tp);

1149 
u£r_phys
 = 
	`¥oc_vú2phys
(
	`¥oc_addr
(
ç
->
ây_i›roc
),Åp->
ây_iovú
);

1150 
	`phys_c›y
(
u£r_phys
, 
	`vú2phys
(&
ç
->
ây_ãrmios
),

1151 (
phys_byãs
Ë(
ç
->
ây_ãrmios
));

1152 
	`£èâr
(
ç
);

1154 
ç
->
ây_i‹eq
 = 0;

1155 
	`ây_ª∂y
(
REVIVE
, 
ç
->
ây_ioˇŒî
,Åp->
ây_i›roc
, 
OK
);

1156 
	}
}

1162 
PRIVATE
 
	$£èâr
(
ç
)

1163 
ây_t
 *
ç
;

1166 
u16_t
 *
öp
;

1167 
cou¡
;

1169 i‡(!(
ç
->
ây_ãrmios
.
c_lÊag
 & 
ICANON
)) {

1176 
cou¡
 = 
ç
->
ây_eŸ˘
 =Åp->
ây_öcou¡
;

1177 
öp
 = 
ç
->
ây_öèû
;

1178 
cou¡
 > 0) {

1179 *
öp
 |
IN_EOT
;

1180 i‡(++
öp
 =
	`bu„nd
(
ç
->
ây_öbuf
)) inp =Åp->tty_inbuf;

1181 --
cou¡
;

1186 
	`lock
();

1187 
	`£âimî
(
ç
, 
FALSE
);

1188 
	`u∆ock
();

1189 i‡(
ç
->
ây_ãrmios
.
c_lÊag
 & 
ICANON
) {

1191 
ç
->
ây_mö
 = 1;

1196 
ç
->
ây_mö
 =Åp->
ây_ãrmios
.
c_cc
[
VMIN
];

1197 i‡(
ç
->
ây_mö
 =0 &&Åp->
ây_ãrmios
.
c_cc
[
VTIME
] > 0)

1198 
ç
->
ây_mö
 = 1;

1201 i‡(!(
ç
->
ây_ãrmios
.
c_iÊag
 & 
IXON
)) {

1203 
ç
->
ây_öhibôed
 = 
RUNNING
;

1204 
ç
->
ây_evíts
 = 1;

1208 i‡(
ç
->
ây_ãrmios
.
c_o•ìd
 =
B0
Ë
	`sigch¨
—p, 
SIGHUP
);

1211 (*
ç
->
ây_io˘l
)(tp);

1212 
	}
}

1218 
PUBLIC
 
	$ây_ª∂y
(
code
, 
ª∂yì
, 
¥oc_ƒ
, 
°©us
)

1219 
code
;

1220 
ª∂yì
;

1221 
¥oc_ƒ
;

1222 
°©us
;

1226 
mesßge
 
ây_mess
;

1228 
ây_mess
.
m_ty≥
 = 
code
;

1229 
ây_mess
.
REP_PROC_NR
 = 
¥oc_ƒ
;

1230 
ây_mess
.
REP_STATUS
 = 
°©us
;

1231 i‡((
°©us
 = 
	`£nd
(
ª∂yì
, &
ây_mess
)Ë!
OK
)

1232 
	`∑nic
("ây_ª∂y faûed, sètus\n", 
°©us
);

1233 
	}
}

1239 
PUBLIC
 
	$sigch¨
(
ç
, 
sig
)

1240 
ây_t
 *
ç
;

1241 
sig
;

1249 i‡(
ç
->
ây_pgΩ
 !0Ë
	`ˇu£_sig
—p->ây_pgΩ, 
sig
);

1251 i‡(!(
ç
->
ây_ãrmios
.
c_lÊag
 & 
NOFLSH
)) {

1252 
ç
->
ây_öcou¡
 =Åp->
ây_eŸ˘
 = 0;

1253 
ç
->
ây_öèû
 =Åp->
ây_öhód
;

1254 (*
ç
->
ây_oˇn˚l
)(tp);

1255 
ç
->
ây_öhibôed
 = 
RUNNING
;

1256 
ç
->
ây_evíts
 = 1;

1258 
	}
}

1264 
PRIVATE
 
	$ây_iˇn˚l
(
ç
)

1265 
ây_t
 *
ç
;

1269 
ç
->
ây_öcou¡
 =Åp->
ây_eŸ˘
 = 0;

1270 
ç
->
ây_öèû
 =Åp->
ây_öhód
;

1271 (*
ç
->
ây_iˇn˚l
)(tp);

1272 
	}
}

1278 
PRIVATE
 
	$ây_öô
(
ç
)

1279 
ây_t
 *
ç
;

1283 
ç
->
ây_öèû
 =Åp->
ây_öhód
 =Åp->
ây_öbuf
;

1284 
ç
->
ây_mö
 = 1;

1285 
ç
->
ây_ãrmios
 = 
ãrmios_deÁu…s
;

1286 
ç
->
ây_iˇn˚l
 =Åp->
ây_oˇn˚l
 =Åp->
ây_io˘l
 =Åp->
ây_˛o£
 =

1287 
ây_devn›
;

1288 i‡(
ç
 < 
	`ây_addr
(
NR_CONS
)) {

1289 
	`s¸_öô
(
ç
);

1291 i‡(
ç
 < 
	`ây_addr
(
NR_CONS
+
NR_RS_LINES
)) {

1292 
	`rs_öô
(
ç
);

1294 
	`±y_öô
(
ç
);

1296 
	}
}

1302 
PUBLIC
 
	$ây_wakeup
(
now
)

1303 
˛ock_t
 
now
;

1309 
ây_t
 *
ç
;

1312 
ây_timeout
 = 
TIME_NEVER
;

1313 (
ç
 = 
ây_timñi°
Ë!
NULL
) {

1314 i‡(
ç
->
ây_time
 > 
now
) {

1315 
ây_timeout
 = 
ç
->
ây_time
;

1318 
ç
->
ây_mö
 = 0;

1319 
ç
->
ây_evíts
 = 1;

1320 
ây_timñi°
 = 
ç
->
ây_timíext
;

1324 
	`öãºu±
(
TTY
);

1325 
	}
}

1331 
PRIVATE
 
	$£âimî
(
ç
, 
⁄
)

1332 
ây_t
 *
ç
;

1333 
⁄
;

1338 
ây_t
 **
±p
;

1341 
±p
 = &
ây_timñi°
; *±∞!
NULL
;Öç = &(*±p)->
ây_timíext
) {

1342 i‡(
ç
 =*
±p
) {

1343 *
±p
 = 
ç
->
ây_timíext
;

1347 i‡(!
⁄
) ;

1350 
ç
->
ây_time
 = 
	`gë_u±ime
(Ë+Åp->
ây_ãrmios
.
c_cc
[
VTIME
] * (
HZ
/10);

1353 
±p
 = &
ây_timñi°
; *±∞!
NULL
;Öç = &(*±p)->
ây_timíext
) {

1354 i‡(
ç
->
ây_time
 <(*
±p
)->tty_time) ;

1356 
ç
->
ây_timíext
 = *
±p
;

1357 *
±p
 = 
ç
;

1358 i‡(
ç
->
ây_time
 < 
ây_timeout
)Åty_timeout =Åp->tty_time;

1359 
	}
}

1365 
PUBLIC
 
	$ây_devn›
(
ç
)

1366 
ây_t
 *
ç
;

1369 
	}
}

1372 #i‡
ENABLE_SRCCOMPAT
 || 
ENABLE_BINCOMPAT


1376 
PRIVATE
 
	$com∑t_gëp
(
ç
, 
sg
)

1377 
ây_t
 *
ç
;

1378 
sgâyb
 *
sg
;

1381 
Êgs
;

1383 
sg
->
sg_îa£
 = 
ç
->
ây_ãrmios
.
c_cc
[
VERASE
];

1384 
sg
->
sg_kûl
 = 
ç
->
ây_ãrmios
.
c_cc
[
VKILL
];

1385 
sg
->
sg_o•ìd
 = 
	`t•d2sg•d
(
	`cfgëo•ìd
(&
ç
->
ây_ãrmios
));

1386 
sg
->
sg_i•ìd
 = 
	`t•d2sg•d
(
	`cfgëi•ìd
(&
ç
->
ây_ãrmios
));

1388 
Êgs
 = 0;

1391 i‡((
ç
->
ây_ãrmios
.
c_oÊag
 & (
OPOST
|
XTABS
)) == (OPOST|XTABS))

1392 
Êgs
 |= 0006000;

1395 
Êgs
 |(
ç
->
ây_ãrmios
.
c_cÊag
 & 
CSIZE
) << (8-2);

1398 i‡((
ç
->
ây_ãrmios
.
c_cÊag
 & (
PARENB
|
PARODD
)) == PARENB)

1399 
Êgs
 |= 0000200;

1402 i‡((
ç
->
ây_ãrmios
.
c_cÊag
 & (
PARENB
|
PARODD
)) == (PARENB|PARODD))

1403 
Êgs
 |= 0000100;

1406 i‡(!(
ç
->
ây_ãrmios
.
c_lÊag
 & (
ICANON
|
ISIG
)))

1407 
Êgs
 |= 0000040;

1410 i‡(
ç
->
ây_ãrmios
.
c_iÊag
 & 
ICRNL
)

1411 
Êgs
 |= 0000020;

1414 i‡(
ç
->
ây_ãrmios
.
c_lÊag
 & 
ECHO
)

1415 
Êgs
 |= 0000010;

1418 i‡((
ç
->
ây_ãrmios
.
c_lÊag
 & (
ICANON
|
ISIG
)) == ISIG)

1419 
Êgs
 |= 0000002;

1421 
sg
->
sg_Êags
 = 
Êgs
;

1422 (
OK
);

1423 
	}
}

1429 
PRIVATE
 
	$com∑t_gëc
(
ç
, 
tc
)

1430 
ây_t
 *
ç
;

1431 
tch¨s
 *
tc
;

1435 
tc
->
t_öåc
 = 
ç
->
ây_ãrmios
.
c_cc
[
VINTR
];

1436 
tc
->
t_quôc
 = 
ç
->
ây_ãrmios
.
c_cc
[
VQUIT
];

1437 
tc
->
t_°¨tc
 = 
ç
->
ây_ãrmios
.
c_cc
[
VSTART
];

1438 
tc
->
t_°›c
 = 
ç
->
ây_ãrmios
.
c_cc
[
VSTOP
];

1439 
tc
->
t_brkc
 = 
ç
->
ây_ãrmios
.
c_cc
[
VEOL
];

1440 
tc
->
t_eofc
 = 
ç
->
ây_ãrmios
.
c_cc
[
VEOF
];

1441 (
OK
);

1442 
	}
}

1448 
PRIVATE
 
	$com∑t_£ç
(
ç
, 
sg
)

1449 
ây_t
 *
ç
;

1450 
sgâyb
 *
sg
;

1453 
ãrmios
Åermios;

1454 
Êags
;

1456 
ãrmios
 = 
ç
->
ây_ãrmios
;

1458 
ãrmios
.
c_cc
[
VERASE
] = 
sg
->
sg_îa£
;

1459 
ãrmios
.
c_cc
[
VKILL
] = 
sg
->
sg_kûl
;

1460 
	`cf£ti•ìd
(&
ãrmios
, 
	`sg•d2t•d
(
sg
->
sg_i•ìd
 & 
BYTE
));

1461 
	`cf£to•ìd
(&
ãrmios
, 
	`sg•d2t•d
(
sg
->
sg_o•ìd
 & 
BYTE
));

1462 
Êags
 = 
sg
->
sg_Êags
;

1469 
ãrmios
.
c_iÊag
 &~
ICRNL
;

1470 i‡((
Êags
 & 0000020) && !(flags & 0000040))

1471 
ãrmios
.
c_iÊag
 |
ICRNL
;

1475 
ãrmios
.
c_iÊag
 &~
IGNCR
;

1479 
ãrmios
.
c_iÊag
 &~
INLCR
;

1485 
ãrmios
.
c_iÊag
 &~
IXON
;

1486 i‡(!(
Êags
 & 0000040))

1487 
ãrmios
.
c_iÊag
 |
IXON
;

1494 
ãrmios
.
c_oÊag
 &~
OPOST
;

1495 i‡(!(
Êags
 & 0000040))

1496 
ãrmios
.
c_oÊag
 |
OPOST
;

1499 
ãrmios
.
c_oÊag
 &~
ONLCR
;

1500 i‡(
Êags
 & 0000020)

1501 
ãrmios
.
c_oÊag
 |
ONLCR
;

1504 
ãrmios
.
c_oÊag
 &~
XTABS
;

1505 i‡(
Êags
 & 0006000)

1506 
ãrmios
.
c_oÊag
 |
XTABS
;

1510 
ãrmios
.
c_cÊag
 |
CREAD
;

1513 
ãrmios
.
c_cÊag
 = (ãrmios.c_cÊag & ~
CSIZE
Ë| ((
Êags
 & 0001400) >> (8-2));

1518 
ãrmios
.
c_cÊag
 &~
PARENB
;

1519 i‡(
Êags
 & (0000200|0000100))

1520 
ãrmios
.
c_cÊag
 |
PARENB
;

1523 
ãrmios
.
c_cÊag
 &~
PARODD
;

1524 i‡(
Êags
 & 0000100)

1525 
ãrmios
.
c_cÊag
 |
PARODD
;

1530 
ãrmios
.
c_lÊag
 &~
ECHO
;

1531 i‡(
Êags
 & 0000010)

1532 
ãrmios
.
c_lÊag
 |
ECHO
;

1538 
ãrmios
.
c_lÊag
 &~
ICANON
;

1539 i‡(!(
Êags
 & (0000002|0000040)))

1540 
ãrmios
.
c_lÊag
 |
ICANON
;

1544 
ãrmios
.
c_lÊag
 &~(
IEXTEN
|
ISIG
);

1545 i‡(!(
Êags
 & 0000040))

1546 
ãrmios
.
c_lÊag
 |(
IEXTEN
|
ISIG
);

1551 
ç
->
ây_ãrmios
 = 
ãrmios
;

1552 
	`£èâr
(
ç
);

1553 (
OK
);

1554 
	}
}

1560 
PRIVATE
 
	$com∑t_£tc
(
ç
, 
tc
)

1561 
ây_t
 *
ç
;

1562 
tch¨s
 *
tc
;

1565 
ãrmios
Åermios;

1567 
ãrmios
 = 
ç
->
ây_ãrmios
;

1569 
ãrmios
.
c_cc
[
VINTR
] = 
tc
->
t_öåc
;

1570 
ãrmios
.
c_cc
[
VQUIT
] = 
tc
->
t_quôc
;

1571 
ãrmios
.
c_cc
[
VSTART
] = 
tc
->
t_°¨tc
;

1572 
ãrmios
.
c_cc
[
VSTOP
] = 
tc
->
t_°›c
;

1573 
ãrmios
.
c_cc
[
VEOL
] = 
tc
->
t_brkc
;

1574 
ãrmios
.
c_cc
[
VEOF
] = 
tc
->
t_eofc
;

1576 
ç
->
ây_ãrmios
 = 
ãrmios
;

1577 
	`£èâr
(
ç
);

1578 (
OK
);

1579 
	}
}

1585 
PRIVATE
 
	ss2s
 {

1586 
•ìd_t
 
	mt•d
;

1587 
u8_t
 
	msg•d
;

1588 } 
	gts2sgs
[] = {

1589 { 
B0
, 0 },

1590 { 
B50
, 50 },

1591 { 
B75
, 75 },

1592 { 
B110
, 1 },

1593 { 
B134
, 134 },

1594 { 
B200
, 2 },

1595 { 
B300
, 3 },

1596 { 
B600
, 6 },

1597 { 
B1200
, 12 },

1598 { 
B1800
, 18 },

1599 { 
B2400
, 24 },

1600 { 
B4800
, 48 },

1601 { 
B9600
, 96 },

1602 { 
B19200
, 192 },

1603 { 
B38400
, 195 },

1604 { 
B57600
, 194 },

1605 { 
B115200
, 193 },

1611 
PRIVATE
 
	$t•d2sg•d
(
t•d
)

1612 
•ìd_t
 
t•d
;

1615 
s2s
 *
s
;

1617 
s
 = 
ts2sgs
; s <Ås2sgs + (ts2sgs)/(ts2sgs[0]); s++) {

1618 i‡(
s
->
t•d
 =t•dË(s->
sg•d
);

1621 
	}
}

1627 
PRIVATE
 
•ìd_t
 
	$sg•d2t•d
(
sg•d
)

1628 
sg•d
;

1631 
s2s
 *
s
;

1633 
s
 = 
ts2sgs
; s <Ås2sgs + (ts2sgs)/(ts2sgs[0]); s++) {

1634 i‡(
s
->
sg•d
 =sg•dË(s->
t•d
);

1636  
B9600
;

1637 
	}
}

1640 #i‡
ENABLE_BINCOMPAT


1644 
PRIVATE
 
	$do_io˘l_com∑t
(
ç
, 
m_±r
)

1645 
ây_t
 *
ç
;

1646 
mesßge
 *
m_±r
;

1651 
mö‹
, 
¥oc
, 
func
, 
ªsu…
, 
r
;

1652 
Êags
, 
îki
, 
•ek
;

1653 
u8_t
 
îa£
, 
kûl
, 
öå
, 
quô
, 
x⁄
, 
xoff
, 
brk
, 
eof
, 
i•ìd
, 
o•ìd
;

1654 
sgâyb
 
sg
;

1655 
tch¨s
 
tc
;

1656 
mesßge
 
ª∂y_mess
;

1658 
mö‹
 = 
m_±r
->
TTY_LINE
;

1659 
¥oc
 = 
m_±r
->
PROC_NR
;

1660 
func
 = 
m_±r
->
REQUEST
;

1661 
•ek
 = 
m_±r
->
m2_l1
;

1662 
Êags
 = 
m_±r
->
m2_l2
;

1664 
func
)

1667 
r
 = 
	`com∑t_gëp
(
ç
, &
sg
);

1668 
îa£
 = 
sg
.
sg_îa£
;

1669 
kûl
 = 
sg
.
sg_kûl
;

1670 
i•ìd
 = 
sg
.
sg_i•ìd
;

1671 
o•ìd
 = 
sg
.
sg_o•ìd
;

1672 
Êags
 = 
sg
.
sg_Êags
;

1673 
îki
 = (()
o•ìd
<<24Ë| (()
i•ìd
<<16Ë| (()
îa£
<<8Ë|
kûl
;

1676 
r
 = 
	`com∑t_gëc
(
ç
, &
tc
);

1677 
öå
 = 
tc
.
t_öåc
;

1678 
quô
 = 
tc
.
t_quôc
;

1679 
x⁄
 = 
tc
.
t_°¨tc
;

1680 
xoff
 = 
tc
.
t_°›c
;

1681 
brk
 = 
tc
.
t_brkc
;

1682 
eof
 = 
tc
.
t_eofc
;

1683 
îki
 = (()
öå
<<24Ë| (()
quô
<<16Ë| (()
x⁄
<<8Ë| 
xoff
;

1684 
Êags
 = (
eof
 << 8Ë| 
brk
;

1687 
tc
.
t_°›c
 = (
•ek
 >> 0) & 0xFF;

1688 
tc
.
t_°¨tc
 = (
•ek
 >> 8) & 0xFF;

1689 
tc
.
t_quôc
 = (
•ek
 >> 16) & 0xFF;

1690 
tc
.
t_öåc
 = (
•ek
 >> 24) & 0xFF;

1691 
tc
.
t_brkc
 = (
Êags
 >> 0) & 0xFF;

1692 
tc
.
t_eofc
 = (
Êags
 >> 8) & 0xFF;

1693 
r
 = 
	`com∑t_£tc
(
ç
, &
tc
);

1696 
sg
.
sg_îa£
 = (
•ek
 >> 8) & 0xFF;

1697 
sg
.
sg_kûl
 = (
•ek
 >> 0) & 0xFF;

1698 
sg
.
sg_i•ìd
 = (
•ek
 >> 16) & 0xFF;

1699 
sg
.
sg_o•ìd
 = (
•ek
 >> 24) & 0xFF;

1700 
sg
.
sg_Êags
 = 
Êags
;

1701 
r
 = 
	`com∑t_£ç
(
ç
, &
sg
);

1704 
r
 = 
ENOTTY
;

1706 
ª∂y_mess
.
m_ty≥
 = 
TASK_REPLY
;

1707 
ª∂y_mess
.
REP_PROC_NR
 = 
m_±r
->
PROC_NR
;

1708 
ª∂y_mess
.
REP_STATUS
 = 
r
;

1709 
ª∂y_mess
.
m2_l1
 = 
îki
;

1710 
ª∂y_mess
.
m2_l2
 = 
Êags
;

1711 
	`£nd
(
m_±r
->
m_sour˚
, &
ª∂y_mess
);

1712 
	}
}

	@tty.h

3 
	#TTY_IN_BYTES
 256

	)

4 
	#TAB_SIZE
 8

	)

5 
	#TAB_MASK
 7

	)

7 
	#ESC
 '\33'

	)

9 
	#O_NOCTTY
 00400

	)

10 
	#O_NONBLOCK
 04000

	)

12 
_PROTOTYPE
–(*
	tdevfun_t
), (
	tây
 *
	tç
) );

13 
_PROTOTYPE
–(*
	tdevfu«rg_t
), (
	tây
 *
	tç
, 
	tc
) );

15 
	sây
 {

16 
	mây_evíts
;

19 
u16_t
 *
	mây_öhód
;

20 
u16_t
 *
	mây_öèû
;

21 
	mây_öcou¡
;

22 
	mây_eŸ˘
;

23 
devfun_t
 
	mây_devªad
;

24 
devfun_t
 
	mây_iˇn˚l
;

25 
	mây_mö
;

26 
˛ock_t
 
	mây_time
;

27 
ây
 *
	mây_timíext
;

30 
devfun_t
 
	mây_devwrôe
;

31 
devfu«rg_t
 
	mây_echo
;

32 
devfun_t
 
	mây_oˇn˚l
;

33 
devfun_t
 
	mây_bªak
;

36 
	mây_posôi⁄
;

37 
	mây_ª¥öt
;

38 
	mây_esˇ≥d
;

39 
	mây_öhibôed
;

40 
	mây_pgΩ
;

41 
	mây_›í˘
;

44 
	mây_öªpcode
;

45 
	mây_öˇŒî
;

46 
	mây_ö¥oc
;

47 
vú_byãs
 
	mây_ö_vú
;

48 
	mây_öÀ·
;

49 
	mây_öcum
;

50 
	mây_ouåïcode
;

51 
	mây_outˇŒî
;

52 
	mây_ouçroc
;

53 
vú_byãs
 
	mây_out_vú
;

54 
	mây_ouée·
;

55 
	mây_outcum
;

56 
	mây_ioˇŒî
;

57 
	mây_i›roc
;

58 
	mây_i‹eq
;

59 
vú_byãs
 
	mây_iovú
;

62 
devfun_t
 
	mây_io˘l
;

63 
devfun_t
 
	mây_˛o£
;

64 *
	mây_¥iv
;

65 
ãrmios
 
	mây_ãrmios
;

66 
wösize
 
	mây_wösize
;

68 
u16_t
 
	mây_öbuf
[
TTY_IN_BYTES
];

69 } 
	tây_t
;

71 
EXTERN
 
ây_t
 
	gây_èbÀ
[
NR_CONS
+
NR_RS_LINES
+
NR_PTYS
];

74 
	#NOT_ESCAPED
 0

	)

75 
	#ESCAPED
 1

	)

76 
	#RUNNING
 0

	)

77 
	#STOPPED
 1

	)

80 
	#IN_CHAR
 0x00FF

	)

81 
	#IN_LEN
 0x0F00

	)

82 
	#IN_LSHIFT
 8

	)

83 
	#IN_EOT
 0x1000

	)

84 
	#IN_EOF
 0x2000

	)

85 
	#IN_ESC
 0x4000

	)

88 
	#TIME_NEVER
 ((
˛ock_t
Ë-1 < 0 ? (˛ock_tË
LONG_MAX
 : (˛ock_tË-1)

	)

89 
	#f‹˚_timeout
(Ë((Ë(
ây_timeout
 = 0))

	)

91 
EXTERN
 
ây_t
 *
	gây_timñi°
;

94 
	#buÊí
(
buf
Ë((bufË/ ((buf)[0]))

	)

95 
	#bu„nd
(
buf
Ë((bufË+ 
	`buÊí
(buf))

	)

	@ttyname.c

7 
	~<lib.h
>

8 
	~<sys/°©.h
>

9 
	~<dúít.h
>

10 
	~<f˙é.h
>

11 
	~<°ddef.h
>

12 
	~<°rög.h
>

13 
	~<uni°d.h
>

15 
PRIVATE
 
	gba£
[] = "/dev";

16 
PRIVATE
 
	g∑th
[(
ba£
Ë+ 1 + 
NAME_MAX
];

18 
PUBLIC
 *
	$ây«me
(
fûdes
)

19 
fûdes
;

21 
DIR
 *
devi˚s
;

22 
dúít
 *
íåy
;

23 
°©
 
ây_°©
;

24 
°©
 
dev_°©
;

27 i‡(
	`f°©
(
fûdes
, &
ây_°©
Ë< 0 || !
	`S_ISCHR
—ty_°©.
°_mode
))

28  (*Ë
NULL
;

31 i‡((
devi˚s
 = 
	`›ídú
(
ba£
)Ë=(
DIR
 *Ë
NULL
)

32  (*Ë
NULL
;

35 (
íåy
 = 
	`ªaddú
(
devi˚s
)Ë!(
dúít
 *Ë
NULL
) {

36 i‡(
ây_°©
.
°_öo
 !
íåy
->
d_öo
)

38 
	`°r˝y
(
∑th
, 
ba£
);

39 
	`°rˇt
(
∑th
, "/");

40 
	`°rˇt
(
∑th
, 
íåy
->
d_«me
);

41 i‡(
	`°©
(
∑th
, &
dev_°©
Ë< 0 || !
	`S_ISCHR
(dev_°©.
°_mode
))

43 i‡(
ây_°©
.
°_öo
 =
dev_°©
.st_ino &&

44 
ây_°©
.
°_dev
 =
dev_°©
.st_dev &&

45 
ây_°©
.
°_rdev
 =
dev_°©
.st_rdev) {

46 
	`˛o£dú
(
devi˚s
);

47  
∑th
;

51 
	`˛o£dú
(
devi˚s
);

52  (*Ë
NULL
;

53 
	}
}

	@ttyslot.c

12 
	#_MINIX_SOURCE


	)

14 
	~<sys/ty≥s.h
>

15 
	~<âyít.h
>

16 
	~<°rög.h
>

17 
	~<uni°d.h
>

19 
	$ây¶Ÿ
()

21 
¶Ÿ
;

23 
¶Ÿ

	`·ty¶Ÿ
(0);

24 i‡(
¶Ÿ
 =0Ë¶Ÿ
	`·ty¶Ÿ
(1);

25 i‡(
¶Ÿ
 =0Ë¶Ÿ
	`·ty¶Ÿ
(2);

26  
¶Ÿ
;

27 
	}
}

29 
	$·ty¶Ÿ
(
fd
)

30 
fd
;

32 *
äame
;

33 
löío
;

34 
âyít
 *
âyp
;

36 
äame

	`ây«me
(
fd
);

37 i‡(
äame
 =
NULL
)  0;

40 i‡(
	`°∫cmp
(
äame
, "/dev/", 5) != 0)

42 
äame
 += 5;

45 
löío
= 1;

46 (
âyp

	`gëâyít
()Ë!
NULL
)

48 i‡(
	`°rcmp
(
äame
, 
âyp
->
ty_«me
) == 0)

50 
	`ídâyít
();

51  
löío
;

53 
löío
++;

56 
	`ídâyít
();

58 
	}
}

	@type.h

1 #i‚de‡
TYPE_H


2 
	#TYPE_H


	)

4 
_PROTOTYPE
–
	tèsk_t
, () );

5 
_PROTOTYPE
–(*
	trdwt_t
), (
	tmesßge
 *
	tm_±r
) );

6 
_PROTOTYPE
–(*
	tw©chdog_t
), () );

8 
	sèskèb
 {

9 
èsk_t
 *
	möôül_pc
;

10 
	m°ksize
;

11 
	m«me
[8];

14 
	smem‹y
 {

15 
phys_˛icks
 
	mba£
;

16 
phys_˛icks
 
	msize
;

20 
	smûli_°©e
 {

21 
	maccum_cou¡
;

22 
	m¥ev_cou¡
;

25 #i‡(
CHIP
 =
INTEL
)

26 
	tp‹t_t
;

27 
	t£gm_t
;

28 
	tªg_t
;

38 
	s°ack‰ame_s
 {

39 #i‡
_WORD_SIZE
 == 4

40 
u16_t
 
	mgs
;

41 
u16_t
 
	mfs
;

43 
u16_t
 
	mes
;

44 
u16_t
 
	mds
;

45 
ªg_t
 
	mdi
;

46 
ªg_t
 
	msi
;

47 
ªg_t
 
	mÂ
;

48 
ªg_t
 
	m°
;

49 
ªg_t
 
	mbx
;

50 
ªg_t
 
	mdx
;

51 
ªg_t
 
	mcx
;

52 
ªg_t
 
	mªåeg
;

53 
ªg_t
 
	mªèdr
;

54 
ªg_t
 
	mpc
;

55 
ªg_t
 
	mcs
;

56 
ªg_t
 
	mpsw
;

57 
ªg_t
 
	m•
;

58 
ªg_t
 
	mss
;

61 
	s£gdesc_s
 {

62 
u16_t
 
	mlimô_low
;

63 
u16_t
 
	mba£_low
;

64 
u8_t
 
	mba£_middÀ
;

65 
u8_t
 
	mac˚ss
;

66 #i‡
_WORD_SIZE
 == 4

67 
u8_t
 
	mgønuœrôy
;

68 
u8_t
 
	mba£_high
;

70 
u16_t
 
	mª£rved
;

74 
_PROTOTYPE
–(*
	túq_h™dÀr_t
), (
	túq
) );

78 #i‡(
CHIP
 =
M68000
)

79 
_PROTOTYPE
–(*
	tdmaöt_t
), () );

81 
u32_t
 
	tªg_t
;

84 
	s°ack‰ame_s
 {

85 
ªg_t
 
	mªåeg
;

86 
ªg_t
 
	md1
;

87 
ªg_t
 
	md2
;

88 
ªg_t
 
	md3
;

89 
ªg_t
 
	md4
;

90 
ªg_t
 
	md5
;

91 
ªg_t
 
	md6
;

92 
ªg_t
 
	md7
;

93 
ªg_t
 
	ma0
;

94 
ªg_t
 
	ma1
;

95 
ªg_t
 
	ma2
;

96 
ªg_t
 
	ma3
;

97 
ªg_t
 
	ma4
;

98 
ªg_t
 
	ma5
;

99 
ªg_t
 
	mÂ
;

100 
ªg_t
 
	m•
;

101 
ªg_t
 
	mpc
;

102 
u16_t
 
	mpsw
;

103 
u16_t
 
	mdummy
;

106 
	sfßve
 {

107 
	s˝u_°©e
 {

108 
u16_t
 
	mi_f‹m©
;

109 
u32_t
 
	mi_addr
;

110 
u16_t
 
	mi_°©e
[4];

111 } 
	m˝u_°©e
;

112 
	s°©e_‰ame
 {

113 
u8_t
 
	m‰ame_ty≥
;

114 
u8_t
 
	m‰ame_size
;

115 
u16_t
 
	mª£rved
;

116 
u8_t
 
	m‰ame
[212];

117 } 
	m°©e_‰ame
;

118 
	sÂp_modñ
 {

119 
u32_t
 
	mÂ¸
;

120 
u32_t
 
	mÂ§
;

121 
u32_t
 
	mÂür
;

122 
	sÂN
 {

123 
u32_t
 
	mhigh
;

124 
u32_t
 
	mlow
;

125 
u32_t
 
	mmid
;

126 } 
	mÂN
[8];

127 } 
	mÂp_modñ
;

	@tzset.c

8 
	~<time.h
>

9 
	~"loc_time.h
"

12 
	$tz£t
()

14 
	`_tz£t
();

15 
	}
}

	@udp.c

5 
	~"öë.h
"

7 
	~"as£π.h
"

8 
	~"buf.h
"

9 
	~"˛ock.h
"

10 
	~"io.h
"

11 
	~"ù.h
"

12 
	~"§.h
"

13 
	~"ty≥.h
"

14 
	~"udp.h
"

16 
INIT_PANIC
();

18 
	#UDP_PORT_NR
 1

	)

19 
	#UDP_FD_NR
 32

	)

21 
	sudp_p‹t


23 
	mup_Êags
;

24 
	mup_°©e
;

25 
	mup_ùfd
;

26 
	mup_mö‹
;

27 
	mup_ùdev
;

28 
acc_t
 *
	mup_wr_∑ck
;

29 
ùaddr_t
 
	mup_ùaddr
;

30 
udp_fd
 *
	mup_√xt_fd
;

31 
udp_fd
 *
	mup_wrôe_fd
;

32 } 
	tudp_p‹t_t
;

34 
	#UPF_EMPTY
 0x0

	)

35 
	#UPF_WRITE_IP
 0x1

	)

36 
	#UPF_WRITE_SP
 0x2

	)

37 
	#UPF_READ_IP
 0x4

	)

38 
	#UPF_READ_SP
 0x8

	)

39 
	#UPF_SUSPEND
 0x10

	)

40 
	#UPF_MORE2WRITE
 0x20

	)

42 
	#UPS_EMPTY
 0

	)

43 
	#UPS_SETPROTO
 1

	)

44 
	#UPS_GETCONF
 2

	)

45 
	#UPS_MAIN
 3

	)

46 
	#UPS_ERROR
 4

	)

48 
	sudp_fd


50 
	muf_Êags
;

51 
udp_p‹t_t
 *
	muf_p‹t
;

52 
	muf_i‹eq
;

53 
	muf_§fd
;

54 
nwio_udp›t_t
 
	muf_udp›t
;

55 
gë_u£rd©a_t
 
	muf_gë_u£rd©a
;

56 
put_u£rd©a_t
 
	muf_put_u£rd©a
;

57 
acc_t
 *
	muf_∑ck
;

58 
acc_t
 *
	muf_rd_buf
;

59 
size_t
 
	muf_rd_cou¡
;

60 
size_t
 
	muf_wr_cou¡
;

61 
time_t
 
	muf_exp_tim
;

62 } 
	tudp_fd_t
;

64 
	#UFF_EMPTY
 0x0

	)

65 
	#UFF_INUSE
 0x1

	)

66 
	#UFF_IOCTL_IP
 0x2

	)

67 
	#UFF_READ_IP
 0x4

	)

68 
	#UFF_WRITE_IP
 0x8

	)

69 
	#UFF_OPTSET
 0x10

	)

71 
FORWARD
 
ªad_ù_∑ckës
 
ARGS
(–
udp_p‹t_t
 *
udp_p‹t
 ));

72 
FORWARD
 
udp_buf‰ì
 
ARGS
(–
¥i‹ôy
, 
size_t
 
ªqsize
 ));

73 
FORWARD
 
udp_maö
 
ARGS
(–
udp_p‹t_t
 *
udp_p‹t
 ));

74 
FORWARD
 
acc_t
 *
udp_gë_d©a
 
ARGS
(–
fd
, 
size_t
 
off£t
, size_à
cou¡
,

75 
f‹_io˘l
 ));

76 
FORWARD
 
udp_put_d©a
 
ARGS
(–
fd
, 
size_t
 
off£t
, 
acc_t
 *
d©a
,

77 
f‹_io˘l
 ));

78 
FORWARD
 
udp_ª°¨t_wrôe_p‹t
 
ARGS
(–
udp_p‹t_t
 *
udp_p‹t
 ));

79 
FORWARD
 
¥o˚ss_öc_‰agm
 
ARGS
(–
udp_p‹t_t
 *
udp_p‹t
, 
acc_t
 *
d©a
 ));

80 
FORWARD
 
ª∂y_thr_put
 
ARGS
(–
udp_fd_t
 *
u˝_fd
, 
ª∂y
,

81 
f‹_io˘l
 ));

82 
FORWARD
 
ª∂y_thr_gë
 
ARGS
(–
udp_fd_t
 *
udp_fd
, 
ª∂y
,

83 
f‹_io˘l
 ));

84 
FORWARD
 
udp_£t›t
 
ARGS
(–
udp_fd_t
 *
udp_fd
 ));

85 
FORWARD
 
udµ‹t_t
 
föd_unu£d_p‹t
 
ARGS
(–
fd
 ));

86 
FORWARD
 
is_unu£d_p‹t
 
ARGS
(–
Udµ‹t_t
 
p‹t
 ));

87 
FORWARD
 
udp_∑ckë2u£r
 
ARGS
(–
udp_fd_t
 *
udp_fd
 ));

88 
FORWARD
 
ª°¨t_wrôe_fd
 
ARGS
(–
udp_fd_t
 *
udp_fd
 ));

89 
FORWARD
 
u16_t
 
∑ck_⁄eCsum
 
ARGS
(–
acc_t
 *
∑ck
 ));

91 
PRIVATE
 
udp_p‹t_t
 
	gudp_p‹t_èbÀ
[
UDP_PORT_NR
];

92 
PRIVATE
 
udp_fd_t
 
	gudp_fd_èbÀ
[
UDP_FD_NR
];

94 
PUBLIC
 
	$udp_öô
()

96 
udp_fd_t
 *
udp_fd
;

97 
udp_p‹t_t
 *
udp_p‹t
;

98 
i
, 
ªsu…
;

100 
	`as£π
 (
BUF_S
 >(
nwio_ù›t
));

101 
	`as£π
 (
BUF_S
 >(
nwio_ùc⁄f
));

102 
	`as£π
 (
BUF_S
 >(
nwio_udp›t
));

103 
	`as£π
 (
BUF_S
 >(
udp_io_hdr
));

104 
	`as£π
 (
UDP_HDR_SIZE
 =(
udp_hdr_t
));

105 
	`as£π
 (
UDP_IO_HDR_SIZE
 =(
udp_io_hdr_t
));

107 
udp_p‹t_èbÀ
[0].
up_mö‹

UDP_DEV0
;

108 
udp_p‹t_èbÀ
[0].
up_ùdev

IP0
;

110 
i
0, 
udp_fd

udp_fd_èbÀ
; i<
UDP_FD_NR
; i++, udp_fd++)

112 
udp_fd
->
uf_Êags

UFF_EMPTY
;

115 
	`bf_log⁄
(
udp_buf‰ì
);

117 
i
0, 
udp_p‹t

udp_p‹t_èbÀ
; i<
UDP_PORT_NR
; i++, udp_port++)

119 
udp_p‹t
->
up_Êags

UPF_EMPTY
;

120 
udp_p‹t
->
up_°©e

UPS_EMPTY
;

121 
udp_p‹t
->
up_√xt_fd

udp_fd_èbÀ
;

122 
udp_p‹t
->
up_wrôe_fd

NULL
;

124 
ªsu…

	`§_add_mö‹
 (
udp_p‹t
->
up_mö‹
,

125 
udp_p‹t
-
udp_p‹t_èbÀ
, 
udp_›í
, 
udp_˛o£
, 
udp_ªad
,

126 
udp_wrôe
, 
udp_io˘l
, 
udp_ˇn˚l
);

127 
	`as£π
 (
ªsu…
 >= 0);

129 
	`udp_maö
(
udp_p‹t
);

131 
	}
}

133 
PRIVATE
 
	$udp_maö
(
udp_p‹t
)

134 
udp_p‹t_t
 *
udp_p‹t
;

136 
udp_fd_t
 *
udp_fd
;

137 
ªsu…
, 
i
;

139 
udp_p‹t
->
up_°©e
)

141 
UPS_EMPTY
:

142 
udp_p‹t
->
up_°©e

UPS_SETPROTO
;

144 
udp_p‹t
->
up_ùfd

	`ù_›í
(udp_p‹t->
up_ùdev
,

145 
udp_p‹t
-
udp_p‹t_èbÀ
, 
udp_gë_d©a
, 
udp_put_d©a
);

146 i‡(
udp_p‹t
->
up_ùfd
 < 0)

148 
udp_p‹t
->
up_°©e

UPS_ERROR
;

149 
	`¥ötf
("%s, %d: u«bÀÅÿ›í i∞p‹t\n", 
__FILE__
,

150 
__LINE__
);

154 
ªsu…

	`ù_io˘l
(
udp_p‹t
->
up_ùfd
, 
NWIOSIPOPT
);

155 i‡(
ªsu…
 =
NW_SUSPEND
)

156 
udp_p‹t
->
up_Êags
 |
UPF_SUSPEND
;

157 i‡(
ªsu…
<0)

161 i‡(
udp_p‹t
->
up_°©e
 !
UPS_GETCONF
)

164 
UPS_GETCONF
:

165 
udp_p‹t
->
up_Êags
 &~
UPF_SUSPEND
;

167 
ªsu…

	`ù_io˘l
(
udp_p‹t
->
up_ùfd
, 
NWIOGIPCONF
);

168 i‡(
ªsu…
 =
NW_SUSPEND
)

169 
udp_p‹t
->
up_Êags
 |
UPF_SUSPEND
;

170 i‡(
ªsu…
<0)

174 i‡(
udp_p‹t
->
up_°©e
 !
UPS_MAIN
)

177 
UPS_MAIN
:

178 
udp_p‹t
->
up_Êags
 &~
UPF_SUSPEND
;

180 
i
0, 
udp_fd

udp_fd_èbÀ
; i<
UDP_FD_NR
; i++, udp_fd++)

182 i‡(!(
udp_fd
->
uf_Êags
 & 
UFF_INUSE
))

184 i‡(
udp_fd
->
uf_p‹t
 !
udp_p‹t
)

186 i‡(
udp_fd
->
uf_Êags
 & 
UFF_IOCTL_IP
)

187 
	`udp_io˘l
(
i
, 
udp_fd
->
uf_i‹eq
);

189 
	`ªad_ù_∑ckës
(
udp_p‹t
);

192 #i‡
DEBUG


193 { 
	`whîe
(); 
	`¥ötf
("udp_p‹t_èbÀ[%d].up_°©e%d\n", 
udp_p‹t
-
udp_p‹t_èbÀ
,

194 
udp_p‹t
->
up_°©e
); }

196 
	`ù_∑nic
(( "unknown state" ));

199 
	}
}

201 
	$udp_›í
 (
p‹t
, 
§fd
, 
gë_u£rd©a
, 
put_u£rd©a
)

202 
p‹t
;

203 
§fd
;

204 
gë_u£rd©a_t
 
gë_u£rd©a
;

205 
put_u£rd©a_t
 
put_u£rd©a
;

207 
i
;

208 
udp_fd_t
 *
udp_fd
;

210 
i
0; i<
UDP_FD_NR
 && (
udp_fd_èbÀ
[i].
uf_Êags
 & 
UFF_INUSE
);

211 
i
++);

213 i‡(
i
>
UDP_FD_NR
)

215 #i‡
DEBUG


216 { 
	`whîe
(); 
	`¥ötf
("out of fds\n"); }

218  
EOUTOFBUFS
;

221 
udp_fd
&
udp_fd_èbÀ
[
i
];

223 
udp_fd
->
uf_Êags

UFF_INUSE
;

224 
udp_fd
->
uf_p‹t
&
udp_p‹t_èbÀ
[
p‹t
];

225 
udp_fd
->
uf_§fd

§fd
;

226 
udp_fd
->
uf_udp›t
.
nwuo_Êags

UDP_DEF_OPT
;

227 
udp_fd
->
uf_gë_u£rd©a

gë_u£rd©a
;

228 
udp_fd
->
uf_put_u£rd©a

put_u£rd©a
;

229 
udp_fd
->
uf_∑ck
= 0;

231  
i
;

233 
	}
}

235 
PRIVATE
 
acc_t
 *
	$udp_gë_d©a
 (
p‹t
, 
off£t
, 
cou¡
, 
f‹_io˘l
)

236 
p‹t
;

237 
size_t
 
off£t
;

238 
size_t
 
cou¡
;

239 
f‹_io˘l
;

241 
udp_p‹t_t
 *
udp_p‹t
;

242 
udp_fd_t
 *
udp_fd
;

243 
ªsu…
;

245 
udp_p‹t
&
udp_p‹t_èbÀ
[
p‹t
];

247 
udp_p‹t
->
up_°©e
)

249 
UPS_SETPROTO
:

250 
	`as£π
 (
f‹_io˘l
);

251 i‡(!
cou¡
)

253 
ªsu…
()
off£t
;

254 i‡(
ªsu…
<0)

256 
udp_p‹t
->
up_°©e

UPS_ERROR
;

259 
udp_p‹t
->
up_°©e

UPS_GETCONF
;

260 i‡(
udp_p‹t
->
up_Êags
 & 
UPF_SUSPEND
)

261 
	`udp_maö
(
udp_p‹t
);

262  
NULL
;

266 
nwio_ù›t
 *
ù›t
;

267 
acc_t
 *
acc
;

269 
	`as£π
 (!
off£t
);

270 
	`as£π
 (
cou¡
 =(*
ù›t
));

272 
acc

	`bf_memªq
((*
ù›t
));

273 
ù›t
(
nwio_ù›t
 *)
	`±r2acc_d©a
(
acc
);

274 
ù›t
->
nwio_Êags

NWIO_COPY
 | 
NWIO_EN_LOC
 |

275 
NWIO_EN_BROAD
 | 
NWIO_REMANY
 | 
NWIO_PROTOSPEC
 |

276 
NWIO_HDR_O_ANY
 | 
NWIO_RWDATALL
;

277 
ù›t
->
nwio_¥Ÿo

IPPROTO_UDP
;

278  
acc
;

280 
UPS_MAIN
:

281 
	`as£π
 (!
f‹_io˘l
);

282 
	`as£π
 (
udp_p‹t
->
up_Êags
 & 
UPF_WRITE_IP
);

283 i‡(!
cou¡
)

285 
ªsu…
()
off£t
;

286 #i‡
DEBUG
 & 256

287 { 
	`whîe
(); 
	`¥ötf
("ªsu… o‡ù_wrôêi†%d\n", 
ªsu…
); }

289 
	`as£π
 (
udp_p‹t
->
up_wr_∑ck
);

290 
	`bf_a‰ì
(
udp_p‹t
->
up_wr_∑ck
);

291 
udp_p‹t
->
up_wr_∑ck
= 0;

292 i‡(
udp_p‹t
->
up_Êags
 & 
UPF_WRITE_SP
)

294 i‡(
udp_p‹t
->
up_wrôe_fd
)

296 
udp_fd

udp_p‹t
->
up_wrôe_fd
;

297 
udp_p‹t
->
up_wrôe_fd

NULL
;

298 
udp_fd
->
uf_Êags
 &~
UFF_WRITE_IP
;

299 
	`ª∂y_thr_gë
(
udp_fd
, 
ªsu…
, 
FALSE
);

301 
udp_p‹t
->
up_Êags
 &~(
UPF_WRITE_SP
 |

302 
UPF_WRITE_IP
);

303 i‡(
udp_p‹t
->
up_Êags
 & 
UPF_MORE2WRITE
)

305 
	`udp_ª°¨t_wrôe_p‹t
(
udp_p‹t
);

309 
udp_p‹t
->
up_Êags
 &~
UPF_WRITE_IP
;

313  
	`bf_cut
 (
udp_p‹t
->
up_wr_∑ck
, 
off£t
, 
cou¡
);

317 
	`¥ötf
("udp_get_data(%d, 0x%x, 0x%x) called but up_state= 0x%x\n",

318 
p‹t
, 
off£t
, 
cou¡
, 
udp_p‹t
->
up_°©e
);

321  
NULL
;

322 
	}
}

324 
PRIVATE
 
	$udp_put_d©a
 (
fd
, 
off£t
, 
d©a
, 
f‹_io˘l
)

325 
fd
;

326 
size_t
 
off£t
;

327 
acc_t
 *
d©a
;

328 
f‹_io˘l
;

330 
udp_p‹t_t
 *
udp_p‹t
;

331 
ªsu…
;

333 
udp_p‹t
&
udp_p‹t_èbÀ
[
fd
];

335 
udp_p‹t
->
up_°©e
)

337 
UPS_GETCONF
:

338 i‡(!
d©a
)

340 
ªsu…
()
off£t
;

341 i‡(
ªsu…
<0)

343 
udp_p‹t
->
up_°©e

UPS_ERROR
;

344  
NW_OK
;

346 
udp_p‹t
->
up_°©e

UPS_MAIN
;

347 i‡(
udp_p‹t
->
up_Êags
 & 
UPF_SUSPEND
)

348 
	`udp_maö
(
udp_p‹t
);

352 
nwio_ùc⁄f
 *
ùc⁄f
;

354 
d©a

	`bf_∑ckIffLess
(d©a, (*
ùc⁄f
));

355 
ùc⁄f
(
nwio_ùc⁄f
 *)
	`±r2acc_d©a
(
d©a
);

356 
	`as£π
 (
ùc⁄f
->
nwic_Êags
 & 
NWIC_IPADDR_SET
);

357 
udp_p‹t
->
up_ùaddr

ùc⁄f
->
nwic_ùaddr
;

358 
	`bf_a‰ì
(
d©a
);

361 
UPS_MAIN
:

362 
	`as£π
 (
udp_p‹t
->
up_Êags
 & 
UPF_READ_IP
);

363 i‡(!
d©a
)

365 
ªsu…
()
off£t
;

366 
	`com∑ª
 (
ªsu…
, >=, 0);

367 i‡(
udp_p‹t
->
up_Êags
 & 
UPF_READ_SP
)

369 
udp_p‹t
->
up_Êags
 &~(
UPF_READ_SP
|

370 
UPF_READ_IP
);

371 
	`ªad_ù_∑ckës
(
udp_p‹t
);

374 
udp_p‹t
->
up_Êags
 &~
UPF_READ_IP
;

378 
	`as£π
 (!
off£t
);

380 
	`¥o˚ss_öc_‰agm
(
udp_p‹t
, 
d©a
);

384 
	`ù_∑nic
((

386 
fd
, 
off£t
, 
d©a
, 
udp_p‹t
->
up_°©e
 ));

388  
NW_OK
;

389 
	}
}

391 
	$udp_io˘l
 (
fd
, 
ªq
)

392 
fd
;

393 
ªq
;

395 
udp_fd_t
 *
udp_fd
;

396 
udp_p‹t_t
 *
udp_p‹t
;

397 
nwio_udp›t_t
 *
udp_›t
;

398 
acc_t
 *
›t_acc
;

399 
ty≥
;

400 
ªsu…
;

402 
udp_fd
&
udp_fd_èbÀ
[
fd
];

403 
ty≥

ªq
 & 
IOCTYPE_MASK
;

405 
	`as£π
 (
udp_fd
->
uf_Êags
 & 
UFF_INUSE
);

407 
udp_p‹t

udp_fd
->
uf_p‹t
;

408 
udp_fd
->
uf_Êags
 |
UFF_IOCTL_IP
;

409 
udp_fd
->
uf_i‹eq

ªq
;

411 i‡(
udp_p‹t
->
up_°©e
 !
UPS_MAIN
)

412  
NW_SUSPEND
;

414 
ty≥
)

416 
NWIOSUDPOPT
 & 
IOCTYPE_MASK
:

417 i‡(
ªq
 !
NWIOSUDPOPT
)

419 
	`ª∂y_thr_gë
 (
udp_fd
, 
EBADIOCTL
, 
TRUE
);

420 
ªsu…

NW_OK
;

423 
ªsu…

	`udp_£t›t
(
udp_fd
);

425 
NWIOGUDPOPT
 & 
IOCTYPE_MASK
:

426 i‡(
ªq
 !
NWIOGUDPOPT
)

428 
	`ª∂y_thr_put
(
udp_fd
, 
EBADIOCTL
, 
TRUE
);

429 
ªsu…

NW_OK
;

432 
›t_acc

	`bf_memªq
((*
udp_›t
));

433 
	`as£π
 (
›t_acc
->
acc_Àngth
 =(*
udp_›t
));

434 
udp_›t
(
nwio_udp›t_t
 *)
	`±r2acc_d©a
(
›t_acc
);

436 *
udp_›t

udp_fd
->
uf_udp›t
;

437 
udp_›t
->
nwuo_loˇddr

udp_fd
->
uf_p‹t
->
up_ùaddr
;

438 
ªsu…
(*
udp_fd
->
uf_put_u£rd©a
)(udp_fd->
uf_§fd
, 0, 
›t_acc
,

439 
TRUE
);

440 i‡(
ªsu…
 =
NW_OK
)

441 
	`ª∂y_thr_put
(
udp_fd
, 
NW_OK
, 
TRUE
);

444 
	`ª∂y_thr_gë
(
udp_fd
, 
EBADIOCTL
, 
TRUE
);

445 
ªsu…

NW_OK
;

448 i‡(
ªsu…
 !
NW_SUSPEND
)

449 
udp_fd
->
uf_Êags
 &~
UFF_IOCTL_IP
;

450  
ªsu…
;

451 
	}
}

453 
PRIVATE
 
	$udp_£t›t
(
udp_fd
)

454 
udp_fd_t
 *
udp_fd
;

456 
udp_fd_t
 *
fd_±r
;

457 
nwio_udp›t_t
 
ﬁd›t
, 
√w›t
;

458 
acc_t
 *
d©a
;

459 
ªsu…
;

460 
udµ‹t_t
 
p‹t
;

461 
√w_í_Êags
, 
√w_di_Êags
, 
ﬁd_í_Êags
, 
ﬁd_di_Êags
,

462 
Æl_Êags
, 
Êags
;

463 
√w_Êags
;

464 
i
;

466 #i‡
DEBUG
 & 256

467 { 
	`whîe
(); 
	`¥ötf
("in udp_setopt\n"); }

469 
d©a
(*
udp_fd
->
uf_gë_u£rd©a
)(udp_fd->
uf_§fd
, 0,

470 (
nwio_udp›t_t
), 
TRUE
);

472 i‡(!
d©a
)

473  
EFAULT
;

475 
d©a

	`bf_∑ckIffLess
(d©a, (
nwio_udp›t_t
));

476 
	`as£π
 (
d©a
->
acc_Àngth
 =(
nwio_udp›t_t
));

478 
√w›t
*(
nwio_udp›t_t
 *)
	`±r2acc_d©a
(
d©a
);

479 
	`bf_a‰ì
(
d©a
);

480 
ﬁd›t

udp_fd
->
uf_udp›t
;

481 #i‡
DEBUG
 & 256

482 { 
	`whîe
(); 
	`¥ötf
("newopt.nwuo_flags= 0x%x,Çewopt.nwuo_locport= %d,Çewopt.nwuo_remport= %d\n",

483 
√w›t
.
nwuo_Êags
, 
	`¡ohs
“ew›t.
nwuo_lo˝‹t
),

484 
	`¡ohs
(
√w›t
.
nwuo_ªmp‹t
)); }

487 
ﬁd_í_Êags

ﬁd›t
.
nwuo_Êags
 & 0xffff;

488 
ﬁd_di_Êags
(
ﬁd›t
.
nwuo_Êags
 >> 16) & 0xffff;

490 
√w_í_Êags

√w›t
.
nwuo_Êags
 & 0xffff;

491 
√w_di_Êags
(
√w›t
.
nwuo_Êags
 >> 16) & 0xffff;

493 i‡(
√w_í_Êags
 & 
√w_di_Êags
)

495 #i‡
DEBUG


496 { 
	`whîe
(); 
	`¥ötf
("returning EBADMODE\n"); }

498 
	`ª∂y_thr_gë
(
udp_fd
, 
EBADMODE
, 
TRUE
);

499  
NW_OK
;

503 i‡(
√w_di_Êags
 & 
NWUO_ACC_MASK
)

505 #i‡
DEBUG


506 { 
	`whîe
(); 
	`¥ötf
("returning EBADMODE\n"); }

508 
	`ª∂y_thr_gë
(
udp_fd
, 
EBADMODE
, 
TRUE
);

509  
NW_OK
;

513 i‡(!(
√w_í_Êags
 & 
NWUO_ACC_MASK
))

514 
√w_í_Êags
 |(
ﬁd_í_Êags
 & 
NWUO_ACC_MASK
);

517 i‡(
√w_di_Êags
 & 
NWUO_LOCPORT_MASK
)

519 #i‡
DEBUG


520 { 
	`whîe
(); 
	`¥ötf
("returning EBADMODE\n"); }

522 
	`ª∂y_thr_gë
(
udp_fd
, 
EBADMODE
, 
TRUE
);

523  
NW_OK
;

526 i‡(!(
√w_í_Êags
 & 
NWUO_LOCPORT_MASK
))

528 
√w_í_Êags
 |(
ﬁd_í_Êags
 & 
NWUO_LOCPORT_MASK
);

529 
√w›t
.
nwuo_lo˝‹t

ﬁd›t
.nwuo_locport;

531 i‡((
√w_í_Êags
 & 
NWUO_LOCPORT_MASK
Ë=
NWUO_LP_SEL
)

533 
√w›t
.
nwuo_lo˝‹t

	`föd_unu£d_p‹t
(
udp_fd
-
udp_fd_èbÀ
);

535 i‡((
√w_í_Êags
 & 
NWUO_LOCPORT_MASK
Ë=
NWUO_LP_SET
)

537 i‡(!
√w›t
.
nwuo_lo˝‹t
)

539 #i‡
DEBUG


540 { 
	`whîe
(); 
	`¥ötf
("returning EBADMODE\n"); }

542 
	`ª∂y_thr_gë
(
udp_fd
, 
EBADMODE
, 
TRUE
);

543  
NW_OK
;

548 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
Ë& 
NWUO_LOCADDR_MASK
))

550 
√w_í_Êags
 |(
ﬁd_í_Êags
 & 
NWUO_LOCADDR_MASK
);

551 
√w_di_Êags
 |(
ﬁd_di_Êags
 & 
NWUO_LOCADDR_MASK
);

555 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
Ë& 
NWUO_BROAD_MASK
))

557 
√w_í_Êags
 |(
ﬁd_í_Êags
 & 
NWUO_BROAD_MASK
);

558 
√w_di_Êags
 |(
ﬁd_di_Êags
 & 
NWUO_BROAD_MASK
);

562 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
Ë& 
NWUO_REMPORT_MASK
))

564 
√w_í_Êags
 |(
ﬁd_í_Êags
 & 
NWUO_REMPORT_MASK
);

565 
√w_di_Êags
 |(
ﬁd_di_Êags
 & 
NWUO_REMPORT_MASK
);

566 
√w›t
.
nwuo_ªmp‹t

ﬁd›t
.nwuo_remport;

568 #i‡
DEBUG
 & 256

569 { 
	`whîe
(); 
	`¥ötf
("√w›t.nwuo_ªmp‹t%d\n", 
	`¡ohs
(
√w›t
.
nwuo_ªmp‹t
)); }

573 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
Ë& 
NWUO_REMADDR_MASK
))

575 
√w_í_Êags
 |(
ﬁd_í_Êags
 & 
NWUO_REMADDR_MASK
);

576 
√w_di_Êags
 |(
ﬁd_di_Êags
 & 
NWUO_REMADDR_MASK
);

577 
√w›t
.
nwuo_ªmaddr

ﬁd›t
.nwuo_remaddr;

581 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
Ë& 
NWUO_RW_MASK
))

583 
√w_í_Êags
 |(
ﬁd_í_Êags
 & 
NWUO_RW_MASK
);

584 
√w_di_Êags
 |(
ﬁd_di_Êags
 & 
NWUO_RW_MASK
);

588 i‡(!((
√w_í_Êags
 | 
√w_di_Êags
Ë& 
NWUO_IPOPT_MASK
))

590 
√w_í_Êags
 |(
ﬁd_í_Êags
 & 
NWUO_IPOPT_MASK
);

591 
√w_di_Êags
 |(
ﬁd_di_Êags
 & 
NWUO_IPOPT_MASK
);

594 
√w_Êags
(()
√w_di_Êags
 << 16Ë| 
√w_í_Êags
;

595 i‡((
√w_Êags
 & 
NWUO_RWDATONLY
) &&

596 ((
√w_Êags
 & 
NWUO_LOCPORT_MASK
Ë=
NWUO_LP_ANY
 ||

597 (
√w_Êags
 & (
NWUO_RP_ANY
|
NWUO_RA_ANY
|
NWUO_EN_IPOPT
))))

599 #i‡
DEBUG


600 { 
	`whîe
(); 
	`¥ötf
("returning EBADMODE\n"); }

602 
	`ª∂y_thr_gë
(
udp_fd
, 
EBADMODE
, 
TRUE
);

603  
NW_OK
;

607 i‡((
√w_Êags
 & 
NWUO_LOCPORT_MASK
Ë=
NWUO_LP_SEL
 ||

608 (
√w_Êags
 & 
NWUO_LOCPORT_MASK
Ë=
NWUO_LP_SET
)

610 
i
0, 
fd_±r

udp_fd_èbÀ
; i<
UDP_FD_NR
; i++, fd_ptr++)

612 i‡(
fd_±r
 =
udp_fd
)

614 i‡(!(
fd_±r
->
uf_Êags
 & 
UFF_INUSE
))

616 
Êags

fd_±r
->
uf_udp›t
.
nwuo_Êags
;

617 i‡((
Êags
 & 
NWUO_LOCPORT_MASK
Ë!
NWUO_LP_SEL
 &&

618 (
Êags
 & 
NWUO_LOCPORT_MASK
Ë!
NWUO_LP_SET
)

620 i‡(
fd_±r
->
uf_udp›t
.
nwuo_lo˝‹t
 !=

621 
√w›t
.
nwuo_lo˝‹t
)

623 i‡((
Êags
 & 
NWUO_ACC_MASK
) !=

624 (
√w_Êags
 & 
NWUO_ACC_MASK
))

626 #i‡
DEBUG


627 { 
	`whîe
(); 
	`¥ötf
("address inuse:Çew fd= %d, old_fd= %d,Öort= %u\n",

628 
udp_fd
-
udp_fd_èbÀ
, 
fd_±r
-udp_fd_èbÀ, 
√w›t
.
nwuo_lo˝‹t
); }

630 
	`ª∂y_thr_gë
(
udp_fd
, 
EADDRINUSE
, 
TRUE
);

631  
NW_OK
;

636 
√w›t
.
nwuo_Êags

√w_Êags
;

637 
udp_fd
->
uf_udp›t

√w›t
;

639 
Æl_Êags

√w_í_Êags
 | 
√w_di_Êags
;

640 #i‡
DEBUG
 & 256

641 { 
	`whîe
();

642 
	`¥ötf
("NWUO_ACC_MASK: %†£t\n", 
Æl_Êags
 & 
NWUO_ACC_MASK
 ? "" : "not");

643 
	`¥ötf
("NWUO_LOCADDR_MASK: %†£t\n", 
Æl_Êags
 & 
NWUO_LOCADDR_MASK
 ? "" : "not");

644 
	`¥ötf
("NWUO_BROAD_MASK: %†£t\n", 
Æl_Êags
 & 
NWUO_BROAD_MASK
 ? "" : "not");

645 
	`¥ötf
("NWUO_REMPORT_MASK: %†£t\n", 
Æl_Êags
 & 
NWUO_REMPORT_MASK
 ? "" : "not");

646 
	`¥ötf
("NWUO_REMADDR_MASK: %†£t\n", 
Æl_Êags
 & 
NWUO_REMADDR_MASK
 ? "" : "not");

647 
	`¥ötf
("NWUO_RW_MASK: %†£t\n", 
Æl_Êags
 & 
NWUO_RW_MASK
 ? "" : "not");

648 
	`¥ötf
("NWUO_IPOPT_MASK: %†£t\n", 
Æl_Êags
 & 
NWUO_IPOPT_MASK
 ? "" : "not");

651 i‡((
Æl_Êags
 & 
NWUO_ACC_MASK
Ë&& (Æl_Êag†& 
NWUO_LOCPORT_MASK
) &&

652 (
Æl_Êags
 & 
NWUO_LOCADDR_MASK
) &&

653 (
Æl_Êags
 & 
NWUO_BROAD_MASK
) &&

654 (
Æl_Êags
 & 
NWUO_REMPORT_MASK
) &&

655 (
Æl_Êags
 & 
NWUO_REMADDR_MASK
) &&

656 (
Æl_Êags
 & 
NWUO_RW_MASK
) &&

657 (
Æl_Êags
 & 
NWUO_IPOPT_MASK
))

658 
udp_fd
->
uf_Êags
 |
UFF_OPTSET
;

661 
udp_fd
->
uf_Êags
 &~
UFF_OPTSET
;

664 
	`ª∂y_thr_gë
(
udp_fd
, 
NW_OK
, 
TRUE
);

665  
NW_OK
;

666 
	}
}

668 
PRIVATE
 
udµ‹t_t
 
	$föd_unu£d_p‹t
(
fd
)

669 
fd
;

671 
udµ‹t_t
 
p‹t
, 
nw_p‹t
;

673 
p‹t
0x8000;Ö‹à< 0xffff-
UDP_FD_NR
;Öort+= UDP_FD_NR)

675 
nw_p‹t

	`ht⁄s
(
p‹t
);

676 i‡(
	`is_unu£d_p‹t
(
nw_p‹t
))

677  
nw_p‹t
;

679 
p‹t
= 0x8000;Öort < 0xffff;Öort++)

681 
nw_p‹t

	`ht⁄s
(
p‹t
);

682 i‡(
	`is_unu£d_p‹t
(
nw_p‹t
))

683  
nw_p‹t
;

685 
	`ù_∑nic
(( "unableÅo find unusedÖort (shouldn't occur)" ));

687 
	}
}

693 
PRIVATE
 
	$ª∂y_thr_put
(
udp_fd
, 
ª∂y
, 
f‹_io˘l
)

694 
udp_fd_t
 *
udp_fd
;

695 
ª∂y
;

696 
f‹_io˘l
;

698 #i‡
DEBUG


699 { 
	`whîe
(); 
	`¥ötf
("reply_thr_put(&udp_fd_table[%d], %d, %d) called\n",

700 
udp_fd
-
udp_fd_èbÀ
, 
ª∂y
, 
f‹_io˘l
); }

702 #i‡
DEBUG
 & 2

703 { 
	`whîe
(); 
	`¥ötf
("ˇŒög 0x%x\n", 
udp_fd
->
uf_put_u£rd©a
); }

705 
	`as£π
 (
udp_fd
);

706  (*
udp_fd
->
uf_put_u£rd©a
)(udp_fd->
uf_§fd
, 
ª∂y
,

707 (
acc_t
 *)0, 
f‹_io˘l
);

708 
	}
}

714 
PRIVATE
 
	$ª∂y_thr_gë
(
udp_fd
, 
ª∂y
, 
f‹_io˘l
)

715 
udp_fd_t
 *
udp_fd
;

716 
ª∂y
;

717 
f‹_io˘l
;

719 
acc_t
 *
ªsu…
;

720 #i‡
DEBUG
 & 256

721 { 
	`whîe
(); 
	`¥ötf
("reply_thr_get(&udp_fd_table[%d], %d, %d) called\n",

722 
udp_fd
-
udp_fd_èbÀ
, 
ª∂y
, 
f‹_io˘l
); }

724 
ªsu…
(*
udp_fd
->
uf_gë_u£rd©a
)(udp_fd->
uf_§fd
, 
ª∂y
,

725 (
size_t
)0, 
f‹_io˘l
);

726 
	`as£π
 (!
ªsu…
);

727 
	}
}

729 
PRIVATE
 
	$is_unu£d_p‹t
(
p‹t
)

730 
udµ‹t_t
 
p‹t
;

732 
i
;

733 
udp_fd_t
 *
udp_fd
;

735 
i
0, 
udp_fd

udp_fd_èbÀ
; i<
UDP_FD_NR
; i++,

736 
udp_fd
++)

738 i‡(!(
udp_fd
->
uf_Êags
 & 
UFF_OPTSET
))

740 i‡(
udp_fd
->
uf_udp›t
.
nwuo_lo˝‹t
 =
p‹t
)

741  
FALSE
;

743  
TRUE
;

744 
	}
}

746 
PRIVATE
 
	$ªad_ù_∑ckës
(
udp_p‹t
)

747 
udp_p‹t_t
 *
udp_p‹t
;

749 
ªsu…
;

753 
udp_p‹t
->
up_Êags
 |
UPF_READ_IP
;

754 #i‡
DEBUG
 & 256

755 { 
	`whîe
(); 
	`¥ötf
("doing ip_read\n"); }

757 
ªsu…

	`ù_ªad
(
udp_p‹t
->
up_ùfd
, 
UDP_MAX_DATAGRAM
);

758 i‡(
ªsu…
 =
NW_SUSPEND
)

760 
udp_p‹t
->
up_Êags
 |
UPF_READ_SP
;

763 
	`as£π
(
ªsu…
 =
NW_OK
);

764 
udp_p‹t
->
up_Êags
 &~
UPF_READ_IP
;

765 } !(
udp_p‹t
->
up_Êags
 & 
UPF_READ_IP
));

766 
	}
}

769 
PUBLIC
 
	$udp_ªad
 (
fd
, 
cou¡
)

770 
fd
;

771 
size_t
 
cou¡
;

773 
udp_fd_t
 *
udp_fd
;

775 
udp_fd
&
udp_fd_èbÀ
[
fd
];

776 i‡(!(
udp_fd
->
uf_Êags
 & 
UFF_OPTSET
))

777  
	`ª∂y_thr_put
(
udp_fd
, 
EBADMODE
, 
FALSE
);

779 
udp_fd
->
uf_rd_cou¡

cou¡
;

781 i‡(
udp_fd
->
uf_rd_buf
)

783 i‡(
	`gë_time
(Ë<
udp_fd
->
uf_exp_tim
)

784  
	`udp_∑ckë2u£r
 (
udp_fd
);

785 
	`bf_a‰ì
(
udp_fd
->
uf_rd_buf
);

786 
udp_fd
->
uf_rd_buf
= 0;

788 
udp_fd
->
uf_Êags
 |
UFF_READ_IP
;

789 #i‡
DEBUG
 & 256

790 { 
	`whîe
(); 
	`¥ötf
("udp_fd_table[%d].uf_flags= 0x%x\n",

791 
udp_fd
-
udp_fd_èbÀ
, udp_fd->
uf_Êags
); }

793  
NW_SUSPEND
;

794 
	}
}

796 
PRIVATE
 
	$udp_∑ckë2u£r
 (
udp_fd
)

797 
udp_fd_t
 *
udp_fd
;

799 
acc_t
 *
∑ck
, *
tmp_∑ck
;

800 
udp_io_hdr_t
 *
hdr
;

801 
ªsu…
, 
hdr_Àn
;

802 
size_t
 
size
, 
å™sf_size
;

804 
∑ck

udp_fd
->
uf_rd_buf
;

805 
udp_fd
->
uf_rd_buf
= 0;

807 
size

	`bf_bufsize
 (
∑ck
);

809 i‡(
udp_fd
->
uf_udp›t
.
nwuo_Êags
 & 
NWUO_RWDATONLY
)

812 
∑ck

	`bf_∑ckIffLess
 (∑ck, 
UDP_IO_HDR_SIZE
);

813 
	`as£π
 (
∑ck
->
acc_Àngth
 >
UDP_IO_HDR_SIZE
);

815 
hdr
(
udp_io_hdr_t
 *)
	`±r2acc_d©a
(
∑ck
);

816 
hdr_Àn

UDP_IO_HDR_SIZE
+
hdr
->
uih_ù_›t_Àn
;

818 
	`as£π
 (
size
>
hdr_Àn
);

819 
size
 -
hdr_Àn
;

820 
tmp_∑ck

	`bf_cut
(
∑ck
, 
hdr_Àn
, 
size
);

821 
	`bf_a‰ì
(
∑ck
);

822 
∑ck

tmp_∑ck
;

825 i‡(
size
>
udp_fd
->
uf_rd_cou¡
)

827 
tmp_∑ck

	`bf_cut
 (
∑ck
, 0, 
udp_fd
->
uf_rd_cou¡
);

828 
	`bf_a‰ì
(
∑ck
);

829 
∑ck

tmp_∑ck
;

830 
å™sf_size

udp_fd
->
uf_rd_cou¡
;

833 
å™sf_size

size
;

835 
ªsu…
(*
udp_fd
->
uf_put_u£rd©a
)(udp_fd->
uf_§fd
,

836 (
size_t
)0, 
∑ck
, 
FALSE
);

838 i‡(
ªsu…
 >= 0)

839 i‡(
size
 > 
å™sf_size
)

840 
ªsu…

EPACKSIZE
;

842 
ªsu…

å™sf_size
;

844 
udp_fd
->
uf_Êags
 &~
UFF_READ_IP
;

845 
ªsu…
(*
udp_fd
->
uf_put_u£rd©a
)(udp_fd->
uf_§fd
,Ñesult,

846 (
acc_t
 *)0, 
FALSE
);

847 
	`as£π
 (
ªsu…
 == 0);

849  
ªsu…
;

850 
	}
}

852 
PRIVATE
 
	$¥o˚ss_öc_‰agm
(
udp_p‹t
, 
∑ck
)

853 
udp_p‹t_t
 *
udp_p‹t
;

854 
acc_t
 *
∑ck
;

856 
udp_fd_t
 *
udp_fd
, *
sh¨e_fd
;

857 
acc_t
 *
ù_acc
, *
udp_acc
, *
ù›t_∑ck
, *
no_ù›t_∑ck
, *
tmp_acc
;

858 
ù_hdr_t
 *
ù_hdr
;

859 
udp_hdr_t
 *
udp_hdr
;

860 
udp_io_hdr_t
 *
udp_io_hdr
;

861 
size_t
 
∑ck_size
, 
ù_hdr_size
;

862 
size_t
 
udp_size
;

863 
ùaddr_t
 
§c_addr
, 
d°_addr
;

864 
u8_t
 
u16
[2];

865 
u16_t
 
chksum
;

866 
d°_ty≥
, 
Êags
;

867 
time_t
 
exp_tim
;

868 
udµ‹t_t
 
§c_p‹t
, 
d°_p‹t
;

869 
i
;

871 #i‡
DEBUG
 & 256

872 { 
	`whîe
(); 
	`¥ötf
("inÖrocess_inc_fragm\n"); }

874 
∑ck_size

	`bf_bufsize
(
∑ck
);

876 
∑ck

	`bf_∑ckIffLess
’ack, 
IP_MIN_HDR_SIZE
);

877 
	`as£π
 (
∑ck
->
acc_Àngth
 >
IP_MIN_HDR_SIZE
);

878 
ù_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
∑ck
);

879 
ù_hdr_size
(
ù_hdr
->
ih_vîs_ihl
 & 
IH_IHL_MASK
) << 2;

880 
ù_acc

	`bf_cut
(
∑ck
, (
size_t
)0, 
ù_hdr_size
);

882 
§c_addr

ù_hdr
->
ih_§c
;

883 
d°_addr

ù_hdr
->
ih_d°
;

885 
udp_acc

	`bf_cut
(
∑ck
, 
ù_hdr_size
, 
∑ck_size
-ip_hdr_size);

886 
	`bf_a‰ì
(
∑ck
);

887 
∑ck_size
 -
ù_hdr_size
;

888 i‡(
∑ck_size
 < 
UDP_HDR_SIZE
)

890 #i‡
DEBUG


891 { 
	`whîe
(); 
	`¥ötf
("packetÅoo small\n"); }

893 
	`bf_a‰ì
(
ù_acc
);

894 
	`bf_a‰ì
(
udp_acc
);

897 
udp_acc

	`bf_∑ckIffLess
(udp_acc, 
UDP_HDR_SIZE
);

898 
udp_hdr
(
udp_hdr_t
 *)
	`±r2acc_d©a
(
udp_acc
);

900 
udp_size

	`¡ohs
(
udp_hdr
->
uh_Àngth
);

901 i‡(
udp_size
 > 
∑ck_size
)

903 #i‡
DEBUG


904 { 
	`whîe
(); 
	`¥ötf
("packetÅooÜarge\n"); }

906 
	`bf_a‰ì
(
ù_acc
);

907 
	`bf_a‰ì
(
udp_acc
);

910 i‡(
udp_hdr
->
uh_chksum
)

912 
u16
[0]= 0;

913 
u16
[1]
ù_hdr
->
ih_¥Ÿo
;

914 
chksum

	`∑ck_⁄eCsum
(
udp_acc
);

915 
chksum

	`⁄eC_sum
(chksum, (
u16_t
 *)&
§c_addr
, (
ùaddr_t
));

916 
chksum

	`⁄eC_sum
(chksum, (
u16_t
 *)&
d°_addr
, (
ùaddr_t
));

917 
chksum

	`⁄eC_sum
(chksum, (
u16_t
 *)
u16
, (u16));

918 
chksum

	`⁄eC_sum
(chksum, (
u16_t
 *)&
udp_hdr
->
uh_Àngth
,

919 (
udp_hdr
->
uh_Àngth
));

920 i‡(~
chksum
 & 0xffff)

922 #i‡
DEBUG


923 { 
	`whîe
(); 
	`¥ötf
("udp chksumÉrror\n"); }

925 
	`bf_a‰ì
(
ù_acc
);

926 
	`bf_a‰ì
(
udp_acc
);

930 
exp_tim

	`gë_time
(Ë+ 
UDP_READ_EXP_TIME
;

931 
§c_p‹t

udp_hdr
->
uh_§c_p‹t
;

932 
d°_p‹t

udp_hdr
->
uh_d°_p‹t
;

934 i‡(
d°_addr
 =
udp_p‹t
->
up_ùaddr
)

935 
d°_ty≥

NWUO_EN_LOC
;

937 
d°_ty≥

NWUO_EN_BROAD
;

939 
sh¨e_fd
= 0;

940 
ù›t_∑ck
= 0;

941 
no_ù›t_∑ck
= 0;

943 
i
=0, 
udp_fd
=
udp_fd_èbÀ
; i<
UDP_FD_NR
; i++, udp_fd++)

945 i‡(!(
udp_fd
->
uf_Êags
 & 
UFF_INUSE
))

947 #i‡
DEBUG
 & 256

948 { 
	`whîe
(); 
	`¥ötf
("%d:ÇŸ inu£\n", 
i
); }

952 i‡(!(
udp_fd
->
uf_Êags
 & 
UFF_OPTSET
))

954 #i‡
DEBUG


955 { 
	`whîe
(); 
	`¥ötf
("%d: o±i⁄†nŸ së\n", 
i
); }

959 
Êags

udp_fd
->
uf_udp›t
.
nwuo_Êags
;

960 i‡(!(
Êags
 & 
d°_ty≥
))

962 #i‡
DEBUG
 & 256

963 { 
	`whîe
(); 
	`¥ötf
("%d: wr⁄gÅy≥\n", 
i
); }

967 i‡((
Êags
 & (
NWUO_LP_SEL
|
NWUO_LP_SET
)) &&

968 
udp_fd
->
uf_udp›t
.
nwuo_lo˝‹t
 !
d°_p‹t
)

970 #i‡
DEBUG
 & 256

971 { 
	`whîe
(); 
	`¥ötf
("%d: wr⁄gÜo¯p‹t, gŸ %d,Éx≥˘ed %d\n", 
i
,

972 
d°_p‹t
, 
udp_fd
->
uf_udp›t
.
nwuo_lo˝‹t
); }

976 i‡((
Êags
 & 
NWUO_RP_SET
) &&

977 
udp_fd
->
uf_udp›t
.
nwuo_ªmp‹t
 !
§c_p‹t
)

979 #i‡
DEBUG


980 { 
	`whîe
(); 
	`¥ötf
("%d: wr⁄gÑemÖ‹t, I gŸ %d,Éx≥˘ed %d\n", 
i
,

981 
	`¡ohs
(
§c_p‹t
),Çtohs(
udp_fd
->
uf_udp›t
.
nwuo_ªmp‹t
)); }

985 i‡((
Êags
 & 
NWUO_RA_SET
) &&

986 
udp_fd
->
uf_udp›t
.
nwuo_ªmaddr
 !
§c_addr
)

988 #i‡
DEBUG


989 { 
	`whîe
(); 
	`¥ötf
("%d: wr⁄gÑemáddr\n", 
i
); }

994 i‡(!
no_ù›t_∑ck
)

996 
no_ù›t_∑ck

	`bf_memªq
(
UDP_IO_HDR_SIZE
);

997 
udp_io_hdr
(
udp_io_hdr_t
 *)
	`±r2acc_d©a
(
no_ù›t_∑ck
);

998 
udp_io_hdr
->
uih_§c_addr

§c_addr
;

999 
udp_io_hdr
->
uih_d°_addr

d°_addr
;

1000 
udp_io_hdr
->
uih_§c_p‹t

§c_p‹t
;

1001 
udp_io_hdr
->
uih_d°_p‹t

d°_p‹t
;

1002 
udp_io_hdr
->
uih_ù_›t_Àn
= 0;

1003 
udp_io_hdr
->
uih_d©a_Àn

udp_size
-
UDP_HDR_SIZE
;

1004 
no_ù›t_∑ck
->
acc_√xt

	`bf_cut
(
udp_acc
,

1005 
UDP_HDR_SIZE
, 
udp_io_hdr
->
uih_d©a_Àn
);

1006 i‡(
ù_hdr_size
 =
IP_MIN_HDR_SIZE
)

1008 
ù›t_∑ck

no_ù›t_∑ck
;

1009 
ù›t_∑ck
->
acc_lökC
++;

1012 
ù›t_∑ck
= 0;

1014 i‡(
Êags
 & 
NWUO_EN_IPOPT
)

1016 i‡(!
ù›t_∑ck
)

1018 
ù›t_∑ck

	`bf_memªq
(
UDP_IO_HDR_SIZE
);

1019 *(
udp_io_hdr_t
 *)
	`±r2acc_d©a
(
ù›t_∑ck
)=

1020 *
udp_io_hdr
;

1021 
udp_io_hdr
(
udp_io_hdr_t
 *)

1022 
	`±r2acc_d©a
(
ù›t_∑ck
);

1023 
udp_io_hdr
->
uih_ù_›t_Àn

ù_hdr_size
 -

1024 
IP_MIN_HDR_SIZE
;

1025 
ù›t_∑ck
->
acc_√xt

	`bf_cut
(
ù_acc
,

1026 (
size_t
)
IP_MIN_HDR_SIZE
,

1027 (
size_t
)
udp_io_hdr
->
uih_ù_›t_Àn
);

1028 
tmp_acc

ù›t_∑ck
;Åmp_acc->
acc_√xt
;

1029 
tmp_acc
tmp_acc->
acc_√xt
);

1030 
	`as£π
 (
tmp_acc
->
acc_lökC
 == 1);

1031 
tmp_acc
->
acc_√xt

no_ù›t_∑ck
->acc_next;

1032 i‡(
tmp_acc
->
acc_√xt
)

1033 
tmp_acc
->
acc_√xt
->
acc_lökC
++;

1035 
∑ck

ù›t_∑ck
;

1038 
∑ck

no_ù›t_∑ck
;

1040 i‡(
udp_fd
->
uf_rd_buf
)

1042 i‡((
Êags
 & 
NWUO_ACC_MASK
Ë=
NWUO_SHARED
)

1044 
sh¨e_fd

udp_fd
;

1047 #i‡
DEBUG


1048 { 
	`whîe
(); 
	`¥ötf
("throwingáwayÖacket\n"); }

1050 
	`bf_a‰ì
(
udp_fd
->
uf_rd_buf
);

1053 
udp_fd
->
uf_rd_buf

∑ck
;

1054 
∑ck
->
acc_lökC
++;

1055 
udp_fd
->
uf_exp_tim

exp_tim
;

1057 i‡((
Êags
 & 
NWUO_ACC_MASK
Ë=
NWUO_SHARED
 ||

1058 (
Êags
 & 
NWUO_ACC_MASK
Ë=
NWUO_EXCL
)

1060 i‡(
ù›t_∑ck
)

1062 
	`bf_a‰ì
(
ù›t_∑ck
);

1063 
ù›t_∑ck
= 0;

1065 
	`as£π
(
no_ù›t_∑ck
);

1066 
	`bf_a‰ì
(
no_ù›t_∑ck
);

1067 
no_ù›t_∑ck
= 0;

1070 i‡(
udp_fd
->
uf_Êags
 & 
UFF_READ_IP
)

1072 #i‡
DEBUG
 & 256

1073 { 
	`whîe
(); 
	`¥ötf
("%d cÆlögÖackë2u£r\n", 
i
); }

1075 
	`udp_∑ckë2u£r
(
udp_fd
);

1079 #i‡
DEBUG
 & 256

1080 { 
	`whîe
(); 
	`¥ötf
("%dÇŸ READ_IP\n", 
i
); }

1083 i‡((
Êags
 & 
NWUO_ACC_MASK
Ë=
NWUO_SHARED
 ||

1084 (
Êags
 & 
NWUO_ACC_MASK
Ë=
NWUO_EXCL
)

1089 i‡(
sh¨e_fd
 && 
no_ù›t_∑ck
)

1091 
	`bf_a‰ì
(
sh¨e_fd
->
uf_rd_buf
);

1092 i‡(
sh¨e_fd
->
uf_udp›t
.
nwuo_Êags
 & 
NWUO_EN_IPOPT
)

1093 
∑ck

ù›t_∑ck
;

1095 
∑ck

no_ù›t_∑ck
;

1096 
∑ck
->
acc_lökC
++;

1097 
sh¨e_fd
->
uf_rd_buf

∑ck
;

1098 
sh¨e_fd
->
uf_exp_tim

exp_tim
;

1099 i‡(
ù›t_∑ck
)

1101 
	`bf_a‰ì
(
ù›t_∑ck
);

1102 
ù›t_∑ck
= 0;

1104 
	`as£π
 (
no_ù›t_∑ck
);

1105 
	`bf_a‰ì
(
no_ù›t_∑ck
);

1106 
no_ù›t_∑ck
= 0;

1110 i‡(
ù›t_∑ck
)

1111 
	`bf_a‰ì
(
ù›t_∑ck
);

1112 i‡(
no_ù›t_∑ck
)

1113 
	`bf_a‰ì
(
no_ù›t_∑ck
);

1115 
	`as£π
 (
ù_acc
);

1116 
	`bf_a‰ì
(
ù_acc
);

1117 
	`as£π
 (
udp_acc
);

1118 
	`bf_a‰ì
(
udp_acc
);

1119 
	}
}

1121 
PUBLIC
 
	$udp_˛o£
(
fd
)

1122 
fd
;

1124 
udp_fd_t
 *
udp_fd
;

1126 #i‡
DEBUG


1127 { 
	`whîe
(); 
	`¥ötf
("udp_˛o£ (%d)\n", 
fd
); }

1129 
udp_fd
&
udp_fd_èbÀ
[
fd
];

1131 
	`as£π
 (
udp_fd
->
uf_Êags
 & 
UFF_INUSE
);

1133 
udp_fd
->
uf_Êags

UFF_EMPTY
;

1134 i‡(
udp_fd
->
uf_rd_buf
)

1136 
	`bf_a‰ì
(
udp_fd
->
uf_rd_buf
);

1137 
udp_fd
->
uf_rd_buf
= 0;

1139 
	}
}

1141 
PUBLIC
 
	$udp_wrôe
(
fd
, 
cou¡
)

1142 
fd
;

1143 
size_t
 
cou¡
;

1145 
udp_fd_t
 *
udp_fd
;

1146 
udp_p‹t_t
 *
udp_p‹t
;

1148 
udp_fd
&
udp_fd_èbÀ
[
fd
];

1149 
udp_p‹t

udp_fd
->
uf_p‹t
;

1151 i‡(!(
udp_fd
->
uf_Êags
 & 
UFF_OPTSET
))

1153 
	`ª∂y_thr_gë
 (
udp_fd
, 
EBADMODE
, 
FALSE
);

1154  
NW_OK
;

1157 
	`as£π
 (!(
udp_fd
->
uf_Êags
 & 
UFF_WRITE_IP
));

1159 
udp_fd
->
uf_wr_cou¡

cou¡
;

1161 
udp_fd
->
uf_Êags
 |
UFF_WRITE_IP
;

1163 
	`ª°¨t_wrôe_fd
(
udp_fd
);

1165 i‡(
udp_fd
->
uf_Êags
 & 
UFF_WRITE_IP
)

1167 #i‡
DEBUG


1168 { 
	`whîe
(); 
	`¥ötf
("replying NW_SUSPEND\n"); }

1170  
NW_SUSPEND
;

1174 #i‡
DEBUG
 & 256

1175 { 
	`whîe
(); 
	`¥ötf
("replying NW_OK\n"); }

1177  
NW_OK
;

1179 
	}
}

1181 
PRIVATE
 
	$ª°¨t_wrôe_fd
(
udp_fd
)

1182 
udp_fd_t
 *
udp_fd
;

1184 
udp_p‹t_t
 *
udp_p‹t
;

1185 
acc_t
 *
∑ck
, *
ù_hdr_∑ck
, *
udp_hdr_∑ck
, *
ù_›t_∑ck
, *
u£r_d©a
;

1186 
udp_hdr_t
 *
udp_hdr
;

1187 
udp_io_hdr_t
 *
udp_io_hdr
;

1188 
ù_hdr_t
 *
ù_hdr
;

1189 
size_t
 
ù_›t_size
, 
u£r_d©a_size
;

1190 
Êags
;

1191 
u16_t
 
chksum
;

1192 
u8_t
 
u16
[2];

1193 
ªsu…
;

1195 
udp_p‹t

udp_fd
->
uf_p‹t
;

1197 i‡(
udp_p‹t
->
up_Êags
 & 
UPF_WRITE_IP
)

1199 
udp_p‹t
->
up_Êags
 |
UPF_MORE2WRITE
;

1200 #i‡
DEBUG


1201 { 
	`whîe
(); 
	`¥ötf
("\n"); }

1206 
	`as£π
 (
udp_fd
->
uf_Êags
 & 
UFF_WRITE_IP
);

1207 
udp_fd
->
uf_Êags
 &~
UFF_WRITE_IP
;

1209 
	`as£π
 (!
udp_p‹t
->
up_wr_∑ck
);

1211 
∑ck
(*
udp_fd
->
uf_gë_u£rd©a
)(udp_fd->
uf_§fd
, 0,

1212 
udp_fd
->
uf_wr_cou¡
, 
FALSE
);

1213 i‡(!
∑ck
)

1215 
udp_fd
->
uf_Êags
 &~
UFF_WRITE_IP
;

1216 
	`ª∂y_thr_gë
 (
udp_fd
, 
EFAULT
, 
FALSE
);

1217 #i‡
DEBUG


1218 { 
	`whîe
(); 
	`¥ötf
("\n"); }

1223 
Êags

udp_fd
->
uf_udp›t
.
nwuo_Êags
;

1225 
ù_hdr_∑ck

	`bf_memªq
(
IP_MIN_HDR_SIZE
);

1226 
ù_hdr
(
ù_hdr_t
 *)
	`±r2acc_d©a
(
ù_hdr_∑ck
);

1228 
udp_hdr_∑ck

	`bf_memªq
(
UDP_HDR_SIZE
);

1229 
udp_hdr
(
udp_hdr_t
 *)
	`±r2acc_d©a
(
udp_hdr_∑ck
);

1231 i‡(
Êags
 & 
NWUO_RWDATALL
)

1233 
∑ck

	`bf_∑ckIffLess
’ack, 
UDP_IO_HDR_SIZE
);

1234 
udp_io_hdr
(
udp_io_hdr_t
 *)
	`±r2acc_d©a
(
∑ck
);

1235 
ù_›t_size

udp_io_hdr
->
uih_ù_›t_Àn
;

1236 
u£r_d©a_size

udp_io_hdr
->
uih_d©a_Àn
;

1237 i‡(
UDP_IO_HDR_SIZE
+
ù_›t_size
>
udp_fd
->
uf_wr_cou¡
)

1239 
	`bf_a‰ì
(
ù_hdr_∑ck
);

1240 
	`bf_a‰ì
(
udp_hdr_∑ck
);

1241 
	`bf_a‰ì
(
∑ck
);

1242 
	`ª∂y_thr_gë
 (
udp_fd
, 
EINVAL
, 
FALSE
);

1243 #i‡
DEBUG


1244 { 
	`whîe
(); 
	`¥ötf
("\n"); }

1248 i‡(
ù_›t_size
 & 3)

1250 
	`bf_a‰ì
(
ù_hdr_∑ck
);

1251 
	`bf_a‰ì
(
udp_hdr_∑ck
);

1252 
	`bf_a‰ì
(
∑ck
);

1253 
	`ª∂y_thr_gë
 (
udp_fd
, 
EFAULT
, 
FALSE
);

1254 #i‡
DEBUG


1255 { 
	`whîe
(); 
	`¥ötf
("\n"); }

1259 i‡(
ù_›t_size
)

1260 
ù_›t_∑ck

	`bf_cut
(
∑ck
, 
UDP_IO_HDR_SIZE
, 
ù_›t_size
);

1262 
ù_›t_∑ck
= 0;

1263 
u£r_d©a_size

udp_fd
->
uf_wr_cou¡
-
UDP_IO_HDR_SIZE
-

1264 
ù_›t_size
;

1265 
u£r_d©a

	`bf_cut
(
∑ck
, 
UDP_IO_HDR_SIZE
+
ù_›t_size
,

1266 
u£r_d©a_size
);

1267 
	`bf_a‰ì
(
∑ck
);

1271 
udp_io_hdr
= 0;

1272 
ù_›t_size
= 0;

1273 
u£r_d©a_size

udp_fd
->
uf_wr_cou¡
;

1274 
ù_›t_∑ck
= 0;

1275 
u£r_d©a

∑ck
;

1278 
ù_hdr
->
ih_vîs_ihl
(
IP_MIN_HDR_SIZE
+
ù_›t_size
) >> 2;

1279 
ù_hdr
->
ih_tos

UDP_TOS
;

1280 
ù_hdr
->
ih_Êags_‰agoff

	`HTONS
(
UDP_IP_FLAGS
);

1281 
ù_hdr
->
ih_âl

UDP_TTL
;

1282 
ù_hdr
->
ih_¥Ÿo

IPPROTO_UDP
;

1283 i‡(
Êags
 & 
NWUO_RA_SET
)

1285 #i‡
DEBUG


1286 { 
	`whîe
(); 
	`¥ötf
("NWUO_RA_SET\n"); }

1288 
ù_hdr
->
ih_d°

udp_fd
->
uf_udp›t
.
nwuo_ªmaddr
;

1292 
	`as£π
 (
udp_io_hdr
);

1293 
ù_hdr
->
ih_d°

udp_io_hdr
->
uih_d°_addr
;

1295 #i‡
DEBUG
 & 256

1296 { 
	`whîe
(); 
	`¥ötf
("ih_d°"); 
	`wrôeIpAddr
(
ù_hdr
->
ih_d°
);Örintf("\n"); }

1299 i‡((
Êags
 & 
NWUO_LOCPORT_MASK
Ë!
NWUO_LP_ANY
)

1300 
udp_hdr
->
uh_§c_p‹t

udp_fd
->
uf_udp›t
.
nwuo_lo˝‹t
;

1303 
	`as£π
 (
udp_io_hdr
);

1304 
udp_hdr
->
uh_§c_p‹t

udp_io_hdr
->
uih_§c_p‹t
;

1307 i‡(
Êags
 & 
NWUO_RP_SET
)

1308 
udp_hdr
->
uh_d°_p‹t

udp_fd
->
uf_udp›t
.
nwuo_ªmp‹t
;

1311 
	`as£π
 (
udp_io_hdr
);

1312 
udp_hdr
->
uh_d°_p‹t

udp_io_hdr
->
uih_d°_p‹t
;

1315 
udp_hdr
->
uh_Àngth

	`ht⁄s
(
UDP_HDR_SIZE
+
u£r_d©a_size
);

1316 
udp_hdr
->
uh_chksum
= 0;

1318 
udp_hdr_∑ck
->
acc_√xt

u£r_d©a
;

1319 
chksum

	`∑ck_⁄eCsum
(
udp_hdr_∑ck
);

1320 
chksum

	`⁄eC_sum
(chksum, (
u16_t
 *)&
udp_fd
->
uf_p‹t
->
up_ùaddr
,

1321 (
ùaddr_t
));

1322 
chksum

	`⁄eC_sum
(chksum, (
u16_t
 *)&
ù_hdr
->
ih_d°
, (
ùaddr_t
));

1323 
u16
[0]= 0;

1324 
u16
[1]
IPPROTO_UDP
;

1325 
chksum

	`⁄eC_sum
(chksum, (
u16_t
 *)
u16
, (u16));

1326 
chksum

	`⁄eC_sum
(chksum, (
u16_t
 *)&
udp_hdr
->
uh_Àngth
, (u16_t));

1327 i‡(~
chksum
)

1328 
chksum
= ~chksum;

1329 
udp_hdr
->
uh_chksum

chksum
;

1331 i‡(
ù_›t_∑ck
)

1333 
ù_›t_∑ck

	`bf_∑ckIffLess
(ù_›t_∑ck, 
ù_›t_size
);

1334 
ù_›t_∑ck
->
acc_√xt

udp_hdr_∑ck
;

1335 
udp_hdr_∑ck

ù_›t_∑ck
;

1337 
ù_hdr_∑ck
->
acc_√xt

udp_hdr_∑ck
;

1339 
	`as£π
 (!
udp_p‹t
->
up_wr_∑ck
);

1340 
	`as£π
 (!(
udp_p‹t
->
up_Êags
 & 
UPF_WRITE_IP
));

1342 
udp_p‹t
->
up_wr_∑ck

ù_hdr_∑ck
;

1343 
udp_p‹t
->
up_Êags
 |
UPF_WRITE_IP
;

1344 #i‡
DEBUG
 & 256

1345 { 
	`whîe
(); 
	`¥ötf
("ˇŒög ip_wrôe(%d, %d)\n", 
udp_p‹t
->
up_ùfd
,

1346 
	`bf_bufsize
(
ù_hdr_∑ck
)); }

1348 
ªsu…

	`ù_wrôe
(
udp_p‹t
->
up_ùfd
, 
	`bf_bufsize
(
ù_hdr_∑ck
));

1349 #i‡
DEBUG
 & 256

1350 { 
	`whîe
(); 
	`¥ötf
("ip_write done\n"); }

1352 i‡(
ªsu…
 =
NW_SUSPEND
)

1354 
udp_p‹t
->
up_Êags
 |
UPF_WRITE_SP
;

1355 
udp_fd
->
uf_Êags
 |
UFF_WRITE_IP
;

1356 
udp_p‹t
->
up_wrôe_fd

udp_fd
;

1358 i‡(
ªsu…
<0)

1359 
	`ª∂y_thr_gë
(
udp_fd
, 
ªsu…
, 
FALSE
);

1361 
	`ª∂y_thr_gë
 (
udp_fd
, udp_fd->
uf_wr_cou¡
, 
FALSE
);

1362 #i‡
DEBUG
 & 256

1363 { 
	`whîe
(); 
	`¥ötf
("\n"); }

1365 
	}
}

1367 
PRIVATE
 
u16_t
 
	$∑ck_⁄eCsum
(
∑ck
)

1368 
acc_t
 *
∑ck
;

1370 
u16_t
 
¥ev
;

1371 
odd_byã
;

1372 *
d©a_±r
;

1373 
Àngth
;

1374 
byã_buf
[2];

1376 
	`as£π
 (
∑ck
);

1378 
¥ev
= 0;

1380 
odd_byã

FALSE
;

1381 ; 
∑ck
;Öack∑ck->
acc_√xt
)

1384 
d©a_±r

	`±r2acc_d©a
(
∑ck
);

1385 
Àngth

∑ck
->
acc_Àngth
;

1387 i‡(!
Àngth
)

1389 i‡(
odd_byã
)

1391 
byã_buf
[1]*
d©a_±r
;

1392 
¥ev

	`⁄eC_sum
’ªv, (
u16_t
 *)
byã_buf
, 2);

1393 
d©a_±r
++;

1394 
Àngth
--;

1395 
odd_byã

FALSE
;

1397 i‡(
Àngth
 & 1)

1399 
odd_byã

TRUE
;

1400 
Àngth
--;

1401 
byã_buf
[0]
d©a_±r
[
Àngth
];

1403 i‡(!
Àngth
)

1405 
¥ev

	`⁄eC_sum
 (¥ev, (
u16_t
 *)
d©a_±r
, 
Àngth
);

1407 i‡(
odd_byã
)

1408 
¥ev

	`⁄eC_sum
 (¥ev, (
u16_t
 *)
byã_buf
, 1);

1409  
¥ev
;

1410 
	}
}

1412 
PRIVATE
 
	$udp_ª°¨t_wrôe_p‹t
(
udp_p‹t
 )

1413 
udp_p‹t_t
 *
udp_p‹t
;

1415 
udp_fd_t
 *
udp_fd
;

1416 
i
;

1418 
	`as£π
 (!
udp_p‹t
->
up_wr_∑ck
);

1419 
	`as£π
 (!(
udp_p‹t
->
up_Êags
 & (
UPF_WRITE_IP
|
UPF_WRITE_SP
)));

1421 
udp_p‹t
->
up_Êags
 & 
UPF_MORE2WRITE
)

1423 
udp_p‹t
->
up_Êags
 &~
UPF_MORE2WRITE
;

1425 
i
0, 
udp_fd

udp_p‹t
->
up_√xt_fd
; i<
UDP_FD_NR
;

1426 
i
++, 
udp_fd
++)

1428 i‡(
udp_fd
 =&
udp_fd_èbÀ
[
UDP_FD_NR
])

1429 
udp_fd

udp_fd_èbÀ
;

1431 i‡(!(
udp_fd
->
uf_Êags
 & 
UFF_INUSE
))

1433 i‡(!(
udp_fd
->
uf_Êags
 & 
UFF_WRITE_IP
))

1435 i‡(
udp_fd
->
uf_p‹t
 !
udp_p‹t
)

1437 
	`ª°¨t_wrôe_fd
(
udp_fd
);

1438 i‡(
udp_p‹t
->
up_Êags
 & 
UPF_WRITE_IP
)

1440 
udp_p‹t
->
up_√xt_fd

udp_fd
+1;

1441 
udp_p‹t
->
up_Êags
 |
UPF_MORE2WRITE
;

1446 
	}
}

1448 
PUBLIC
 
	$udp_ˇn˚l
(
fd
, 
which_›î©i⁄
)

1449 
fd
;

1450 
which_›î©i⁄
;

1452 
udp_fd_t
 *
udp_fd
;

1454 #i‡
DEBUG


1455 { 
	`whîe
(); 
	`¥ötf
("udp_ˇn˚l(%d, %d)\n", 
fd
, 
which_›î©i⁄
); }

1457 
udp_fd
&
udp_fd_èbÀ
[
fd
];

1459 
which_›î©i⁄
)

1461 
SR_CANCEL_READ
:

1462 
	`as£π
 (
udp_fd
->
uf_Êags
 & 
UFF_READ_IP
);

1463 
udp_fd
->
uf_Êags
 &~
UFF_READ_IP
;

1464 
	`ª∂y_thr_put
(
udp_fd
, 
EINTR
, 
FALSE
);

1466 
SR_CANCEL_WRITE
:

1467 
	`as£π
 (
udp_fd
->
uf_Êags
 & 
UFF_WRITE_IP
);

1468 
udp_fd
->
uf_Êags
 &~
UFF_WRITE_IP
;

1469 i‡(
udp_fd
->
uf_p‹t
->
up_wrôe_fd
 == udp_fd)

1470 
udp_fd
->
uf_p‹t
->
up_wrôe_fd

NULL
;

1471 
	`ª∂y_thr_gë
(
udp_fd
, 
EINTR
, 
FALSE
);

1473 
SR_CANCEL_IOCTL
:

1474 
	`as£π
 (
udp_fd
->
uf_Êags
 & 
UFF_IOCTL_IP
);

1475 
udp_fd
->
uf_Êags
 &~
UFF_IOCTL_IP
;

1476 
	`ª∂y_thr_gë
(
udp_fd
, 
EINTR
, 
TRUE
);

1479 
	`ù_∑nic
(( "got unknown cancelÑequest" ));

1481  
NW_OK
;

1482 
	}
}

1484 
PRIVATE
 
	$udp_buf‰ì
 (
¥i‹ôy
, 
ªqsize
)

1485 
¥i‹ôy
;

1486 
size_t
 
ªqsize
;

1488 
i
;

1489 
time_t
 
cuº_tim
;

1492 i‡(
¥i‹ôy
 <
UDP_PRI_EXP_FDBUFS
)

1495 
cuº_tim

	`gë_time
();

1496 
i
=0; i<
UDP_FD_NR
; i++)

1498 i‡(!(
udp_fd_èbÀ
[
i
].
uf_Êags
 & 
UFF_INUSE
) )

1500 i‡(
udp_fd_èbÀ
[
i
].
uf_rd_buf
 &&

1501 
udp_fd_èbÀ
[
i
].
uf_exp_tim
 < 
cuº_tim
)

1503 
	`bf_a‰ì
(
udp_fd_èbÀ
[
i
].
uf_rd_buf
);

1504 
udp_fd_èbÀ
[
i
].
uf_rd_buf
= 0;

1505 i‡(
bf_‰ì_buffsize
 >
ªqsize
)

1510 i‡(
¥i‹ôy
 <
UDP_PRI_FDBUFS
)

1513 
i
=0; i<
UDP_FD_NR
; i++)

1515 i‡(!(
udp_fd_èbÀ
[
i
].
uf_Êags
 & 
UFF_INUSE
))

1517 i‡(
udp_fd_èbÀ
[
i
].
uf_rd_buf
)

1519 
	`bf_a‰ì
(
udp_fd_èbÀ
[
i
].
uf_rd_buf
);

1520 
udp_fd_èbÀ
[
i
].
uf_rd_buf
= 0;

1521 i‡(
bf_‰ì_buffsize
 >
ªqsize
)

1525 
	}
}

	@udp.h

5 #i‚de‡
UDP_H


6 
	#UDP_H


	)

8 
	#UDP_DEF_OPT
 
NWUO_NOFLAGS


	)

9 
	#UDP_MAX_DATAGRAM
 40000

	)

10 
	#UDP_READ_EXP_TIME
 (10L * 
HZ
)

	)

11 
	#UDP_TOS
 0

	)

12 
	#UDP_IP_FLAGS
 0

	)

13 
	#UDP_TTL
 30

	)

15 
	#UDP0
 0

	)

17 
	gacc
;

19 
udp_öô
 
ARGS
(( ));

20 
udp_›í
 
ARGS
(–
p‹t
, 
§fd
,

21 
acc
 *(*
gë_u£rd©a
Ë(
fd
, 
size_t
 
off£t
, size_à
cou¡
,

22 
f‹_io˘l
),

23 (*
put_u£rd©a
Ë(
fd
, 
size_t
 
off£t
, 
acc
 *
d©a
,

24 
f‹_io˘l
) ));

25 
udp_io˘l
 
	`ARGS
(–
fd
, 
ªq
 ));

26 
udp_ªad
 
	`ARGS
(–
fd
, 
size_t
 
cou¡
 ));

27 
udp_wrôe
 
	`ARGS
(–
fd
, 
size_t
 
cou¡
 ));

28 
udp_˛o£
 
	`ARGS
(–
fd
 ));

29 
udp_ˇn˚l
 
	`ARGS
(–
fd
, 
which_›î©i⁄
 ));

	@unctrl.c

18 
	~<cur£s.h
>

19 
	~"cur•riv.h
"

21 
	g°rbuf
[3] = {0, 0, 0};

28 *
	$un˘æ
(
c
)

29 
c
;

31 
ic
 = 
c
;

32 
ic
 &= 0xff;

34 i‡((
ic
 >= ' ') && (ic != 0x7f)) {

35 
°rbuf
[0] = 
ic
;

36 
°rbuf
[1] = '\0';

37 (
°rbuf
);

39 
°rbuf
[0] = '^';

40 i‡(
c
 == 0x7f)

41 
°rbuf
[1] = '?';

43 
°rbuf
[1] = 
ic
 + '@';

44 (
°rbuf
);

45 
	}
}

	@ungetc.c

6 
	~<°dio.h
>

7 
	~"loc_ö˛.h
"

10 
	$ungëc
(
ch
, 
FILE
 *
°ªam
)

12 *
p
;

14 i‡(
ch
 =
EOF
 || !
	`io_ã°Êag
(
°ªam
,
_IOREADING
))

15  
EOF
;

16 i‡(
°ªam
->
_±r
 =°ªam->
_buf
) {

17 i‡(
°ªam
->
_cou¡
 !0Ë 
EOF
;

18 
°ªam
->
_±r
++;

20 
°ªam
->
_cou¡
++;

21 
p
 = --(
°ªam
->
_±r
);

23 i‡(*
p
 !(Ë
ch
)

24 *
p
 = (Ë
ch
;

25  
ch
;

26 
	}
}

	@unix.h

6 
	#CRLF
 "\r\n"

	)

7 
	#FORWARD
 
STATIC


	)

9 
	~<sys/ty≥s.h
>

10 
	~<sys/°©.h
>

12 #if 
deföed
(
USE_DIRENT
)

13 
	~<dúít.h
>

14 
dúít
 
	tDIRENTRY
;

16 
	~<sys/dú.h
>

17 
dúe˘
 
	tDIRENTRY
;

20 #if !
deföed
(
S_ISDIR
)

21 
	#S_ISDIR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFDIR
)

	)

	@update.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

3 
	~<ãrmˇp.h
>

5 
WINDOW
 *
	gtwö
;

13 
_PROTOTYPE
(
gŸoxy
, (
row
, 
cﬁ
 ));

14 
_PROTOTYPE
(
√w©å
, (
ch
 ));

15 
_PROTOTYPE
(
Putch¨
, (
ch
 ));

16 
_PROTOTYPE
(
˛rupd©e
, (
WINDOW
 *
s¸
 ));

17 
_PROTOTYPE
(
å™sf‹mlöe
, (
löío
 ));

19 
	$gŸoxy
(
row
, 
cﬁ
)

20 
row
, 
cﬁ
;

22 
	`poscur
(
row
, 
cﬁ
);

23 
_cursv¨
.
cur§ow
 = 
row
;

24 
_cursv¨
.
curscﬁ
 = 
cﬁ
;

25 
	}
}

28 
	$√w©å
(
ch
)

29 
ch
;

31 *
me
, *
as
, *
´
, *
mb
, *
md
, *
mr
, *
so
, *
us
;

32 
œ°©å
 = 0;

34 i‡(
œ°©å
 !(
ch
 &
ATR_MSK
)) {

35 
œ°©å
 = 
ch
;

37 
	`çuts
(
me
, 1, 
outc
);

38 i‡(
´
Ë
	`çuts
◊e, 1, 
outc
);

40 i‡(
ch
 & 
A_ALTCHARSET
)

41 i‡(
as
Ë
	`çuts
◊s, 1, 
outc
);

42 i‡(
ch
 & 
A_BLINK
Ë
	`çuts
(
mb
, 1, 
outc
);

43 i‡(
ch
 & 
A_BOLD
Ë
	`çuts
(
md
, 1, 
outc
);

44 i‡(
ch
 & 
A_REVERSE
Ë
	`çuts
(
mr
, 1, 
outc
);

45 i‡(
ch
 & 
A_STANDOUT
Ë
	`çuts
(
so
, 1, 
outc
);

46 i‡(
ch
 & 
A_UNDERLINE
Ë
	`çuts
(
us
, 1, 
outc
);

48 
	}
}

56 
	$Putch¨
(
ch
)

57 
ch
;

59 i‡((
_cursv¨
.
cur§ow
 < 
LINES
Ë|| (_cursv¨.
curscﬁ
 < 
COLS
)) {

60 
	`√w©å
(
ch
);

61 
	`putch¨
(
ch
);

63 
	}
}

70 
	$˛rupd©e
(
s¸
)

71 
WINDOW
 *
s¸
;

73 *
§c
;

74 *
d°
;

75 
i
;

76 
j
;

77 
WINDOW
 *
w
;

79 
w
 = 
curs¸
;

81 i‡(
s¸
 !
w
) {

82 
i
 = 0; i < 
LINES
; i++) {

83 
§c
 = 
s¸
->
_löe
[
i
];

84 
d°
 = 
w
->
_löe
[
i
];

85 
j
 = 0; j < 
COLS
; j++Ë*
d°
++ = *
§c
++;

88 
	`√w©å
(
s¸
->
_©ås
);

89 
	`˛rs¸
();

90 
s¸
->
_˛ór
 = 
FALSE
;

91 
i
 = 0; i < 
LINES
; i++) {

92 
§c
 = 
w
->
_löe
[
i
];

93 
j
 = 0;

94 
j
 < 
COLS
) {

95 i‡(*
§c
 !(' ' | 
ATR_NRM
)) {

96 
	`gŸoxy
(
i
, 
j
);

97 
j
 < 
COLS
 && (*
§c
 !(' ' | 
ATR_NRM
))) {

98 
	`Putch¨
(*
§c
++);

99 
j
++;

102 
§c
++;

103 
j
++;

107 
	`fÊush
(
°dout
);

108 
	}
}

115 
	$å™sf‹mlöe
(
löío
)

116 
löío
;

118 *
d°p
;

119 *
§˝
;

120 
d°c
;

121 
§cc
;

122 
x
;

123 
ídx
;

125 
x
 = 
twö
->
_möchng
[
löío
];

126 
ídx
 = 
twö
->
_maxchng
[
löío
];

127 
d°p
 = 
curs¸
->
_löe
[
löío
] + 
x
;

128 
§˝
 = 
twö
->
_löe
[
löío
] + 
x
;

130 
x
 <
ídx
) {

131 i‡((*
d°p
 !*
§˝
Ë|| (
d°c
 !
§cc
)) {

132 
	`gŸoxy
(
löío
, 
x
);

133 
x
 <
ídx
 && ((*
d°p
 !*
§˝
Ë|| (
d°c
 !
§cc
))) {

134 
	`Putch¨
(*
§˝
);

135 *
d°p
++ = *
§˝
++;

136 
x
++;

139 *
d°p
++ = *
§˝
++;

140 
x
++;

143 
twö
->
_möchng
[
löío
] = 
_NO_CHANGE
;

144 
twö
->
_maxchng
[
löío
] = 
_NO_CHANGE
;

145 
	}
}

153 
	$doupd©e
()

155 
i
;

157 
twö
 = 
_cursv¨
.
tmpwö
;

158 i‡(
curs¸
->
_˛ór
)

159 
	`˛rupd©e
(
curs¸
);

161 i‡(
twö
->
_˛ór
)

162 
	`˛rupd©e
(
twö
);

164 
i
 = 0; i < 
LINES
; i++)

165 i‡(
twö
->
_möchng
[
i
] !
_NO_CHANGE
)

166 
	`å™sf‹mlöe
(
i
);

169 
curs¸
->
_curx
 = 
twö
->_curx;

170 
curs¸
->
_cury
 = 
twö
->_cury;

171 
	`gŸoxy
(
curs¸
->
_cury
, curs¸->
_curx
);

172 
	`fÊush
(
°dout
);

173 
	}
}

	@utility.c

13 
	~"fs.h
"

14 
	~<möix/com.h
>

15 
	~<möix/boŸ.h
>

16 
	~<uni°d.h
>

17 
	~"buf.h
"

18 
	~"fûe.h
"

19 
	~"Âroc.h
"

20 
	~"öode.h
"

21 
	~"∑øm.h
"

23 
PRIVATE
 
	g∑nickög
;

24 
PRIVATE
 
mesßge
 
	g˛ock_mess
;

29 
PUBLIC
 
time_t
 
	$˛ock_time
()

36 
k
;

38 
˛ock_mess
.
m_ty≥
 = 
GET_TIME
;

39 i‡–(
k
 = 
	`£ndªc
(
CLOCK
, &
˛ock_mess
)Ë!
OK
Ë
	`∑nic
("clock_timeÉrr", k);

41 –(
time_t
Ë
˛ock_mess
.
NEW_TIME
);

42 
	}
}

48 
PUBLIC
 
	$„tch_«me
(
∑th
, 
Àn
, 
Êag
)

49 *
∑th
;

50 
Àn
;

51 
Êag
;

58 *
Ωu
, *
Ωm
;

59 
r
;

62 i‡(
Àn
 <= 0) {

63 
îr_code
 = 
EINVAL
;

64 (
EGENERIC
);

67 i‡(
Àn
 > 
PATH_MAX
) {

68 
îr_code
 = 
ENAMETOOLONG
;

69 (
EGENERIC
);

72 i‡(
Êag
 =
M3
 && 
Àn
 <
M3_STRING
) {

74 
Ωu
 = &
u£r_∑th
[0];

75 
Ωm
 = 
∑th«me
;

76 dÿ{ *
Ωu
++ = *
Ωm
++; } --
Àn
);

77 
r
 = 
OK
;

80 
r
 = 
	`sys_c›y
(
who
, 
D
, (
phys_byãs
Ë
∑th
,

81 
FS_PROC_NR
, 
D
, (
phys_byãs
Ë
u£r_∑th
, (phys_byãsË
Àn
);

83 (
r
);

84 
	}
}

90 
PUBLIC
 
	$no_sys
()

94 (
EINVAL
);

95 
	}
}

101 
PUBLIC
 
	$∑nic
(
f‹m©
, 
num
)

102 *
f‹m©
;

103 
num
;

110 i‡(
∑nickög
) ;

111 
∑nickög
 = 
TRUE
;

112 
	`¥ötf
("Fûêsy°emÖ™ic: %†", 
f‹m©
);

113 i‡(
num
 !
NO_NUM
Ë
	`¥ötf
("%d",num);

114 
	`¥ötf
("\n");

115 (Ë
	`do_sync
();

116 
	`sys_ab‹t
(
RBT_PANIC
);

117 
	}
}

123 
PUBLIC
 
	$c⁄v2
(
n‹m
, 
w
)

124 
n‹m
;

125 
w
;

129 i‡(
n‹m
Ë–(Ë
w
 & 0xFFFF);

130 –((
w
&
BYTE
) << 8) | ( (w>>8) & BYTE));

131 
	}
}

137 
PUBLIC
 
	$c⁄v4
(
n‹m
, 
x
)

138 
n‹m
;

139 
x
;

143 
lo
, 
hi
;

144 
l
;

146 i‡(
n‹m
Ë(
x
);

147 
lo
 = 
	`c⁄v2
(
FALSE
, (Ë
x
 & 0xFFFF);

148 
hi
 = 
	`c⁄v2
(
FALSE
, (Ë(
x
>>16) & 0xFFFF);

149 
l
 = ( (Ë
lo
 <<16Ë| 
hi
;

150 (
l
);

151 
	}
}

	@vfprintf.c

6 
	~<°dio.h
>

7 
	~<°d¨g.h
>

8 
	~"loc_ö˛.h
"

11 
	$vÂrötf
(
FILE
 *
°ªam
, c⁄° *
f‹m©
, 
va_li°
 
¨g
)

13  
	`_d›∫t
 (
f‹m©
, 
¨g
, 
°ªam
);

14 
	}
}

	@vprintf.c

6 
	~<°dio.h
>

7 
	~<°d¨g.h
>

8 
	~"loc_ö˛.h
"

11 
	$v¥ötf
(c⁄° *
f‹m©
, 
va_li°
 
¨g
)

13  
	`_d›∫t
(
f‹m©
, 
¨g
, 
°dout
);

14 
	}
}

	@vscanf.c

5 
	~<°dio.h
>

6 
	~<°d¨g.h
>

7 
	~"loc_ö˛.h
"

10 
	$vsˇnf
(c⁄° *
f‹m©
, 
va_li°
 
≠
)

12  
	`_dosˇn
(
°dö
, 
f‹m©
, 
≠
);

13 
	}
}

	@vsprintf.c

6 
	~<°dio.h
>

7 
	~<°d¨g.h
>

8 
	~"loc_ö˛.h
"

11 
	$v•rötf
(*
s
, c⁄° *
f‹m©
, 
va_li°
 
¨g
)

13 
ªtvÆ
;

14 
FILE
 
tmp_°ªam
;

16 
tmp_°ªam
.
_fd
 = -1;

17 
tmp_°ªam
.
_Êags
 = 
_IOWRITE
 + 
_IONBF
 + 
_IOWRITING
;

18 
tmp_°ªam
.
_buf
 = (*Ë
s
;

19 
tmp_°ªam
.
_±r
 = (*Ë
s
;

20 
tmp_°ªam
.
_cou¡
 = 32767;

22 
ªtvÆ
 = 
	`_d›∫t
(
f‹m©
, 
¨g
, &
tmp_°ªam
);

23 
	`putc
('\0',&
tmp_°ªam
);

25  
ªtvÆ
;

26 
	}
}

	@vsscanf.c

5 
	~<°dio.h
>

6 
	~<°d¨g.h
>

7 
	~<°rög.h
>

8 
	~"loc_ö˛.h
"

10 
	$vssˇnf
(c⁄° *
s
, c⁄° *
f‹m©
, 
va_li°
 
≠
)

12 
FILE
 
tmp_°ªam
;

14 
tmp_°ªam
.
_fd
 = -1;

15 
tmp_°ªam
.
_Êags
 = 
_IOREAD
 + 
_IONBF
 + 
_IOREADING
;

16 
tmp_°ªam
.
_buf
 = (*Ë
s
;

17 
tmp_°ªam
.
_±r
 = (*Ë
s
;

18 
tmp_°ªam
.
_cou¡
 = 
	`°æí
(
s
);

20  
	`_dosˇn
(&
tmp_°ªam
, 
f‹m©
, 
≠
);

21 
	}
}

	@waddch.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

9 
_PROTOTYPE
–
√wlöe
, (
WINDOW
 *
wö
, 
lö
));

11 
	$√wlöe
(
wö
, 
lö
)

12 
WINDOW
 *
wö
;

13 
lö
;

15 i‡(++
lö
 > 
wö
->
_ªgbŸtom
) {

16 
lö
--;

17 i‡(
wö
->
_s¸ﬁl
)

18 
	`s¸ﬁl
(
wö
);

22 (
lö
);

23 
	}
}

31 
	$waddch
(
wö
, 
c
)

32 
WINDOW
 *
wö
;

33 
c
;

35 
x
 = 
wö
->
_curx
;

36 
y
 = 
wö
->
_cury
;

37 
√wx
;

38 
ch
 = 
c
;

39 
ts
 = 
wö
->
_èbsize
;

41 
ch
 &(
A_ALTCHARSET
 | 0xff);

42 i‡(
y
 > 
wö
->
_maxy
 || 
x
 > wö->
_maxx
 || y < 0 || x < 0Ë(
ERR
);

43 
ch
) {

45 
√wx
 = ((
x
 / 
ts
) + 1) *Ås; x <Çewx; x++) {

46 i‡(
	`waddch
(
wö
, ' 'Ë=
ERR
) (ERR);

47 i‡(
wö
->
_curx
 == 0)

48 (
OK
);

50 (
OK
);

53 i‡(
NONL
Ë
x
 = 0;

54 i‡((
y
 = 
	`√wlöe
(
wö
, y)Ë< 0Ë (
ERR
);

57 '\r': 
x
 = 0; ;

60 i‡(--
x
 < 0)

61 
x
 = 0;

66 i‡(
	`waddch
(
wö
, '^'Ë=
ERR
) (ERR);

67 (
	`waddch
(
wö
, '?'));

71 i‡(
ch
 < ' ') {

72 i‡(
	`waddch
(
wö
, '^'Ë=
ERR
) (ERR);

73 (
	`waddch
(
wö
, 
c
 + '@'));

75 
ch
 |(
wö
->
_©ås
 & 
ATR_MSK
);

76 i‡(
wö
->
_löe
[
y
][
x
] !
ch
) {

77 i‡(
wö
->
_möchng
[
y
] =
_NO_CHANGE
)

78 
wö
->
_möchng
[
y
] = wö->
_maxchng
[y] = 
x
;

79 i‡(
x
 < 
wö
->
_möchng
[
y
])

80 
wö
->
_möchng
[
y
] = 
x
;

81 i‡(
x
 > 
wö
->
_maxchng
[
y
])

82 
wö
->
_maxchng
[
y
] = 
x
;

84 
wö
->
_löe
[
y
][
x
++] = 
ch
;

85 i‡(
x
 > 
wö
->
_maxx
) {

86 
x
 = 0;

87 i‡((
y
 = 
	`√wlöe
(
wö
, y)Ë< 0Ë(
ERR
);

92 
wö
->
_curx
 = 
x
;

93 
wö
->
_cury
 = 
y
;

94 (
OK
);

95 
	}
}

	@waddstr.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

10 
	$wadd°r
(
wö
, 
°r
)

11 
WINDOW
 *
wö
;

12 *
°r
;

14 *
°r
) {

15 i‡(
	`waddch
(
wö
, *
°r
++Ë=
ERR
) (ERR);

17 (
OK
);

18 
	}
}

	@wbox.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

13 
	$wbox
(
wö
, 
ymö
, 
xmö
, 
ymax
, 
xmax
, 
v
, 
h
)

14 
WINDOW
 *
wö
;

15 
ymö
, 
xmö
, 
ymax
, 
xmax
;

16 
v
;

17 
h
;

19 
vc
, 
hc
, 
ulc
, 
urc
, 
Œc
, 
Ãc
;

20 
i
;

22 i‡(
ymax
 =0Ëymax = 
wö
->
_maxy
;

23 i‡(
xmax
 =0Ëxmax = 
wö
->
_maxx
;

25 i‡(
ymö
 >
wö
->
_maxy
 || 
ymax
 > win->_maxy ||

26 
xmö
 >
wö
->
_maxx
 || 
xmax
 > win->_maxx ||

27 
ymö
 >
ymax
 || 
xmö
 >
xmax
)

28 (
ERR
);

30 
vc
 = 
v
;

31 
hc
 = 
h
;

32 
ulc
 = 
urc
 = 
Œc
 = 
Ãc
 = 
vc
;

34 i‡(
v
 =0 && 
h
 == 0) {

35 
ulc
 = 
ACS_ULCORNER
;

36 
urc
 = 
ACS_URCORNER
;

37 
Œc
 = 
ACS_LLCORNER
;

38 
Ãc
 = 
ACS_LRCORNER
;

39 
hc
 = 
ACS_HLINE
;

40 
vc
 = 
ACS_VLINE
;

42 
i
 = 
xmö
 + 1; i <
xmax
 - 1; i++) {

43 
wö
->
_löe
[
ymö
][
i
] = 
hc
 | wö->
_©ås
;

44 
wö
->
_löe
[
ymax
][
i
] = 
hc
 | wö->
_©ås
;

46 
i
 = 
ymö
 + 1; i <
ymax
 - 1; i++) {

47 
wö
->
_löe
[
i
][
xmö
] = 
vc
 | wö->
_©ås
;

48 
wö
->
_löe
[
i
][
xmax
] = 
vc
 | wö->
_©ås
;

50 
wö
->
_löe
[
ymö
][
xmö
] = 
ulc
 | wö->
_©ås
;

51 
wö
->
_löe
[
ymö
][
xmax
] = 
urc
 | wö->
_©ås
;

52 
wö
->
_löe
[
ymax
][
xmö
] = 
Œc
 | wö->
_©ås
;

53 
wö
->
_löe
[
ymax
][
xmax
] = 
Ãc
 | wö->
_©ås
;

55 
i
 = 
ymö
; i <
ymax
; i++) {

56 i‡(
wö
->
_möchng
[
i
] =
_NO_CHANGE
) {

57 
wö
->
_möchng
[
i
] = 
xmö
;

58 
wö
->
_maxchng
[
i
] = 
xmax
;

60 
wö
->
_möchng
[
i
] = 
	`mö
(wö->_möchng[i], 
xmö
);

61 
wö
->
_maxchng
[
i
] = 
	`max
(wö->_maxchng[i], 
xmax
);

64 (
OK
);

65 
	}
}

	@wclear.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

9 
	$w˛ór
(
wö
)

10 
WINDOW
 *
wö
;

12 
	`wîa£
(
wö
);

13 
wö
->
_˛ór
 = 
TRUE
;

14 
	}
}

	@wclrtobot.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

9 
	$w˛πobŸ
(
wö
)

10 
WINDOW
 *
wö
;

12 
y
, 
möx
, 
°¨tx
, *
±r
, *
íd
, *
maxx
, 
bœnk
;

14 
bœnk
 = ' ' | (
wö
->
_©ås
 & 
ATR_MSK
);

15 
°¨tx
 = 
wö
->
_curx
;

16 
y
 = 
wö
->
_cury
; y <wö->
_ªgbŸtom
; y++) {

17 
möx
 = 
_NO_CHANGE
;

18 
íd
 = &
wö
->
_löe
[
y
][wö->
_maxx
];

19 
±r
 = &
wö
->
_löe
[
y
][
°¨tx
];Öå <
íd
;Ötr++) {

20 i‡(*
±r
 !
bœnk
) {

21 
maxx
 = 
±r
;

22 i‡(
möx
 =
_NO_CHANGE
Ëmöx = 
±r
 - 
wö
->
_löe
[
y
];

23 *
±r
 = 
bœnk
;

26 i‡(
möx
 !
_NO_CHANGE
) {

27 i‡((
wö
->
_möchng
[
y
] > 
möx
Ë|| (wö->_möchng[y] =
_NO_CHANGE
))

28 
wö
->
_möchng
[
y
] = 
möx
;

29 i‡(
wö
->
_maxchng
[
y
] < 
maxx
 - wö->
_löe
[y])

30 
wö
->
_maxchng
[
y
] = 
maxx
 - wö->
_löe
[y];

32 
°¨tx
 = 0;

34 (
OK
);

35 
	}
}

	@wclrtoeol.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

9 
	$w˛π€ﬁ
(
wö
)

10 
WINDOW
 *
wö
;

12 *
maxx
, *
±r
, *
íd
, 
y
, 
x
, 
möx
, 
bœnk
;

14 
y
 = 
wö
->
_cury
;

15 
x
 = 
wö
->
_curx
;

16 
bœnk
 = ' ' | (
wö
->
_©ås
 & 
ATR_MSK
);

18 
íd
 = &
wö
->
_löe
[
y
][wö->
_maxx
];

19 
möx
 = 
_NO_CHANGE
;

20 
maxx
 = &
wö
->
_löe
[
y
][
x
];

21 
±r
 = 
maxx
;Öå <
íd
;Ötr++) {

22 i‡(*
±r
 !
bœnk
) {

23 
maxx
 = 
±r
;

24 i‡(
möx
 =
_NO_CHANGE
Ëmöx = 
±r
 - 
wö
->
_löe
[
y
];

25 *
±r
 = 
bœnk
;

29 i‡(
möx
 !
_NO_CHANGE
) {

30 i‡(
wö
->
_möchng
[
y
] > 
möx
 || wö->_möchng[y] =
_NO_CHANGE
)

31 
wö
->
_möchng
[
y
] = 
möx
;

32 i‡(
wö
->
_maxchng
[
y
] < 
maxx
 - wö->
_löe
[y])

33 
wö
->
_maxchng
[
y
] = 
maxx
 - wö->
_löe
[y];

35 (
OK
);

36 
	}
}

	@wcstombs.c

7 
	~<°dlib.h
>

8 
	~<loˇÀ.h
>

9 
	~<limôs.h
>

11 
size_t


12 
	$wc°ombs
(*
s
, c⁄° 
wch¨_t
 *
pwcs
, 
size_t
 
n
)

14 
i
 = 
n
;

16 --
i
 >= 0) {

17 i‡(!(*
s
++ = *
pwcs
++))

20  
n
 - 
i
 - 1;

21 
	}
}

	@wctomb.c

7 
	~<°dlib.h
>

8 
	~<limôs.h
>

14 
	$w˘omb
(*
s
, 
wch¨_t
 
wch¨
)

16 i‡(!
s
)  0;

18 *
s
 = 
wch¨
;

20 
	}
}

	@wdelch.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

9 
	$wdñch
(
wö
)

10 
WINDOW
 *
wö
;

12 *
ãmp1
;

13 *
ãmp2
;

14 *
íd
;

15 
y
 = 
wö
->
_cury
;

16 
x
 = 
wö
->
_curx
;

17 
maxx
 = 
wö
->
_maxx
;

19 
íd
 = &
wö
->
_löe
[
y
][
maxx
];

20 
ãmp1
 = &
wö
->
_löe
[
y
][
x
];

21 
ãmp2
 = 
ãmp1
 + 1;

22 
ãmp1
 < 
íd
Ë*ãmp1++ = *
ãmp2
++;

23 *
ãmp1
 = ' ' | (
wö
->
_©ås
 & 
ATR_MSK
);

24 
wö
->
_maxchng
[
y
] = 
maxx
;

25 i‡(
wö
->
_möchng
[
y
] =
_NO_CHANGE
 || wö->_möchng[y] > 
x
)

26 
wö
->
_möchng
[
y
] = 
x
;

27 (
OK
);

28 
	}
}

	@wdeleteln.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

10 
	$wdñëñn
(
wö
)

11 
WINDOW
 *
wö
;

13 *
íd
, *
ãmp
, 
y
, 
bœnk
;

15 
bœnk
 = ' ' | (
wö
->
_©ås
 & 
ATR_MSK
);

17 
ãmp
 = 
wö
->
_löe
[wö->
_cury
];

18 
y
 = 
wö
->
_cury
; y < wö->
_ªgbŸtom
; y++) {

19 
wö
->
_löe
[
y
] = win->_line[y + 1];

20 
wö
->
_möchng
[
y
] = 0;

21 
wö
->
_maxchng
[
y
] = wö->
_maxx
;

23 
wö
->
_möchng
[
y
] = 0;

24 
wö
->
_maxchng
[
y
] = wö->
_maxx
;

25 
wö
->
_löe
[wö->
_ªgbŸtom
] = 
ãmp
;

26 
íd
 = &(
ãmp
[
wö
->
_maxx
]);Åem∞<íd;Ë*ãmp++ = 
bœnk
;

27 (
OK
);

28 
	}
}

	@wdeth.c

7 
	~"kî√l.h
"

8 
	~<√t/gí/ëhî.h
>

9 
	~<√t/gí/ëh_io.h
>

10 
	~"as£π.h
"

11 
	gINIT_ASSERT


12 
	~"dp8390.h
"

13 
	~"wdëh.h
"

15 #i‡
ENABLE_NETWORKING


17 #i‡!
__möix_vmd


18 
	#debug
 0

	)

21 
	#WET_ETHERNET
 0x01

	)

22 
	#WET_STARLAN
 0x02

	)

23 
	#WET_INTERF_CHIP
 0x04

	)

24 
	#WET_BRD_16BIT
 0x08

	)

25 
	#WET_SLT_16BIT
 0x10

	)

26 
	#WET_790
 0x20

	)

28 
	gwe_öt_èbÀ
[8]= { 9, 3, 5, 7, 10, 11, 15, 4 };

29 
	gwe_790öt_èbÀ
[8]= { 0, 9, 3, 5, 7, 10, 11, 15 };

31 
_PROTOTYPE
–
we_öô
, (
d≥th_t
 *
dï
) );

32 
_PROTOTYPE
–
we_°›
, (
d≥th_t
 *
dï
) );

33 
_PROTOTYPE
–
we_Æüsög
, (
d≥th_t
 *
dï
) );

34 
_PROTOTYPE
–
we_öãrÁ˚_chù
, (
d≥th_t
 *
dï
) );

35 
_PROTOTYPE
–
we_16bôbﬂrd
, (
d≥th_t
 *
dï
) );

36 
_PROTOTYPE
–
we_16bô¶Ÿ
, (
d≥th_t
 *
dï
) );

37 
_PROTOTYPE
–
we_u…ø
, (
d≥th_t
 *
dï
) );

42 
	$wdëh_¥obe
(
dï
)

43 
d≥th_t
 *
dï
;

45 
sum
;

47 i‡(
dï
->
de_lömem
 == 0)

50 
sum
 = 
	`öb_we
(
dï
, 
EPL_EA0
Ë+ inb_we(dï, 
EPL_EA1
) +

51 
	`öb_we
(
dï
, 
EPL_EA2
Ë+ inb_we(dï, 
EPL_EA3
) +

52 
	`öb_we
(
dï
, 
EPL_EA4
Ë+ inb_we(dï, 
EPL_EA5
) +

53 
	`öb_we
(
dï
, 
EPL_TLB
Ë+ inb_we(dï, 
EPL_CHKSUM
);

54 i‡((
sum
 & 0xFF) != 0xFF)

57 
dï
->
de_öôf

we_öô
;

58 
dï
->
de_°›f

we_°›
;

59 
dï
->
de_¥og_IO
= 0;

61 
	}
}

67 
	$we_öô
(
dï
)

68 
d≥th_t
 *
dï
;

70 
i
, 
öt_ödx
, 
öt_ƒ
;

71 
éb
, 
ømbô
, 
ªvisi⁄
;

72 
i¸
, 
úr
, 
hwr
, 
b
, 
g¸
;

73 
we_ty≥
;

74 
£ndq_ƒ
;

76 
	`as£π
(
dï
->
de_mode
 =
DEM_ENABLED
);

77 
	`as£π
(!(
dï
->
de_Êags
 & 
DEF_ENABLED
));

79 
dï
->
de_addªss
.
ó_addr
[0] = 
	`öb_we
(dï, 
EPL_EA0
);

80 
dï
->
de_addªss
.
ó_addr
[1] = 
	`öb_we
(dï, 
EPL_EA1
);

81 
dï
->
de_addªss
.
ó_addr
[2] = 
	`öb_we
(dï, 
EPL_EA2
);

82 
dï
->
de_addªss
.
ó_addr
[3] = 
	`öb_we
(dï, 
EPL_EA3
);

83 
dï
->
de_addªss
.
ó_addr
[4] = 
	`öb_we
(dï, 
EPL_EA4
);

84 
dï
->
de_addªss
.
ó_addr
[5] = 
	`öb_we
(dï, 
EPL_EA5
);

86 
dï
->
de_dp8390_p‹t
dï->
de_ba£_p‹t
 + 
EPL_DP8390
;

88 
dï
->
de_16bô
= 0;

90 
we_ty≥
= 0;

91 
we_ty≥
 |
WET_ETHERNET
;

92 i‡(
	`we_u…ø
(
dï
))

93 
we_ty≥
 |
WET_790
;

94 i‡(!
	`we_Æüsög
(
dï
))

96 i‡(
	`we_öãrÁ˚_chù
(
dï
))

97 
we_ty≥
 |
WET_INTERF_CHIP
;

98 i‡(
	`we_16bôbﬂrd
(
dï
))

100 
we_ty≥
 |
WET_BRD_16BIT
;

101 i‡(
	`we_16bô¶Ÿ
(
dï
))

102 
we_ty≥
 |
WET_SLT_16BIT
;

105 i‡(
we_ty≥
 & 
WET_SLT_16BIT
)

106 
dï
->
de_16bô
= 1;

109 
éb

	`öb_we
(
dï
, 
EPL_TLB
);

110 
ªvisi⁄

éb
 & 
E_TLB_REV
;

111 
ømbô

éb
 & 
E_TLB_RAM
;

113 i‡(
ªvisi⁄
 < 2)

115 
dï
->
de_ømsize
= 0x2000;

116 i‡(
we_ty≥
 & 
WET_BRD_16BIT
)

117 
dï
->
de_ømsize
= 0x4000;

118 i‡((
we_ty≥
 & 
WET_INTERF_CHIP
) &&

119 
	`öb_we
(
dï
, 
EPL_ICR
Ë& 
E_ICR_MEMBIT
)

121 
dï
->
de_ømsize
= 0x8000;

126 i‡(
we_ty≥
 & 
WET_BRD_16BIT
)

129 
dï
->
de_ømsize

ømbô
 ? 0x8000 : 0x4000;

134 
dï
->
de_ømsize

ømbô
 ? 0x8000 : 0x2000;

138 i‡(
we_ty≥
 & 
WET_790
)

140 
	`outb_we
(
dï
, 
EPL_MSR
, 
E_MSR_RESET
);

141 i‡((
we_ty≥
 & (
WET_BRD_16BIT
|
WET_SLT_16BIT
)) ==

142 (
WET_BRD_16BIT
|
WET_SLT_16BIT
))

144 
	`outb_we
(
dï
, 
EPL_LAAR
, 
E_LAAR_LAN16E
 | 
E_LAAR_MEM16E
);

147 i‡(
we_ty≥
 & 
WET_BRD_16BIT
)

149 i‡(
we_ty≥
 & 
WET_SLT_16BIT
)

151 
	`outb_we
(
dï
, 
EPL_LAAR
, 
E_LAAR_A19
 | 
E_LAAR_SOFTINT
 |

152 
E_LAAR_LAN16E
 | 
E_LAAR_MEM16E
);

156 
	`outb_we
(
dï
, 
EPL_LAAR
, 
E_LAAR_A19
 | 
E_LAAR_SOFTINT
 |

157 
E_LAAR_LAN16E
);

161 i‡(
we_ty≥
 & 
WET_790
)

163 
	`outb_we
(
dï
, 
EPL_MSR
, 
E_MSR_MENABLE
);

164 
hwr

	`öb_we
(
dï
, 
EPL_790_HWR
);

165 
	`outb_we
(
dï
, 
EPL_790_HWR
, 
hwr
 | 
E_790_HWR_SWH
);

166 
b

	`öb_we
(
dï
, 
EPL_790_B
);

167 
	`outb_we
(
dï
, 
EPL_790_B
, ((dï->
de_lömem
 >> 13) & 0x0f) |

168 ((
dï
->
de_lömem
 >> 11Ë& 0x40Ë| (
b
 & 0xb0));

169 
	`outb_we
(
dï
, 
EPL_790_HWR
, 
hwr
 & ~
E_790_HWR_SWH
);

173 
	`outb_we
(
dï
, 
EPL_MSR
, 
E_MSR_RESET
);

174 
	`outb_we
(
dï
, 
EPL_MSR
, 
E_MSR_MENABLE
 |

175 ((
dï
->
de_lömem
 >> 13Ë& 
E_MSR_MEMADDR
));

178 i‡((
we_ty≥
 & 
WET_INTERF_CHIP
Ë&& !(we_ty≥ & 
WET_790
))

180 
i¸

	`öb_we
(
dï
, 
EPL_ICR
);

181 
úr

	`öb_we
(
dï
, 
EPL_IRR
);

182 
öt_ödx
(
i¸
 & 
E_ICR_IR2
) |

183 ((
úr
 & (
E_IRR_IR0
|
E_IRR_IR1
)) >> 5);

184 
öt_ƒ

we_öt_èbÀ
[
öt_ödx
];

185 #i‡
DEBUG


186 { 
	`¥ötf
("wdëh.c:Éncoded irq%d\n", 
öt_ƒ
); }

188 i‡(
dï
->
de_úq
 & 
DEI_DEFAULT
Ëdï->de_úq
öt_ƒ
;

190 
	`outb_we
(
dï
, 
EPL_IRR
, 
úr
 | 
E_IRR_IEN
);

192 i‡(
we_ty≥
 & 
WET_790
)

194 
hwr

	`öb_we
(
dï
, 
EPL_790_HWR
);

195 
	`outb_we
(
dï
, 
EPL_790_HWR
, 
hwr
 | 
E_790_HWR_SWH
);

197 
g¸

	`öb_we
(
dï
, 
EPL_790_GCR
);

199 
	`outb_we
(
dï
, 
EPL_790_HWR
, 
hwr
 & ~
E_790_HWR_SWH
);

201 
öt_ödx
((
g¸
 & 
E_790_GCR_IR2
) >> 4) |

202 ((
g¸
 & (
E_790_GCR_IR1
|
E_790_GCR_IR0
)) >> 2);

203 
öt_ƒ

we_790öt_èbÀ
[
öt_ödx
];

204 #i‡
DEBUG


205 { 
	`¥ötf
("wdëh.c:Éncoded irq%d\n", 
öt_ƒ
); }

207 i‡(
dï
->
de_úq
 & 
DEI_DEFAULT
Ëdï->de_úq
öt_ƒ
;

209 
i¸

	`öb_we
(
dï
, 
EPL_790_ICR
);

210 
	`outb_we
(
dï
, 
EPL_790_ICR
, 
i¸
 | 
E_790_ICR_EIL
);

214 
dï
->
de_úq
 &~
DEI_DEFAULT
;

216 i‡(!
debug
)

218 
	`¥ötf
("wdeth: WD80%d3át %X:%d:%lX\n",

219 
we_ty≥
 & 
WET_BRD_16BIT
 ? 1 : 0,

220 
dï
->
de_ba£_p‹t
, dï->
de_úq
, dï->
de_lömem
);

224 
	`¥ötf
("wdeth: Western Digital %s%s card %s%s",

225 
we_ty≥
 & 
WET_BRD_16BIT
 ? "16-bit " : "",

226 
we_ty≥
 & 
WET_ETHERNET
 ? "Ethernet" :

227 
we_ty≥
 & 
WET_STARLAN
 ? "Starlan" : "Network",

228 
we_ty≥
 & 
WET_INTERF_CHIP
 ? "withán interface chip " : "",

229 
we_ty≥
 & 
WET_SLT_16BIT
 ? "iná 16-bit slot " : "");

230 
	`¥ötf
(

232 
dï
->
de_ba£_p‹t
, dï->
de_lömem
, dï->
de_ømsize
,

233 
dï
->
de_úq
);

236 
dï
->
de_off£t_∑ge
= 0;

239 
£ndq_ƒ

dï
->
de_ømsize
 / 0x2000;

240 i‡(
£ndq_ƒ
 < 1)

241 
£ndq_ƒ
= 1;

242 i‡(
£ndq_ƒ
 > 
SENDQ_NR
)

243 
£ndq_ƒ

SENDQ_NR
;

244 
dï
->
de_£ndq_ƒ

£ndq_ƒ
;

245 
i
0; i<
£ndq_ƒ
; i++)

246 
dï
->
de_£ndq
[
i
].
sq_£nd∑ge
i*
SENDQ_PAGES
;

248 
dï
->
de_°¨çage

i
*
SENDQ_PAGES
;

249 
dï
->
de_°›∑ge
dï->
de_ømsize
 / 
DP_PAGESIZE
;

250 
	}
}

256 
	$we_°›
(
dï
)

257 
d≥th_t
 *
dï
;

259 i‡(
dï
->
de_16bô
)

260 
	`outb_we
(
dï
, 
EPL_LAAR
, 
E_LAAR_A19
 | 
E_LAAR_LAN16E
);

261 
	`outb_we
(
dï
, 
EPL_MSR
, 
E_MSR_RESET
);

262 
	`outb_we
(
dï
, 
EPL_MSR
, 0);

263 
	}
}

269 
	$we_Æüsög
(
dï
)

270 
d≥th_t
 *
dï
;

275 i‡(
	`öb_we
(
dï
, 
EPL_REG1
Ë!öb_we(dï, 
EPL_EA1
))

277 i‡(
	`öb_we
(
dï
, 
EPL_REG2
Ë!öb_we(dï, 
EPL_EA2
))

279 i‡(
	`öb_we
(
dï
, 
EPL_REG3
Ë!öb_we(dï, 
EPL_EA3
))

281 i‡(
	`öb_we
(
dï
, 
EPL_REG4
Ë!öb_we(dï, 
EPL_EA4
))

283 i‡(
	`öb_we
(
dï
, 
EPL_REG7
Ë!öb_we(dï, 
EPL_CHKSUM
))

286 
	}
}

292 
	$we_öãrÁ˚_chù
(
dï
)

293 
d≥th_t
 *
dï
;

297 
	`outb_we
(
dï
, 
EPL_GP2
, 0x35);

298 i‡(
	`öb_we
(
dï
, 
EPL_GP2
) != 0x35)

300 
	`outb_we
(
dï
, 
EPL_GP2
, 0x3A);

301 i‡(
	`öb_we
(
dï
, 
EPL_GP2
) != 0x3A)

304 
	}
}

310 
	$we_16bôbﬂrd
(
dï
)

311 
d≥th_t
 *
dï
;

317 
i¸
;

318 
u8_t
 
éb
;

320 
i¸

	`öb_we
(
dï
, 
EPL_ICR
);

322 
	`outb_we
(
dï
, 
EPL_ICR
, 
i¸
 ^ 
E_ICR_16BIT
);

323 i‡(
	`öb_we
(
dï
, 
EPL_ICR
Ë=
i¸
)

325 
éb

	`öb_we
(
dï
, 
EPL_TLB
);

326 #i‡
DEBUG


327 
	`¥ötf
("wdëh:Ålb0x%x\n", 
éb
);

329  
éb
 =
E_TLB_EB
 ||Ålb =
E_TLB_E
 ||

330 
éb
 =
E_TLB_SMCE
 ||Ålb =
E_TLB_SMC8216C
;

332 
	`outb_we
(
dï
, 
EPL_ICR
, 
i¸
);

334 
	}
}

340 
	$we_16bô¶Ÿ
(
dï
)

341 
d≥th_t
 *
dï
;

344  !!(
	`öb_we
(
dï
, 
EPL_ICR
Ë& 
E_ICR_16BIT
);

345 
	}
}

351 
	$we_u…ø
(
dï
)

352 
d≥th_t
 *
dï
;

355 
u8_t
 
éb
;

357 
éb

	`öb_we
(
dï
, 
EPL_TLB
);

358  
éb
 =
E_TLB_SMC8216C
;

359 
	}
}

	@wdeth.h

7 #i‚de‡
WDETH_H


8 
	#WDETH_H


	)

12 
	#EPL_REG0
 0x0

	)

13 
	#EPL_REG1
 0x1

	)

14 
	#EPL_REG2
 0x2

	)

15 
	#EPL_REG3
 0x3

	)

16 
	#EPL_REG4
 0x4

	)

17 
	#EPL_REG5
 0x5

	)

18 
	#EPL_REG6
 0x6

	)

19 
	#EPL_REG7
 0x7

	)

20 
	#EPL_EA0
 0x8

	)

21 
	#EPL_EA1
 0x9

	)

22 
	#EPL_EA2
 0xA

	)

23 
	#EPL_EA3
 0xB

	)

24 
	#EPL_EA4
 0xC

	)

25 
	#EPL_EA5
 0xD

	)

26 
	#EPL_TLB
 0xE

	)

27 
	#EPL_CHKSUM
 0xF

	)

28 
	#EPL_DP8390
 0x10

	)

30 
	#EPL_MSR
 
EPL_REG0


	)

31 
	#EPL_ICR
 
EPL_REG1


	)

32 
	#EPL_IRR
 
EPL_REG4


	)

33 
	#EPL_790_HWR
 
EPL_REG4


	)

34 
	#EPL_LAAR
 
EPL_REG5


	)

35 
	#EPL_790_ICR
 
EPL_REG6


	)

36 
	#EPL_GP2
 
EPL_REG7


	)

37 
	#EPL_790_B
 
EPL_EA3


	)

38 
	#EPL_790_GCR
 
EPL_EA5


	)

41 
	#E_MSR_MEMADDR
 0x3F

	)

42 
	#E_MSR_MENABLE
 0x40

	)

43 
	#E_MSR_RESET
 0x80

	)

46 
	#E_ICR_16BIT
 0x01

	)

47 
	#E_ICR_IR2
 0x04

	)

48 
	#E_ICR_MEMBIT
 0x08

	)

51 
	#E_IRR_IR0
 0x20

	)

52 
	#E_IRR_IR1
 0x40

	)

53 
	#E_IRR_IEN
 0x80

	)

56 
	#E_LAAR_A19
 0x01

	)

57 
	#E_LAAR_A20
 0x02

	)

58 
	#E_LAAR_A21
 0x04

	)

59 
	#E_LAAR_A22
 0x08

	)

60 
	#E_LAAR_A23
 0x10

	)

61 
	#E_LAAR_SOFTINT
 0x20

	)

62 
	#E_LAAR_LAN16E
 0x40

	)

63 
	#E_LAAR_MEM16E
 0x80

	)

66 
	#E_TLB_EB
 0x05

	)

67 
	#E_TLB_E
 0x27

	)

68 
	#E_TLB_SMCE
 0x29

	)

69 
	#E_TLB_SMC8216C
 0x2B

	)

71 
	#E_TLB_REV
 0x1F

	)

72 
	#E_TLB_SOFT
 0x20

	)

73 
	#E_TLB_RAM
 0x40

	)

76 
	#E_790_HWR_SWH
 0x80

	)

79 
	#E_790_ICR_EIL
 0x01

	)

82 
	#E_790_GCR_IR0
 0x04

	)

83 
	#E_790_GCR_IR1
 0x08

	)

84 
	#E_790_GCR_IR2
 0x40

	)

87 
	#öb_we
(
dï
, 
ªg
Ë(
	`ö_byã
(dï->
de_ba£_p‹t
+ªg))

	)

88 
	#outb_we
(
dï
, 
ªg
, 
d©a
Ë(
	`out_byã
(dï->
de_ba£_p‹t
+ªg, d©a))

	)

	@werase.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

9 
	$wîa£
(
wö
)

10 
WINDOW
 *
wö
;

12 *
íd
, *
°¨t
, 
y
, 
bœnk
;

14 
bœnk
 = ' ' | (
wö
->
_©ås
 & 
ATR_MSK
);

16 
y
 = 
wö
->
_ªgt›
; y <wö->
_ªgbŸtom
; y++) {

17 
°¨t
 = 
wö
->
_löe
[
y
];

18 
íd
 = &
°¨t
[
wö
->
_maxx
];

19 
°¨t
 <
íd
)

20 *
°¨t
++ = 
bœnk
;

21 
wö
->
_möchng
[
y
] = 0;

22 
wö
->
_maxchng
[
y
] = wö->
_maxx
;

24 
wö
->
_cury
 = wö->
_ªgt›
;

25 
wö
->
_curx
 = 0;

26 
	}
}

	@wgetch.c

1 
	~<cur£s.h
>

2 
	~<°dio.h
>

3 
	~"cur•riv.h
"

5 
	$wgëch
(
wö
)

6 
WINDOW
 *
wö
;

8 
boﬁ
 
we£t
 = 
FALSE
;

9 
öp
;

11 i‡(!
wö
->
_s¸ﬁl
 && (wö->
_Êags
 & 
_FULLWIN
)

12 && 
wö
->
_curx
 =wö->
_maxx
 - 1 && wö->
_cury
 =wö->
_maxy
 - 1)

13  
ERR
;

14 i‡(
_cursv¨
.
echoô
 && !_cursv¨.
øwmode
) {

15 
	`cbªak
();

16 
we£t
++;

18 
öp
 = 
	`gëch¨
();

19 i‡(
_cursv¨
.
echoô
) {

20 
	`mvwaddch
(
curs¸
, 
wö
->
_cury
 + wö->
_begy
,

21 
wö
->
_curx
 + wö->
_begx
, 
öp
);

22 
	`waddch
(
wö
, 
öp
);

24 i‡(
we£t
Ë
	`nocbªak
();

25  
öp
;

26 
	}
}

	@wgetstr.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

11 
	$wgë°r
(
wö
, 
°r
)

12 
WINDOW
 *
wö
;

13 *
°r
;

15 (*
°r
 = 
	`wgëch
(
wö
)Ë!
ERR
 && *str != '\n') str++;

16 i‡(*
°r
 =
ERR
) {

17 *
°r
 = '\0';

18  
ERR
;

20 *
°r
 = '\0';

21  
OK
;

22 
	}
}

	@windel.c

18 
	~<°dlib.h
>

19 
	~<cur£s.h
>

20 
	~"cur•riv.h
"

28 
	$dñwö
(
wö
)

29 
WINDOW
 *
wö
;

31 
i
;

33 i‡(!(
wö
->
_Êags
 & 
_SUBWIN
)) {

34 
i
 = 0; i <
wö
->
_maxy
 && wö->
_löe
[i]; i++)

35 
	`‰ì
(
wö
->
_löe
[
i
]);

37 
	`‰ì
(
wö
->
_möchng
);

38 
	`‰ì
(
wö
->
_maxchng
);

39 
	`‰ì
(
wö
->
_löe
);

40 
	`‰ì
(
wö
);

41 
	}
}

	@wini.c

8 
	~"kî√l.h
"

9 
	~"drivî.h
"

11 #i‡
ENABLE_WINI


14 
	shdm≠
 {

15 *
	m«me
;

16 
èsk_t
 *
	mèsk
;

17 } 
	ghdm≠
[] = {

19 #i‡
ENABLE_AT_WINI


20 { "©", 
©_wöche°î_èsk
 },

23 #i‡
ENABLE_BIOS_WINI


24 { "bios", 
bios_wöche°î_èsk
 },

27 #i‡
ENABLE_ESDI_WINI


28 { "esdi", 
esdi_wöche°î_èsk
 },

31 #i‡
ENABLE_XT_WINI


32 { "xt", 
xt_wöche°î_èsk
 },

41 
PUBLIC
 
	$wöche°î_èsk
()

44 *
hd
;

45 
hdm≠
 *
m≠
;

47 
hd
 = 
	`k_gëív
("hd");

49 
m≠
 = 
hdm≠
; map < hdmap + (hdmap)/(hdmap[0]); map++) {

50 i‡(
hd
 =
NULL
 || 
	`°rcmp
(hd, 
m≠
->
«me
) == 0) {

52 (*
m≠
->
èsk
)();

55 
	`∑nic
("nÿhd drivî", 
NO_NUM
);

56 
	}
}

	@winmove.c

18 
	~<cur£s.h
>

19 
	~"cur•riv.h
"

26 
	$mvwö
(
wö
, 
begy
, 
begx
)

27 
WINDOW
 *
wö
;

28 
begy
, 
begx
;

30 i‡((
begy
 + 
wö
->
_maxy
Ë> (
LINES
 - 1Ë|| (
begx
 + wö->
_maxx
Ë> (
COLS
 - 1))

31 (
ERR
);

32 
wö
->
_begy
 = 
begy
;

33 
wö
->
_begx
 = 
begx
;

34 
	`touchwö
(
wö
);

35 (
OK
);

36 
	}
}

	@winsch.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

8 
	$wösch
(
wö
, 
c
)

9 
WINDOW
 *
wö
;

10 
c
;

12 *
ãmp1
;

13 *
ãmp2
;

14 *
íd
;

15 
x
 = 
wö
->
_curx
;

16 
y
 = 
wö
->
_cury
;

17 
maxx
 = 
wö
->
_maxx
;

19 i‡((
c
 < ' ') && (c == '\n' || c == '\r' || c == '\t' || c == '\b'))

20 (
	`waddch
(
wö
, 
c
));

21 
íd
 = &
wö
->
_löe
[
y
][
x
];

22 
ãmp1
 = &
wö
->
_löe
[
y
][
maxx
];

23 
ãmp2
 = 
ãmp1
 - 1;

24 i‡(
c
 < ' ')

25 
ãmp2
--;

26 
ãmp1
 > 
íd
Ë*ãmp1-- = *
ãmp2
--;

27 
wö
->
_maxchng
[
y
] = 
maxx
;

28 i‡((
wö
->
_möchng
[
y
] =
_NO_CHANGE
Ë|| (wö->_möchng[y] > 
x
))

29 
wö
->
_möchng
[
y
] = 
x
;

30 (
	`waddch
(
wö
, 
c
));

31 
	}
}

	@winscrol.c

18 
	~<cur£s.h
>

19 
	~"cur•riv.h
"

27 
	$s¸ﬁl
(
wö
)

28 
WINDOW
 *
wö
;

30 
i
;

31 *
±r
;

32 *
ãmp
;

33 
bœnk
;

35 
bœnk
 = ' ' | (
wö
->
_©ås
 & 
ATR_MSK
);

36 i‡((!
wö
->
_s¸ﬁl
)

37 ||(
wö
->
_cury
 < wö->
_ªgt›
)

38 ||(
wö
->
_cury
 > wö->
_ªgbŸtom
)

42 
ãmp
 = 
wö
->
_löe
[wö->
_ªgt›
];

43 
i
 = 
wö
->
_ªgt›
; i < wö->
_ªgbŸtom
; i++) {

44 
wö
->
_löe
[
i
] = win->_line[i + 1];

45 
wö
->
_möchng
[
i
] = 0;

46 
wö
->
_maxchng
[
i
] = wö->
_maxx
;

48 
±r
 = 
ãmp
;Öå -Åem∞<
wö
->
_maxx
;Ötr++)

49 *
±r
 = 
bœnk
;

50 
wö
->
_löe
[wö->
_ªgbŸtom
] = 
ãmp
;

51 i‡(
wö
->
_cury
 > wö->
_ªgt›
)

52 
wö
->
_cury
--;

53 
wö
->
_möchng
[wö->
_ªgbŸtom
] = 0;

54 
wö
->
_maxchng
[wö->
_ªgbŸtom
] = wö->
_maxx
;

55 
	}
}

	@winsertln.c

1 
	~<cur£s.h
>

2 
	~"cur•riv.h
"

9 
	$wö£π 
(
wö
)

10 
WINDOW
 *
wö
;

12 *
ãmp
, *
íd
, 
y
, 
bœnk
;

14 
bœnk
 = ' ' | (
wö
->
_©ås
 & 
ATR_MSK
);

15 
ãmp
 = 
wö
->
_löe
[wö->
_ªgbŸtom
];

16 
y
 = 
wö
->
_ªgbŸtom
; y > wö->
_cury
; y--) {

17 
wö
->
_löe
[
y
] = win->_line[y - 1];

18 
wö
->
_möchng
[
y
] = 0;

19 
wö
->
_maxchng
[
y
] = wö->
_maxx
;

21 
wö
->
_löe
[wö->
_cury
] = 
ãmp
;

22 
íd
 = &
ãmp
[
wö
->
_maxx
];Åem∞<íd;Åemp++Ë*ãm∞
bœnk
;

23 
wö
->
_möchng
[wö->
_cury
] = 0;

24 
wö
->
_maxchng
[wö->
_cury
] = wö->
_maxx
;

25 (
OK
);

26 
	}
}

	@wintouch.c

18 
	~<cur£s.h
>

19 
	~"cur•riv.h
"

26 
	$touchwö
(
wö
)

27 
WINDOW
 *
wö
;

29 
y
;

30 
maxy
;

31 
maxx
;

33 
maxy
 = 
wö
->
_maxy
;

34 
maxx
 = 
wö
->
_maxx
;

36 
y
 = 0; y <
maxy
; y++) {

37 
wö
->
_möchng
[
y
] = 0;

38 
wö
->
_maxchng
[
y
] = 
maxx
;

40 
	}
}

	@write.c

10 
	~"fs.h
"

11 
	~<°rög.h
>

12 
	~"buf.h
"

13 
	~"fûe.h
"

14 
	~"Âroc.h
"

15 
	~"öode.h
"

16 
	~"su≥r.h
"

18 
FORWARD
 
_PROTOTYPE
–
wrôe_m≠
, (
öode
 *
rù
, 
off_t
 
posôi⁄
,

19 
z⁄e_t
 
√w_z⁄e
) );

21 
FORWARD
 
_PROTOTYPE
–
wr_ödú
, (
buf
 *
bp
, 
ödex
, 
z⁄e_t
 
z⁄e
) );

26 
PUBLIC
 
	$do_wrôe
()

30 (
	`ªad_wrôe
(
WRITING
));

31 
	}
}

37 
PRIVATE
 
	$wrôe_m≠
(
rù
, 
posôi⁄
, 
√w_z⁄e
)

38 
öode
 *
rù
;

39 
off_t
 
posôi⁄
;

40 
z⁄e_t
 
√w_z⁄e
;

43 
sˇÀ
, 
öd_ex
, 
√w_öd
, 
√w_dbl
, 
z⁄es
, 
ƒ_ödúe˘s
, 
sögÀ
, 
zödex
, 
ex
;

44 
z⁄e_t
 
z
, 
z1
;

45 
block_t
 
b
;

46 
ex˚ss
, 
z⁄e
;

47 
buf
 *
bp
;

49 
rù
->
i_dút
 = 
DIRTY
;

50 
bp
 = 
NIL_BUF
;

51 
sˇÀ
 = 
rù
->
i_•
->
s_log_z⁄e_size
;

52 
z⁄e
 = (
posôi⁄
/
BLOCK_SIZE
Ë>> 
sˇÀ
;

53 
z⁄es
 = 
rù
->
i_ndz⁄es
;

54 
ƒ_ödúe˘s
 = 
rù
->
i_nödús
;

57 i‡(
z⁄e
 < 
z⁄es
) {

58 
zödex
 = (Ë
z⁄e
;

59 
rù
->
i_z⁄e
[
zödex
] = 
√w_z⁄e
;

60 (
OK
);

64 
ex˚ss
 = 
z⁄e
 - 
z⁄es
;

65 
√w_öd
 = 
FALSE
;

66 
√w_dbl
 = 
FALSE
;

68 i‡(
ex˚ss
 < 
ƒ_ödúe˘s
) {

70 
z1
 = 
rù
->
i_z⁄e
[
z⁄es
];

71 
sögÀ
 = 
TRUE
;

74 i‡–(
z
 = 
rù
->
i_z⁄e
[
z⁄es
+1]Ë=
NO_ZONE
) {

76 i‡–(
z
 = 
	`Æloc_z⁄e
(
rù
->
i_dev
,Ñù->
i_z⁄e
[0])Ë=
NO_ZONE
)

77 (
îr_code
);

78 
rù
->
i_z⁄e
[
z⁄es
+1] = 
z
;

79 
√w_dbl
 = 
TRUE
;

83 
ex˚ss
 -
ƒ_ödúe˘s
;

84 
öd_ex
 = (Ë(
ex˚ss
 / 
ƒ_ödúe˘s
);

85 
ex˚ss
 =Éx˚s†% 
ƒ_ödúe˘s
;

86 i‡(
öd_ex
 >
ƒ_ödúe˘s
Ë(
EFBIG
);

87 
b
 = (
block_t
Ë
z
 << 
sˇÀ
;

88 
bp
 = 
	`gë_block
(
rù
->
i_dev
, 
b
, (
√w_dbl
 ? 
NO_READ
 : 
NORMAL
));

89 i‡(
√w_dbl
Ë
	`zîo_block
(
bp
);

90 
z1
 = 
	`rd_ödú
(
bp
, 
öd_ex
);

91 
sögÀ
 = 
FALSE
;

95 i‡(
z1
 =
NO_ZONE
) {

97 
z1
 = 
	`Æloc_z⁄e
(
rù
->
i_dev
,Ñù->
i_z⁄e
[0]);

98 i‡(
sögÀ
)

99 
rù
->
i_z⁄e
[
z⁄es
] = 
z1
;

101 
	`wr_ödú
(
bp
, 
öd_ex
, 
z1
);

103 
√w_öd
 = 
TRUE
;

104 i‡(
bp
 !
NIL_BUF
Ëbp->
b_dút
 = 
DIRTY
;

105 i‡(
z1
 =
NO_ZONE
) {

106 
	`put_block
(
bp
, 
INDIRECT_BLOCK
);

107 (
îr_code
);

110 
	`put_block
(
bp
, 
INDIRECT_BLOCK
);

113 
b
 = (
block_t
Ë
z1
 << 
sˇÀ
;

114 
bp
 = 
	`gë_block
(
rù
->
i_dev
, 
b
, (
√w_öd
 ? 
NO_READ
 : 
NORMAL
) );

115 i‡(
√w_öd
Ë
	`zîo_block
(
bp
);

116 
ex
 = (Ë
ex˚ss
;

117 
	`wr_ödú
(
bp
, 
ex
, 
√w_z⁄e
);

118 
bp
->
b_dút
 = 
DIRTY
;

119 
	`put_block
(
bp
, 
INDIRECT_BLOCK
);

121 (
OK
);

122 
	}
}

128 
PRIVATE
 
	$wr_ödú
(
bp
, 
ödex
, 
z⁄e
)

129 
buf
 *
bp
;

130 
ödex
;

131 
z⁄e_t
 
z⁄e
;

135 
su≥r_block
 *
•
;

137 
•
 = 
	`gë_su≥r
(
bp
->
b_dev
);

140 i‡(
•
->
s_vîsi⁄
 =
V1
)

141 
bp
->
b_v1_öd
[
ödex
] = (
z⁄e1_t
Ë
	`c⁄v2
(
•
->
s_«tive
, (Ë
z⁄e
);

143 
bp
->
b_v2_öd
[
ödex
] = (
z⁄e_t
Ë
	`c⁄v4
(
•
->
s_«tive
, (Ë
z⁄e
);

144 
	}
}

150 
PUBLIC
 
	$˛ór_z⁄e
(
rù
, 
pos
, 
Êag
)

151 
öode
 *
rù
;

152 
off_t
 
pos
;

153 
Êag
;

160 
buf
 *
bp
;

161 
block_t
 
b
, 
blo
, 
bhi
;

162 
off_t
 
√xt
;

163 
sˇÀ
;

164 
z⁄e_t
 
z⁄e_size
;

167 
sˇÀ
 = 
rù
->
i_•
->
s_log_z⁄e_size
;

168 i‡(
sˇÀ
 == 0) ;

170 
z⁄e_size
 = (
z⁄e_t
Ë
BLOCK_SIZE
 << 
sˇÀ
;

171 i‡(
Êag
 =1Ë
pos
 = (pos/
z⁄e_size
) * zone_size;

172 
√xt
 = 
pos
 + 
BLOCK_SIZE
 - 1;

175 i‡(
√xt
/
z⁄e_size
 !
pos
/zone_size) ;

176 i‡–(
blo
 = 
	`ªad_m≠
(
rù
, 
√xt
)Ë=
NO_BLOCK
) ;

177 
bhi
 = ( ((
blo
>>
sˇÀ
)+1) << scale) - 1;

180 
b
 = 
blo
; b <
bhi
; b++) {

181 
bp
 = 
	`gë_block
(
rù
->
i_dev
, 
b
, 
NO_READ
);

182 
	`zîo_block
(
bp
);

183 
	`put_block
(
bp
, 
FULL_DATA_BLOCK
);

185 
	}
}

191 
PUBLIC
 
buf
 *
	$√w_block
(
rù
, 
posôi⁄
)

192 
öode
 *
rù
;

193 
off_t
 
posôi⁄
;

200 
buf
 *
bp
;

201 
block_t
 
b
, 
ba£_block
;

202 
z⁄e_t
 
z
;

203 
z⁄e_t
 
z⁄e_size
;

204 
sˇÀ
, 
r
;

205 
su≥r_block
 *
•
;

208 i‡–(
b
 = 
	`ªad_m≠
(
rù
, 
posôi⁄
)Ë=
NO_BLOCK
) {

214 i‡(
rù
->
i_z⁄e
[0] =
NO_ZONE
) {

215 
•
 = 
rù
->
i_•
;

216 
z
 = 
•
->
s_fú°d©az⁄e
;

218 
z
 = 
rù
->
i_z⁄e
[0];

220 i‡–(
z
 = 
	`Æloc_z⁄e
(
rù
->
i_dev
, z)Ë=
NO_ZONE
Ë(
NIL_BUF
);

221 i‡–(
r
 = 
	`wrôe_m≠
(
rù
, 
posôi⁄
, 
z
)Ë!
OK
) {

222 
	`‰ì_z⁄e
(
rù
->
i_dev
, 
z
);

223 
îr_code
 = 
r
;

224 (
NIL_BUF
);

228 i‡–
posôi⁄
 !
rù
->
i_size
Ë
	`˛ór_z⁄e
(rip,Öosition, 1);

229 
sˇÀ
 = 
rù
->
i_•
->
s_log_z⁄e_size
;

230 
ba£_block
 = (
block_t
Ë
z
 << 
sˇÀ
;

231 
z⁄e_size
 = (
z⁄e_t
Ë
BLOCK_SIZE
 << 
sˇÀ
;

232 
b
 = 
ba£_block
 + (
block_t
)((
posôi⁄
 % 
z⁄e_size
)/
BLOCK_SIZE
);

235 
bp
 = 
	`gë_block
(
rù
->
i_dev
, 
b
, 
NO_READ
);

236 
	`zîo_block
(
bp
);

237 (
bp
);

238 
	}
}

244 
PUBLIC
 
	$zîo_block
(
bp
)

245 
buf
 *
bp
;

249 
	`mem£t
(
bp
->
b_d©a
, 0, 
BLOCK_SIZE
);

250 
bp
->
b_dút
 = 
DIRTY
;

251 
	}
}

	@xt_wini.c

17 
	~"kî√l.h
"

18 
	~"drivî.h
"

19 
	~"drvlib.h
"

21 #i‡
ENABLE_XT_WINI


24 
	#USE_BUF
 (
DMA_BUF_SIZE
 > 
BLOCK_SIZE
)

	)

27 
	#WIN_DATA
 0x320

	)

28 
	#WIN_STATUS
 0x321

	)

29 
	#WST_REQ
 0x001

	)

30 
	#WST_INPUT
 0x002

	)

31 
	#WST_BUS
 0x004

	)

32 
	#WST_BUSY
 0x008

	)

33 
	#WST_DRQ
 0x010

	)

34 
	#WST_IRQ
 0x020

	)

35 
	#WIN_SELECT
 0x322

	)

36 
	#WIN_DMA
 0x323

	)

37 
	#DMA_ADDR
 0x006

	)

38 
	#DMA_TOP
 0x082

	)

39 
	#DMA_COUNT
 0x007

	)

40 
	#DMA_FLIPFLOP
 0x00C

	)

41 
	#DMA_MODE
 0x00B

	)

42 
	#DMA_INIT
 0x00A

	)

45 
	#WIN_RECALIBRATE
 0x01

	)

46 
	#WIN_SENSE
 0x03

	)

47 
	#WIN_READ
 0x08

	)

48 
	#WIN_WRITE
 0x0®

	)

49 
	#WIN_SPECIFY
 0x0C

	)

50 
	#WIN_ECC_READ
 0x0D

	)

52 
	#DMA_INT
 3

	)

53 
	#INT
 2

	)

54 
	#NO_DMA_INT
 0

	)

57 
	#DMA_READ
 0x47

	)

58 
	#DMA_WRITE
 0x4B

	)

61 #i‚de‡
NR_SECTORS


67 
	#NR_SECTORS
 17

	)

71 
	#ERR
 (-1Ë

	)

72 
	#ERR_BAD_SECTOR
 (-2Ë

	)

75 
	#MAX_DRIVES
 2

	)

76 
	#MAX_ERRORS
 4

	)

77 
	#MAX_RESULTS
 4

	)

78 
	#NR_DEVICES
 (
MAX_DRIVES
 * 
DEV_PER_DRIVE
)

	)

79 
	#SUB_PER_DRIVE
 (
NR_PARTITIONS
 * NR_PARTITIONS)

	)

80 
	#NR_SUBDEVS
 (
MAX_DRIVES
 * 
SUB_PER_DRIVE
)

	)

81 
	#MAX_WIN_RETRY
 32000

	)

82 #i‡
AUTO_BIOS


83 
	#AUTO_PARAM
 0x1AD

	)

84 
	#AUTO_ENABLE
 0x10

	)

87 
	#AUTO_CYLS
 306

	)

88 
	#AUTO_HEADS
 4

	)

89 
	#AUTO_RWC
 307

	)

90 
	#AUTO_WPC
 307

	)

91 
	#AUTO_ECC
 11

	)

92 
	#AUTO_CTRL
 5

	)

96 
PRIVATE
 
	swöi
 {

97 
	mwn_cylödîs
;

98 
	mwn_hóds
;

99 
	mwn_ªdu˚d_wr
;

100 
	mwn_¥ecomp
;

101 
	mwn_max_ecc
;

102 
	mwn_˘lbyã
;

103 
	mwn_›í_˘
;

104 
devi˚
 
	mwn_∑π
[
DEV_PER_DRIVE
];

105 
devi˚
 
	mwn_sub∑π
[
SUB_PER_DRIVE
];

106 } 
	gwöi
[
MAX_DRIVES
], *
	gw_wn
;

108 
PRIVATE
 
	så™s
 {

109 
i‹eque°_s
 *
	må_i›
;

110 
	må_block
;

111 
	må_cou¡
;

112 
phys_byãs
 
	må_phys
;

113 
phys_byãs
 
	må_dma
;

114 } 
	gwå™s
[
NR_IOREQS
];

116 
PRIVATE
 
	gw_√ed_ª£t
 = 
FALSE
;

117 
PRIVATE
 
	gƒ_drives
;

118 
PRIVATE
 
	gw_swôches
;

119 
PRIVATE
 
å™s
 *
	gw_ç
;

120 
PRIVATE
 
	gw_cou¡
;

121 
PRIVATE
 
	gw_√xtblock
;

122 
PRIVATE
 
	gw_›code
;

123 
PRIVATE
 
	gw_drive
;

124 
PRIVATE
 
devi˚
 *
	gw_dv
;

125 
PRIVATE
 
	gw_ªsu…s
[
MAX_RESULTS
];

128 
FORWARD
 
_PROTOTYPE
–
devi˚
 *
w_¥ï¨e
, (device) );

129 
FORWARD
 
_PROTOTYPE
–*
w_«me
, () );

130 
FORWARD
 
_PROTOTYPE
–
w_scheduÀ
, (
¥oc_ƒ
, 
i‹eque°_s
 *
i›
) );

131 
FORWARD
 
_PROTOTYPE
–
w_föish
, () );

132 
FORWARD
 
_PROTOTYPE
–
w_dma_£tup
, (
å™s
 *
ç
, 
cou¡
) );

133 
FORWARD
 
_PROTOTYPE
–
w_å™s„r
, (
å™s
 *
ç
, 
cou¡
) );

134 
FORWARD
 
_PROTOTYPE
–
wö_ªsu…s
, () );

135 
FORWARD
 
_PROTOTYPE
–
wö_out
, (
vÆ
) );

136 
FORWARD
 
_PROTOTYPE
–
w_ª£t
, () );

137 
FORWARD
 
_PROTOTYPE
–
w_h™dÀr
, (
úq
) );

138 
FORWARD
 
_PROTOTYPE
–
wö_•ecify
, (
drive
) );

139 
FORWARD
 
_PROTOTYPE
–
check_öô
, () );

140 
FORWARD
 
_PROTOTYPE
–
ªad_ecc
, () );

141 
FORWARD
 
_PROTOTYPE
–
hd_waô
, (
bôs
) );

142 
FORWARD
 
_PROTOTYPE
–
com_out
, (
mode
, 
u8_t
 *
comm™d
) );

143 
FORWARD
 
_PROTOTYPE
–
öô_∑øms
, () );

144 
FORWARD
 
_PROTOTYPE
–
w_do_›í
, (
drivî
 *
dp
, 
mesßge
 *
m_±r
) );

145 
FORWARD
 
_PROTOTYPE
–
w_do_˛o£
, (
drivî
 *
dp
, 
mesßge
 *
m_±r
) );

146 
FORWARD
 
_PROTOTYPE
–
w_öô
, () );

147 
FORWARD
 
_PROTOTYPE
–
c›y_∑øm
, (*
§c
, 
wöi
 *
de°
) );

148 
FORWARD
 
_PROTOTYPE
–
w_geomëry
, (
∑πôi⁄
 *
íåy
));

152 
PRIVATE
 
drivî
 
	gw_dèb
 = {

153 
w_«me
,

154 
w_do_›í
,

155 
w_do_˛o£
,

156 
do_dio˙é
,

157 
w_¥ï¨e
,

158 
w_scheduÀ
,

159 
w_föish
,

160 
n›_˛ónup
,

161 
w_geomëry


168 
PUBLIC
 
	$xt_wöche°î_èsk
()

170 
	`öô_∑øms
();

172 
	`put_úq_h™dÀr
(
XT_WINI_IRQ
, 
w_h™dÀr
);

173 
	`íabÀ_úq
(
XT_WINI_IRQ
);

175 
	`drivî_èsk
(&
w_dèb
);

176 
	}
}

182 
PRIVATE
 
devi˚
 *
	$w_¥ï¨e
(
devi˚
)

183 
devi˚
;

188 
w_cou¡
 = 0;

190 i‡(
devi˚
 < 
NR_DEVICES
) {

191 
w_drive
 = 
devi˚
 / 
DEV_PER_DRIVE
;

192 
w_wn
 = &
wöi
[
w_drive
];

193 
w_dv
 = &
w_wn
->
wn_∑π
[
devi˚
 % 
DEV_PER_DRIVE
];

195 i‡((Ë(
devi˚
 -
MINOR_hd1a
Ë< 
NR_SUBDEVS
) {

196 
w_drive
 = 
devi˚
 / 
SUB_PER_DRIVE
;

197 
w_wn
 = &
wöi
[
w_drive
];

198 
w_dv
 = &
w_wn
->
wn_sub∑π
[
devi˚
 % 
SUB_PER_DRIVE
];

200 (
NIL_DEV
);

202 (
w_drive
 < 
ƒ_drives
 ? 
w_dv
 : 
NIL_DEV
);

203 
	}
}

209 
PRIVATE
 *
	$w_«me
()

212 
«me
[] = "xt-hd5";

214 
«me
[5] = '0' + 
w_drive
 * 
DEV_PER_DRIVE
;

215  
«me
;

216 
	}
}

222 
PRIVATE
 
	$w_scheduÀ
(
¥oc_ƒ
, 
i›
)

223 
¥oc_ƒ
;

224 
i‹eque°_s
 *
i›
;

230 
r
, 
›code
;

231 
pos
;

232 
nbyãs
, 
cou¡
, 
dma_cou¡
;

233 
block
;

234 
phys_byãs
 
u£r_phys
, 
dma_phys
;

237 
nbyãs
 = 
i›
->
io_nbyãs
;

238 i‡((
nbyãs
 & 
SECTOR_MASK
Ë!0Ë(
i›
->
io_nbyãs
 = 
EINVAL
);

241 
pos
 = 
i›
->
io_posôi⁄
;

242 i‡((
pos
 & 
SECTOR_MASK
Ë!0Ë(
i›
->
io_nbyãs
 = 
EINVAL
);

245 
u£r_phys
 = 
	`num≠
(
¥oc_ƒ
, (
vú_byãs
Ë
i›
->
io_buf
, 
nbyãs
);

246 i‡(
u£r_phys
 =0Ë(
i›
->
io_nbyãs
 = 
EINVAL
);

249 
›code
 = 
i›
->
io_ªque°
 & ~
OPTIONAL_IO
;

252 i‡(
pos
 >
w_dv
->
dv_size
Ë(
OK
);

253 i‡(
pos
 + 
nbyãs
 > 
w_dv
->
dv_size
)Çbytes = w_dv->dv_size -Öos;

254 
block
 = (
w_dv
->
dv_ba£
 + 
pos
Ë>> 
SECTOR_SHIFT
;

256 i‡(
USE_BUF
 && 
w_cou¡
 > 0 && 
block
 !
w_√xtblock
) {

258 i‡((
r
 = 
	`w_föish
()Ë!
OK
) (r);

262 i‡(
USE_BUF
Ë
w_√xtblock
 = 
block
 + (
nbyãs
 >> 
SECTOR_SHIFT
);

266 
cou¡
 = 
nbyãs
;

268 i‡(
USE_BUF
) {

269 i‡(
w_cou¡
 =
DMA_BUF_SIZE
) {

271 i‡((
r
 = 
	`w_föish
()Ë!
OK
) (r);

274 i‡(
w_cou¡
 + 
cou¡
 > 
DMA_BUF_SIZE
)

275 
cou¡
 = 
DMA_BUF_SIZE
 - 
w_cou¡
;

277 i‡(
w_ç
 =
wå™s
 + 
NR_IOREQS
) {

279 i‡((
r
 = 
	`w_föish
()Ë!
OK
) (r);

283 i‡(
w_cou¡
 == 0) {

285 
w_›code
 = 
›code
;

286 
w_ç
 = 
wå™s
;

289 i‡(
USE_BUF
) {

290 
dma_phys
 = 
tmp_phys
 + 
w_cou¡
;

293 
dma_phys
 = 
u£r_phys
;

294 
dma_cou¡
 = 
	`dma_byãs_À·
(
dma_phys
);

296 i‡(
dma_cou¡
 < 
cou¡
) {

298 i‡(
dma_cou¡
 >
SECTOR_SIZE
) {

302 
cou¡
 = 
dma_cou¡
 & ~
SECTOR_MASK
;

305 
cou¡
 = 
SECTOR_SIZE
;

306 
dma_phys
 = 
tmp_phys
;

312 
w_ç
->
å_i›
 = 
i›
;

313 
w_ç
->
å_block
 = 
block
;

314 
w_ç
->
å_cou¡
 = 
cou¡
;

315 
w_ç
->
å_phys
 = 
u£r_phys
;

316 
w_ç
->
å_dma
 = 
dma_phys
;

319 
w_ç
++;

320 
w_cou¡
 +
cou¡
;

321 
block
 +
cou¡
 >> 
SECTOR_SHIFT
;

322 
u£r_phys
 +
cou¡
;

323 
nbyãs
 -
cou¡
;

324 } 
nbyãs
 > 0);

326 (
OK
);

327 
	}
}

333 
PRIVATE
 
	$w_föish
()

337 
å™s
 *
ç
 = 
wå™s
, *
ç2
;

338 
cou¡
;

339 
r
, 
îr‹s
 = 0, 
m™y
 = 
USE_BUF
;

341 i‡(
w_cou¡
 =0Ë(
OK
);

344 i‡(
w_›code
 =
DEV_WRITE
) {

345 
ç2
 = 
ç
;

346 
cou¡
 = 0;

348 i‡(
USE_BUF
 || 
ç2
->
å_dma
 =
tmp_phys
) {

349 
	`phys_c›y
(
ç2
->
å_phys
,Åp2->
å_dma
,

350 (
phys_byãs
Ë
ç2
->
å_cou¡
);

352 
cou¡
 +
ç2
->
å_cou¡
;

353 
ç2
++;

354 } 
m™y
 && 
cou¡
 < 
w_cou¡
);

356 
cou¡
 = 
m™y
 ? 
w_cou¡
 : 
ç
->
å_cou¡
;

360 i‡(
w_√ed_ª£t
Ë
	`w_ª£t
();

363 
	`w_dma_£tup
(
ç
, 
cou¡
);

366 
r
 = 
	`w_å™s„r
(
ç
, 
cou¡
);

368 i‡(
r
 !
OK
) {

370 i‡(
r
 =
ERR_BAD_SECTOR
 || ++
îr‹s
 =
MAX_ERRORS
)

371 (
ç
->
å_i›
->
io_nbyãs
 = 
EIO
);

374 i‡(
îr‹s
 =
MAX_ERRORS
 / 2) {

375 
w_√ed_ª£t
 = 
TRUE
;

376 i‡(
ç
->
å_i›
->
io_ªque°
 & 
OPTIONAL_IO
)

377 (
ç
->
å_i›
->
io_nbyãs
 = 
EIO
);

379 
m™y
 = 0;

382 
îr‹s
 = 0;

384 
w_cou¡
 -
cou¡
;

387 i‡(
w_›code
 =
DEV_READ
) {

388 i‡(
USE_BUF
 || 
ç
->
å_dma
 =
tmp_phys
) {

389 
	`phys_c›y
(
ç
->
å_dma
,Åp->
å_phys
,

390 (
phys_byãs
Ë
ç
->
å_cou¡
);

393 
ç
->
å_i›
->
io_nbyãs
 -ç->
å_cou¡
;

394 
cou¡
 -
ç
->
å_cou¡
;

395 
ç
++;

396 } 
cou¡
 > 0);

397 } 
w_cou¡
 > 0);

399 (
OK
);

400 
	}
}

406 
PRIVATE
 
	$w_dma_£tup
(
ç
, 
cou¡
)

407 
å™s
 *
ç
;

408 
cou¡
;

419 
	`out_byã
(
DMA_FLIPFLOP
, 0);

420 
	`out_byã
(
DMA_MODE
, 
w_›code
 =
DEV_WRITE
 ? 
DMA_WRITE
 : 
DMA_READ
);

421 
	`out_byã
(
DMA_ADDR
, (Ë
ç
->
å_dma
 >> 0);

422 
	`out_byã
(
DMA_ADDR
, (Ë
ç
->
å_dma
 >> 8);

423 
	`out_byã
(
DMA_TOP
, (Ë(
ç
->
å_dma
 >> 16));

424 
	`out_byã
(
DMA_COUNT
, (
cou¡
 - 1) >> 0);

425 
	`out_byã
(
DMA_COUNT
, (
cou¡
 - 1) >> 8);

426 
	}
}

432 
PRIVATE
 
	$w_å™s„r
(
ç
, 
cou¡
)

433 
å™s
 *
ç
;

434 
cou¡
;

438 
cylödî
, 
£˘‹
, 
hód
, 
£c•cyl
 = 
w_wn
->
wn_hóds
 * 
NR_SECTORS
;

439 
u8_t
 
comm™d
[6];

440 
mesßge
 
mess
;

442 
cylödî
 = 
ç
->
å_block
 / 
£c•cyl
;

443 
hód
 = (
ç
->
å_block
 % 
£c•cyl
Ë/ 
NR_SECTORS
;

444 
£˘‹
 = 
ç
->
å_block
 % 
NR_SECTORS
;

447 
comm™d
[0] = 
w_›code
 =
DEV_WRITE
 ? 
WIN_WRITE
 : 
WIN_READ
;

448 
comm™d
[1] = 
hód
 | (
w_drive
 << 5);

449 
comm™d
[2] = ((
cylödî
 & 0x0300Ë>> 2Ë| 
£˘‹
;

450 
comm™d
[3] = 
cylödî
 & 0xFF;

451 
comm™d
[4] = 
cou¡
 >> 
SECTOR_SHIFT
;

452 
comm™d
[5] = 
w_wn
->
wn_˘lbyã
;

454 i‡(
	`com_out
(
DMA_INT
, 
comm™d
Ë!
OK
)

455 (
ERR
);

457 
	`out_byã
(
DMA_INIT
, 3);

460 
	`ª˚ive
(
HARDWARE
, &
mess
);

463 i‡(
	`wö_ªsu…s
(Ë=
OK
)

464 (
OK
);

465 i‡((
w_ªsu…s
[0] & 63) == 24)

466 
	`ªad_ecc
();

468 
w_√ed_ª£t
 = 
TRUE
;

469 (
ERR
);

470 
	}
}

476 
PRIVATE
 
	$wö_ªsu…s
()

480 
i
, 
°©us
;

481 
u8_t
 
comm™d
[6];

483 
°©us
 = 
	`ö_byã
(
WIN_DATA
);

484 
	`out_byã
(
WIN_DMA
, 0);

485 i‡(!(
°©us
 & 2))

486 (
OK
);

487 
comm™d
[0] = 
WIN_SENSE
;

488 
comm™d
[1] = 
w_drive
 << 5;

489 i‡(
	`com_out
(
NO_DMA_INT
, 
comm™d
Ë!
OK
)

490 (
ERR
);

493 
i
 = 0; i < 
MAX_RESULTS
; i++) {

494 i‡(
	`hd_waô
(
WST_REQ
Ë!
OK
)

495 (
ERR
);

496 
°©us
 = 
	`ö_byã
(
WIN_DATA
);

497 
w_ªsu…s
[
i
] = 
°©us
 & 
BYTE
;

499 i‡(
	`hd_waô
(
WST_REQ
Ë!
OK
)

500  (
ERR
);

502 
°©us
 = 
	`ö_byã
(
WIN_DATA
);

504 i‡(((
°©us
 & 2Ë!0Ë|| (
w_ªsu…s
[0] & 0x3F)) {

505 (
ERR
);

507 (
OK
);

508 
	}
}

514 
PRIVATE
 
	$wö_out
(
vÆ
)

515 
vÆ
;

521 
r
;

523 i‡(
w_√ed_ª£t
) ;

526 
r
 = 
	`ö_byã
(
WIN_STATUS
);

527 } (
r
 & (
WST_REQ
 | 
WST_BUSY
)) == WST_BUSY);

529 
	`out_byã
(
WIN_DATA
, 
vÆ
);

530 
	}
}

536 
PRIVATE
 
	$w_ª£t
()

542 
r
, 
i
, 
drive
;

543 
u8_t
 
comm™d
[6];

544 
mesßge
 
mess
;

547 
	`out_byã
(
WIN_STATUS
, 0);

549 
	`mûli_dñay
(5);

551 
	`out_byã
(
WIN_SELECT
, 0);

552 
i
 = 0; i < 
MAX_WIN_RETRY
; i++) {

553 
r
 = 
	`ö_byã
(
WIN_STATUS
);

554 i‡(
r
 & (
WST_DRQ
 | 
WST_IRQ
))

555 (
ERR
);

557 i‡((
r
 & (
WST_BUSY
 | 
WST_BUS
 | 
WST_REQ
)) ==

558 (
WST_BUSY
 | 
WST_BUS
 | 
WST_REQ
))

562 i‡(
i
 =
MAX_WIN_RETRY
) {

563 
	`¥ötf
("%s:Ñe£àÁûed, sètu†%x\n", 
	`w_«me
(), 
r
);

564 (
ERR
);

568 
w_√ed_ª£t
 = 
FALSE
;

570 
drive
 = 0; drivê< 
ƒ_drives
; drive++) {

571 i‡(
	`wö_•ecify
(
drive
Ë!
OK
)

572  (
ERR
);

574 
comm™d
[0] = 
WIN_RECALIBRATE
;

575 
comm™d
[1] = 
drive
 << 5;

576 
comm™d
[5] = 
wöi
[
drive
].
wn_˘lbyã
;

578 i‡(
	`com_out
(
INT
, 
comm™d
Ë!
OK
)

579 (
ERR
);

581 
	`ª˚ive
(
HARDWARE
, &
mess
);

583 i‡(
	`wö_ªsu…s
(Ë!
OK
) {

585 
ƒ_drives
 = 
drive
;

588 (
ƒ_drives
 > 0 ? 
OK
 : 
ERR
);

589 
	}
}

595 
PRIVATE
 
	$w_h™dÀr
(
úq
)

596 
úq
;

600 
r
, 
i
;

602 
	`out_byã
(
DMA_INIT
, 0x07);

604 
i
 = 0; i < 
MAX_WIN_RETRY
; ++i) {

605 
r
 = 
	`ö_byã
(
WIN_STATUS
);

606 i‡(
r
 & 
WST_IRQ
)

610 
	`öãºu±
(
WINCHESTER
);

612 
	}
}

618 
PRIVATE
 
	$wö_•ecify
(
drive
)

619 
drive
;

621 
wöi
 *
wn
 = &wöi[
drive
];

622 
u8_t
 
comm™d
[6];

624 
comm™d
[0] = 
WIN_SPECIFY
;

625 
comm™d
[1] = 
drive
 << 5;

627 i‡(
	`com_out
(
NO_DMA_INT
, 
comm™d
Ë!
OK
)

628 (
ERR
);

631 
	`wö_out
(
wn
->
wn_cylödîs
 >> 8);

634 
	`wö_out
(
wn
->
wn_cylödîs
);

637 
	`wö_out
(
wn
->
wn_hóds
);

640 
	`wö_out
(
wn
->
wn_ªdu˚d_wr
 >> 8);

643 
	`wö_out
(
wn
->
wn_ªdu˚d_wr
);

646 
	`wö_out
(
wn
->
wn_¥ecomp
 >> 8);

649 
	`wö_out
(
wn
->
wn_¥ecomp
);

652 
	`wö_out
(
wn
->
wn_max_ecc
);

654 i‡(
	`check_öô
(Ë!
OK
) {

655 
w_√ed_ª£t
 = 
TRUE
;

656 (
ERR
);

658 (
OK
);

659 
	}
}

665 
PRIVATE
 
	$check_öô
()

668 
r
, 
s
;

670 i‡(
	`hd_waô
(
WST_REQ
 | 
WST_INPUT
Ë=
OK
) {

671 
r
 = 
	`ö_byã
(
WIN_DATA
);

674 
s
 = 
	`ö_byã
(
WIN_STATUS
);

675 } 
s
 & 
WST_BUSY
);

677 i‡(
r
 & 2)

678 (
ERR
);

680 (
OK
);

682  (
ERR
);

683 
	}
}

689 
PRIVATE
 
	$ªad_ecc
()

693 
r
;

694 
u8_t
 
comm™d
[6];

696 
comm™d
[0] = 
WIN_ECC_READ
;

697 i‡(
	`com_out
(
NO_DMA_INT
, 
comm™d
Ë=
OK
 && 
	`hd_waô
(
WST_REQ
) == OK) {

698 
r
 = 
	`ö_byã
(
WIN_DATA
);

699 i‡(
	`hd_waô
(
WST_REQ
Ë=
OK
) {

700 
r
 = 
	`ö_byã
(
WIN_DATA
);

701 i‡(
r
 & 1)

702 
w_√ed_ª£t
 = 
TRUE
;

705 (
ERR
);

706 
	}
}

712 
PRIVATE
 
	$hd_waô
(
bôs
)

713 
bôs
;

717 
r
, 
i
 = 0;

720 
r
 = 
	`ö_byã
(
WIN_STATUS
Ë& 
bôs
;

721 } (
i
++ < 
MAX_WIN_RETRY
Ë&& 
r
 !
bôs
);

723 i‡(
i
 >
MAX_WIN_RETRY
) {

724 
w_√ed_ª£t
 = 
TRUE
;

725 (
ERR
);

727 (
OK
);

728 
	}
}

734 
PRIVATE
 
	$com_out
(
mode
, 
comm™dp
)

735 
mode
;

736 
u8_t
 *
comm™dp
;

740 
i
, 
r
;

742 
	`out_byã
(
WIN_DMA
, 
mode
);

743 
	`out_byã
(
WIN_SELECT
, 
mode
);

744 
i
 = 0; i < 
MAX_WIN_RETRY
; i++) {

745 
r
 = 
	`ö_byã
(
WIN_STATUS
);

746 i‡(
r
 & 
WST_BUSY
)

750 i‡(
i
 =
MAX_WIN_RETRY
) {

751 
w_√ed_ª£t
 = 
TRUE
;

752 (
ERR
);

756 
i
 = 0; i < 6; i++) {

757 i‡(
	`hd_waô
(
WST_REQ
Ë!
OK
)

760 
r
 = 
	`ö_byã
(
WIN_STATUS
);

762 i‡((
r
 & (
WST_BUSY
 | 
WST_BUS
 | 
WST_INPUT
)) !=

763 (
WST_BUSY
 | 
WST_BUS
))

766 
	`out_byã
(
WIN_DATA
, 
comm™dp
[
i
]);

769 i‡(
i
 != 6)

770 (
ERR
);

772 (
OK
);

773 
	}
}

779 
PRIVATE
 
	$öô_∑øms
()

784 
u16_t
 
∑rv
[2];

785 
drive
;

786 
dty≥
;

787 
phys_byãs
 
addªss
, 
buf_phys
;

788 
buf
[16];

791 
buf_phys
 = 
	`vú2phys
(
buf
);

792 
	`phys_c›y
(0x475L, 
buf_phys
, 1L);

793 
ƒ_drives
 = 
buf
[0] & 0xFF;

794 i‡(
ƒ_drives
 > 
MAX_DRIVES
)Çr_drives = MAX_DRIVES;

797 
w_swôches
 = 
	`ö_byã
(
WIN_SELECT
);

799 #i‡
AUTO_BIOS


801 i‡(!(
w_swôches
 & 
AUTO_ENABLE
)) {

803 
drive
 = 0; drivê< 
ƒ_drives
; drive++) {

805 
dty≥
 = (
w_swôches
 >> (2 * 
drive
)) & 03;

808 
	`phys_c›y
(
WINI_0_PARM_VEC
 * 4L, 
	`vú2phys
(
∑rv
), 4L);

811 
addªss
 = 
	`h˛ick_to_physb
(
∑rv
[1]Ë+Ö¨v[0] + 16 * 
dty≥
;

812 
	`phys_c›y
(
addªss
, 
buf_phys
, 16L);

815 
	`c›y_∑øm
(
buf
, &
wöi
[
drive
]);

817 #i‡
AUTO_BIOS


820 
	}
}

826 
PRIVATE
 
	$w_do_›í
(
dp
, 
m_±r
)

827 
drivî
 *
dp
;

828 
mesßge
 *
m_±r
;

832 
öô_d⁄e
 = 
FALSE
;

834 i‡(!
öô_d⁄e
Ë{ 
	`w_öô
(); inô_d⁄ê
TRUE
; }

836 i‡(
	`w_¥ï¨e
(
m_±r
->
DEVICE
Ë=
NIL_DEV
Ë(
ENXIO
);

838 i‡(
w_wn
->
wn_›í_˘
++ == 0) {

840 
	`∑πôi⁄
(&
w_dèb
, 
w_drive
 * 
DEV_PER_DRIVE
, 
P_PRIMARY
);

842 (
OK
);

843 
	}
}

849 
PRIVATE
 
	$w_do_˛o£
(
dp
, 
m_±r
)

850 
drivî
 *
dp
;

851 
mesßge
 *
m_±r
;

855 i‡(
	`w_¥ï¨e
(
m_±r
->
DEVICE
Ë=
NIL_DEV
Ë(
ENXIO
);

856 
w_wn
->
wn_›í_˘
--;

857 (
OK
);

858 
	}
}

864 
PRIVATE
 
	$w_öô
()

868 
drive
;

869 
wöi
 *
wn
;

870 #i‡
AUTO_BIOS


871 
mesßge
 
mess
;

873 
drive
 = 0; drivê< 
ƒ_drives
; drive++) {

877 i‡(
w_swôches
 & 
AUTO_ENABLE
) {

883 
wn
 = &
wöi
[
drive
];

884 
wn
->
wn_cylödîs
 = 
AUTO_CYLS
;

885 
wn
->
wn_hóds
 = 
AUTO_HEADS
;

886 
wn
->
wn_ªdu˚d_wr
 = 
AUTO_RWC
;

887 
wn
->
wn_¥ecomp
 = 
AUTO_WPC
;

888 
wn
->
wn_max_ecc
 = 
AUTO_ECC
;

889 
wn
->
wn_˘lbyã
 = 
AUTO_CTRL
;

890 
wn
->
wn_∑π
[0].
dv_size
 = 
SECTOR_SIZE
;

895 i‡(
ƒ_drives
 > 0 && 
	`w_ª£t
(Ë!
OK
)Çr_drives = 0;

897 
drive
 = 0; drivê< 
ƒ_drives
; drive++) {

898 i‡(
w_swôches
 & 
AUTO_ENABLE
) {

900 
mess
.
DEVICE
 = 
drive
 * 
DEV_PER_DRIVE
;

901 
mess
.
POSITION
 = 0L;

902 
mess
.
COUNT
 = 
SECTOR_SIZE
;

903 
mess
.
ADDRESS
 = (*Ë
tmp_buf
;

904 
mess
.
PROC_NR
 = 
WINCHESTER
;

905 
mess
.
m_ty≥
 = 
DEV_READ
;

906 i‡(
	`do_rdwt
(&
w_dèb
, &
mess
Ë!
SECTOR_SIZE
) {

907 
	`¥ötf
("%s: c™'àªadÖ¨amëîs\n", 
	`w_«me
());

908 
ƒ_drives
 = 
drive
;

913 
	`c›y_∑øm
(&
tmp_buf
[
AUTO_PARAM
], &
wöi
[
drive
]);

918 i‡(
ƒ_drives
 > 0 && 
	`w_ª£t
(Ë!
OK
)Çr_drives = 0;

921 
drive
 = 0; drivê< 
ƒ_drives
; drive++) {

922 (Ë
	`w_¥ï¨e
(
drive
 * 
DEV_PER_DRIVE
);

923 
wn
 = 
w_wn
;

924 
wn
->
wn_∑π
[0].
dv_size
 = ((Ëwn->
wn_cylödîs
 *

925 
wn
->
wn_hóds
 * 
NR_SECTORS
Ë<< 
SECTOR_SHIFT
;

926 
	`¥ötf
("%s: %d cylinders, %d heads, %d sectorsÖerÅrack\n",

927 
	`w_«me
(), 
wn
->
wn_cylödîs
, wn->
wn_hóds
, 
NR_SECTORS
);

929 
	}
}

935 
PRIVATE
 
	$c›y_∑øm
(
§c
, 
de°
)

936 *
§c
;

937 
wöi
 *
de°
;

941 
de°
->
wn_cylödîs
 = 
	`bp_cylödîs
(
§c
);

942 
de°
->
wn_hóds
 = 
	`bp_hóds
(
§c
);

943 
de°
->
wn_ªdu˚d_wr
 = 
	`bp_ªdu˚d_wr
(
§c
);

944 
de°
->
wn_¥ecomp
 = 
	`bp_¥ecomp
(
§c
);

945 
de°
->
wn_max_ecc
 = 
	`bp_max_ecc
(
§c
);

946 
de°
->
wn_˘lbyã
 = 
	`bp_˘lbyã
(
§c
);

947 
	}
}

953 
PRIVATE
 
	$w_geomëry
(
íåy
)

954 
∑πôi⁄
 *
íåy
;

956 
íåy
->
cylödîs
 = 
w_wn
->
wn_cylödîs
;

957 
íåy
->
hóds
 = 
w_wn
->
wn_hóds
;

958 
íåy
->
£˘‹s
 = 
NR_SECTORS
;

959 
	}
}

	@yyerror.c

34 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

35 
	gsccsid
[] = "@(#)yyerror.c 5.2 (Berkeley) 5/15/90";

38 
	~<°dio.h
>

40 
	$yyîr‹
(
msg
)

41 *
msg
;

43 ()
	`Ârötf
(
°dîr
, "%s\n", 
msg
);

45 
	}
}

	@zrf4.c

12 
	~"FP_ty≥s.h
"

15 
	$zrf4
(
l
)

16 
SINGLE
 *
l
;

18 *
l
 = 0L;

19 
	}
}

	@zrf8.c

12 
	~"FP_ty≥s.h
"

15 
	$zrf8
(
z
)

16 
DOUBLE
 *
z
;

19 
z
->
d
[0] = 0L;

20 
z
->
d
[1] = 0L;

21 
	}
}

	@zrf_ext.c

12 
	~"FP_ty≥s.h
"

15 
	$zrf_ext
(
e
)

16 
EXTEND
 *
e
;

18 
e
->
m1
 = 0;

19 
e
->
m2
 = 0;

20 
e
->
exp
 = 0;

21 
e
->
sign
 = 0;

22 
	}
}

	@
1
.
0
601
5513
FP_bias.h
FP_shift.h
FP_trap.h
FP_types.h
__exit.c
_access.c
_alarm.c
_brk.c
_cfgetispeed.c
_cfgetospeed.c
_cfsetispeed.c
_cfsetospeed.c
_chdir.c
_chmod.c
_chown.c
_chroot.c
_close.c
_closedir.c
_creat.c
_dup.c
_dup2.c
_exec.c
_execn.c
_fcntl.c
_fork.c
_fpathconf.c
_fstat.c
_getcwd.c
_getegid.c
_geteuid.c
_getgid.c
_getgroups.c
_getpgrp.c
_getpid.c
_getppid.c
_getuid.c
_ioctl.c
_isatty.c
_kill.c
_link.c
_longjerr.c
_lseek.c
_mkdir.c
_mkfifo.c
_mknod.c
_mktemp.c
_mount.c
_open.c
_opendir.c
_pathconf.c
_pause.c
_pipe.c
_ptrace.c
_read.c
_readdir.c
_reboot.c
_rename.c
_rewinddir.c
_rmdir.c
_seekdir.c
_setgid.c
_setsid.c
_setuid.c
_sigaction.c
_sigpending.c
_sigprocmask.c
_sigreturn.c
_sigset.c
_sigsetjmp.c
_sigsuspend.c
_sleep.c
_stat.c
_stime.c
_sync.c
_tcdrain.c
_tcflow.c
_tcflush.c
_tcgetattr.c
_tcsendbreak.c
_tcsetattr.c
_time.c
_times.c
_umask.c
_umount.c
_uname.c
_unlink.c
_utime.c
_wait.c
_waitpid.c
_write.c
abort.c
abs.c
add_ext.c
adder.c
adder.h
adf4.c
adf8.c
aha_scsi.c
alloc.c
arp.c
arp.h
asctime.c
asin.c
assert.c
assert.h
asynchio.c
at_wini.c
atan.c
atan2.c
atexit.c
atof.c
atoi.c
atol.c
bcmp.c
bcopy.c
beep.c
bios_wini.c
boot.c
boot.h
bootimage.c
break.c
bsearch.c
buf.c
buf.h
byte_order.h
bzero.c
cache.c
cache2.c
calloc.c
ceil.c
cff4.c
cff8.c
cfi.c
cfu.c
charpick.c
chartab.c
cif4.c
cif8.c
clearerr.c
clock.c
clock.h
cmf4.c
cmf8.c
common.c
compact.c
complete.c
config.h
console.c
const.h
crypt.c
ctermid.c
ctime.c
cuf4.c
cuf8.c
curs_set.c
cursesio.c
curspriv.h
cuserid.c
data.c
dev.h
device.c
difftime.c
div.c
div_ext.c
dmp.c
domainname.c
doprnt.c
doscan.c
dp8390.c
dp8390.h
driver.c
driver.h
drvlib.c
drvlib.h
dvf4.c
dvf8.c
ecvt.c
editline.c
editline.h
edparams.c
em_abs.h
endwin.c
environ.c
errlist.c
errno.c
esdi_wini.c
eth.c
eth.h
eth_int.h
ether.h
ether_line.c
ethera2n.c
ethere2a.c
etherh2n.c
ethern2h.c
exception.c
exec.c
execlp.c
exit.c
exp.c
ext_comp.c
ext_fmt.h
extend.c
fabs.c
fclose.c
fdopen.c
fef4.c
fef8.c
feof.c
ferror.c
fflush.c
ffs.c
fgetc.c
fgetpos.c
fgets.c
fif4.c
fif8.c
file.h
filedes.c
fileno.c
fillbuf.c
flash.c
floor.c
floppy.c
fltpr.c
flushbuf.c
fmod.c
fopen.c
forkexit.c
fphook.c
fprintf.c
fproc.h
fputc.c
fputs.c
fread.c
freopen.c
fs.h
fscanf.c
fseek.c
fsetpos.c
fslib.c
fsversion.c
ftell.c
fwrite.c
genmap.c
get_put.h
getc.c
getchar.c
getdomain.c
getenv.c
getgrent.c
gethnmadr.c
gethostent.c
gethostname.c
getlogin.c
getopt.c
getpass.c
getproto.c
getprotoent.c
getpwent.c
gets.c
getservent.c
getset.c
getsrvbyname.c
getsrvbyport.c
getttyent.c
getw.c
glo.h
gmtime.c
hton.c
hugeval.c
hypot.c
i8259.c
icmp.c
icmp.h
icmp_lib.h
icompute.c
image.h
index.c
inet.c
inet.h
inet_addr.c
inet_ntoa.c
init.c
initscr.c
inode.c
inode.h
installboot.c
io.c
io.h
ip.c
ip.h
ip_int.h
ip_ioctl.c
ip_lib.c
ip_read.c
ip_write.c
ipr.c
ipr.h
isalnum.c
isalpha.c
isascii.c
iscntrl.c
isdigit.c
isgraph.c
islower.c
isnan.c
isprint.c
ispunct.c
isspace.c
isupper.c
isxdigit.c
itoa.c
kernel.h
keyboard.c
labs.c
ldexp.c
ldiv.c
link.c
loadname.c
loc_incl.h
loc_time.h
localeconv.c
localmath.h
localtime.c
lock.c
lock.h
log.c
log10.c
longname.c
lrand.c
lsearch.c
main.c
malloc.c
mblen.c
mbstowcs.c
mbtowc.c
mcd.c
memccpy.c
memchr.c
memcmp.c
memcpy.c
memcspn.c
memmove.c
memory.c
memset.c
misc.c
mktime.c
mlf4.c
mlf8.c
mm.h
mnx_eth.c
mount.c
move.c
mproc.h
mq.c
mq.h
mtab.c
mul_ext.c
mvcursor.c
ne2000.c
ne2000.h
newwin.c
ngf4.c
ngf8.c
nlist.c
nrm_ext.c
oneC_sum.c
open.c
options.c
os9.h
osdep_eth.h
overlay.c
param.h
path.c
peekpoke.c
perror.c
pipe.c
popen.c
pow.c
printer.c
printf.c
printk.c
prntscan.c
proc.c
proc.h
protect.c
protect.h
proto.h
ps.c
pty.c
putc.c
putchar.c
putenv.c
putk.c
puts.c
putw.c
qsort.c
raise.c
rand.c
rawfs.c
rawfs.h
rcmd.c
read.c
refresh.c
regexp.c
regsub.c
remove.c
res_comp.c
res_init.c
res_mkquery.c
res_query.c
res_send.c
rewind.c
rindex.c
rs232.c
sb16.h
sb16_dsp.c
sb16_mixer.c
sbf4.c
sbf8.c
scanf.c
sconst.h
scrreg.c
setbuf.c
setlocale.c
setterm.c
setvbuf.c
sft_ext.c
shifter.c
sigmisc.c
signal.c
sin.c
sinh.c
sprintf.c
sqrt.c
sr.c
sr.h
sscanf.c
stadir.c
start.c
stb.c
stderr.c
strcasecmp.c
strcat.c
strchr.c
strcmp.c
strcoll.c
strcpy.c
strcspn.c
strerror.c
strftime.c
strlen.c
strncat.c
strncmp.c
strncpy.c
strpbrk.c
strrchr.c
strspn.c
strstr.c
strtod.c
strtok.c
strtol.c
strxfrm.c
sub_ext.c
super.c
super.h
swab.c
sys_abort.c
sys_copy.c
sys_endsig.c
sys_exec.c
sys_fork.c
sys_fresh.c
sys_getmap.c
sys_getsp.c
sys_kill.c
sys_newmap.c
sys_oldsig.c
sys_sendsig.c
sys_sigret.c
sys_times.c
sys_trace.c
sys_xit.c
syscall.c
sysconf.c
syslib.h
sysos9.c
system.c
sysunix.c
t10a.c
t11a.c
t11b.c
table.c
tabsize.c
tan.c
tanh.c
taskcall.c
tcp.c
tcp.h
tcp_delay.h
tcp_int.h
tcp_lib.c
tcp_recv.c
tcp_send.c
telldir.c
termcap.c
termmisc.c
test1.c
test10.c
test11.c
test12.c
test13.c
test14.c
test15.c
test16.c
test17.c
test18.c
test19.c
test2.c
test20.c
test21.c
test22.c
test23.c
test24.c
test25.c
test26.c
test27.c
test28.c
test29.c
test3.c
test30.c
test31.c
test32.c
test33.c
test34.c
test35.c
test36.c
test37.c
test38.c
test39.c
test4.c
test40.c
test5.c
test6.c
test7.c
test8.c
test9.c
testit.c
time.c
tmpfile.c
tmpnam.c
tolower.c
toupper.c
trace.c
tty.c
tty.h
ttyname.c
ttyslot.c
type.h
tzset.c
udp.c
udp.h
unctrl.c
ungetc.c
unix.h
update.c
utility.c
vfprintf.c
vprintf.c
vscanf.c
vsprintf.c
vsscanf.c
waddch.c
waddstr.c
wbox.c
wclear.c
wclrtobot.c
wclrtoeol.c
wcstombs.c
wctomb.c
wdelch.c
wdeleteln.c
wdeth.c
wdeth.h
werase.c
wgetch.c
wgetstr.c
windel.c
wini.c
winmove.c
winsch.c
winscrol.c
winsertln.c
wintouch.c
write.c
xt_wini.c
yyerror.c
zrf4.c
zrf8.c
zrf_ext.c
